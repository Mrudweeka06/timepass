let joke = document.getElementById("joke");
let show = document.getElementById("show");
let section1 = document.getElementById("section1");
let sectionTodolist = document.getElementById("sectionTodolist");
let sectionTask = document.getElementById("sectionTask");

let jokes = [
  "Why don't scientists trust atoms? Because they make up everything!",
  "I told my wife she was drawing her eyebrows too high. She looked surprised.",
  "Why did the scarecrow win an award? Because he was outstanding in his field!",
  "Why don't skeletons fight each other? They don't have the guts.",
  "I told a joke about a pencil once… but it had no point.",
  "Parallel lines have so much in common. It’s a shame they’ll never meet.",
  "Why can't your nose be 12 inches long? Because then it would be a foot!",
  "I used to play piano by ear, but now I use my hands.",
  "Why did the bicycle fall over? It was two-tired!",
  "Did you hear about the cheese factory explosion? There was nothing left but de-brie.",
  "I asked the librarian if the library had books on paranoia. She whispered, 'They're right behind you.'",
  "I’m reading a book on anti-gravity. It’s impossible to put down!",
  "Why don’t eggs tell jokes? They’d crack each other up.",
  "What do you call fake spaghetti? An impasta!",
  "I couldn’t figure out why the baseball kept getting bigger. Then it hit me.",
  "Want to hear a construction joke? Oh… never mind, I’m still working on it.",
  "Why did the math book look sad? Because it had too many problems.",
  "I would tell you a joke about time travel, but you didn’t like it.",
  "What do you call a factory that makes okay products? A satisfactory.",
  "Why did the coffee file a police report? It got mugged!",
  "I'm on a seafood diet. I see food and I eat it.",
  "Why don't some couples go to the gym? Because some relationships don't work out.",
  "Why did the tomato turn red? Because it saw the salad dressing!",
  "What’s orange and sounds like a parrot? A carrot!",
  "I invented a new word! Plagiarism.",
  "How do cows stay up to date? They read the moos-paper.",
  "Why did the golfer bring two pairs of pants? In case he got a hole in one.",
  "I used to be addicted to soap, but I’m clean now.",
  "What do you call a bear with no teeth? A gummy bear!",
  "Why can’t you give Elsa a balloon? Because she will let it go.",
   "Why don’t skeletons ever go trick or treating? Because they have no body to go with.",
  "I'm afraid for the calendar. Its days are numbered.",
  "What did one wall say to the other? I'll meet you at the corner.",
  "I used to be indecisive. Now I’m not so sure.",
  "Why do seagulls fly over the ocean? Because if they flew over the bay, we’d call them bagels!",
  "I ordered a chicken and an egg from Amazon. I’ll let you know.",
  "I told my computer I needed a break, and now it won’t stop sending me KitKats.",
  "I stayed up all night wondering where the sun went. Then it dawned on me.",
  "How does a penguin build its house? Igloos it together.",
  "Why was the stadium so cool? It was filled with fans.",
  "I made a pencil with two erasers. It was pointless.",
  "What do you call a dog that can do magic? A labracadabrador.",
  "Did you hear about the kidnapping at school? It’s fine, he woke up.",
  "I told my suitcase there would be no vacation this year. Now I’m dealing with emotional baggage.",
  "How do you organize a space party? You planet.",
  "I used to hate facial hair… but then it grew on me.",
  "How do cows do math? They use a cow-culator.",
  "Why was the math teacher suspicious of prime numbers? Because they always had something indivisible going on.",
  "What does a lemon say when it answers the phone? Yellow!",
  "Why can’t your hand be 12 inches long? Because then it’d be a foot!",
  "What do you call a fish wearing a bowtie? Sofishticated.",
  "Why did the cookie go to the hospital? Because it felt crummy.",
  "How does the moon cut his hair? Eclipse it.",
  "What do you call two birds in love? Tweethearts.",
  "Why was Cinderella so bad at soccer? She kept running away from the ball.",
  "What do you call a sleeping bull? A bulldozer.",
  "I would avoid the sushi if I was you. It’s a little fishy.",
  "Why don't oysters share their pearls? Because they're shellfish.",
  "Why don’t crabs give to charity? Because they’re shellfish.",
  "What do you call a pile of cats? A meowtain.",
  "Why did the banana go to the doctor? Because it wasn’t peeling well.",
  "How do you make holy water? You boil the hell out of it.",
  "What did the grape do when he got stepped on? Nothing, he just let out a little wine!",
  "I told my dad to embrace his mistakes. He cried. Then he hugged me.",
  "What do you call a man with a rubber toe? Roberto.",
  "Why did the man run around his bed? Because he was trying to catch up on sleep.",
  "What do you call a snowman with a six-pack? An abdominal snowman.",
  "What’s brown and sticky? A stick.",
  "Why did the mushroom go to the party? Because he was a fungi.",
  "Why don't some couples go to the gym? Because some relationships don't work out.",
  "Why are frogs so happy? Because they eat whatever bugs them.",
  "How do you find Will Smith in the snow? You look for fresh prints.",
  "Why was the broom late? It overswept.",
  "I bought some shoes from a drug dealer. I don’t know what he laced them with, but I was tripping all day.",
  "What did the janitor say when he jumped out of the closet? Supplies!",
  "What’s red and bad for your teeth? A brick.",
  "I used to play sports. Then I realized you can buy trophies. Now I’m good at everything.",
  "Why did the man get hit by a bike every day? Because he was stuck in a vicious cycle.",
  "What do you call an alligator in a vest? An investigator.",
  "I couldn’t figure out how to put my seatbelt on. Then it 'clicked'!",
  "Why don’t scientists trust stairs? Because they’re always up to something.",
  "What did the zero say to the eight? Nice belt!",
  "Why don’t elephants use computers? They're afraid of the mouse.",
  "What do you get when you cross a snowman and a vampire? Frostbite.",
  "What did one ocean say to the other? Nothing, they just waved.",
  "Why do cows have hooves instead of feet? Because they lactose.",
  "What happens when you witness a shipwreck? You let it sink in.",
  "Why did the gym close down? It just didn’t work out.",
  "Why do pancakes always win at baseball? They have the best batter.",
  "Why did the fish blush? Because it saw the ocean’s bottom!",
  "Why don’t skeletons ever go on dates? They don’t have the heart.",
  "I told my friend she drew her eyebrows too high. She seemed surprised.",
  "What did one hat say to the other? Stay here, I'm going on ahead.",
  "Why was the computer cold? It left its Windows open.",
  "I asked my dog what’s two minus two. He said nothing.",
  "What’s a cat’s favorite color? Purr-ple.",
  "Why did the man put his money in the freezer? He wanted cold hard cash.",
  "How do you catch a squirrel? Climb a tree and act like a nut.",
  "Why don’t vampires go to barbecues? They don’t like steak.",
  "What did the frog order at McDonald’s? French flies and a diet Croak.",
  "Why was the baby strawberry crying? Because its parents were in a jam.",
  "Why did the melon jump into the lake? It wanted to be a watermelon.",
  "What did the digital clock say to the grandfather clock? Look, Grandpa, no hands!",
  "Why don’t ants get sick? Because they have tiny ant-bodies.",
  "Why did the turkey join a band? Because it had the drumsticks!",
  "Why did the cow win a medal? For outstanding moo-sicianship.",
  "What’s a ghost’s favorite dessert? I scream!",
  "Why do bees have sticky hair? Because they use honeycombs.",
  "What did the buffalo say to his son when he left for college? Bison.",
  "Why did the teddy bear skip dessert? Because it was already stuffed.",
  "What does a cloud wear under his raincoat? Thunderwear.",
  "Why did the orange stop? It ran out of juice.",
  "Why did the pirate go to school? To improve his arrrrrrrticulation.",
  "Why are elevator jokes so good? They work on many levels.",
  "What do you call a belt made of watches? A waist of time.",
  "Why couldn’t the leopard play hide and seek? Because he was always spotted.",
  "How does a cucumber become a pickle? It goes through a jarring experience.",
  "Why did the coffee go to school? It wanted to be a little smarter.",
  "How do you make a tissue dance? Put a little boogie in it.",
  "Why do ducks make great detectives? They always quack the case.",
  "Why do golfers bring two pairs of pants? In case they get a hole in one.",
  "What kind of tree fits in your hand? A palm tree.",
  "What did the traffic light say to the car? Don’t look! I’m changing.",
  "What kind of shoes do ninjas wear? Sneakers.",
  "Why did the cookie cry? Because his mom was a wafer too long.",
  "How do you stop a bull from charging? Cancel its credit card.",
  "What did the volcano say to the other volcano? I lava you!",
  "Why did the student eat his homework? Because the teacher told him it was a piece of cake.",
  "Why can’t your nose be 12 inches long? Because then it would be a foot!",
  "How do bees get to school? On the buzz!",
  "Why don’t scientists trust stairs? Because they’re always up to something.",
  "What did the zero say to the eight? Nice belt!",
  "Why don’t elephants use computers? They're afraid of the mouse.",
  "What do you get when you cross a snowman and a vampire? Frostbite.",
  "What did one ocean say to the other? Nothing, they just waved.",
  "Why do cows have hooves instead of feet? Because they lactose.",
  "What happens when you witness a shipwreck? You let it sink in.",
  "Why did the gym close down? It just didn’t work out.",
  "Why do pancakes always win at baseball? They have the best batter.",
  "Why did the fish blush? Because it saw the ocean’s bottom!",
  "Why don’t skeletons ever go on dates? They don’t have the heart.",
  "I told my friend she drew her eyebrows too high. She seemed surprised.",
  "What did one hat say to the other? Stay here, I'm going on ahead.",
  "Why was the computer cold? It left its Windows open.",
  "I asked my dog what’s two minus two. He said nothing.",
  "What’s a cat’s favorite color? Purr-ple.",
  "Why did the man put his money in the freezer? He wanted cold hard cash.",
  "How do you catch a squirrel? Climb a tree and act like a nut.",
  "Why don’t vampires go to barbecues? They don’t like steak.",
  "What did the frog order at McDonald’s? French flies and a diet Croak.",
  "Why was the baby strawberry crying? Because its parents were in a jam.",
  "Why did the melon jump into the lake? It wanted to be a watermelon.",
  "What did the digital clock say to the grandfather clock? Look, Grandpa, no hands!",
  "Why don’t ants get sick? Because they have tiny ant-bodies.",
  "Why did the turkey join a band? Because it had the drumsticks!",
  "Why did the cow win a medal? For outstanding moo-sicianship.",
  "What’s a ghost’s favorite dessert? I scream!",
  "Why do bees have sticky hair? Because they use honeycombs.",
  "What did the buffalo say to his son when he left for college? Bison.",
  "Why did the teddy bear skip dessert? Because it was already stuffed.",
  "What does a cloud wear under his raincoat? Thunderwear.",
  "Why did the orange stop? It ran out of juice.",
  "Why did the pirate go to school? To improve his arrrrrrrticulation.",
  "Why are elevator jokes so good? They work on many levels.",
  "What do you call a belt made of watches? A waist of time.",
  "Why couldn’t the leopard play hide and seek? Because he was always spotted.",
  "How does a cucumber become a pickle? It goes through a jarring experience.",
  "Why did the coffee go to school? It wanted to be a little smarter.",
  "How do you make a tissue dance? Put a little boogie in it.",
  "Why do ducks make great detectives? They always quack the case.",
  "Why do golfers bring two pairs of pants? In case they get a hole in one.",
  "What kind of tree fits in your hand? A palm tree.",
  "What did the traffic light say to the car? Don’t look! I’m changing.",
  "What kind of shoes do ninjas wear? Sneakers.",
  "Why did the cookie cry? Because his mom was a wafer too long.",
  "How do you stop a bull from charging? Cancel its credit card.",
  "What did the volcano say to the other volcano? I lava you!",
  "Why did the student eat his homework? Because the teacher told him it was a piece of cake.",
  "Why can’t your nose be 12 inches long? Because then it would be a foot!",
  "How do bees get to school? On the buzz!",
   "What did the policeman say to his belly button? You're under a vest!",
  "Why did the chicken go to the séance? To talk to the other side.",
  "Why don't calculators make good friends? They're always counting on you.",
  "Why did the man sit on the clock? He wanted to be on time!",
  "Why can't you hear a pterodactyl go to the bathroom? Because the 'P' is silent.",
  "Why did the cookie go to school? Because it wanted to be a smart cookie!",
  "How do you make a lemon drop? Just let it fall.",
  "Why do bicycles fall over? Because they're two-tired!",
  "Why was the math book depressed? It had too many problems.",
  "Why did the tomato sit down? Because it was feeling saucy.",
  "What do you get when you cross a snowman and a dog? Frostbite!",
  "Why did the balloon go near the needle? He wanted to pop the question.",
  "What’s green and sings? Elvis Parsley.",
  "Why are spiders so smart? They find everything on the web.",
  "Why did the banana go to the party? Because it was a-peeling.",
  "Why did the picture go to jail? Because it was framed.",
  "How do you make a tissue dance? You put a little boogie in it.",
  "Why was the belt arrested? For holding up a pair of pants!",
  "Why did the girl smear peanut butter on the road? To go with the traffic jam.",
  "What kind of music do mummies listen to? Wrap music.",
  "Why are ghosts bad liars? Because they are too transparent.",
  "Why did the dog sit in the shade? He didn't want to be a hot dog!",
  "What do you call a cow with no legs? Ground beef.",
  "What do you call a sleeping dinosaur? A dino-snore.",
  "Why did the man bring a ladder to the bar? He was climbing the social ladder.",
  "Why don’t you ever see elephants hiding in trees? Because they’re so good at it.",
  "Why did the hipster burn his tongue? He drank his coffee before it was cool.",
  "Why was the grape upset? Because it got stepped on during a dance.",
  "Why don’t oysters donate to charity? Because they’re shellfish.",
  "What did one plate say to the other plate? Lunch is on me!",
  "How does a scientist freshen her breath? With experi-mints.",
  "Why did the boomerang break up with the stick? Because it felt tossed aside.",
  "How do you make a skeleton laugh? Tickle its funny bone.",
  "Why did the banker switch careers? He lost interest.",
  "Why was the spider on the computer? He wanted to check his web mail.",
  "Why did the barber win the race? He knew all the shortcuts.",
  "What do you call a bear caught in the rain? A drizzly bear.",
  "What happens to a frog’s car when it breaks down? It gets toad away.",
  "Why don’t plants like math? It gives them square roots.",
  "Why are eggs so funny? They always crack each other up.",
  "What’s orange and sounds like a parrot? A carrot!",
  "Why do cats always win video games? Because they have nine lives.",
  "What’s the most musical part of a chicken? The drumstick.",
  "Why don’t some fish play piano? Because you can’t tuna fish.",
  "Why was the tree so proud? It was outstanding in its field.",
  "What do you call cheese that isn’t yours? Nacho cheese!",
  "What do you get from a pampered cow? Spoiled milk.",
  "Why did the broom get promoted? It swept the office!",
  "Why couldn’t the bicycle find its way home? It lost its bearings.",
  "What did the cat say when it fell off the table? “Me-ow!”",
  "Why don’t vampires have many friends? Because they are a pain in the neck.",
  "What do you call a broken can opener? A can't opener.",
  "Why don’t koalas count as bears? They don’t have the right koalafications.",
  "How do you catch a whole school of fish? With bookworms.",
  "Why are ghosts terrible at lying? You can see right through them!",
  "What’s a cow’s favorite holiday? Moo Year’s Eve!",
  "How do you stop an astronaut’s baby from crying? You rocket.",
  "Why did the pig play the guitar? Because it was a ham!",
  "How do chickens stay in shape? They egg-cercise.",
  "Why was the corn always nervous? Because it was being stalked.",
  "Why are frogs so happy? Because they eat whatever bugs them.",
  "Why didn’t the skeleton go to the party? He had no body to go with.",
  "What do you call a fish without eyes? Fsh.",
  "Why do vampires always seem sick? Because they’re always coffin.",
  "What did one eye say to the other? Between you and me, something smells.",
  "How do you know if a joke is a dad joke? It becomes apparent.",
  "What kind of key opens a banana? A monkey.",
  "How do snails fight? They slug it out.",
  "What did the judge say to the dentist? Do you swear to pull the tooth, the whole tooth, and nothing but the tooth?",
  "Why did the belt get detention? It couldn't stop waist-ing time.",
  "Why was the drum always tired? It was beat.",
  "What kind of award did the dentist receive? A plaque.",
  "What’s a vampire’s favorite fruit? A blood orange.",
  "What do you call a nervous javelin thrower? Shakespeare.",
  "What’s the best day to go to the beach? SUNday!",
  "How do you turn soup into gold? Add 24 carrots.",
  "Why don’t some couples go to the gym? Because some relationships don’t work out.",
  "What do you call a dinosaur with an extensive vocabulary? A thesaurus.",
  "Why did the duck get a ticket? For quacking the speed limit.",
  "Why did the football coach go to the bank? To get his quarter back.",
  "What do you get when you cross a snake with a pie? A python!",
  "Why couldn’t the leopard play hide and seek? Because he was always spotted.",
  "How do you fix a cracked pumpkin? With a pumpkin patch.",
  "Why did the scarecrow eat a sandwich? Because he was out standing in his field and got hungry.",
  "How do you make a pirate furious? Take away the P!",
  "What do you get when you cross a fridge with a radio? Cool music.",
  "Why do bananas never feel lonely? Because they hang out in bunches.",
  "Why did the ghost go to school? To learn how to be more transparent.",
  "How do you make a goldfish age? Take away its scales!",
  "Why was the robot so bad at soccer? It kept kicking up sparks.",
  "What did the elevator say when it was stressed? I’m under a lot of pressure!",
  "Why don’t zebras make good secret agents? Because they’re always spotted.",
  "What did the owl say when it got a job? Owl do my best!",
  "Why did the crab never share his food? Because he was shellfish.",
  "How do mountains stay warm in winter? Snowcaps.",
  "Why did the bee get married? Because he found his honey.",
  "Why did the leaf go to therapy? It couldn’t turn over a new one.",
  "What do you call a pig who does karate? A pork chop!",
  "How did the rabbit fix his fur? With hare spray.",
  "Why did the skeleton go to school? To brush up on his bones.",
  "Why did the man get fired from the orange juice factory? Lack of concentration.",
  "What do you call an elephant that doesn’t matter? An irrelephant.",
  "Why don’t some couples go to the gym? Because some relationships don’t work out.",
  "How do you make a water bed more bouncy? Add spring water.",
  "Why did the grape stop in the middle of the road? Because it ran out of juice!",
  "Why was the cat sitting on the computer? To keep an eye on the mouse.",
  "What do you get when you cross a vampire with a snowman? Frostbite.",
  "What’s the most detail-oriented ocean? The Pacific.",
  "Why do birds fly to warmer climates in the winter? It’s much easier than walking!",
  "Why was the broom late to work? It swept in.",
  "What do you call a dinosaur who crashes his car? Tyrannosaurus wrecks.",
  "How does the moon cut his hair? Eclipse it.",
  "Why don’t you give Elsa a balloon? Because she’ll let it go.",
  "Why was the calendar so popular? It had a lot of dates.",
  "What’s brown and rhymes with Snoop? Dr. Poop.",
  "Why did the fish cross the road? Because it was hooked.",
  "Why did the student bring a ladder to school? Because he wanted to go to high school.",
  "What kind of tree can fit in your hand? A palm tree.",
  "Why was the potato so quiet? It was feeling a little fried.",
  "Why don’t bakers ever feel fear? They’re always on a roll.",
  "Why was the tennis club so loud? Because it had a lot of racquet.",
  "Why do ducks have feathers? To cover their butt quacks.",
  "Why did the cow sit down at the table? It wanted to eat like a human-bean.",
  "Why are skeletons so calm? Nothing gets under their skin.",
  "What do you call a cow during an earthquake? A milkshake.",
  "What happens if you eat yeast and shoe polish? Every morning you’ll rise and shine.",
  "Why was the ghost such a bad liar? He was too transparent.",
  "Why did the pencil get an award? Because it had a point.",
  "What do you call a sheep with no legs? A cloud.",
  "Why did the man stare at the can of orange juice? Because it said concentrate.",
  "Why was the baby ant confused? All his uncles were ants.",
  "Why are peppers the best at archery? Because they habanero aim.",
  "What do you call an avocado that’s been blessed by a priest? Holy guacamole!",
  "Why do cows wear bells? Because their horns don’t work.",
  "Why don’t sharks like fast food? Because they can’t catch it.",
  "What do you get when you cross a fridge and a radio? Cool music.",
  "Why did the owl say 'hoot'? Because it didn’t know any words.",
  "Why was the belt so good at his job? He kept everything together.",
  "How does a vampire start a letter? Tomb it may concern...",
  "Why did the kid bring a flashlight to lunch? Because he wanted a light snack.",
  "Why did the farmer win an award? Because he was outstanding in his field.",
  "Why do bees hum? Because they don’t know the words.",
  "How did the computer get out of a sticky situation? It used its backspace.",
  "Why couldn’t the pony sing a lullaby? Because it was a little hoarse.",
  "Why did the squirrel bring a suitcase? He was going nuts.",
  "What did the janitor say when he jumped out of the closet? Supplies!",
  "What do you call a dinosaur made of cheese? Gorgonzilla!",
  "What did the candle say to the match? You light up my life.",
  "Why did the mirror go to therapy? It couldn’t reflect on its past.",
  "What’s a skeleton’s favorite instrument? The trom-bone.",
  "What’s a witch’s favorite subject? Spelling.",
  "Why did the robot go on vacation? It needed to recharge.",
  "What do you get when you cross a snake and a pie? A python!",
  "Why did the lion eat the tightrope walker? He wanted a well-balanced meal.",
  "Why did the boy throw butter out the window? He wanted to see a butterfly.",
  "Why did the watch go to school? To learn time management.",
  "Why don’t chickens use social media? Too many pecking orders.",
  "What’s the best way to catch a squirrel? Act like a nut.",
  "Why did the koala get hired? He met the koalafications.",
  "What did one volcano say to the other? I lava you.",
  "What do you call a snowman in July? A puddle.",
  "Why are elephants bad at hiding? Because wherever they go, they leave footprints.",
  "Why did the car apply for a job? It wanted to drive change.",
  "Why are flamingos good at stand-up? Because they do it all on one leg.",
  "What did the waiter say to the foot? 'You’re tipping me off.'",
  "Why do ghosts love elevators? Because it lifts their spirits.",
  "Why can’t a nose be 12 inches long? Because then it’d be a foot.",
  "What did the fish say when he swam into a wall? Dam!",
  "Why did the banana get promoted? He had appeal.",
  "Why don’t jellyfish play tennis? They’re afraid of the net.",
  "Why was the belt acting strange? It was going through a rough patch.",
  "Why do vampires need mouthwash? Because they have bat breath.",
  "Why don’t scientists trust atoms anymore? Because they make up everything.",
  "What’s a pirate’s favorite letter? You’d think it’s R, but it be the C!",
  "Why did the lizard cross the road? To get to the reptile dysfunction clinic.",
  "What do you call an educated tube? A graduated cylinder.",
  "Why did the phone go to therapy? It lost its sense of touch.",
  "What’s a baker’s favorite part of the alphabet? The dough!",
  "Why did the keyboard break up with the mouse? Too many clicks.",
  "Why did the dolphin fail school? Because it blew all its tests.",
  "What’s a sheep’s favorite game? Baaa-dminton.",
  "What do you call a camel with no humps? Humphrey.",
  "Why didn’t the orange finish the race? It ran out of juice.",
  "What’s a vampire’s least favorite food? Steak.",
  "Why did the mushroom get invited to all the parties? He was a fungi.",
  "What did the traffic light say to the car? Don’t look, I’m changing.",
  "Why do ants never get sick? They have tiny ant-bodies.",
  "Why did the music teacher need a ladder? To reach the high notes.",
  "What did the beaver say to the tree? It’s been nice gnawing you.",
  "Why was the light bulb so smart? Because it was bright.",
  "What do you call a lazy kangaroo? A pouch potato.",
  "Why don’t pirates take a bath before they walk the plank? They just wash up on shore.",
  "Why did the jellybean go to school? Because it wanted to be a smartie.",
  "What do you call a shark that’s good at math? A calculator!",
  "What’s a baker’s favorite kind of joke? Something with a twist.",
  "Why did the teddy bear say no to dessert? Because he was stuffed.",
  "Why do cows never have money? Because the farmers milk them dry.",
  "Why did the bee get a promotion? He was buzzworthy!",
  "Why are candles always calm? Because they like to wax philosophical."
];


function jokeButton() {
  let num=Math.ceil(Math.random()*jokes.length-1)
  joke.textContent = jokes[num];
}


// function todolist() {
//   sectionTodolist.textContent = "";


//   let container = document.createElement("div");
//   container.classList.add("container");
//   sectionTodolist.appendChild(container);

//   let row = document.createElement("div");
//   row.classList.add("row");
//   container.appendChild(row);

//   let part1 = document.createElement("div");
//   part1.classList.add("col-12", "col-md-4", "d-none", "d-md-block", "order-2");
//   let image = document.createElement("img");
//   image.setAttribute("src", "https://i.pinimg.com/originals/96/30/32/963032a548b868f7abf2d78c2b14eaa3.gif");
//   part1.appendChild(image);
//   image.classList.add("image5");
//   row.appendChild(part1);

//   let part2 = document.createElement("div");
//   part2.classList.add("col-12", "col-md-8", "order-1");
//   row.appendChild(part2);

//   let h1 = document.createElement("h1");
//   h1.textContent = "To Do's";
//   part2.appendChild(h1);
//   h1.style.textAlign = "center";

//   let h3 = document.createElement("h3");
//   h3.textContent = "Create Task";
//   part2.appendChild(h3);

//   let input = document.createElement("input");
//   input.placeholder = "create something!!";
//   input.classList.add("input");
//   input.type = "text";
//   part2.appendChild(input);

//   let buttonAdd = document.createElement("i");
//   buttonAdd.classList.add("fa-solid", "fa-plus", "ml-2", "add");
//   part2.appendChild(buttonAdd);

//   let box = document.createElement("div");
//   box.classList.add("d-flex", "flex-row");
//   part2.appendChild(box);

//   let store = document.createElement("div");
//   store.classList.add("d-flex", "flex-row");
//   part2.appendChild(store);

//   let mytask = document.createElement("h1");
//   mytask.textContent = "My Tasks";
//   store.appendChild(mytask);

//   let checkicon = document.createElement("i");
//   checkicon.classList.add("fa-solid", "fa-list-check", "mt-4", "ml-2");
//   store.appendChild(checkicon);

//   let save = document.createElement("button");
//   save.classList.add("btn", "btn-secondary", "ml-auto", "save", "mt-3");
//   save.textContent = "Save";
//   box.appendChild(save);

//   function fromLocalStorage() {
//     let x = localStorage.getItem("arr2");
//     let parsed = JSON.parse(x);
//     if (parsed === null) {
//       return [];
//     } else {
//       return parsed;
//     }
//   }

//   let arr = fromLocalStorage();

//   function deleteTask(itemid) {
//     let item = document.getElementById(itemid);
//     if (item) {
//       part2.removeChild(item);
//     }
//     let index = arr.findIndex(a => "item" + a.no === itemid);
//     if (index !== -1) {
//       arr.splice(index, 1);
//     }
//   }

//   function check(taskNo) {
//   let label = document.getElementById("label" + taskNo);
//   label.classList.toggle("checked");

//   let index = arr.findIndex(x => x.no === taskNo);
//   if (index !== -1) {
//     arr[index].ischecked = !arr[index].ischecked;
    
//     let tickid="tick"+taskNo;
//     let tick2id ="tick2"+taskNo;

//     let tick=document.getElementById(tickid);
//     let tick2 =document.getElementById(tick2id);

//     let para = document.getElementById("para" + taskNo);

//      tick.classList.remove("d-none");
//     tick2.classList.remove("d-none");
//     if (arr[index].ischecked) {
//        tick.style.color="green";
//        tick2.classList.add("d-none");
//       para.textContent = "Completed";
//       para.style.color = "green";
//     } else {
//         tick2.style.color="orange"
//         tick.classList.add("d-none");
//       para.textContent = "In Progress";
//       para.style.color = "orange";
//     }
//   }
// }


//   function createTask(x) {
//     let cont = document.createElement("div");
//     cont.classList.add("back1", "d-flex", "flex-row");
//     cont.id = "item" + x.no;
//     part2.appendChild(cont);

//     let inputCheck = document.createElement("input");
//     inputCheck.id = "check" + x.no;
//     inputCheck.type = "checkbox";
//     inputCheck.classList.add("ml-3");
//     if (x.ischecked === true) {
//       inputCheck.checked = true;
//     }
//     cont.appendChild(inputCheck);

//     let container2 = document.createElement("div");
//     container2.classList.add("back2", "d-flex", "flex-row", "ml-3", "shadow");
//     cont.appendChild(container2);

//     let label = document.createElement("label");
//     label.setAttribute("for", inputCheck.id);
//     label.id = "label" + x.no;
//     label.textContent = x.name;
   
//     container2.appendChild(label);

//     let box2=document.createElement("div");
//     box2.classList.add("d-flex","flex-row","ml-auto");
//     container2.appendChild(box2);

//     let tick =document.createElement("i");
//     tick.id="tick"+x.no;
//     let tickid =tick.id;
//     tick.classList.add("fa-solid","fa-circle-check","mr-1","mt-1");
//     tick.style.color="green";
//   box2.appendChild(tick);

//     let tick2 =document.createElement("i");
//     tick2.id="tick2"+x.no;
//     let tick2id=tick2.id;
//     tick2.classList.add("fa-solid","fa-hourglass-half","mr-1","mt-1");
//     tick2.style.color="green";
//   box2.appendChild(tick2);

//     let para=document.createElement("p");
//     para.textContent="";
//     para.id="para"+x.no;
//     let paraid =para.id
//     para.classList.add("ml","mr-3");
//     box2.appendChild(para);

//      if (x.ischecked === true) {
//       label.classList.add("checked");
//     }
//     if(x.ischecked==true){
//        tick.style.color="green"
//         tick2.classList.add("d-none")
//         para.textContent="Completed";
//         para.style.color="green";
//        }
//        else{
//         tick2.style.color="orange"
//         tick.classList.add("d-none");
//         para.textContent="In Progress";
//         para.style.color="orange";
//        }
    

//     let del = document.createElement("i");
//     del.classList.add("fa-solid", "fa-trash", "delete", "ml-auto", "mr-2", "mt-1");
//     box2.appendChild(del);

//     del.onclick = function () {
//       deleteTask(cont.id);
//     };

//     inputCheck.onclick = function () {
//       check(x.no);
//     };
//   }

//   for (let x of arr) {
//     createTask(x);
//   }

//   let count = arr.length;

//   buttonAdd.onclick = function () {
//     let text = input.value.trim();
//     if (text === "") return;

//     count = count + 1;
//     let newobject = {
//       name: text,
//       no: count,
//       ischecked: false,
//     };
//     arr.push(newobject);
//     createTask(newobject);
//     input.value = "";
//   };

//   save.onclick = function () {
//     localStorage.setItem("arr2", JSON.stringify(arr));
//     alert("Tasks saved!");
//   };
// }

function todolist() {
  sectionTodolist.textContent = "";

  let container = document.createElement("div");
  container.classList.add("container");
  sectionTodolist.appendChild(container);

  let row = document.createElement("div");
  row.classList.add("row");
  container.appendChild(row);

  let part1 = document.createElement("div");
  part1.classList.add("col-12", "col-md-4", "d-none", "d-md-block", "order-2");
  let image = document.createElement("img");
  image.setAttribute("src", "https://i.pinimg.com/originals/96/30/32/963032a548b868f7abf2d78c2b14eaa3.gif");
  part1.appendChild(image);
  image.classList.add("image5");
  row.appendChild(part1);

  let part2 = document.createElement("div");
  part2.classList.add("col-12", "col-md-8", "order-1");
  row.appendChild(part2);

  // BACK BUTTON
  let backBtn = document.createElement("p");
  backBtn.classList.add("fa-solid","fa-backward","back","mt-3","point");
  backBtn.setAttribute("onclick","display('section1'); goBackToList()")
  part2.appendChild(backBtn);

  let h1 = document.createElement("h1");
  h1.textContent = "To Do's";
  part2.appendChild(h1);
  h1.style.textAlign = "center";

  let h3 = document.createElement("h3");
  h3.textContent = "Create Task";
  part2.appendChild(h3);

  let input = document.createElement("input");
  input.placeholder = "create something!!";
  input.classList.add("input");
  input.type = "text";
  part2.appendChild(input);

  let buttonAdd = document.createElement("i");
  buttonAdd.classList.add("fa-solid", "fa-plus", "ml-2", "add");
  part2.appendChild(buttonAdd);

  let box = document.createElement("div");
  box.classList.add("d-flex", "flex-row");
  part2.appendChild(box);

  let store = document.createElement("div");
  store.classList.add("d-flex", "flex-row");
  part2.appendChild(store);

  let mytask = document.createElement("h1");
  mytask.textContent = "My Tasks";
  store.appendChild(mytask);

  let checkicon = document.createElement("i");
  checkicon.classList.add("fa-solid", "fa-list-check", "mt-4", "ml-2");
  store.appendChild(checkicon);

  let save = document.createElement("button");
  save.classList.add("btn", "btn-secondary", "ml-auto", "save", "mt-3");
  save.textContent = "Save";
  box.appendChild(save);

  function fromLocalStorage() {
    let x = localStorage.getItem("arr2");
    let parsed = JSON.parse(x);
    if (parsed === null) {
      return [];
    } else {
      return parsed;
    }
  }

  let arr = fromLocalStorage();

  function deleteTask(itemid) {
    let item = document.getElementById(itemid);
    if (item) {
      part2.removeChild(item);
    }
    let index = arr.findIndex(a => "item" + a.no === itemid);
    if (index !== -1) {
      arr.splice(index, 1);
    }
  }

  

  function check(taskNo) {
    let label = document.getElementById("label" + taskNo);
    label.classList.toggle("checked");

    let index = arr.findIndex(x => x.no === taskNo);
    if (index !== -1) {
      arr[index].ischecked = !arr[index].ischecked;

      let tickid = "tick" + taskNo;
      let tick2id = "tick2" + taskNo;

      let tick = document.getElementById(tickid);
      let tick2 = document.getElementById(tick2id);

      let para = document.getElementById("para" + taskNo);

      tick.classList.remove("d-none");
      tick2.classList.remove("d-none");
      if (arr[index].ischecked) {
        tick.style.color = "green";
        tick2.classList.add("d-none");
        para.textContent = "Completed";
        para.style.color = "green";
      } else {
        tick2.style.color = "orange";
        tick.classList.add("d-none");
        para.textContent = "In Progress";
        para.style.color = "orange";
      }
    }
  }


  function createTask(x) {
  let cont = document.createElement("div");
  cont.classList.add("back1", "d-flex", "flex-row");
  cont.id = "item" + x.no;
  part2.appendChild(cont);

  let inputCheck = document.createElement("input");
  inputCheck.id = "check" + x.no;
  inputCheck.type = "checkbox";
  inputCheck.classList.add("ml-3");
  if (x.ischecked) inputCheck.checked = true;
  cont.appendChild(inputCheck);

  let container2 = document.createElement("div");
  container2.classList.add("back2", "shadow", "container","task-box");
  
  cont.appendChild(container2);

  let row = document.createElement("div");
  row.classList.add("row");
  container2.appendChild(row);

  let labelCol = document.createElement("div");
  labelCol.classList.add("col-12", "col-md-8", "d-flex", "align-items-center");
  row.appendChild(labelCol);

  let label = document.createElement("label");
  label.setAttribute("for", inputCheck.id);
  label.id = "label" + x.no;
  label.textContent = x.name;
  labelCol.appendChild(label);

  let boxCol = document.createElement("div");
  boxCol.classList.add("col-12", "col-md-4", "d-flex", "justify-content-end", "align-items-center");
  row.appendChild(boxCol);

  let para = document.createElement("p");
  para.id = "para" + x.no;
  para.classList.add("mb-0", "mr-2");
  boxCol.appendChild(para);

  let tick = document.createElement("i");
  tick.id = "tick" + x.no;
  tick.classList.add("fa-solid", "fa-circle-check", "mr-1");
  boxCol.appendChild(tick);

  let tick2 = document.createElement("i");
  tick2.id = "tick2" + x.no;
  tick2.classList.add("fa-solid", "fa-hourglass-half", "mr-1");
  boxCol.appendChild(tick2);

  let del = document.createElement("i");
  del.classList.add("fa-solid", "fa-trash", "delete", "ml-2");
  boxCol.appendChild(del);

  if (x.ischecked) {
    label.classList.add("checked");
    tick.style.color = "green";
    tick2.classList.add("d-none");
    para.textContent = "Completed";
    para.style.color = "green";
  } else {
    tick2.style.color = "orange";
    tick.classList.add("d-none");
    para.textContent = "In Progress";
    para.style.color = "orange";
  }

  del.onclick = () => deleteTask(cont.id);
  inputCheck.onclick = () => check(x.no);
}


  for (let x of arr) {
    createTask(x);
  }

  let count = arr.length;

  buttonAdd.onclick = function () {
    let text = input.value.trim();
    if (text === "") return;

    count = count + 1;
    let newobject = {
      name: text,
      no: count,
      ischecked: false,
    };
    arr.push(newobject);
    createTask(newobject);
    input.value = "";
  };

  save.onclick = function () {
    localStorage.setItem("arr2", JSON.stringify(arr));
    alert("Tasks saved!");
  };
}

let stopWatch =document.getElementById("sectionStopWatchView");
let head1 =document.getElementById("head1");
let head2=document.getElementById("head2");
let head3 =document.getElementById("head3");

let id="";
let b =0;
let sec=0;
let min=0;

function start(){
  let stop=document.getElementById("stop");
  stop.disabled=true;
  id= setInterval(function(){
     b=b+1;
     if(b<=9){
      head3.textContent="0"+b
     }
     else{
      head3.textContent=b;
     }
    if(b==98){
      sec=sec+1;
      b=0;
      if(sec<=9){
         head2.textContent="0"+sec;
      }
      else{
        head2.textContent=sec;
      }
      if(sec==59){
        min=min+1;
        sec=0;
        if(min<=9){
         head1.textContent="0"+min;
      }
      else{
        head1.textContent=min;
      }

      }
      
    }
    
   
  },10)
}
 
function stop(){
  let stop=document.getElementById("stop");
  stop.disabled=false;
  clearInterval(id);
  stop.textContent="Resume"
  stop.style.backgroundColor="blue"

}
function restart(){
  let stop=document.getElementById("stop");
  head1.textContent="00";
  head2.textContent="00";
  head3.textContent="00";
  stop.textContent="Start";
  b=0;
  sec=0;
  min=0;
  stop.style.backgroundColor="green"
}
let diaryArr=[];



function diaryWritingSave(){
let diaryRow =document.getElementById("diaryRow");
diaryRow.classList.add("col-12","col-md-6");
let diaryCard =document.createElement("div");
diaryRow.appendChild(diaryCard);
let highlight1 =document.createElement("h4");
diaryCard.appendChild(highlight);
highlight1.textContent="high"
let date1 =document.createElement("p");
diaryCard.appendChild(date);
let mood1=document.createElement("p");
diaryCard.appendChild(mood);
let greet1 =document.createElement("p");
diaryCard.appendChild(greet);
let body1 =document.createElement("p");
diaryCard.appendChild(body);
let name1=document.createElement("p");
diaryCard.appendChild(name);

 let highlight=document.getElementById("highlight").value;
let name=document.getElementById("name").value;
let date =document.getElementById("date").value;
let mood =document.getElementById("mood").value;
let body=document.getElementById("body");

highlight1.textContent=highlight;

}

//typing1

let typingTime1 = document.getElementById("typingTime1");
let time1 = 0;
let typingAns1 = document.getElementById("typingAns1");
let typingQue1 = document.getElementById("typingQue1");
let typingStatus1 = document.getElementById("typingStatus1");

let sectionTypingTest1View=document.getElementById("sectionTypingTest1View");

let typingHide1 = document.getElementById("typingHide1");
let typingShow1 = document.getElementById("typingShow1");
let typingId1 = "";
let typingArr1 = [
  "The quick brown fox jumps over the lazy dog and runs into the forest where adventure and mystery wait behind every tree and rock.",
  "Learning JavaScript helps build powerful websites with interactivity and logic, making dynamic web applications more fun, responsive, and user-friendly for all kinds of users.",
  "Typing fast is a useful skill in today’s digital world where communication, coding, and documentation depend heavily on speed and accuracy every single day.",
  "Each day you spend improving your typing speed will pay off in productivity, efficiency, and confidence across many digital platforms, tools, and communication systems.",
  "Writing stories is an art that connects imagination and language, letting you create entire worlds with characters, events, and lessons to inspire and entertain readers.",
  "Practicing code every day builds logic, discipline, and memory, all while improving your problem-solving abilities which are essential in software engineering and development careers.",
  "Time management means focusing on goals, avoiding distractions, and completing tasks with purpose to maximize the value of each moment and live intentionally.",
  "Every programming language has its syntax and style, but learning one deeply makes learning others easier by building foundational logic and thinking patterns.",
  "Hard work with patience and consistency beats talent when talent fails to work hard—success comes to those who never stop trying and learning from failures.",
  "Success isn’t about perfection; it’s about progress. Small steps taken daily lead to big changes in skills, mindset, and confidence in the long run.",
  "A great day starts with a positive thought, some planning, and a mindset ready to learn, grow, and adapt no matter what comes.",
  "Using the console in JavaScript lets you debug and log output to understand how your code behaves and track errors or unexpected behavior during execution.",
  "Reading books expands your vocabulary, imagination, and comprehension while helping reduce stress, improve memory, and provide entertainment or knowledge at the same time.",
  "HTML builds the structure, CSS adds style, and JavaScript brings functionality—together they create the modern interactive websites we use every single day.",
  "Creativity is not limited to art; it applies to problem-solving, coding, design, and writing—wherever you find unique approaches and new ways to improve things.",
  "Being consistent with practice always beats intense short bursts of effort. Long-term learning and mastery require steady, deliberate progress through challenges and feedback.",
  "Your mindset decides your future. Stay curious, stay humble, and never stop growing—every skill can be learned with time, focus, and the right method.",
  "Coding isn't just about syntax; it's about solving problems, thinking clearly, and building useful tools to help others or express your creative ideas.",
  "Life is short, so make it meaningful. Use your time wisely, explore your passions, connect deeply, and never be afraid to try something new.",
  "JavaScript functions can return values, accept arguments, and be passed around like variables. They're powerful tools in building reusable and modular code logic.",
  "Failure is not the end; it’s feedback. Each mistake teaches something. Embrace failure, learn from it, and keep pushing forward with more clarity and strength.",
  "Learning new things trains your brain, keeps your curiosity alive, and opens doors to opportunities you never imagined possible before you took the first step.",
  "Consistency is the key to growth. Whether it's typing, coding, or writing, small daily efforts will compound into remarkable progress over weeks and months.",
  "In coding, practice makes perfect. Break problems into smaller pieces, test your assumptions, and never skip debugging—it’s where you really understand what went wrong.",
  "The internet is full of resources—free tutorials, forums, and challenges. Use them well, stay focused, and build something that makes you proud and inspired.",
  "Discipline beats motivation. Build habits around learning and practice, so even on low-energy days, you still move closer to your goals and aspirations.",
  "A clear goal gives direction. Knowing what you want helps filter distractions, prioritize actions, and track progress with purpose and focus every single day.",
  "Sometimes progress is invisible, but it’s happening. Every keystroke, every line of code, every sentence you write builds toward mastery—so trust the process.",
  "Debugging teaches patience. You’ll face bugs that make no sense, but staying calm, testing parts, and reading errors carefully usually leads to the fix.",
  "Your skills grow when you step outside your comfort zone. Whether it’s a harder challenge or a new topic, discomfort leads to transformation.",
  "Imposter syndrome affects everyone. Just remember, even experts started as beginners. The key is persistence and a willingness to keep learning despite doubts.",
  "Set small goals. Complete them. Celebrate wins. Then level up. This loop keeps motivation high and builds momentum for bigger achievements down the road.",
  "Success leaves clues. Follow the habits of those ahead of you—what they read, how they think, how they work—and apply those patterns yourself.",
  "Coding challenges like LeetCode sharpen problem-solving. Don’t chase stars—chase understanding. Discuss with peers, revise logic, and grow from every attempt, whether right or wrong.",
  "Even ten minutes of focused learning each day makes a difference over time. Consistency, not duration, often matters more in building new skills.",
  "Confidence is earned by doing. Keep showing up. Keep trying. Eventually what once scared you becomes something you do with ease and grace.",
  "Write clean code—not just for machines, but for future humans who will read it, including you. Clarity saves time, confusion, and frustration later.",
  "Use comments to explain why something’s done, not what’s done. Good code should be self-explanatory, but reasons need context and thoughtful annotations.",
  "Real learning begins when you build something on your own. Projects let you apply knowledge, face unknowns, and find creative solutions to real problems.",
  "Time is limited. Spend it wisely on things that align with your future goals, values, and passions—your future self will thank you for it.",
  "Make backups often. Whether it’s code, notes, or designs, nothing hurts more than losing hours of work due to a single preventable mistake.",
  "Reading documentation is underrated. It’s the most direct source of truth about tools and libraries. Learn to navigate it confidently—it’s a core developer skill.",
  "Small bugs can cause big problems. Don’t ignore warnings or errors—treat them as clues pointing toward something deeper that needs attention and understanding.",
  "Don’t compare your progress to others. Everyone learns at their own pace. Focus on getting better than you were yesterday—that’s the only race that matters.",
  "Keep a journal or log of what you learn daily. Reviewing it later reinforces memory, shows growth, and keeps your learning journey on track.",
  "The magic of creativity often comes after boredom. Let your mind wander, stay away from distractions, and ideas will come from unexpected corners.",
  "Focus deeply. Turn off notifications, block distractions, and give your full attention to one task. It’s the fastest way to learn and make progress.",
  "Learning is never linear. There will be setbacks, confusion, and breakthroughs. Stick with it, ask questions, and let your curiosity guide the way.",
  "Push your limits. Choose challenges slightly beyond your current level. That’s where real growth lies—between comfort and struggle, where your brain is fully engaged.",
  "Celebrate progress often. Every small win, every bug fixed, every line written is proof that you’re growing. Don’t wait for perfection to feel proud.",
  "Coding every day strengthens your problem-solving skills, builds mental discipline, and makes you comfortable turning ideas into working digital tools people can actually use.",
  "Music can boost focus during deep work, especially instrumentals or ambient sounds that don't distract but help maintain a steady rhythm and concentration flow.",
  "Failure isn’t the opposite of success—it’s part of it. Every mistake is a lesson disguised as frustration, preparing you for something better next time.",
  "When you feel overwhelmed, break the problem down into smaller steps. Solving tiny pieces makes big challenges feel easier, more manageable, and within your control.",
  "Reading other people’s code helps you understand different styles, structures, and problem-solving techniques—an essential practice for becoming a better, more flexible developer over time.",
  "Every project you build, no matter how small, is a portfolio piece that shows your initiative, creativity, and growing ability to solve real-world problems.",
  "Patience is a superpower in learning. The results aren’t always instant, but they compound. Stay calm, keep going, and growth will quietly catch up.",
  "You won’t always feel motivated, but habits can carry you. Build routines that support your learning goals and you'll progress even when inspiration fades.",
  "Great design is invisible. It helps users without calling attention to itself. Simplicity, clarity, and purpose create experiences that feel natural and intuitive.",
  "Asking good questions is more valuable than always knowing the answer. Curiosity leads to better solutions, deeper learning, and richer conversations with mentors or peers.",
  "Write code for the next person who’ll read it, even if that person is you. Clean, readable code saves time, stress, and frustration later.",
  "Never underestimate the value of rest. Breaks reset your brain, increase creativity, and prevent burnout—sometimes stepping away is the best way to solve something.",
  "Progress isn’t always linear. Some days you leap ahead, others you stall. Trust the journey, stay consistent, and celebrate every step, no matter how small.",
  "Focus on one thing at a time. Multitasking breaks concentration. Deep focus leads to faster learning, better memory, and higher-quality work in everything you do.",
  "Learn by doing. Tutorials are helpful, but nothing beats the growth that comes from struggling through building something yourself, even if it’s messy or imperfect.",
  "The best ideas often come when you're relaxed. Go for a walk, take a shower, or daydream—your brain keeps working in the background silently.",
  "Celebrate progress more than perfection. Getting better is the goal. Every bug fixed, concept understood, or project finished proves you're moving in the right direction.",
  "Learning to type faster improves coding speed, note-taking, writing, and productivity. It’s a simple skill with powerful impact across every area of your digital life.",
  "Stay curious, not judgmental. Curiosity drives learning, creativity, and understanding. Judgement blocks growth and shuts down opportunities before they’ve had the chance to develop fully.",
  "To really learn something, teach it. Explaining ideas to others exposes gaps in your understanding and helps reinforce knowledge through clear communication and repetition.",
  "Keep your digital life organized. Clear file names, structured folders, and proper backups reduce stress, prevent data loss, and save hours when projects get complex.",
  "Learn to enjoy the grind. Mastery lives in repetition—typing, coding, designing, writing. Each rep, though boring, builds strength that makes everything easier later.",
  "Distractions steal your time, not just your attention. Protect your focus like it’s money. What you do with your minutes shapes your entire day.",
  "You don’t need fancy tools. A basic text editor, browser, and your brain are enough to build amazing things. Simplicity often unlocks your best work.",
  "Practice speaking about your work. Communicating ideas, explaining decisions, and answering questions are skills that matter just as much as coding in real-world careers.",
  "The world needs more builders, not just consumers. Make things. Try. Fail. Improve. Your creations matter more than your fears or the opinions of others.",
  "Tracking your progress helps you stay motivated. Whether it’s a notebook, spreadsheet, or app, seeing the journey unfold gives clarity and boosts momentum.",
  "Don’t be afraid to delete code. Cleanups are part of the process. Removing clutter makes room for better, more efficient, and understandable solutions.",
  "Use version control even for small projects. Git helps you manage changes, fix mistakes, and collaborate. It’s a safety net you’ll appreciate sooner or later.",
  "Stay humble. There’s always something new to learn. Even experts forget things or Google syntax. What matters is your willingness to keep growing, not knowing everything.",
  "Make learning fun. Turn challenges into games, time yourself, or compete with friends. Enjoying the process makes you more likely to stick with it.",
  "Great developers aren’t born; they’re built. It’s not about IQ, it’s about perseverance, curiosity, and showing up every day ready to get a little better.",
  "Learning happens fastest when you make mistakes. Break things, experiment, and recover. Each bug teaches something deeper than passive reading or memorizing ever could.",
  "Clarity is kindness—in code, design, and communication. Aim to be understood. Make things simple, not because people are dumb, but because everyone’s busy and distracted.",
  "You don’t need permission to start. Build that app, write that blog, launch that idea. Action beats overthinking. Just begin—everything else will fall into place.",
  "The best code is the one that solves the problem. Don’t chase perfection. Make it work, then make it better, and refactor when needed.",
  "Design your environment for success. Remove distractions, organize tools, and keep your goals visible—your surroundings influence your habits more than you probably realize.",
  "Every expert was once a beginner. Don’t compare your Chapter 1 to someone else’s Chapter 20. Stay focused on your unique path forward.",
  "Listening is a superpower. In teams, meetings, and mentorship, those who listen well learn faster, connect better, and earn more respect from those around them.",
  "Even boring practice matters. Repetition builds automaticity. What’s hard today becomes easy tomorrow when you do it enough without skipping the fundamentals.",
  "Sometimes the answer isn’t in a tutorial—it’s in trying. Experimentation teaches you what works, what doesn’t, and what to avoid next time.",
  "Keep learning outside the screen. Books, conversations, and analog thinking give you new perspectives and insights you won’t find in tutorials or blog posts.",
  "Use your hands and brain together. Typing, sketching, and speaking ideas out loud helps you think more clearly and process concepts in memorable ways.",
  "Don’t memorize—understand. Know *why* something works. When you grasp the reasons, you can apply the knowledge flexibly across tools, problems, and situations.",
  "Celebrate others. Collaboration and encouragement build community. Helping one another speeds up learning and makes the journey more fun and sustainable over time.",
  "Track your wins. Whether it’s fixing a bug, understanding recursion, or completing a project—writing them down reminds you how far you’ve come already.",
  "Use breaks to breathe, move, or reflect. A short walk or stretch can restore your energy and reset your thinking when you’re stuck or frustrated.",
  "Curiosity beats confidence. Instead of pretending to know everything, ask more questions. Every great developer started with ‘I don’t know, but I’ll find out.’",
  "Perfection is a trap. Launch messy. Learn fast. Fix what matters. Real growth happens in motion, not in overthinking or waiting for the perfect moment.",
  "When learning to code, the key is patience, practice, and problem-solving. Focus on understanding logic before rushing into writing complex programs or applications.",
  "Every expert was once a beginner who stayed committed to learning, even when progress felt slow and motivation disappeared after facing tough challenges repeatedly.",
  "The best developers ask questions, seek help, and experiment with new ideas without fear of failure or judgment from others in the tech community.",
  "Morning routines help structure the day, giving your brain clarity and your body momentum to carry productive habits throughout work, learning, and relaxation time.",
  "Great products are built by understanding user needs, solving real problems, and designing interfaces that feel simple, intuitive, and delightful to interact with daily.",
  "Practice typing daily with meaningful content to improve both speed and retention. Don’t just aim for speed; aim for accuracy and long-term habit building.",
  "Creativity isn't random. It often comes after deep work, curiosity, and connecting ideas from different places into something new, unique, and practically valuable.",
  "Organizing your tasks in a to-do list keeps your brain focused, reduces stress, and ensures that nothing important slips through the cracks unintentionally.",
  "Your digital presence matters. From LinkedIn profiles to GitHub repositories, everything you share should reflect professionalism, consistency, and the skills you’ve worked hard to build.",
  "Solve real-world problems with your code to feel the impact. Theory is important, but practical application brings learning to life in unexpected ways.",
  "The best learning happens when you're challenged just outside your comfort zone. That stretch forces your brain to adapt, rethink, and grow stronger intellectually.",
  "Reading other people’s code is one of the fastest ways to learn best practices, naming styles, architecture patterns, and efficient logic you can reuse.",
  "Sleep well to retain memory and recharge your mind. You can’t pour from an empty cup—your brain needs rest to function at peak levels.",
  "One great mentor can change your journey. Look for people who uplift, guide, and correct you honestly—and be willing to do the same someday.",
  "Break large goals into small steps. Then focus only on the next step. This makes overwhelming challenges feel manageable and progress happen consistently each day.",
  "Challenge yourself to explain difficult concepts in simple words. If you can’t teach it clearly, you probably don’t understand it deeply enough yet.",
  "Automation is powerful. Learn to build scripts that save you time. Repetition is a sign that your task can probably be automated efficiently.",
  "Open source contribution is a valuable way to grow skills, build credibility, and collaborate with developers worldwide while improving software used by thousands.",
  "Start small but think big. Even a basic project can evolve into something meaningful if nurtured with care, feedback, and continual development.",
  "Build habits, not just goals. Habits keep you going when motivation fades. They’re the systems behind successful people and consistent long-term achievement.",
  "Celebrate effort, not just results. The journey, the learning curve, the failures—they all matter more than any single outcome or milestone along the way.",
  "The tech world evolves fast. Stay curious, keep learning, and never assume you’re done growing—there’s always something new to discover, try, or improve.",
  "Keyboard shortcuts can save hours every week. Learn them for your code editor, browser, and system—they’re small upgrades with huge long-term impact.",
  "Even if your idea seems small, if it solves someone’s pain point, it’s valuable. Great solutions often start with simple, overlooked frustrations.",
  "Don’t wait to feel ready. Action creates clarity. Start messy, learn through doing, and improve as you go—momentum is more important than perfection.",
  "Being stuck means you're learning. Don’t fear bugs or errors—they're feedback pointing toward gaps in your understanding that need attention and improvement.",
  "Everyone learns differently. Find the style that works for you—videos, books, projects, peer discussion—and commit fully to that method with discipline and patience.",
  "Version control is non-negotiable in software development. Learn Git, write clear commit messages, and treat your codebase like a collaborative, living document.",
  "Use pseudocode to break down logic before diving into syntax. Thinking in plain language often reveals problems early and keeps your solution cleaner.",
  "Prioritize deep work sessions—uninterrupted, focused time without distractions. This is when real progress happens, not during scattered multitasking across many tabs and tasks.",
  "Embrace boredom sometimes. Quiet moments often spark creativity, new insights, or mental clarity that gets lost when you're always chasing input and stimulation.",
  "Your project portfolio should tell a story. It’s not about quantity but quality—show who you are through thoughtful design, documentation, and technical execution.",
  "Ask for feedback early. It’s easier to improve and redirect a small effort than to rework something large that never matched the user’s needs.",
  "Design before you build. Wireframes, mockups, and flow diagrams make coding smoother by clarifying the structure, logic, and experience before implementation begins.",
  "Typing practice trains your brain and fingers to work together, increasing fluency in coding, writing, and digital communication in both speed and clarity.",
  "Set weekly learning themes—one week for arrays, another for APIs. Focus builds mastery faster than scattered attempts at learning everything at once.",
  "The hardest bug is often a missing semicolon, a typo, or a case mismatch. Never underestimate the power of reading your code carefully.",
  "Focus on value, not just tools. Don’t chase frameworks unless they help solve real problems or improve how you build and ship your ideas.",
  "A clean workspace leads to a clear mind. Tidy your digital and physical space before deep work to boost focus and productivity significantly.",
  "Let your failures fuel your fire. What went wrong today becomes your story of strength tomorrow, as long as you reflect and adjust wisely.",
  "Write test cases for your code. It may feel slow initially, but it catches problems early and builds trust in your system over time.",
  "Stay hungry for knowledge, not just recognition. Awards fade, but deep understanding and skill open doors forever in your learning and career journey.",
  "Soft skills matter. Communication, empathy, and teamwork often make the difference between a good developer and a great one who leads and inspires.",
  "Learning to learn is the ultimate superpower. Mastering that will let you pick up any skill, any time, and adapt to any future change.",
  "The more you code, the better you think. Each challenge forces you to analyze, adapt, and build clearer, sharper logic in your everyday thinking.",
  "Always read the error message. It’s not your enemy—it’s your guide. Learn to interpret it instead of fearing or ignoring what it says.",
  "Success isn’t found in the future—it’s built in your habits today. If you act like the person you want to become, you’ll get there.",
  "Find joy in the process. Progress feels better when you appreciate the journey, not just the goal. Keep learning, building, and sharing every step."

];

let typingRandom1 =0;
function buttonTyping1() {
  sectionTypingTest1View.style.backgroundImage="url('https://img.freepik.com/premium-photo/white-background-with-light-it-word-light-bottom-right_689904-136099.jpg')"
  sectionTypingTest1View.style.backgroundSize="cover";
  sectionTypingTest1View.style.minHeight="100vh";
  typingHide1.classList.add("d-none");

  typingShow1.classList.remove("d-none");
  let typingRandom1 =Math.ceil(Math.random()*typingArr1.length);
  typingShow1.classList.add("d-block");
  typingQue1.textContent=typingArr1[typingRandom1];

  typingId1 = setInterval(function () {
    time1 = time1 + 1;
    if (time1 <= 9) {
      typingTime1.textContent = "0" + time1;
    } else {
      typingTime1.textContent = time1;
    }
  }, 1000);
}



let typingBack1 = document.getElementById("typingBack1");
let typingHome1 = document.getElementById("typingHome1");


typingBack1.onclick = function () {
  clearInterval(typingId1);
  sectionTypingTest1View.style.backgroundImage="url('https://www.shutterstock.com/image-photo/abstract-background-polygons-on-white-600nw-463916900.jpg')"
  sectionTypingTest1View.style.backgroundSize="cover";
  sectionTypingTest1View.style.minHeight="100vh";
  time1 = 0;
  typingTime1.textContent = "00";
  typingAns1.value = "";
   let typingRandom1 =Math.ceil(Math.random()*typingArr1.length);
  typingShow1.classList.add("d-block");
  typingQue1.textContent=typingArr1[typingRandom1];
  typingStatus1.textContent = "";
  const typingBro1 = document.getElementById("typingBro1");
  if (typingBro1) typingBro1.remove();
  typingHide1.classList.remove("d-none");
  typingHide1.classList.add("d-block");
  typingShow1.classList.remove("d-block");
  typingShow1.classList.add("d-none");
};

typingHome1.onclick = function () {
  clearInterval(typingId1);
  time1 = 0;
  typingTime1.textContent = "00";
  typingAns1.value = "";
  typingStatus1.textContent = "";
   let typingRandom1 =Math.ceil(Math.random()*typingArr1.length);
  typingShow1.classList.add("d-block");
  typingQue1.textContent=typingArr1[typingRandom1];
  const typingBro1 = document.getElementById("typingBro1");
  if (typingBro1) typingBro1.remove();
  typingHide1.classList.remove("d-none");
  typingHide1.classList.add("d-block");
  typingShow1.classList.remove("d-block");
  typingShow1.classList.add("d-none");

};

function typingTest1() {
  if (typingAns1.value.trim() === typingQue1.textContent.trim()) {
    sectionTypingTest1View.style.backgroundImage="url('https://media.istockphoto.com/id/1407650461/vector/memphis-pattern-colorful-and-pop-geometric-background.jpg?s=612x612&w=0&k=20&c=EE4wNTJPalbfBsaCGKiLPyf2WqJF8wyVly3Rf5Ldm9A=')"
  sectionTypingTest1View.style.backgroundSize="cover";
  sectionTypingTest1View.style.minHeight="100vh";
    typingStatus1.textContent = "Correct";
    typingShow1.classList.remove("d-block");
    typingShow1.classList.add("d-none");
    typingHide1.classList.add("d-none");
    typingAns1.value = "";
    typingStatus1.textContent = "";
    clearInterval(typingId1);
     let typingRandom1 =Math.ceil(Math.random()*typingArr1.length);
  typingShow1.classList.add("d-block");
  typingQue1.textContent=typingArr1[typingRandom1];

    let container = document.createElement("div");
    container.id = "typingBro1";
    sectionTypingTest1View.appendChild(container);

    let row = document.createElement("div");
    row.classList.add("row");
    container.appendChild(row);

    let winnerImage = document.createElement("img");
    winnerImage.classList.add("col-12", "col-md-5");
    row.appendChild(winnerImage);
    winnerImage.setAttribute("src", "https://i.pinimg.com/originals/57/e2/09/57e209296e586933febadf06e271a3d3.gif");

    let cont = document.createElement("div");
    cont.classList.add("col-12", "d-flex", "col-md-7", "flex-column");
    row.appendChild(cont);

    let congrats = document.createElement("img");
    congrats.setAttribute("src", "https://www.pngplay.com/wp-content/uploads/12/Congratulations-Gifs-PNG-Free-File-Download.gif");
    cont.appendChild(congrats);

    let show = document.createElement("h2");
    cont.appendChild(show);
    show.classList.add("text-center");
    show.textContent = "You have completed 25 words in " + typingTime1.textContent + " sec";
    show.style.fontFamily="Poppins";
    show.style.fontWeight="bold"

    let buttonDiv = document.createElement("div");
    cont.appendChild(buttonDiv);
    buttonDiv.classList.add("text-center", "mt-4");

    let button = document.createElement("button");
    button.textContent = "Try Again!!";
    button.classList.add("button3", "btn", "btn-primary");
    buttonDiv.appendChild(button);

    container.classList.add("container");

    button.onclick = function () {
      container.remove();
      typingHide1.classList.remove("d-none");
      typingHide1.classList.add("d-block");
      typingShow1.classList.remove("d-none");
      typingShow1.classList.add("d-block");
      typingTime1.textContent = "00";
      time1 = 0;
      buttonTyping1();

      typingBack1.onclick = function () {
        clearInterval(typingId1);
        time1 = 0;
        typingTime1.textContent = "00";
        typingAns1.value = "";
        typingStatus1.textContent = "";
        const typingBro1 = document.getElementById("typingBro1");
        if (typingBro1) typingBro1.remove();
        typingHide1.classList.remove("d-none");
        typingHide1.classList.add("d-block");
        typingShow1.classList.remove("d-block");
        typingShow1.classList.add("d-none");
      };

      typingHome1.onclick = function () {
        clearInterval(typingId1);
        time1 = 0;
        typingTime1.textContent = "00";
        typingAns1.value = "";
        typingStatus1.textContent = "";
        const typingBro1 = document.getElementById("typingBro1");
        if (typingBro1) typingBro1.remove();
        typingHide1.classList.remove("d-none");
        typingHide1.classList.add("d-block");
        typingShow1.classList.remove("d-block");
        typingShow1.classList.add("d-none");
      };
    };
  } else {
    typingStatus1.textContent = "InCorrect";
    typingStatus1.style.color = "red";
  }
}

// typing2 

let typingTime2 = document.getElementById("typingTime2");
let time2= 0;
let typingAns2 = document.getElementById("typingAns2");
let typingQue2 = document.getElementById("typingQue2");
let typingStatus2 = document.getElementById("typingStatus2");

let sectionTypingTest2View=document.getElementById("sectionTypingTest2View");

let typingHide2 = document.getElementById("typingHide2");
let typingShow2 = document.getElementById("typingShow2");
let typingId2 = "";

let typingArr2 = [
  "Creativity blossoms when you challenge yourself beyond comfort zones, embracing uncertainty, exploring new ideas, and learning from mistakes, fostering innovation and personal growth while inspiring others with passion and resilience that transform ordinary experiences into extraordinary achievements through persistent effort, curiosity, and an unwavering belief in your unique potential.",
  "Learning a language requires patience, consistent practice, and immersion, enabling communication across cultures, expanding perspectives, and deepening empathy while unlocking new career opportunities and friendships, enriching life experiences, and broadening intellectual horizons that challenge your brain, improve memory, and encourage lifelong learning as you embrace diversity in meaningful ways every day.",
  "Technology evolves rapidly, reshaping society and industry; staying current demands adaptability, curiosity, and continuous skill development, preparing individuals for future challenges and innovations that improve efficiency, connectivity, and access to information while also requiring ethical considerations and mindful use to ensure technology benefits humanity sustainably without compromising privacy or well-being.",
  "Nature provides essential resources supporting life, including air, water, soil, and biodiversity; protecting these ecosystems preserves climate balance, food security, and human health, requiring global cooperation and local action through conservation, sustainable resource management, and awareness to ensure that future generations inherit a planet capable of sustaining diverse life forms indefinitely.",
  "Travel expands the mind by exposing travelers to unfamiliar cultures, languages, and traditions, fostering empathy, tolerance, and adaptability while encouraging curiosity and personal growth; these experiences create lasting memories, broaden worldviews, and challenge preconceived notions, reminding us that despite differences, people share universal hopes, dreams, and values worldwide.",
  "Effective communication skills build trust, resolve conflicts, and enhance collaboration by enabling clear expression, active listening, and empathy; mastering these abilities fosters stronger relationships in personal and professional settings, facilitating teamwork, understanding, and mutual respect that create environments where innovation thrives and individuals feel valued and supported consistently.",
  "Healthy lifestyles combine balanced nutrition, regular physical activity, and mental well-being practices to improve longevity, energy, and overall quality of life; cultivating habits such as mindful eating, hydration, stress management, and sufficient rest empowers individuals to prevent diseases, maintain fitness, and enhance resilience, leading to more fulfilling and productive daily living experiences.",
  "Time management techniques like prioritization, goal setting, and scheduling optimize productivity and reduce stress by helping individuals focus on important tasks and avoid distractions; these strategies enable work-life balance, increase efficiency, and promote self-discipline while encouraging reflection and continuous improvement toward achieving long-term aspirations successfully.",
  "Reading stimulates imagination, critical thinking, and empathy by exposing readers to diverse ideas, cultures, and experiences; consistent engagement with various genres enhances vocabulary, knowledge, and communication skills, encouraging intellectual growth and emotional intelligence that enable individuals to better understand themselves and others while fostering lifelong curiosity and creativity.",
  "Mindfulness meditation improves mental clarity, emotional regulation, and stress resilience by cultivating present-moment awareness and non-judgmental acceptance; regular practice enhances focus, reduces anxiety, and promotes compassion toward oneself and others, contributing to healthier relationships, better decision-making, and overall psychological well-being amid the complexities of modern life’s demands.",
  "Financial literacy equips individuals with skills to budget, save, invest, and plan for the future, enabling informed decisions that secure economic stability; understanding concepts like compound interest, debt management, and risk diversification helps build wealth responsibly, avoid financial pitfalls, and achieve goals such as homeownership, education, and retirement with confidence.",
  "Volunteering nurtures compassion, social responsibility, and community engagement by providing time and skills to help those in need; this selfless act strengthens social bonds, builds empathy, and enhances personal fulfillment while inspiring positive change and collective action toward creating more inclusive, supportive, and resilient societies worldwide.",
  "Critical thinking involves analyzing information objectively, questioning assumptions, and evaluating evidence to form reasoned conclusions; developing this skill empowers individuals to solve problems effectively, avoid biases, make sound decisions, and engage constructively in debates, fostering intellectual independence and promoting responsible citizenship in increasingly complex and information-rich environments.",
  "Sustainable living encourages reducing waste, conserving resources, and minimizing environmental impact through mindful consumption, energy efficiency, and supporting eco-friendly initiatives; adopting such practices preserves biodiversity, mitigates climate change, and promotes social equity, contributing to healthier communities and a more balanced relationship between humanity and the natural world for generations to come.",
  "Building resilience enables individuals to adapt to adversity, recover from setbacks, and maintain emotional strength through positive coping strategies and supportive relationships; cultivating this capacity promotes mental health, perseverance, and personal growth, empowering people to navigate challenges constructively while fostering hope and optimism despite uncertainty or difficulty.",
  "Effective leadership inspires and motivates others toward common goals by demonstrating vision, integrity, empathy, and communication skills; good leaders cultivate trust, empower team members, and foster collaboration, creating environments where innovation thrives, challenges are overcome, and collective success is achieved through shared commitment and mutual respect.",
  "Cultural diversity enriches societies by bringing varied traditions, beliefs, and perspectives that foster creativity, understanding, and cooperation; embracing inclusivity and equity promotes social cohesion, reduces prejudice, and strengthens democratic values, enabling communities to address complex challenges collaboratively while celebrating and preserving unique cultural identities worldwide.",
  "Digital literacy empowers individuals to safely navigate online environments, critically evaluate information, and utilize technology effectively for personal and professional growth; mastering digital skills enhances communication, creativity, and problem-solving abilities, while also fostering awareness of cybersecurity risks and ethical considerations essential for responsible participation in the digital age.",
  "Public speaking builds confidence, persuasion, and leadership by enabling clear and engaging communication with diverse audiences; practicing this skill enhances personal presence, facilitates knowledge sharing, and influences decisions, supporting professional advancement and social impact through compelling storytelling, credible argumentation, and effective audience connection.",
  "Collaboration harnesses diverse talents and perspectives to achieve shared objectives more efficiently; fostering trust, open communication, and mutual respect in teams enhances creativity, problem-solving, and adaptability, leading to higher quality outcomes, stronger relationships, and increased satisfaction among participants across varied organizational and community contexts.",
  "Scientific inquiry advances knowledge through systematic observation, experimentation, and analysis, driving technological progress and informed decision-making; supporting research and promoting science education inspire curiosity, critical thinking, and evidence-based understanding, enabling societies to address complex challenges and improve human health, environment, and overall quality of life.",
  "Artistic expression conveys emotions, ideas, and cultural narratives through visual, auditory, and performance mediums, enriching human experience and communication; engaging in creative activities nurtures imagination, mental well-being, and social connection, fostering appreciation for diversity and inspiring innovation across individual and collective endeavors.",
  "Emotional intelligence enhances self-awareness, empathy, and interpersonal skills, improving relationships and decision-making; developing this competency supports conflict resolution, leadership, and teamwork by enabling individuals to understand and manage their own and others’ emotions effectively within personal and professional environments.",
  "Setting SMART goals—Specific, Measurable, Achievable, Relevant, Time-bound—provides clear direction and motivation for success; regularly reviewing and adjusting objectives ensures progress, accountability, and adaptability, empowering individuals and teams to overcome obstacles and realize aspirations systematically and confidently across various life domains.",
  "Networking creates valuable professional and social connections that open doors to opportunities, mentorship, and collaboration; building authentic relationships through trust, reciprocity, and effective communication fosters support systems that enhance career development, knowledge exchange, and personal growth in dynamic environments.",
  "Reading diverse literature broadens cultural understanding and critical thinking by exposing readers to multiple perspectives and complex themes; engaging with different voices fosters empathy, challenges stereotypes, and enriches intellectual and emotional capacities, supporting lifelong learning and open-mindedness.",
  "Gardening promotes physical activity, mental relaxation, and environmental awareness by nurturing plants and ecosystems; this practice fosters responsibility, patience, and appreciation for natural cycles, contributing to sustainable living and improved well-being through connection with nature.",
  "Ethical decision-making involves evaluating actions based on moral principles and potential impacts; cultivating ethical awareness promotes integrity, accountability, and social responsibility, guiding individuals and organizations to act fairly and transparently in complex situations for the greater good.",
  "Lifelong learning sustains personal and professional growth by encouraging continuous skill acquisition, adaptability, and curiosity; embracing educational opportunities supports innovation, resilience, and fulfillment in rapidly changing environments across diverse fields and interests.",
  "Effective conflict resolution employs active listening, empathy, and negotiation to address disagreements constructively; fostering understanding and collaboration reduces tension, builds trust, and strengthens relationships within teams, families, and communities.",
  "Mindful consumption advocates awareness of the environmental and social impact of purchasing decisions, promoting responsible use of resources and support for ethical products; adopting this mindset helps reduce waste and encourages sustainable economies aligned with global well-being.",
  "Exercise benefits physical health, mental clarity, and emotional balance by improving cardiovascular fitness, strength, and endorphin levels; regular activity supports longevity, reduces disease risk, and enhances quality of life through increased energy and stress relief.",
  "Writing cultivates communication skills, creativity, and critical thinking by organizing thoughts and expressing ideas clearly; engaging in regular writing practices supports personal reflection, academic success, and professional effectiveness across various contexts.",
  "Volunteering abroad combines cultural exchange with meaningful service, broadening perspectives and fostering global citizenship; these experiences develop adaptability, empathy, and problem-solving abilities while contributing to community development and international understanding.",
  "Sustainable agriculture integrates environmental health, economic profitability, and social equity to produce food responsibly; practices such as crop rotation, organic farming, and water conservation maintain ecosystem balance while supporting farmers and food security worldwide.",
  "Practicing gratitude shifts focus toward positivity and appreciation, improving mental health and interpersonal relationships; regularly acknowledging blessings and kindness cultivates optimism, resilience, and deeper connections with others.",
  "Healthy sleep routines regulate biological rhythms, enhancing memory, mood, and immune function; prioritizing consistent schedules, comfortable environments, and relaxation techniques supports restorative rest vital for overall well-being.",
  "Learning to code develops logical thinking, creativity, and problem-solving abilities essential for modern careers; starting with foundational programming concepts and gradually tackling complex projects fosters confidence and innovation in technology-driven fields.",
  "Team sports teach cooperation, discipline, and leadership while promoting physical fitness and social interaction; participation builds camaraderie, motivation, and resilience that positively influence personal and group achievements.",
  "Mindfulness practices increase awareness and acceptance of present experiences, reducing stress and enhancing emotional regulation; integrating meditation, breathing exercises, or mindful movement into daily life supports psychological health and improved focus.",
  "Art education nurtures creativity, cultural literacy, and self-expression; encouraging participation in visual, musical, or performing arts enriches cognitive development and emotional intelligence, fostering inclusive communities.",
  "Financial planning secures future stability through budgeting, saving, and investment strategies; understanding personal finance empowers individuals to meet goals, navigate risks, and build wealth responsibly over time.",
  "Civic engagement promotes active participation in democratic processes, community improvement, and social justice; informed and involved citizens contribute to accountable governance and collective well-being.",
  "Effective listening enhances understanding, builds trust, and facilitates collaboration by attentively receiving and interpreting messages; developing this skill improves communication and relationships in diverse contexts.",
  "Traveling sustainably involves minimizing environmental impact, respecting local cultures, and supporting responsible tourism; conscious travelers help preserve destinations and promote ethical economic development for host communities.",
   "Technology advances rapidly every year, influencing how people communicate, work, and live their lives. Adapting to these changes is essential for success in modern society. Continuous learning and curiosity help individuals stay relevant and innovative while embracing new tools and methods that improve efficiency, creativity, and global connectivity overall.",
  "Healthy habits like balanced nutrition, regular exercise, sufficient sleep, and stress management contribute greatly to physical and mental well-being. Maintaining these habits requires dedication, planning, and self-awareness. Incorporating small changes gradually creates lasting lifestyle improvements that increase energy, productivity, and happiness throughout all stages of life and various environments.",
  "Learning languages broadens perspectives, enhances cognitive abilities, and improves cross-cultural communication. Exposure to new vocabularies, grammar, and customs enriches social interactions and professional opportunities. Consistent practice, immersion, and cultural appreciation facilitate fluency development while fostering empathy and global understanding between diverse groups and communities worldwide.",
  "Sustainability focuses on meeting current needs without compromising resources for future generations. It involves responsible consumption, conservation, and environmental protection through collective efforts by individuals, governments, and businesses. Education, innovation, and cooperation enable societies to reduce waste, carbon emissions, and biodiversity loss, ensuring healthy ecosystems and equitable human well-being globally.",
  "Effective communication skills include listening actively, speaking clearly, and writing precisely to convey ideas accurately and respectfully. These skills foster understanding, reduce conflicts, and build relationships in personal and professional contexts. Practicing empathy, adapting messages for different audiences, and seeking feedback enhance one’s ability to connect and collaborate with others successfully.",
  "Creativity thrives in environments that encourage experimentation, open-mindedness, and diverse perspectives. Engaging with art, music, literature, and problem-solving challenges stimulates original thinking and innovation. Overcoming fear of failure and embracing curiosity enable individuals and teams to generate novel ideas that drive progress and inspire positive change across disciplines and industries.",
  "Financial literacy empowers people to manage income, expenses, savings, and investments wisely, leading to financial security and independence. Understanding budgeting, debt management, and long-term planning helps individuals avoid common pitfalls and achieve personal goals. Access to education and resources promotes responsible decision-making, reducing economic inequalities and stress related to money matters.",
  "Emotional intelligence involves recognizing, understanding, and managing one’s own emotions and empathizing with others. This skill improves social interactions, conflict resolution, and leadership effectiveness. Developing emotional intelligence requires self-reflection, mindfulness, and practice in active listening, perspective-taking, and expressing feelings constructively to foster trust and cooperation in relationships.",
  "Teamwork combines diverse skills and viewpoints to achieve common objectives more efficiently than individuals alone. Successful teams communicate openly, respect differences, and coordinate efforts effectively. Building trust and shared commitment within groups enhances creativity, morale, and problem-solving capacity, contributing to higher performance and satisfaction in organizational and community settings.",
  "Setting clear, achievable goals provides direction and motivation, guiding daily actions toward long-term aspirations. Breaking large objectives into smaller tasks allows measurable progress and reduces overwhelm. Regularly reviewing and adjusting goals keeps efforts aligned with changing circumstances and priorities, promoting persistence, focus, and a sense of accomplishment throughout various endeavors.",
  "Reading extensively develops vocabulary, comprehension, and critical thinking, exposing readers to new ideas and cultures. Engaging with diverse genres and authors stimulates imagination and empathy, enriching personal growth. Consistent reading habits support academic success, professional development, and lifelong learning, enabling individuals to adapt and contribute meaningfully in an ever-evolving world.",
  "Mindfulness practices cultivate present-moment awareness, reducing stress and enhancing emotional regulation. Techniques like meditation, deep breathing, and mindful movement promote mental clarity and well-being. Integrating mindfulness into daily routines improves focus, resilience, and relationships by fostering acceptance, compassion, and intentional responses to life’s challenges and opportunities.",
  "Volunteerism strengthens communities by addressing local needs through service and support. It builds social connections, develops skills, and fosters civic responsibility. Participating in volunteer activities enhances empathy, cultural understanding, and a sense of purpose, contributing to personal fulfillment and societal well-being across diverse populations and settings worldwide.",
  "Environmental conservation protects natural habitats, species, and resources essential for life on Earth. Efforts include pollution reduction, sustainable land use, and ecosystem restoration. Public awareness, policy enforcement, and scientific research collaborate to preserve biodiversity, mitigate climate change, and ensure a healthy planet for current and future generations’ survival and prosperity.",
  "Critical thinking enables individuals to analyze information objectively, evaluate arguments, and make reasoned decisions. It involves questioning assumptions, identifying biases, and considering evidence from multiple perspectives. Cultivating critical thinking skills enhances problem-solving abilities and informed citizenship, equipping people to navigate complex issues in personal, academic, and professional contexts effectively.",
  "Innovation requires creativity, experimentation, and resilience to transform ideas into practical solutions. Encouraging risk-taking and learning from failure fosters a culture of continuous improvement. Collaboration among diverse teams accelerates knowledge sharing and the development of products, services, and processes that address evolving societal and market needs sustainably and ethically.",
  "Cultural awareness promotes understanding and respect for diverse traditions, values, and worldviews. It enriches interpersonal relationships and global cooperation by reducing prejudices and stereotypes. Engaging with different cultures through travel, education, and dialogue fosters open-mindedness, empathy, and inclusive communities that celebrate diversity as a source of strength and unity.",
  "Self-care practices are essential for maintaining physical, emotional, and mental health. Activities like exercise, hobbies, relaxation, and socializing recharge energy and prevent burnout. Prioritizing self-care involves setting boundaries, recognizing personal needs, and seeking support when necessary, enabling individuals to function optimally and enjoy balanced, fulfilling lives amid daily responsibilities.",
  "Leadership inspires and guides individuals or groups toward shared goals through vision, communication, and integrity. Effective leaders empower others by fostering collaboration, trust, and growth opportunities. Developing leadership skills includes emotional intelligence, adaptability, and decision-making abilities that motivate teams and organizations to overcome challenges and achieve sustained success.",
  "Digital literacy equips individuals to use technology effectively and responsibly for communication, learning, and problem-solving. It includes understanding online safety, privacy, and evaluating information credibility. Enhancing digital literacy ensures equal access to opportunities, supports lifelong learning, and prepares people to thrive in increasingly interconnected and technology-driven societies.",
  "Conflict resolution involves identifying disagreements, understanding differing perspectives, and collaboratively finding solutions that satisfy all parties. Skills like active listening, empathy, and negotiation are crucial for managing disputes constructively. Effective conflict resolution improves relationships, productivity, and social harmony in families, workplaces, and communities by preventing escalation and fostering cooperation.",
  "Public speaking skills boost confidence and the ability to convey ideas clearly to audiences of various sizes and backgrounds. Preparation, practice, and engaging storytelling help capture attention and communicate messages effectively. Mastering public speaking enhances career prospects, leadership, and personal growth through impactful presentations and meaningful conversations.",
  "Artistic expression provides creative outlets for emotions, ideas, and cultural narratives through mediums such as painting, music, dance, and writing. Engaging in arts promotes mental health, innovation, and social connection. Supporting arts education and community involvement nurtures talent and enriches societies by celebrating human creativity and diversity.",
  "Global citizenship encourages awareness of interconnectedness and shared responsibilities beyond national boundaries. It emphasizes respect for human rights, environmental stewardship, and cultural understanding. Promoting global citizenship prepares individuals to participate actively in addressing worldwide challenges such as poverty, inequality, and climate change through cooperation and ethical action.",
  "Adaptability enables individuals to respond effectively to changing circumstances, challenges, and opportunities. It involves openness to learning, flexibility in thinking, and resilience in the face of uncertainty. Cultivating adaptability supports personal growth, career success, and well-being in dynamic environments characterized by rapid technological and social transformations.",
  "Nutrition education informs people about balanced diets, nutrient functions, and healthy eating habits. It supports disease prevention, weight management, and optimal physical and cognitive development. Accessible nutrition knowledge empowers communities to make informed food choices that promote long-term health and reduce healthcare costs globally.",
  "Scientific inquiry uses observation, experimentation, and analysis to understand natural phenomena systematically. It drives technological advancements and evidence-based decision-making. Encouraging curiosity, critical evaluation, and ethical research practices fosters innovation and informed public policies that address complex challenges in health, environment, and society.",
  "Time management helps prioritize tasks, set deadlines, and allocate resources efficiently to achieve objectives. Effective time management reduces stress, improves productivity, and allows work-life balance. Techniques like goal setting, scheduling, and avoiding procrastination enhance focus and enable consistent progress toward personal and professional aspirations.",
  "Empathy facilitates understanding and sharing others’ feelings, strengthening interpersonal connections and compassion. Practicing empathy enhances communication, conflict resolution, and supportive relationships. Cultivating empathy promotes inclusive communities and teamwork by acknowledging diverse experiences and fostering kindness, respect, and cooperation in various social contexts.",
  "Civic engagement involves participation in democratic processes, volunteering, and community advocacy to influence public policies and improve societal well-being. Active civic involvement strengthens governance, accountability, and social justice. Educating citizens about rights, responsibilities, and effective advocacy empowers them to contribute meaningfully to their communities and democracies.",
  "Physical activity promotes cardiovascular health, muscle strength, and mental well-being through regular exercise and movement. Incorporating activities such as walking, cycling, and sports improves endurance, flexibility, and mood. Encouraging physical fitness reduces risks of chronic diseases and supports longevity, quality of life, and functional independence across all ages.",
  "Mindset development emphasizes cultivating positive attitudes, resilience, and growth orientation toward challenges and learning. A growth mindset encourages persistence, adaptability, and openness to feedback. Fostering this mindset enhances motivation, achievement, and well-being by shifting focus from limitations to possibilities and continuous self-improvement.",
  "Interpersonal communication skills include verbal and nonverbal techniques for effective exchange of information and emotions. These skills enable collaboration, conflict management, and relationship building. Developing interpersonal communication through active listening, clarity, and empathy improves teamwork, leadership, and social support networks in diverse settings.",
  "Environmental justice addresses the equitable distribution of environmental benefits and burdens across communities, especially marginalized groups. Advocating for fair policies and practices ensures access to clean air, water, and green spaces for all. Environmental justice intersects with social, economic, and health equity, promoting sustainable and inclusive development.",
  "Cultural preservation safeguards traditions, languages, and heritage through documentation, education, and community involvement. Preserving cultural identity fosters pride, continuity, and diversity within societies. Supporting cultural heritage contributes to historical knowledge, tourism, and intercultural dialogue that enriches global understanding and cooperation.",
  "Financial planning involves budgeting, saving, investing, and risk management to achieve short- and long-term goals. Sound financial planning provides security, reduces anxiety, and enables lifestyle choices aligned with personal values. Access to financial advice and education promotes economic stability and independence for individuals and families.",
  "Problem-solving skills encompass identifying issues, analyzing causes, generating solutions, and implementing actions. Developing systematic approaches and creative thinking enhances decision-making and adaptability. Strong problem-solving abilities contribute to innovation, productivity, and resilience in personal, academic, and professional contexts.",
  "Cultural competence entails understanding and respecting differences in beliefs, values, and behaviors to interact effectively across cultures. It reduces biases and misunderstandings, promoting inclusion and equity. Cultivating cultural competence supports global collaboration, education, healthcare, and business by fostering mutual respect and effective communication.",
  "Stress management techniques such as relaxation exercises, time management, and social support reduce negative effects of stress on health and performance. Practicing these strategies improves emotional regulation, concentration, and overall quality of life. Incorporating stress management into daily routines helps individuals maintain balance amid demands and challenges.",
  "Innovation ecosystems combine academia, industry, government, and community resources to foster research, development, and entrepreneurship. These ecosystems accelerate technological advancements and economic growth by facilitating knowledge exchange, collaboration, and funding. Supporting innovation ecosystems drives societal progress and competitiveness in a rapidly evolving global landscape.",
  "Ethical reasoning involves analyzing moral principles and applying them to decisions and actions responsibly. Developing ethical reasoning enhances integrity, fairness, and accountability. Encouraging ethical behavior in personal and professional contexts builds trust, respect, and sustainable relationships within communities and organizations.",
  "Lifelong learning embraces continuous acquisition of knowledge and skills throughout life for personal and professional growth. This mindset encourages curiosity, adaptability, and resilience amid changing environments. Access to diverse learning opportunities supports empowerment, innovation, and active participation in society’s evolving challenges and opportunities."
];


let typingRandom2 =0;
function buttonTyping2() {
  sectionTypingTest2View.style.backgroundImage="url('https://img.freepik.com/premium-photo/white-background-with-light-it-word-light-bottom-right_689904-136099.jpg')"
  sectionTypingTest2View.style.backgroundSize="cover";
  sectionTypingTest2View.style.minHeight="100vh";
  typingHide2.classList.add("d-none");

  typingShow2.classList.remove("d-none");
  let typingRandom2 =Math.ceil(Math.random()*typingArr2.length);
  typingShow2.classList.add("d-block");
  typingQue2.textContent=typingArr2[typingRandom2];

  typingId2 = setInterval(function () {
    time2 = time2 + 1;
    if (time2<= 9) {
      typingTime2.textContent = "0" + time2;
    } else {
      typingTime2.textContent = time2;
    }
  }, 1000);
}



let typingBack2 = document.getElementById("typingBack2");
let typingHome2 = document.getElementById("typingHome2");


typingBack2.onclick = function () {
  clearInterval(typingId2);
  sectionTypingTest2View.style.backgroundImage="url('https://www.shutterstock.com/image-photo/abstract-background-polygons-on-white-600nw-463916900.jpg')"
  sectionTypingTest2View.style.backgroundSize="cover";
  sectionTypingTest2View.style.minHeight="100vh";
  time2 = 0;
  typingTime2.textContent = "00";
  typingAns2.value = "";
   let typingRandom2 =Math.ceil(Math.random()*typingArr2.length);
  typingShow2.classList.add("d-block");
  typingQue2.textContent=typingArr2[typingRandom2];
  typingStatus2.textContent = "";
  let typingBro2 = document.getElementById("typingBro2");
  if (typingBro2) typingBro2.remove();
  typingHide2.classList.remove("d-none");
  typingHide2.classList.add("d-block");
  typingShow2.classList.remove("d-block");
  typingShow2.classList.add("d-none");
};

typingHome2.onclick = function () {
  clearInterval(typingId2);
   sectionTypingTest2View.style.backgroundImage="url('https://www.shutterstock.com/image-photo/abstract-background-polygons-on-white-600nw-463916900.jpg')"
  sectionTypingTest2View.style.backgroundSize="cover";
  sectionTypingTest2View.style.minHeight="100vh";
  time2 = 0;
  typingTime2.textContent = "00";
  typingAns2.value = "";
  typingStatus2.textContent = "";
   let typingRandom2 =Math.ceil(Math.random()*typingArr2.length);
  typingShow2.classList.add("d-block");
  typingQue2.textContent=typingArr2[typingRandom2];
  let typingBro2 = document.getElementById("typingBro2");
  if (typingBro2) typingBro2.remove();
  typingHide2.classList.remove("d-none");
  typingHide2.classList.add("d-block");
  typingShow2.classList.remove("d-block");
  typingShow2.classList.add("d-none");

};

function typingTest2() {
  if (typingAns2.value.trim() === typingQue2.textContent.trim()) {
    sectionTypingTest2View.style.backgroundImage="url('https://media.istockphoto.com/id/1407650461/vector/memphis-pattern-colorful-and-pop-geometric-background.jpg?s=612x612&w=0&k=20&c=EE4wNTJPalbfBsaCGKiLPyf2WqJF8wyVly3Rf5Ldm9A=')"
  sectionTypingTest2View.style.backgroundSize="cover";
  sectionTypingTest2View.style.minHeight="100vh";
    typingStatus2.textContent = "Correct";
    typingShow2.classList.remove("d-block");
    typingShow2.classList.add("d-none");
    typingHide2.classList.add("d-none");
    typingAns2.value = "";
    typingStatus2.textContent = "";
    clearInterval(typingId2);
     let typingRandom2 =Math.ceil(Math.random()*typingArr2.length)
  typingShow2.classList.add("d-block");
  typingQue2.textContent=typingArr2[typingRandom2];

    let container = document.createElement("div");
    container.id = "typingBro2";
    sectionTypingTest2View.appendChild(container);

    let row = document.createElement("div");
    row.classList.add("row");
    container.appendChild(row);

    let winnerImage = document.createElement("img");
    winnerImage.classList.add("col-12", "col-md-5");
    row.appendChild(winnerImage);
    winnerImage.setAttribute("src", "https://i.pinimg.com/originals/57/e2/09/57e209296e586933febadf06e271a3d3.gif");

    let cont = document.createElement("div");
    cont.classList.add("col-12", "d-flex", "col-md-7", "flex-column");
    row.appendChild(cont);

    let congrats = document.createElement("img");
    congrats.setAttribute("src", "https://www.pngplay.com/wp-content/uploads/12/Congratulations-Gifs-PNG-Free-File-Download.gif");
    cont.appendChild(congrats);

    let show = document.createElement("h2");
    cont.appendChild(show);
    show.classList.add("text-center");
    show.textContent = "You have completed 50 words in " + typingTime2.textContent + " sec";
    show.style.fontFamily="Poppins";
    show.style.fontWeight="bold"

    let buttonDiv = document.createElement("div");
    cont.appendChild(buttonDiv);
    buttonDiv.classList.add("text-center", "mt-4");

    let button = document.createElement("button");
    button.textContent = "Try Again!!";
    button.classList.add("button3", "btn", "btn-primary");
    buttonDiv.appendChild(button);

    container.classList.add("container");

    button.onclick = function () {
      container.remove();
      typingHide2.classList.remove("d-none");
      typingHide2.classList.add("d-block");
      typingShow2.classList.remove("d-none");
      typingShow2.classList.add("d-block");
      typingTime2.textContent = "00";
      time2 = 0;
      buttonTyping2();

      typingBack2.onclick = function () {
        clearInterval(typingId2);
        time2 = 0;
        typingTime2.textContent = "00";
        typingAns2.value = "";
        typingStatus2.textContent = "";
        const typingBro2 = document.getElementById("typingBro2");
        if (typingBro2) typingBro2.remove();
        typingHide2.classList.remove("d-none");
        typingHide2.classList.add("d-block");
        typingShow2.classList.remove("d-block");
        typingShow2.classList.add("d-none");
      };

      typingHome2.onclick = function () {
        clearInterval(typingId2);
        time2 = 0;
        typingTime2.textContent = "00";
        typingAns2.value = "";
        typingStatus2.textContent = "";
        const typingBro2 = document.getElementById("typingBro2");
        if (typingBro2) typingBro2.remove();
        typingHide2.classList.remove("d-none");
        typingHide2.classList.add("d-block");
        typingShow2.classList.remove("d-block");
        typingShow2.classList.add("d-none");
      };
    };
  } else {
    typingStatus2.textContent = "InCorrect";
    typingStatus2.style.color = "red";
  }
}


//typing3

let typingTime3 = document.getElementById("typingTime3");
let time3 = 0;
let typingAns3= document.getElementById("typingAns3");
let typingQue3 = document.getElementById("typingQue3");
let typingStatus3 = document.getElementById("typingStatus3");

let sectionTypingTest3View=document.getElementById("sectionTypingTest3View");

let typingHide3 = document.getElementById("typingHide3");
let typingShow3 = document.getElementById("typingShow3");
let typingId3 = "";
let typingArr3 = [
  "In a distant valley where rain rarely fell, a young inventor named Theo created a machine that could summon clouds. The villagers mocked him at first, calling it foolish and impossible. But Theo believed in science and in dreams. After years of trial and error, lightning finally danced around his machine. Clouds gathered, thunder rolled, and then came rain—gentle, life-giving rain. The dry lands bloomed with color and crops grew tall. The villagers apologized, their hearts changed. Theo never sought fame, only hope. His machine remained, not as a monument, but as proof that belief could change barren worlds.",
  
  "Every evening, as the sun dipped below the city’s skyline, an old man played his violin on the rooftop. People gathered below, listening in silence. He played no famous pieces—only melodies born from memories. Each note held laughter, sorrow, and time. A girl once asked where he learned to play. He smiled, replying, 'From my wife’s heartbeat before she left this world.' The music wasn’t for applause, but for remembrance. Even long after he passed away, recordings of his rooftop concerts kept playing in cafés and radios. His legacy wasn’t fame, but emotions carved gently into the hearts of listeners.",
  
  "Among the stars, aboard a tiny spaceship called Solace, an astronaut named Elira searched for a new home for Earth. Her only companion was an AI named Lux, who spoke like a poet. As planets came and went, Elira recorded her journey in songs. She missed trees, oceans, and laughter. But one day, orbiting a vibrant world with blue forests and silver lakes, she knew the search had ended. Earth wasn’t lost—it had evolved. She sent the coordinates home and named the planet 'Second Chance.' Her voice echoed across space, singing not of exile, but of rediscovery, hope, and courage.",
  
  "Beneath the old oak tree in the town square, a boy buried letters to the future. He wrote about dreams, fears, love, and life. Every year, he returned, reading old ones and adding new. At eighty, with shaking hands, he dug up the final letter he’d written at twelve. It said, ‘I hope we became kind.’ He smiled. He had. Others began burying their letters too. The tree, once ordinary, became sacred—a monument to personal growth. Time wasn’t feared there; it was celebrated. And every word buried in the roots reminded the town that memories could bloom like spring flowers.",
  
  "A girl named Saira lived in a town where no one dreamed. Everyone slept peacefully but woke with empty minds. Curious, she asked elders why. They shrugged, saying dreams were lost long ago. Refusing to accept this, Saira painted what she imagined dreams might look like—flying whales, singing books, glowing cats. Her art spread across walls and alleys, awakening curiosity. Slowly, people began to remember flickers of dreams. Colors returned to their lives. Laughter grew louder. No one knew how she did it, but Saira knew the truth: once imagination is lit, it sparks a fire no silence can suppress.",
  
  "In a cave deep within the mountains, a dragon guarded not gold, but forgotten memories. Every visitor had to offer a piece of their past to enter. A writer came seeking inspiration, a child seeking closure, a soldier seeking peace. They each left lighter, unburdened. The dragon, ancient and wise, consumed their memories not for greed, but to preserve them. Without memory, pain faded—but so did joy. The dragon wept for the bittersweet balance it maintained. One day, it vanished, leaving behind books filled with stories, each page shimmering with the emotion of lives once lived and never truly forgotten.",
  
  "On the coldest day of winter, a stray cat curled up beside a shivering boy at a train station. He was alone, scared, and hungry. The cat purred gently, giving warmth. An old woman noticed and gave them both food. They stayed together, boy and cat, forming an unbreakable bond. Years passed. That boy became a veterinarian and opened a clinic named 'Purrpose.' He never forgot the cat that saved his heart. Every winter, he offered free care for animals. In the lobby, a statue of a cat sat beside a boy. It didn’t need a plaque—everyone knew the story.",
  
  "Hidden within the attic of a library older than the town itself was a secret room filled with clocks. Each ticked in harmony, none matching the real world. A curious librarian named Isha found it by accident. Inside, time flowed differently. She read for days, but only minutes passed outside. Fascinated, she studied, learning forgotten languages, history, and truths. Eventually, she began teaching others. The clocks adjusted, allowing more time to learn. Students came from across the world. Knowledge became timeless. Isha never aged inside. She became a myth, yet every scholar whispered her name, grateful for moments that lasted forever.",
  
  "Once, in a village where shadows had names and whispered secrets, lived a blind girl named Rani. Her world was sound and scent. She painted using her fingers, mixing colors by feel. Her paintings held emotions so powerful, viewers cried. One painting made a soldier forgive, another helped a widow smile. Rani never saw the colors she used, but felt them through the hearts they touched. When asked how, she said, ‘I paint what the soul sees.’ Her blindness wasn’t a limitation—it was liberation. Through her, people saw more clearly. And in the silence of her canvas, truth always spoke.",
  
  "A boy named Dev built paper airplanes with wishes written on the wings. He released one each morning from his rooftop, hoping someone would find them. People began responding—writing on paper boats and balloons. Soon, the sky became a playground of dreams. One girl wrote, 'I want to learn to walk again,' and found the courage after reading Dev’s words. Strangers became friends. Cities connected through paper and ink. Dev never revealed himself, but the town knew. He wasn’t a boy anymore. He was a messenger of hope. And every flight carried not just paper—but the weight of possibility.",
  
  "At the edge of the world, where maps ended and legends began, stood a lighthouse made entirely of glass. Its light wasn’t fire, but memory. Sailors who lost their way saw moments from their past—childhood laughter, first love, promises made. The light reminded them who they were, guiding them home. The keeper, an old woman named Mira, never spoke. She listened. Each visitor left behind a memory, fueling the beacon. One night, a terrible storm shattered the lighthouse. But the memories didn’t fade. They became stars. Now, even in darkness, sailors look up and remember who waits for them at home.",
  
  "In a kingdom without music, silence ruled like a tyrant. Instruments were banned. Singing was punished. Yet, in the quietest alley, a boy found a flute hidden in a crack. When he played, the wind danced, flowers bloomed, and tears flowed. The queen, once a singer herself, heard the melody. Memories flooded her soul. She lifted the ban, declaring music the kingdom’s heart. Schools opened, orchestras formed. Even mountains echoed with joy. That boy became the royal composer, known not by name but by the harmony he restored. The kingdom learned that silence has value—but music gives it meaning and voice.",
  
  "In a distant realm, mirrors didn’t reflect appearance but showed your truest emotions. People wore masks to hide from themselves. A girl named Noor refused. She stood before the mirror each morning, accepting her reflection—joy, fear, anger, love. Slowly, others followed. The town became more honest, relationships deeper. No more lies, no false smiles. Children grew up fearless of feelings. The mirrors stopped glowing, no longer needed. Noor taught them the ultimate truth: authenticity frees more than it hurts. And in that kingdom of vulnerability, no one was ever alone again. Every heart became a mirror, clear and beautiful in its flaws.",
  
  "In the middle of a desert, a single red tree stood. It bore fruit once every hundred years. Legend said whoever ate it would remember every past life. A weary traveler, burdened with questions, arrived just in time. He ate the fruit and saw himself as a king, a beggar, a bird, a mother, a villain, and a hero. He laughed, cried, and understood. Life wasn’t linear—it was a tapestry. When he returned home, he taught empathy. His village thrived, conflict vanished. The tree waited again, silent and red, knowing that when the next seeker came, the cycle of wisdom would begin anew.",
  "In a small coastal town, the waves whispered secrets to those who listened. An elderly fisherman named Arjun claimed he could understand them. Each morning, he sat by the shore, eyes closed, nodding to the rhythm. Children laughed, calling him silly, but one stormy night, he warned them not to sail. They listened. The sea roared and swallowed the empty harbor. Arjun never asked for thanks. His bond with the ocean wasn’t for fame—it was respect. Years later, sailors still paused at the shore, listening to the waves, hoping to hear wisdom from the deep, just as Arjun once did.",
  
  "A teacher once told her students, 'Write a letter to yourself ten years from now.' Most forgot. But one girl, Mia, sealed hers in a jar and buried it in her backyard. A decade passed. She was lost—career, love, purpose. While cleaning her childhood home, she found the jar. Her younger self wrote with hope, dreams, and joy. Mia cried, then smiled. She remembered who she was. That letter didn’t change the world, but it changed her path. From that day, she began writing to herself every year. Sometimes, to move forward, all you need is a voice from your past.",
  
  "In a land where flowers bloomed only under moonlight, a boy named Lior planted seeds during the day. People mocked him, saying they’d never grow. He believed otherwise. Each night, he whispered stories to the soil. Seasons passed. One full moon, the entire valley glowed with blossoms—colors unseen before. The laughter stopped. People came from faraway lands to see the miracle garden. Lior smiled quietly, not seeking praise. His message was simple: growth doesn’t always need permission, only patience and love. From then on, even skeptics began planting in daylight, hoping that their belief could one day bloom under moonlight too.",
  
  "A girl named Anya lived in a forest where trees sang lullabies at dusk. Only she could hear them. She recorded the melodies and played them in the nearby town. No one believed her at first, but the music calmed angry hearts and eased restless minds. Scientists came, curious, but found no sound. Yet when they listened to Anya’s recordings, even they wept. The forest remained unchanged, its songs only for those who truly listened. Anya never stopped sharing. Her forest music became legend—soothing, healing. People eventually realized some truths are felt, not proven, and some songs are gifts for the soul.",
  
  "On the outskirts of a bustling city, an abandoned train station came alive each midnight. Ghosts of travelers waited patiently, boarding invisible trains. A young janitor named Ravi witnessed it by accident. Terrified at first, he eventually spoke to them. They weren’t frightening—just memories refusing to fade. He began documenting their stories, giving them closure. As he helped each one find peace, fewer ghosts appeared. Years later, Ravi became an author, his books filled with love, loss, and unfinished journeys. The station stood silent again. But every midnight, Ravi still visited, in case one final story waited to be told.",
  
  "A baker named Leena in a quiet village baked bread that made people dream. Not ordinary dreams, but ones that felt real—flying, reuniting with lost loved ones, exploring stars. People traveled miles for a loaf. Leena said her secret was kneading joy into the dough. When asked if it was magic, she smiled and said, 'Isn’t kindness a kind of magic?' She never raised her prices. Her goal wasn’t profit, but peace. The village became happier, more hopeful. And even when Leena passed, her recipes remained. New bakers tried, but only those who baked with love could create bread that whispered dreams.",
  
  "In a kingdom where the sky was always gray, people forgot what color looked like. A boy named Kavi, curious and kind, found a shard of blue glass buried in mud. Fascinated, he showed others. Most ignored it, but a few believed. Together, they painted murals from imagination—skies of orange, lakes of green, suns of gold. Their art spread, and slowly, color returned to the world. Not in the skies, but in hearts. The gray never left, but no one feared it anymore. Because now, they carried their own palette. Kavi became a symbol—not of rebellion, but of remembering wonder.",
  
  "Each year, a masked dancer performed at the village festival, enchanting crowds with movements that told silent stories. No one knew who they were. The dancer appeared, danced, and vanished. A child once followed and discovered the dancer was an elderly woman, forgotten by society. When asked why she danced, she replied, 'It’s the only way I remember I’m alive.' The child promised to never reveal her identity but shared her story. From then on, others joined the stage—young, old, broken, brave. The festival changed. It became not about performance, but about truth. And every mask hid a story worth hearing.",
  
  "Long ago, a storm tore through a mountain village, leaving only one tree standing. The villagers called it the Heart Tree. Whenever someone felt lost, they sat beneath it. No one knew why, but the tree gave peace. A scientist came to study it, but he too felt warmth, a memory of childhood joy. He stopped studying and started listening. The village healed, not because of data, but because they had a place to feel. The Heart Tree stood without leaves, fruit, or flowers—but it gave more than most forests ever could. Sometimes, the strongest roots are invisible to the eye.",
  
  "A lonely robot named Orin wandered a post-apocalyptic world, searching for humans. All he had was a dusty photograph of a smiling girl labeled 'Hope.' Cities crumbled, silence reigned. Yet Orin never stopped. One day, he found a child, frightened and alone. He showed the photo. The child smiled—it was her grandmother. Orin protected her, taught her, and eventually built a school powered by sunlight and curiosity. Generations grew up around Orin. He never rusted, for love kept his circuits alive. He became more than a machine. He became a legend—a reminder that even in ruins, kindness rebuilds worlds.",
  
  "At the edge of the forest, a strange shop appeared only on rainy days. It sold forgotten things—childhood toys, lost socks, dreams left behind. A girl named Priya found her old drawing there, one she thought was thrown away. The shopkeeper, a silent man with eyes like mirrors, simply nodded. Priya left with tears and inspiration. She became an artist, reminding the world not to abandon what made them joyful. Others found treasures too. The shop never stayed long, but it returned when needed. No one knew who ran it, only that it traded not in money, but in memory.",
  
  "In a snowy village where time felt slow, lived a boy who collected echoes. He captured them in jars—laughter, songs, even thunder. People didn’t understand until they visited his home. Each jar, when opened, released pure memory. A woman heard her wedding vows again. A child giggled at his lost dog’s bark. The boy didn’t sell the jars; he gifted them. One day, he disappeared, leaving a final jar marked ‘Thank you.’ Inside was silence—and that silence made people cry. He’d given them the most precious sound of all: presence. Now, every echo reminded them to listen before moments slipped away.",
  
  "Deep under the city, a hidden library held only one book per visitor. It contained their unwritten story. A student named Nila found it and gasped—it knew her fears, dreams, and secret hopes. She read, cried, then wrote the ending she wanted. Life changed. Word spread. People lined up, not to be entertained, but to understand themselves. Some rewrote tragedy into triumph. Others finally accepted who they were. The library had no name. It asked for no fee. Its shelves didn’t grow. Yet its stories multiplied because the true author was always the reader. And every story deserved a voice.",
  
  "A clockmaker named Eli crafted a watch that didn’t tell time—it revealed moments you missed. When worn, it whispered, 'You forgot your daughter’s dance recital,' or 'Your friend needed you yesterday.' People hated it at first. But then, they changed. Apologies were made, calls returned, hugs shared. The watch couldn’t rewind time, but it helped people live better in the present. Eli never patented it. He made just one, passing it from person to person. Years later, no one knew where the watch was, but its message lingered: Time isn’t lost in hours, but in neglect. Cherish what truly matters today.",
   "Every evening, Mira watched stars from her rooftop, whispering dreams into the sky. Her grandmother once told her that stars stored wishes, not just light. Mira believed it. When her city faced power outages, Mira painted glow-in-the-dark constellations across neighborhood walls. Children smiled again. Elders gathered under them, remembering. Her art gave hope, laughter, and direction in the darkness. News spread. People from other towns came, not for light, but for wonder. Mira proved that even without electricity, one could illuminate the world. Her stars didn’t shine in the sky—but in hearts willing to dream, even when the lights go out.",
  
  "A young boy named Tanmay found a bird with a broken wing in his backyard. He gently fed and cared for it, building a tiny sanctuary from sticks. Weeks passed, and the bird healed. But it didn’t fly away. Instead, it sang each morning, loud enough to wake the neighborhood. People began visiting Tanmay’s home just to hear the song. One day, the bird soared into the sky—but every morning, it returned to sing. Tanmay smiled, knowing love needs no cages. He had freed the bird, but it had freed something in him too—patience, kindness, and the joy of quiet loyalty.",
  
  "A librarian named Saanvi noticed that no one visited the poetry section anymore. Saddened, she slipped verses into random books—cookbooks, mysteries, biographies. Readers were surprised, then enchanted. Some returned just to find more. A buzz grew. Soon, poetry readings resumed. Children began writing haikus, elders shared verses they’d hidden for years. Saanvi never admitted she was behind it. To her, the words mattered more than the credit. She believed poetry was not dead, just misplaced. And in tucking beauty between pages, she brought a forgotten art back to life—quietly, one hidden line at a time, like magic that rhymed softly inside.",
  
  "On an island surrounded by stormy seas, villagers told tales of a lighthouse that shined only for the brave. No one had seen its light in decades. A girl named Kiara, tired of fear, rowed toward it one night. Waves threatened, wind screamed, but she sang through the storm. Just as her strength failed, the lighthouse beamed golden across the waves. She survived. Others followed. Each person who dared the journey saw the light too. It didn’t guide ships—it awakened courage. The lighthouse hadn’t been broken. It had waited for someone to believe. Kiara lit more than waves—she sparked bravery itself.",
  
  "In a world where people traded emotions as currency, sadness was cheap, while joy cost a fortune. A boy named Dev discovered he could give laughter freely. People didn’t believe him until they felt lighter around him. He told jokes, danced badly, sang off-key—and gave joy away like water. Authorities tried to regulate him, fearing collapse of the emotion economy. But joy spread faster than rules. Children began laughing without price. Adults remembered play. Dev disappeared before they could capture him. Yet across cities, giggles rose like sunlight. The world changed. And all because one boy shared what couldn’t be sold.",
  
  "A town celebrated silence once a year—no talking, music, or noise. At first, tourists laughed. But those who stayed felt something shift. Birds sang louder. Wind whispered through trees. People communicated with glances, notes, smiles. Arguments dissolved. Love bloomed in gestures. A deaf child named Ria became the festival’s guide, teaching sign language and leading silent dances. Her voice was movement, and everyone followed. When the day ended, people cried—not from sadness, but gratitude. They’d finally heard the world without distraction. That single silent day became the most meaningful tradition. In stillness, they found connection deeper than any words could reach.",
  
  "A tailor named Yusuf stitched secrets into coats. A hidden poem under the sleeve, a stitched date inside the pocket, a memory under the collar. People said his coats felt like home. A grieving woman found a message from her late husband. A lonely boy discovered ‘You are enough’ sewn inside. Yusuf never explained how he knew what to write. He said he just listened carefully. His shop was small, no sign outside, yet always full. Years later, when Yusuf passed, they found no records—only needles, thread, and hundreds of unclaimed coats waiting to comfort someone who hadn’t arrived yet.",
  
  "At a busy train station, a stray dog greeted passengers every morning. Commuters named him Bhola. He followed tired office workers, sat beside crying students, and waited with lonely elders. His presence calmed the rush. A station master once tried to remove him, but protest erupted. Bhola stayed. When a child went missing, Bhola found her behind the tracks. News spread. Tourists came to meet the ‘dog with a heart.’ A statue was erected in his honor after his passing. But most didn’t need the statue—they remembered his soft eyes and warm presence. Bhola taught them loyalty without a single word.",
  
  "In a snowy forest, animals gathered around a human for the first time. An old man named Hari lit a fire every winter evening and left food near it. At first, only rabbits came. Then foxes, deer, even a bear—but none harmed him. They sat in silence, sharing warmth. Hari never spoke, just smiled and nodded. He believed kindness needed no translation. When he passed, forest rangers found the animals surrounding the unlit fire—waiting. They lit it again. The tradition continued. No fences, no cages, just peace. Hari’s simple act bridged two worlds and reminded all that trust grows in warmth.",
  
  "A little girl wrote letters to the moon every night, believing it read them. Her parents humored her, placing answers near the window. One day, her letters stopped. She had fallen sick. That night, a glowing paper appeared with a message: 'Get well soon. I miss you.' Her parents hadn’t written it. Curious neighbors started seeing moonlit messages too—kind words, encouragement. No one could explain it. Scientists visited, but the notes stopped when studied. The girl recovered and resumed writing. So did the moon. Maybe magic doesn’t need proof. Maybe belief alone creates connection. And sometimes, love shines in return mail.",
  
  "A café had no menu. The owner, Reema, simply asked, ‘How’s your heart today?’ Based on your answer, she made a dish—spicy for anger, sweet for joy, warm for loneliness. At first, customers were confused. Then, comforted. The café became a place where people shared honestly. One customer, who hadn’t spoken in months, cried while sipping soup. Another met his future wife over shared tea for ‘hopeful hearts.’ Reema never charged fixed prices. People paid with poems, thanks, or songs. Her café thrived. Because while food fed stomachs, Reema’s gift fed souls. Her kitchen was healing disguised as hospitality, served in silence.",
  
  "An orphan named Vikram discovered a camera that captured feelings, not faces. A photo of a girl showed swirling curiosity. An old man’s picture glowed with grief. Vikram exhibited his photos in an alleyway gallery. People felt seen in new ways. A woman said her depression lifted after viewing her own ‘light still flickering.’ A thief returned a stolen purse after seeing his own guilt in a print. The camera’s origin was unknown. Vikram simply called it ‘The Mirror.’ When it stopped working, he continued taking photos—this time with his heart. Because he’d learned that truly seeing someone didn’t need technology.",
  
  "A young dancer named Rina was born without sound. Yet when she moved, people felt music. Her performances drew silent crowds who swayed and wept with her rhythm. Rina explained, ‘I hear with my skin, with memory, with love.’ A famous choreographer invited her to teach. Soon, dance studios across the country held ‘silent performances.’ Audiences learned to feel movement rather than hear beats. Rina changed the definition of music—not by defiance, but by embodiment. Her silence spoke volumes. She didn’t overcome her condition—she embraced it. And through her body, she proved that art listens best when nothing interrupts its heartbeat.",
  
  "In a town where shadows whispered truths, people feared walking at noon. A boy named Ishaan walked proudly, asking questions to his shadow. It answered with honesty. ‘You lied today.’ ‘You were kind today.’ People laughed until their shadows began whispering too. Some ran. Others listened. The town changed. Apologies increased. Secrets were released. No one understood the magic. But everyone agreed—once you listened to your own shadow, you couldn’t ignore who you were. Ishaan grew up and taught shadow-talk in schools. He believed we all had darkness—but it existed not to shame us, but to guide us into light.",
   "In a quiet town nestled between green hills, a curious child named Leo discovered a rusty key beneath an old oak tree. He showed it to his grandmother, who smiled knowingly and told him of a hidden room beneath their library. Guided by tales and blueprints, Leo and his friends searched endlessly. After weeks, they uncovered a hatch. Inside, they found dusty books, magical maps, and glowing stones. The room whispered secrets from the past, urging them to learn and protect history. Their discovery united the town, rekindling its love for stories, mysteries, and the boundless magic of imagination.",
  
  "Every morning, Maya walked along the riverside path, watching the sun rise behind misty mountains. She found peace in nature’s rhythm—the chirping birds, rustling leaves, and flowing waters. One day, she noticed a tiny bottle washed ashore, sealed with wax. Inside, a scroll contained a poem in a language she had never seen. Her curiosity led her to a local historian, who revealed it was ancient script from a forgotten civilization. Maya’s journey became one of discovery, research, and exploration. Through her efforts, the village gained recognition for its heritage, and Maya became its youngest cultural ambassador and historian.",
  
  "Jasper the cat was no ordinary feline. He wore a tiny backpack, loved strawberries, and spent hours exploring his neighborhood. Every evening, he’d return with something strange—a button, a ribbon, or even notes scribbled by strangers. His owner, Clara, puzzled over these discoveries. One day, she followed Jasper and found he was delivering letters between lonely neighbors. He had unknowingly built a small community. Inspired by her cat’s kindness, Clara organized a gathering. The street came alive with laughter, games, and shared meals. Jasper was hailed as a hero, proof that even quiet paws can leave the loudest impact.",
  
  "The town clock had stopped ticking for fifty years. Towering above the market square, its hands remained frozen at noon. Visitors found it charming, but locals knew the legend: whoever fixed the clock would unlock time itself. One stormy evening, a tinkerer named Finn arrived. Fascinated by the tale, he climbed the tower and worked tirelessly through wind and rain. As the gears turned and the hands moved again, a sudden stillness swept the town. For a brief second, memories flashed—long-forgotten dreams, lost loves, and childhood laughter. Time resumed, but the people had changed, more grateful and more awake.",
  
  "Lila spent every summer at her grandmother’s seaside cottage. It was a place filled with salt-kissed air, drifting gulls, and the sound of waves crashing at night. One summer, she found a sealed letter hidden in the attic, addressed to her from the past. It spoke of courage, loss, and love, written by her late grandfather during the war. Through the letter, Lila learned how their family survived hardships and how love sustained them. She decided to create a memory museum inside the cottage, preserving stories from others in town. Lila’s summers became sacred journeys through time and connection.",
  
  "Arjun loved solving puzzles. He could finish a Rubik’s Cube in under twenty seconds and escape rooms in minutes. On his birthday, he received a strange box with rotating discs, cryptic symbols, and no instructions. Obsessed, he studied it daily. Eventually, he aligned the patterns, and a hidden drawer revealed a map and an ancient coin. The map led to a centuries-old tree outside his city, where he unearthed a journal from an old explorer. Each page inspired Arjun to create his own puzzles. Soon, he became famous, designing games that challenged minds and sparked curiosity across the world.",
  
  "Rain poured heavily the night Emma decided to leave the city. Her suitcase held essentials: notebooks, art supplies, and one old photograph. She arrived in a small village by dawn, renting a quiet cottage overlooking hills. Days passed slowly, filled with walks, sketches, and tea with locals. She began to paint again—something she hadn’t done in years. Her art captured the village’s soul: its colors, laughter, and silence. Eventually, her gallery opened in the town square, attracting visitors from distant cities. Emma realized she didn’t need noise to feel alive. Peace, passion, and purpose had found her once again.",
  
  "The old library had a hidden door behind the third bookshelf on the second floor. Only those who read the right poem aloud could enter. Mia, a shy literature student, stumbled upon it one rainy afternoon. Inside, glowing shelves held books that told the reader’s own future. She was warned: knowing the future meant accepting the consequences. Curious, she read a page. It showed her becoming a bestselling author. Doubtful but inspired, she began writing daily. Years later, the vision came true. Mia often visited the secret library, but she never read another page—she preferred to write her own fate.",
  
  "In a futuristic world where dreams could be recorded and played, a young inventor named Theo revolutionized sleep. His device, the Somnia, let people revisit dreams, share them with loved ones, or analyze hidden meanings. But when Theo replayed his own dream, he saw a recurring figure calling for help. Driven by this mystery, he explored forgotten memories and old labs. Eventually, he uncovered an encrypted memory of his twin, long presumed lost. Somnia became more than a gadget—it became a bridge to the subconscious. Theo proved that dreams weren’t just random; they were reflections of truths waiting to awaken.",
  
  "Every Friday, Mr. Patel wrote anonymous notes of encouragement and left them in books at the public library. Children found confidence, teens found hope, and adults rediscovered joy. Nobody knew the author. One day, a librarian posted a thank-you letter on the noticeboard, signed by hundreds. Mr. Patel saw it, tears in his eyes. He revealed himself only once, quietly placing his final note: 'Kindness needs no name.' The town continued the tradition, with strangers leaving kind notes everywhere—benches, buses, classrooms. Mr. Patel’s simple habit ignited a culture of care, proving the smallest words could create the greatest ripples.",
  
  "During a solar eclipse, thirteen-year-old Zara noticed something strange—her shadow moved in the opposite direction. Curious, she followed it across the field, into the woods, and through a glowing archway. On the other side lay a mirror world, where time flowed backward, and memories were currency. Zara met her younger self, who reminded her of dreams she had forgotten. Before returning, she planted a glowing seed, which grew into a tree visible in both worlds. Back home, she became a storyteller, weaving tales inspired by the mirrored land. Everyone believed they were fiction, but Zara knew they were not.",
  
  "Kai lived on a floating island powered by wind turbines and solar panels. In a world overrun by pollution, their island was an eco-sanctuary built by their grandparents. One day, a damaged drone crashed nearby, containing a message from a stranded group needing help. Kai set off on a solar sailboat, guided only by stars and instinct. Through storms and calm, they reached the survivors and brought them back. Their island community grew, and Kai became a leader in sustainability and compassion. The story of their journey reminded the world that innovation and heart could still save what was lost.",
  
  "Amara had a voice that could mimic any sound—birdsong, engines, instruments, anything. She lived alone near the forest, using her gift to communicate with wildlife. Hunters and loggers once tried to invade, but she mimicked wolves, thunder, and cries for help so convincingly that they fled. Her abilities became legend, and she was called 'The Echo Witch.' One day, a lost child followed a deer into the woods. Amara guided the child home using a lullaby in their mother’s voice. The villagers, finally grateful, began protecting the forest. Amara’s sound became a symbol of harmony between humanity and nature.",
  
  "The museum’s most guarded artifact was a blank canvas. Every night, the security footage showed faint colors dancing across it. No one could explain it. Curious intern Lena stayed overnight and watched the canvas glow under moonlight. She saw her childhood, her fears, and her future within its swirls. It responded to emotion, painting what the soul projected. Scientists failed to analyze it, but artists felt understood by it. The canvas was eventually placed in a silent room, where visitors sat quietly, each seeing a different masterpiece. It proved that true art isn’t created—it’s reflected from within each observer.",
  
  "Tommy built tiny robots from junkyard parts. His creations danced, sang, and even fetched cookies. One day, he found a robotic dog with a cracked circuit board. After weeks of repairs, it barked joyfully and followed him everywhere. At school, Tommy’s dog helped shy kids make friends and disabled students feel included. Inspired, Tommy designed more bots for children in need. News of his kindness spread, and companies offered scholarships and labs. But Tommy’s dream stayed the same—to build companions for the lonely. His robots didn’t just perform tasks; they made people feel seen, heard, and cared for daily.",
   "The clock struck midnight as the wind howled across the barren fields, rustling the dry leaves scattered across the earth. Somewhere in the distance, a lone owl hooted, breaking the eerie silence that enveloped the countryside. Inside the old wooden cottage, a flickering candle cast shadows on the walls, dancing like spirits from another world. An old woman stirred her tea thoughtfully, eyes fixed on the fire. She remembered stories passed down for generations—of bravery, betrayal, and unfulfilled dreams. The air smelled of cinnamon and pine. Outside, the first snowflake landed gently, promising a new beginning for those who believed.",
  "On a remote island surrounded by endless ocean, a young inventor toiled inside a makeshift laboratory built from driftwood, metal scraps, and dreams. Each sunrise brought renewed determination as he recorded notes, adjusted gears, and tested wind-powered devices meant to change how the world worked. The seagulls watched with curiosity, and the waves whispered secrets in the language only the determined could understand. He believed invention was not just about function but about hope—about solving problems that had yet to appear. As the tide rolled in, he smiled, knowing every failure was just another step toward greatness waiting offshore.",
  "Underneath a violet sky speckled with stars, the forest came alive with sounds known only to the night. Fireflies blinked like coded messages between trees, and crickets played their symphonies in time with the wind’s rhythm. A fox trotted through the underbrush, careful and silent, avoiding roots and fallen logs. Nearby, a camper adjusted his telescope, focusing on Saturn’s glowing rings with awe. Nature held stories older than man, stories whispered in leaves and carved into stone. The moon rose higher, casting silver across the forest floor. All was still, yet every leaf and creature pulsed with vibrant purpose.",
  "In a bustling market square where colors clashed like festivals and music floated like perfume, a boy weaved through the crowd with pockets full of dreams. Vendors shouted deals while spices filled the air, each scent carrying a story of lands far beyond the horizon. The boy paused near a storyteller whose voice painted dragons, deserts, and dazzling cities in the minds of those who listened. Coins clinked, dancers spun, and the sun painted everything gold. Amid the chaos, the boy saw paths not taken, adventures yet to begin. And in that market, surrounded by wonder, he began to believe.",
  "Every morning, the librarian unlocked the dusty doors of the ancient library, where sunlight filtered through stained glass, casting stories onto the marble floor. Rows upon rows of books stood like silent guardians of forgotten ages. As she moved through the aisles, her fingers brushed spines worn by time, each one a gateway to a different world. Children would come, eyes wide, craving tales of courage and wonder. She smiled, knowing that behind each title lay a spark waiting to ignite imaginations. When the bell rang for closing, the stories remained, sleeping peacefully, until the next curious mind would awaken them."
];

  


let typingRandom3 =0;
function buttonTyping3() {
  sectionTypingTest3View.style.backgroundImage="url('https://img.freepik.com/premium-photo/white-background-with-light-it-word-light-bottom-right_689904-136099.jpg')"
  sectionTypingTest3View.style.backgroundSize="cover";
  sectionTypingTest3View.style.minHeight="100vh";
  typingHide3.classList.add("d-none");

  typingShow3.classList.remove("d-none");
  let typingRandom3 =Math.ceil(Math.random()*typingArr3.length);
  typingShow3.classList.add("d-block");
  typingQue3.textContent=typingArr3[typingRandom3];

  typingId3 = setInterval(function () {
    time3= time3 + 1;
    if (time3 <= 9) {
      typingTime3.textContent = "0" + time3;
    } else {
      typingTime3.textContent = time3;
    }
  }, 1000);
}



let typingBack3 = document.getElementById("typingBack3");
let typingHome3 = document.getElementById("typingHome3");


typingBack3.onclick = function () {
  clearInterval(typingId3);
  sectionTypingTest3View.style.backgroundImage="url('https://www.shutterstock.com/image-photo/abstract-background-polygons-on-white-600nw-463916900.jpg')"
  sectionTypingTest3View.style.backgroundSize="cover";
  sectionTypingTest3View.style.minHeight="100vh";
  time3 = 0;
  typingTime3.textContent = "00";
  typingAns3.value = "";
   let typingRandom3 =Math.ceil(Math.random()*typingArr3.length);
  typingShow3.classList.add("d-block");
  typingQue3.textContent=typingArr3[typingRandom3];
  typingStatus3.textContent = "";
  const typingBro3 = document.getElementById("typingBro3");
  if (typingBro3) typingBro3.remove();
  typingHide3.classList.remove("d-none");
  typingHide3.classList.add("d-block");
  typingShow3.classList.remove("d-block");
  typingShow3.classList.add("d-none");
};

typingHome3.onclick = function () {
  clearInterval(typingId3);
  time3 = 0;
  typingTime3.textContent = "00";
  typingAns3.value = "";
  typingStatus3.textContent = "";
   let typingRandom3 =Math.ceil(Math.random()*typingArr3.length);
  typingShow3.classList.add("d-block");
  typingQue3.textContent=typingArr3[typingRandom3];
  const typingBro3 = document.getElementById("typingBro3");
  if (typingBro3) typingBro3.remove();
  typingHide3.classList.remove("d-none");
  typingHide3.classList.add("d-block");
  typingShow3.classList.remove("d-block");
  typingShow3.classList.add("d-none");

};

function typingTest3() {
  if (typingAns3.value.trim() === typingQue3.textContent.trim()) {
    sectionTypingTest3View.style.backgroundImage="url('https://media.istockphoto.com/id/1407650461/vector/memphis-pattern-colorful-and-pop-geometric-background.jpg?s=612x612&w=0&k=20&c=EE4wNTJPalbfBsaCGKiLPyf2WqJF8wyVly3Rf5Ldm9A=')"
  sectionTypingTest3View.style.backgroundSize="cover";
  sectionTypingTest3View.style.minHeight="100vh";
    typingStatus3.textContent = "Correct";
    typingShow3.classList.remove("d-block");
    typingShow3.classList.add("d-none");
    typingHide3.classList.add("d-none");
    typingAns3.value = "";
    typingStatus3.textContent = "";
    clearInterval(typingId3);
     let typingRandom3 =Math.ceil(Math.random()*typingArr3.length);
  typingShow3.classList.add("d-block");
  typingQue3.textContent=typingArr3[typingRandom3];

    let container = document.createElement("div");
    container.id = "typingBro3";
    sectionTypingTest3View.appendChild(container);

    let row = document.createElement("div");
    row.classList.add("row");
    container.appendChild(row);

    let winnerImage = document.createElement("img");
    winnerImage.classList.add("col-12", "col-md-5");
    row.appendChild(winnerImage);
    winnerImage.setAttribute("src", "https://i.pinimg.com/originals/57/e2/09/57e209296e586933febadf06e271a3d3.gif");

    let cont = document.createElement("div");
    cont.classList.add("col-12", "d-flex", "col-md-7", "flex-column");
    row.appendChild(cont);

    let congrats = document.createElement("img");
    congrats.setAttribute("src", "https://www.pngplay.com/wp-content/uploads/12/Congratulations-Gifs-PNG-Free-File-Download.gif");
    cont.appendChild(congrats);

    let show = document.createElement("h2");
    cont.appendChild(show);
    show.classList.add("text-center");
    show.textContent = "You have completed 100 words in " + typingTime3.textContent + " sec";
    show.style.fontFamily="Poppins";
    show.style.fontWeight="bold"

    let buttonDiv = document.createElement("div");
    cont.appendChild(buttonDiv);
    buttonDiv.classList.add("text-center", "mt-4");

    let button = document.createElement("button");
    button.textContent = "Try Again!!";
    button.classList.add("button3", "btn", "btn-primary");
    buttonDiv.appendChild(button);

    container.classList.add("container");

    button.onclick = function () {
      container.remove();
      typingHide3.classList.remove("d-none");
      typingHide3.classList.add("d-block");
      typingShow3.classList.remove("d-none");
      typingShow3.classList.add("d-block");
      typingTime3.textContent = "00";
      time3 = 0;
      buttonTyping3();

      typingBack3.onclick = function () {
        clearInterval(typingId3);
        time3 = 0;
        typingTime3.textContent = "00";
        typingAns3.value = "";
        typingStatus3.textContent = "";
        const typingBro3 = document.getElementById("typingBro3");
        if (typingBro3) typingBro3.remove();
        typingHide3.classList.remove("d-none");
        typingHide3.classList.add("d-block");
        typingShow3.classList.remove("d-block");
        typingShow3.classList.add("d-none");
      };

      typingHome3.onclick = function () {
        clearInterval(typingId3);
        time3 = 0;
        typingTime3.textContent = "00";
        typingAns3.value = "";
        typingStatus3.textContent = "";
        const typingBro3 = document.getElementById("typingBro3");
        if (typingBro3) typingBro3.remove();
        typingHide3.classList.remove("d-none");
        typingHide3.classList.add("d-block");
        typingShow3.classList.remove("d-block");
        typingShow3.classList.add("d-none");
      };
    };
  } else {
    typingStatus3.textContent = "InCorrect";
    typingStatus3.style.color = "red";
  }
}


//typing4 

let typingTime4 = document.getElementById("typingTime4");
let time4 = 0;
let typingAns4= document.getElementById("typingAns4");
let typingQue4 = document.getElementById("typingQue4");
let typingStatus4 = document.getElementById("typingStatus4");

let sectionTypingTest4View=document.getElementById("sectionTypingTest4View");

let typingHide4 = document.getElementById("typingHide4");
let typingShow4 = document.getElementById("typingShow4");
let typingId4 = "";

const typingArr4 = [
  "In the heart of a bustling city, hidden between towering skyscrapers and neon-lit streets, stood a tiny bookstore that time had almost forgotten. It was filled with ancient pages, leather-bound volumes, and the scent of curiosity. Every evening, an old man with silver-rimmed glasses sat behind the counter, sipping tea and welcoming readers like old friends. He believed each visitor had a story waiting to be discovered in the pages. One rainy evening, a young girl wandered in, drawn by the golden glow spilling through the doorway. She found a dusty book titled 'The Lost Path' and opened it curiously. Suddenly, the shop faded. She found herself in a land of meadows, castles, and creatures from legend. There were quests, riddles, and friendships she never imagined. Each step led her deeper into the mystery. The old man watched from afar, smiling, knowing the shop had chosen her. Days passed outside, but time within obeyed no rules. When she returned, heart full and eyes wide, she thanked him. He simply nodded, pointing to the shelves. 'The right book finds the right soul,' he said. From then on, she visited often, searching stories not just to read—but to live, again and again.",
  
  "Every morning before sunrise, a solitary runner laced his shoes and stepped into the stillness of dawn. The city slept, yet he moved through it like a whisper—passing lampposts, crossing silent intersections, and gliding along empty sidewalks. He ran not for fame, nor competition, but for clarity. His mind, cluttered with deadlines and obligations, found rhythm in the pounding of his feet and the inhale-exhale tempo that matched the beat of his heart. Some days, he raced his regrets. Other days, he chased dreams still forming in the mists of morning. Birds began their song as he climbed the last hill, the first rays of sunlight spilling over the skyline. He would pause there, sweat dripping, chest heaving, and just look. The city awakened slowly: coffee brewed behind windows, children stirred in their beds, and lights flickered on one by one. In those moments, he felt grounded, connected, alive. It wasn’t just exercise—it was therapy. A moving meditation where thoughts settled and worries softened. By the time he returned home, the world was different, but so was he. He carried the peace of the morning with him, a silent victory earned one step at a time, every single day.",
  
  "In a quiet coastal village, fishermen told tales of a mysterious light that danced on the waves every full moon. Some claimed it was a ghost ship, others swore it was a message from the sea gods. Among the villagers was a curious teenager named Lila, who had heard the stories all her life and finally decided to uncover the truth. On the next full moon, she rowed alone into the shimmering bay, guided only by the stars and her determination. Hours passed, and the village lights faded behind her. Then, suddenly, the water glowed with an ethereal blue, swirling like liquid stars. A shape emerged—no ship, no ghost, but a pod of glowing dolphins moving in perfect harmony, their bodies illuminated by rare bioluminescence. Mesmerized, Lila watched as they swam around her boat, clicking and chirping, forming patterns like a dance. She realized this was nature’s wonder, misinterpreted by generations. She returned before dawn, her eyes shining. She didn’t speak much of what she saw, choosing instead to write and paint it. Her art inspired others to look closer at the world. Not all magic is fantasy—some of it swims quietly beneath the waves, waiting for someone willing to see.",
  
  "The mountain village of Arwen sat high above the clouds, reachable only by a winding trail hugged tightly by cliffs and mist. Its people lived simple lives, growing herbs, weaving fabrics, and singing songs passed down through centuries. One day, a young orphan named Kael discovered an old flute carved from bone and etched with strange runes in a forgotten corner of the monastery. He blew gently into it, and the melody that followed made the skies shimmer. The next morning, the villagers woke to find the fields blossoming with vibrant flowers, the air clearer, and the streams flowing with sweetness. They believed it a blessing, and Kael, once overlooked, was suddenly revered. But he remained humble, using the flute only when needed, understanding its magic wasn’t his—it was shared through intent. Over time, travelers made pilgrimages to hear Kael’s music, leaving transformed by its purity. Still, he never asked for gold or praise. He simply played, eyes closed, heart open. The village prospered, not through power, but harmony. And when Kael grew old, he passed the flute to another child who needed to be seen. Legends say its music still echoes through Arwen, a lullaby of balance between nature, people, and sound.",
  
  "In the center of a desert where nothing seemed to grow, a strange metallic dome glistened under the burning sun. It was known simply as ‘The Echo Chamber,’ built decades ago by an inventor who believed sound could shape reality. Inside, every word spoken reverberated endlessly, growing stronger instead of fading. Over time, people feared its power. They whispered that lies grew into storms and anger turned to earthquakes within those walls. The chamber was locked and forgotten. But one day, a linguist named Aria found it while mapping ancient ruins. Drawn by curiosity, she entered and spoke a single word: ‘Peace.’ It trembled softly, then swelled—filling the dome with warmth and light. The air shifted, and the cracked ground outside began to heal. Flowers sprouted, winds calmed, and a spring bubbled nearby. Aria realized the chamber had never been cursed—just misunderstood. She stayed, inviting others to speak kindness and truth inside. Pilgrims came, and the desert bloomed. No one ruled there. Words were the only law, and silence was sacred. The world took notice. Cities built their own echo domes, where leaders had to hear their promises over and over. And slowly, change came, not from power—but from words chosen with care.",
  "At the edge of the northern cliffs stood a lighthouse older than memory itself, battered by storms and kissed by countless sunsets. For centuries, it had guarded sailors from peril, its light a promise of safety. The keeper, an old man named Elias, rarely spoke, but every night he lit the great lamp with care, whispering to the sea as if it could hear. One day, a storm unlike any before approached. Waves taller than towers crashed against the rocks, and the wind screamed. The villagers urged Elias to flee, but he stayed, knowing no ship would survive without the beacon. As lightning tore the sky, the lighthouse stood firm. When dawn arrived, not a single life was lost. Elias, exhausted but smiling, watched the sun rise with pride. They called him a hero, but he shrugged. 'The light was the hero,' he said. Years later, he passed quietly, and the villagers kept the light burning in his memory. To this day, sailors navigating those treacherous waters speak of the steadfast flame and the man who trusted it. They say the sea itself bows in respect when it nears that cliff, where courage once stood tall against the storm’s fury.",
  
  "Deep within an ancient jungle untouched by time, a team of explorers uncovered a temple covered in moss, vines, and silence. Each stone bore carvings of creatures never seen in any known records, and golden orbs decorated the altar at its heart. Professor Lyra, leading the expedition, believed this was the Temple of Elaron, a civilization lost in myth. When they entered, the air grew thick with mystery. Inside, murals depicted the rise and fall of a peaceful people ruled not by kings but by wisdom itself. As Lyra traced her fingers across the symbols, a low hum began to echo. The team panicked, but she stood calm. A mechanism triggered, revealing a staircase descending into the earth. Below lay a library carved from crystal, filled with scrolls still glowing faintly. They weren't treasure hunters. They were historians. Lyra recorded, translated, and preserved everything. The world watched in awe as knowledge thought extinct returned. Children learned the old songs, scientists marveled at the ancient technologies. The temple was restored, not as a monument—but as a school. And Lyra, once seen as eccentric, became the bridge between forgotten wisdom and future possibility. In that jungle, the past became a path forward.",
  
  "In the freezing reaches of the Arctic, a young scientist named Rowan studied polar bears and the vanishing ice. His cabin, small and solar-powered, sat atop a snowy ridge overlooking the endless white. Every morning, he tracked paw prints, monitored temperatures, and recorded data in a journal bound in seal leather. But beyond the numbers, he felt a bond with the creatures. One day, he found a cub stranded on a broken ice floe, crying for its mother. Without hesitation, Rowan built a makeshift sled, wrapped the cub in his coat, and guided it across treacherous ice to safety. Observing nearby, the mother bear emerged silently, touching her nose to his gently before leading her cub away. Rowan never spoke of it, but something changed in him. He no longer just observed—he advocated. He wrote passionately, delivered speeches, and pushed for protection laws. His work inspired thousands. The Arctic was no longer a distant concept—it was a living, breathing world worth saving. Decades later, statues of Rowan and a bear cub stood outside wildlife institutes. And though he grew old, he returned every year, walking the snowy paths, hoping to see the bears one more time, grateful for their silent friendship.",
  
  "In a world where every person received a color at birth that defined their destiny, a girl named Mira was born colorless. While others displayed hues of courage, intellect, or creativity, she had none—her skin remained untouched by pigment. The village whispered, avoided her, assumed misfortune. But Mira believed there was purpose in her difference. She read every book, listened more than she spoke, and noticed things others overlooked. One day, the great Prism Tree that gave colors to newborns began to wither. The village panicked, believing their world would fall into chaos. Mira, unnoticed, approached the tree and touched its roots. Instantly, color flowed back—not into the tree—but into her. But not just one. Every shade swirled across her skin like a living painting. The tree bloomed brighter than ever. Elders realized she wasn’t cursed—she was balance. The village apologized, ashamed of their judgment. Mira didn’t scold them. She taught them. Over time, others born without color appeared, each with unique abilities beyond definition. And so, the world evolved. Destiny was no longer dictated by color—but by character. Mira became the first chronicler of the true spectrum, showing that identity isn’t painted outside—but written deep within.",
  
  "The town of Bellmere held a secret beneath its cobblestone streets—a network of tunnels filled with clocks, gears, and mechanical wonders. Built by a forgotten genius named Aldric, the labyrinth kept the town running silently, powering everything from streetlamps to the bakery’s oven. Few knew of its existence, but one boy named Finn, curious and clever, stumbled upon a hidden passage. Inside, he found blueprints, journals, and machines that responded to touch. Fascinated, he studied Aldric’s notes and began fixing the broken systems. Slowly, Bellmere seemed to breathe again: lights flickered steadily, windmills spun in perfect rhythm, and even the old bell tower chimed for the first time in decades. The mayor sought answers, but Finn remained anonymous. One night, he left a letter at the town square: 'Aldric’s gift lives on.' The people cheered. Instead of hiding, Finn taught others, forming the Clockwork Guild. Together, they maintained the underground marvel, honoring the legacy of invention. Bellmere became famous for its hidden engine, a symbol of curiosity and quiet service. And Finn, the boy with oil-stained hands and a brilliant mind, reminded the world that true change often begins below the surface—where gears turn and dreams take shape.",
   "In a quiet village where the stars shone brighter than streetlights, an old man named Harun spent each evening on his rooftop with a telescope. To the villagers, he was just a retired schoolteacher, but few knew he had once trained as an astronomer. As a boy, he’d dreamed of discovering a new planet, but war and responsibilities had pulled him away. Now, in his twilight years, he chased that dream once more. One crisp evening, he noticed a strange movement—something inconsistent with usual star paths. He recorded the data, night after night, until he was sure. It wasn’t a satellite or asteroid. With trembling hands, he submitted his findings. Weeks passed. Then came the call: confirmation. A new celestial body. The scientific community named it “Harun Minor.” His village erupted in pride. Children studied astronomy with wonder in their eyes. Harun didn’t boast; he simply said, 'Never let time steal your dreams.' Years later, when he passed away, the town held a stargazing night in his honor. And every year since, on the anniversary of his discovery, the village lights are turned off for one hour—so everyone can look up, remember Harun, and believe that dreams never expire.",

  "In a futuristic city suspended in the clouds, every building floated on anti-gravity cores, and people traveled by hover-disks rather than cars. Amid the wonder, lived a teenage mechanic named Elan who preferred tools over tech. While others relied on artificial intelligence for daily life, Elan built machines from scraps. One day, the city's core flickered—warning of imminent failure. Panic swept through the skies. Engineers scrambled with algorithms, but nothing worked. Elan, curious and brave, accessed the central gear room, which most believed was obsolete. Inside, he found the original mechanism built by the founders—beautifully mechanical and jammed by a single rusted bolt. Using only a wrench and some grease, he fixed it. The city stabilized. Leaders hailed the day as “The Gear Revival.” Elan was awarded honors, but more importantly, his love for tangible craft was restored in others. Workshops reopened, apprentices returned, and machinery found its place beside digital tools. The balance of progress and tradition returned. Elan built a floating workshop, where he taught both code and craft. In the city of clouds, his legacy was more grounded than gravity itself—reminding the world that sometimes, what holds everything together isn’t code, but a well-placed bolt.",

  "Amara, a linguist who spoke ten languages fluently, took a sabbatical from her university job to explore a remote island where an undocumented dialect was rumored to exist. Arriving by a tiny boat, she was welcomed by villagers whose songs echoed like ancient lullabies. With a notebook in hand, she began decoding their speech. What fascinated her wasn’t just the vocabulary—but how their words painted emotions instead of describing things. For them, 'rain' wasn’t a noun—it meant a memory. ‘Sun’ meant reconciliation. Over months, Amara immersed herself completely, learning to speak from the heart, not the mouth. She recorded their poetry, built the first-ever dictionary of emotional linguistics, and presented it to the world. Scholars called it the “Language of the Soul.” But more than academic recognition, Amara felt transformed. She realized people don’t lack communication—they lack connection. She returned to her campus but taught differently now. Her classes were filled with music, stories, and shared silence. The islanders’ gift rippled across continents. Couples, leaders, and communities started using this language to truly listen. Amara proved that understanding one another isn’t just about translation—it’s about presence. And somewhere on that island, the villagers still sing her name into every sunrise.",

  "A boy named Theo lived in a massive library run by machines. Shelves stretched beyond sight, cataloged by drones, and books were delivered via robotic arms. Raised among pages, Theo read everything—science, fantasy, languages, and forgotten myths. One day, power surged and the system glitched. Books stopped moving. The drones halted. Everyone panicked. But Theo, used to manually searching, wandered through the endless aisles and found a dusty book labeled “Manual Override.” Inside were instructions to reset the ancient core that controlled it all. Crawling through vents and maintenance shafts, he reached the chamber and flipped a series of levers exactly as described. The library rebooted. But more importantly, people began walking the aisles again. They discovered books on their own, talked about their favorites, and read beside each other. Theo’s quick thinking rekindled human curiosity. The library directors appointed him the youngest ever head of exploration. He didn’t wear a suit—he wore ink-stained sleeves and a flashlight on his head. Under his care, the library became more than a place to store knowledge—it became a place to share it. And long after, people still whispered stories about the boy who brought a mechanical world back to life using only a book.",

  "In the year 2135, Earth faced irreversible climate collapse. Cities flooded, deserts expanded, and food became synthetic. Amid this, a young botanist named Lira discovered a seed in an ancient museum, preserved in resin—a real apple seed from the 21st century. Experts dismissed it as a relic, but Lira believed it could grow. Using a climate-controlled greenhouse she built from scraps, she planted it. Days turned to weeks. Nothing. People mocked her. But she watered, sang, and waited. On the 37th day, a sprout emerged. News spread like wildfire. It became a symbol of hope. Scientists visited, but Lira guarded it fiercely. 'It doesn’t need science,' she said. 'It needs care.' Years passed. The tree bore fruit. People lined up to taste the first real apple in over a century. The President called it “The Day of Renewal.” Lira didn’t care for fame. She distributed seeds, taught children how to plant, and rebuilt urban gardens. Her act sparked a movement. Greenhouses popped up on rooftops, balconies, and even underground. The apple became the icon of a planet healing itself. Lira's seed wasn’t just a tree—it was a declaration: that patience and belief can root even in a dying world and bloom again.",
];


let typingRandom4 =0;
function buttonTyping4() {
  sectionTypingTest4View.style.backgroundImage="url('https://img.freepik.com/premium-photo/white-background-with-light-it-word-light-bottom-right_689904-136099.jpg')"
  sectionTypingTest4View.style.backgroundSize="cover";
  sectionTypingTest4View.style.minHeight="100vh";
  typingHide4.classList.add("d-none");

  typingShow4.classList.remove("d-none");
  let typingRandom4 =Math.ceil(Math.random()*typingArr4.length);
  typingShow4.classList.add("d-block");
  typingQue4.textContent=typingArr4[typingRandom4];

  typingId4 = setInterval(function () {
    time4 = time4 + 1;
    if (time4 <= 9) {
      typingTime4.textContent = "0" + time4;
    } else {
      typingTime4.textContent = time4;
    }
  }, 1000);
}



let typingBack4 = document.getElementById("typingBack4");
let typingHome4 = document.getElementById("typingHome4");


typingBack4.onclick = function () {
  clearInterval(typingId4);
  sectionTypingTest4View.style.backgroundImage="url('https://www.shutterstock.com/image-photo/abstract-background-polygons-on-white-600nw-463916900.jpg')"
  sectionTypingTest4View.style.backgroundSize="cover";
  sectionTypingTest4View.style.minHeight="100vh";
  time4 = 0;
  typingTime4.textContent = "00";
  typingAns4.value = "";
   let typingRandom4 =Math.ceil(Math.random()*typingArr4.length);
  typingShow4.classList.add("d-block");
  typingQue4.textContent=typingArr4[typingRandom4];
  typingStatus4.textContent = "";
  const typingBro4 = document.getElementById("typingBro4");
  if (typingBro4) typingBro4.remove();
  typingHide4.classList.remove("d-none");
  typingHide4.classList.add("d-block");
  typingShow4.classList.remove("d-block");
  typingShow4.classList.add("d-none");
};

typingHome4.onclick = function () {
  clearInterval(typingId4);
  time4 = 0;
  typingTime4.textContent = "00";
  typingAns4.value = "";
  typingStatus4.textContent = "";
   let typingRandom4 =Math.ceil(Math.random()*typingArr4.length);
  typingShow4.classList.add("d-block");
  typingQue4.textContent=typingArr4[typingRandom4];
  const typingBro4 = document.getElementById("typingBro4");
  if (typingBro4) typingBro4.remove();
  typingHide4.classList.remove("d-none");
  typingHide4.classList.add("d-block");
  typingShow4.classList.remove("d-block");
  typingShow4.classList.add("d-none");

};

function typingTest4() {
  if (typingAns4.value.trim() === typingQue4.textContent.trim()) {
    sectionTypingTest4View.style.backgroundImage="url('https://media.istockphoto.com/id/1407650461/vector/memphis-pattern-colorful-and-pop-geometric-background.jpg?s=612x612&w=0&k=20&c=EE4wNTJPalbfBsaCGKiLPyf2WqJF8wyVly3Rf5Ldm9A=')"
  sectionTypingTest4View.style.backgroundSize="cover";
  sectionTypingTest4View.style.minHeight="100vh";
    typingStatus4.textContent = "Correct";
    typingShow4.classList.remove("d-block");
    typingShow4.classList.add("d-none");
    typingHide4.classList.add("d-none");
    typingAns4.value = "";
    typingStatus4.textContent = "";
    clearInterval(typingId4);
     let typingRandom4 =Math.ceil(Math.random()*typingArr4.length);
  typingShow4.classList.add("d-block");
  typingQue4.textContent=typingArr4[typingRandom4];

    let container = document.createElement("div");
    container.id = "typingBro4";
    sectionTypingTest4View.appendChild(container);

    let row = document.createElement("div");
    row.classList.add("row");
    container.appendChild(row);

    let winnerImage = document.createElement("img");
    winnerImage.classList.add("col-12", "col-md-5");
    row.appendChild(winnerImage);
    winnerImage.setAttribute("src", "https://i.pinimg.com/originals/57/e2/09/57e209296e586933febadf06e271a3d3.gif");

    let cont = document.createElement("div");
    cont.classList.add("col-12", "d-flex", "col-md-7", "flex-column");
    row.appendChild(cont);

    let congrats = document.createElement("img");
    congrats.setAttribute("src", "https://www.pngplay.com/wp-content/uploads/12/Congratulations-Gifs-PNG-Free-File-Download.gif");
    cont.appendChild(congrats);

    let show = document.createElement("h2");
    cont.appendChild(show);
    show.classList.add("text-center");
    show.textContent = "You have completed 200 words in " + typingTime4.textContent + " sec";
    show.style.fontFamily="Poppins";
    show.style.fontWeight="bold"

    let buttonDiv = document.createElement("div");
    cont.appendChild(buttonDiv);
    buttonDiv.classList.add("text-center", "mt-4");

    let button = document.createElement("button");
    button.textContent = "Try Again!!";
    button.classList.add("button3", "btn", "btn-primary");
    buttonDiv.appendChild(button);

    container.classList.add("container");

    button.onclick = function () {
      container.remove();
      typingHide4.classList.remove("d-none");
      typingHide4.classList.add("d-block");
      typingShow4.classList.remove("d-none");
      typingShow4.classList.add("d-block");
      typingTime4.textContent = "00";
      time4 = 0;
      buttonTyping4();

      typingBack4.onclick = function () {
        clearInterval(typingId4);
        time4 = 0;
        typingTime4.textContent = "00";
        typingAns4.value = "";
        typingStatus4.textContent = "";
        const typingBro4 = document.getElementById("typingBro4");
        if (typingBro4) typingBro4.remove();
        typingHide4.classList.remove("d-none");
        typingHide4.classList.add("d-block");
        typingShow4.classList.remove("d-block");
        typingShow4.classList.add("d-none");
      };

      typingHome4.onclick = function () {
        clearInterval(typingId4);
        time4 = 0;
        typingTime4.textContent = "00";
        typingAns4.value = "";
        typingStatus4.textContent = "";
        const typingBro4 = document.getElementById("typingBro4");
        if (typingBro4) typingBro4.remove();
        typingHide4.classList.remove("d-none");
        typingHide4.classList.add("d-block");
        typingShow4.classList.remove("d-block");
        typingShow4.classList.add("d-none");
      };
    };
  } else {
    typingStatus4.textContent = "InCorrect";
    typingStatus4.style.color = "red";
  }
}

//coding JAVA 

let javaButton=document.getElementById("javaButton");
let javaButton1=document.getElementById("javaButton1");
let javaButton2=document.getElementById("javaButton2");
let javaButton3=document.getElementById("javaButton3");
let javaLevel=0;
let javaCodingTest=document.getElementById("javaCodingTest");
let javaTimer=document.getElementById("javaTimer");
javaButton1.onclick=function(){
  javaButton2.disabled=true;
  javaButton3.disabled=true;
  javaLevel=1;

  javaButton.classList.remove("d-none");
  javaButton.classList.add("d-block")

}
javaButton2.onclick=function(){
  javaButton1.disabled=true;
  javaButton3.disabled=true;
  javaLevel=2;
  
  javaButton.classList.remove("d-none");
  javaButton.classList.add("d-block")

  
}
javaButton3.onclick=function(){
  javaButton2.disabled=true;
  javaButton1.disabled=true;
  javaLevel=3;
  
  javaButton.classList.remove("d-none");
  javaButton.classList.add("d-block")

}


let javaTime=0;

 let codingJavaShow = document.getElementById("codingJavaShow");
  let codingJavaHide = document.getElementById("codingJavaHide");
  let codingJavaBack=document.getElementById("codingJavaBack");

  codingJavaBack.onclick=function(){
    codingJavaShow.classList.add("d-none");
    codingJavaHide.classList.remove("d-none");
  }

 let codingJava1Arr = [
  {
    ques: "Who invented Java?",
    quesType: "mcq",
    op1: "James Gosling",
    op2: "Dennis Ritchie",
    op3: "Guido van Rossum",
    op4: "Bjarne Stroustrup",
    ans: "James Gosling"
  },
  {
    ques: "Which company originally developed Java?",
    quesType: "mcq",
    op1: "Microsoft",
    op2: "Sun Microsystems",
    op3: "Apple",
    op4: "Google",
    ans: "Sun Microsystems"
  },
  {
    ques: "What is the extension of Java bytecode files?",
    quesType: "mcq",
    op1: ".java",
    op2: ".class",
    op3: ".js",
    op4: ".py",
    ans: ".class"
  },
  {
    ques: "Which keyword is used to inherit a class in Java?",
    quesType: "mcq",
    op1: "this",
    op2: "super",
    op3: "extends",
    op4: "implements",
    ans: "extends"
  },
  {
    ques: "Which method is the entry point of any Java program?",
    quesType: "mcq",
    op1: "start()",
    op2: "main()",
    op3: "init()",
    op4: "run()",
    ans: "main()"
  },

  {
    ques: "Java is a ___ programming language.",
    quesType: "fill",
    ans: "high-level"
  },
  {
    ques: "The keyword ___ is used to create a new object in Java.",
    quesType: "fill",
    ans: "new"
  },
  {
    ques: "Java supports ___ inheritance through interfaces.",
    quesType: "fill",
    ans: "multiple"
  },
  {
    ques: "JVM stands for ___ Virtual Machine.",
    quesType: "fill",
    ans: "Java"
  },
  {
    ques: "The default value of a boolean variable in Java is ___.",
    quesType: "fill",
    ans: "false"
  }
  ,
   {
    ques: "Which of these is not a Java keyword?",
    quesType: "mcq",
    op1: "static",
    op2: "Boolean",
    op3: "final",
    op4: "void",
    ans: "Boolean"
  },
  {
    ques: "What is the size of int in Java?",
    quesType: "mcq",
    op1: "4 bytes",
    op2: "2 bytes",
    op3: "8 bytes",
    op4: "Depends on system",
    ans: "4 bytes"
  },
  {
    ques: "Which operator is used for addition in Java?",
    quesType: "mcq",
    op1: "+",
    op2: "-",
    op3: "*",
    op4: "%",
    ans: "+"
  },
  {
    ques: "What does JVM stand for?",
    quesType: "mcq",
    op1: "Java Virtual Machine",
    op2: "Java Variable Method",
    op3: "Java Verified Machine",
    op4: "Joint Virtual Module",
    ans: "Java Virtual Machine"
  },
  {
    ques: "Which keyword is used to define a class in Java?",
    quesType: "mcq",
    op1: "class",
    op2: "define",
    op3: "struct",
    op4: "object",
    ans: "class"
  },
  {
    ques: "Which data type is used to create a variable that should store text?",
    quesType: "mcq",
    op1: "string",
    op2: "String",
    op3: "text",
    op4: "char",
    ans: "String"
  },
  {
    ques: "Which of these is a loop structure in Java?",
    quesType: "mcq",
    op1: "if",
    op2: "for",
    op3: "switch",
    op4: "try",
    ans: "for"
  },
  {
    ques: "How do you start a single-line comment in Java?",
    quesType: "mcq",
    op1: "//",
    op2: "/*",
    op3: "#",
    op4: "--",
    ans: "//"
  },
  {
    ques: "Which keyword is used to return a value from a method?",
    quesType: "mcq",
    op1: "return",
    op2: "break",
    op3: "continue",
    op4: "exit",
    ans: "return"
  },
  {
    ques: "Which access modifier makes members visible to all classes?",
    quesType: "mcq",
    op1: "private",
    op2: "protected",
    op3: "public",
    op4: "default",
    ans: "public"
  },
  {
    ques: "What is the output of the following code?\nSystem.out.println(1 + 2);",
    quesType: "fill",
    ans: "3"
  },
  {
    ques: "What is the output of the following code?\nSystem.out.println(\"Hello \" + \"World\");",
    quesType: "fill",
    ans: "Hello World"
  },
  {
    ques: "What is the output of the following code?\nSystem.out.println(10 / 2);",
    quesType: "fill",
    ans: "5"
  },
  {
    ques: "What is the output of the following code?\nSystem.out.println(5 * 3);",
    quesType: "fill",
    ans: "15"
  },
  {
    ques: "What is the output of the following code?\nSystem.out.println(\"Java\".length());",
    quesType: "fill",
    ans: "4"
  },
  {
    ques: "What is the output of the following code?\nSystem.out.println(10 % 3);",
    quesType: "fill",
    ans: "1"
  },
  {
    ques: "What is the output of the following code?\nint a = 5; int b = 10; System.out.println(a + b);",
    quesType: "fill",
    ans: "15"
  },
  {
    ques: "What is the output of the following code?\nint x = 10; System.out.println(x++);",
    quesType: "fill",
    ans: "10"
  },
  {
    ques: "What is the output of the following code?\nint x = 10; System.out.println(++x);",
    quesType: "fill",
    ans: "11"
  },
  {
    ques: "What is the output of the following code?\nSystem.out.println(\"A\" + 1);",
    quesType: "fill",
    ans: "A1"
  }
  ,
  {
  ques: "Which concept allows objects to take many forms in Java?",
  quesType: "mcq",
  op1: "Encapsulation",
  op2: "Abstraction",
  op3: "Polymorphism",
  op4: "Inheritance",
  ans: "Polymorphism"
},
{
  ques: "Which keyword is used to inherit a class in Java?",
  quesType: "mcq",
  op1: "extends",
  op2: "inherits",
  op3: "implement",
  op4: "import",
  ans: "extends"
},
{
  ques: "What is it called when you restrict access to internal details?",
  quesType: "mcq",
  op1: "Abstraction",
  op2: "Inheritance",
  op3: "Encapsulation",
  op4: "Polymorphism",
  ans: "Encapsulation"
},
{
  ques: "Which OOP concept is used to hide complex implementation?",
  quesType: "mcq",
  op1: "Polymorphism",
  op2: "Encapsulation",
  op3: "Abstraction",
  op4: "Inheritance",
  ans: "Abstraction"
},
{
  ques: "Which keyword is used to achieve abstraction in Java?",
  quesType: "mcq",
  op1: "extends",
  op2: "interface",
  op3: "private",
  op4: "final",
  ans: "interface"
},
{
  ques: "Which concept allows code reusability in Java?",
  quesType: "mcq",
  op1: "Encapsulation",
  op2: "Abstraction",
  op3: "Inheritance",
  op4: "Polymorphism",
  ans: "Inheritance"
},
{
  ques: "Which access modifier provides the highest level of access?",
  quesType: "mcq",
  op1: "private",
  op2: "protected",
  op3: "public",
  op4: "default",
  ans: "public"
},
{
  ques: "What is it called when a subclass provides a specific implementation of a method?",
  quesType: "mcq",
  op1: "Method Overloading",
  op2: "Method Hiding",
  op3: "Method Overriding",
  op4: "Method Linking",
  ans: "Method Overriding"
},
{
  ques: "Which keyword prevents a class from being inherited?",
  quesType: "mcq",
  op1: "abstract",
  op2: "final",
  op3: "static",
  op4: "private",
  ans: "final"
},
{
  ques: "Which keyword is used to call a parent class constructor?",
  quesType: "mcq",
  op1: "this",
  op2: "super",
  op3: "extends",
  op4: "base",
  ans: "super"
}
,
{
  ques: "What is the output?\nclass A { int x = 10; } class B extends A { int y = 5; }\npublic class Test { public static void main(String[] args) { B b = new B(); System.out.println(b.x); } }",
  quesType: "fill",
  ans: "10"
},
{
  ques: "What is the output?\nclass A { void show() { System.out.println(\"A\"); } } class B extends A { void show() { System.out.println(\"B\"); } } public class Test { public static void main(String[] args) { A obj = new B(); obj.show(); } }",
  quesType: "fill",
  ans: "B"
},
{
  ques: "What is the output?\nclass A { A() { System.out.println(\"A constructor\"); } } class B extends A { B() { System.out.println(\"B constructor\"); } } public class Test { public static void main(String[] args) { new B(); } }",
  quesType: "fill",
  ans: "A constructor\nB constructor"
},
{
  ques: "What is the output?\nclass Test { public static void main(String[] args) { String s = \"Hello\"; System.out.println(s instanceof String); } }",
  quesType: "fill",
  ans: "true"
},
{
  ques: "What is the output?\nabstract class A { abstract void msg(); } class B extends A { void msg() { System.out.println(\"Hello\"); } } class Test { public static void main(String[] args) { A obj = new B(); obj.msg(); } }",
  quesType: "fill",
  ans: "Hello"
},
{
  ques: "What is the output?\ninterface A { int x = 5; } class Test implements A { public static void main(String[] args) { System.out.println(x); } }",
  quesType: "fill",
  ans: "5"
},
{
  ques: "What is the output?\nclass A { void show() { System.out.println(\"A\"); } void display() { this.show(); } } class B extends A { void show() { System.out.println(\"B\"); } } public class Test { public static void main(String[] args) { A obj = new B(); obj.display(); } }",
  quesType: "fill",
  ans: "B"
},
{
  ques: "What is the output?\nclass A { void show() { System.out.println(\"A\"); } } class B extends A { void show() { super.show(); System.out.println(\"B\"); } } public class Test { public static void main(String[] args) { B obj = new B(); obj.show(); } }",
  quesType: "fill",
  ans: "A\nB"
},
{
  ques: "What is the output?\nclass A { static void show() { System.out.println(\"Static A\"); } } class B extends A { static void show() { System.out.println(\"Static B\"); } } public class Test { public static void main(String[] args) { A.show(); B.show(); } }",
  quesType: "fill",
  ans: "Static A\nStatic B"
},
{
  ques: "What is the output?\nclass Parent { void greet() { System.out.println(\"Hi from Parent\"); } } class Child extends Parent {} public class Test { public static void main(String[] args) { Child c = new Child(); c.greet(); } }",
  quesType: "fill",
  ans: "Hi from Parent"
}
,
{
  ques: "How many times will this loop run?\nfor(int i = 0; i < 5; i++)",
  quesType: "mcq",
  op1: "4",
  op2: "5",
  op3: "6",
  op4: "0",
  ans: "5"
},
{
  ques: "What is the output of:\nfor(int i=1; i<=3; i++) System.out.print(i);",
  quesType: "mcq",
  op1: "123",
  op2: "012",
  op3: "345",
  op4: "321",
  ans: "123"
},
{
  ques: "Which part of the for loop is executed only once?",
  quesType: "mcq",
  op1: "Condition",
  op2: "Initialization",
  op3: "Increment",
  op4: "Body",
  ans: "Initialization"
},
{
  ques: "What is the output of:\nfor(int i=0; i<0; i++) System.out.print(\"Hi\");",
  quesType: "mcq",
  op1: "Hi",
  op2: "0",
  op3: "No output",
  op4: "Error",
  ans: "No output"
},
{
  ques: "What is the output of:\nfor(int i=5; i>0; i--) System.out.print(i);",
  quesType: "mcq",
  op1: "54321",
  op2: "12345",
  op3: "5432",
  op4: "4321",
  ans: "54321"
},
{
  ques: "Which keyword stops the current loop immediately?",
  quesType: "mcq",
  op1: "return",
  op2: "exit",
  op3: "continue",
  op4: "break",
  ans: "break"
},
{
  ques: "What is the output of:\nfor(int i=0; i<3; i+=2) System.out.print(i);",
  quesType: "mcq",
  op1: "01",
  op2: "012",
  op3: "02",
  op4: "13",
  ans: "02"
},
{
  ques: "Which statement skips to the next iteration in a for loop?",
  quesType: "mcq",
  op1: "break",
  op2: "skip",
  op3: "pass",
  op4: "continue",
  ans: "continue"
},
{
  ques: "How many times will this run?\nfor(int i=10; i<10; i++)",
  quesType: "mcq",
  op1: "10",
  op2: "Infinite",
  op3: "1",
  op4: "0",
  ans: "0"
},
{
  ques: "Which loop structure is used for a known number of iterations?",
  quesType: "mcq",
  op1: "for",
  op2: "while",
  op3: "do-while",
  op4: "if",
  ans: "for"
}
,
{
  ques: "What is the output?\nfor(int i=0; i<3; i++) System.out.print(i);",
  quesType: "fill",
  ans: "012"
},
{
  ques: "What is the output?\nfor(int i=1; i<=5; i++) System.out.print(i*2 + \" \");",
  quesType: "fill",
  ans: "2 4 6 8 10 "
},
{
  ques: "What is the output?\nfor(int i=3; i>0; i--) System.out.print(i);",
  quesType: "fill",
  ans: "321"
},
{
  ques: "What is the output?\nint sum=0; for(int i=1; i<=3; i++) sum += i; System.out.print(sum);",
  quesType: "fill",
  ans: "6"
},
{
  ques: "What is the output?\nfor(int i=1; i<=2; i++) for(int j=1; j<=2; j++) System.out.print(i + j);",
  quesType: "fill",
  ans: "2345"
},
{
  ques: "What is the output?\nfor(int i=0; i<5; i+=2) System.out.print(i);",
  quesType: "fill",
  ans: "024"
},
{
  ques: "What is the output?\nfor(int i=10; i>=8; i--) System.out.print(i + \" \");",
  quesType: "fill",
  ans: "10 9 8 "
},
{
  ques: "What is the output?\nint count=0; for(int i=0; i<4; i++) count++; System.out.print(count);",
  quesType: "fill",
  ans: "4"
},
{
  ques: "What is the output?\nfor(int i=1; i<=3; i++) { if(i==2) continue; System.out.print(i); }",
  quesType: "fill",
  ans: "13"
},
{
  ques: "What is the output?\nfor(int i=1; i<=5; i++) { if(i==4) break; System.out.print(i); }",
  quesType: "fill",
  ans: "123"
}
,
{
  ques: "What is the output of:\nint a = 5;\nif(a > 0) System.out.print(\"Positive\"); else System.out.print(\"Negative\");",
  quesType: "mcq",
  op1: "Negative",
  op2: "Zero",
  op3: "Positive",
  op4: "Error",
  ans: "Positive"
},
{
  ques: "What is the correct way to write an if-else statement?",
  quesType: "mcq",
  op1: "if a > b then",
  op2: "if (a > b) {} else {}",
  op3: "if a > b: else:",
  op4: "if (a > b):",
  ans: "if (a > b) {} else {}"
},
{
  ques: "What is the output of:\nint x = 10;\nif(x == 10) System.out.print(\"Ten\"); else System.out.print(\"Not Ten\");",
  quesType: "mcq",
  op1: "Ten",
  op2: "Not Ten",
  op3: "10",
  op4: "Error",
  ans: "Ten"
},
{
  ques: "What is the output of:\nint x = 5;\nif(x > 5) System.out.print(\"A\"); else if(x == 5) System.out.print(\"B\"); else System.out.print(\"C\");",
  quesType: "mcq",
  op1: "A",
  op2: "B",
  op3: "C",
  op4: "Error",
  ans: "B"
},
{
  ques: "Which keyword is used to check another condition if 'if' is false?",
  quesType: "mcq",
  op1: "continue",
  op2: "elseif",
  op3: "else if",
  op4: "switch",
  ans: "else if"
},
{
  ques: "How many `if` or `else if` blocks can you use in a condition?",
  quesType: "mcq",
  op1: "Only 1",
  op2: "Unlimited",
  op3: "2",
  op4: "None",
  ans: "Unlimited"
},
{
  ques: "What is the output of:\nint num = -1;\nif(num > 0) System.out.print(\"Positive\"); else System.out.print(\"Negative or Zero\");",
  quesType: "mcq",
  op1: "Positive",
  op2: "Negative or Zero",
  op3: "Zero",
  op4: "Negative",
  ans: "Negative or Zero"
},
{
  ques: "Which symbol is used to compare equality in an if condition?",
  quesType: "mcq",
  op1: "=",
  op2: "==",
  op3: "===",
  op4: "!=",
  ans: "=="
},
{
  ques: "Which of the following is a correct condition in if statement?",
  quesType: "mcq",
  op1: "if(x = 5)",
  op2: "if x == 5",
  op3: "if(x == 5)",
  op4: "if x = 5",
  ans: "if(x == 5)"
},
{
  ques: "What is the output of:\nint x = 3;\nif(x > 5) System.out.print(\"Big\"); else System.out.print(\"Small\");",
  quesType: "mcq",
  op1: "Big",
  op2: "Small",
  op3: "Error",
  op4: "3",
  ans: "Small"
}
,
{
  ques: "What is the output?\nint x = 4;\nif(x % 2 == 0) System.out.print(\"Even\"); else System.out.print(\"Odd\");",
  quesType: "fill",
  ans: "Even"
},
{
  ques: "What is the output?\nint age = 18;\nif(age >= 18) System.out.print(\"Adult\"); else System.out.print(\"Minor\");",
  quesType: "fill",
  ans: "Adult"
},
{
  ques: "What is the output?\nint a = 10;\nif(a > 15) System.out.print(\"A\"); else if(a == 10) System.out.print(\"B\"); else System.out.print(\"C\");",
  quesType: "fill",
  ans: "B"
},
{
  ques: "What is the output?\nint a = 5, b = 10;\nif(a > b) System.out.print(\"A\"); else System.out.print(\"B\");",
  quesType: "fill",
  ans: "B"
},
{
  ques: "What is the output?\nint temp = 101;\nif(temp > 100) System.out.print(\"Boiling\"); else System.out.print(\"Not Boiling\");",
  quesType: "fill",
  ans: "Boiling"
},
{
  ques: "What is the output?\nint marks = 90;\nif(marks >= 90) System.out.print(\"A+\"); else if(marks >= 80) System.out.print(\"A\"); else System.out.print(\"B\");",
  quesType: "fill",
  ans: "A+"
},
{
  ques: "What is the output?\nint x = 0;\nif(x > 0) System.out.print(\"Positive\"); else if(x == 0) System.out.print(\"Zero\"); else System.out.print(\"Negative\");",
  quesType: "fill",
  ans: "Zero"
},
{
  ques: "What is the output?\nint x = 2;\nif(x == 2) System.out.print(\"Two\");",
  quesType: "fill",
  ans: "Two"
},
{
  ques: "What is the output?\nint n = 7;\nif(n % 2 == 0) System.out.print(\"Even\"); else System.out.print(\"Odd\");",
  quesType: "fill",
  ans: "Odd"
},
{
  ques: "What is the output?\nint score = 45;\nif(score >= 50) System.out.print(\"Pass\"); else System.out.print(\"Fail\");",
  quesType: "fill",
  ans: "Fail"
},
{
    ques: "What does OOP stand for?",
    quesType: "mcq",
    op1: "Object-Oriented Programming",
    op2: "Only Object Programming",
    op3: "Objective Oriented Process",
    op4: "Open Object Programming",
    ans: "Object-Oriented Programming"
  },
  {
    ques: "Which of the following is NOT a pillar of OOP?",
    quesType: "mcq",
    op1: "Encapsulation",
    op2: "Polymorphism",
    op3: "Abstraction",
    op4: "Compilation",
    ans: "Compilation"
  },
  {
    ques: "Which concept of OOP means hiding the internal details?",
    quesType: "mcq",
    op1: "Encapsulation",
    op2: "Inheritance",
    op3: "Polymorphism",
    op4: "Abstraction",
    ans: "Abstraction"
  },
  {
    ques: "Which keyword is used to inherit a class in Java?",
    quesType: "mcq",
    op1: "extends",
    op2: "implements",
    op3: "inherits",
    op4: "super",
    ans: "extends"
  },
  {
    ques: "What is polymorphism in OOP?",
    quesType: "mcq",
    op1: "Many forms",
    op2: "One form",
    op3: "No forms",
    op4: "None",
    ans: "Many forms"
  },
  {
    ques: "Which feature allows multiple methods with the same name but different parameters?",
    quesType: "mcq",
    op1: "Method Overloading",
    op2: "Method Overriding",
    op3: "Inheritance",
    op4: "Abstraction",
    ans: "Method Overloading"
  },
  {
    ques: "Which access modifier makes a member accessible only within its own class?",
    quesType: "mcq",
    op1: "private",
    op2: "public",
    op3: "protected",
    op4: "default",
    ans: "private"
  },
  {
    ques: "What is the name of the function that gets called when an object is created?",
    quesType: "mcq",
    op1: "Destructor",
    op2: "Constructor",
    op3: "Main method",
    op4: "Initializer",
    ans: "Constructor"
  },
  {
    ques: "Which of these is NOT true about interfaces?",
    quesType: "mcq",
    op1: "They can contain method declarations only",
    op2: "They can be instantiated",
    op3: "They support multiple inheritance",
    op4: "Classes implement interfaces",
    ans: "They can be instantiated"
  },
  {
    ques: "What is inheritance?",
    quesType: "mcq",
    op1: "Acquiring properties from another class",
    op2: "Hiding data",
    op3: "Writing multiple methods",
    op4: "Data binding",
    ans: "Acquiring properties from another class"
  },

  // Fill in the blanks
  {
    ques: "The process of hiding internal details and showing only functionality is called ________.",
    quesType: "fill",
    ans: "Abstraction"
  },
  {
    ques: "The keyword used to create a subclass from a superclass in Java is ________.",
    quesType: "fill",
    ans: "extends"
  },
  {
    ques: "A method with the same name but different parameters is called ________.",
    quesType: "fill",
    ans: "Method Overloading"
  },
  {
    ques: "The ability of a class to take many forms is known as ________.",
    quesType: "fill",
    ans: "Polymorphism"
  },
  {
    ques: "The access modifier which allows access only within the same class is ________.",
    quesType: "fill",
    ans: "private"
  },
  {
    ques: "The special method used to initialize objects is called ________.",
    quesType: "fill",
    ans: "Constructor"
  },
  {
    ques: "An ________ is a blueprint for creating objects in OOP.",
    quesType: "fill",
    ans: "Class"
  },
  {
    ques: "The feature that allows a subclass to provide a specific implementation of a method already defined in its superclass is called ________.",
    quesType: "fill",
    ans: "Method Overriding"
  },
  {
    ques: "Interfaces support ________ inheritance in Java.",
    quesType: "fill",
    ans: "Multiple"
  },
  {
    ques: "In OOP, ________ is the mechanism by which one class acquires the properties of another.",
    quesType: "fill",
    ans: "Inheritance"
  },
   {
    ques: "What will the following code print?<br>for(int i=1; i<=3; i++) {<br> for(int j=1; j<=3; j++) {<br> System.out.print(\"*\");<br> }<br> System.out.println();<br>}",
    quesType: "mcq",
    op1: "3x3 grid of *",
    op2: "Single line of ***",
    op3: "Nothing",
    op4: "Error",
    ans: "3x3 grid of *"
  },
  {
    ques: "Which loop structure is best suited for printing patterns like pyramids?<br>",
    quesType: "mcq",
    op1: "for loop",
    op2: "while loop",
    op3: "do-while loop",
    op4: "if statement",
    ans: "for loop"
  },
  {
    ques: "How many stars will be printed by the code:<br>for(int i=1; i<=5; i++) System.out.print(\"*\");",
    quesType: "mcq",
    op1: "1",
    op2: "5",
    op3: "10",
    op4: "0",
    ans: "5"
  },
  {
    ques: "What does the inner loop typically represent when printing patterns?",
    quesType: "mcq",
    op1: "Rows",
    op2: "Columns",
    op3: "Total patterns",
    op4: "None",
    ans: "Columns"
  },
  {
    ques: "To print a right-angled triangle pattern of * with 4 rows, how many stars are printed in the last row?",
    quesType: "mcq",
    op1: "1",
    op2: "2",
    op3: "3",
    op4: "4",
    ans: "4"
  },
  {
    ques: "Which symbol is used to print a hash (#) in patterns?",
    quesType: "mcq",
    op1: "\"*\"",
    op2: "\"#\"",
    op3: "\"$\"",
    op4: "\"@\"",
    ans: "\"#\""
  },
  {
    ques: "What will the output of this code be?<br>for(int i=1; i<=3; i++) {<br> for(int j=1; j<=i; j++) {<br> System.out.print(\"#\");<br> }<br> System.out.println();<br>}",
    quesType: "mcq",
    op1: "#<br>##<br>###",
    op2: "###<br>###<br>###",
    op3: "#######",
    op4: "Error",
    ans: "#<br>##<br>###"
  },
  {
    ques: "Which of the following is true about nested loops for pattern printing?",
    quesType: "mcq",
    op1: "Outer loop controls rows, inner loop controls columns",
    op2: "Inner loop controls rows, outer loop controls columns",
    op3: "Only one loop is enough",
    op4: "Loops not required",
    ans: "Outer loop controls rows, inner loop controls columns"
  },
  {
    ques: "What does the statement System.out.println(); do inside pattern printing?",
    quesType: "mcq",
    op1: "Moves to next line",
    op2: "Prints blank space",
    op3: "Prints star",
    op4: "Stops program",
    ans: "Moves to next line"
  },
  {
    ques: "What is printed by the following snippet?<br>for(int i=5; i>=1; i--) {<br> for(int j=1; j<=i; j++) {<br> System.out.print(\"*\");<br> }<br> System.out.println();<br>}",
    quesType: "mcq",
    op1: "Right-angled triangle decreasing from 5 to 1 stars",
    op2: "Increasing triangle from 1 to 5 stars",
    op3: "Square of 5x5 stars",
    op4: "Error",
    ans: "Right-angled triangle decreasing from 5 to 1 stars"
  },

  // Fill in the blanks
  {
    ques: "To print a square pattern of stars, you need ______ nested loops.",
    quesType: "fill",
    ans: "2"
  },
  {
    ques: "The outer loop usually controls the ______ in pattern printing.",
    quesType: "fill",
    ans: "rows"
  },
  {
    ques: "In a right-angled triangle pattern, the number of stars in row 3 is ______.",
    quesType: "fill",
    ans: "3"
  },
  {
    ques: "The symbol used to print in hash (#) pattern problems is ______.",
    quesType: "fill",
    ans: "#"
  },
  {
    ques: "The statement to move to the next line after each row in Java is ______.",
    quesType: "fill",
    ans: "System.out.println();"
  },
  {
    ques: "The inner loop in pattern printing controls the ______.",
    quesType: "fill",
    ans: "columns"
  },
  {
    ques: "To print an increasing star pattern from 1 to 5 stars, the outer loop runs from 1 to ______.",
    quesType: "fill",
    ans: "5"
  },
  {
    ques: "In nested loops, the inner loop completes all its iterations for each ______ of the outer loop.",
    quesType: "fill",
    ans: "iteration"
  },
  {
    ques: "To print a decreasing star pattern, the loop should run from a higher number to a ______ number.",
    quesType: "fill",
    ans: "lower"
  },
  {
    ques: "To print a right-angled triangle using #, the number of hashes in row 4 is ______.",
    quesType: "fill",
    ans: "4"
  },
  {
    ques: "What does the <b>break</b> statement do inside a loop?<br>",
    quesType: "mcq",
    op1: "Skips current iteration",
    op2: "Exits the loop immediately",
    op3: "Ends the program",
    op4: "Does nothing",
    ans: "Exits the loop immediately"
  },
  {
    ques: "What happens when <b>continue</b> is used inside a loop?<br>",
    quesType: "mcq",
    op1: "Exits the loop",
    op2: "Skips the rest of the current iteration and continues next",
    op3: "Ends the program",
    op4: "Repeats the entire loop",
    ans: "Skips the rest of the current iteration and continues next"
  },
  {
    ques: "In which loop(s) can <b>break</b> be used?<br>",
    quesType: "mcq",
    op1: "for loop only",
    op2: "while loop only",
    op3: "do-while loop only",
    op4: "All loops (for, while, do-while)",
    ans: "All loops (for, while, do-while)"
  },
  {
    ques: "What will be output of this code?<br>for(int i=1; i<=5; i++) {<br> if(i == 3) break;<br> System.out.print(i);<br>}",
    quesType: "mcq",
    op1: "12345",
    op2: "12",
    op3: "123",
    op4: "Error",
    ans: "12"
  },
  {
    ques: "What will this output?<br>for(int i=1; i<=5; i++) {<br> if(i == 3) continue;<br> System.out.print(i);<br>}",
    quesType: "mcq",
    op1: "12345",
    op2: "1245",
    op3: "345",
    op4: "Error",
    ans: "1245"
  },
  {
    ques: "Which statement is used to skip the current iteration inside loops?",
    quesType: "mcq",
    op1: "break",
    op2: "continue",
    op3: "return",
    op4: "exit",
    ans: "continue"
  },
  {
    ques: "What happens if <b>break</b> is used outside of any loop or switch?",
    quesType: "mcq",
    op1: "Compiles successfully",
    op2: "Compilation error",
    op3: "Runs and skips code",
    op4: "Runtime error",
    ans: "Compilation error"
  },
  {
    ques: "Which keyword stops the loop entirely?",
    quesType: "mcq",
    op1: "continue",
    op2: "break",
    op3: "exit",
    op4: "stop",
    ans: "break"
  },
  {
    ques: "What is the output?<br>int i = 1;<br>while(i <= 3) {<br> if(i == 2) { i++; continue; }<br> System.out.print(i);<br> i++;<br>}",
    quesType: "mcq",
    op1: "123",
    op2: "13",
    op3: "12",
    op4: "Error",
    ans: "13"
  },
  {
    ques: "The <b>continue</b> statement can be used to:",
    quesType: "mcq",
    op1: "Skip the entire loop",
    op2: "Skip rest of current iteration and continue loop",
    op3: "Exit the method",
    op4: "Pause the loop",
    ans: "Skip rest of current iteration and continue loop"
  },

  // Fill in the blanks
  {
    ques: "The <b>break</b> statement is used to ______ the loop immediately.",
    quesType: "fill",
    ans: "exit"
  },
  {
    ques: "The <b>continue</b> statement skips the ______ of the current iteration.",
    quesType: "fill",
    ans: "rest"
  },
  {
    ques: "The keyword used to skip the current iteration in a loop is ______.",
    quesType: "fill",
    ans: "continue"
  },
  {
    ques: "To stop a loop completely, we use the ______ statement.",
    quesType: "fill",
    ans: "break"
  },
  {
    ques: "The <b>break</b> statement is commonly used in switch and ______ statements.",
    quesType: "fill",
    ans: "loop"
  },
  {
    ques: "Using <b>continue</b> inside a loop skips to the ______ iteration.",
    quesType: "fill",
    ans: "next"
  },
  {
    ques: "If <b>break</b> is used outside a loop or switch, it causes a ______ error.",
    quesType: "fill",
    ans: "compilation"
  },
  {
    ques: "In a for loop, <b>continue</b> moves the control to the ______ expression.",
    quesType: "fill",
    ans: "increment/update"
  },
  {
    ques: "The <b>break</b> statement terminates the ______ or switch statement.",
    quesType: "fill",
    ans: "loop"
  },
  {
    ques: "To skip the current iteration and move to the next, use ______ statement.",
    quesType: "fill",
    ans: "continue"
  },
  {
    ques: "What is inheritance in Java?<br>",
    quesType: "mcq",
    op1: "Wrapping data and methods into a single unit",
    op2: "Acquiring properties and behaviors from a parent class",
    op3: "Hiding internal details of an object",
    op4: "Ability to create multiple methods with same name",
    ans: "Acquiring properties and behaviors from a parent class"
  },
  {
    ques: "Which keyword is used to inherit a class in Java?<br>",
    quesType: "mcq",
    op1: "implements",
    op2: "extends",
    op3: "inherits",
    op4: "super",
    ans: "extends"
  },
  {
    ques: "If class B inherits class A, what is class A called?<br>",
    quesType: "mcq",
    op1: "Child class",
    op2: "Derived class",
    op3: "Parent class",
    op4: "Interface",
    ans: "Parent class"
  },
  {
    ques: "Which of these is NOT a type of inheritance in Java?<br>",
    quesType: "mcq",
    op1: "Single inheritance",
    op2: "Multiple inheritance with classes",
    op3: "Multilevel inheritance",
    op4: "Hierarchical inheritance",
    ans: "Multiple inheritance with classes"
  },
  {
    ques: "Which keyword refers to the parent class constructor or method?<br>",
    quesType: "mcq",
    op1: "this",
    op2: "super",
    op3: "parent",
    op4: "base",
    ans: "super"
  },
  {
    ques: "Can a class inherit from multiple classes directly in Java?<br>",
    quesType: "mcq",
    op1: "Yes",
    op2: "No",
    op3: "Only abstract classes",
    op4: "Only interfaces",
    ans: "No"
  },
  {
    ques: "What is method overriding in inheritance?<br>",
    quesType: "mcq",
    op1: "Defining multiple methods with same name but different parameters",
    op2: "Providing new implementation of parent class method in child class",
    op3: "Using a method from parent without changes",
    op4: "Hiding a variable from parent class",
    ans: "Providing new implementation of parent class method in child class"
  },
  {
    ques: "What access modifier allows a child class to access parent class members?<br>",
    quesType: "mcq",
    op1: "private",
    op2: "public",
    op3: "protected",
    op4: "default",
    ans: "protected"
  },
  {
    ques: "Which of the following is an example of hierarchical inheritance?<br>",
    quesType: "mcq",
    op1: "One parent class with multiple child classes",
    op2: "One child class with multiple parent classes",
    op3: "A class inheriting from itself",
    op4: "None of the above",
    ans: "One parent class with multiple child classes"
  },
  {
    ques: "In Java, what does the Object class represent in inheritance?<br>",
    quesType: "mcq",
    op1: "A user-defined base class",
    op2: "A class with no methods",
    op3: "The root superclass of all classes",
    op4: "An interface",
    ans: "The root superclass of all classes"
  },

  // Fill in the blanks
  {
    ques: "Inheritance is a mechanism where a new class acquires properties from an existing ______ class.",
    quesType: "fill",
    ans: "parent"
  },
  {
    ques: "The keyword used to inherit a class in Java is ______.",
    quesType: "fill",
    ans: "extends"
  },
  {
    ques: "In inheritance, the class that inherits is called the ______ class.",
    quesType: "fill",
    ans: "child"
  },
  {
    ques: "The keyword ______ is used to access parent class members in the child class.",
    quesType: "fill",
    ans: "super"
  },
  {
    ques: "Java supports ______ inheritance through interfaces, not classes.",
    quesType: "fill",
    ans: "multiple"
  },
  {
    ques: "When a child class provides a specific implementation of a method already defined in the parent class, it is called ______.",
    quesType: "fill",
    ans: "method overriding"
  },
  {
    ques: "The ______ access modifier allows a child class to access parent class variables and methods.",
    quesType: "fill",
    ans: "protected"
  },
  {
    ques: "In multilevel inheritance, a class inherits from a ______ class which itself inherits from another class.",
    quesType: "fill",
    ans: "child"
  },
  {
    ques: "The root class of all classes in Java is called the ______ class.",
    quesType: "fill",
    ans: "Object"
  },
  {
    ques: "A class cannot inherit private members of its ______ class directly.",
    quesType: "fill",
    ans: "parent"
  }
  ,
  {
    ques: "Which of the following is a valid variable name in Java?<br>",
    quesType: "mcq",
    op1: "2ndVariable",
    op2: "variable_1",
    op3: "int",
    op4: "class",
    ans: "variable_1"
  },
  {
    ques: "Which data type is used to store decimal numbers?<br>",
    quesType: "mcq",
    op1: "int",
    op2: "float",
    op3: "boolean",
    op4: "char",
    ans: "float"
  },
  {
    ques: "What is the size of an int data type in Java?<br>",
    quesType: "mcq",
    op1: "4 bytes",
    op2: "2 bytes",
    op3: "8 bytes",
    op4: "1 byte",
    ans: "4 bytes"
  },
  {
    ques: "Which of the following is NOT a primitive data type in Java?<br>",
    quesType: "mcq",
    op1: "char",
    op2: "String",
    op3: "boolean",
    op4: "double",
    ans: "String"
  },
  {
    ques: "Which keyword is used to declare a constant variable?<br>",
    quesType: "mcq",
    op1: "final",
    op2: "const",
    op3: "static",
    op4: "constant",
    ans: "final"
  },
  {
    ques: "What is the default value of a boolean variable?<br>",
    quesType: "mcq",
    op1: "true",
    op2: "false",
    op3: "null",
    op4: "0",
    ans: "false"
  },
  {
    ques: "Which data type is used to store a single character?<br>",
    quesType: "mcq",
    op1: "char",
    op2: "String",
    op3: "int",
    op4: "boolean",
    ans: "char"
  },
  {
    ques: "Which data type would you use to store a very large integer?<br>",
    quesType: "mcq",
    op1: "int",
    op2: "long",
    op3: "short",
    op4: "byte",
    ans: "long"
  },
  {
    ques: "Which of the following is a correct way to declare an integer variable?<br>",
    quesType: "mcq",
    op1: "int num = 10;",
    op2: "int num := 10;",
    op3: "num int = 10;",
    op4: "integer num = 10;",
    ans: "int num = 10;"
  },
  {
    ques: "Which of these can store a floating-point number?<br>",
    quesType: "mcq",
    op1: "boolean",
    op2: "float",
    op3: "char",
    op4: "int",
    ans: "float"
  },

  // Fill in the blanks
  {
    ques: "The data type used to store whole numbers is called ______.",
    quesType: "fill",
    ans: "int"
  },
  {
    ques: "A variable declared with the keyword ______ cannot be changed after initialization.",
    quesType: "fill",
    ans: "final"
  },
  {
    ques: "The default value of an uninitialized boolean variable is ______.",
    quesType: "fill",
    ans: "false"
  },
  {
    ques: "The size of a char data type is ______ bytes.",
    quesType: "fill",
    ans: "2"
  },
  {
    ques: "The keyword used to declare a variable is ______.",
    quesType: "fill",
    ans: "int"
  },
  {
    ques: "The data type used to store true or false values is ______.",
    quesType: "fill",
    ans: "boolean"
  },
  {
    ques: "The data type used to store text (sequence of characters) is ______.",
    quesType: "fill",
    ans: "String"
  },
  {
    ques: "The largest size integer data type in Java is ______.",
    quesType: "fill",
    ans: "long"
  },
  {
    ques: "The keyword to declare a floating-point number with single precision is ______.",
    quesType: "fill",
    ans: "float"
  },
  {
    ques: "Variables must be declared before they are ______.",
    quesType: "fill",
    ans: "used"
  },
  {
    ques: "Who is the creator of Java programming language?<br>",
    quesType: "mcq",
    op1: "James Gosling",
    op2: "Dennis Ritchie",
    op3: "Bjarne Stroustrup",
    op4: "Guido van Rossum",
    ans: "James Gosling"
  },
  {
    ques: "Which of the following is the correct extension for Java files?<br>",
    quesType: "mcq",
    op1: ".js",
    op2: ".java",
    op3: ".class",
    op4: ".jar",
    ans: ".java"
  },
  {
    ques: "What is the size of an int in Java?<br>",
    quesType: "mcq",
    op1: "2 bytes",
    op2: "4 bytes",
    op3: "8 bytes",
    op4: "1 byte",
    ans: "4 bytes"
  },
  {
    ques: "Which keyword is used to create a subclass in Java?<br>",
    quesType: "mcq",
    op1: "extends",
    op2: "implements",
    op3: "inherits",
    op4: "super",
    ans: "extends"
  },
  {
    ques: "Which method is the entry point of a Java program?<br>",
    quesType: "mcq",
    op1: "start()",
    op2: "main()",
    op3: "run()",
    op4: "init()",
    ans: "main()"
  },
  {
    ques: "Which of these is NOT a Java primitive data type?<br>",
    quesType: "mcq",
    op1: "int",
    op2: "float",
    op3: "String",
    op4: "boolean",
    ans: "String"
  },
  {
    ques: "What does JVM stand for?<br>",
    quesType: "mcq",
    op1: "Java Variable Method",
    op2: "Java Virtual Machine",
    op3: "Java Visual Model",
    op4: "Java Verified Method",
    ans: "Java Virtual Machine"
  },
  {
    ques: "Which operator is used for equality comparison in Java?<br>",
    quesType: "mcq",
    op1: "=",
    op2: "==",
    op3: "!=",
    op4: ":=",
    ans: "=="
  },
  {
    ques: "Which package is automatically imported by default in every Java program?<br>",
    quesType: "mcq",
    op1: "java.lang",
    op2: "java.util",
    op3: "java.io",
    op4: "java.net",
    ans: "java.lang"
  },
  {
    ques: "Which keyword is used to declare a constant variable in Java?<br>",
    quesType: "mcq",
    op1: "const",
    op2: "final",
    op3: "static",
    op4: "constant",
    ans: "final"
  },

  // Fill in the blanks
  {
    ques: "The default value of a boolean variable in Java is ______.",
    quesType: "fill",
    ans: "false"
  },
  {
    ques: "In Java, the class from which other classes are derived is called the ______ class.",
    quesType: "fill",
    ans: "Object"
  },
  {
    ques: "The keyword ______ is used to inherit a class in Java.",
    quesType: "fill",
    ans: "extends"
  },
  {
    ques: "The method that is executed to start a Java application is called ______.",
    quesType: "fill",
    ans: "main"
  },
  {
    ques: "Java is a ______-oriented programming language.",
    quesType: "fill",
    ans: "object"
  },
  {
    ques: "The access modifier that allows access only within the same class is ______.",
    quesType: "fill",
    ans: "private"
  },
  {
    ques: "To handle exceptions in Java, we use the ______ block.",
    quesType: "fill",
    ans: "try-catch"
  },
  {
    ques: "A variable declared inside a method is called a ______ variable.",
    quesType: "fill",
    ans: "local"
  },
  {
    ques: "Java bytecode runs on the ______.",
    quesType: "fill",
    ans: "JVM"
  },
  {
    ques: "The keyword used to create a new object in Java is ______.",
    quesType: "fill",
    ans: "new"
  }

];

let codingJava2Arr=[
  {
  "ques": "What will be the output of the following Java code snippet?<br>int x = 5;<br>System.out.println(x++ + ++x);",
    "quesType": "mcq",
    "op1": "11",
    "op2": "12",
    "op3": "10",
    "op4": "9",
    "ans": "12"
  },
  {
    "ques": "Which of the following is NOT a feature of Java Streams API introduced in Java 8?",
    "quesType": "mcq",
    "op1": "Lazy evaluation",
    "op2": "Parallel execution",
    "op3": "In-place modification of source data",
    "op4": "Functional-style operations",
    "ans": "In-place modification of source data"
  },
  {
    "ques": "Which interface must be implemented for a class to be used as a key in a HashMap?",
    "quesType": "mcq",
    "op1": "Serializable",
    "op2": "Cloneable",
    "op3": "Comparable",
    "op4": "hashCode() and equals() methods overridden",
    "ans": "hashCode() and equals() methods overridden"
  },
  {
    "ques": "Which keyword is used to restrict method overriding in Java?",
    "quesType": "mcq",
    "op1": "final",
    "op2": "static",
    "op3": "abstract",
    "op4": "native",
    "ans": "final"
  },
  {
    "ques": "In Java, what does the transient keyword indicate when applied to a variable?",
    "quesType": "mcq",
    "op1": "Variable is static",
    "op2": "Variable should not be serialized",
    "op3": "Variable is constant",
    "op4": "Variable is synchronized",
    "ans": "Variable should not be serialized"
  },

  {
    "ques": "The default value of a boolean instance variable in Java is ___",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "In Java, the ___ block is used to handle exceptions that might occur in the try block.",
    "quesType": "fill",
    "ans": "catch"
  },
  {
    "ques": "The interface that represents a collection of elements with no duplicates in Java is called ___",
    "quesType": "fill",
    "ans": "Set"
  },
  {
    "ques": "In Java, a ___ class is a class defined inside another class without the static modifier.",
    "quesType": "fill",
    "ans": "non-static inner"
  },
  {
    "ques": "The Java keyword ___ is used to explicitly call a superclass constructor from a subclass.",
    "quesType": "fill",
    "ans": "super"
  },
  {
    "ques": "Which of the following correctly describes the Java memory model?<br>",
    "quesType": "mcq",
    "op1": "Stack stores objects, heap stores primitives",
    "op2": "Heap stores objects, stack stores method calls and primitives",
    "op3": "Stack stores static variables, heap stores local variables",
    "op4": "Heap stores method calls, stack stores objects",
    "ans": "Heap stores objects, stack stores method calls and primitives"
  },
  {
    "ques": "What is the output of the following code?<br>String s1 = \"hello\";<br>String s2 = new String(\"hello\");<br>System.out.println(s1 == s2);",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Compilation error",
    "op4": "Runtime error",
    "ans": "false"
  },
  {
    "ques": "Which of these is true about Java interfaces?<br>",
    "quesType": "mcq",
    "op1": "Interfaces can have private methods",
    "op2": "Interfaces cannot have static methods",
    "op3": "Interfaces support multiple inheritance",
    "op4": "Interfaces can have instance variables",
    "ans": "Interfaces support multiple inheritance"
  },
  {
    "ques": "In Java, the term 'autoboxing' refers to?<br>",
    "quesType": "mcq",
    "op1": "Automatic conversion of primitive types to their wrapper class objects",
    "op2": "Converting String to Integer explicitly",
    "op3": "Manual conversion of primitives to objects",
    "op4": "None of the above",
    "ans": "Automatic conversion of primitive types to their wrapper class objects"
  },
  {
    "ques": "What happens if a finally block contains a return statement?<br>",
    "quesType": "mcq",
    "op1": "The method returns normally",
    "op2": "The return value from try/catch is overridden by finally's return",
    "op3": "Compilation error",
    "op4": "Runtime exception",
    "ans": "The return value from try/catch is overridden by finally's return"
  },
  {
    "ques": "Which collection class maintains elements in the order they were inserted?<br>",
    "quesType": "mcq",
    "op1": "HashSet",
    "op2": "TreeSet",
    "op3": "LinkedHashSet",
    "op4": "PriorityQueue",
    "ans": "LinkedHashSet"
  },
  {
    "ques": "What is the effect of the 'synchronized' keyword in Java?<br>",
    "quesType": "mcq",
    "op1": "Allows multiple threads to access the method simultaneously",
    "op2": "Prevents multiple threads from accessing the synchronized method at the same time",
    "op3": "Improves performance by caching results",
    "op4": "Automatically serializes the object",
    "ans": "Prevents multiple threads from accessing the synchronized method at the same time"
  },
  {
    "ques": "Which statement about Java Generics is true?<br>",
    "quesType": "mcq",
    "op1": "Generics support primitive types like int directly",
    "op2": "Generics provide type safety at compile time",
    "op3": "Generics allow method overloading based on generic types",
    "op4": "Generics are available only in Java 7 and later",
    "ans": "Generics provide type safety at compile time"
  },
  {
    "ques": "What is the default value of an instance variable of type 'char' in Java?<br>",
    "quesType": "mcq",
    "op1": "'\\u0000' (null character)",
    "op2": "' ' (space)",
    "op3": "'0' (zero)",
    "op4": "No default value",
    "ans": "'\\u0000' (null character)"
  },
  {
    "ques": "Which of the following is NOT a valid method to create a thread in Java?<br>",
    "quesType": "mcq",
    "op1": "Extending the Thread class",
    "op2": "Implementing the Runnable interface",
    "op3": "Using Callable and FutureTask",
    "op4": "Implementing the Serializable interface",
    "ans": "Implementing the Serializable interface"
  },

  // Medium Fill in the blanks
  {
    "ques": "The Java keyword ___ is used to create a subclass that inherits properties from a superclass.<br>",
    "quesType": "fill",
    "ans": "extends"
  },
  {
    "ques": "The process of converting a primitive type into its corresponding wrapper class object is called ___.<br>",
    "quesType": "fill",
    "ans": "autoboxing"
  },
  {
    "ques": "In Java, the ___ block is always executed after try and catch blocks, regardless of exceptions.<br>",
    "quesType": "fill",
    "ans": "finally"
  },
  {
    "ques": "The method ___() in the Object class is used to check equality of objects.<br>",
    "quesType": "fill",
    "ans": "equals"
  },
  {
    "ques": "The ___ interface in Java represents a collection that maps keys to values.<br>",
    "quesType": "fill",
    "ans": "Map"
  },
  {
    "ques": "In Java, a ___ exception must be either caught or declared in the method signature.<br>",
    "quesType": "fill",
    "ans": "checked"
  },
  {
    "ques": "The term ___ polymorphism refers to method overloading and overriding in Java.<br>",
    "quesType": "fill",
    "ans": "compile-time and runtime"
  },
  {
    "ques": "The Java ___ class provides methods to read input from various sources, including keyboard.<br>",
    "quesType": "fill",
    "ans": "Scanner"
  },
  {
    "ques": "A ___ class in Java is a class defined inside another class and has access to its members.<br>",
    "quesType": "fill",
    "ans": "nested"
  },
  {
    "ques": "The Java keyword ___ is used to define a constant variable.<br>",
    "quesType": "fill",
    "ans": "final"
  },
  {
    "ques": "Which of the following is NOT a pillar of Object-Oriented Programming?<br>",
    "quesType": "mcq",
    "op1": "Encapsulation",
    "op2": "Inheritance",
    "op3": "Polymorphism",
    "op4": "Compilation",
    "ans": "Compilation"
  },
  {
    "ques": "What is method overriding in Java?<br>",
    "quesType": "mcq",
    "op1": "Defining two methods with the same name but different parameters",
    "op2": "Defining a method in subclass with the same signature as in superclass",
    "op3": "Using the final keyword on a method",
    "op4": "Calling a method from another class",
    "ans": "Defining a method in subclass with the same signature as in superclass"
  },
  {
    "ques": "Which keyword is used to prevent a class from being subclassed?<br>",
    "quesType": "mcq",
    "op1": "abstract",
    "op2": "final",
    "op3": "static",
    "op4": "private",
    "ans": "final"
  },
  {
    "ques": "What is true about abstract classes in Java?<br>",
    "quesType": "mcq",
    "op1": "They can be instantiated directly",
    "op2": "They may contain abstract methods",
    "op3": "They cannot have constructors",
    "op4": "They must implement all interface methods",
    "ans": "They may contain abstract methods"
  },
  {
    "ques": "In Java, which of these is NOT a way to achieve polymorphism?<br>",
    "quesType": "mcq",
    "op1": "Method overloading",
    "op2": "Method overriding",
    "op3": "Constructor chaining",
    "op4": "Interface implementation",
    "ans": "Constructor chaining"
  },
  {
    "ques": "Which of these access modifiers allows visibility only within the same package?<br>",
    "quesType": "mcq",
    "op1": "private",
    "op2": "public",
    "op3": "protected",
    "op4": "default (no modifier)",
    "ans": "default (no modifier)"
  },
  {
    "ques": "What is true about constructors in Java?<br>",
    "quesType": "mcq",
    "op1": "They have the same name as the class and no return type",
    "op2": "They can have any return type",
    "op3": "They can be inherited by subclasses",
    "op4": "They can be static",
    "ans": "They have the same name as the class and no return type"
  },
  {
    "ques": "Which feature allows Java to support multiple inheritance of type?<br>",
    "quesType": "mcq",
    "op1": "Abstract classes",
    "op2": "Interfaces",
    "op3": "Concrete classes",
    "op4": "Constructors",
    "ans": "Interfaces"
  },
  {
    "ques": "In Java, what does the 'super' keyword refer to?<br>",
    "quesType": "mcq",
    "op1": "The current object",
    "op2": "The parent class instance",
    "op3": "A static method",
    "op4": "A private variable",
    "ans": "The parent class instance"
  },
  {
    "ques": "Which statement about encapsulation is false?<br>",
    "quesType": "mcq",
    "op1": "It restricts direct access to some of an object’s components",
    "op2": "It is achieved using access modifiers",
    "op3": "It helps in data hiding",
    "op4": "It allows unrestricted access to all variables",
    "ans": "It allows unrestricted access to all variables"
  },

  // OOP Medium Fill in the blanks
  {
    "ques": "The process of hiding internal details and showing only functionalities is called ___.<br>",
    "quesType": "fill",
    "ans": "abstraction"
  },
  {
    "ques": "In Java, the ___ keyword is used to refer to the current object's instance variable when shadowed by a parameter.<br>",
    "quesType": "fill",
    "ans": "this"
  },
  {
    "ques": "A ___ method is a method with the same name but different parameters in the same class.<br>",
    "quesType": "fill",
    "ans": "overloaded"
  },
  {
    "ques": "The ability of a subclass to provide a specific implementation of a method already provided by its superclass is called ___.<br>",
    "quesType": "fill",
    "ans": "overriding"
  },
  {
    "ques": "Classes that cannot be instantiated and may contain abstract methods are called ___ classes.<br>",
    "quesType": "fill",
    "ans": "abstract"
  },
  {
    "ques": "A class implementing an interface must provide implementation for all its ___ methods.<br>",
    "quesType": "fill",
    "ans": "abstract"
  },
  {
    "ques": "In Java, ___ is used to restrict inheritance and method overriding.<br>",
    "quesType": "fill",
    "ans": "final"
  },
  {
    "ques": "___ polymorphism is resolved during compile time, while ___ polymorphism is resolved during runtime.<br>",
    "quesType": "fill",
    "ans": "Compile-time, runtime"
  },
  {
    "ques": "The mechanism of wrapping data and methods into a single unit is called ___.<br>",
    "quesType": "fill",
    "ans": "encapsulation"
  },
  {
    "ques": "The default constructor provided by Java when no constructor is explicitly defined is called the ___ constructor.<br>",
    "quesType": "fill",
    "ans": "no-argument"
  },
  {
    "ques": "What will be the output of the following code?<br>int i = 0;<br>while(i < 3) {<br>System.out.print(i + \" \");<br>i++;<br>}<br>",
    "quesType": "mcq",
    "op1": "0 1 2 ",
    "op2": "1 2 3 ",
    "op3": "0 1 2 3 ",
    "op4": "Compilation error",
    "ans": "0 1 2 "
  },
  {
    "ques": "Which loop is guaranteed to execute at least once?<br>",
    "quesType": "mcq",
    "op1": "for loop",
    "op2": "while loop",
    "op3": "do-while loop",
    "op4": "None of the above",
    "ans": "do-while loop"
  },
  {
    "ques": "What keyword is used to immediately exit a loop?<br>",
    "quesType": "mcq",
    "op1": "exit",
    "op2": "break",
    "op3": "stop",
    "op4": "continue",
    "ans": "break"
  },
  {
    "ques": "What will the following for loop print?<br>for(int i = 5; i > 0; i -= 2) {<br>System.out.print(i + \" \");<br>}",
    "quesType": "mcq",
    "op1": "5 3 1 ",
    "op2": "5 4 3 2 1 ",
    "op3": "5 3 1 -1 ",
    "op4": "Compilation error",
    "ans": "5 3 1 "
  },
  {
    "ques": "What does the 'continue' statement do inside a loop?<br>",
    "quesType": "mcq",
    "op1": "Exits the loop immediately",
    "op2": "Skips the rest of the current iteration and continues with next",
    "op3": "Terminates the program",
    "op4": "Restarts the program",
    "ans": "Skips the rest of the current iteration and continues with next"
  },
  {
    "ques": "Which loop is best suited when the number of iterations is known beforehand?<br>",
    "quesType": "mcq",
    "op1": "while loop",
    "op2": "do-while loop",
    "op3": "for loop",
    "op4": "infinite loop",
    "ans": "for loop"
  },
  {
    "ques": "What is the output of the following code?<br>int sum = 0;<br>for(int i = 1; i <= 3; i++) {<br>sum += i;<br>}<br>System.out.println(sum);",
    "quesType": "mcq",
    "op1": "6",
    "op2": "3",
    "op3": "0",
    "op4": "Compilation error",
    "ans": "6"
  },
  {
    "ques": "What happens if the condition in a while loop is always true?<br>",
    "quesType": "mcq",
    "op1": "Loop terminates normally",
    "op2": "Infinite loop occurs",
    "op3": "Compilation error",
    "op4": "Runtime exception",
    "ans": "Infinite loop occurs"
  },
  {
    "ques": "How many times will the following loop execute?<br>for(int i=0; i<10; i+=3) {}",
    "quesType": "mcq",
    "op1": "3 times",
    "op2": "4 times",
    "op3": "10 times",
    "op4": "Infinite times",
    "ans": "4 times"
  },
  {
    "ques": "What is the output of the following code?<br>int i = 10;<br>do {<br>System.out.print(i + \" \");<br>i += 10;<br>} while(i < 20);",
    "quesType": "mcq",
    "op1": "10 ",
    "op2": "10 20 ",
    "op3": "20 ",
    "op4": "No output",
    "ans": "10 "
  },

  // Loops Medium Fill in the blanks
  {
    "ques": "The ___ loop in Java checks the condition after executing the loop body.<br>",
    "quesType": "fill",
    "ans": "do-while"
  },
  {
    "ques": "The ___ statement is used to skip the current iteration in a loop.<br>",
    "quesType": "fill",
    "ans": "continue"
  },
  {
    "ques": "The ___ keyword is used to terminate a loop immediately.<br>",
    "quesType": "fill",
    "ans": "break"
  },
  {
    "ques": "In a ___ loop, the number of iterations is usually known before entering the loop.<br>",
    "quesType": "fill",
    "ans": "for"
  },
  {
    "ques": "A loop that runs indefinitely without a terminating condition is called an ___ loop.<br>",
    "quesType": "fill",
    "ans": "infinite"
  },
  {
    "ques": "The syntax for a while loop starts with the keyword ___ followed by the condition in parentheses.<br>",
    "quesType": "fill",
    "ans": "while"
  },
  {
    "ques": "In Java, the ___ loop executes the code block at least once, even if the condition is false initially.<br>",
    "quesType": "fill",
    "ans": "do-while"
  },
  {
    "ques": "The expression inside the parentheses of a for loop is called the ___ condition.<br>",
    "quesType": "fill",
    "ans": "loop"
  },
  {
    "ques": "To skip the current iteration and proceed to the next, use the ___ statement inside the loop.<br>",
    "quesType": "fill",
    "ans": "continue"
  },
  {
    "ques": "When the condition in a loop becomes false, the loop ___ and execution continues after the loop.<br>",
    "quesType": "fill",
    "ans": "terminates"
  },
   {
    "ques": "What will be the output of this code?<br>for(int i=1; i<=2; i++) {<br>  for(int j=1; j<=2; j++) {<br>    System.out.print(i * j + \" \");<br>  }<br>}<br>",
    "quesType": "mcq",
    "op1": "1 2 2 4 ",
    "op2": "1 1 2 2 ",
    "op3": "1 2 3 4 ",
    "op4": "Compilation error",
    "ans": "1 2 2 4 "
  },
  {
    "ques": "How many times will the inner loop run if the outer loop runs 3 times and the inner loop runs 4 times each iteration?<br>",
    "quesType": "mcq",
    "op1": "7",
    "op2": "12",
    "op3": "3",
    "op4": "4",
    "ans": "12"
  },
  {
    "ques": "What does the variable 'j' usually represent in a nested for loop?<br>",
    "quesType": "mcq",
    "op1": "Outer loop index",
    "op2": "Inner loop index",
    "op3": "Loop counter",
    "op4": "Condition",
    "ans": "Inner loop index"
  },
  {
    "ques": "Which of the following prints a 3x3 matrix of stars (*)?<br>",
    "quesType": "mcq",
    "op1": "for(int i=0; i<3; i++) { for(int j=0; j<3; j++) System.out.print(\"*\"); }",
    "op2": "for(int i=0; i<3; i++) System.out.println(\"***\");",
    "op3": "Both 1 and 2",
    "op4": "None of the above",
    "ans": "Both 1 and 2"
  },
  {
    "ques": "What will be printed by the code?<br>for(int i=1; i<=2; i++) {<br>  for(int j=1; j<=3; j++) {<br>    System.out.print(j + \" \");<br>  }<br>  System.out.println();<br>}<br>",
    "quesType": "mcq",
    "op1": "1 2 3 1 2 3",
    "op2": "1 2 3<br>1 2 3<br>",
    "op3": "1 2 3 4 5 6",
    "op4": "Compilation error",
    "ans": "1 2 3<br>1 2 3<br>"
  },
  {
    "ques": "Which nested for loop will correctly print the following pattern?<br>1<br>12<br>123<br>",
    "quesType": "mcq",
    "op1": "for(int i=1; i<=3; i++) { for(int j=1; j<=i; j++) System.out.print(j); System.out.println(); }",
    "op2": "for(int i=1; i<=3; i++) { for(int j=1; j<=3; j++) System.out.print(i); System.out.println(); }",
    "op3": "for(int i=1; i<=3; i++) { for(int j=1; j<=i; j++) System.out.print(i); System.out.println(); }",
    "op4": "for(int i=1; i<=3; i++) { for(int j=1; j<=3; j++) System.out.print(j); System.out.println(); }",
    "ans": "for(int i=1; i<=3; i++) { for(int j=1; j<=i; j++) System.out.print(j); System.out.println(); }"
  },
  {
    "ques": "What is the time complexity of a nested for loop where both loops run n times?<br>",
    "quesType": "mcq",
    "op1": "O(n)",
    "op2": "O(n^2)",
    "op3": "O(2n)",
    "op4": "O(log n)",
    "ans": "O(n^2)"
  },
  {
    "ques": "In nested loops, which loop completes all its iterations first?<br>",
    "quesType": "mcq",
    "op1": "Outer loop",
    "op2": "Inner loop",
    "op3": "Both simultaneously",
    "op4": "Depends on condition",
    "ans": "Inner loop"
  },
  {
    "ques": "What will be the output?<br>for(int i=0; i<2; i++) {<br>  for(int j=0; j<3; j++) {<br>    System.out.print(i+j + \" \");<br>  }<br>}",
    "quesType": "mcq",
    "op1": "0 1 2 1 2 3 ",
    "op2": "0 1 2 0 1 2 ",
    "op3": "Compilation error",
    "op4": "0 0 0 1 1 1 ",
    "ans": "0 1 2 1 2 3 "
  },

  // Nested For Loops Medium Fill in the blanks
  {
    "ques": "A ___ loop is placed inside another loop.<br>",
    "quesType": "fill",
    "ans": "nested"
  },
  {
    "ques": "In nested loops, the ___ loop runs completely each time the outer loop runs once.<br>",
    "quesType": "fill",
    "ans": "inner"
  },
  {
    "ques": "The time complexity of two nested loops each running n times is ___ .<br>",
    "quesType": "fill",
    "ans": "O(n^2)"
  },
  {
    "ques": "Nested loops are often used to process ___ structures like matrices.<br>",
    "quesType": "fill",
    "ans": "2D"
  },
  {
    "ques": "The variable used in the outer loop is often called the ___ variable.<br>",
    "quesType": "fill",
    "ans": "outer"
  },
  {
    "ques": "In Java, to print a new line after the inner loop finishes, use ___ statement.<br>",
    "quesType": "fill",
    "ans": "System.out.println()"
  },
  {
    "ques": "To print a pattern of increasing numbers in nested loops, the inner loop usually depends on the ___ loop variable.<br>",
    "quesType": "fill",
    "ans": "outer"
  },
  {
    "ques": "Nested loops increase the ___ cost of algorithms.<br>",
    "quesType": "fill",
    "ans": "time"
  },
  {
    "ques": "In nested loops, the ___ loop controls the number of repetitions of the inner loop.<br>",
    "quesType": "fill",
    "ans": "outer"
  },
  {
    "ques": "To avoid infinite loops, make sure the loop control variables are ___ correctly.<br>",
    "quesType": "fill",
    "ans": "updated"
  },
  {
    "ques": "What feature of OOP allows a subclass to provide a specific implementation of a method already defined in its superclass?<br>",
    "quesType": "mcq",
    "op1": "Encapsulation",
    "op2": "Abstraction",
    "op3": "Method Overriding",
    "op4": "Method Overloading",
    "ans": "Method Overriding"
  },
  {
    "ques": "Which keyword is used to prevent a method from being overridden in Java?<br>",
    "quesType": "mcq",
    "op1": "static",
    "op2": "final",
    "op3": "abstract",
    "op4": "private",
    "ans": "final"
  },
  {
    "ques": "What is true about an abstract class in Java?<br>",
    "quesType": "mcq",
    "op1": "It cannot have constructors",
    "op2": "It can be instantiated",
    "op3": "It can contain both abstract and concrete methods",
    "op4": "It must implement all methods of an interface",
    "ans": "It can contain both abstract and concrete methods"
  },
  {
    "ques": "Which of the following access modifiers provides the most restricted access?<br>",
    "quesType": "mcq",
    "op1": "public",
    "op2": "protected",
    "op3": "private",
    "op4": "default (package-private)",
    "ans": "private"
  },
  {
    "ques": "Which OOP principle hides the internal details of an object and only exposes what is necessary?<br>",
    "quesType": "mcq",
    "op1": "Inheritance",
    "op2": "Polymorphism",
    "op3": "Encapsulation",
    "op4": "Abstraction",
    "ans": "Encapsulation"
  },
  {
    "ques": "Which statement is true about interfaces in Java?<br>",
    "quesType": "mcq",
    "op1": "Interfaces can have constructors",
    "op2": "Interfaces can have instance variables",
    "op3": "Interfaces support multiple inheritance",
    "op4": "Interfaces cannot have default methods",
    "ans": "Interfaces support multiple inheritance"
  },
  {
    "ques": "Which method signature concept allows a class to have multiple methods with the same name but different parameters?<br>",
    "quesType": "mcq",
    "op1": "Method Overloading",
    "op2": "Method Overriding",
    "op3": "Abstraction",
    "op4": "Encapsulation",
    "ans": "Method Overloading"
  },
  {
    "ques": "What happens if a subclass does not override an abstract method of its abstract superclass?<br>",
    "quesType": "mcq",
    "op1": "The subclass can still be instantiated",
    "op2": "The subclass must be declared abstract",
    "op3": "A compilation error occurs",
    "op4": "The method is ignored",
    "ans": "The subclass must be declared abstract"
  },
  {
    "ques": "Which of these can NOT be overridden by a subclass?<br>",
    "quesType": "mcq",
    "op1": "private methods",
    "op2": "public methods",
    "op3": "protected methods",
    "op4": "default methods",
    "ans": "private methods"
  },
  {
    "ques": "What does the 'super' keyword refer to in Java?<br>",
    "quesType": "mcq",
    "op1": "Current class object",
    "op2": "Immediate parent class object",
    "op3": "Root Object class",
    "op4": "Any interface implemented",
    "ans": "Immediate parent class object"
  },
  {
    "ques": "___ allows a class to inherit properties and behavior from another class.<br>",
    "quesType": "fill",
    "ans": "Inheritance"
  },
  {
    "ques": "A method declared with the ___ keyword cannot be overridden by subclasses.<br>",
    "quesType": "fill",
    "ans": "final"
  },
  {
    "ques": "___ classes cannot be instantiated and may contain abstract methods.<br>",
    "quesType": "fill",
    "ans": "Abstract"
  },
  {
    "ques": "In Java, all classes implicitly inherit from the ___ class.<br>",
    "quesType": "fill",
    "ans": "Object"
  },
  {
    "ques": "The ability of one method to perform differently based on the object that invokes it is called ___.<br>",
    "quesType": "fill",
    "ans": "polymorphism"
  },
  {
    "ques": "The ___ modifier restricts access to members only within the same package and subclasses.<br>",
    "quesType": "fill",
    "ans": "protected"
  },
  {
    "ques": "An interface in Java can have ___ methods that provide a default implementation.<br>",
    "quesType": "fill",
    "ans": "default"
  },
  {
    "ques": "Method ___ means having multiple methods with the same name but different parameters.<br>",
    "quesType": "fill",
    "ans": "overloading"
  },
  {
    "ques": "The '___' keyword is used to call a superclass constructor from a subclass.<br>",
    "quesType": "fill",
    "ans": "super"
  },
  {
    "ques": "Encapsulation is achieved in Java by making data members ___ and providing public getter and setter methods.<br>",
    "quesType": "fill",
    "ans": "private"
  },
   {
    "ques": "What is the default value of a boolean variable in Java?<br>",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "0",
    "op4": "null",
    "ans": "false"
  },
  {
    "ques": "Which of these is NOT a valid Java identifier?<br>",
    "quesType": "mcq",
    "op1": "_myVar",
    "op2": "2ndVariable",
    "op3": "myVariable2",
    "op4": "$value",
    "ans": "2ndVariable"
  },
  {
    "ques": "The process of converting a subclass object to a superclass reference is called ___ .<br>",
    "quesType": "fill",
    "ans": "upcasting"
  },
  {
    "ques": "Which keyword is used to handle exceptions in Java?<br>",
    "quesType": "mcq",
    "op1": "try",
    "op2": "catch",
    "op3": "finally",
    "op4": "throw",
    "ans": "try"
  },
  {
    "ques": "What is the output of the expression: 5 + 3 + \"7\" + 2?<br>",
    "quesType": "mcq",
    "op1": "1072",
    "op2": "8572",
    "op3": "87",
    "op4": "58372",
    "ans": "87"
  },
  {
    "ques": "A ___ constructor is a constructor that takes no parameters.<br>",
    "quesType": "fill",
    "ans": "default"
  },
  {
    "ques": "Which of the following is true about the 'static' keyword in Java?<br>",
    "quesType": "mcq",
    "op1": "Static variables belong to the instance of a class",
    "op2": "Static methods can access instance variables directly",
    "op3": "Static variables belong to the class rather than instances",
    "op4": "Static methods must be overridden",
    "ans": "Static variables belong to the class rather than instances"
  },
  {
    "ques": "The ___ keyword is used to create a subclass from a superclass.<br>",
    "quesType": "fill",
    "ans": "extends"
  },
  {
    "ques": "Which of the following is the parent class of all classes in Java?<br>",
    "quesType": "mcq",
    "op1": "SuperClass",
    "op2": "Object",
    "op3": "BaseClass",
    "op4": "RootClass",
    "ans": "Object"
  },
  {
    "ques": "Which method must be implemented by all threads in Java?<br>",
    "quesType": "mcq",
    "op1": "start()",
    "op2": "run()",
    "op3": "main()",
    "op4": "execute()",
    "ans": "run()"
  },
  {
    "ques": "Which programming paradigm is Java primarily based on?<br>",
    "quesType": "mcq",
    "op1": "Functional Programming",
    "op2": "Procedural Programming",
    "op3": "Object-Oriented Programming",
    "op4": "Logic Programming",
    "ans": "Object-Oriented Programming"
  },
  {
    "ques": "In Java, which feature supports the concept of 'code reusability'?<br>",
    "quesType": "mcq",
    "op1": "Encapsulation",
    "op2": "Inheritance",
    "op3": "Polymorphism",
    "op4": "Abstraction",
    "ans": "Inheritance"
  },
  {
    "ques": "Which paradigm focuses on breaking down a program into procedures or functions?<br>",
    "quesType": "mcq",
    "op1": "Object-Oriented Programming",
    "op2": "Functional Programming",
    "op3": "Procedural Programming",
    "op4": "Event-Driven Programming",
    "ans": "Procedural Programming"
  },
  {
    "ques": "Which Java feature allows a class to implement multiple interfaces?<br>",
    "quesType": "mcq",
    "op1": "Multiple Inheritance of Classes",
    "op2": "Multiple Inheritance of Interfaces",
    "op3": "Method Overloading",
    "op4": "Method Overriding",
    "ans": "Multiple Inheritance of Interfaces"
  },
  {
    "ques": "Which of the following is NOT a characteristic of Object-Oriented Programming?<br>",
    "quesType": "mcq",
    "op1": "Encapsulation",
    "op2": "Recursion",
    "op3": "Inheritance",
    "op4": "Polymorphism",
    "ans": "Recursion"
  },
  {
    "ques": "In functional programming, functions are treated as ___ entities.<br>",
    "quesType": "mcq",
    "op1": "first-class",
    "op2": "second-class",
    "op3": "third-class",
    "op4": "null",
    "ans": "first-class"
  },
  {
    "ques": "Which Java keyword is used to define a block of code that can be executed later as a functional interface?<br>",
    "quesType": "mcq",
    "op1": "interface",
    "op2": "lambda",
    "op3": "default",
    "op4": "abstract",
    "ans": "lambda"
  },
  {
    "ques": "Which programming paradigm emphasizes immutability and pure functions?<br>",
    "quesType": "mcq",
    "op1": "Object-Oriented Programming",
    "op2": "Procedural Programming",
    "op3": "Functional Programming",
    "op4": "Logic Programming",
    "ans": "Functional Programming"
  },
  {
    "ques": "Event-driven programming is commonly used for developing ___ applications.<br>",
    "quesType": "mcq",
    "op1": "command-line",
    "op2": "batch",
    "op3": "GUI",
    "op4": "system",
    "ans": "GUI"
  },
  {
    "ques": "Which paradigm organizes programs as a collection of interacting objects?<br>",
    "quesType": "mcq",
    "op1": "Procedural Programming",
    "op2": "Object-Oriented Programming",
    "op3": "Functional Programming",
    "op4": "Logic Programming",
    "ans": "Object-Oriented Programming"
  },

  {
    "ques": "___ programming emphasizes the use of objects and classes.<br>",
    "quesType": "fill",
    "ans": "Object-Oriented"
  },
  {
    "ques": "___ programming relies on functions and avoids changing-state and mutable data.<br>",
    "quesType": "fill",
    "ans": "Functional"
  },
  {
    "ques": "In Java, the ___ paradigm organizes code into procedures or routines.<br>",
    "quesType": "fill",
    "ans": "Procedural"
  },
  {
    "ques": "___ is the ability of a programming language to support multiple paradigms.<br>",
    "quesType": "fill",
    "ans": "Multi-paradigm"
  },
  {
    "ques": "The ___ paradigm uses events such as clicks and key presses to control program flow.<br>",
    "quesType": "fill",
    "ans": "Event-driven"
  },
  {
    "ques": "Java supports ___ inheritance through classes.<br>",
    "quesType": "fill",
    "ans": "single"
  },
  {
    "ques": "___ inheritance allows a class to implement multiple interfaces in Java.<br>",
    "quesType": "fill",
    "ans": "Multiple"
  },
  {
    "ques": "In OOP, ___ means hiding the internal details and showing only essential features.<br>",
    "quesType": "fill",
    "ans": "Abstraction"
  },
  {
    "ques": "___ is a programming paradigm based on facts and rules.<br>",
    "quesType": "fill",
    "ans": "Logic"
  },
  {
    "ques": "In functional programming, functions have no side effects and are called ___ functions.<br>",
    "quesType": "fill",
    "ans": "pure"
  },
  
  {
    "ques": "What will be the output of the following Java code?<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    int a = 5;<br>    int b = 10;<br>    System.out.println(a++ + ++b);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "15",
    "op2": "16",
    "op3": "17",
    "op4": "Compilation Error",
    "ans": "16"
  },
  {
    "ques": "What will be printed by this code?<br><br>```java<br>public class LoopTest {<br>  public static void main(String[] args) {<br>    int sum = 0;<br>    for (int i = 1; i <= 5; i++) {<br>      if (i == 3) break;<br>      sum += i;<br>    }<br>    System.out.println(sum);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "What will be the output of this Java program?<br><br>```java<br>class A {<br>  void display() {<br>    System.out.println(\"Class A\");<br>  }<br>}<br>class B extends A {<br>  void display() {<br>    System.out.println(\"Class B\");<br>  }<br>}<br>public class TestPolymorphism {<br>  public static void main(String[] args) {<br>    A obj = new B();<br>    obj.display();<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "Class A",
    "op2": "Class B",
    "op3": "Compilation Error",
    "op4": "Runtime Error",
    "ans": "Class B"
  },
  {
    "ques": "What is the output of the following code?<br><br>```java<br>public class StringTest {<br>  public static void main(String[] args) {<br>    String s1 = \"Hello\";<br>    String s2 = new String(\"Hello\");<br>    System.out.println(s1 == s2);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "What will be the output of this code?<br><br>```java<br>public class ContinueExample {<br>  public static void main(String[] args) {<br>    for (int i = 1; i <= 5; i++) {<br>      if (i == 3) continue;<br>      System.out.print(i + \" \");<br>    }<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "1 2 4 5 "
  },
  {
    "ques": "What will be the output?<br><br>```java<br>public class Test1 {<br>  public static void main(String[] args) {<br>    int x = 10;<br>    System.out.println(x-- - --x);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "2",
    "op4": "-1",
    "ans": "2"
  },
  {
    "ques": "What will this print?<br><br>```java<br>public class Test2 {<br>  public static void main(String[] args) {<br>    String str = \"Java\";<br>    str.concat(\"Programming\");<br>    System.out.println(str);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "JavaProgramming",
    "op2": "Java",
    "op3": "Programming",
    "op4": "Compilation Error",
    "ans": "Java"
  },
  {
    "ques": "What is the output?<br><br>```java<br>public class Test3 {<br>  public static void main(String[] args) {<br>    for (int i=0; i<3; i++) {<br>      for (int j=0; j<2; j++) {<br>        if (i==j) continue;<br>        System.out.print(i+j + \" \");<br>      }<br>    }<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "1 2 2 3 ",
    "op2": "1 2 0 1 ",
    "op3": "1 2 3 4 ",
    "op4": "0 1 2 3 ",
    "ans": "1 2 2 3 "
  },
  {
    "ques": "What will this output?<br><br>```java<br>class Parent {<br>  void message() {<br>    System.out.println(\"Parent method\");<br>  }<br>}<br>class Child extends Parent {<br>  void message() {<br>    System.out.println(\"Child method\");<br>  }<br>}<br>public class Test4 {<br>  public static void main(String[] args) {<br>    Parent obj = new Child();<br>    obj.message();<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "Parent method",
    "op2": "Child method",
    "op3": "Compilation error",
    "op4": "Runtime error",
    "ans": "Child method"
  },
  {
    "ques": "What is the output of this code?<br><br>```java<br>public class Test5 {<br>  public static void main(String[] args) {<br>    int[] arr = {1, 2, 3};<br>    for (int i : arr) {<br>      System.out.print(i + 1 + \" \");<br>    }<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "1 2 3 ",
    "op2": "2 3 4 ",
    "op3": "123",
    "op4": "Compilation error",
    "ans": "2 3 4 "
  },
  {
    "ques": "What will be printed?<br><br>```java<br>public class Test6 {<br>  public static void main(String[] args) {<br>    int a = 5;<br>    int b = 10;<br>    System.out.println(a > b ? a : b);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "5",
    "op2": "10",
    "op3": "true",
    "op4": "false",
    "ans": "10"
  },
  {
    "ques": "What is output here?<br><br>```java<br>public class Test7 {<br>  public static void main(String[] args) {<br>    int i = 1;<br>    while(i <= 3) {<br>      System.out.print(i + \" \");<br>      i++;<br>    }<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "1 2 3 ",
    "op2": "3 2 1 ",
    "op3": "123",
    "op4": "Compilation error",
    "ans": "1 2 3 "
  },
  {
    "ques": "Output of the following?<br><br>```java<br>public class Test8 {<br>  public static void main(String[] args) {<br>    System.out.println(10 + 20 + \"30\");<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "3030",
    "op2": "102030",
    "op3": "3030",
    "op4": "3040",
    "ans": "3030"
  },
  {
    "ques": "What is printed?<br><br>```java<br>public class Test9 {<br>  public static void main(String[] args) {<br>    String s1 = \"abc\";<br>    String s2 = \"abc\";<br>    System.out.println(s1 == s2);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Compilation error",
    "op4": "Runtime error",
    "ans": "true"
  },
  {
    "ques": "What will this output?<br><br>```java<br>public class Test10 {<br>  public static void main(String[] args) {<br>    System.out.println(Math.max(10, 20));<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "10",
    "op2": "20",
    "op3": "0",
    "op4": "Compilation error",
    "ans": "20"
  },
  {
    "ques": "What will be the output of the following code?<br><br>```java<br>public class Fill1 {<br>  public static void main(String[] args) {<br>    int x = 3;<br>    int y = x++ + ++x;<br>    System.out.println(y);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "Output of this code?<br><br>```java<br>public class Fill2 {<br>  public static void main(String[] args) {<br>    int sum = 0;<br>    for (int i = 1; i <= 4; i++) {<br>      sum += i;<br>      if (i == 3) break;<br>    }<br>    System.out.println(sum);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "What does this print?<br><br>```java<br>class Parent {<br>  void msg() { System.out.println(\"Parent\"); }<br>}<br>class Child extends Parent {<br>  void msg() { System.out.println(\"Child\"); }<br>}<br>public class Fill3 {<br>  public static void main(String[] args) {<br>    Parent p = new Child();<br>    p.msg();<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "Child"
  },
  {
    "ques": "What is printed?<br><br>```java<br>public class Fill4 {<br>  public static void main(String[] args) {<br>    String a = \"test\";<br>    String b = new String(\"test\");<br>    System.out.println(a.equals(b));<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "Output of this?<br><br>```java<br>public class Fill5 {<br>  public static void main(String[] args) {<br>    int i = 0;<br>    do {<br>      System.out.print(i + \" \");<br>      i++;<br>    } while (i < 3);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "0 1 2 "
  },
  {
    "ques": "What is output?<br><br>```java<br>public class Fill6 {<br>  public static void main(String[] args) {<br>    int[] arr = {1, 2, 3};<br>    for (int j : arr) {<br>      System.out.print(j * 2 + \" \");<br>    }<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "2 4 6 "
  },
  {
    "ques": "What will this print?<br><br>```java<br>public class Fill7 {<br>  public static void main(String[] args) {<br>    int a = 5;<br>    int b = 2;<br>    System.out.println(a / b);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "What will this print?<br><br>```java<br>public class Fill8 {<br>  public static void main(String[] args) {<br>    String s1 = \"hello\";<br>    String s2 = \"HELLO\".toLowerCase();<br>    System.out.println(s1.equals(s2));<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "What does this output?<br><br>```java<br>public class Fill9 {<br>  public static void main(String[] args) {<br>    for (int i=0; i<3; i++) {<br>      if (i == 1) continue;<br>      System.out.print(i + \" \");<br>    }<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "0 2 "
  },
  {
    "ques": "What is printed?<br><br>```java<br>public class Fill10 {<br>  public static void main(String[] args) {<br>    int x = 7;<br>    int y = x % 3;<br>    System.out.println(y);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "1"
  },
   {
    "ques": "What will be the output?<br><br>```java<br>public class Test11 {<br>  public static void main(String[] args) {<br>    int a = 5;<br>    int b = ++a + a++;<br>    System.out.println(b);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "12",
    "op2": "11",
    "op3": "10",
    "op4": "9",
    "ans": "12"
  },
  {
    "ques": "What is printed?<br><br>```java<br>public class Test12 {<br>  public static void main(String[] args) {<br>    String s = \"Java\";<br>    System.out.println(s.charAt(2));<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "v",
    "op2": "a",
    "op3": "J",
    "op4": "Error",
    "ans": "v"
  },
  {
    "ques": "Output?<br><br>```java<br>public class Test13 {<br>  public static void main(String[] args) {<br>    int i = 0;<br>    do {<br>      System.out.print(i + \" \");<br>      i++;<br>    } while (i < 2);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "0 1 ",
    "op2": "1 2 ",
    "op3": "0 1 2 ",
    "op4": "Error",
    "ans": "0 1 "
  },
  {
    "ques": "What does this print?<br><br>```java<br>public class Test14 {<br>  public static void main(String[] args) {<br>    int[] arr = {1, 2, 3};<br>    for (int i = 0; i < arr.length; i++) {<br>      if (arr[i] == 2) break;<br>      System.out.print(arr[i] + \" \");<br>    }<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "1 2 ",
    "op2": "1 ",
    "op3": "2 3 ",
    "op4": "No output",
    "ans": "1 "
  },
  {
    "ques": "What will be output here?<br><br>```java<br>public class Test15 {<br>  public static void main(String[] args) {<br>    int x = 3;<br>    System.out.println(x * (x + 1));<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "12",
    "op2": "9",
    "op3": "7",
    "op4": "10",
    "ans": "12"
  },
  {
    "ques": "Output?<br><br>```java<br>public class Test16 {<br>  public static void main(String[] args) {<br>    boolean b = false;<br>    if (!b) System.out.println(\"True\");<br>    else System.out.println(\"False\");<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "True",
    "op2": "False",
    "op3": "Compilation error",
    "op4": "Runtime error",
    "ans": "True"
  },
  {
    "ques": "What is printed?<br><br>```java<br>public class Test17 {<br>  public static void main(String[] args) {<br>    String s = \"Hello\";<br>    System.out.println(s.length());<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "5",
    "op2": "4",
    "op3": "6",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "What will this output?<br><br>```java<br>public class Test18 {<br>  public static void main(String[] args) {<br>    int a = 10;<br>    int b = 20;<br>    System.out.println(a < b ? a : b);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "10",
    "op2": "20",
    "op3": "true",
    "op4": "false",
    "ans": "10"
  },
  {
    "ques": "What is output of this?<br><br>```java<br>public class Test19 {<br>  public static void main(String[] args) {<br>    int[] arr = {2, 4, 6};<br>    int sum = 0;<br>    for (int num : arr) {<br>      sum += num;<br>    }<br>    System.out.println(sum);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "12",
    "op2": "10",
    "op3": "6",
    "op4": "8",
    "ans": "12"
  },
  {
    "ques": "What will be the output?<br><br>```java<br>public class Test20 {<br>  public static void main(String[] args) {<br>    String s1 = \"Java\";<br>    String s2 = new String(\"Java\");<br>    System.out.println(s1 == s2);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Compilation error",
    "op4": "Runtime error",
    "ans": "false"
  },
  {
    "ques": "What is the output?<br><br>```java<br>public class Fill11 {<br>  public static void main(String[] args) {<br>    int a = 7;<br>    int b = a++ + ++a;<br>    System.out.println(b);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "16"
  },
  {
    "ques": "Output of this code?<br><br>```java<br>public class Fill12 {<br>  public static void main(String[] args) {<br>    for (int i = 0; i < 3; i++) {<br>      if (i == 1) break;<br>      System.out.print(i + \" \");<br>    }<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "0 "
  },
  {
    "ques": "What is printed?<br><br>```java<br>class A {<br>  void display() { System.out.println(\"A\"); }<br>}<br>class B extends A {<br>  void display() { System.out.println(\"B\"); }<br>}<br>public class Fill13 {<br>  public static void main(String[] args) {<br>    A obj = new B();<br>    obj.display();<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "B"
  },
  {
    "ques": "Output of this?<br><br>```java<br>public class Fill14 {<br>  public static void main(String[] args) {<br>    String s1 = \"test\";<br>    String s2 = \"TEST\".toLowerCase();<br>    System.out.println(s1 == s2);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "What does this print?<br><br>```java<br>public class Fill15 {<br>  public static void main(String[] args) {<br>    int x = 5;<br>    while (x > 2) {<br>      System.out.print(x + \" \");<br>      x--;<br>    }<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "5 4 3 "
  },
  {
    "ques": "What is output?<br><br>```java<br>public class Fill16 {<br>  public static void main(String[] args) {<br>    int[] arr = {3, 6, 9};<br>    for (int num : arr) {<br>      System.out.print(num / 3 + \" \");<br>    }<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "1 2 3 "
  },
  {
    "ques": "What will this print?<br><br>```java<br>public class Fill17 {<br>  public static void main(String[] args) {<br>    int a = 10;<br>    int b = 3;<br>    System.out.println(a % b);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "Output here?<br><br>```java<br>public class Fill18 {<br>  public static void main(String[] args) {<br>    String s1 = \"abc\";<br>    String s2 = new String(\"abc\");<br>    System.out.println(s1.equals(s2));<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "What is printed?<br><br>```java<br>public class Fill19 {<br>  public static void main(String[] args) {<br>    for (int i = 0; i < 4; i++) {<br>      if (i == 2) continue;<br>      System.out.print(i + \" \");<br>    }<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "0 1 3 "
  },
  {
    "ques": "What is the output?<br><br>```java<br>public class Fill20 {<br>  public static void main(String[] args) {<br>    int x = 8;<br>    int y = x / 4;<br>    System.out.println(y);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "What is the output?<br><br>```java<br>public class Test21 {<br>  public static void main(String[] args) {<br>    int x = 4;<br>    int y = x-- + ++x;<br>    System.out.println(y);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "7",
    "op2": "8",
    "op3": "9",
    "op4": "6",
    "ans": "7"
  },
  {
    "ques": "What will this print?<br><br>```java<br>public class Test22 {<br>  public static void main(String[] args) {<br>    String s = \"Programming\";<br>    System.out.println(s.indexOf('g'));<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "3",
    "op2": "4",
    "op3": "5",
    "op4": "6",
    "ans": "3"
  },
  {
    "ques": "Output?<br><br>```java<br>public class Test23 {<br>  public static void main(String[] args) {<br>    int[] nums = {1, 2, 3};<br>    for(int i = nums.length - 1; i >= 0; i--) {<br>      System.out.print(nums[i] + \" \");<br>    }<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "1 2 3 ",
    "op2": "3 2 1 ",
    "op3": "Error",
    "op4": "No output",
    "ans": "3 2 1 "
  },
  {
    "ques": "What is the output?<br><br>```java<br>public class Test24 {<br>  public static void main(String[] args) {<br>    int a = 2;<br>    int b = 5;<br>    System.out.println(a * b + \" \"+ a + b);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "10 7",
    "op2": "10 25",
    "op3": "10 2 5",
    "op4": "10 25 7",
    "ans": "10 25"
  },
  {
    "ques": "What does this print?<br><br>```java<br>public class Test25 {<br>  public static void main(String[] args) {<br>    boolean b1 = true, b2 = false;<br>    System.out.println(b1 && b2);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Compilation error",
    "op4": "Runtime error",
    "ans": "false"
  },
  {
    "ques": "What is the output?<br><br>```java<br>public class Test26 {<br>  public static void main(String[] args) {<br>    int count = 0;<br>    for(int i = 0; i < 5; i++) {<br>      if(i % 2 == 0) count++;<br>    }<br>    System.out.println(count);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "5",
    "op4": "4",
    "ans": "3"
  },
  {
    "ques": "What does this print?<br><br>```java<br>public class Test27 {<br>  public static void main(String[] args) {<br>    String str = \"hello\";<br>    System.out.println(str.toUpperCase());<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "HELLO",
    "op2": "hello",
    "op3": "Hello",
    "op4": "Compilation error",
    "ans": "HELLO"
  },
  {
    "ques": "Output?<br><br>```java<br>public class Test28 {<br>  public static void main(String[] args) {<br>    int a = 7;<br>    int b = 4;<br>    System.out.println(a / b);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "1.75",
    "op2": "1",
    "op3": "2",
    "op4": "3",
    "ans": "1"
  },
  {
    "ques": "What is printed?<br><br>```java<br>public class Test29 {<br>  public static void main(String[] args) {<br>    int[] arr = new int[3];<br>    System.out.println(arr[1]);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "null",
    "op4": "Error",
    "ans": "0"
  },
  {
    "ques": "Output of this code?<br><br>```java<br>public class Test30 {<br>  public static void main(String[] args) {<br>    String s1 = \"abc\";<br>    String s2 = \"abc\";<br>    System.out.println(s1 == s2);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Compilation error",
    "op4": "Runtime error",
    "ans": "true"
  },
  {
    "ques": "What will be the output?<br><br>```java<br>public class Fill21 {<br>  public static void main(String[] args) {<br>    int x = 5;<br>    int y = --x + x--;<br>    System.out.println(y);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "Output?<br><br>```java<br>public class Fill22 {<br>  public static void main(String[] args) {<br>    int sum = 0;<br>    for(int i = 1; i <= 3; i++) {<br>      sum += i;<br>    }<br>    System.out.println(sum);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "What is printed?<br><br>```java<br>public class Fill23 {<br>  public static void main(String[] args) {<br>    String s = \"Java\";<br>    System.out.println(s.substring(1, 3));<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "av"
  },
  {
    "ques": "What is the output?<br><br>```java<br>public class Fill24 {<br>  public static void main(String[] args) {<br>    int a = 2;<br>    if (a > 1) System.out.println(\"Yes\");<br>    else System.out.println(\"No\");<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "Yes"
  },
  {
    "ques": "What does this print?<br><br>```java<br>public class Fill25 {<br>  public static void main(String[] args) {<br>    int[] arr = {1, 3, 5};<br>    int product = 1;<br>    for (int n : arr) {<br>      product *= n;<br>    }<br>    System.out.println(product);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "15"
  },
  {
    "ques": "Output of this?<br><br>```java<br>public class Fill26 {<br>  public static void main(String[] args) {<br>    String s1 = \"Test\";<br>    String s2 = \"test\";<br>    System.out.println(s1.equalsIgnoreCase(s2));<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "What is printed?<br><br>```java<br>public class Fill27 {<br>  public static void main(String[] args) {<br>    int a = 10;<br>    int b = 4;<br>    System.out.println(a % b);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "Output?<br><br>```java<br>public class Fill28 {<br>  public static void main(String[] args) {<br>    for(int i = 1; i <= 3; i++) {<br>      if(i == 2) continue;<br>      System.out.print(i + \" \");<br>    }<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "1 3 "
  },
  {
    "ques": "What will be printed?<br><br>```java<br>public class Fill29 {<br>  public static void main(String[] args) {<br>    int x = 7;<br>    System.out.println(++x);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "What is the output?<br><br>```java<br>public class Fill30 {<br>  public static void main(String[] args) {<br>    String s = \"Code\" + 1 + 2;<br>    System.out.println(s);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "Code12"
  },
  {
    "ques": "What is the output?<br><br>```java<br>public class Test31 {<br>  public static void main(String[] args) {<br>    int x = 3;<br>    int y = x++ + ++x;<br>    System.out.println(y);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "7",
    "op2": "8",
    "op3": "9",
    "op4": "10",
    "ans": "8"
  },
  {
    "ques": "Output?<br><br>```java<br>public class Test32 {<br>  public static void main(String[] args) {<br>    String s = \"hello\";<br>    System.out.println(s.charAt(2));<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "e",
    "op2": "l",
    "op3": "o",
    "op4": "h",
    "ans": "l"
  },
  {
    "ques": "What will this print?<br><br>```java<br>public class Test33 {<br>  public static void main(String[] args) {<br>    int[] arr = {5, 10, 15};<br>    int sum = 0;<br>    for(int i = 0; i < arr.length; i++) {<br>      sum += arr[i];<br>    }<br>    System.out.println(sum);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "15",
    "op2": "25",
    "op3": "30",
    "op4": "35",
    "ans": "30"
  },
  {
    "ques": "What is printed?<br><br>```java<br>public class Test34 {<br>  public static void main(String[] args) {<br>    String a = \"Java\";<br>    String b = \"Java\";<br>    System.out.println(a == b);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Compilation error",
    "op4": "Runtime error",
    "ans": "true"
  },
  {
    "ques": "Output?<br><br>```java<br>public class Test35 {<br>  public static void main(String[] args) {<br>    int a = 10;<br>    int b = 3;<br>    System.out.println(a / b);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "3.33",
    "op2": "3",
    "op3": "4",
    "op4": "Error",
    "ans": "3"
  },
  {
    "ques": "What is the output?<br><br>```java<br>public class Test36 {<br>  public static void main(String[] args) {<br>    boolean flag = true;<br>    System.out.println(!flag);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Compilation error",
    "op4": "Runtime error",
    "ans": "false"
  },
  {
    "ques": "What will this print?<br><br>```java<br>public class Test37 {<br>  public static void main(String[] args) {<br>    int count = 1;<br>    while(count <= 3) {<br>      System.out.print(count + \" \");<br>      count++;<br>    }<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "1 2 3 ",
    "op2": "1 2 3 4 ",
    "op3": "0 1 2 3 ",
    "op4": "3 2 1 ",
    "ans": "1 2 3 "
  },
  {
    "ques": "What is printed?<br><br>```java<br>public class Test38 {<br>  public static void main(String[] args) {<br>    int a = 5;<br>    System.out.println(a++);<br>    System.out.println(++a);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "5 and 7",
    "op2": "5 and 6",
    "op3": "6 and 7",
    "op4": "6 and 6",
    "ans": "5 and 7"
  },
  {
    "ques": "Output?<br><br>```java<br>public class Test39 {<br>  public static void main(String[] args) {<br>    int[] arr = {1, 2, 3};<br>    for(int val : arr) {<br>      System.out.print(val + \" \");<br>    }<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "1 2 3 ",
    "op2": "3 2 1 ",
    "op3": "1 3 2 ",
    "op4": "Error",
    "ans": "1 2 3 "
  },
  {
    "ques": "What is printed?<br><br>```java<br>public class Test40 {<br>  public static void main(String[] args) {<br>    String s = \"abc\";<br>    System.out.println(s.length());<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "4",
    "op4": "Error",
    "ans": "3"
  },
  {
    "ques": "Output of this code?<br><br>```java<br>public class Fill31 {<br>  public static void main(String[] args) {<br>    int x = 10;<br>    System.out.println(x--);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "What will be printed?<br><br>```java<br>public class Fill32 {<br>  public static void main(String[] args) {<br>    String s = \"Java\";<br>    System.out.println(s.contains(\"av\"));<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "Output?<br><br>```java<br>public class Fill33 {<br>  public static void main(String[] args) {<br>    int total = 0;<br>    for(int i = 2; i <= 4; i++) {<br>      total += i;<br>    }<br>    System.out.println(total);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "9"
  },
  {
    "ques": "What does this print?<br><br>```java<br>public class Fill34 {<br>  public static void main(String[] args) {<br>    String s = \"Code\";<br>    System.out.println(s.toLowerCase());<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "code"
  },
  {
    "ques": "Output of this code?<br><br>```java<br>public class Fill35 {<br>  public static void main(String[] args) {<br>    int a = 8;<br>    int b = 3;<br>    System.out.println(a % b);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "What is printed?<br><br>```java<br>public class Fill36 {<br>  public static void main(String[] args) {<br>    int count = 0;<br>    for(int i = 0; i < 3; i++) {<br>      if(i == 1) continue;<br>      count++;<br>    }<br>    System.out.println(count);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "Output?<br><br>```java<br>public class Fill37 {<br>  public static void main(String[] args) {<br>    String s1 = \"Test\";<br>    String s2 = \"Test\";<br>    System.out.println(s1.equals(s2));<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "What will this print?<br><br>```java<br>public class Fill38 {<br>  public static void main(String[] args) {<br>    int[] arr = {1, 2, 3, 4};<br>    int sum = 0;<br>    for(int num : arr) {<br>      sum += num;<br>    }<br>    System.out.println(sum);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "Output?<br><br>```java<br>public class Fill39 {<br>  public static void main(String[] args) {<br>    int x = 5;<br>    System.out.println(++x);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "What is printed?<br><br>```java<br>public class Fill40 {<br>  public static void main(String[] args) {<br>    String s = \"Java\" + 5 + 3;<br>    System.out.println(s);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "Java53"
  }


]
let codingJava3Arr=[
  {
    "ques": "What is the output?<br><br>```java<br>public class TestH1 {<br>  public static void main(String[] args) {<br>    int x = 5;<br>    int y = ++x * x++ + --x;<br>    System.out.println(y);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "41",
    "op2": "40",
    "op3": "39",
    "op4": "42",
    "ans": "41"
  },
  {
    "ques": "What does this code print?<br><br>```java<br>public class TestH2 {<br>  public static void main(String[] args) {<br>    String s1 = new String(\"Java\");<br>    String s2 = \"Java\";<br>    System.out.println(s1 == s2);<br>    System.out.println(s1.equals(s2));<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "false and true",
    "op2": "true and false",
    "op3": "true and true",
    "op4": "false and false",
    "ans": "false and true"
  },
  {
    "ques": "What is the output?<br><br>```java<br>public class TestH3 {<br>  public static void main(String[] args) {<br>    int a = 10;<br>    int b = 20;<br>    System.out.println(a > b ? a : b > 15 ? b : a);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "10",
    "op2": "20",
    "op3": "15",
    "op4": "Compilation error",
    "ans": "20"
  },
  {
    "ques": "What will be printed?<br><br>```java<br>public class TestH4 {<br>  public static void main(String[] args) {<br>    int[] arr = new int[3];<br>    System.out.println(arr[1]);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "0",
    "op2": "null",
    "op3": "Compilation error",
    "op4": "Runtime error",
    "ans": "0"
  },
  {
    "ques": "What is the output?<br><br>```java<br>public class TestH5 {<br>  public static void main(String[] args) {<br>    final int x;<br>    x = 10;<br>    System.out.println(x);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "10",
    "op2": "Compilation error",
    "op3": "0",
    "op4": "Runtime error",
    "ans": "10"
  },
  {
    "ques": "What does this print?<br><br>```java<br>public class TestH6 {<br>  public static void main(String[] args) {<br>    int x = 10;<br>    int y = 20;<br>    int z = x++ + ++y;<br>    System.out.println(z);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "31",
    "op2": "30",
    "op3": "32",
    "op4": "29",
    "ans": "31"
  },
  {
    "ques": "What is the output?<br><br>```java<br>public class TestH7 {<br>  public static void main(String[] args) {<br>    String s = null;<br>    System.out.println(s + \"null\");<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "nullnull",
    "op2": "null",
    "op3": "Compilation error",
    "op4": "Runtime error",
    "ans": "nullnull"
  },
  {
    "ques": "What is the output?<br><br>```java<br>public class TestH8 {<br>  public static void main(String[] args) {<br>    int i = 0;<br>    for(; i < 3; i++) {<br>      System.out.print(i + \" \");<br>    }<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "0 1 2 ",
    "op2": "1 2 3 ",
    "op3": "0 1 2 3 ",
    "op4": "Error",
    "ans": "0 1 2 "
  },
  {
    "ques": "What is printed?<br><br>```java<br>public class TestH9 {<br>  public static void main(String[] args) {<br>    int[] a = {1, 2, 3};<br>    int[] b = a;<br>    b[0] = 5;<br>    System.out.println(a[0]);<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "1",
    "op2": "5",
    "op3": "Compilation error",
    "op4": "Runtime error",
    "ans": "5"
  },
  {
    "ques": "What will this print?<br><br>```java<br>public class TestH10 {<br>  public static void main(String[] args) {<br>    System.out.println(10 + 20 + \"30\");<br>  }<br>}```<br>",
    "quesType": "mcq",
    "op1": "3030",
    "op2": "102030",
    "op3": "30",
    "op4": "3030",
    "ans": "3030"
  },
  {
    "ques": "What is the output?<br><br>```java<br>public class FillH1 {<br>  public static void main(String[] args) {<br>    int a = 10;<br>    int b = a++ + ++a;<br>    System.out.println(b);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "22"
  },
  {
    "ques": "What does this print?<br><br>```java<br>public class FillH2 {<br>  public static void main(String[] args) {<br>    String s = \"Java\";<br>    System.out.println(s.substring(1, 3));<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "av"
  },
  {
    "ques": "What is the output?<br><br>```java<br>public class FillH3 {<br>  public static void main(String[] args) {<br>    int[] arr = {1, 2, 3};<br>    for(int i = 0; i < arr.length; i++) {<br>      System.out.print(arr[i] + \" \");<br>    }<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "1 2 3 "
  },
  {
    "ques": "What will be printed?<br><br>```java<br>public class FillH4 {<br>  public static void main(String[] args) {<br>    String s1 = \"abc\";<br>    String s2 = \"ABC\";<br>    System.out.println(s1.equalsIgnoreCase(s2));<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "Output of this code?<br><br>```java<br>public class FillH5 {<br>  public static void main(String[] args) {<br>    int x = 5;<br>    x += 10;<br>    System.out.println(x);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "15"
  },
  {
    "ques": "What is printed?<br><br>```java<br>public class FillH6 {<br>  public static void main(String[] args) {<br>    int a = 10;<br>    if(a > 5) {<br>      System.out.println(\"Yes\");<br>    } else {<br>      System.out.println(\"No\");<br>    }<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "Yes"
  },
  {
    "ques": "What is the output?<br><br>```java<br>public class FillH7 {<br>  public static void main(String[] args) {<br>    for(int i = 0; i < 3; i++) {<br>      if(i == 1) break;<br>      System.out.print(i);<br>    }<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "What does this print?<br><br>```java<br>public class FillH8 {<br>  public static void main(String[] args) {<br>    String s = \"Hello\";<br>    System.out.println(s.charAt(4));<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "o"
  },
  {
    "ques": "What is printed?<br><br>```java<br>public class FillH9 {<br>  public static void main(String[] args) {<br>    int a = 5;<br>    int b = 10;<br>    System.out.println(a > b ? a : b);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "Output of this code?<br><br>```java<br>public class FillH10 {<br>  public static void main(String[] args) {<br>    int[] arr = {10, 20, 30};<br>    System.out.println(arr[2]);<br>  }<br>}```<br>",
    "quesType": "fill",
    "ans": "30"
  },
   {
    ques: "What is the output?<br><br>```java<br>public class TestH1 {<br>  public static void main(String[] args) {<br>    int x = 5;<br>    int y = ++x * x++ + --x;<br>    System.out.println(y);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "41",
    op2: "40",
    op3: "39",
    op4: "42",
    ans: "41"
  },
  {
    ques: "What does this code print?<br><br>```java<br>public class TestH2 {<br>  public static void main(String[] args) {<br>    String s1 = new String(\"Java\");<br>    String s2 = \"Java\";<br>    System.out.println(s1 == s2);<br>    System.out.println(s1.equals(s2));<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "false and true",
    op2: "true and false",
    op3: "true and true",
    op4: "false and false",
    ans: "false and true"
  },
  {
    ques: "What is the output?<br><br>```java<br>public class TestH3 {<br>  public static void main(String[] args) {<br>    int a = 10;<br>    int b = 20;<br>    System.out.println(a > b ? a : b > 15 ? b : a);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "10",
    op2: "20",
    op3: "15",
    op4: "Compilation error",
    ans: "20"
  },
  {
    ques: "What will be printed?<br><br>```java<br>public class TestH4 {<br>  public static void main(String[] args) {<br>    int[] arr = new int[3];<br>    System.out.println(arr[1]);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "0",
    op2: "null",
    op3: "Compilation error",
    op4: "Runtime error",
    ans: "0"
  },
  {
    ques: "What is the output?<br><br>```java<br>public class TestH5 {<br>  public static void main(String[] args) {<br>    final int x;<br>    x = 10;<br>    System.out.println(x);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "10",
    op2: "Compilation error",
    op3: "0",
    op4: "Runtime error",
    ans: "10"
  },
  {
    ques: "What does this print?<br><br>```java<br>public class TestH6 {<br>  public static void main(String[] args) {<br>    int x = 10;<br>    int y = 20;<br>    int z = x++ + ++y;<br>    System.out.println(z);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "31",
    op2: "30",
    op3: "32",
    op4: "29",
    ans: "31"
  },
  {
    ques: "What is the output?<br><br>```java<br>public class TestH7 {<br>  public static void main(String[] args) {<br>    String s = null;<br>    System.out.println(s + \"null\");<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "nullnull",
    op2: "null",
    op3: "Compilation error",
    op4: "Runtime error",
    ans: "nullnull"
  },
  {
    ques: "What is the output?<br><br>```java<br>public class TestH8 {<br>  public static void main(String[] args) {<br>    int i = 0;<br>    for(; i < 3; i++) {<br>      System.out.print(i + \" \");<br>    }<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "0 1 2 ",
    op2: "1 2 3 ",
    op3: "0 1 2 3 ",
    op4: "Error",
    ans: "0 1 2 "
  },
  {
    ques: "What is printed?<br><br>```java<br>public class TestH9 {<br>  public static void main(String[] args) {<br>    int[] a = {1, 2, 3};<br>    int[] b = a;<br>    b[0] = 5;<br>    System.out.println(a[0]);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "1",
    op2: "5",
    op3: "Compilation error",
    op4: "Runtime error",
    ans: "5"
  },
  {
    ques: "What will this print?<br><br>```java<br>public class TestH10 {<br>  public static void main(String[] args) {<br>    System.out.println(10 + 20 + \"30\");<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "3030",
    op2: "102030",
    op3: "30",
    op4: "3030",
    ans: "3030"
  },
  {
    ques: "What is the output?<br><br>```java<br>public class FillH1 {<br>  public static void main(String[] args) {<br>    int a = 10;<br>    int b = a++ + ++a;<br>    System.out.println(b);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "22"
  },
  {
    ques: "What does this print?<br><br>```java<br>public class FillH2 {<br>  public static void main(String[] args) {<br>    String s = \"Java\";<br>    System.out.println(s.substring(1, 3));<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "av"
  },
  {
    ques: "What is the output?<br><br>```java<br>public class FillH3 {<br>  public static void main(String[] args) {<br>    int[] arr = {1, 2, 3};<br>    for(int i = 0; i < arr.length; i++) {<br>      System.out.print(arr[i] + \" \");<br>    }<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "1 2 3 "
  },
  {
    ques: "What will be printed?<br><br>```java<br>public class FillH4 {<br>  public static void main(String[] args) {<br>    String s1 = \"abc\";<br>    String s2 = \"ABC\";<br>    System.out.println(s1.equalsIgnoreCase(s2));<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "true"
  },
  {
    ques: "Output of this code?<br><br>```java<br>public class FillH5 {<br>  public static void main(String[] args) {<br>    int x = 5;<br>    x += 10;<br>    System.out.println(x);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "15"
  },
  {
    ques: "What is printed?<br><br>```java<br>public class FillH6 {<br>  public static void main(String[] args) {<br>    int a = 10;<br>    if(a > 5) {<br>      System.out.println(\"Yes\");<br>    } else {<br>      System.out.println(\"No\");<br>    }<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "Yes"
  },
  {
    ques: "What is the output?<br><br>```java<br>public class FillH7 {<br>  public static void main(String[] args) {<br>    for(int i = 0; i < 3; i++) {<br>      if(i == 1) break;<br>      System.out.print(i);<br>    }<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "0"
  },
  {
    ques: "What does this print?<br><br>```java<br>public class FillH8 {<br>  public static void main(String[] args) {<br>    String s = \"Hello\";<br>    System.out.println(s.charAt(4));<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "o"
  },
  {
    ques: "What is printed?<br><br>```java<br>public class FillH9 {<br>  public static void main(String[] args) {<br>    int a = 5;<br>    int b = 10;<br>    System.out.println(a > b ? a : b);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "10"
  },
  {
    ques: "Output of this code?<br><br>```java<br>public class FillH10 {<br>  public static void main(String[] args) {<br>    int[] arr = {10, 20, 30};<br>    System.out.println(arr[2]);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "30"
  },
  {
    ques: "What is the output?<br><br>```java<br>public class TestH1 {<br>  public static void main(String[] args) {<br>    int x = 5;<br>    int y = ++x * x++ + --x;<br>    System.out.println(y);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "41",
    op2: "40",
    op3: "39",
    op4: "42",
    ans: "41"
  },
  {
    ques: "What does this code print?<br><br>```java<br>public class TestH2 {<br>  public static void main(String[] args) {<br>    String s1 = new String(\"Java\");<br>    String s2 = \"Java\";<br>    System.out.println(s1 == s2);<br>    System.out.println(s1.equals(s2));<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "false and true",
    op2: "true and false",
    op3: "true and true",
    op4: "false and false",
    ans: "false and true"
  },
  {
    ques: "What is the output?<br><br>```java<br>public class TestH3 {<br>  public static void main(String[] args) {<br>    int a = 10;<br>    int b = 20;<br>    System.out.println(a > b ? a : b > 15 ? b : a);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "10",
    op2: "20",
    op3: "15",
    op4: "Compilation error",
    ans: "20"
  },
  {
    ques: "What will be printed?<br><br>```java<br>public class TestH4 {<br>  public static void main(String[] args) {<br>    int[] arr = new int[3];<br>    System.out.println(arr[1]);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "0",
    op2: "null",
    op3: "Compilation error",
    op4: "Runtime error",
    ans: "0"
  },
  {
    ques: "What is the output?<br><br>```java<br>public class TestH5 {<br>  public static void main(String[] args) {<br>    final int x;<br>    x = 10;<br>    System.out.println(x);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "10",
    op2: "Compilation error",
    op3: "0",
    op4: "Runtime error",
    ans: "10"
  },
  {
    ques: "What does this print?<br><br>```java<br>public class TestH6 {<br>  public static void main(String[] args) {<br>    int x = 10;<br>    int y = 20;<br>    int z = x++ + ++y;<br>    System.out.println(z);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "31",
    op2: "30",
    op3: "32",
    op4: "29",
    ans: "31"
  },
  {
    ques: "What is the output?<br><br>```java<br>public class TestH7 {<br>  public static void main(String[] args) {<br>    String s = null;<br>    System.out.println(s + \"null\");<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "nullnull",
    op2: "null",
    op3: "Compilation error",
    op4: "Runtime error",
    ans: "nullnull"
  },
  {
    ques: "What is the output?<br><br>```java<br>public class TestH8 {<br>  public static void main(String[] args) {<br>    int i = 0;<br>    for(; i < 3; i++) {<br>      System.out.print(i + \" \");<br>    }<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "0 1 2 ",
    op2: "1 2 3 ",
    op3: "0 1 2 3 ",
    op4: "Error",
    ans: "0 1 2 "
  },
  {
    ques: "What is printed?<br><br>```java<br>public class TestH9 {<br>  public static void main(String[] args) {<br>    int[] a = {1, 2, 3};<br>    int[] b = a;<br>    b[0] = 5;<br>    System.out.println(a[0]);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "1",
    op2: "5",
    op3: "Compilation error",
    op4: "Runtime error",
    ans: "5"
  },
  {
    ques: "What will this print?<br><br>```java<br>public class TestH10 {<br>  public static void main(String[] args) {<br>    System.out.println(10 + 20 + \"30\");<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "3030",
    op2: "102030",
    op3: "30",
    op4: "3030",
    ans: "3030"
  },

  // Fill in the blanks
  {
    ques: "What is the output?<br><br>```java<br>public class FillH1 {<br>  public static void main(String[] args) {<br>    int a = 10;<br>    int b = a++ + ++a;<br>    System.out.println(b);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "22"
  },
  {
    ques: "What does this print?<br><br>```java<br>public class FillH2 {<br>  public static void main(String[] args) {<br>    String s = \"Java\";<br>    System.out.println(s.substring(1, 3));<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "av"
  },
  {
    ques: "What is the output?<br><br>```java<br>public class FillH3 {<br>  public static void main(String[] args) {<br>    int[] arr = {1, 2, 3};<br>    for(int i = 0; i < arr.length; i++) {<br>      System.out.print(arr[i] + \" \");<br>    }<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "1 2 3 "
  },
  {
    ques: "What will be printed?<br><br>```java<br>public class FillH4 {<br>  public static void main(String[] args) {<br>    String s1 = \"abc\";<br>    String s2 = \"ABC\";<br>    System.out.println(s1.equalsIgnoreCase(s2));<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "true"
  },
  {
    ques: "Output of this code?<br><br>```java<br>public class FillH5 {<br>  public static void main(String[] args) {<br>    int x = 5;<br>    x += 10;<br>    System.out.println(x);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "15"
  },
  {
    ques: "What is printed?<br><br>```java<br>public class FillH6 {<br>  public static void main(String[] args) {<br>    int a = 10;<br>    if(a > 5) {<br>      System.out.println(\"Yes\");<br>    } else {<br>      System.out.println(\"No\");<br>    }<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "Yes"
  },
  {
    ques: "What is the output?<br><br>```java<br>public class FillH7 {<br>  public static void main(String[] args) {<br>    for(int i = 0; i < 3; i++) {<br>      if(i == 1) break;<br>      System.out.print(i);<br>    }<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "0"
  },
  {
    ques: "What does this print?<br><br>```java<br>public class FillH8 {<br>  public static void main(String[] args) {<br>    String s = \"Hello\";<br>    System.out.println(s.charAt(4));<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "o"
  },
  {
    ques: "What is printed?<br><br>```java<br>public class FillH9 {<br>  public static void main(String[] args) {<br>    int a = 5;<br>    int b = 10;<br>    System.out.println(a > b ? a : b);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "10"
  },
  {
    ques: "Output of this code?<br><br>```java<br>public class FillH10 {<br>  public static void main(String[] args) {<br>    int[] arr = {10, 20, 30};<br>    System.out.println(arr[2]);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "30"
  },
   {
    ques: "What will be the output?<br><br>```java<br>public class EH1 {<br>  public static void main(String[] args) {<br>    Integer a = 128;<br>    Integer b = 128;<br>    System.out.println(a == b);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "true",
    op2: "false",
    op3: "Compilation error",
    op4: "Exception",
    ans: "false"
  },
  {
    ques: "Which of the following allows method chaining in Java?<br>",
    quesType: "mcq",
    op1: "Returning `this` from method",
    op2: "Using static methods only",
    op3: "Using constructors only",
    op4: "Only using final methods",
    ans: "Returning `this` from method"
  },
  {
    ques: "What is the output?<br><br>```java<br>public class EH3 {<br>  static int x = 10;<br>  static { x += 5; }<br>  public static void main(String[] args) {<br>    System.out.println(\"x=\" + x);<br>  }<br>  static { x *= 2; }<br>}```<br>",
    quesType: "mcq",
    op1: "x=20",
    op2: "x=30",
    op3: "x=10",
    op4: "Compilation error",
    ans: "x=30"
  },
  {
    ques: "Which of the following is true about `transient` keyword in Java?<br>",
    quesType: "mcq",
    op1: "It prevents serialization of the variable",
    op2: "It prevents inheritance",
    op3: "It makes variable static",
    op4: "It enables thread safety",
    ans: "It prevents serialization of the variable"
  },
  {
    ques: "What does this print?<br><br>```java<br>public class EH5 {<br>  public static void main(String[] args) {<br>    String a = \"abc\";<br>    String b = new String(\"abc\");<br>    System.out.print((a == b) + \", \");<br>    System.out.println(a.equals(b));<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "true, true",
    op2: "false, false",
    op3: "true, false",
    op4: "false, true",
    ans: "false, true"
  },
  {
    ques: "Which output will be printed?<br><br>```java<br>public class EH6 {<br>  public static void main(String[] args) {<br>    String s = \"java\";<br>    s.toUpperCase();<br>    System.out.print(s);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "JAVA",
    op2: "java",
    op3: "Compilation error",
    op4: "NullPointerException",
    ans: "java"
  },
  {
    ques: "What is the output of the following code?<br><br>```java<br>public class EH7 {<br>  public static void main(String[] args) {<br>    System.out.println(10 + 20 + \"Hello\" + 10 + 20);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "30Hello1020",
    op2: "Hello1020",
    op3: "1020Hello30",
    op4: "1020Hello",
    ans: "30Hello1020"
  },
  {
    ques: "Which class can access private members of another class in Java?<br>",
    quesType: "mcq",
    op1: "No class can access private members",
    op2: "Only child class",
    op3: "Friend class",
    op4: "Inner class",
    ans: "Inner class"
  },
  {
    ques: "Which keyword ensures only one thread executes a block at a time?<br>",
    quesType: "mcq",
    op1: "volatile",
    op2: "synchronized",
    op3: "transient",
    op4: "static",
    ans: "synchronized"
  },
  {
    ques: "Which of the following is NOT a valid Java memory area?<br>",
    quesType: "mcq",
    op1: "Heap",
    op2: "Stack",
    op3: "Method Area",
    op4: "ROM",
    ans: "ROM"
  },

  // 🧠 HARD Fill in the Blanks
  {
    ques: "What is the output?<br><br>```java<br>public class EHFB1 {<br>  public static void main(String[] args) {<br>    Integer x = 1000;<br>    Integer y = 1000;<br>    System.out.println(x == y);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "false"
  },
  {
    ques: "Fill the output:<br><br>```java<br>public class EHFB2 {<br>  public static void main(String[] args) {<br>    int i = 10;<br>    System.out.println(--i + i++ + ++i);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "30"
  },
  {
    ques: "What will be printed?<br><br>```java<br>public class EHFB3 {<br>  public static void main(String[] args) {<br>    String s1 = \"abc\";<br>    String s2 = \"abc\";<br>    System.out.println(s1 == s2);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "true"
  },
  {
    ques: "What is the value printed?<br><br>```java<br>public class EHFB4 {<br>  public static void main(String[] args) {<br>    int[] a = new int[1];<br>    System.out.println(a[0]);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "0"
  },
  {
    ques: "What gets printed?<br><br>```java<br>public class EHFB5 {<br>  public static void main(String[] args) {<br>    String s = \"Java\";<br>    System.out.println(s.substring(1, 3));<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "av"
  },
  {
    ques: "What’s the output?<br><br>```java<br>public class EHFB6 {<br>  public static void main(String[] args) {<br>    String s = null;<br>    s += \"test\";<br>    System.out.println(s);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "nulltest"
  },
  {
    ques: "Complete the output:<br><br>```java<br>public class EHFB7 {<br>  static int count;<br>  static { count = 10; }<br>  public static void main(String[] args) {<br>    System.out.println(count);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "10"
  },
  {
    ques: "Fill the result:<br><br>```java<br>public class EHFB8 {<br>  public static void main(String[] args) {<br>    double d = 5/2;<br>    System.out.println(d);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "2.0"
  },
  {
    ques: "Predict the output:<br><br>```java<br>public class EHFB9 {<br>  public static void main(String[] args) {<br>    System.out.println(Math.min(Double.MIN_VALUE, 0.0d));<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "0.0"
  },
  {
    ques: "What will be printed?<br><br>```java<br>public class EHFB10 {<br>  public static void main(String[] args) {<br>    int a = 5;<br>    int b = 2;<br>    double c = a / b;<br>    System.out.println(c);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "2.0"
  },
  {
    ques: "What is the output?<br><br>```java<br>class A {<br>  int x = 5;<br>}<br>class B extends A {<br>  int x = 10;<br>  void print() {<br>    System.out.println(super.x);<br>  }<br>}<br>public class Test {<br>  public static void main(String[] args) {<br>    new B().print();<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "10",
    op2: "5",
    op3: "0",
    op4: "Compilation error",
    ans: "5"
  },
  {
    ques: "Output?<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    int a = 5;<br>    a = a++ + ++a;<br>    System.out.println(a);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "11",
    op2: "12",
    op3: "13",
    op4: "14",
    ans: "12"
  },
  {
    ques: "Result of:<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    Integer x = 127;<br>    Integer y = 127;<br>    System.out.println(x == y);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "false",
    op2: "true",
    op3: "Compilation error",
    op4: "Runtime error",
    ans: "true"
  },
  {
    ques: "Find the output:<br><br>```java<br>class X {<br>  static {<br>    System.out.println(\"Static\");<br>  }<br>  {<br>    System.out.println(\"Block\");<br>  }<br>  X() {<br>    System.out.println(\"Constructor\");<br>  }<br>}<br>public class Test {<br>  public static void main(String[] args) {<br>    new X();<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "Static Block Constructor",
    op2: "Block Static Constructor",
    op3: "Static Constructor Block",
    op4: "Block Constructor Static",
    ans: "Static Block Constructor"
  },
  {
    ques: "What will this print?<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    int a = 10;<br>    System.out.println(a >> 1);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "5",
    op2: "10",
    op3: "2",
    op4: "8",
    ans: "5"
  },
  {
    ques: "What's printed?<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    System.out.println(\"Java\".replace(\"a\", \"e\"));<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "Jeve",
    op2: "Jeva",
    op3: "Jeve",
    op4: "Jevae",
    ans: "Jeve"
  },
  {
    ques: "What is output?<br><br>```java<br>class Test {<br>  public static void main(String[] args) {<br>    boolean b = true;<br>    b = !b;<br>    if (b)<br>      System.out.print(\"Yes\");<br>    else<br>      System.out.print(\"No\");<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "Yes",
    op2: "No",
    op3: "true",
    op4: "false",
    ans: "No"
  },
  {
    ques: "Find the output:<br><br>```java<br>public class Test {<br>  static int x;<br>  public static void main(String[] args) {<br>    System.out.println(x);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "0",
    op2: "null",
    op3: "undefined",
    op4: "Compilation error",
    ans: "0"
  },
  {
    ques: "Output is?<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    System.out.println(\"abc\" instanceof String);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "true",
    op2: "false",
    op3: "error",
    op4: "null",
    ans: "true"
  },
  {
    ques: "What is the output?<br><br>```java<br>public class Test {<br>  static int x = 10;<br>  static void change(int x) {<br>    x = 20;<br>  }<br>  public static void main(String[] args) {<br>    change(x);<br>    System.out.println(x);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "20",
    op2: "10",
    op3: "0",
    op4: "Compilation error",
    ans: "10"
  },

  // 🔥 Fill in the Blanks - HARD Output Based
  {
    ques: "What is printed?<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    int a = 5;<br>    int b = 10;<br>    System.out.println((a & b));<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "0"
  },
  {
    ques: "What’s the result?<br><br>```java<br>class A {<br>  static void hello() { System.out.println(\"Hello\"); }<br>}<br>class B extends A {<br>  static void hello() { System.out.println(\"Hi\"); }<br>}<br>public class Test {<br>  public static void main(String[] args) {<br>    A obj = new B();<br>    obj.hello();<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "Hello"
  },
  {
    ques: "Result of:<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    String s1 = \"hello\";<br>    String s2 = new String(\"hello\");<br>    System.out.println(s1 == s2);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "false"
  },
  {
    ques: "Fill output:<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    System.out.println(10 + \"20\" + 30);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "102030"
  },
  {
    ques: "Prints what?<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    final int x = 5;<br>    // x++;<br>    System.out.println(x);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "5"
  },
  {
    ques: "What is output?<br><br>```java<br>class A {<br>  int x = 5;<br>}<br>public class Test {<br>  public static void main(String[] args) {<br>    A a1 = new A();<br>    A a2 = a1;<br>    a1.x = 7;<br>    System.out.println(a2.x);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "7"
  },
  {
    ques: "Expected output?<br><br>```java<br>class Test {<br>  public static void main(String[] args) {<br>    System.out.println(Math.max(3.5, 4));<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "4.0"
  },
  {
    ques: "Output?<br><br>```java<br>public class Test {<br>  static int a = m1();<br>  static int m1() {<br>    System.out.print(\"A\");<br>    return 1;<br>  }<br>  public static void main(String[] args) {<br>    System.out.print(\"B\");<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "AB"
  },
  {
    ques: "What is printed?<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    String x = \"abc\";<br>    x.concat(\"def\");<br>    System.out.println(x);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "abc"
  },
  {
    ques: "Final output?<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    int a = 5;<br>    int b = ++a + a++ + --a;<br>    System.out.println(b);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "18"
  },
  {
    ques: "What will be the output?<br><br>```java<br>class A {<br>  A() {<br>    print();<br>  }<br>  void print() {<br>    System.out.println(\"A\");<br>  }<br>}<br>class B extends A {<br>  int x = 1;<br>  void print() {<br>    System.out.println(x);<br>  }<br>}<br>public class Test {<br>  public static void main(String[] args) {<br>    new B();<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "1",
    op2: "A",
    op3: "0",
    op4: "null",
    ans: "0"
  },
  {
    ques: "What is printed?<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    int x = 5;<br>    x = x++ * 2 + --x;<br>    System.out.println(x);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "15",
    op2: "14",
    op3: "13",
    op4: "16",
    ans: "14"
  },
  {
    ques: "What is output?<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    String a = \"Java\";<br>    String b = new String(\"Java\");<br>    System.out.println(a == b);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "true",
    op2: "false",
    op3: "Compilation error",
    op4: "Runtime exception",
    ans: "false"
  },
  {
    ques: "What is printed?<br><br>```java<br>interface A {<br>  default void show() {<br>    System.out.println(\"A\");<br>  }<br>}<br>interface B {<br>  default void show() {<br>    System.out.println(\"B\");<br>  }<br>}<br>class C implements A, B {<br>  public void show() {<br>    A.super.show();<br>  }<br>}<br>public class Test {<br>  public static void main(String[] args) {<br>    new C().show();<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "A",
    op2: "B",
    op3: "Compilation error",
    op4: "AB",
    ans: "A"
  },
  {
    ques: "What is the result?<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    Integer i1 = 1000, i2 = 1000;<br>    System.out.println(i1 == i2);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "true",
    op2: "false",
    op3: "Compilation error",
    op4: "null",
    ans: "false"
  },
  {
    ques: "Find output:<br><br>```java<br>public class Test {<br>  static {<br>    System.out.println(\"Static Block\");<br>  }<br>  {<br>    System.out.println(\"Instance Block\");<br>  }<br>  public static void main(String[] args) {<br>    new Test();<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "Static Block Instance Block",
    op2: "Instance Block Static Block",
    op3: "Only Static Block",
    op4: "Only Instance Block",
    ans: "Static Block Instance Block"
  },
  {
    ques: "Output?<br><br>```java<br>class Test {<br>  public static void main(String[] args) {<br>    int x = 0b101 & 0b110;<br>    System.out.println(x);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "4",
    op2: "0",
    op3: "6",
    op4: "2",
    ans: "4"
  },
  {
    ques: "What is printed?<br><br>```java<br>public class Test {<br>  static int a = 10;<br>  static { a += 5; }<br>  public static void main(String[] args) {<br>    System.out.println(--a);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "14",
    op2: "15",
    op3: "10",
    op4: "11",
    ans: "14"
  },
  {
    ques: "What does this output?<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    final String s1 = \"Hello\";<br>    final String s2 = \"World\";<br>    String s3 = s1 + s2;<br>    System.out.println(\"HelloWorld\" == s3);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "true",
    op2: "false",
    op3: "Error",
    op4: "null",
    ans: "false"
  },
  {
    ques: "What’s the output?<br><br>```java<br>class A {<br>  static int count = 0;<br>  A() { count++; }<br>}<br>public class Test {<br>  public static void main(String[] args) {<br>    A a1 = new A();<br>    A a2 = new A();<br>    System.out.println(A.count);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "1",
    op2: "2",
    op3: "0",
    op4: "Compilation error",
    ans: "2"
  },

  // 💥 Fill-in-the-blank (Ultra Hard)
  {
    ques: "Output?<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    int a = 1;<br>    int b = a++ + ++a + a--;<br>    System.out.println(b);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "6"
  },
  {
    ques: "Fill output:<br><br>```java<br>public class Test {<br>  static String str = \"abc\";<br>  public static void main(String[] args) {<br>    str.concat(\"def\");<br>    System.out.println(str);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "abc"
  },
  {
    ques: "Output?<br><br>```java<br>interface X {<br>  default void fun() { System.out.print(\"X\"); }<br>}<br>interface Y {<br>  default void fun() { System.out.print(\"Y\"); }<br>}<br>class Z implements X, Y {<br>  public void fun() { X.super.fun(); }<br>}<br>public class Test {<br>  public static void main(String[] args) {<br>    new Z().fun();<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "X"
  },
  {
    ques: "What prints?<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    int x = 10;<br>    System.out.println(x >> 2);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "2"
  },
  {
    ques: "Find output:<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    int[] arr = {1, 2, 3};<br>    System.out.println(arr[1]);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "2"
  },
  {
    ques: "Result?<br><br>```java<br>class Test {<br>  public static void main(String[] args) {<br>    String s1 = \"test\";<br>    String s2 = \"te\" + \"st\";<br>    System.out.println(s1 == s2);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "true"
  },
  {
    ques: "What is output?<br><br>```java<br>public class Test {<br>  public static void main(String[] args) {<br>    System.out.println(5 ^ 3);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "6"
  },
  {
    ques: "Expected result?<br><br>```java<br>class Demo {<br>  public static void main(String[] args) {<br>    System.out.println(\"abc\" + 1 + 2);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "abc12"
  },
  {
    ques: "Prints what?<br><br>```java<br>class Test {<br>  static void show() {<br>    System.out.println(\"Static method\");<br>  }<br>}<br>public class Demo {<br>  public static void main(String[] args) {<br>    Test t = null;<br>    t.show();<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "Static method"
  },
  {
    ques: "Final output?<br><br>```java<br>class Test {<br>  public static void main(String[] args) {<br>    byte b = 127;<br>    b++;<br>    System.out.println(b);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "-128"
  },
  {
    ques: "What will be the output?<br><br>```java<br>public class Main {<br>  public static void main(String[] args) {<br>    int x = 10;<br>    System.out.println(x++ + ++x + x);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "33",
    op2: "31",
    op3: "32",
    op4: "30",
    ans: "32"
  },
  {
    ques: "What will be printed?<br><br>```java<br>public class Main {<br>  public static void main(String[] args) {<br>    String s = null;<br>    System.out.println(s + 1);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "null1",
    op2: "1",
    op3: "Compile Error",
    op4: "Runtime Error",
    ans: "null1"
  },
  {
    ques: "What does this output?<br><br>```java<br>class Test {<br>  static { System.out.print(\"A\"); }<br>  { System.out.print(\"B\"); }<br>  Test() { System.out.print(\"C\"); }<br>}<br>public class Main {<br>  public static void main(String[] args) {<br>    new Test();<br>    new Test();<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "ABCABC",
    op2: "ABABCC",
    op3: "AABCC",
    op4: "ABBCC",
    ans: "ABCBC"
  },
  {
    ques: "What will be the output?<br><br>```java<br>public class Main {<br>  public static void main(String[] args) {<br>    int a = 5;<br>    System.out.println(a+++a+++a);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "15",
    op2: "16",
    op3: "17",
    op4: "Syntax error",
    ans: "16"
  },
  {
    ques: "What is printed?<br><br>```java<br>public class Main {<br>  public static void main(String[] args) {<br>    Integer i1 = 128;<br>    Integer i2 = 128;<br>    System.out.println(i1 == i2);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "true",
    op2: "false",
    op3: "Compile time error",
    op4: "Exception",
    ans: "false"
  },
  {
    ques: "What is the output?<br><br>```java<br>class A {<br>  static String s = \"Hello\";<br>}<br>class B extends A {<br>  static { s = s + \" World\"; }<br>}<br>public class Main {<br>  public static void main(String[] args) {<br>    System.out.println(B.s);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "Hello",
    op2: "Hello World",
    op3: "World Hello",
    op4: "null",
    ans: "Hello World"
  },
  {
    ques: "Find the result:<br><br>```java<br>public class Main {<br>  static void test(Object o) { System.out.println(\"Object\"); }<br>  static void test(String s) { System.out.println(\"String\"); }<br>  public static void main(String[] args) {<br>    test(null);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "Object",
    op2: "String",
    op3: "null",
    op4: "Compile-time error",
    ans: "String"
  },
  {
    ques: "What is output?<br><br>```java<br>public class Main {<br>  public static void main(String[] args) {<br>    final int x = 10;<br>    final int y = 20;<br>    int[] arr = new int[x + y];<br>    System.out.println(arr.length);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "20",
    op2: "30",
    op3: "Compile error",
    op4: "Runtime error",
    ans: "30"
  },
  {
    ques: "Predict the output:<br><br>```java<br>class A {<br>  int x = 10;<br>}<br>class B extends A {<br>  int x = 20;<br>}<br>public class Main {<br>  public static void main(String[] args) {<br>    A obj = new B();<br>    System.out.println(obj.x);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "10",
    op2: "20",
    op3: "Compile error",
    op4: "Runtime error",
    ans: "10"
  },
  {
    ques: "What’s the result?<br><br>```java<br>public class Main {<br>  public static void main(String[] args) {<br>    String s1 = \"abc\";<br>    String s2 = s1;<br>    s1 = \"xyz\";<br>    System.out.println(s2);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "xyz",
    op2: "abc",
    op3: "null",
    op4: "Compilation error",
    ans: "abc"
  },

  // 🔥 Ultra-Hard Fill-in-the-Blanks
  {
    ques: "Output?<br><br>```java<br>public class Main {<br>  public static void main(String[] args) {<br>    char ch = 'A';<br>    System.out.println(ch + 1);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "66"
  },
  {
    ques: "What is printed?<br><br>```java<br>public class Main {<br>  public static void main(String[] args) {<br>    boolean b = true;<br>    System.out.println(!b);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "false"
  },
  {
    ques: "Final output?<br><br>```java<br>public class Main {<br>  public static void main(String[] args) {<br>    int[] arr = new int[5];<br>    System.out.println(arr[3]);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "0"
  },
  {
    ques: "Output of code?<br><br>```java<br>public class Main {<br>  static int x = 5;<br>  static { x = x * 2; }<br>  public static void main(String[] args) {<br>    System.out.println(x);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "10"
  },
  {
    ques: "Output?<br><br>```java<br>public class Main {<br>  public static void main(String[] args) {<br>    System.out.println(Math.max(2, Math.min(5, 3)));<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "3"
  },
  {
    ques: "What will it print?<br><br>```java<br>public class Main {<br>  public static void main(String[] args) {<br>    System.out.println(\"A\" + 'B' + 3);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "AB3"
  },
  {
    ques: "Predict output:<br><br>```java<br>public class Main {<br>  public static void main(String[] args) {<br>    int x = 10, y = 20;<br>    System.out.println((x > y) ? x : y);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "20"
  },
  {
    ques: "Expected output?<br><br>```java<br>public class Main {<br>  public static void main(String[] args) {<br>    String s = \"hello\";<br>    System.out.println(s.length());<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "5"
  },
  {
    ques: "What’s the answer?<br><br>```java<br>public class Main {<br>  public static void main(String[] args) {<br>    int result = 2 << 2;<br>    System.out.println(result);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "8"
  },
  {
    ques: "Final result?<br><br>```java<br>public class Main {<br>  public static void main(String[] args) {<br>    boolean a = true;<br>    boolean b = false;<br>    System.out.println(a && b);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "false"
  },
  {
    ques: "What is the output?<br><br>```java<br>public class Main {<br>  static int recur(int n) {<br>    if (n <= 1) return 1;<br>    return n * recur(n - 2);<br>  }<br>  public static void main(String[] args) {<br>    System.out.println(recur(5));<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "15",
    op2: "10",
    op3: "5",
    op4: "120",
    ans: "15"
  },
  {
    ques: "What will be printed?<br><br>```java<br>class A { void show() { System.out.println(\"A\"); }}<br>class B extends A { void show() { System.out.println(\"B\"); }}<br>class C extends B { void show() { System.out.println(\"C\"); } }<br>public class Main {<br>  public static void main(String[] args) {<br>    A obj = new C();<br>    obj.show();<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "A",
    op2: "B",
    op3: "C",
    op4: "Compile Error",
    ans: "C"
  },
  {
    ques: "What is the output?<br><br>```java<br>class Demo extends Thread {<br>  public void run() {<br>    System.out.println(\"Running\");<br>  }<br>}<br>public class Main {<br>  public static void main(String[] args) {<br>    Demo d = new Demo();<br>    d.run();<br>    System.out.println(\"Done\");<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "Running Done",
    op2: "Done Running",
    op3: "Only Done",
    op4: "Exception",
    ans: "Running Done"
  },
  {
    ques: "Which is true about this code?<br><br>```java<br>interface A { void test(); }<br>class B implements A {<br>  public void test() { System.out.println(\"B\"); }<br>}<br>class C extends B {<br>  public void test() { System.out.println(\"C\"); }<br>}<br>public class Main {<br>  public static void main(String[] args) {<br>    A obj = new C();<br>    obj.test();<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "C",
    op2: "B",
    op3: "Compile Error",
    op4: "Runtime Exception",
    ans: "C"
  },
  {
    ques: "What’s the output?<br><br>```java<br>public class Main {<br>  static int fib(int n) {<br>    if (n <= 1) return n;<br>    return fib(n-1) + fib(n-2);<br>  }<br>  public static void main(String[] args) {<br>    System.out.print(fib(4));<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "3",
    op2: "4",
    op3: "5",
    op4: "6",
    ans: "3"
  },

  // 🧨 Fill-in-the-blanks (Output based)
  {
    ques: "Find output:<br><br>```java<br>class Parent {<br>  int val = 100;<br>}<br>class Child extends Parent {<br>  int val = 200;<br>}<br>public class Main {<br>  public static void main(String[] args) {<br>    Parent p = new Child();<br>    System.out.println(p.val);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "100"
  },
  {
    ques: "Predict:<br><br>```java<br>class Counter {<br>  static int count = 0;<br>  Counter() { count++; }<br>}<br>public class Main {<br>  public static void main(String[] args) {<br>    new Counter();<br>    new Counter();<br>    System.out.println(Counter.count);<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "2"
  },
  {
    ques: "What’s printed?<br><br>```java<br>public class Main extends Thread {<br>  public void run() {<br>    System.out.print(\"Thread \");<br>  }<br>  public static void main(String[] args) {<br>    Main t1 = new Main();<br>    t1.start();<br>    System.out.print(\"Main \");<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "Main Thread"
  },
  {
    ques: "Final result:<br><br>```java<br>class A { void show() { System.out.println(\"A\"); } }<br>class B extends A { void show() { System.out.println(\"B\"); } }<br>public class Main {<br>  public static void main(String[] args) {<br>    A a = new B();<br>    a.show();<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "B"
  },
  {
    ques: "Output?<br><br>```java<br>public class Main {<br>  static int recur(int n) {<br>    if (n == 0) return 1;<br>    return n * recur(n - 1);<br>  }<br>  public static void main(String[] args) {<br>    System.out.println(recur(3));<br>  }<br>}```<br>",
    quesType: "fill",
    ans: "6"
  },
   {
    ques: "What is the output?<br><br>```java<br>public class Main {<br>  static int fun(int n) {<br>    if (n == 0) return 0;<br>    return fun(n - 1) + n;<br>  }<br>  public static void main(String[] args) {<br>    System.out.print(fun(4));<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "4",
    op2: "6",
    op3: "10",
    op4: "0",
    ans: "10"
  },
  {
    ques: "What does this print?<br><br>```java<br>public class Main {<br>  static int count = 0;<br>  static void recurse(int n) {<br>    if (n == 0) return;<br>    count++;<br>    recurse(n - 1);<br>    recurse(n - 1);<br>  }<br>  public static void main(String[] args) {<br>    recurse(3);<br>    System.out.println(count);<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "3",
    op2: "6",
    op3: "7",
    op4: "15",
    ans: "7"
  },
  {
    ques: "Output?<br><br>```java<br>public class Main {<br>  static int mystery(int n) {<br>    if (n <= 1) return n;<br>    return mystery(n - 2) + 1;<br>  }<br>  public static void main(String[] args) {<br>    System.out.print(mystery(7));<br>  }<br>}```<br>",
    quesType: "mcq",
    op1: "3",
    op2: "4",
    op3: "5",
    op4: "6",
    ans: "4"
  },
  {
    ques: "Find output:<br><br>```java<br>static int f(int n) {<br>  if (n == 1) return 1;<br>  return f(n - 1) * n;<br>}<br>System.out.print(f(4));<br>```<br>",
    quesType: "mcq",
    op1: "4",
    op2: "6",
    op3: "12",
    op4: "24",
    ans: "24"
  },
  {
    ques: "What is returned by fun(2)?<br><br>```java<br>static int fun(int n) {<br>  if (n == 0) return 1;<br>  return fun(n - 1) * 2;<br>}<br>```<br>",
    quesType: "mcq",
    op1: "2",
    op2: "4",
    op3: "6",
    op4: "8",
    ans: "4"
  },
  {
    ques: "Guess output:<br><br>```java<br>int call(int n) {<br>  if (n <= 1) return 1;<br>  return call(n - 1) + call(n - 2);<br>}<br>System.out.print(call(5));<br>```<br>",
    quesType: "mcq",
    op1: "8",
    op2: "5",
    op3: "13",
    op4: "12",
    ans: "8"
  },
  {
    ques: "What happens here?<br><br>```java<br>void go(int n) {<br>  if (n == 0) return;<br>  System.out.print(n);<br>  go(n - 1);<br>  System.out.print(n);<br>}<br>go(2);<br>```<br>",
    quesType: "mcq",
    op1: "212",
    op2: "2112",
    op3: "2211",
    op4: "1212",
    ans: "2112"
  },
  {
    ques: "What will this return?<br><br>```java<br>static int tricky(int n) {<br>  if (n < 1) return 1;<br>  return tricky(n - 1) + tricky(n - 3);<br>}<br>System.out.print(tricky(3));<br>```<br>",
    quesType: "mcq",
    op1: "2",
    op2: "3",
    op3: "4",
    op4: "5",
    ans: "3"
  },
  {
    ques: "Final output?<br><br>```java<br>static void puzzle(int n) {<br>  if (n == 0) return;<br>  puzzle(n - 1);<br>  System.out.print(n);<br>}<br>puzzle(3);<br>```<br>",
    quesType: "mcq",
    op1: "321",
    op2: "123",
    op3: "213",
    op4: "231",
    ans: "123"
  },
  {
    ques: "Output?<br><br>```java<br>static int x = 0;<br>static void count(int n) {<br>  if (n == 0) return;<br>  x++;<br>  count(n - 1);<br>}<br>count(5);<br>System.out.print(x);<br>```<br>",
    quesType: "mcq",
    op1: "4",
    op2: "5",
    op3: "6",
    op4: "0",
    ans: "5"
  },

  // 🧨 Fill-in-the-Blanks – Recursive Traps
  {
    ques: "Fill the output:<br><br>```java<br>static int f(int n) {<br>  if (n <= 0) return 1;<br>  return f(n - 1) + 2;<br>}<br>System.out.print(f(2));<br>```<br>",
    quesType: "fill",
    ans: "5"
  },
  {
    ques: "Recursive output:<br><br>```java<br>static int sum(int n) {<br>  if (n == 0) return 0;<br>  return n + sum(n - 1);<br>}<br>System.out.print(sum(3));<br>```<br>",
    quesType: "fill",
    ans: "6"
  },
  {
    ques: "What is returned:<br><br>```java<br>static int pow(int a, int b) {<br>  if (b == 0) return 1;<br>  return a * pow(a, b - 1);<br>}<br>System.out.print(pow(2, 3));<br>```<br>",
    quesType: "fill",
    ans: "8"
  },
  {
    ques: "Output of recur(3):<br><br>```java<br>static int recur(int n) {<br>  if (n == 0) return 0;<br>  return recur(n - 1) + recur(n - 1) + 1;<br>}<br>```<br>",
    quesType: "fill",
    ans: "7"
  },
  {
    ques: "Recursive return:<br><br>```java<br>static int f(int n) {<br>  if (n <= 1) return 1;<br>  return n * f(n - 1);<br>}<br>System.out.print(f(4));<br>```<br>",
    quesType: "fill",
    ans: "24"
  },
  {
    ques: "What's printed:<br><br>```java<br>static void go(int n) {<br>  if (n == 0) return;<br>  System.out.print(n);<br>  go(n - 1);<br>}<br>go(3);<br>```<br>",
    quesType: "fill",
    ans: "321"
  },
  {
    ques: "Final answer:<br><br>```java<br>static int f(int n) {<br>  if (n <= 2) return 1;<br>  return f(n - 1) + f(n - 2);<br>}<br>System.out.print(f(5));<br>```<br>",
    quesType: "fill",
    ans: "5"
  },
  {
    ques: "How many times is function called for f(3)?<br><br>```java<br>static int count = 0;<br>static int f(int n) {<br>  count++;<br>  if (n <= 1) return 1;<br>  return f(n - 1) + f(n - 2);<br>}<br>f(3);<br>System.out.print(count);<br>```<br>",
    quesType: "fill",
    ans: "5"
  },
  {
    ques: "Guess the output:<br><br>```java<br>static int f(int n) {<br>  if (n == 1) return 1;<br>  return n + f(n - 1);<br>}<br>System.out.print(f(3));<br>```<br>",
    quesType: "fill",
    ans: "6"
  },
  {
    ques: "Recursive pattern:<br><br>```java<br>static void f(int n) {<br>  if (n == 0) return;<br>  f(n - 1);<br>  System.out.print(n);<br>}<br>f(3);<br>```<br>",
    quesType: "fill",
    ans: "123"
  },
  {
    ques: "Which of these features is not part of Core Java?<br>",
    quesType: "mcq",
    op1: "Object-Oriented Programming",
    op2: "JDBC",
    op3: "Garbage Collection",
    op4: "Multithreading",
    ans: "JDBC"
  },
  {
    ques: "Which method is called when an object is garbage collected?<br>",
    quesType: "mcq",
    op1: "finalize()",
    op2: "destroy()",
    op3: "dispose()",
    op4: "close()",
    ans: "finalize()"
  },
  {
    ques: "What will be the output?<br><br>```java<br>String a = \"hello\";<br>String b = \"hello\";<br>System.out.println(a == b);<br>```<br>",
    quesType: "mcq",
    op1: "true",
    op2: "false",
    op3: "Compilation error",
    op4: "Runtime exception",
    ans: "true"
  },
  {
    ques: "Which interface provides capability to store key-value pairs?<br>",
    quesType: "mcq",
    op1: "List",
    op2: "Set",
    op3: "Map",
    op4: "Queue",
    ans: "Map"
  },
  {
    ques: "Which keyword is used to prevent inheritance?<br>",
    quesType: "mcq",
    op1: "private",
    op2: "protected",
    op3: "final",
    op4: "static",
    ans: "final"
  },
  {
    ques: "___ is the default value of a boolean in Java.",
    quesType: "fill",
    ans: "false"
  },
  {
    ques: "In Java, ___ blocks are always executed whether an exception occurs or not.",
    quesType: "fill",
    ans: "finally"
  },
  {
    ques: "The ___ method in Java returns the hash code of an object.",
    quesType: "fill",
    ans: "hashCode"
  },
  {
    ques: "The base class of all classes in Java is ___.",
    quesType: "fill",
    ans: "Object"
  },
  {
    ques: "In Java, '==' compares ___, while '.equals()' compares ___.",
    quesType: "fill",
    ans: "references, content"
  },
  {
    ques: "Which technology is used to build web applications in Java?<br>",
    quesType: "mcq",
    op1: "JDBC",
    op2: "Servlet",
    op3: "AWT",
    op4: "Swing",
    ans: "Servlet"
  },
  {
    ques: "Which protocol do Servlets use by default?<br>",
    quesType: "mcq",
    op1: "FTP",
    op2: "SMTP",
    op3: "HTTP",
    op4: "TCP",
    ans: "HTTP"
  },
  {
    ques: "Which is used for database connectivity in Java?<br>",
    quesType: "mcq",
    op1: "Servlet",
    op2: "JSP",
    op3: "JDBC",
    op4: "RMI",
    ans: "JDBC"
  },
  {
    ques: "Which design pattern is used in Servlets?<br>",
    quesType: "mcq",
    op1: "Factory",
    op2: "MVC",
    op3: "Builder",
    op4: "Observer",
    ans: "MVC"
  },
  {
    ques: "Which interface must be implemented to create a thread in Java EE?<br>",
    quesType: "mcq",
    op1: "Thread",
    op2: "Runnable",
    op3: "Executor",
    op4: "Callable",
    ans: "Runnable"
  },
  {
    ques: "___ is used to separate business logic from presentation in JSP.",
    quesType: "fill",
    ans: "MVC"
  },
  {
    ques: "___ is the lifecycle method called when a servlet is destroyed.",
    quesType: "fill",
    ans: "destroy"
  },
  {
    ques: "RMI stands for ___ Method Invocation.",
    quesType: "fill",
    ans: "Remote"
  },
  {
    ques: "In JDBC, ___ is used to execute SQL queries that return a ResultSet.",
    quesType: "fill",
    ans: "executeQuery"
  },
  {
    ques: "The ___ directive in JSP is used to import Java classes.",
    quesType: "fill",
    ans: "page"
  },
   {
    ques: "Which method is used to start a new thread in Java?<br>",
    quesType: "mcq",
    op1: "run()",
    op2: "start()",
    op3: "init()",
    op4: "launch()",
    ans: "start()"
  },
  {
    ques: "Which of the following is true about Java sockets?<br>",
    quesType: "mcq",
    op1: "They can only be used for UDP.",
    op2: "They require multithreading.",
    op3: "They use ports to establish connections.",
    op4: "They are deprecated in Java 11.",
    ans: "They use ports to establish connections."
  },
  {
    ques: "In JDBC, which method is used to execute INSERT, UPDATE, or DELETE statements?<br>",
    quesType: "mcq",
    op1: "executeQuery()",
    op2: "executeUpdate()",
    op3: "execute()",
    op4: "runUpdate()",
    ans: "executeUpdate()"
  },
  {
    ques: "Which Servlet method handles GET requests?<br>",
    quesType: "mcq",
    op1: "doGet()",
    op2: "service()",
    op3: "init()",
    op4: "doPost()",
    ans: "doGet()"
  },
  {
    ques: "What will be the output?<br><br>```java<br>Thread t = new Thread(() -> System.out.println(\"Hi\"));<br>t.run();<br>```<br>",
    quesType: "mcq",
    op1: "Hi",
    op2: "Nothing",
    op3: "Thread starts in background",
    op4: "Compilation error",
    ans: "Hi"
  },
  {
    ques: "Which interface is used for TCP socket client in Java?<br>",
    quesType: "mcq",
    op1: "DatagramSocket",
    op2: "Socket",
    op3: "ServerSocket",
    op4: "URLConnection",
    ans: "Socket"
  },
  {
    ques: "What does `Class.forName(\"com.mysql.cj.jdbc.Driver\")` do?<br>",
    quesType: "mcq",
    op1: "Creates DB connection",
    op2: "Registers JDBC driver",
    op3: "Executes query",
    op4: "None",
    ans: "Registers JDBC driver"
  },
  {
    ques: "Which lifecycle method is called only once in a servlet’s lifetime?<br>",
    quesType: "mcq",
    op1: "service()",
    op2: "destroy()",
    op3: "init()",
    op4: "doGet()",
    ans: "init()"
  },
  {
    ques: "Which keyword provides thread safety for variables?<br>",
    quesType: "mcq",
    op1: "volatile",
    op2: "static",
    op3: "transient",
    op4: "final",
    ans: "volatile"
  },
  {
    ques: "What is the default port for HTTP servlet communication?<br>",
    quesType: "mcq",
    op1: "80",
    op2: "443",
    op3: "8080",
    op4: "3306",
    ans: "8080"
  },

  // 🧩 Fill-in-the-blanks
  {
    ques: "The ___ method in a thread is used to pause execution temporarily.",
    quesType: "fill",
    ans: "sleep"
  },
  {
    ques: "___ sockets are used for UDP communication in Java.",
    quesType: "fill",
    ans: "Datagram"
  },
  {
    ques: "To connect to a database, we use ___ class from the java.sql package.",
    quesType: "fill",
    ans: "DriverManager"
  },
  {
    ques: "The ___ method is invoked by the server when a servlet is being taken out of service.",
    quesType: "fill",
    ans: "destroy"
  },
  {
    ques: "In JDBC, the ___ object is used to retrieve data from ResultSet.",
    quesType: "fill",
    ans: "get"
  },
  {
    ques: "A ___ block is used to handle exceptions that may occur in threads.",
    quesType: "fill",
    ans: "try-catch"
  },
  {
    ques: "___ is the main class used to represent a client socket.",
    quesType: "fill",
    ans: "Socket"
  },
  {
    ques: "In multithreading, race conditions can be avoided using ___ keyword.",
    quesType: "fill",
    ans: "synchronized"
  },
  {
    ques: "The ___ method is used to stop a thread (not recommended for safety).",
    quesType: "fill",
    ans: "stop"
  },
  {
    ques: "To send a request from a browser to a servlet, the ___ method of HttpServletRequest is used.",
    quesType: "fill",
    ans: "getParameter"
  },
   {
    ques: "What will be the output?<br><br>```java<br>int x = 5;<br>System.out.println(x++ + ++x);<br>```<br>",
    quesType: "mcq",
    op1: "11",
    op2: "12",
    op3: "10",
    op4: "Compiler error",
    ans: "12"
  },
  {
    ques: "What will be the output?<br><br>```java<br>String a = new String(\"hello\");<br>String b = \"hello\";<br>System.out.println(a == b);<br>```<br>",
    quesType: "mcq",
    op1: "true",
    op2: "false",
    op3: "hello",
    op4: "Compilation error",
    ans: "false"
  },
  {
    ques: "What will be printed?<br><br>```java<br>public class Main {<br>  static int recurse(int n) {<br>    if(n <= 1) return 1;<br>    return recurse(n-1) + recurse(n-2);<br>  }<br>  public static void main(String[] args) {<br>    System.out.println(recurse(4));<br>  }<br>}<br>",
    quesType: "mcq",
    op1: "5",
    op2: "4",
    op3: "6",
    op4: "3",
    ans: "5"
  },
  {
    ques: "Predict output:<br><br>```java<br>public class A {<br>  public static void main(String[] args) {<br>    String s1 = \"abc\";<br>    String s2 = \"abc\";<br>    System.out.println(s1 == s2);<br>  }<br>}<br>",
    quesType: "mcq",
    op1: "true",
    op2: "false",
    op3: "abc",
    op4: "null",
    ans: "true"
  },
  {
    ques: "What will this print?<br><br>```java<br>class Parent { void show() { System.out.println(\"Parent\"); }}<br>class Child extends Parent { void show() { System.out.println(\"Child\"); }}<br>public class Test {<br>  public static void main(String[] args) {<br>    Parent p = new Child();<br>    p.show();<br>  }<br>}<br>",
    quesType: "mcq",
    op1: "Parent",
    op2: "Child",
    op3: "Compilation error",
    op4: "Runtime error",
    ans: "Child"
  },
  {
    ques: "Find the output:<br><br>```java<br>public class ThreadDemo {<br>  public static void main(String[] args) {<br>    Thread t = new Thread(() -> System.out.println(\"Thread Running\"));<br>    t.run();<br>  }<br>}<br>",
    quesType: "mcq",
    op1: "Thread Running",
    op2: "Nothing",
    op3: "Error",
    op4: "Compilation error",
    ans: "Thread Running"
  },
  {
    ques: "What will this print?<br><br>```java<br>int a = 10;<br>int b = 20;<br>System.out.println(\"Sum = \" + a + b);<br>```<br>",
    quesType: "mcq",
    op1: "Sum = 30",
    op2: "30",
    op3: "Sum = 1020",
    op4: "Compilation Error",
    ans: "Sum = 1020"
  },
  {
    ques: "Output?<br><br>```java<br>int i = 0;<br>for(System.out.print(\"Start \"); i < 1; i++)<br>  System.out.print(\"End \");<br>```<br>",
    quesType: "mcq",
    op1: "Start End",
    op2: "End Start",
    op3: "Start",
    op4: "End",
    ans: "Start End"
  },
  {
    ques: "Output of:<br><br>```java<br>public class Demo {<br>  public static void main(String[] args) {<br>    Integer x = 128;<br>    Integer y = 128;<br>    System.out.println(x == y);<br>  }<br>}<br>",
    quesType: "mcq",
    op1: "true",
    op2: "false",
    op3: "128",
    op4: "null",
    ans: "false"
  },
  {
    ques: "What will happen?<br><br>```java<br>String s = null;<br>if(s.equals(\"test\")) System.out.println(\"Equal\");<br>```<br>",
    quesType: "mcq",
    op1: "Equal",
    op2: "false",
    op3: "NullPointerException",
    op4: "Nothing",
    ans: "NullPointerException"
  },
  {
    ques: "Which of these will compile without error?<br><br>```java<br>final int x;<br>x = 100;<br>System.out.println(x);<br>```",
    quesType: "mcq",
    op1: "Yes",
    op2: "No",
    op3: "Only inside constructor",
    op4: "Only inside block",
    ans: "Yes"
  },
  {
    ques: "Which statement about Java Memory Model is true?<br>",
    quesType: "mcq",
    op1: "Heap is thread-local",
    op2: "Stack is shared between threads",
    op3: "Each thread has its own stack",
    op4: "Garbage collection is manual",
    ans: "Each thread has its own stack"
  },
  {
    ques: "Which keyword causes compile-time polymorphism?<br>",
    quesType: "mcq",
    op1: "this",
    op2: "overload",
    op3: "extends",
    op4: "method overloading",
    ans: "method overloading"
  },
  {
    ques: "Which of the following is NOT a valid Java thread state?<br>",
    quesType: "mcq",
    op1: "NEW",
    op2: "RUNNING",
    op3: "WAITING",
    op4: "KILLED",
    ans: "KILLED"
  },
  {
    ques: "What's the output?<br><br>```java<br>Integer a = 1000, b = 1000;<br>System.out.println(a == b);<br>```",
    quesType: "mcq",
    op1: "true",
    op2: "false",
    op3: "Depends on JVM",
    op4: "Compile Error",
    ans: "false"
  },
  {
    ques: "Which class is used for atomic thread-safe counters?<br>",
    quesType: "mcq",
    op1: "Integer",
    op2: "AtomicInteger",
    op3: "ThreadSafeCounter",
    op4: "VolatileCounter",
    ans: "AtomicInteger"
  },
  {
    ques: "Which method stops a thread immediately?<br>",
    quesType: "mcq",
    op1: "stop()",
    op2: "terminate()",
    op3: "halt()",
    op4: "kill()",
    ans: "stop()"
  },
  {
    ques: "Which Java class is not thread-safe by default?<br>",
    quesType: "mcq",
    op1: "StringBuffer",
    op2: "StringBuilder",
    op3: "Vector",
    op4: "Hashtable",
    ans: "StringBuilder"
  },
  {
    ques: "Which package contains concurrency utilities?<br>",
    quesType: "mcq",
    op1: "java.util",
    op2: "java.io",
    op3: "java.util.concurrent",
    op4: "java.lang.concurrent",
    ans: "java.util.concurrent"
  },
  {
    ques: "Which annotation is used for overriding a method?<br>",
    quesType: "mcq",
    op1: "@Override",
    op2: "@Overload",
    op3: "@Implement",
    op4: "@Method",
    ans: "@Override"
  },
  {
    ques: "Which method is used to compare contents of two strings?<br>",
    quesType: "mcq",
    op1: "==",
    op2: "compareTo()",
    op3: "equals()",
    op4: "compare()",
    ans: "equals()"
  },
  {
    ques: "What's the range of byte in Java?<br>",
    quesType: "mcq",
    op1: "-128 to 127",
    op2: "-256 to 255",
    op3: "-255 to 255",
    op4: "-128 to 128",
    ans: "-128 to 127"
  },
  {
    ques: "Which interface does java.util.List extend?<br>",
    quesType: "mcq",
    op1: "Set",
    op2: "Collection",
    op3: "Iterable",
    op4: "ArrayList",
    ans: "Collection"
  },
  {
    ques: "What will be printed?<br><br>```java<br>System.out.println(\"hello\" + null);<br>```",
    quesType: "mcq",
    op1: "Compile error",
    op2: "hello",
    op3: "null",
    op4: "hellonull",
    ans: "hellonull"
  },
  {
    ques: "Which is true for abstract classes?<br>",
    quesType: "mcq",
    op1: "They can’t have constructors",
    op2: "They can't be extended",
    op3: "They can have concrete methods",
    op4: "All methods must be abstract",
    ans: "They can have concrete methods"
  },
  {
    ques: "What’s true about interfaces in Java 8+?<br>",
    quesType: "mcq",
    op1: "They can contain static methods",
    op2: "They can't have method bodies",
    op3: "They can't be extended",
    op4: "They only support constants",
    ans: "They can contain static methods"
  },
  {
    ques: "Which is not a valid access modifier?<br>",
    quesType: "mcq",
    op1: "private",
    op2: "default",
    op3: "protected",
    op4: "friendly",
    ans: "friendly"
  },
  {
    ques: "What is returned by System.gc() in Java?<br>",
    quesType: "mcq",
    op1: "Free memory",
    op2: "Used memory",
    op3: "void",
    op4: "nothing",
    ans: "void"
  },
  {
    ques: "Which thread method releases the lock?<br>",
    quesType: "mcq",
    op1: "sleep()",
    op2: "wait()",
    op3: "join()",
    op4: "notify()",
    ans: "wait()"
  },
  {
    ques: "Which interface must be implemented to sort objects?<br>",
    quesType: "mcq",
    op1: "Comparator",
    op2: "Comparable",
    op3: "SortInterface",
    op4: "Iterable",
    ans: "Comparable"
  },
  {
    ques: "The ___ keyword ensures visibility and ordering of shared variables across threads.",
    quesType: "fill",
    ans: "volatile"
  },
  {
    ques: "Java uses ___ collection to allow thread-safe access without synchronization.",
    quesType: "fill",
    ans: "ConcurrentHashMap"
  },
  {
    ques: "The ___ class is used to manage thread execution via a pool of threads.",
    quesType: "fill",
    ans: "ExecutorService"
  },
  {
    ques: "___ is thrown when a thread is waiting for a lock that another thread holds forever.",
    quesType: "fill",
    ans: "Deadlock"
  },
  {
    ques: "In JDBC, the ___ object is used to represent the result of SQL queries.",
    quesType: "fill",
    ans: "ResultSet"
  },
  {
    ques: "To create immutable objects in Java, we use the ___ keyword for all fields.",
    quesType: "fill",
    ans: "final"
  },
  {
    ques: "Java’s ___ mechanism allows one class to inherit from another.",
    quesType: "fill",
    ans: "inheritance"
  },
  {
    ques: "___ is used to pause the current thread for a specific time in milliseconds.",
    quesType: "fill",
    ans: "sleep"
  },
  {
    ques: "The ___ operator is used for runtime type checking.",
    quesType: "fill",
    ans: "instanceof"
  },
  {
    ques: "The ___ block in exception handling always executes.",
    quesType: "fill",
    ans: "finally"
  },
  {
    ques: "The ___ method is called when an object is garbage collected.",
    quesType: "fill",
    ans: "finalize"
  },
  {
    ques: "Java programs are converted into ___ files after compilation.",
    quesType: "fill",
    ans: "class"
  },
  {
    ques: "The ___ class is used for dynamic method dispatch in polymorphism.",
    quesType: "fill",
    ans: "Object"
  },
  {
    ques: "In multithreading, the ___ block prevents race conditions.",
    quesType: "fill",
    ans: "synchronized"
  },
  {
    ques: "Java does not support ___ multiple inheritance using classes.",
    quesType: "fill",
    ans: "direct"
  },
  {
    ques: "The ___ interface in Java is a functional interface with no parameters.",
    quesType: "fill",
    ans: "Runnable"
  },
  {
    ques: "___ is the process of converting an object into a byte stream.",
    quesType: "fill",
    ans: "Serialization"
  },
  {
    ques: "___ is the parent class of all Java exception classes.",
    quesType: "fill",
    ans: "Throwable"
  },
  {
    ques: "The ___ clause is used to catch specific exceptions.",
    quesType: "fill",
    ans: "catch"
  },
  {
    ques: "The ___ keyword in Java prevents a class from being subclassed.",
    quesType: "fill",
    ans: "final"
  }
]

let javaIncorrectAnswers=[];

  let javaTimerId="";
  let javaSkip =document.getElementById("javaSkip");
    let codingJavaQues=document.getElementById("codingJavaQues");
    let mcqJava =document.getElementById("mcqJava");
    let javaQuestionNumber=document.getElementById("javaQuestionNumber");
    let javaQuestionCount=2;
    let javaScore=0;
    let javaScoreDisplay=document.getElementById("javaScoreDisplay");
    let javaScoreShow=document.getElementById("javaScoreShow");
     let javaSkip2 =document.getElementById("javaSkip2");

     let javaFillAns =document.getElementById("javaFillAns");
        let javaStatus1=document.getElementById("javaStatus1");
        let javaStatus2=document.getElementById("javaStatus2");
        let javaStatus3=document.getElementById("javaStatus3");
        let javaCheckFill =document.getElementById("javaCheckFill");

    let codingResultJava=document.getElementById("codingResultJava");

    let javaIncorrectAnswersDisplay =document.getElementById("javaIncorrectAnswersDisplay");
    let javaScoreBelow70 =document.getElementById("javaScoreBelow70");
    let javaScore100 =document.getElementById("javaScore100");

    let javaResult1=document.getElementById("javaResult1");
    let javaResult2=document.getElementById("javaResult2");
    let javaResult3=document.getElementById("javaResult3");
    let javaResult4=document.getElementById("javaResult4");
    let javaResult5=document.getElementById("javaResult5");
    let javaBg1 =document.getElementById("javaBg1");
    


  function codingJavaStart() {
    codingJavaHide.classList.add("d-none");
    codingJavaShow.classList.remove("d-none");
    
    // codingJavaBack.classList.add("d-none");
    
    let fillBlankJava=document.getElementById("fillBlankJava");
    let op1Java=document.getElementById("op1Java");
    let op2Java=document.getElementById("op2Java");
    let op3Java=document.getElementById("op3Java");
    let op4Java=document.getElementById("op4Java");

    let javaFillAns =document.getElementById("javaFillAns");
    let javaStatus1=document.getElementById("javaStatus1");
    let javaStatus2=document.getElementById("javaStatus2");
    let javaStatus3=document.getElementById("javaStatus3");
    let javaCheckFill =document.getElementById("javaCheckFill");

    javaFillAns.disabled=false;
    javaStatus1.classList.remove("d-none");
    javaStatus2.classList.add("d-none");
    javaStatus3.classList.add("d-none");
    javaFillAns.value="";
    javaSkip2.textContent="Skip";
    javaSkip2.style.backgroundColor="orange";
    javaSkip2.style.borderColor="orange";

    javaSkip.textContent="Skip";
    javaSkip.style.backgroundColor="orange";
    javaSkip.style.borderColor="orange";
     javaScoreShow.textContent="";
      javaTimer.style.color="black";


    if(javaLevel===1){
     let javaRandom = Math.floor(Math.random() * codingJava1Arr.length);
      let y = codingJava1Arr[javaRandom];
       javaTimer.textContent="20";
       javaTime=20

      javaTimerId= setInterval(function(){
              javaTime=javaTime-1;
              if(javaTime==0){
                clearInterval(javaTimerId);
                 javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
                javaQuestionCount=javaQuestionCount+1;
                javaTime=20;
                codingJavaStart();
              }
              if(javaTime<=5){
                javaTimer.style.color="red";
                javaTimer.textContent=javaTime;
              }
              else{
                 javaTimer.textContent=javaTime;
              }
             
            },1000);

      if(javaQuestionCount==12){
        clearInterval(javaTimerId);
        mcqJava.classList.add("d-none");
        document.getElementById("javaScoreEnd").textContent=javaScoreDisplay.textContent;
        fillBlankJava.classList.add("d-none");
        codingJavaShow.classList.add("d-none");
        codingResultJava.classList.remove("d-none");

        if(javaScore<70){
        javaScoreBelow70.classList.remove("d-none");
        javaScore100.classList.add("d-none");
        sectionCodingJava.classList.add("back15");

        javaResult1.textContent="Test finished!!";
        javaResult2.textContent="😓 Oops! Not quite right.";
        javaResult3.src="https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
        javaResult4.textContent="Don't worry — try again!";

        let h2 =document.createElement("h2");
        h2.textContent="Incorrect Answers :"
        h2.classList.add("text-center","incorrect-answer");
        javaIncorrectAnswersDisplay.appendChild(h2);

        for(let z of javaIncorrectAnswers){
          let card =document.createElement("div");
         card.classList.add("d-flex","flex-column","card4","shadow");
          javaIncorrectAnswersDisplay.appendChild(card);
          let  question =document.createElement("h6");
          question.textContent=z.ques;
          card.appendChild(question);
          let wrongDiv =document.createElement("div");
          wrongDiv.classList.add("d-flex","flex-row");
          card.appendChild(wrongDiv);

          let wrong =document.createElement("p");
          wrongDiv.textContent="Your Answer : "+z.wrong;
          wrongDiv.appendChild(wrong);

         let wrongTick = document.createElement("i");
         wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1","tick1");
         wrongDiv.appendChild(wrongTick);

         let correctDiv=document.createElement("div");
         correctDiv.classList.add("d-flex","flex-row");
         card.appendChild(correctDiv);


          let correct=document.createElement("p");
          correct.textContent="Correct Answer : "+z.correct;
          correctDiv.appendChild(correct);

            let correctTick = document.createElement("i");
            correctTick.classList.add("fa-solid","fa-check", "ml-2","mt-1","tick2");
            correctDiv.appendChild(correctTick);
          
        }

      }
      else if(javaScore<100){
        javaScoreBelow70.classList.remove("d-none");
        javaScore100.classList.add("d-none");
        sectionCodingJava.classList.add("back15");

         javaResult1.textContent="Test finished!!";
        javaResult2.textContent="🎉 Hurry! Congratulations! 🎉";
        javaResult3.src="https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
        javaResult4.textContent="Keep trying, keep coding — success and good score will come."
        

        let h2 =document.createElement("h2");
        h2.textContent="Incorrect Answers :"
        h2.classList.add("text-center","incorrect-answer");
        javaIncorrectAnswersDisplay.appendChild(h2);

        for(let z of javaIncorrectAnswers){
          let card =document.createElement("div");
         card.classList.add("d-flex","flex-column","card4","shadow");
          javaIncorrectAnswersDisplay.appendChild(card);
          let  question =document.createElement("h6");
          question.textContent=z.ques;
          card.appendChild(question);
          let wrongDiv =document.createElement("div");
          wrongDiv.classList.add("d-flex","flex-row");
          card.appendChild(wrongDiv);

          let wrong =document.createElement("p");
          wrongDiv.textContent="Your Answer : "+z.wrong;
          wrongDiv.appendChild(wrong);

         let wrongTick = document.createElement("i");
         wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1","tick1");
         wrongDiv.appendChild(wrongTick);

         let correctDiv=document.createElement("div");
         correctDiv.classList.add("d-flex","flex-row");
         card.appendChild(correctDiv);


          let correct=document.createElement("p");
          correct.textContent="Correct Answer : "+z.correct;
          correctDiv.appendChild(correct);

            let correctTick = document.createElement("i");
            correctTick.classList.add("fa-solid","fa-check", "ml-2","mt-1","tick2");
            correctDiv.appendChild(correctTick);
          
        }
      }
      // codingResult
      
      else if(javaScore===100){
          document.getElementById("sectionCodingJava").classList.add("back14");
          javaScore100.classList.remove("d-none");
          javaScoreBelow70.classList.add("d-none");

        }
       
      }
      if(y.quesType==="mcq"){
        mcqJava.classList.remove("d-none");
       let formattedQuestion = y.ques.replace(/\n/g, "<br>");
        codingJavaQues.innerHTML = formattedQuestion;

        fillBlankJava.classList.add("d-none");
             op1Java.textContent=y.op1;
            op2Java.textContent=y.op2;
             op3Java.textContent=y.op3;
             op4Java.textContent=y.op4;
                           
        op1Java.onclick=function(){
      
          op2Java.disabled=true;
          op3Java.disabled=true;
          op4Java.disabled=true;
          if(op1Java.textContent===y.ans){
            op1Java.style.backgroundColor="green";
            javaScore=javaScore+10;
            javaScoreShow.textContent="+10";
            javaScoreShow.style.color="green";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
          }
          else{
             op1Java.style.backgroundColor="red";
            javaScore=javaScore-5;
            javaScoreShow.textContent="-5";
            javaScoreShow.style.color="red";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
            let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:op1Java.textContent
            }
            javaIncorrectAnswers.push(wrong_answer);
          }
            clearInterval(javaTimerId);
            javaTime=20;
            javaSkip.textContent="Next";
            javaSkip.style.backgroundColor="#23ebdd";
            javaSkip.style.borderColor="#23ebdd"

            javaSkip.onclick=function(){
        javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
          op1Java.disabled=false;
          op2Java.disabled=false;
          op3Java.disabled=false;
          op4Java.disabled=false;
          javaQuestionCount=javaQuestionCount+1;
          op1Java.style.backgroundColor="white";
          op2Java.style.backgroundColor="white";
          op3Java.style.backgroundColor="white";
          op4Java.style.backgroundColor="white";
              codingJavaStart();
            }
        } 
        op2Java.onclick=function(){
          op1Java.disabled=true;
          op3Java.disabled=true;
          op4Java.disabled=true;
          if(op2Java.textContent===y.ans){
            op2Java.style.backgroundColor="green";
               javaScore=javaScore+10;
            javaScoreShow.textContent="+10";
            javaScoreShow.style.color="green";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
          }
          else{
             op2Java.style.backgroundColor="red";
              javaScore=javaScore-5;
            javaScoreShow.textContent="-5";
            javaScoreShow.style.color="red";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
            let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:op2Java.textContent
            }
            javaIncorrectAnswers.push(wrong_answer);
          }
          clearInterval(javaTimerId);
           javaTime=20;
           javaSkip.textContent="Next";
           javaSkip.style.backgroundColor="#23ebdd";
            javaSkip.style.borderColor="#23ebdd"

            javaSkip.onclick=function(){
          javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
          op1Java.disabled=false;
          op2Java.disabled=false;
          op3Java.disabled=false;
          op4Java.disabled=false;
          javaQuestionCount=javaQuestionCount+1;
          op1Java.style.backgroundColor="white";
          op2Java.style.backgroundColor="white";
          op3Java.style.backgroundColor="white";
          op4Java.style.backgroundColor="white";
              codingJavaStart();
            }
        }
        op3Java.onclick=function(){
          op1Java.disabled=true;
          op2Java.disabled=true;
          op4Java.disabled=true;
          if(op3Java.textContent===y.ans){
            op3Java.style.backgroundColor="green";
               javaScore=javaScore+10;
            javaScoreShow.textContent="+10";
            javaScoreShow.style.color="green";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
          }
          else{
             op3Java.style.backgroundColor="red";
              javaScore=javaScore-5;
            javaScoreShow.textContent="-5";
            javaScoreShow.style.color="red";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
            let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:op3Java.textContent
            }
            javaIncorrectAnswers.push(wrong_answer);
          }
            clearInterval(javaTimerId);
             javaTime=20;
              javaSkip.style.backgroundColor="#23ebdd";
            javaSkip.style.borderColor="#23ebdd"
             javaSkip.textContent="Next";

            javaSkip.onclick=function(){
                   javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
          op1Java.disabled=false;
          op2Java.disabled=false;
          op3Java.disabled=false;
          op4Java.disabled=false;
          javaQuestionCount=javaQuestionCount+1;
          op1Java.style.backgroundColor="white";
          op2Java.style.backgroundColor="white";
          op3Java.style.backgroundColor="white";
          op4Java.style.backgroundColor="white";
              codingJavaStart();
            }
        }
        op4Java.onclick=function(){

          op1Java.disabled=true;
          op2Java.disabled=true;
          op3Java.disabled=true;
          if(op4Java.textContent===y.ans){
            op4Java.style.backgroundColor="green";
               javaScore=javaScore+10;
            javaScoreShow.textContent="+10";
            javaScoreShow.style.color="green";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
          }
          else{
             op4Java.style.backgroundColor="red";
              javaScore=javaScore-5;
            javaScoreShow.textContent="-5";
            javaScoreShow.style.color="red";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
            let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:op4.textContent
            }
            javaIncorrectAnswers.push(wrong_answer);
          }
            clearInterval(javaTimerId);
             javaTime=20;
            javaSkip.style.backgroundColor="#23ebdd";
            javaSkip.style.borderColor="#23ebdd"
             javaSkip.textContent="Next";
            javaSkip.onclick=function(){
          javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
          op1Java.disabled=false;
          op2Java.disabled=false;
          op3Java.disabled=false;
          op4Java.disabled=false;
          javaQuestionCount=javaQuestionCount+1;
          op1Java.style.backgroundColor="white";
          op2Java.style.backgroundColor="white";
          op3Java.style.backgroundColor="white";
          op4Java.style.backgroundColor="white";
              codingJavaStart();
            }
        }
        javaSkip.onclick=function(){
          clearInterval(javaTimerId);
             javaTime=20;
          javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
          op1Java.disabled=false;
          op2Java.disabled=false;
          op3Java.disabled=false;
          op4Java.disabled=false;
          javaQuestionCount=javaQuestionCount+1;
          op1Java.style.backgroundColor="white";
          op2Java.style.backgroundColor="white";
          op3Java.style.backgroundColor="white";
          op4Java.style.backgroundColor="white";
             let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:"Skipped"
            }
            javaIncorrectAnswers.push(wrong_answer);
          codingJavaStart();
        }

      }
          
       
      else{
        mcqJava.classList.add("d-none");
        fillBlankJava.classList.remove("d-none");
        let formattedQuestion = y.ques.replace(/\n/g, "<br>");
         codingJavaQues.innerHTML = formattedQuestion;


        javaCheckFill.onclick=function(){
           clearInterval(javaTimerId);
          //  javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
          //  javaQuestionCount=javaQuestionCount+1;
           javaCheckFill.disabled=false;
           javaSkip2.textContent="Next";
          javaSkip2.style.backgroundColor="#23ebdd";
            javaSkip2.style.borderColor="#23ebdd"
           javaFillAns.disabled=true;

            if(javaFillAns.value.trim().toLowerCase()===y.ans.trim().toLowerCase()){
              javaStatus1.classList.add("d-none");
              javaStatus2.classList.remove("d-none");

              javaScore=javaScore+10;
            javaScoreShow.textContent="+10";
            javaScoreShow.style.color="green";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";

            }
            else{
               javaStatus1.classList.add("d-none");
              javaStatus3.classList.remove("d-none");
               javaScore=javaScore-5;
            javaScoreShow.textContent="-5";
            javaScoreShow.style.color="red";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
             let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:javaFillAns.value
            }
            javaIncorrectAnswers.push(wrong_answer);
            
            }

          }

            javaSkip2.onclick=function(){
              if(javaFillAns.value===""){
                let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:"Skipped"
            }
            javaIncorrectAnswers.push(wrong_answer);
              }
              clearInterval(javaTimerId);
                  javaTime=20;
                   javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
                  javaQuestionCount=javaQuestionCount+1;
              
                codingJavaStart();
            }
        

      }
    }
    else if(javaLevel===2){
     let javaRandom = Math.floor(Math.random() * codingJava2Arr.length);
      let y = codingJava2Arr[javaRandom];
       javaTimer.textContent="25";
       javaTime=25

      javaTimerId= setInterval(function(){
              javaTime=javaTime-1;
              if(javaTime==0){
                clearInterval(javaTimerId);
                 javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
                javaQuestionCount=javaQuestionCount+1;
                javaTime=25;
                codingJavaStart();
              }
              if(javaTime<=5){
                javaTimer.style.color="red";
                javaTimer.textContent=javaTime;
              }
              else{
                 javaTimer.textContent=javaTime;
              }
             
            },1000);

      if(javaQuestionCount==12){
        clearInterval(javaTimerId);
        mcqJava.classList.add("d-none");
        document.getElementById("javaScoreEnd").textContent=javaScoreDisplay.textContent;
        fillBlankJava.classList.add("d-none");
        codingJavaShow.classList.add("d-none");
        codingResultJava.classList.remove("d-none");

        if(javaScore<70){
        javaScoreBelow70.classList.remove("d-none");
        javaScore100.classList.add("d-none");
        sectionCodingJava.classList.add("back15");

        javaResult1.textContent="Test finished!!";
        javaResult2.textContent="😓 Oops! Not quite right.";
        javaResult3.src="https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
        javaResult4.textContent="Don't worry — try again!";

        let h2 =document.createElement("h2");
        h2.textContent="Incorrect Answers :"
        h2.classList.add("text-center","incorrect-answer");
        javaIncorrectAnswersDisplay.appendChild(h2);

        for(let z of javaIncorrectAnswers){
          let card =document.createElement("div");
         card.classList.add("d-flex","flex-column","card4","shadow");
          javaIncorrectAnswersDisplay.appendChild(card);
          let  question =document.createElement("h6");
          question.textContent=z.ques;
          card.appendChild(question);
          let wrongDiv =document.createElement("div");
          wrongDiv.classList.add("d-flex","flex-row");
          card.appendChild(wrongDiv);

          let wrong =document.createElement("p");
          wrongDiv.textContent="Your Answer : "+z.wrong;
          wrongDiv.appendChild(wrong);

         let wrongTick = document.createElement("i");
         wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1","tick1");
         wrongDiv.appendChild(wrongTick);

         let correctDiv=document.createElement("div");
         correctDiv.classList.add("d-flex","flex-row");
         card.appendChild(correctDiv);


          let correct=document.createElement("p");
          correct.textContent="Correct Answer : "+z.correct;
          correctDiv.appendChild(correct);

            let correctTick = document.createElement("i");
            correctTick.classList.add("fa-solid","fa-check", "ml-2","mt-1","tick2");
            correctDiv.appendChild(correctTick);
          
        }

      }
      else if(javaScore<100){
        javaScoreBelow70.classList.remove("d-none");
        javaScore100.classList.add("d-none");
        sectionCodingJava.classList.add("back15");

         javaResult1.textContent="Test finished!!";
        javaResult2.textContent="🎉 Hurry! Congratulations! 🎉";
        javaResult3.src="https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
        javaResult4.textContent="Keep trying, keep coding — success and good score will come."
        

        let h2 =document.createElement("h2");
        h2.textContent="Incorrect Answers :"
        h2.classList.add("text-center","incorrect-answer");
        javaIncorrectAnswersDisplay.appendChild(h2);

        for(let z of javaIncorrectAnswers){
          let card =document.createElement("div");
         card.classList.add("d-flex","flex-column","card4","shadow");
          javaIncorrectAnswersDisplay.appendChild(card);
          let  question =document.createElement("h6");
          question.textContent=z.ques;
          card.appendChild(question);
          let wrongDiv =document.createElement("div");
          wrongDiv.classList.add("d-flex","flex-row");
          card.appendChild(wrongDiv);

          let wrong =document.createElement("p");
          wrongDiv.textContent="Your Answer : "+z.wrong;
          wrongDiv.appendChild(wrong);

         let wrongTick = document.createElement("i");
         wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1","tick1");
         wrongDiv.appendChild(wrongTick);

         let correctDiv=document.createElement("div");
         correctDiv.classList.add("d-flex","flex-row");
         card.appendChild(correctDiv);


          let correct=document.createElement("p");
          correct.textContent="Correct Answer : "+z.correct;
          correctDiv.appendChild(correct);

            let correctTick = document.createElement("i");
            correctTick.classList.add("fa-solid","fa-check", "ml-2","mt-1","tick2");
            correctDiv.appendChild(correctTick);
          
        }
      }
      // codingResult
      
      else if(javaScore===100){
          document.getElementById("sectionCodingJava").classList.add("back14");
          javaScore100.classList.remove("d-none");
          javaScoreBelow70.classList.add("d-none");

        }
       
      }
      if(y.quesType==="mcq"){
        mcqJava.classList.remove("d-none");
       let formattedQuestion = y.ques.replace(/\n/g, "<br>");
        codingJavaQues.innerHTML = formattedQuestion;

        fillBlankJava.classList.add("d-none");
             op1Java.textContent=y.op1;
            op2Java.textContent=y.op2;
             op3Java.textContent=y.op3;
             op4Java.textContent=y.op4;
                           
        op1Java.onclick=function(){
      
          op2Java.disabled=true;
          op3Java.disabled=true;
          op4Java.disabled=true;
          if(op1Java.textContent===y.ans){
            op1Java.style.backgroundColor="green";
            javaScore=javaScore+10;
            javaScoreShow.textContent="+10";
            javaScoreShow.style.color="green";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
          }
          else{
             op1Java.style.backgroundColor="red";
            javaScore=javaScore-5;
            javaScoreShow.textContent="-5";
            javaScoreShow.style.color="red";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
            let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:op1Java.textContent
            }
            javaIncorrectAnswers.push(wrong_answer);
          }
            clearInterval(javaTimerId);
            javaTime=25;
            javaSkip.textContent="Next";
            javaSkip.style.backgroundColor="#23ebdd";
            javaSkip.style.borderColor="#23ebdd"

            javaSkip.onclick=function(){
        javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
          op1Java.disabled=false;
          op2Java.disabled=false;
          op3Java.disabled=false;
          op4Java.disabled=false;
          javaQuestionCount=javaQuestionCount+1;
          op1Java.style.backgroundColor="white";
          op2Java.style.backgroundColor="white";
          op3Java.style.backgroundColor="white";
          op4Java.style.backgroundColor="white";
              codingJavaStart();
            }
        } 
        op2Java.onclick=function(){
          op1Java.disabled=true;
          op3Java.disabled=true;
          op4Java.disabled=true;
          if(op2Java.textContent===y.ans){
            op2Java.style.backgroundColor="green";
               javaScore=javaScore+10;
            javaScoreShow.textContent="+10";
            javaScoreShow.style.color="green";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
          }
          else{
             op2Java.style.backgroundColor="red";
              javaScore=javaScore-5;
            javaScoreShow.textContent="-5";
            javaScoreShow.style.color="red";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
            let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:op2Java.textContent
            }
            javaIncorrectAnswers.push(wrong_answer);
          }
          clearInterval(javaTimerId);
           javaTime=25;
           javaSkip.textContent="Next";
           javaSkip.style.backgroundColor="#23ebdd";
            javaSkip.style.borderColor="#23ebdd"

            javaSkip.onclick=function(){
          javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
          op1Java.disabled=false;
          op2Java.disabled=false;
          op3Java.disabled=false;
          op4Java.disabled=false;
          javaQuestionCount=javaQuestionCount+1;
          op1Java.style.backgroundColor="white";
          op2Java.style.backgroundColor="white";
          op3Java.style.backgroundColor="white";
          op4Java.style.backgroundColor="white";
              codingJavaStart();
            }
        }
        op3Java.onclick=function(){
          op1Java.disabled=true;
          op2Java.disabled=true;
          op4Java.disabled=true;
          if(op3Java.textContent===y.ans){
            op3Java.style.backgroundColor="green";
               javaScore=javaScore+10;
            javaScoreShow.textContent="+10";
            javaScoreShow.style.color="green";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
          }
          else{
             op3Java.style.backgroundColor="red";
              javaScore=javaScore-5;
            javaScoreShow.textContent="-5";
            javaScoreShow.style.color="red";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
            let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:op3Java.textContent
            }
            javaIncorrectAnswers.push(wrong_answer);
          }
            clearInterval(javaTimerId);
             javaTime=25;
              javaSkip.style.backgroundColor="#23ebdd";
            javaSkip.style.borderColor="#23ebdd"
             javaSkip.textContent="Next";

            javaSkip.onclick=function(){
                   javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
          op1Java.disabled=false;
          op2Java.disabled=false;
          op3Java.disabled=false;
          op4Java.disabled=false;
          javaQuestionCount=javaQuestionCount+1;
          op1Java.style.backgroundColor="white";
          op2Java.style.backgroundColor="white";
          op3Java.style.backgroundColor="white";
          op4Java.style.backgroundColor="white";
              codingJavaStart();
            }
        }
        op4Java.onclick=function(){

          op1Java.disabled=true;
          op2Java.disabled=true;
          op3Java.disabled=true;
          if(op4Java.textContent===y.ans){
            op4Java.style.backgroundColor="green";
               javaScore=javaScore+10;
            javaScoreShow.textContent="+10";
            javaScoreShow.style.color="green";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
          }
          else{
             op4Java.style.backgroundColor="red";
              javaScore=javaScore-5;
            javaScoreShow.textContent="-5";
            javaScoreShow.style.color="red";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
            let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:op4.textContent
            }
            javaIncorrectAnswers.push(wrong_answer);
          }
            clearInterval(javaTimerId);
             javaTime=25;
            javaSkip.style.backgroundColor="#23ebdd";
            javaSkip.style.borderColor="#23ebdd"
             javaSkip.textContent="Next";
            javaSkip.onclick=function(){
          javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
          op1Java.disabled=false;
          op2Java.disabled=false;
          op3Java.disabled=false;
          op4Java.disabled=false;
          javaQuestionCount=javaQuestionCount+1;
          op1Java.style.backgroundColor="white";
          op2Java.style.backgroundColor="white";
          op3Java.style.backgroundColor="white";
          op4Java.style.backgroundColor="white";
              codingJavaStart();
            }
        }
        javaSkip.onclick=function(){
          clearInterval(javaTimerId);
             javaTime=25;
          javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
          op1Java.disabled=false;
          op2Java.disabled=false;
          op3Java.disabled=false;
          op4Java.disabled=false;
          javaQuestionCount=javaQuestionCount+1;
          op1Java.style.backgroundColor="white";
          op2Java.style.backgroundColor="white";
          op3Java.style.backgroundColor="white";
          op4Java.style.backgroundColor="white";
             let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:"Skipped"
            }
            javaIncorrectAnswers.push(wrong_answer);
          codingJavaStart();
        }

      }
          
       
      else{
        mcqJava.classList.add("d-none");
        fillBlankJava.classList.remove("d-none");
        let formattedQuestion = y.ques.replace(/\n/g, "<br>");
         codingJavaQues.innerHTML = formattedQuestion;


        javaCheckFill.onclick=function(){
           clearInterval(javaTimerId);
          //  javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
          //  javaQuestionCount=javaQuestionCount+1;
           javaCheckFill.disabled=false;
           javaSkip2.textContent="Next";
          javaSkip2.style.backgroundColor="#23ebdd";
            javaSkip2.style.borderColor="#23ebdd"
           javaFillAns.disabled=true;

            if(javaFillAns.value.trim().toLowerCase()===y.ans.trim().toLowerCase()){
              javaStatus1.classList.add("d-none");
              javaStatus2.classList.remove("d-none");

              javaScore=javaScore+10;
            javaScoreShow.textContent="+10";
            javaScoreShow.style.color="green";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";

            }
            else{
               javaStatus1.classList.add("d-none");
              javaStatus3.classList.remove("d-none");
               javaScore=javaScore-5;
            javaScoreShow.textContent="-5";
            javaScoreShow.style.color="red";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
             let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:javaFillAns.value
            }
            javaIncorrectAnswers.push(wrong_answer);
            
            }

          }

            javaSkip2.onclick=function(){
              if(javaFillAns.value===""){
                let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:"Skipped"
            }
            javaIncorrectAnswers.push(wrong_answer);
              }
              clearInterval(javaTimerId);
                  javaTime=25;
                   javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
                  javaQuestionCount=javaQuestionCount+1;
              
                codingJavaStart();
            }
        

      }
    }
    else if(javaLevel===3){
     let javaRandom = Math.floor(Math.random() * codingJava3Arr.length);
      let y = codingJava3Arr[javaRandom];
       javaTimer.textContent="30";
       javaTime=30

      javaTimerId= setInterval(function(){
              javaTime=javaTime-1;
              if(javaTime==0){
                clearInterval(javaTimerId);
                 javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
                javaQuestionCount=javaQuestionCount+1;
                javaTime=30;
                codingJavaStart();
              }
              if(javaTime<=5){
                javaTimer.style.color="red";
                javaTimer.textContent=javaTime;
              }
              else{
                 javaTimer.textContent=javaTime;
              }
             
            },1000);

      if(javaQuestionCount==12){
        clearInterval(javaTimerId);
        mcqJava.classList.add("d-none");
        document.getElementById("javaScoreEnd").textContent=javaScoreDisplay.textContent;
        fillBlankJava.classList.add("d-none");
        codingJavaShow.classList.add("d-none");
        codingResultJava.classList.remove("d-none");

        if(javaScore<70){
        javaScoreBelow70.classList.remove("d-none");
        javaScore100.classList.add("d-none");
        sectionCodingJava.classList.add("back15");

        javaResult1.textContent="Test finished!!";
        javaResult2.textContent="😓 Oops! Not quite right.";
        javaResult3.src="https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
        javaResult4.textContent="Don't worry — try again!";

        let h2 =document.createElement("h2");
        h2.textContent="Incorrect Answers :"
        h2.classList.add("text-center","incorrect-answer");
        javaIncorrectAnswersDisplay.appendChild(h2);

        for(let z of javaIncorrectAnswers){
          let card =document.createElement("div");
         card.classList.add("d-flex","flex-column","card4","shadow");
          javaIncorrectAnswersDisplay.appendChild(card);
          let  question =document.createElement("h6");
          question.textContent=z.ques;
          card.appendChild(question);
          let wrongDiv =document.createElement("div");
          wrongDiv.classList.add("d-flex","flex-row");
          card.appendChild(wrongDiv);

          let wrong =document.createElement("p");
          wrongDiv.textContent="Your Answer : "+z.wrong;
          wrongDiv.appendChild(wrong);

         let wrongTick = document.createElement("i");
         wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1","tick1");
         wrongDiv.appendChild(wrongTick);

         let correctDiv=document.createElement("div");
         correctDiv.classList.add("d-flex","flex-row");
         card.appendChild(correctDiv);


          let correct=document.createElement("p");
          correct.textContent="Correct Answer : "+z.correct;
          correctDiv.appendChild(correct);

            let correctTick = document.createElement("i");
            correctTick.classList.add("fa-solid","fa-check", "ml-2","mt-1","tick2");
            correctDiv.appendChild(correctTick);
          
        }

      }
      else if(javaScore<100){
        javaScoreBelow70.classList.remove("d-none");
        javaScore100.classList.add("d-none");
        sectionCodingJava.classList.add("back15");

         javaResult1.textContent="Test finished!!";
        javaResult2.textContent="🎉 Hurry! Congratulations! 🎉";
        javaResult3.src="https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
        javaResult4.textContent="Keep trying, keep coding — success and good score will come."
        

        let h2 =document.createElement("h2");
        h2.textContent="Incorrect Answers :"
        h2.classList.add("text-center","incorrect-answer");
        javaIncorrectAnswersDisplay.appendChild(h2);

        for(let z of javaIncorrectAnswers){
          let card =document.createElement("div");
         card.classList.add("d-flex","flex-column","card4","shadow");
          javaIncorrectAnswersDisplay.appendChild(card);
          let  question =document.createElement("h6");
          question.textContent=z.ques;
          card.appendChild(question);
          let wrongDiv =document.createElement("div");
          wrongDiv.classList.add("d-flex","flex-row");
          card.appendChild(wrongDiv);

          let wrong =document.createElement("p");
          wrongDiv.textContent="Your Answer : "+z.wrong;
          wrongDiv.appendChild(wrong);

         let wrongTick = document.createElement("i");
         wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1","tick1");
         wrongDiv.appendChild(wrongTick);

         let correctDiv=document.createElement("div");
         correctDiv.classList.add("d-flex","flex-row");
         card.appendChild(correctDiv);


          let correct=document.createElement("p");
          correct.textContent="Correct Answer : "+z.correct;
          correctDiv.appendChild(correct);

            let correctTick = document.createElement("i");
            correctTick.classList.add("fa-solid","fa-check", "ml-2","mt-1","tick2");
            correctDiv.appendChild(correctTick);
          
        }
      }
      // codingResult
      
      else if(javaScore===100){
          document.getElementById("sectionCodingJava").classList.add("back14");
          javaScore100.classList.remove("d-none");
          javaScoreBelow70.classList.add("d-none");

        }
       
      }
      if(y.quesType==="mcq"){
        mcqJava.classList.remove("d-none");
       let formattedQuestion = y.ques.replace(/\n/g, "<br>");
        codingJavaQues.innerHTML = formattedQuestion;

        fillBlankJava.classList.add("d-none");
             op1Java.textContent=y.op1;
            op2Java.textContent=y.op2;
             op3Java.textContent=y.op3;
             op4Java.textContent=y.op4;
                           
        op1Java.onclick=function(){
      
          op2Java.disabled=true;
          op3Java.disabled=true;
          op4Java.disabled=true;
          if(op1Java.textContent===y.ans){
            op1Java.style.backgroundColor="green";
            javaScore=javaScore+10;
            javaScoreShow.textContent="+10";
            javaScoreShow.style.color="green";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
          }
          else{
             op1Java.style.backgroundColor="red";
            javaScore=javaScore-5;
            javaScoreShow.textContent="-5";
            javaScoreShow.style.color="red";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
            let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:op1Java.textContent
            }
            javaIncorrectAnswers.push(wrong_answer);
          }
            clearInterval(javaTimerId);
            javaTime=30;
            javaSkip.textContent="Next";
            javaSkip.style.backgroundColor="#23ebdd";
            javaSkip.style.borderColor="#23ebdd"

            javaSkip.onclick=function(){
        javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
          op1Java.disabled=false;
          op2Java.disabled=false;
          op3Java.disabled=false;
          op4Java.disabled=false;
          javaQuestionCount=javaQuestionCount+1;
          op1Java.style.backgroundColor="white";
          op2Java.style.backgroundColor="white";
          op3Java.style.backgroundColor="white";
          op4Java.style.backgroundColor="white";
              codingJavaStart();
            }
        } 
        op2Java.onclick=function(){
          op1Java.disabled=true;
          op3Java.disabled=true;
          op4Java.disabled=true;
          if(op2Java.textContent===y.ans){
            op2Java.style.backgroundColor="green";
               javaScore=javaScore+10;
            javaScoreShow.textContent="+10";
            javaScoreShow.style.color="green";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
          }
          else{
             op2Java.style.backgroundColor="red";
              javaScore=javaScore-5;
            javaScoreShow.textContent="-5";
            javaScoreShow.style.color="red";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
            let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:op2Java.textContent
            }
            javaIncorrectAnswers.push(wrong_answer);
          }
          clearInterval(javaTimerId);
           javaTime=30;
           javaSkip.textContent="Next";
           javaSkip.style.backgroundColor="#23ebdd";
            javaSkip.style.borderColor="#23ebdd"

            javaSkip.onclick=function(){
          javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
          op1Java.disabled=false;
          op2Java.disabled=false;
          op3Java.disabled=false;
          op4Java.disabled=false;
          javaQuestionCount=javaQuestionCount+1;
          op1Java.style.backgroundColor="white";
          op2Java.style.backgroundColor="white";
          op3Java.style.backgroundColor="white";
          op4Java.style.backgroundColor="white";
              codingJavaStart();
            }
        }
        op3Java.onclick=function(){
          op1Java.disabled=true;
          op2Java.disabled=true;
          op4Java.disabled=true;
          if(op3Java.textContent===y.ans){
            op3Java.style.backgroundColor="green";
               javaScore=javaScore+10;
            javaScoreShow.textContent="+10";
            javaScoreShow.style.color="green";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
          }
          else{
             op3Java.style.backgroundColor="red";
              javaScore=javaScore-5;
            javaScoreShow.textContent="-5";
            javaScoreShow.style.color="red";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
            let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:op3Java.textContent
            }
            javaIncorrectAnswers.push(wrong_answer);
          }
            clearInterval(javaTimerId);
             javaTime=30;
              javaSkip.style.backgroundColor="#23ebdd";
            javaSkip.style.borderColor="#23ebdd"
             javaSkip.textContent="Next";

            javaSkip.onclick=function(){
                   javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
          op1Java.disabled=false;
          op2Java.disabled=false;
          op3Java.disabled=false;
          op4Java.disabled=false;
          javaQuestionCount=javaQuestionCount+1;
          op1Java.style.backgroundColor="white";
          op2Java.style.backgroundColor="white";
          op3Java.style.backgroundColor="white";
          op4Java.style.backgroundColor="white";
              codingJavaStart();
            }
        }
        op4Java.onclick=function(){

          op1Java.disabled=true;
          op2Java.disabled=true;
          op3Java.disabled=true;
          if(op4Java.textContent===y.ans){
            op4Java.style.backgroundColor="green";
               javaScore=javaScore+10;
            javaScoreShow.textContent="+10";
            javaScoreShow.style.color="green";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
          }
          else{
             op4Java.style.backgroundColor="red";
              javaScore=javaScore-5;
            javaScoreShow.textContent="-5";
            javaScoreShow.style.color="red";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
            let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:op4.textContent
            }
            javaIncorrectAnswers.push(wrong_answer);
          }
            clearInterval(javaTimerId);
             javaTime=30;
            javaSkip.style.backgroundColor="#23ebdd";
            javaSkip.style.borderColor="#23ebdd"
             javaSkip.textContent="Next";
            javaSkip.onclick=function(){
          javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
          op1Java.disabled=false;
          op2Java.disabled=false;
          op3Java.disabled=false;
          op4Java.disabled=false;
          javaQuestionCount=javaQuestionCount+1;
          op1Java.style.backgroundColor="white";
          op2Java.style.backgroundColor="white";
          op3Java.style.backgroundColor="white";
          op4Java.style.backgroundColor="white";
              codingJavaStart();
            }
        }
        javaSkip.onclick=function(){
          clearInterval(javaTimerId);
             javaTime=30;
          javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
          op1Java.disabled=false;
          op2Java.disabled=false;
          op3Java.disabled=false;
          op4Java.disabled=false;
          javaQuestionCount=javaQuestionCount+1;
          op1Java.style.backgroundColor="white";
          op2Java.style.backgroundColor="white";
          op3Java.style.backgroundColor="white";
          op4Java.style.backgroundColor="white";
             let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:"Skipped"
            }
            javaIncorrectAnswers.push(wrong_answer);
          codingJavaStart();
        }

      }
          
       
      else{
        mcqJava.classList.add("d-none");
        fillBlankJava.classList.remove("d-none");
        let formattedQuestion = y.ques.replace(/\n/g, "<br>");
         codingJavaQues.innerHTML = formattedQuestion;


        javaCheckFill.onclick=function(){
           clearInterval(javaTimerId);
          //  javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
          //  javaQuestionCount=javaQuestionCount+1;
           javaCheckFill.disabled=false;
           javaSkip2.textContent="Next";
          javaSkip2.style.backgroundColor="#23ebdd";
            javaSkip2.style.borderColor="#23ebdd"
           javaFillAns.disabled=true;

            if(javaFillAns.value.trim().toLowerCase()===y.ans.trim().toLowerCase()){
              javaStatus1.classList.add("d-none");
              javaStatus2.classList.remove("d-none");

              javaScore=javaScore+10;
            javaScoreShow.textContent="+10";
            javaScoreShow.style.color="green";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";

            }
            else{
               javaStatus1.classList.add("d-none");
              javaStatus3.classList.remove("d-none");
               javaScore=javaScore-5;
            javaScoreShow.textContent="-5";
            javaScoreShow.style.color="red";
            javaScoreDisplay.textContent="Score: "+javaScore+"/100";
             let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:javaFillAns.value
            }
            javaIncorrectAnswers.push(wrong_answer);
            
            }

          }

            javaSkip2.onclick=function(){
              if(javaFillAns.value===""){
                let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:"Skipped"
            }
            javaIncorrectAnswers.push(wrong_answer);
              }
              clearInterval(javaTimerId);
                  javaTime=30;
                   javaQuestionNumber.textContent="Question:"+javaQuestionCount+"/10";
                  javaQuestionCount=javaQuestionCount+1;
              
                codingJavaStart();
            }
        

      }
    }
   
    
    
  }

  function resetCodingJava() {

  document.getElementById("codingJavaShow").classList.add("d-none");
  document.getElementById("codingResultJava").classList.add("d-none");
  document.getElementById("codingJavaHide").classList.remove("d-none");


  document.getElementById("javaQuestionNumber").innerText = "Question: 1/10";
  document.getElementById("javaScoreDisplay").innerText = "Score: 0/100";
  document.getElementById("javaScoreShow").innerText = "";
  document.getElementById("javaTimer").innerText = "00";
  document.getElementById("codingJavaQues").innerText = "";

  document.getElementById("op1Java").innerText = "option1";
  document.getElementById("op2Java").innerText = "option2";
  document.getElementById("op3Java").innerText = "option3";
  document.getElementById("op4Java").innerText = "option4";

  javaIncorrectAnswers=[];
  document.getElementById("javaIncorrectAnswersDisplay").innerHTML = "";

  javaScore100.classList.add("d-none");
  javaScoreBelow70.classList.add("d-none");

  javaResult1.textContent="";
  javaResult2.textContent="";
  javaResult3.src="";
  javaResult4.textContent="";


  sectionCodingJava.classList.remove("back14");
  sectionCodingJava.classList.remove("back15");

  document.getElementById("javaFillAns").value = "";
  document.getElementById("fillBlankJava").style.display = "none";
  document.getElementById("mcqJava").style.display = "block";


  document.getElementById("javaStatus1").classList.remove("d-none");
  document.getElementById("javaStatus2").classList.add("d-none");
  document.getElementById("javaStatus3").classList.add("d-none");

  if (typeof javaTimerId !== "undefined") {
    clearInterval(javaTimerId);
  }
   javaTime=20;
  javaQuestionCount =2;
  javaScore = 0;
}

function javaResetLevel(){
  javaButton1.disabled=false;
  javaButton2.disabled=false;
  javaButton3.disabled=false;
  javaButton.classList.add("d-none");
  javaIncorrectAnswers=[];
}
  




    //  c++







let cButton=document.getElementById("cButton");
let cButton1=document.getElementById("cButton1");
let cButton2=document.getElementById("cButton2");
let cButton3=document.getElementById("cButton3");
let cLevel=0;
let cCodingTest=document.getElementById("cCodingTest");
let cTimer=document.getElementById("cTimer");

cButton1.onclick=function(){
  cButton2.disabled=true;
  cButton3.disabled=true;
  cLevel=1;

  cButton.classList.remove("d-none");
  cButton.classList.add("d-block");
}

cButton2.onclick=function(){
  cButton1.disabled=true;
  cButton3.disabled=true;
  cLevel=2;
  
  cButton.classList.remove("d-none");
  cButton.classList.add("d-block");
}

cButton3.onclick=function(){
  cButton2.disabled=true;
  cButton1.disabled=true;
  cLevel=3;
  
  cButton.classList.remove("d-none");
  cButton.classList.add("d-block");
}

let cTime=0;

let codingcShow = document.getElementById("codingcShow");
let codingcHide = document.getElementById("codingcHide");
let codingcBack=document.getElementById("codingcBack");

codingcBack.onclick=function(){
  codingcShow.classList.add("d-none");
  codingcHide.classList.remove("d-none");
}

let codingc1Arr=[
  {
    ques: "Who is the creator of C++?",
    quesType: "mcq",
    op1: "Dennis Ritchie",
    op2: "James Gosling",
    op3: "Bjarne Stroustrup",
    op4: "Guido van Rossum",
    ans: "Bjarne Stroustrup"
  },
  {
    ques: "Which year was C++ developed?",
    quesType: "mcq",
    op1: "1980",
    op2: "1991",
    op3: "1972",
    op4: "2000",
    ans: "1980"
  },
  {
    ques: "What is the file extension of C++ source files?",
    quesType: "mcq",
    op1: ".c",
    op2: ".cpp",
    op3: ".java",
    op4: ".cs",
    ans: ".cpp"
  },
  {
    ques: "Which operator is used to access members of a class through an object?",
    quesType: "mcq",
    op1: ".",
    op2: "->",
    op3: "::",
    op4: "#",
    ans: "."
  },
  {
    ques: "Which keyword is used to create objects in C++?",
    quesType: "mcq",
    op1: "create",
    op2: "object",
    op3: "new",
    op4: "malloc",
    ans: "new"
  },
  {
    ques: "Which of these is used for input in C++?",
    quesType: "mcq",
    op1: "cout",
    op2: "cin",
    op3: "printf",
    op4: "scanf",
    ans: "cin"
  },
  {
    ques: "What is the scope resolution operator in C++?",
    quesType: "mcq",
    op1: "::",
    op2: "->",
    op3: ".",
    op4: ":=",
    ans: "::"
  },
  {
    ques: "Which of these is not a C++ data type?",
    quesType: "mcq",
    op1: "float",
    op2: "int",
    op3: "double",
    op4: "real",
    ans: "real"
  },
  {
    ques: "Which header file is needed for cout and cin?",
    quesType: "mcq",
    op1: "stdio.h",
    op2: "iostream",
    op3: "conio.h",
    op4: "stdlib.h",
    ans: "iostream"
  },
  {
    ques: "What does OOP stand for?",
    quesType: "mcq",
    op1: "Object Oriented Programming",
    op2: "Only One Program",
    op3: "Online Object Protocol",
    op4: "Open Object Parsing",
    ans: "Object Oriented Programming"
  },
  {
    ques: "Which symbol is used to denote a preprocessor directive?",
    quesType: "mcq",
    op1: "#",
    op2: "$",
    op3: "@",
    op4: "&",
    ans: "#"
  },
  {
    ques: "What is the default return type of the main() function?",
    quesType: "mcq",
    op1: "void",
    op2: "char",
    op3: "int",
    op4: "float",
    ans: "int"
  },
  {
    ques: "Which keyword is used to define a constant?",
    quesType: "mcq",
    op1: "let",
    op2: "const",
    op3: "#define",
    op4: "static",
    ans: "#define"
  },
  {
    ques: "Which function is used to allocate memory dynamically in C++?",
    quesType: "mcq",
    op1: "alloc",
    op2: "malloc",
    op3: "calloc",
    op4: "new",
    ans: "new"
  },
  {
    ques: "Which concept allows function with the same name but different parameters?",
    quesType: "mcq",
    op1: "Inheritance",
    op2: "Polymorphism",
    op3: "Encapsulation",
    op4: "Function Overloading",
    ans: "Function Overloading"
  },
  {
    ques: "Which of the following is not a feature of OOP?",
    quesType: "mcq",
    op1: "Encapsulation",
    op2: "Abstraction",
    op3: "Recursion",
    op4: "Polymorphism",
    ans: "Recursion"
  },
  {
    ques: "What is the use of destructor in C++?",
    quesType: "mcq",
    op1: "To initialize objects",
    op2: "To destroy objects",
    op3: "To inherit class",
    op4: "To call main()",
    ans: "To destroy objects"
  },
  {
    ques: "Which loop is guaranteed to execute at least once?",
    quesType: "mcq",
    op1: "for",
    op2: "while",
    op3: "do-while",
    op4: "foreach",
    ans: "do-while"
  },
  {
    ques: "Which header file defines the 'string' class?",
    quesType: "mcq",
    op1: "string.h",
    op2: "cstring",
    op3: "string",
    op4: "str",
    ans: "string"
  },
  {
    ques: "Which is used to comment a single line in C++?",
    quesType: "mcq",
    op1: "#",
    op2: "//",
    op3: "/*",
    op4: "--",
    ans: "//"
  },

  // Fill in the Blanks
  {
    ques: "C++ is an extension of the ___ programming language.",
    quesType: "fill",
    ans: "C"
  },
  {
    ques: "The '___' operator is used to allocate memory dynamically.",
    quesType: "fill",
    ans: "new"
  },
  {
    ques: "The process of hiding internal details is called ___.",
    quesType: "fill",
    ans: "abstraction"
  },
  {
    ques: "Functions with the same name but different arguments are called ___.",
    quesType: "fill",
    ans: "overloaded"
  },
  {
    ques: "C++ supports ___ programming paradigms.",
    quesType: "fill",
    ans: "multiple"
  },
  {
    ques: "The ___ keyword is used to define a class in C++.",
    quesType: "fill",
    ans: "class"
  },
  {
    ques: "The ___ function is the starting point of any C++ program.",
    quesType: "fill",
    ans: "main"
  },
  {
    ques: "The dot operator (.) is used to access class ___ members.",
    quesType: "fill",
    ans: "instance"
  },
  {
    ques: "C++ was developed at ___ Bell Labs.",
    quesType: "fill",
    ans: "AT&T"
  },
  {
    ques: "The process of binding data and functions is called ___.",
    quesType: "fill",
    ans: "encapsulation"
  },
  {
    ques: "The ___ statement is used to exit from a loop early.",
    quesType: "fill",
    ans: "break"
  },
  {
    ques: "The ___ keyword is used to inherit from a base class.",
    quesType: "fill",
    ans: "public"
  },
  {
    ques: "The ___ operator is used to access pointer members.",
    quesType: "fill",
    ans: "->"
  },
  {
    ques: "Standard output is handled using the ___ object.",
    quesType: "fill",
    ans: "cout"
  },
  {
    ques: "The keyword ___ is used to define constant values.",
    quesType: "fill",
    ans: "#define"
  },
  {
    ques: "Memory allocated using new must be released using ___.",
    quesType: "fill",
    ans: "delete"
  },
  {
    ques: "The ___ function is automatically called when an object is destroyed.",
    quesType: "fill",
    ans: "destructor"
  },
  {
    ques: "The ___ header file is used for standard input/output operations.",
    quesType: "fill",
    ans: "iostream"
  },
  {
    ques: "The ___ loop checks the condition after executing the loop body.",
    quesType: "fill",
    ans: "do-while"
  },
  {
    ques: "The ___ keyword is used to return a value from a function.",
    quesType: "fill",
    ans: "return"
  },
   {
    ques: "Who developed C++?",
    quesType: "mcq",
    op1: "Dennis Ritchie",
    op2: "Bjarne Stroustrup",
    op3: "James Gosling",
    op4: "Guido van Rossum",
    ans: "Bjarne Stroustrup"
  },
  {
    ques: "Which of the following is the correct file extension of C++?",
    quesType: "mcq",
    op1: ".cp",
    op2: ".cpl",
    op3: ".cpp",
    op4: ".c",
    ans: ".cpp"
  },
  {
    ques: "Which operator is used to access members of a class using a pointer?",
    quesType: "mcq",
    op1: ".",
    op2: "*",
    op3: "->",
    op4: "&",
    ans: "->"
  },
  {
    ques: "Which of the following is used to terminate a statement in C++?",
    quesType: "mcq",
    op1: ",",
    op2: ".",
    op3: ";",
    op4: ":",
    ans: ";"
  },
  {
    ques: "Which keyword is used to define a class in C++?",
    quesType: "mcq",
    op1: "function",
    op2: "struct",
    op3: "define",
    op4: "class",
    ans: "class"
  },
  {
    ques: "What is the output of 'cout << 5 + 3;'?",
    quesType: "mcq",
    op1: "8",
    op2: "53",
    op3: "Error",
    op4: "None",
    ans: "8"
  },
  {
    ques: "Which of the following is a loop structure in C++?",
    quesType: "mcq",
    op1: "repeat",
    op2: "foreach",
    op3: "for",
    op4: "loop",
    ans: "for"
  },
  {
    ques: "Which of the following denotes a single-line comment in C++?",
    quesType: "mcq",
    op1: "/* */",
    op2: "//",
    op3: "#",
    op4: "<!-- -->",
    ans: "//"
  },
  {
    ques: "Which keyword is used to return a value from a function?",
    quesType: "mcq",
    op1: "break",
    op2: "goto",
    op3: "return",
    op4: "exit",
    ans: "return"
  },
  {
    ques: "Which header file is used for 'cout' and 'cin'?",
    quesType: "mcq",
    op1: "<iostream>",
    op2: "<stdio.h>",
    op3: "<math.h>",
    op4: "<conio.h>",
    ans: "<iostream>"
  },
  {
    ques: "Which of the following is a valid C++ identifier?",
    quesType: "mcq",
    op1: "123var",
    op2: "_var123",
    op3: "var-1",
    op4: "int",
    ans: "_var123"
  },
  {
    ques: "What is the size of an 'int' in C++ (on most systems)?",
    quesType: "mcq",
    op1: "8 bytes",
    op2: "1 byte",
    op3: "2 bytes",
    op4: "4 bytes",
    ans: "4 bytes"
  },
  {
    ques: "Which symbol is used for the address-of operator?",
    quesType: "mcq",
    op1: "&",
    op2: "*",
    op3: "@",
    op4: "%",
    ans: "&"
  },
  {
    ques: "Which keyword is used to define a constant in C++?",
    quesType: "mcq",
    op1: "immutable",
    op2: "let",
    op3: "const",
    op4: "define",
    ans: "const"
  },
  {
    ques: "Which feature of OOP allows reusing code?",
    quesType: "mcq",
    op1: "Encapsulation",
    op2: "Inheritance",
    op3: "Polymorphism",
    op4: "Abstraction",
    ans: "Inheritance"
  },
  {
    ques: "Which is used to allocate memory dynamically in C++?",
    quesType: "mcq",
    op1: "malloc",
    op2: "alloc",
    op3: "new",
    op4: "create",
    ans: "new"
  },
  {
    ques: "Which of the following is a conditional statement?",
    quesType: "mcq",
    op1: "if",
    op2: "for",
    op3: "while",
    op4: "do",
    ans: "if"
  },
  {
    ques: "Which keyword is used to define a structure?",
    quesType: "mcq",
    op1: "structure",
    op2: "struct",
    op3: "define",
    op4: "object",
    ans: "struct"
  },
  {
    ques: "Which of the following is NOT a basic data type in C++?",
    quesType: "mcq",
    op1: "int",
    op2: "float",
    op3: "real",
    op4: "char",
    ans: "real"
  },
  {
    ques: "What is the output of 'cout << true;'?",
    quesType: "mcq",
    op1: "1",
    op2: "0",
    op3: "true",
    op4: "Error",
    ans: "1"
  },

  // Fill in the blanks
  {
    ques: "The C++ language is an extension of the ___ language.",
    quesType: "fill",
    ans: "C"
  },
  {
    ques: "The keyword used to create objects in C++ is ___.",
    quesType: "fill",
    ans: "new"
  },
  {
    ques: "The 'cout' object is used to display output and is part of the ___ library.",
    quesType: "fill",
    ans: "iostream"
  },
  {
    ques: "A ___ is a user-defined data type in C++.",
    quesType: "fill",
    ans: "class"
  },
  {
    ques: "C++ uses the ___ keyword to declare constants.",
    quesType: "fill",
    ans: "const"
  },
  {
    ques: "The standard namespace in C++ is ___.",
    quesType: "fill",
    ans: "std"
  },
  {
    ques: "Each statement in C++ must end with a ___.",
    quesType: "fill",
    ans: "semicolon"
  },
  {
    ques: "In C++, a function must be ___ before it is used.",
    quesType: "fill",
    ans: "declared"
  },
  {
    ques: "To get input from the user, we use the ___ object.",
    quesType: "fill",
    ans: "cin"
  },
  {
    ques: "The ___ keyword is used to define a function that does not return a value.",
    quesType: "fill",
    ans: "void"
  },
  {
    ques: "In C++, an array index starts from ___.",
    quesType: "fill",
    ans: "0"
  },
  {
    ques: "A loop that is guaranteed to execute at least once is the ___ loop.",
    quesType: "fill",
    ans: "do-while"
  },
  {
    ques: "The function that starts execution in a C++ program is ___().",
    quesType: "fill",
    ans: "main"
  },
  {
    ques: "The ___ operator is used to dereference a pointer.",
    quesType: "fill",
    ans: "*"
  },
  {
    ques: "The ___ loop is best used when the number of iterations is known.",
    quesType: "fill",
    ans: "for"
  },
  {
    ques: "___ is a process of hiding internal details of a class.",
    quesType: "fill",
    ans: "Encapsulation"
  },
  {
    ques: "Inheritance allows one class to acquire the properties of another using the ___ keyword.",
    quesType: "fill",
    ans: "public"
  },
  {
    ques: "In C++, a ___ is a blueprint for creating objects.",
    quesType: "fill",
    ans: "class"
  },
  {
    ques: "To exit from a loop or switch, the ___ statement is used.",
    quesType: "fill",
    ans: "break"
  },
  {
    ques: "The 'cin' object is used with the ___ operator to take input.",
    quesType: "fill",
    ans: ">>"
  },
   {
    ques: "Which of the following is a correct syntax for an if statement in C++?<br>",
    quesType: "mcq",
    op1: "if x > 10",
    op2: "if x > 10 then",
    op3: "if (x > 10)",
    op4: "if x > 10 {}",
    ans: "if (x > 10)"
  },
  {
    ques: "What is the output of: <br>int x = 5; if (x < 10) cout << 'Less'; else cout << 'More';<br>",
    quesType: "mcq",
    op1: "Less",
    op2: "More",
    op3: "Nothing",
    op4: "Error",
    ans: "Less"
  },
  {
    ques: "Which loop runs at least once even if the condition is false?<br>",
    quesType: "mcq",
    op1: "for",
    op2: "while",
    op3: "do-while",
    op4: "foreach",
    ans: "do-while"
  },
  {
    ques: "What is the keyword to skip the current iteration of a loop in C++?<br>",
    quesType: "mcq",
    op1: "break",
    op2: "next",
    op3: "continue",
    op4: "skip",
    ans: "continue"
  },
  {
    ques: "What is the output of: <br>for(int i=0; i<3; i++) cout << i;<br>",
    quesType: "mcq",
    op1: "123",
    op2: "012",
    op3: "0123",
    op4: "321",
    ans: "012"
  },
  {
    ques: "Which keyword is used to exit a loop immediately?<br>",
    quesType: "mcq",
    op1: "return",
    op2: "stop",
    op3: "break",
    op4: "exit",
    ans: "break"
  },
  {
    ques: "How many times will this loop run: <br>for(int i=1; i<=3; i++)<br>",
    quesType: "mcq",
    op1: "2",
    op2: "3",
    op3: "4",
    op4: "1",
    ans: "3"
  },
  {
    ques: "What type of loop is best for known number of iterations?<br>",
    quesType: "mcq",
    op1: "while",
    op2: "do-while",
    op3: "for",
    op4: "goto",
    ans: "for"
  },
  {
    ques: "Which of the following is a valid condition in an if statement?<br>",
    quesType: "mcq",
    op1: "x = 10",
    op2: "x > 5",
    op3: "int x",
    op4: "print x",
    ans: "x > 5"
  },
  {
    ques: "If the condition in an if statement is false, what happens?<br>",
    quesType: "mcq",
    op1: "The code inside runs",
    op2: "The else block runs if present",
    op3: "The program stops",
    op4: "It shows an error",
    ans: "The else block runs if present"
  },
  {
    ques: "What is the correct way to write an else-if block in C++?<br>",
    quesType: "mcq",
    op1: "else if(condition)",
    op2: "elseif(condition)",
    op3: "else(condition)",
    op4: "if else(condition)",
    ans: "else if(condition)"
  },
  {
    ques: "Which of the following loops can be infinite if condition never false?<br>",
    quesType: "mcq",
    op1: "while(true)",
    op2: "for(;;)",
    op3: "do {} while(true)",
    op4: "All of the above",
    ans: "All of the above"
  },
  {
    ques: "What is the purpose of a loop?<br>",
    quesType: "mcq",
    op1: "To exit the program",
    op2: "To repeat a block of code",
    op3: "To declare variables",
    op4: "To define functions",
    ans: "To repeat a block of code"
  },
  {
    ques: "The following is an example of which loop: while(i < 5)<br>",
    quesType: "mcq",
    op1: "for loop",
    op2: "do-while loop",
    op3: "while loop",
    op4: "if statement",
    ans: "while loop"
  },
  {
    ques: "What will break; do inside a loop?<br>",
    quesType: "mcq",
    op1: "Repeat the loop",
    op2: "Skip the iteration",
    op3: "Exit the loop",
    op4: "Pause the program",
    ans: "Exit the loop"
  },
  {
    ques: "Which of the following is true about if-else statements?<br>",
    quesType: "mcq",
    op1: "Else is mandatory",
    op2: "You can use multiple else if",
    op3: "Only one if allowed",
    op4: "Else if must be last",
    ans: "You can use multiple else if"
  },
  {
    ques: "In C++, which loop is useful when the body must run at least once?<br>",
    quesType: "mcq",
    op1: "while",
    op2: "do-while",
    op3: "for",
    op4: "None",
    ans: "do-while"
  },
  {
    ques: "What will this code output?<br>int x = 3; if (x==3) cout << 'Match';<br>",
    quesType: "mcq",
    op1: "Error",
    op2: "3",
    op3: "Match",
    op4: "Nothing",
    ans: "Match"
  },
  {
    ques: "How many times will this run? for(int i=0; i<0; i++)<br>",
    quesType: "mcq",
    op1: "1",
    op2: "Infinite",
    op3: "0",
    op4: "5",
    ans: "0"
  },
  {
    ques: "What is required inside the brackets of a for loop?<br>",
    quesType: "mcq",
    op1: "Condition only",
    op2: "Initialization only",
    op3: "Increment only",
    op4: "All three: init, condition, increment",
    ans: "All three: init, condition, increment"
  },

  // Fill in the blanks
  {
    ques: "The ___ loop runs at least once before checking the condition.",
    quesType: "fill",
    ans: "do-while"
  },
  {
    ques: "The keyword ___ is used to skip the current iteration of a loop.",
    quesType: "fill",
    ans: "continue"
  },
  {
    ques: "An if-else statement checks a ___ condition.",
    quesType: "fill",
    ans: "boolean"
  },
  {
    ques: "The ___ statement is used to stop a loop early.",
    quesType: "fill",
    ans: "break"
  },
  {
    ques: "You can use ___ else-if blocks in one if-else chain.",
    quesType: "fill",
    ans: "multiple"
  },
  {
    ques: "The condition of a loop must return a ___ value.",
    quesType: "fill",
    ans: "true"
  },
  {
    ques: "In a for loop, we usually use ___ as the counter variable.",
    quesType: "fill",
    ans: "i"
  },
  {
    ques: "The ___ loop is preferred when the number of iterations is known.",
    quesType: "fill",
    ans: "for"
  },
  {
    ques: "To check equality in C++, use ___ operator.",
    quesType: "fill",
    ans: "=="
  },
  {
    ques: "The else block runs when the if condition is ___.",
    quesType: "fill",
    ans: "false"
  },
  {
    ques: "The body of a while loop runs only if the condition is ___.",
    quesType: "fill",
    ans: "true"
  },
  {
    ques: "The loop header for(int i=0; i<n; i++) has ___ parts.",
    quesType: "fill",
    ans: "3"
  },
  {
    ques: "___ brackets are used to group multiple statements in if block.",
    quesType: "fill",
    ans: "Curly"
  },
  {
    ques: "The ___ keyword is used to write a loop that executes based on a condition.",
    quesType: "fill",
    ans: "while"
  },
  {
    ques: "If you want to stop a loop early, use the ___ keyword.",
    quesType: "fill",
    ans: "break"
  },
  {
    ques: "The condition in a while loop is checked ___ the loop body is executed.",
    quesType: "fill",
    ans: "before"
  },
  {
    ques: "In a do-while loop, the condition is checked ___ executing the body.",
    quesType: "fill",
    ans: "after"
  },
  {
    ques: "A loop that never ends is called an ___ loop.",
    quesType: "fill",
    ans: "infinite"
  },
  {
    ques: "A ___ loop checks the condition before executing the body.",
    quesType: "fill",
    ans: "while"
  },
  {
    ques: "In C++, the loop stops when the condition becomes ___.",
    quesType: "fill",
    ans: "false"
  },
  {
    ques: "What will be the output of: if (5 > 3) cout << 'Hi'; else cout << 'Bye';",
    quesType: "mcq",
    op1: "Bye",
    op2: "Hi",
    op3: "Error",
    op4: "None",
    ans: "Hi"
  },
  {
    ques: "Which loop is guaranteed to execute at least once?",
    quesType: "mcq",
    op1: "for loop",
    op2: "while loop",
    op3: "do-while loop",
    op4: "infinite loop",
    ans: "do-while loop"
  },
  {
    ques: "Which of the following is a correct syntax for if-else in C++?",
    quesType: "mcq",
    op1: "if condition then",
    op2: "if (condition) {} else {}",
    op3: "if condition {}",
    op4: "if {condition} else",
    ans: "if (condition) {} else {}"
  },
  {
    ques: "Which keyword is used to exit from a loop early?",
    quesType: "mcq",
    op1: "return",
    op2: "exit",
    op3: "stop",
    op4: "break",
    ans: "break"
  },
  {
    ques: "What will be the output of: int x=2; if(x==2) cout << x++; else cout << --x;",
    quesType: "mcq",
    op1: "2",
    op2: "3",
    op3: "1",
    op4: "Error",
    ans: "2"
  },
  {
    ques: "How many times will the loop run? for(int i=0;i<5;i++)",
    quesType: "mcq",
    op1: "4",
    op2: "5",
    op3: "6",
    op4: "0",
    ans: "5"
  },
  {
    ques: "Which of these is not a valid loop in C++?",
    quesType: "mcq",
    op1: "for",
    op2: "foreach",
    op3: "while",
    op4: "do-while",
    ans: "foreach"
  },
  {
    ques: "Which statement is used to skip current loop iteration?",
    quesType: "mcq",
    op1: "return",
    op2: "stop",
    op3: "continue",
    op4: "pass",
    ans: "continue"
  },
  {
    ques: "In a for loop, which part is optional?",
    quesType: "mcq",
    op1: "initialization",
    op2: "condition",
    op3: "update",
    op4: "All of these",
    ans: "All of these"
  },
  {
    ques: "What is the output of: int i = 0; while(i < 3) cout << i++;",
    quesType: "mcq",
    op1: "012",
    op2: "123",
    op3: "0123",
    op4: "Error",
    ans: "012"
  },
  {
    ques: "Which of the following is the correct syntax for a do-while loop?",
    quesType: "mcq",
    op1: "do { } until();",
    op2: "do { } while();",
    op3: "loop { }",
    op4: "repeat { }",
    ans: "do { } while();"
  },
  {
    ques: "Which of the following is true about loops?",
    quesType: "mcq",
    op1: "They execute a block of code only once.",
    op2: "They are used for conditional branching.",
    op3: "They execute code repeatedly.",
    op4: "They stop the program.",
    ans: "They execute code repeatedly."
  },
  {
    ques: "If 'i' starts at 1, what is the output of: for(; i<4; i++) cout << i;",
    quesType: "mcq",
    op1: "123",
    op2: "0123",
    op3: "134",
    op4: "1234",
    ans: "123"
  },
  {
    ques: "What is the output of: int i=0; do { cout<<i; i++; } while(i<2);",
    quesType: "mcq",
    op1: "01",
    op2: "10",
    op3: "012",
    op4: "1",
    ans: "01"
  },
  {
    ques: "What type of loop continues forever unless stopped?",
    quesType: "mcq",
    op1: "Infinite loop",
    op2: "for loop",
    op3: "do-while loop",
    op4: "while loop",
    ans: "Infinite loop"
  },
  {
    ques: "Which of the following will not create an infinite loop?",
    quesType: "mcq",
    op1: "while(true)",
    op2: "for(;;)",
    op3: "do { } while(1);",
    op4: "for(int i=0;i<0;i++)",
    ans: "for(int i=0;i<0;i++)"
  },
  {
    ques: "What is the result of: if(0) cout << 'Yes'; else cout << 'No';",
    quesType: "mcq",
    op1: "Yes",
    op2: "No",
    op3: "Error",
    op4: "Nothing",
    ans: "No"
  },
  {
    ques: "Which operator is used in loop conditions?",
    quesType: "mcq",
    op1: "=",
    op2: "==",
    op3: ":",
    op4: "++",
    ans: "=="
  },
  {
    ques: "What is the default value of an int variable declared globally in C++?",
    quesType: "mcq",
    op1: "0",
    op2: "1",
    op3: "garbage",
    op4: "undefined",
    ans: "0"
  },
  {
    ques: "What will break do in a loop?",
    quesType: "mcq",
    op1: "Skip next iteration",
    op2: "End loop completely",
    op3: "Pause the loop",
    op4: "Repeat loop",
    ans: "End loop completely"
  },

  // Fill in the blanks
  {
    ques: "The ___ statement ends the loop immediately.",
    quesType: "fill",
    ans: "break"
  },
  {
    ques: "The ___ statement skips the current iteration.",
    quesType: "fill",
    ans: "continue"
  },
  {
    ques: "In C++, ___ loops can be nested inside each other.",
    quesType: "fill",
    ans: "all"
  },
  {
    ques: "The ___ loop checks the condition before executing the body.",
    quesType: "fill",
    ans: "while"
  },
  {
    ques: "The ___ loop always executes the body at least once.",
    quesType: "fill",
    ans: "do-while"
  },
  {
    ques: "In an if-else-if ladder, only ___ block executes.",
    quesType: "fill",
    ans: "one"
  },
  {
    ques: "The condition in an if statement must return a ___ value.",
    quesType: "fill",
    ans: "boolean"
  },
  {
    ques: "A loop that never ends is called an ___ loop.",
    quesType: "fill",
    ans: "infinite"
  },
  {
    ques: "The ___ loop is commonly used when the number of iterations is known.",
    quesType: "fill",
    ans: "for"
  },
  {
    ques: "___ brackets are used to group multiple statements in loops.",
    quesType: "fill",
    ans: "curly"
  },
  {
    ques: "The else block executes when the if condition is ___.",
    quesType: "fill",
    ans: "false"
  },
  {
    ques: "The ___ operator is used to compare two values.",
    quesType: "fill",
    ans: "=="
  },
  {
    ques: "To increase a variable by 1, we use the ___ operator.",
    quesType: "fill",
    ans: "++"
  },
  {
    ques: "A loop runs ___ times if the condition is always true.",
    quesType: "fill",
    ans: "infinite"
  },
  {
    ques: "In C++, the condition inside a loop must be of ___ type.",
    quesType: "fill",
    ans: "boolean"
  },
  {
    ques: "To end a loop early, use the ___ keyword.",
    quesType: "fill",
    ans: "break"
  },
  {
    ques: "To execute something repeatedly while a condition holds, use a ___ loop.",
    quesType: "fill",
    ans: "while"
  },
  {
    ques: "___ is used to write output in C++.",
    quesType: "fill",
    ans: "cout"
  },
  {
    ques: "___ is used to read input in C++.",
    quesType: "fill",
    ans: "cin"
  },
  {
    ques: "If multiple if conditions are false, the ___ block runs.",
    quesType: "fill",
    ans: "else"
  },
   {
    ques: "Which of the following is a feature of OOP in C++?",
    quesType: "mcq",
    op1: "Encapsulation",
    op2: "Recursion",
    op3: "Memory Leak",
    op4: "Segmentation",
    ans: "Encapsulation"
  },
  {
    ques: "Which keyword is used to create a class in C++?",
    quesType: "mcq",
    op1: "function",
    op2: "object",
    op3: "class",
    op4: "struct",
    ans: "class"
  },
  {
    ques: "Which principle of OOP binds data and functions together?",
    quesType: "mcq",
    op1: "Inheritance",
    op2: "Polymorphism",
    op3: "Encapsulation",
    op4: "Abstraction",
    ans: "Encapsulation"
  },
  {
    ques: "Which function is called automatically when an object is created?",
    quesType: "mcq",
    op1: "main()",
    op2: "constructor",
    op3: "destructor",
    op4: "init()",
    ans: "constructor"
  },
  {
    ques: "Which operator is used to access members of a class using a pointer?",
    quesType: "mcq",
    op1: ".",
    op2: "*",
    op3: "->",
    op4: "&",
    ans: "->"
  },
  {
    ques: "What is the output of: <br> int a = 5; cout << a++;",
    quesType: "mcq",
    op1: "5",
    op2: "6",
    op3: "Error",
    op4: "Undefined",
    ans: "5"
  },
  {
    ques: "Which access specifier allows members to be accessible only inside the class?",
    quesType: "mcq",
    op1: "public",
    op2: "private",
    op3: "protected",
    op4: "internal",
    ans: "private"
  },
  {
    ques: "Which of the following shows function overloading?",
    quesType: "mcq",
    op1: "Same name, different parameters",
    op2: "Different name, same parameters",
    op3: "Different class, same name",
    op4: "Same parameters, same name",
    ans: "Same name, different parameters"
  },
  {
    ques: "Which of these is not a type of constructor?",
    quesType: "mcq",
    op1: "Default",
    op2: "Copy",
    op3: "Virtual",
    op4: "Parameterized",
    ans: "Virtual"
  },
  {
    ques: "What is the output of: <br> cout << 3 * 2 + 4;",
    quesType: "mcq",
    op1: "10",
    op2: "14",
    op3: "9",
    op4: "12",
    ans: "10"
  },

  // Fill in the blanks
  {
    ques: "The keyword used to create objects from a class is ___.",
    quesType: "fill",
    ans: "new"
  },
  {
    ques: "___ is the process of hiding internal details and showing only functionality.",
    quesType: "fill",
    ans: "Abstraction"
  },
  {
    ques: "The function which destroys an object is called a ___.",
    quesType: "fill",
    ans: "destructor"
  },
  {
    ques: "To inherit a class in C++, we use the keyword ___.",
    quesType: "fill",
    ans: "public"
  },
  {
    ques: "When two or more functions have the same name but different parameters, it is called ___.",
    quesType: "fill",
    ans: "function overloading"
  },
  {
    ques: "Output of: <br> int x = 2; x += 5; cout << x; is ___.",
    quesType: "fill",
    ans: "7"
  },
  {
    ques: "Output of: <br> int a = 5, b = 2; cout << a / b; is ___.",
    quesType: "fill",
    ans: "2"
  },
  {
    ques: "___ is used to refer to the current object in C++ classes.",
    quesType: "fill",
    ans: "this"
  },
  {
    ques: "Classes are also called ___ data types.",
    quesType: "fill",
    ans: "user-defined"
  },
  {
    ques: "OOP stands for ___ Oriented Programming.",
    quesType: "fill",
    ans: "Object"
  },
   {
    ques: "Which of the following is an entry-controlled loop in C++?",
    quesType: "mcq",
    op1: "do-while",
    op2: "while",
    op3: "for",
    op4: "both while and for",
    ans: "both while and for"
  },
  {
    ques: "What is the output of this code: for(int i=0;i<3;i++) cout<<i<<\" \";?",
    quesType: "mcq",
    op1: "1 2 3",
    op2: "0 1 2",
    op3: "0 1 2 3",
    op4: "1 2",
    ans: "0 1 2"
  },
  {
    ques: "Which loop will execute at least once even if the condition is false?",
    quesType: "mcq",
    op1: "while",
    op2: "for",
    op3: "do-while",
    op4: "None",
    ans: "do-while"
  },
  {
    ques: "Which keyword is used to jump out of a loop?",
    quesType: "mcq",
    op1: "exit",
    op2: "return",
    op3: "break",
    op4: "continue",
    ans: "break"
  },
  {
    ques: "Which keyword skips the current iteration of the loop?",
    quesType: "mcq",
    op1: "continue",
    op2: "break",
    op3: "skip",
    op4: "pass",
    ans: "continue"
  },
  {
    ques: "How many times will this loop run: for(int i=1;i<=5;i++)?",
    quesType: "mcq",
    op1: "4",
    op2: "5",
    op3: "6",
    op4: "Infinite",
    ans: "5"
  },
  {
    ques: "Which is the correct syntax of a while loop?",
    quesType: "mcq",
    op1: "while(condition) { }",
    op2: "while {condition} ( )",
    op3: "loop(condition) { }",
    op4: "None",
    ans: "while(condition) { }"
  },
  {
    ques: "Which loop is best suited when the number of iterations is known?",
    quesType: "mcq",
    op1: "while",
    op2: "for",
    op3: "do-while",
    op4: "if-else",
    ans: "for"
  },
  {
    ques: "In a for loop, which part is optional?",
    quesType: "mcq",
    op1: "Initialization",
    op2: "Condition",
    op3: "Update",
    op4: "All are optional",
    ans: "All are optional"
  },
  {
    ques: "What is the output of: int i=5; while(i>0) cout<<i--;?",
    quesType: "mcq",
    op1: "54321",
    op2: "12345",
    op3: "4321",
    op4: "None",
    ans: "54321"
  },
  {
    ques: "The do-while loop ends with:",
    quesType: "mcq",
    op1: "while;",
    op2: "while()",
    op3: "while(condition);",
    op4: "loop;",
    ans: "while(condition);"
  },
  {
    ques: "Which statement correctly initializes a for loop?",
    quesType: "mcq",
    op1: "for i=0 to 5",
    op2: "for(int i=0; i<5; i++)",
    op3: "loop(i<5)",
    op4: "while(int i=0; i<5)",
    ans: "for(int i=0; i<5; i++)"
  },
  {
    ques: "What will this loop print: int i=1; do{cout<<i;}while(i<1);?",
    quesType: "mcq",
    op1: "1",
    op2: "Nothing",
    op3: "0",
    op4: "Infinite loop",
    ans: "1"
  },
  {
    ques: "What is an infinite loop?",
    quesType: "mcq",
    op1: "A loop with unknown iterations",
    op2: "A loop that runs forever",
    op3: "A loop that prints numbers",
    op4: "None",
    ans: "A loop that runs forever"
  },
  {
    ques: "What is the output of: for(int i=0; i<0; i++) cout<<i;?",
    quesType: "mcq",
    op1: "0",
    op2: "1",
    op3: "Nothing",
    op4: "Infinite loop",
    ans: "Nothing"
  },
  {
    ques: "What is the output: int i=1; while(i<=3) cout<<i++;?",
    quesType: "mcq",
    op1: "1 2 3",
    op2: "2 3 4",
    op3: "1 2",
    op4: "2 3",
    ans: "1 2 3"
  },
  {
    ques: "Which is true about while loop?",
    quesType: "mcq",
    op1: "Exit-controlled",
    op2: "Entry-controlled",
    op3: "Doesn't need condition",
    op4: "Executes once",
    ans: "Entry-controlled"
  },
  {
    ques: "Loop that repeats until a false condition is:",
    quesType: "mcq",
    op1: "for",
    op2: "if",
    op3: "switch",
    op4: "while",
    ans: "while"
  },
  {
    ques: "Which loop is not entry-controlled?",
    quesType: "mcq",
    op1: "while",
    op2: "for",
    op3: "do-while",
    op4: "None",
    ans: "do-while"
  },
  {
    ques: "What is the use of loop control statements?",
    quesType: "mcq",
    op1: "To control speed",
    op2: "To exit or skip iterations",
    op3: "To debug code",
    op4: "To stop compiler",
    ans: "To exit or skip iterations"
  },

  // Fill in the blanks
  {
    ques: "The ___ loop executes a block of code as long as a condition is true.",
    quesType: "fill",
    ans: "while"
  },
  {
    ques: "The ___ loop is used when the number of iterations is known.",
    quesType: "fill",
    ans: "for"
  },
  {
    ques: "The ___ statement is used to skip the current iteration.",
    quesType: "fill",
    ans: "continue"
  },
  {
    ques: "The ___ statement is used to exit a loop early.",
    quesType: "fill",
    ans: "break"
  },
  {
    ques: "The ___ loop guarantees at least one execution.",
    quesType: "fill",
    ans: "do-while"
  },
  {
    ques: "Each loop type needs a ___ to prevent infinite looping.",
    quesType: "fill",
    ans: "condition"
  },
  {
    ques: "In a for loop, the ___ section updates the loop variable.",
    quesType: "fill",
    ans: "increment"
  },
  {
    ques: "To print numbers 1 to 5, we use for(int i=1; i<=___; i++).",
    quesType: "fill",
    ans: "5"
  },
  {
    ques: "The loop body is enclosed in ___ braces.",
    quesType: "fill",
    ans: "curly"
  },
  {
    ques: "An infinite loop occurs when the ___ never becomes false.",
    quesType: "fill",
    ans: "condition"
  },
  {
    ques: "A ___ loop checks the condition before the first iteration.",
    quesType: "fill",
    ans: "while"
  },
  {
    ques: "The loop control variable must be ___ in each iteration.",
    quesType: "fill",
    ans: "updated"
  },
  {
    ques: "A ___ loop first executes then checks the condition.",
    quesType: "fill",
    ans: "do-while"
  },
  {
    ques: "Nested loops mean one loop inside ___ loop.",
    quesType: "fill",
    ans: "another"
  },
  {
    ques: "A loop inside a loop is called a ___ loop.",
    quesType: "fill",
    ans: "nested"
  },
  {
    ques: "The ___ part of a for loop is optional.",
    quesType: "fill",
    ans: "initialization"
  },
  {
    ques: "The ___ keyword can be used to exit all loops.",
    quesType: "fill",
    ans: "break"
  },
  {
    ques: "A ___ statement can make a loop infinite.",
    quesType: "fill",
    ans: "missing condition"
  },
  {
    ques: "The ___ operator is commonly used in loop conditions.",
    quesType: "fill",
    ans: "<"
  },
  {
    ques: "The ___ variable controls the number of loop iterations.",
    quesType: "fill",
    ans: "loop"
  },
  {
    ques: "Which loop is commonly used for printing patterns in C++?<br>",
    quesType: "mcq",
    op1: "if-else",
    op2: "switch",
    op3: "for loop",
    op4: "goto",
    ans: "for loop"
  },
  {
    ques: "How many rows will this print:<br>for(int i=1;i<=5;i++)?<br>",
    quesType: "mcq",
    op1: "4",
    op2: "5",
    op3: "6",
    op4: "1",
    ans: "5"
  },
  {
    ques: "What is the output of:<br>for(int i=1;i<=3;i++){<br>&nbsp;&nbsp;for(int j=1;j<=3;j++){<br>&nbsp;&nbsp;&nbsp;&nbsp;cout<<\"* \";<br>&nbsp;&nbsp;}<br>&nbsp;&nbsp;cout<<endl;<br>}<br>",
    quesType: "mcq",
    op1: "3 rows of 3 stars",
    op2: "1 row of 9 stars",
    op3: "Infinite loop",
    op4: "3 rows of 1 star",
    ans: "3 rows of 3 stars"
  },
  {
    ques: "What does cout<<endl do in pattern printing?<br>",
    quesType: "mcq",
    op1: "Ends program",
    op2: "Skips line",
    op3: "Prints *",
    op4: "Goes to new line",
    ans: "Goes to new line"
  },
  {
    ques: "Which loop prints stars in columns?<br>",
    quesType: "mcq",
    op1: "Outer loop",
    op2: "Inner loop",
    op3: "Both loops",
    op4: "None",
    ans: "Inner loop"
  },
  {
    ques: "What is the role of i and j in nested loops for patterns?<br>",
    quesType: "mcq",
    op1: "i controls rows, j controls columns",
    op2: "j controls rows, i controls columns",
    op3: "both control rows",
    op4: "both control columns",
    ans: "i controls rows, j controls columns"
  },
  {
    ques: "To print a right-angled triangle of stars, we use:<br>",
    quesType: "mcq",
    op1: "Equal i and j loops",
    op2: "j<=i condition",
    op3: "i<=j condition",
    op4: "j==i",
    ans: "j<=i condition"
  },
  {
    ques: "Which symbol is used to print stars?<br>",
    quesType: "mcq",
    op1: "#",
    op2: "$",
    op3: "*",
    op4: "&",
    ans: "*"
  },
  {
    ques: "What is the output of:<br>for(int i=1;i<=3;i++) cout<<\"*\";<br>",
    quesType: "mcq",
    op1: "***",
    op2: "3 lines of *",
    op3: "Nothing",
    op4: "* * *",
    ans: "***"
  },
  {
    ques: "How do you print a pyramid pattern?<br>",
    quesType: "mcq",
    op1: "One loop only",
    op2: "Nested loops with space & star logic",
    op3: "While loop",
    op4: "Only cout<<endl;",
    ans: "Nested loops with space & star logic"
  },

  // Fill in the blanks
  {
    ques: "In pattern printing, the ___ loop runs for each row.<br>",
    quesType: "fill",
    ans: "outer"
  },
  {
    ques: "To print stars, we use ___ statement in C++.<br>",
    quesType: "fill",
    ans: "cout"
  },
  {
    ques: "To move to the next line, we use ___ in C++.<br>",
    quesType: "fill",
    ans: "endl"
  },
  {
    ques: "In a triangle pattern, stars increase with each ___ row.<br>",
    quesType: "fill",
    ans: "next"
  },
  {
    ques: "for(int i=1;i<=n;i++) defines the ___ loop.<br>",
    quesType: "fill",
    ans: "outer"
  },
  {
    ques: "for(int j=1;j<=i;j++) defines the ___ loop.<br>",
    quesType: "fill",
    ans: "inner"
  },
  {
    ques: "To print spaces before stars, we use ___.<br>",
    quesType: "fill",
    ans: "cout<<\" \""
  },
  {
    ques: "To print inverted triangle, condition is j <= ___ - i + 1.<br>",
    quesType: "fill",
    ans: "n"
  },
  {
    ques: "In C++, the symbol ___ is used for multiplication and printing patterns.<br>",
    quesType: "fill",
    ans: "*"
  },
  {
    ques: "To create half-pyramid of 5 rows, loop runs from i=1 to ___<br>",
    quesType: "fill",
    ans: "5"
  },
  {
    ques: "The number of stars in each row is equal to the ___ number.<br>",
    quesType: "fill",
    ans: "row"
  },
  {
    ques: "To print a square of stars, both loops run up to ___<br>",
    quesType: "fill",
    ans: "n"
  },
  {
    ques: "To print each row on a new line, we use ___ after inner loop.<br>",
    quesType: "fill",
    ans: "cout<<endl;"
  },
  {
    ques: "for(int i=n;i>=1;i--) is used for ___ triangle.<br>",
    quesType: "fill",
    ans: "inverted"
  },
  {
    ques: "The inner loop usually prints ___ in patterns.<br>",
    quesType: "fill",
    ans: "stars"
  },
  {
    ques: "Outer loop controls number of ___ in patterns.<br>",
    quesType: "fill",
    ans: "rows"
  },
  {
    ques: "The pattern shape depends on the ___ used.<br>",
    quesType: "fill",
    ans: "logic"
  },
  {
    ques: "To print multiple characters, use loop and ___ statement.<br>",
    quesType: "fill",
    ans: "cout"
  },
  {
    ques: "To make pyramid center aligned, we print ___ before stars.<br>",
    quesType: "fill",
    ans: "spaces"
  },
  {
    ques: "Nested loops are useful for printing ___ shapes in C++.<br>",
    quesType: "fill",
    ans: "pattern"
  }

]

let codingc2Arr=[
  {
    ques: "What will be the output of the following code?<br>int a = 5;<br>cout << a++ << ++a << a;<br>",
    quesType: "mcq",
    op1: "5 7 7",
    op2: "6 6 6",
    op3: "5 6 6",
    op4: "5 6 7",
    ans: "5 7 7"
  },
  {
    ques: "Which of the following is the correct way to allocate dynamic memory for an int array of size 5?<br>",
    quesType: "mcq",
    op1: "int *arr = new int(5);",
    op2: "int *arr = new int[5];",
    op3: "int arr = new int[5];",
    op4: "int arr[5] = new int;",
    ans: "int *arr = new int[5];"
  },
  {
    ques: "Which concept allows using the same function name for different types?<br>",
    quesType: "mcq",
    op1: "Inheritance",
    op2: "Polymorphism",
    op3: "Function Overloading",
    op4: "Encapsulation",
    ans: "Function Overloading"
  },
  {
    ques: "Which of these is NOT a valid loop in C++?<br>",
    quesType: "mcq",
    op1: "for",
    op2: "while",
    op3: "loop",
    op4: "do-while",
    ans: "loop"
  },
  {
    ques: "Which of the following access specifiers makes class members accessible only within the same class?<br>",
    quesType: "mcq",
    op1: "public",
    op2: "private",
    op3: "protected",
    op4: "internal",
    ans: "private"
  },
  {
    ques: "Which function is called automatically when an object is created?<br>",
    quesType: "mcq",
    op1: "Destructor",
    op2: "Main",
    op3: "Constructor",
    op4: "Init",
    ans: "Constructor"
  },
  {
    ques: "What will be the result of the expression: 4 & 1?<br>",
    quesType: "mcq",
    op1: "4",
    op2: "1",
    op3: "0",
    op4: "5",
    ans: "0"
  },
  {
    ques: "What is the size of a `bool` type variable in C++?<br>",
    quesType: "mcq",
    op1: "2 bytes",
    op2: "1 byte",
    op3: "4 bytes",
    op4: "Depends on compiler",
    ans: "1 byte"
  },
  {
    ques: "Which of the following loops will always execute at least once?<br>",
    quesType: "mcq",
    op1: "for",
    op2: "while",
    op3: "do-while",
    op4: "None of these",
    ans: "do-while"
  },
  {
    ques: "Which of these keywords is used to define a constant in C++?<br>",
    quesType: "mcq",
    op1: "static",
    op2: "final",
    op3: "const",
    op4: "define",
    ans: "const"
  },
  {
    ques: "Which operator is used to access a member function of a class using a pointer object?<br>",
    quesType: "mcq",
    op1: ".",
    op2: "*",
    op3: "->",
    op4: "&",
    ans: "->"
  },
  {
    ques: "How do you prevent a method from being overridden in derived class?<br>",
    quesType: "mcq",
    op1: "static",
    op2: "const",
    op3: "final",
    op4: "virtual",
    ans: "final"
  },
  {
    ques: "Which is the correct way to write a pointer to a function?<br>",
    quesType: "mcq",
    op1: "int *f();",
    op2: "int (*f)();",
    op3: "int *(*f)();",
    op4: "int f*();",
    ans: "int (*f)();"
  },
  {
    ques: "Which of these is used to deallocate memory in C++?<br>",
    quesType: "mcq",
    op1: "free",
    op2: "delete",
    op3: "clear",
    op4: "remove",
    ans: "delete"
  },
  {
    ques: "Which operator is overloaded to print custom objects using cout?<br>",
    quesType: "mcq",
    op1: "==",
    op2: ">>",
    op3: "<<",
    op4: "+",
    ans: "<<"
  },
  {
    ques: "What does STL stand for?<br>",
    quesType: "mcq",
    op1: "Standard Template List",
    op2: "Simple Template Library",
    op3: "Standard Template Library",
    op4: "Standard Typing Library",
    ans: "Standard Template Library"
  },
  {
    ques: "Which data structure in STL stores key-value pairs?<br>",
    quesType: "mcq",
    op1: "vector",
    op2: "set",
    op3: "map",
    op4: "stack",
    ans: "map"
  },
  {
    ques: "Which of these is a feature of Object-Oriented Programming?<br>",
    quesType: "mcq",
    op1: "Top-down approach",
    op2: "Goto statements",
    op3: "Encapsulation",
    op4: "None",
    ans: "Encapsulation"
  },
  {
    ques: "Which keyword is used for exception handling?<br>",
    quesType: "mcq",
    op1: "try",
    op2: "catch",
    op3: "throw",
    op4: "All of these",
    ans: "All of these"
  },
  {
    ques: "Which function must be defined as `virtual` in base class for polymorphism?<br>",
    quesType: "mcq",
    op1: "any member function",
    op2: "constructors",
    op3: "destructors",
    op4: "main()",
    ans: "any member function"
  },

  // --- Fill in the blanks ---
  {
    ques: "The default access specifier for class members is ___.<br>",
    quesType: "fill",
    ans: "private"
  },
  {
    ques: "The keyword ___ is used to define a class in C++.<br>",
    quesType: "fill",
    ans: "class"
  },
  {
    ques: "The `break` keyword is used to exit a ___ early.<br>",
    quesType: "fill",
    ans: "loop"
  },
  {
    ques: "A ___ function is a function inside a class.<br>",
    quesType: "fill",
    ans: "member"
  },
  {
    ques: "The `main` function should return an integer value, usually ___.<br>",
    quesType: "fill",
    ans: "0"
  },
  {
    ques: "Constructors have the same name as the ___ in C++.<br>",
    quesType: "fill",
    ans: "class"
  },
  {
    ques: "A pointer stores the ___ of a variable.<br>",
    quesType: "fill",
    ans: "address"
  },
  {
    ques: "A ___ constructor takes no arguments.<br>",
    quesType: "fill",
    ans: "default"
  },
  {
    ques: "The loop which checks condition after executing the block is ___.<br>",
    quesType: "fill",
    ans: "do-while"
  },
  {
    ques: "The `__cplusplus` macro defines the C++ ___ version.<br>",
    quesType: "fill",
    ans: "standard"
  },
  {
    ques: "The `this` pointer refers to the ___ object.<br>",
    quesType: "fill",
    ans: "current"
  },
  {
    ques: "The ___ operator is used to allocate memory in C++.<br>",
    quesType: "fill",
    ans: "new"
  },
  {
    ques: "The keyword ___ is used to create templates in C++.<br>",
    quesType: "fill",
    ans: "template"
  },
  {
    ques: "The output stream used in C++ is ___.<br>",
    quesType: "fill",
    ans: "cout"
  },
  {
    ques: "The ___ loop is best when the number of iterations is known.<br>",
    quesType: "fill",
    ans: "for"
  },
  {
    ques: "A class binds data and ___ together.<br>",
    quesType: "fill",
    ans: "functions"
  },
  {
    ques: "The ___ keyword is used to handle exceptions in C++.<br>",
    quesType: "fill",
    ans: "try"
  },
  {
    ques: "To refer to a global variable inside a function, use the ___ operator.<br>",
    quesType: "fill",
    ans: "::"
  },
  {
    ques: "To access the value pointed by a pointer, use the ___ operator.<br>",
    quesType: "fill",
    ans: "*"
  },
  {
    ques: "The destructor of a class starts with a ___ symbol.<br>",
    quesType: "fill",
    ans: "~"
  },
  {
    ques: "What is the output of the following code snippet?<br>int a = 5;<br>int *p = &a;<br>cout << *p << endl;<br>",
    quesType: "mcq",
    op1: "Memory address of a",
    op2: "Value of a (5)",
    op3: "Garbage value",
    op4: "Compile-time error",
    ans: "Value of a (5)"
  },
  {
    ques: "Which of the following is a correct way to declare a pointer to a function that returns int?<br>",
    quesType: "mcq",
    op1: "int *func();",
    op2: "int (*func)();",
    op3: "int *(*func)();",
    op4: "int func*();",
    ans: "int (*func)();"
  },
  {
    ques: "What does the 'auto' keyword do in C++11 and later?<br>",
    quesType: "mcq",
    op1: "Automatically manages memory",
    op2: "Declares a variable with automatic storage duration",
    op3: "Automatically deduces the type of a variable",
    op4: "Declares a constant variable",
    ans: "Automatically deduces the type of a variable"
  },
  {
    ques: "Which STL container is implemented as a balanced binary search tree?<br>",
    quesType: "mcq",
    op1: "vector",
    op2: "list",
    op3: "set",
    op4: "queue",
    ans: "set"
  },
  {
    ques: "What does the 'mutable' keyword do in C++?<br>",
    quesType: "mcq",
    op1: "Allows a member of a const object to be modified",
    op2: "Declares a variable as thread-safe",
    op3: "Makes a variable read-only",
    op4: "Declares a static member",
    ans: "Allows a member of a const object to be modified"
  },
  {
    ques: "In recursion, what is the base case?<br>",
    quesType: "mcq",
    op1: "The condition where recursion stops",
    op2: "The first recursive call",
    op3: "A function parameter",
    op4: "An infinite loop",
    ans: "The condition where recursion stops"
  },
  {
    ques: "What is the output of this code?<br>int x = 10;<br>cout << (x >> 2);<br>",
    quesType: "mcq",
    op1: "40",
    op2: "5",
    op3: "2",
    op4: "8",
    ans: "2"
  },
  {
    ques: "What is the time complexity of accessing an element in a std::vector by index?<br>",
    quesType: "mcq",
    op1: "O(n)",
    op2: "O(log n)",
    op3: "O(1)",
    op4: "O(n log n)",
    ans: "O(1)"
  },
  {
    ques: "Which operator is used to access members of a class through a pointer?<br>",
    quesType: "mcq",
    op1: ".",
    op2: "->",
    op3: "*",
    op4: "&",
    ans: "->"
  },
  {
    ques: "What does the 'explicit' keyword do when used with constructors?<br>",
    quesType: "mcq",
    op1: "Allows implicit conversions",
    op2: "Prevents implicit conversions",
    op3: "Declares a pure virtual function",
    op4: "Declares a static constructor",
    ans: "Prevents implicit conversions"
  },
  {
    ques: "What is the output of:<br>int a = 5;<br>int b = ++a * 10;<br>cout << b;<br>",
    quesType: "mcq",
    op1: "50",
    op2: "60",
    op3: "40",
    op4: "Undefined",
    ans: "60"
  },
  {
    ques: "What does the following code print?<br>std::cout << typeid(42).name();<br>",
    quesType: "mcq",
    op1: "int",
    op2: "42",
    op3: "Type name of int (implementation-defined)",
    op4: "Error",
    ans: "Type name of int (implementation-defined)"
  },
  {
    ques: "Which of the following is NOT a valid STL container?<br>",
    quesType: "mcq",
    op1: "stack",
    op2: "deque",
    op3: "arraylist",
    op4: "map",
    ans: "arraylist"
  },
  {
    ques: "What keyword is used to handle exceptions in C++?<br>",
    quesType: "mcq",
    op1: "try/catch",
    op2: "throw/catch",
    op3: "try/except",
    op4: "throw/except",
    ans: "try/catch"
  },
  {
    ques: "What is the size of a pointer on a 64-bit system?<br>",
    quesType: "mcq",
    op1: "4 bytes",
    op2: "8 bytes",
    op3: "Depends on compiler",
    op4: "16 bytes",
    ans: "8 bytes"
  },
  {
    ques: "Which of the following is the correct way to declare a reference variable?<br>",
    quesType: "mcq",
    op1: "int &ref = var;",
    op2: "int ref = &var;",
    op3: "int *ref = var;",
    op4: "int ref = *var;",
    ans: "int &ref = var;"
  },
  {
    ques: "Which function is called when an object goes out of scope?<br>",
    quesType: "mcq",
    op1: "Constructor",
    op2: "Destructor",
    op3: "Copy Constructor",
    op4: "Operator Overload",
    ans: "Destructor"
  },
  {
    ques: "What is the output of:<br>for(int i=0; i<3; i++) { cout << i << ' '; }<br>",
    quesType: "mcq",
    op1: "0 1 2 ",
    op2: "1 2 3 ",
    op3: "0 1 2 3 ",
    op4: "Error",
    ans: "0 1 2 "
  },
  {
    ques: "What is the output of:<br>int a = 10;<br>cout << (a & 1);<br>",
    quesType: "mcq",
    op1: "0",
    op2: "1",
    op3: "10",
    op4: "Error",
    ans: "0"
  },
  {
    ques: "Which of the following loops executes at least once?<br>",
    quesType: "mcq",
    op1: "for loop",
    op2: "while loop",
    op3: "do-while loop",
    op4: "none",
    ans: "do-while loop"
  },

  // Fill in the blanks
  {
    ques: "The process by which a function calls itself is called ___.",
    quesType: "fill",
    ans: "recursion"
  },
  {
    ques: "The operator used to get the address of a variable is ___.",
    quesType: "fill",
    ans: "&"
  },
  {
    ques: "The STL container that stores elements in a FIFO order is ___.",
    quesType: "fill",
    ans: "queue"
  },
  {
    ques: "A pointer that points to no valid location is called a ___ pointer.",
    quesType: "fill",
    ans: "null"
  },
  {
    ques: "The function which is automatically called when an object is destroyed is called ___.",
    quesType: "fill",
    ans: "destructor"
  },
  {
    ques: "To prevent implicit conversions, the keyword ___ is used with constructors.",
    quesType: "fill",
    ans: "explicit"
  },
  {
    ques: "The size of an int pointer on a 64-bit system is usually ___ bytes.",
    quesType: "fill",
    ans: "8"
  },
  {
    ques: "In C++, the keyword ___ is used to declare a reference variable.",
    quesType: "fill",
    ans: "&"
  },
  {
    ques: "The STL container which stores unique elements in sorted order is ___.",
    quesType: "fill",
    ans: "set"
  },
  {
    ques: "The operator used to access members of a class through a pointer is ___.",
    quesType: "fill",
    ans: "->"
  },
  {
    ques: "The loop that always executes at least once is the ___ loop.",
    quesType: "fill",
    ans: "do-while"
  },
  {
    ques: "To handle exceptions in C++, we use the ___ and ___ keywords.",
    quesType: "fill",
    ans: "try, catch"
  },
  {
    ques: "The keyword ___ allows modification of a member in a const object.",
    quesType: "fill",
    ans: "mutable"
  },
  {
    ques: "The function called when an object is created is called ___.",
    quesType: "fill",
    ans: "constructor"
  },
  {
    ques: "The STL container that supports fast random access is ___.",
    quesType: "fill",
    ans: "vector"
  },
  {
    ques: "The operator used for bitwise AND is ___.",
    quesType: "fill",
    ans: "&"
  },
  {
    ques: "The base case in recursion prevents ___.",
    quesType: "fill",
    ans: "infinite recursion"
  },
  {
    ques: "The 'auto' keyword deduces the ___ of a variable automatically.",
    quesType: "fill",
    ans: "type"
  },
  {
    ques: "A function that has the same name as the class is called a ___.",
    quesType: "fill",
    ans: "constructor"
  },
  {
    ques: "The STL container used for key-value pairs is ___.",
    quesType: "fill",
    ans: "map"
  },
   {
    ques: "What is the output of the following code?<br><pre>for(int i=1; i<=3; i++) {<br>  for(int j=1; j<=2; j++) {<br>    cout << i << j << \" \";<br>  }<br>}</pre>",
    quesType: "mcq",
    op1: "11 12 21 22 31 32 ",
    op2: "11 21 31 12 22 32 ",
    op3: "12 11 22 21 32 31 ",
    op4: "12 21 11 22 31 32 ",
    ans: "11 12 21 22 31 32 "
  },
  {
    ques: "What is the output?<br><pre>int sum=0;<br>for(int i=0; i<4; i++) {<br>  sum += i;<br>}<br>cout << sum;</pre>",
    quesType: "mcq",
    op1: "6",
    op2: "10",
    op3: "4",
    op4: "0",
    ans: "6"
  },
  {
    ques: "Output of:<br><pre>int i=1;<br>while(i<=3) {<br>  cout << i << \" \";<br>  i++;<br>}</pre>",
    quesType: "mcq",
    op1: "1 2 3 ",
    op2: "1 3 2 ",
    op3: "3 2 1 ",
    op4: "0 1 2 3 ",
    ans: "1 2 3 "
  },
  {
    ques: "What does this print?<br><pre>for(int i=3; i>0; i--)<br>  cout << i << \" \";</pre>",
    quesType: "mcq",
    op1: "1 2 3 ",
    op2: "3 2 1 ",
    op3: "3 1 2 ",
    op4: "0 1 2 ",
    ans: "3 2 1 "
  },
  {
    ques: "Output of:<br><pre>for(int i=1; i<=5; i++) {<br>  if(i==3)<br>    break;<br>  cout << i << \" \";<br>}</pre>",
    quesType: "mcq",
    op1: "1 2 3 4 5 ",
    op2: "1 2 ",
    op3: "3 4 5 ",
    op4: "1 2 4 5 ",
    ans: "1 2 "
  },
  {
    ques: "What will be output?<br><pre>int i=0;<br>do {<br>  cout << i << \" \";<br>  i++;<br>} while(i<3);</pre>",
    quesType: "mcq",
    op1: "0 1 2 ",
    op2: "1 2 3 ",
    op3: "0 1 2 3 ",
    op4: "1 2 ",
    ans: "0 1 2 "
  },
  {
    ques: "Output?<br><pre>for(int i=1; i<=3; i++) {<br>  for(int j=1; j<=i; j++) {<br>    cout << j;<br>  }<br>  cout << \" \";<br>}</pre>",
    quesType: "mcq",
    op1: "1 12 123 ",
    op2: "1 2 3 ",
    op3: "123 ",
    op4: "321 ",
    ans: "1 12 123 "
  },
  {
    ques: "Output of:<br><pre>int x=5;<br>if(x > 3)<br>  cout << \"Yes\";<br>else<br>  cout << \"No\";</pre>",
    quesType: "mcq",
    op1: "No",
    op2: "Yes",
    op3: "Error",
    op4: "Nothing",
    ans: "Yes"
  },
  {
    ques: "What will be printed?<br><pre>int a=3, b=4;<br>if(a>b)<br>  cout << a;<br>else<br>  cout << b;</pre>",
    quesType: "mcq",
    op1: "3",
    op2: "4",
    op3: "0",
    op4: "Error",
    ans: "4"
  },
  {
    ques: "Output of:<br><pre>for(int i=0; i<3; i++) {<br>  cout << i*2 << \" \";<br>}</pre>",
    quesType: "mcq",
    op1: "0 2 4 ",
    op2: "2 4 6 ",
    op3: "0 1 2 ",
    op4: "1 3 5 ",
    ans: "0 2 4 "
  },
  // Fill in the blanks
  {
    ques: "What is the output of this code?<br><pre>int i=1;<br>while(i <= 4) {<br>  cout << i << \" \";<br>  i += 2;<br>}</pre>",
    quesType: "fill",
    ans: "1 3 "
  },
  {
    ques: "Fill the output:<br><pre>for(int i=0; i<3; i++) {<br>  cout << i+1 << \" \";<br>}</pre>",
    quesType: "fill",
    ans: "1 2 3 "
  },
  {
    ques: "Output?<br><pre>int x=0;<br>do {<br>  cout << x << \" \";<br>  x++;<br>} while(x<2);</pre>",
    quesType: "fill",
    ans: "0 1 "
  },
  {
    ques: "What is printed?<br><pre>for(int i=1; i<=3; i++) {<br>  if(i == 2) continue;<br>  cout << i << \" \";<br>}</pre>",
    quesType: "fill",
    ans: "1 3 "
  },
  {
    ques: "Fill the output:<br><pre>for(int i=3; i>0; i--) {<br>  cout << i << \" \";<br>}</pre>",
    quesType: "fill",
    ans: "3 2 1 "
  },
  {
    ques: "Output of:<br><pre>int sum=0;<br>for(int i=1; i<=3; i++) {<br>  sum += i;<br>}<br>cout << sum;</pre>",
    quesType: "fill",
    ans: "6"
  },
  {
    ques: "What does this print?<br><pre>int i=0;<br>while(i < 3) {<br>  cout << i << \" \";<br>  i++;<br>}</pre>",
    quesType: "fill",
    ans: "0 1 2 "
  },
  {
    ques: "Fill the output:<br><pre>for(int i=1; i<=4; i++) {<br>  cout << i*3 << \" \";<br>}</pre>",
    quesType: "fill",
    ans: "3 6 9 12 "
  },
  {
    ques: "Output?<br><pre>int i=3;<br>do {<br>  cout << i << \" \";<br>  i--;<br>} while(i > 0);</pre>",
    quesType: "fill",
    ans: "3 2 1 "
  },
  {
    ques: "What is the output of the code?<br><pre>for(int i=0; i<2; i++) {<br>  for(int j=0; j<2; j++) {<br>    cout << i+j << \" \";<br>  }<br>}</pre>",
    quesType: "fill",
    ans: "0 1 1 2 "
  },
  {
    ques: "What is the output?<br><pre>for(int i=1; i<=4; i++) {<br>  cout << i << \"-\";<br>}</pre>",
    quesType: "mcq",
    op1: "1-2-3-4-",
    op2: "1234",
    op3: "4-3-2-1-",
    op4: "Error",
    ans: "1-2-3-4-"
  },
  {
    ques: "Output of:<br><pre>int i=0;<br>while(i < 3) {<br>  cout << i+1 << \" \";<br>  i++;<br>}</pre>",
    quesType: "mcq",
    op1: "1 2 3 ",
    op2: "0 1 2 ",
    op3: "1 2 3 4 ",
    op4: "0 1 2 3 ",
    ans: "1 2 3 "
  },
  {
    ques: "What does this print?<br><pre>for(int i=5; i>2; i--) {<br>  cout << i << \" \";<br>}</pre>",
    quesType: "mcq",
    op1: "5 4 3 ",
    op2: "2 3 4 5 ",
    op3: "5 4 3 2 ",
    op4: "3 4 5 ",
    ans: "5 4 3 "
  },
  {
    ques: "Output of nested loop:<br><pre>for(int i=1; i<=2; i++) {<br>  for(int j=1; j<=3; j++) {<br>    cout << i+j << \" \";<br>  }<br>}</pre>",
    quesType: "mcq",
    op1: "2 3 4 3 4 5 ",
    op2: "1 2 3 1 2 3 ",
    op3: "3 4 5 4 5 6 ",
    op4: "4 5 6 5 6 7 ",
    ans: "2 3 4 3 4 5 "
  },
  {
    ques: "What prints?<br><pre>int a=1;<br>while(a <= 3) {<br>  cout << a*2 << \" \";<br>  a++;<br>}</pre>",
    quesType: "mcq",
    op1: "2 4 6 ",
    op2: "1 2 3 ",
    op3: "6 4 2 ",
    op4: "2 3 4 ",
    ans: "2 4 6 "
  },
  {
    ques: "What is the output?<br><pre>for(int i=1; i<=3; i++) {<br>  if(i == 2) break;<br>  cout << i << \" \";<br>}</pre>",
    quesType: "mcq",
    op1: "1 2 ",
    op2: "1 ",
    op3: "2 3 ",
    op4: "1 3 ",
    ans: "1 "
  },
  {
    ques: "Output of:<br><pre>int n=3;<br>for(int i=1; i<=n; i++) {<br>  for(int j=1; j<=i; j++) {<br>    cout << \"*\";<br>  }<br>  cout << \"<br>\";<br>}</pre>",
    quesType: "mcq",
    op1: "*<br>**<br>***<br>",
    op2: "***<br>**<br>*<br>",
    op3: "*<br>*<br>*<br>",
    op4: "***<br>***<br>***<br>",
    ans: "*<br>**<br>***<br>"
  },
  {
    ques: "What will print?<br><pre>int x=0;<br>do {<br>  cout << x << \" \";<br>  x+=2;<br>} while(x<6);</pre>",
    quesType: "mcq",
    op1: "0 2 4 ",
    op2: "0 1 2 3 4 5 ",
    op3: "2 4 6 ",
    op4: "0 2 4 6 ",
    ans: "0 2 4 "
  },
  {
    ques: "Output of:<br><pre>for(int i=1; i<=3; i++) {<br>  cout << i*i << \" \";<br>}</pre>",
    quesType: "mcq",
    op1: "1 4 9 ",
    op2: "1 2 3 ",
    op3: "1 8 27 ",
    op4: "9 4 1 ",
    ans: "1 4 9 "
  },
  {
    ques: "What is printed?<br><pre>int i=3;<br>while(i) {<br>  cout << i << \" \";<br>  i--;<br>}</pre>",
    quesType: "mcq",
    op1: "3 2 1 ",
    op2: "1 2 3 ",
    op3: "3 2 1 0 ",
    op4: "0 1 2 3 ",
    ans: "3 2 1 "
  },
  // Fill in the blanks
  {
    ques: "Fill the output:<br><pre>for(int i=1; i<=4; i++) {<br>  cout << i*5 << \" \";<br>}</pre>",
    quesType: "fill",
    ans: "5 10 15 20 "
  },
  {
    ques: "Output?<br><pre>int i=2;<br>while(i <= 6) {<br>  cout << i << \" \";<br>  i += 2;<br>}</pre>",
    quesType: "fill",
    ans: "2 4 6 "
  },
  {
    ques: "What prints?<br><pre>for(int i=3; i>0; i--) {<br>  cout << i*3 << \" \";<br>}</pre>",
    quesType: "fill",
    ans: "9 6 3 "
  },
  {
    ques: "Output of:<br><pre>int x=1;<br>do {<br>  cout << x << \" \";<br>  x++;<br>} while(x <= 3);</pre>",
    quesType: "fill",
    ans: "1 2 3 "
  },
  {
    ques: "Fill the output:<br><pre>for(int i=0; i<3; i++) {<br>  for(int j=0; j<2; j++) {<br>    cout << i+j << \" \";<br>  }<br>}</pre>",
    quesType: "fill",
    ans: "0 1 1 2 2 3 "
  },
  {
    ques: "What will be printed?<br><pre>int n=4;<br>for(int i=1; i<=n; i++) {<br>  cout << i << \"-\";<br>}</pre>",
    quesType: "fill",
    ans: "1-2-3-4-"
  },
  {
    ques: "Output?<br><pre>int i=0;<br>while(i < 4) {<br>  cout << i+2 << \" \";<br>  i++;<br>}</pre>",
    quesType: "fill",
    ans: "2 3 4 5 "
  },
  {
    ques: "Fill the output:<br><pre>for(int i=1; i<=3; i++) {<br>  cout << i*i << \" \";<br>}</pre>",
    quesType: "fill",
    ans: "1 4 9 "
  },
  {
    ques: "What does this print?<br><pre>int i=5;<br>do {<br>  cout << i << \" \";<br>  i--;<br>} while(i > 3);</pre>",
    quesType: "fill",
    ans: "5 4 "
  },
  {
    ques: "Fill the output:<br><pre>for(int i=1; i<=2; i++) {<br>  for(int j=1; j<=2; j++) {<br>    cout << i*j << \" \";<br>  }<br>}</pre>",
    quesType: "fill",
    ans: "1 2 2 4 "
  },
  {
    ques: "What is encapsulation in OOP?<br>",
    quesType: "mcq",
    op1: "Hiding internal data and methods<br>",
    op2: "Deriving a new class<br>",
    op3: "Overloading functions<br>",
    op4: "None of the above<br>",
    ans: "Hiding internal data and methods<br>"
  },
  {
    ques: "Which of these is NOT a pillar of OOP?<br>",
    quesType: "mcq",
    op1: "Inheritance<br>",
    op2: "Encapsulation<br>",
    op3: "Compilation<br>",
    op4: "Polymorphism<br>",
    ans: "Compilation<br>"
  },
  {
    ques: "What does the keyword `virtual` indicate in C++?<br>",
    quesType: "mcq",
    op1: "Function overloading<br>",
    op2: "Function overriding through dynamic dispatch<br>",
    op3: "Constructor<br>",
    op4: "Destructor<br>",
    ans: "Function overriding through dynamic dispatch<br>"
  },
  {
    ques: "What kind of inheritance is supported by interfaces?<br>",
    quesType: "mcq",
    op1: "Single inheritance<br>",
    op2: "Multiple inheritance<br>",
    op3: "Multilevel inheritance<br>",
    op4: "Hybrid inheritance<br>",
    ans: "Multiple inheritance<br>"
  },
  {
    ques: "What is the default access modifier for class members in C++?<br>",
    quesType: "mcq",
    op1: "public<br>",
    op2: "private<br>",
    op3: "protected<br>",
    op4: "none<br>",
    ans: "private<br>"
  },
  {
    ques: "Which function is automatically called when an object is destroyed?<br>",
    quesType: "mcq",
    op1: "Constructor<br>",
    op2: "Destructor<br>",
    op3: "Virtual function<br>",
    op4: "Copy constructor<br>",
    ans: "Destructor<br>"
  },
  {
    ques: "What feature allows a class to have multiple functions with the same name?<br>",
    quesType: "mcq",
    op1: "Function overriding<br>",
    op2: "Function overloading<br>",
    op3: "Inheritance<br>",
    op4: "Polymorphism<br>",
    ans: "Function overloading<br>"
  },
  {
    ques: "Which of these is true about abstract classes?<br>",
    quesType: "mcq",
    op1: "Cannot have any data members<br>",
    op2: "Cannot be instantiated directly<br>",
    op3: "Must implement all virtual functions<br>",
    op4: "None of the above<br>",
    ans: "Cannot be instantiated directly<br>"
  },
  {
    ques: "What is polymorphism?<br>",
    quesType: "mcq",
    op1: "Multiple classes derived from one base class<br>",
    op2: "Ability to take many forms<br>",
    op3: "Overloading operators<br>",
    op4: "Combining data and methods<br>",
    ans: "Ability to take many forms<br>"
  },
  {
    ques: "Which keyword is used to inherit a base class in C++?<br>",
    quesType: "mcq",
    op1: "derive<br>",
    op2: "extends<br>",
    op3: "inherit<br>",
    op4: "public/private/protected<br>",
    ans: "public/private/protected<br>"
  },
  {
    ques: "What is the use of a constructor?<br>",
    quesType: "mcq",
    op1: "Destroy an object<br>",
    op2: "Initialize an object<br>",
    op3: "Copy an object<br>",
    op4: "Overload operators<br>",
    ans: "Initialize an object<br>"
  },
  {
    ques: "In which situation will you use friend function?<br>",
    quesType: "mcq",
    op1: "To access private members of a class<br>",
    op2: "To inherit from a class<br>",
    op3: "To overload operators<br>",
    op4: "To create virtual functions<br>",
    ans: "To access private members of a class<br>"
  },
  {
    ques: "What is function overriding?<br>",
    quesType: "mcq",
    op1: "Multiple functions with same name but different parameters<br>",
    op2: "Derived class redefines base class function<br>",
    op3: "Calling base class constructor<br>",
    op4: "None of these<br>",
    ans: "Derived class redefines base class function<br>"
  },
  {
    ques: "Which of these correctly defines encapsulation?<br>",
    quesType: "mcq",
    op1: "Combining data and functions<br>",
    op2: "Separating interface and implementation<br>",
    op3: "Hiding data<br>",
    op4: "None of the above<br>",
    ans: "Combining data and functions<br>"
  },
  {
    ques: "Which OOP concept lets a subclass use a method from its parent?<br>",
    quesType: "mcq",
    op1: "Inheritance<br>",
    op2: "Encapsulation<br>",
    op3: "Polymorphism<br>",
    op4: "Abstraction<br>",
    ans: "Inheritance<br>"
  },
  {
    ques: "What does 'this' pointer point to?<br>",
    quesType: "mcq",
    op1: "Base class object<br>",
    op2: "Derived class object<br>",
    op3: "Current object<br>",
    op4: "Global object<br>",
    ans: "Current object<br>"
  },
  {
    ques: "Which of these is a pure virtual function?<br>",
    quesType: "mcq",
    op1: "virtual void f() = 0;<br>",
    op2: "void f();<br>",
    op3: "virtual void f();<br>",
    op4: "void f() = 1;<br>",
    ans: "virtual void f() = 0;<br>"
  },
  {
    ques: "What is the use of 'protected' access modifier?<br>",
    quesType: "mcq",
    op1: "Accessible only inside class<br>",
    op2: "Accessible inside class and derived classes<br>",
    op3: "Accessible everywhere<br>",
    op4: "Accessible outside class only<br>",
    ans: "Accessible inside class and derived classes<br>"
  },
  {
    ques: "Which of these is an example of runtime polymorphism?<br>",
    quesType: "mcq",
    op1: "Function overloading<br>",
    op2: "Operator overloading<br>",
    op3: "Virtual functions<br>",
    op4: "None of these<br>",
    ans: "Virtual functions<br>"
  },
  {
    ques: "Which operator is used to access members of an object using pointer?<br>",
    quesType: "mcq",
    op1: "-><br>",
    op2: ".<br>",
    op3: "*<br>",
    op4: "&<br>",
    ans: "-><br>"
  },

  // Fill in the blanks
  {
    ques: "Fill the output:<br><pre>class A {<br>  public:<br>    int x;<br>    A() { x = 5; }<br>};<br>int main() {<br>  A a;<br>  cout << a.x;<br>}</pre>",
    quesType: "fill",
    ans: "5"
  },
  {
    ques: "Fill the output:<br><pre>class Base {<br>  public:<br>    void show() { cout << \"Base\"; }<br>};<br>class Derived : public Base {<br>  public:<br>    void show() { cout << \"Derived\"; }<br>};<br>int main() {<br>  Derived d;<br>  d.show();<br>}</pre>",
    quesType: "fill",
    ans: "Derived"
  },
  {
    ques: "Fill the output:<br><pre>class A {<br>  public:<br>    virtual void f() { cout << \"A\"; }<br>};<br>class B : public A {<br>  public:<br>    void f() { cout << \"B\"; }<br>};<br>int main() {<br>  A* ptr = new B();<br>  ptr->f();<br>}</pre>",
    quesType: "fill",
    ans: "B"
  },
  {
    ques: "Fill the output:<br><pre>class A {<br>  int x;<br>public:<br>  A() { x=10; }<br>  int getX() { return x; }<br>};<br>int main() {<br>  A a;<br>  cout << a.getX();<br>}</pre>",
    quesType: "fill",
    ans: "10"
  },
  {
    ques: "Fill the output:<br><pre>class A {<br>  public:<br>    void print() { cout << \"Hello\"; }<br>};<br>int main() {<br>  A obj;<br>  obj.print();<br>}</pre>",
    quesType: "fill",
    ans: "Hello"
  },
  {
    ques: "Fill the output:<br><pre>class A {<br>  public:<br>    int x;<br>    A(int val) { x=val; }<br>};<br>int main() {<br>  A a(100);<br>  cout << a.x;<br>}</pre>",
    quesType: "fill",
    ans: "100"
  },
  {
    ques: "Fill the output:<br><pre>class Base {<br>  public:<br>    virtual void show() { cout << \"Base\"; }<br>};<br>class Derived : public Base {<br>  public:<br>    void show() { cout << \"Derived\"; }<br>};<br>int main() {<br>  Base* bptr = new Derived();<br>  bptr->show();<br>}</pre>",
    quesType: "fill",
    ans: "Derived"
  },
  {
    ques: "Fill the output:<br><pre>class A {<br>  public:<br>    void f() { cout << \"A\"; }<br>};<br>class B : public A {<br>  public:<br>    void f() { cout << \"B\"; }<br>};<br>int main() {<br>  B b;<br>  b.f();<br>}</pre>",
    quesType: "fill",
    ans: "B"
  },
  {
    ques: "Fill the output:<br><pre>class A {<br>  public:<br>    int x = 10;<br>};<br>int main() {<br>  A a;<br>  cout << a.x;<br>}</pre>",
    quesType: "fill",
    ans: "10"
  },
  {
    ques: "Fill the output:<br><pre>class A {<br>  public:<br>    void display() { cout << \"Display\"; }<br>};<br>int main() {<br>  A obj;<br>  obj.display();<br>}</pre>",
    quesType: "fill",
    ans: "Display"
  },
  {
    ques: "Fill the output:<br><pre>class A {<br>  public:<br>    int a;<br>    A() { a=0; }<br>};<br>int main() {<br>  A obj;<br>  cout << obj.a;<br>}</pre>",
    quesType: "fill",
    ans: "0"
  },
  {
    ques: "Fill the output:<br><pre>class A {<br>  int x;<br>public:<br>  A(int val) { x=val; }<br>  int getX() { return x; }<br>};<br>int main() {<br>  A obj(50);<br>  cout << obj.getX();<br>}</pre>",
    quesType: "fill",
    ans: "50"
  },
  {
    ques: "Fill the output:<br><pre>class A {<br>  public:<br>    virtual void show() { cout << \"Base\"; }<br>};<br>class B : public A {<br>  public:<br>    void show() override { cout << \"Derived\"; }<br>};<br>int main() {<br>  A* a = new B();<br>  a->show();<br>}</pre>",
    quesType: "fill",
    ans: "Derived"
  },
  {
    ques: "Fill the output:<br><pre>class A {<br>  public:<br>    int val;<br>    A(int x) { val = x; }<br>};<br>int main() {<br>  A obj(99);<br>  cout << obj.val;<br>}</pre>",
    quesType: "fill",
    ans: "99"
  },
  {
    ques: "Fill the output:<br><pre>class A {<br>  int a = 1;<br>public:<br>  int getA() { return a; }<br>};<br>int main() {<br>  A obj;<br>  cout << obj.getA();<br>}</pre>",
    quesType: "fill",
    ans: "1"
  },
  {
    ques: "Fill the output:<br><pre>class Base {<br>  public:<br>    void show() { cout << \"Base\"; }<br>};<br>class Derived : public Base {<br>  public:<br>    void show() { cout << \"Derived\"; }<br>};<br>int main() {<br>  Base b;<br>  b.show();<br>}</pre>",
    quesType: "fill",
    ans: "Base"
  },
  {
    ques: "Fill the output:<br><pre>class A {<br>  public:<br>    void display() { cout << \"Hello OOP\"; }<br>};<br>int main() {<br>  A a;<br>  a.display();<br>}</pre>",
    quesType: "fill",
    ans: "Hello OOP"
  },
  {
    ques: "Fill the output:<br><pre>class A {<br>  int x;<br>public:<br>  A(int val) { x = val; }<br>  int getX() { return x; }<br>};<br>int main() {<br>  A obj(10);<br>  cout << obj.getX();<br>}</pre>",
    quesType: "fill",
    ans: "10"
  },
  {
    ques: "Fill the output:<br><pre>class A {<br>  public:<br>    int a;<br>    A() { a = 5; }<br>};<br>int main() {<br>  A obj;<br>  cout << obj.a;<br>}</pre>",
    quesType: "fill",
    ans: "5"
  },
  {
    ques: "What is the output of this code?<br>class A {<br> int x = 5;<br>}<br>class B extends A {<br> int x = 10;<br>}<br>public class Test {<br> public static void main(String[] args) {<br> A obj = new B();<br> System.out.println(obj.x);<br> }<br>}",
    quesType: "mcq",
    op1: "5",
    op2: "10",
    op3: "Compilation Error",
    op4: "Runtime Error",
    ans: "5"
  },
  {
    ques: "Which of the following is NOT a feature of OOP?<br>",
    quesType: "mcq",
    op1: "Encapsulation",
    op2: "Polymorphism",
    op3: "Inheritance",
    op4: "Compilation",
    ans: "Compilation"
  },
  {
    ques: "What is method overriding?<br>",
    quesType: "mcq",
    op1: "Same method name with different parameters in the same class",
    op2: "Same method name and parameters in subclass",
    op3: "Two methods with different names",
    op4: "None of these",
    ans: "Same method name and parameters in subclass"
  },
  {
    ques: "Which access specifier makes the members accessible only within the same class?<br>",
    quesType: "mcq",
    op1: "private",
    op2: "public",
    op3: "protected",
    op4: "default",
    ans: "private"
  },
  {
    ques: "What does the keyword 'this' refer to?<br>",
    quesType: "mcq",
    op1: "Current class object",
    op2: "Parent class object",
    op3: "Static variable",
    op4: "Constructor",
    ans: "Current class object"
  },
  {
    ques: "Which of the following keywords is used to inherit a class?<br>",
    quesType: "mcq",
    op1: "super",
    op2: "extends",
    op3: "implements",
    op4: "inherits",
    ans: "extends"
  },
  {
    ques: "What is the output of this snippet?<br>class Test {<br> int x = 10;<br> void print() {<br> System.out.println(x);<br> }<br>}<br>public class Main {<br> public static void main(String[] args) {<br> Test t = new Test();<br> t.print();<br> }<br>}",
    quesType: "mcq",
    op1: "10",
    op2: "0",
    op3: "Error",
    op4: "Null",
    ans: "10"
  },
  {
    ques: "Which principle allows the same method to behave differently in different classes?<br>",
    quesType: "mcq",
    op1: "Abstraction",
    op2: "Encapsulation",
    op3: "Polymorphism",
    op4: "Inheritance",
    ans: "Polymorphism"
  },
  {
    ques: "Abstract class can contain:<br>",
    quesType: "mcq",
    op1: "Only abstract methods",
    op2: "Only concrete methods",
    op3: "Both abstract and concrete methods",
    op4: "No methods",
    ans: "Both abstract and concrete methods"
  },
  {
    ques: "Which of the following is a correct way to call a superclass constructor?<br>",
    quesType: "mcq",
    op1: "super()",
    op2: "this()",
    op3: "parent()",
    op4: "base()",
    ans: "super()"
  },
  {
    ques: "What will happen if a class does not have any constructor defined?<br>",
    quesType: "mcq",
    op1: "Compilation error",
    op2: "Default constructor is provided by compiler",
    op3: "Runtime error",
    op4: "No object can be created",
    ans: "Default constructor is provided by compiler"
  },
  {
    ques: "Encapsulation is implemented by using:<br>",
    quesType: "mcq",
    op1: "Inheritance",
    op2: "Polymorphism",
    op3: "Access modifiers and methods",
    op4: "Abstract classes",
    ans: "Access modifiers and methods"
  },
  {
    ques: "Interface in Java can contain:<br>",
    quesType: "mcq",
    op1: "Only abstract methods",
    op2: "Only concrete methods",
    op3: "Both abstract and concrete methods",
    op4: "No methods",
    ans: "Only abstract methods"
  },
  {
    ques: "What is the parent class of all classes in Java?<br>",
    quesType: "mcq",
    op1: "Object",
    op2: "Class",
    op3: "Interface",
    op4: "Main",
    ans: "Object"
  },
  {
    ques: "Which keyword is used to prevent method overriding?<br>",
    quesType: "mcq",
    op1: "final",
    op2: "static",
    op3: "abstract",
    op4: "private",
    ans: "final"
  },
  {
    ques: "What is true about constructors?<br>",
    quesType: "mcq",
    op1: "They have return type void",
    op2: "They have same name as class",
    op3: "They can be static",
    op4: "They are inherited",
    ans: "They have same name as class"
  },
  {
    ques: "Which concept means hiding internal details?<br>",
    quesType: "mcq",
    op1: "Inheritance",
    op2: "Polymorphism",
    op3: "Abstraction",
    op4: "Encapsulation",
    ans: "Abstraction"
  },
  {
    ques: "Which of the following cannot be instantiated?<br>",
    quesType: "mcq",
    op1: "Class",
    op2: "Abstract Class",
    op3: "Concrete Class",
    op4: "Interface",
    ans: "Abstract Class"
  },
  {
    ques: "Which of these is not a valid access modifier?<br>",
    quesType: "mcq",
    op1: "public",
    op2: "private",
    op3: "protected",
    op4: "internal",
    ans: "internal"
  },

  // Fill in the blanks
  {
    ques: "The process of wrapping data and methods into a single unit is called ___.",
    quesType: "fill",
    ans: "Encapsulation"
  },
  {
    ques: "The ability of a message to be displayed in more than one form is called ___.",
    quesType: "fill",
    ans: "Polymorphism"
  },
  {
    ques: "The class from which other classes inherit is called ___.",
    quesType: "fill",
    ans: "Superclass"
  },
  {
    ques: "The keyword used to inherit a class is ___.",
    quesType: "fill",
    ans: "extends"
  },
  {
    ques: "A method in a subclass that has the same name and parameters as a method in superclass is called ___.",
    quesType: "fill",
    ans: "Method overriding"
  },
  {
    ques: "The special method used to initialize objects is called ___.",
    quesType: "fill",
    ans: "Constructor"
  },
  {
    ques: "Access modifier that allows access within the same package is ___.",
    quesType: "fill",
    ans: "default"
  },
  {
    ques: "An abstract class can contain ___.",
    quesType: "fill",
    ans: "abstract and concrete methods"
  },
  {
    ques: "The parent class of all classes in Java is ___.",
    quesType: "fill",
    ans: "Object"
  },
  {
    ques: "The keyword to prevent method overriding is ___.",
    quesType: "fill",
    ans: "final"
  },
  {
    ques: "Encapsulation is implemented using ___.",
    quesType: "fill",
    ans: "access modifiers"
  },
  {
    ques: "Interfaces in Java can have only ___.",
    quesType: "fill",
    ans: "abstract methods"
  },
  {
    ques: "The process of hiding internal details is called ___.",
    quesType: "fill",
    ans: "Abstraction"
  },
  {
    ques: "A method to initialize an object is called ___.",
    quesType: "fill",
    ans: "Constructor"
  },
  {
    ques: "A class that cannot be instantiated is called ___.",
    quesType: "fill",
    ans: "Abstract class"
  },
  {
    ques: "The keyword to refer to the current object is ___.",
    quesType: "fill",
    ans: "this"
  },
  {
    ques: "The ability of a class to take many forms is called ___.",
    quesType: "fill",
    ans: "Polymorphism"
  },
  {
    ques: "A subclass inherits members from its ___.",
    quesType: "fill",
    ans: "Superclass"
  },
  {
    ques: "The keyword '___' is used to call superclass constructor.",
    quesType: "fill",
    ans: "super"
  },
  {
    ques: "The default constructor is provided by the ___.",
    quesType: "fill",
    ans: "compiler"
  },
  {
    ques: "What is the index of the first element in an array in C++?<br>",
    quesType: "mcq",
    op1: "0",
    op2: "1",
    op3: "-1",
    op4: "Depends on array",
    ans: "0"
  },
  {
    ques: "Which of the following correctly declares an array of 10 integers?<br>",
    quesType: "mcq",
    op1: "int arr[10];",
    op2: "int arr();",
    op3: "int arr;",
    op4: "int arr{};",
    ans: "int arr[10];"
  },
  {
    ques: "How do you access the 5th element of an array named arr?<br>",
    quesType: "mcq",
    op1: "arr[4]",
    op2: "arr[5]",
    op3: "arr(5)",
    op4: "arr.5",
    ans: "arr[4]"
  },
  {
    ques: "What will happen if you try to access arr[10] in an array declared as int arr[10];?<br>",
    quesType: "mcq",
    op1: "Compilation error",
    op2: "Runtime error",
    op3: "Undefined behavior",
    op4: "Returns zero",
    ans: "Undefined behavior"
  },
  {
    ques: "Arrays in C++ are stored in which memory layout?<br>",
    quesType: "mcq",
    op1: "Stack",
    op2: "Heap",
    op3: "Contiguous memory",
    op4: "Linked nodes",
    ans: "Contiguous memory"
  },
  {
    ques: "What is the size of int arr[10]; assuming int is 4 bytes?<br>",
    quesType: "mcq",
    op1: "4 bytes",
    op2: "10 bytes",
    op3: "40 bytes",
    op4: "Depends on compiler",
    ans: "40 bytes"
  },
  {
    ques: "Which header file is needed to use std::array?<br>",
    quesType: "mcq",
    op1: "<array>",
    op2: "<vector>",
    op3: "<iostream>",
    op4: "<cstdlib>",
    ans: "<array>"
  },
  {
    ques: "What happens when you try to assign one array to another using = operator in C++?<br>",
    quesType: "mcq",
    op1: "Copies elements",
    op2: "Compilation error",
    op3: "Points to same array",
    op4: "Runtime error",
    ans: "Compilation error"
  },
  {
    ques: "Which of the following is a valid way to initialize an array?<br>",
    quesType: "mcq",
    op1: "int arr[3] = {1, 2, 3};",
    op2: "int arr[3] = (1, 2, 3);",
    op3: "int arr[3] = [1, 2, 3];",
    op4: "int arr[3] = <1, 2, 3>;",
    ans: "int arr[3] = {1, 2, 3};"
  },
  {
    ques: "What will be the output of this code?<br>int arr[5] = {0};<br>std::cout << arr[3];<br>",
    quesType: "mcq",
    op1: "0",
    op2: "Garbage value",
    op3: "Compilation error",
    op4: "Runtime error",
    ans: "0"
  },
  {
    ques: "Which of these loops is generally used to iterate over an array?<br>",
    quesType: "mcq",
    op1: "for loop",
    op2: "while loop",
    op3: "do-while loop",
    op4: "All of the above",
    ans: "All of the above"
  },
  {
    ques: "Which of the following is NOT true about arrays in C++?<br>",
    quesType: "mcq",
    op1: "Array size must be constant",
    op2: "Array elements are stored sequentially",
    op3: "Array can store multiple data types",
    op4: "Array name is a pointer to the first element",
    ans: "Array can store multiple data types"
  },
  {
    ques: "What is the type of arr in int arr[10]; when used without index?<br>",
    quesType: "mcq",
    op1: "int*",
    op2: "int[]",
    op3: "int",
    op4: "void*",
    ans: "int*"
  },
  {
    ques: "How do you find the number of elements in an array arr of size 10?<br>",
    quesType: "mcq",
    op1: "sizeof(arr)/sizeof(arr[0])",
    op2: "sizeof(arr)*sizeof(arr[0])",
    op3: "length(arr)",
    op4: "arr.size()",
    ans: "sizeof(arr)/sizeof(arr[0])"
  },
  {
    ques: "Which of these is a dynamic array in C++?<br>",
    quesType: "mcq",
    op1: "int arr[10];",
    op2: "std::vector<int>",
    op3: "int arr();",
    op4: "int arr{};",
    ans: "std::vector<int>"
  },
  {
    ques: "What is the output of:<br>int arr[3] = {1, 2, 3};<br>std::cout << *(arr + 1);<br>",
    quesType: "mcq",
    op1: "1",
    op2: "2",
    op3: "3",
    op4: "Error",
    ans: "2"
  },
  {
    ques: "Which keyword is used to allocate memory dynamically for arrays?<br>",
    quesType: "mcq",
    op1: "malloc",
    op2: "new",
    op3: "alloc",
    op4: "calloc",
    ans: "new"
  },
  {
    ques: "Which of these will NOT compile?<br>int arr[];<br>",
    quesType: "mcq",
    op1: "Yes it will compile",
    op2: "No, size needed",
    op3: "Depends on compiler",
    op4: "Only in C",
    ans: "No, size needed"
  },
  {
    ques: "How to initialize all elements of an array to zero?<br>",
    quesType: "mcq",
    op1: "int arr[5] = {0};",
    op2: "int arr[5] = 0;",
    op3: "int arr[5]; memset(arr, 0, 5);",
    op4: "int arr[5] = NULL;",
    ans: "int arr[5] = {0};"
  },

  // Fill in the blanks
  {
    ques: "The first element of an array is at index ___.",
    quesType: "fill",
    ans: "0"
  },
  {
    ques: "The array index in C++ starts from ___.",
    quesType: "fill",
    ans: "0"
  },
  {
    ques: "The keyword used to declare an array is ___.",
    quesType: "fill",
    ans: "int"  // or "datatype", but "int" is basic example
  },
  {
    ques: "The size of an array must be a ___ value.",
    quesType: "fill",
    ans: "constant"
  },
  {
    ques: "Accessing an array outside its boundary causes ___.",
    quesType: "fill",
    ans: "undefined behavior"
  },
  {
    ques: "Array elements are stored in ___ memory locations.",
    quesType: "fill",
    ans: "contiguous"
  },
  {
    ques: "The expression arr[i] is equivalent to ___ in pointer arithmetic.",
    quesType: "fill",
    ans: "*(arr + i)"
  },
  {
    ques: "The sizeof operator can be used to find the ___ of an array.",
    quesType: "fill",
    ans: "total size in bytes"
  },
  {
    ques: "Dynamic arrays can be created using the ___ keyword.",
    quesType: "fill",
    ans: "new"
  },
  {
    ques: "To free dynamically allocated array memory, use the ___ operator.",
    quesType: "fill",
    ans: "delete[]"
  },
  {
    ques: "The standard template library class used for dynamic arrays is ___.",
    quesType: "fill",
    ans: "vector"
  },
  {
    ques: "The default value of uninitialized array elements is ___.",
    quesType: "fill",
    ans: "garbage"
  },
  {
    ques: "The length of a fixed-size array cannot be changed after ___.",
    quesType: "fill",
    ans: "declaration"
  },
  {
    ques: "The array name acts as a ___ to the first element.",
    quesType: "fill",
    ans: "pointer"
  },
  {
    ques: "To iterate over all elements of an array, we use a ___ loop.",
    quesType: "fill",
    ans: "for"
  },
  {
    ques: "Array elements can be accessed using the ___ operator.",
    quesType: "fill",
    ans: "[]"
  },
  {
    ques: "The valid range of index for int arr[10]; is from ___ to ___.",
    quesType: "fill",
    ans: "0 to 9"
  },
  {
    ques: "The array element type and the pointer type have the same ___.",
    quesType: "fill",
    ans: "data type"
  },
  {
    ques: "Multidimensional arrays can be declared by adding ___.",
    quesType: "fill",
    ans: "multiple brackets"
  },
  {
    ques: "In C++, the last element of arr[10] is at index ___.",
    quesType: "fill",
    ans: "9"
  },
  {
    ques: "What is the index of the first element in an array in C++?<br>",
    quesType: "mcq",
    op1: "0",
    op2: "1",
    op3: "-1",
    op4: "Depends on array",
    ans: "0"
  },
  {
    ques: "Which of the following correctly declares an array of 10 integers?<br>",
    quesType: "mcq",
    op1: "int arr[10];",
    op2: "int arr();",
    op3: "int arr;",
    op4: "int arr{};",
    ans: "int arr[10];"
  },
  {
    ques: "How do you access the 5th element of an array named arr?<br>",
    quesType: "mcq",
    op1: "arr[4]",
    op2: "arr[5]",
    op3: "arr(5)",
    op4: "arr.5",
    ans: "arr[4]"
  },
  {
    ques: "What will happen if you try to access arr[10] in an array declared as int arr[10];?<br>",
    quesType: "mcq",
    op1: "Compilation error",
    op2: "Runtime error",
    op3: "Undefined behavior",
    op4: "Returns zero",
    ans: "Undefined behavior"
  },
  {
    ques: "Arrays in C++ are stored in which memory layout?<br>",
    quesType: "mcq",
    op1: "Stack",
    op2: "Heap",
    op3: "Contiguous memory",
    op4: "Linked nodes",
    ans: "Contiguous memory"
  },
  {
    ques: "What is the size of int arr[10]; assuming int is 4 bytes?<br>",
    quesType: "mcq",
    op1: "4 bytes",
    op2: "10 bytes",
    op3: "40 bytes",
    op4: "Depends on compiler",
    ans: "40 bytes"
  },
  {
    ques: "Which header file is needed to use std::array?<br>",
    quesType: "mcq",
    op1: "&lt;array&gt;",
    op2: "&lt;vector&gt;",
    op3: "&lt;iostream&gt;",
    op4: "&lt;cstdlib&gt;",
    ans: "&lt;array&gt;"
  },
  {
    ques: "What happens when you try to assign one array to another using = operator in C++?<br>",
    quesType: "mcq",
    op1: "Copies elements",
    op2: "Compilation error",
    op3: "Points to same array",
    op4: "Runtime error",
    ans: "Compilation error"
  },
  {
    ques: "Which of the following is a valid way to initialize an array?<br>",
    quesType: "mcq",
    op1: "int arr[3] = {1, 2, 3};",
    op2: "int arr[3] = (1, 2, 3);",
    op3: "int arr[3] = [1, 2, 3];",
    op4: "int arr[3] = &lt;1, 2, 3&gt;;",
    ans: "int arr[3] = {1, 2, 3};"
  },
  {
    ques: "What will be the output of this code?<br>int arr[5] = {0};<br>std::cout << arr[3];<br>",
    quesType: "mcq",
    op1: "0",
    op2: "Garbage value",
    op3: "Compilation error",
    op4: "Runtime error",
    ans: "0"
  },
  {
    ques: "Which of these loops is generally used to iterate over an array?<br>",
    quesType: "mcq",
    op1: "for loop",
    op2: "while loop",
    op3: "do-while loop",
    op4: "All of the above",
    ans: "All of the above"
  },
  {
    ques: "Which of the following is NOT true about arrays in C++?<br>",
    quesType: "mcq",
    op1: "Array size must be constant",
    op2: "Array elements are stored sequentially",
    op3: "Array can store multiple data types",
    op4: "Array name is a pointer to the first element",
    ans: "Array can store multiple data types"
  },
  {
    ques: "What is the type of arr in int arr[10]; when used without index?<br>",
    quesType: "mcq",
    op1: "int*",
    op2: "int[]",
    op3: "int",
    op4: "void*",
    ans: "int*"
  },
  {
    ques: "How do you find the number of elements in an array arr of size 10?<br>",
    quesType: "mcq",
    op1: "sizeof(arr)/sizeof(arr[0])",
    op2: "sizeof(arr)*sizeof(arr[0])",
    op3: "length(arr)",
    op4: "arr.size()",
    ans: "sizeof(arr)/sizeof(arr[0])"
  },
  {
    ques: "Which of these is a dynamic array in C++?<br>",
    quesType: "mcq",
    op1: "int arr[10];",
    op2: "std::vector&lt;int&gt;",
    op3: "int arr();",
    op4: "int arr{};",
    ans: "std::vector&lt;int&gt;"
  },
  {
    ques: "What is the output of:<br>int arr[3] = {1, 2, 3};<br>std::cout << *(arr + 1);<br>",
    quesType: "mcq",
    op1: "1",
    op2: "2",
    op3: "3",
    op4: "Error",
    ans: "2"
  },
  {
    ques: "Which keyword is used to allocate memory dynamically for arrays?<br>",
    quesType: "mcq",
    op1: "malloc",
    op2: "new",
    op3: "alloc",
    op4: "calloc",
    ans: "new"
  },
  {
    ques: "Which of these will NOT compile?<br>int arr[];<br>",
    quesType: "mcq",
    op1: "Yes it will compile",
    op2: "No, size needed",
    op3: "Depends on compiler",
    op4: "Only in C",
    ans: "No, size needed"
  },
  {
    ques: "How to initialize all elements of an array to zero?<br>",
    quesType: "mcq",
    op1: "int arr[5] = {0};",
    op2: "int arr[5] = 0;",
    op3: "int arr[5]; memset(arr, 0, 5);",
    op4: "int arr[5] = NULL;",
    ans: "int arr[5] = {0};"
  },
  {
    ques: "The first element of an array is at index ___.",
    quesType: "fill",
    ans: "0"
  },
  {
    ques: "The array index in C++ starts from ___.",
    quesType: "fill",
    ans: "0"
  },
  {
    ques: "The keyword used to declare an array is ___.",
    quesType: "fill",
    ans: "int"
  },
  {
    ques: "The size of an array must be a ___ value.",
    quesType: "fill",
    ans: "constant"
  },
  {
    ques: "Accessing an array outside its boundary causes ___.",
    quesType: "fill",
    ans: "undefined behavior"
  },
  {
    ques: "Array elements are stored in ___ memory locations.",
    quesType: "fill",
    ans: "contiguous"
  },
  {
    ques: "The expression arr[i] is equivalent to ___ in pointer arithmetic.",
    quesType: "fill",
    ans: "*(arr + i)"
  },
  {
    ques: "The sizeof operator can be used to find the ___ of an array.",
    quesType: "fill",
    ans: "total size in bytes"
  },
  {
    ques: "Dynamic arrays can be created using the ___ keyword.",
    quesType: "fill",
    ans: "new"
  },
  {
    ques: "To free dynamically allocated array memory, use the ___ operator.",
    quesType: "fill",
    ans: "delete[]"
  },
  {
    ques: "The standard template library class used for dynamic arrays is ___.",
    quesType: "fill",
    ans: "vector"
  },
  {
    ques: "The default value of uninitialized array elements is ___.",
    quesType: "fill",
    ans: "garbage"
  },
  {
    ques: "The length of a fixed-size array cannot be changed after ___.",
    quesType: "fill",
    ans: "declaration"
  },
  {
    ques: "The array name acts as a ___ to the first element.",
    quesType: "fill",
    ans: "pointer"
  },
  {
    ques: "To iterate over all elements of an array, we use a ___ loop.",
    quesType: "fill",
    ans: "for"
  },
  {
    ques: "Array elements can be accessed using the ___ operator.",
    quesType: "fill",
    ans: "[]"
  },
  {
    ques: "The valid range of index for int arr[10]; is from ___ to ___.",
    quesType: "fill",
    ans: "0 to 9"
  },
  {
    ques: "The array element type and the pointer type have the same ___.",
    quesType: "fill",
    ans: "data type"
  },
  {
    ques: "Multidimensional arrays can be declared by adding ___.",
    quesType: "fill",
    ans: "multiple brackets"
  },
  {
    ques: "In C++, the last element of arr[10] is at index ___.",
    quesType: "fill",
    ans: "9"
  }

]

let codingc3Arr=[
   {
    ques: "What is the output?<br><br>int x = 3;<br>std::cout << x++ + ++x;<br>",
    quesType: "mcq",
    op1: "8",
    op2: "7",
    op3: "Undefined behavior",
    op4: "9",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>int a = 5;<br>int b = a++ + ++a + a;<br>std::cout << b;<br>",
    quesType: "mcq",
    op1: "18",
    op2: "19",
    op3: "Undefined behavior",
    op4: "17",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>int arr[] = {1, 2, 3, 4};<br>std::cout << *arr + 1;<br>",
    quesType: "mcq",
    op1: "1",
    op2: "2",
    op3: "3",
    op4: "Compilation error",
    ans: "2"
  },
  {
    ques: "What is the output?<br><br>int i = 0;<br>std::cout << i+++i;<br>",
    quesType: "mcq",
    op1: "0",
    op2: "1",
    op3: "2",
    op4: "Undefined behavior",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>char c = 'A';<br>std::cout << c + 1;<br>",
    quesType: "mcq",
    op1: "B",
    op2: "66",
    op3: "65",
    op4: "Compilation error",
    ans: "66"
  },
  {
    ques: "What is the output?<br><br>int x = 10;<br>std::cout << (x > 10 ? 1 : x < 10 ? 2 : 3);<br>",
    quesType: "mcq",
    op1: "1",
    op2: "2",
    op3: "3",
    op4: "Compilation error",
    ans: "3"
  },
  {
    ques: "What is the output?<br><br>int x = 1;<br>if(x = 0) std::cout << \"True\";<br>else std::cout << \"False\";<br>",
    quesType: "mcq",
    op1: "True",
    op2: "False",
    op3: "Compilation error",
    op4: "Undefined behavior",
    ans: "False"
  },
  {
    ques: "What is the output?<br><br>int a = 5, b = 10;<br>std::cout << (a & b);<br>",
    quesType: "mcq",
    op1: "0",
    op2: "10",
    op3: "5",
    op4: "15",
    ans: "0"
  },
  {
    ques: "What is the output?<br><br>int a = 1;<br>std::cout << a << ++a << a++;<br>",
    quesType: "mcq",
    op1: "123",
    op2: "112",
    op3: "Undefined behavior",
    op4: "111",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>int x = 7;<br>std::cout << x / 2 * 2;<br>",
    quesType: "mcq",
    op1: "6",
    op2: "7",
    op3: "3",
    op4: "4",
    ans: "6"
  },
  {
    ques: "What is the output?<br><br>int a = 1;<br>int b = a << 2;<br>std::cout << b;<br>",
    quesType: "mcq",
    op1: "4",
    op2: "8",
    op3: "2",
    op4: "1",
    ans: "4"
  },
  {
    ques: "What is the output?<br><br>int a = 10;<br>std::cout << a % 3 % 2;<br>",
    quesType: "mcq",
    op1: "0",
    op2: "1",
    op3: "2",
    op4: "3",
    ans: "1"
  },
  {
    ques: "What is the output?<br><br>int a = 5;<br>int* p = &a;<br>std::cout << *p++;<br>",
    quesType: "mcq",
    op1: "5",
    op2: "Compilation error",
    op3: "Garbage value",
    op4: "Undefined behavior",
    ans: "5"
  },
  {
    ques: "What is the output?<br><br>bool x = true;<br>bool y = false;<br>std::cout << x + y;<br>",
    quesType: "mcq",
    op1: "1",
    op2: "0",
    op3: "truefalse",
    op4: "Compilation error",
    ans: "1"
  },
  {
    ques: "What is the output?<br><br>int a = 1;<br>int b = (a == 1) ? a++ : ++a;<br>std::cout << b;<br>",
    quesType: "mcq",
    op1: "1",
    op2: "2",
    op3: "3",
    op4: "Undefined behavior",
    ans: "1"
  },
  {
    ques: "What is the output?<br><br>int i = 0;<br>for(i = 0; i < 3; i++){}<br>std::cout << i;<br>",
    quesType: "mcq",
    op1: "0",
    op2: "2",
    op3: "3",
    op4: "Compilation error",
    ans: "3"
  },
  {
    ques: "What is the output?<br><br>int x = 5;<br>int y = ++x + x++ + ++x;<br>std::cout << y;<br>",
    quesType: "mcq",
    op1: "18",
    op2: "19",
    op3: "20",
    op4: "Undefined behavior",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>int* ptr = nullptr;<br>std::cout << ptr;<br>",
    quesType: "mcq",
    op1: "0",
    op2: "Address 0x0",
    op3: "Garbage value",
    op4: "Compilation error",
    ans: "0"
  },
  {
    ques: "What is the output?<br><br>std::cout << sizeof('A');<br>",
    quesType: "mcq",
    op1: "1",
    op2: "2",
    op3: "4",
    op4: "Depends on compiler",
    ans: "4"
  },
  {
    ques: "What is the output?<br><br>int a = 5;<br>std::cout << a / 0;<br>",
    quesType: "mcq",
    op1: "Runtime error",
    op2: "0",
    op3: "Undefined behavior",
    op4: "Compilation error",
    ans: "Undefined behavior"
  },

  // 20 fill in the blanks
  {
    ques: "What is the output?<br><br>int x = 2;<br>std::cout << x * x++;<br>",
    quesType: "fill",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>int a = 5;<br>int b = ++a + a++;<br>std::cout << b;<br>",
    quesType: "fill",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>int arr[] = {1, 2, 3};<br>std::cout << *(arr + 1);<br>",
    quesType: "fill",
    ans: "2"
  },
  {
    ques: "What is the output?<br><br>int i = 0;<br>std::cout << i+++i;<br>",
    quesType: "fill",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>char c = 'A';<br>std::cout << c + 2;<br>",
    quesType: "fill",
    ans: "67"
  },
  {
    ques: "What is the output?<br><br>int x = 7;<br>std::cout << x / 2 * 2;<br>",
    quesType: "fill",
    ans: "6"
  },
  {
    ques: "What is the output?<br><br>int a = 1;<br>std::cout << a << ++a << a++;<br>",
    quesType: "fill",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>bool x = true;<br>bool y = false;<br>std::cout << x + y;<br>",
    quesType: "fill",
    ans: "1"
  },
  {
    ques: "What is the output?<br><br>int a = 1;<br>int b = (a == 1) ? a++ : ++a;<br>std::cout << b;<br>",
    quesType: "fill",
    ans: "1"
  },
  {
    ques: "What is the output?<br><br>int i = 0;<br>for(i = 0; i < 3; i++){}<br>std::cout << i;<br>",
    quesType: "fill",
    ans: "3"
  },
  {
    ques: "What is the output?<br><br>int x = 10;<br>std::cout << x % 3 % 2;<br>",
    quesType: "fill",
    ans: "1"
  },
  {
    ques: "What is the output?<br><br>int* p = nullptr;<br>std::cout << p;<br>",
    quesType: "fill",
    ans: "0"
  },
  {
    ques: "What is the output?<br><br>int a = 5;<br>int* p = &a;<br>std::cout << *p++;<br>",
    quesType: "fill",
    ans: "5"
  },
  {
    ques: "What is the output?<br><br>int x = 5;<br>int y = ++x + x++ + ++x;<br>std::cout << y;<br>",
    quesType: "fill",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>int a = 10;<br>std::cout << sizeof('A');<br>",
    quesType: "fill",
    ans: "4"
  },
  {
    ques: "What is the output?<br><br>int a = 5;<br>int b = a << 2;<br>std::cout << b;<br>",
    quesType: "fill",
    ans: "20"
  },
  {
    ques: "What is the output?<br><br>int a = 5, b = 10;<br>std::cout << (a & b);<br>",
    quesType: "fill",
    ans: "0"
  },
  {
    ques: "What is the output?<br><br>int x = 5;<br>if(x = 0) std::cout << \"True\";<br>else std::cout << \"False\";<br>",
    quesType: "fill",
    ans: "False"
  },
  {
    ques: "What is the output?<br><br>int a = 1;<br>std::cout << a << a++ << ++a;<br>",
    quesType: "fill",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>int x = 5;<br>std::cout << x / 0;<br>",
    quesType: "fill",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>int* ptr = nullptr;<br>std::cout << *ptr;<br>",
    quesType: "fill",
    ans: "Segmentation fault"
  },
  {
    ques: "What is the output?<br><br>int a = 10;<br>int b = a++ * ++a;<br>std::cout << b;<br>",
    quesType: "mcq",
    op1: "110",
    op2: "121",
    op3: "Undefined behavior",
    op4: "100",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>int arr[3] = {1, 2, 3};<br>std::cout << *(&arr[0] + 2);<br>",
    quesType: "mcq",
    op1: "3",
    op2: "2",
    op3: "1",
    op4: "Compilation error",
    ans: "3"
  },
  {
    ques: "What is the output?<br><br>int x = 5;<br>std::cout << x-- - --x;<br>",
    quesType: "mcq",
    op1: "1",
    op2: "0",
    op3: "Undefined behavior",
    op4: "2",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>char c = 'A';<br>std::cout << (int)c + 5;<br>",
    quesType: "mcq",
    op1: "70",
    op2: "75",
    op3: "80",
    op4: "Compilation error",
    ans: "70"
  },
  {
    ques: "What is the output?<br><br>int x = 7;<br>std::cout << (x > 7 ? 1 : x < 7 ? 2 : 3);<br>",
    quesType: "mcq",
    op1: "1",
    op2: "2",
    op3: "3",
    op4: "Compilation error",
    ans: "3"
  },
  {
    ques: "What is the output?<br><br>int a = 0;<br>if(a = 5) std::cout << a;<br>else std::cout << 0;<br>",
    quesType: "mcq",
    op1: "0",
    op2: "5",
    op3: "Compilation error",
    op4: "Undefined behavior",
    ans: "5"
  },
  {
    ques: "What is the output?<br><br>int a = 5, b = 3;<br>std::cout << a & b;<br>",
    quesType: "mcq",
    op1: "1",
    op2: "0",
    op3: "5",
    op4: "3",
    ans: "1"
  },
  {
    ques: "What is the output?<br><br>int a = 5;<br>std::cout << a << a++ << ++a;<br>",
    quesType: "mcq",
    op1: "567",
    op2: "Undefined behavior",
    op3: "556",
    op4: "555",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>int i = 0;<br>for(i = 0; i < 5; i++){}<br>std::cout << i;<br>",
    quesType: "mcq",
    op1: "4",
    op2: "5",
    op3: "0",
    op4: "Compilation error",
    ans: "5"
  },
  {
    ques: "What is the output?<br><br>int a = 1;<br>int b = (a == 1) ? ++a : a++;<br>std::cout << b;<br>",
    quesType: "mcq",
    op1: "1",
    op2: "2",
    op3: "3",
    op4: "Undefined behavior",
    ans: "2"
  },
  {
    ques: "What is the output?<br><br>int x = 3;<br>int y = x << 2;<br>std::cout << y;<br>",
    quesType: "mcq",
    op1: "12",
    op2: "7",
    op3: "8",
    op4: "16",
    ans: "12"
  },
  {
    ques: "What is the output?<br><br>int a = 10;<br>std::cout << a % 4 % 2;<br>",
    quesType: "mcq",
    op1: "0",
    op2: "1",
    op3: "2",
    op4: "3",
    ans: "0"
  },
  {
    ques: "What is the output?<br><br>int* p = nullptr;<br>std::cout << (p == nullptr);<br>",
    quesType: "mcq",
    op1: "true",
    op2: "false",
    op3: "1",
    op4: "0",
    ans: "1"
  },
  {
    ques: "What is the output?<br><br>bool x = false;<br>bool y = false;<br>std::cout << x || y;<br>",
    quesType: "mcq",
    op1: "0",
    op2: "1",
    op3: "falsefalse",
    op4: "Compilation error",
    ans: "0"
  },
  {
    ques: "What is the output?<br><br>int a = 3;<br>int b = ++a + a++;<br>std::cout << b;<br>",
    quesType: "mcq",
    op1: "9",
    op2: "10",
    op3: "Undefined behavior",
    op4: "8",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>int i = 0;<br>while(i++ < 3){}<br>std::cout << i;<br>",
    quesType: "mcq",
    op1: "3",
    op2: "4",
    op3: "0",
    op4: "Undefined behavior",
    ans: "4"
  },
  {
    ques: "What is the output?<br><br>int a = 5;<br>std::cout << (a & ~a);<br>",
    quesType: "mcq",
    op1: "0",
    op2: "5",
    op3: "Undefined behavior",
    op4: "-5",
    ans: "0"
  },
  {
    ques: "What is the output?<br><br>int* p = nullptr;<br>std::cout << *p;<br>",
    quesType: "mcq",
    op1: "Segmentation fault",
    op2: "0",
    op3: "Garbage value",
    op4: "Compilation error",
    ans: "Segmentation fault"
  },
  {
    ques: "What is the output?<br><br>std::cout << sizeof('z');<br>",
    quesType: "mcq",
    op1: "4",
    op2: "1",
    op3: "2",
    op4: "Depends on compiler",
    ans: "4"
  },
  {
    ques: "What is the output?<br><br>int a = 1;<br>if(a = 0) std::cout << \"Yes\";<br>else std::cout << \"No\";<br>",
    quesType: "mcq",
    op1: "Yes",
    op2: "No",
    op3: "Compilation error",
    op4: "Undefined behavior",
    ans: "No"
  },

  // 20 fill in the blanks
  {
    ques: "What is the output?<br><br>int x = 5;<br>std::cout << x++ * ++x;<br>",
    quesType: "fill",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>int a = 3;<br>std::cout << ++a + a++;<br>",
    quesType: "fill",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>int arr[] = {10, 20, 30};<br>std::cout << *(arr + 2);<br>",
    quesType: "fill",
    ans: "30"
  },
  {
    ques: "What is the output?<br><br>int i = 0;<br>std::cout << i+++i;<br>",
    quesType: "fill",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>char c = 'Z';<br>std::cout << (int)c - 1;<br>",
    quesType: "fill",
    ans: "89"
  },
  {
    ques: "What is the output?<br><br>int x = 9;<br>std::cout << x / 2 * 2;<br>",
    quesType: "fill",
    ans: "8"
  },
  {
    ques: "What is the output?<br><br>bool x = true;<br>bool y = false;<br>std::cout << x && y;<br>",
    quesType: "fill",
    ans: "0"
  },
  {
    ques: "What is the output?<br><br>int a = 2;<br>int b = a << 3;<br>std::cout << b;<br>",
    quesType: "fill",
    ans: "16"
  },
  {
    ques: "What is the output?<br><br>int* p = nullptr;<br>std::cout << (p == nullptr);<br>",
    quesType: "fill",
    ans: "1"
  },
  {
    ques: "What is the output?<br><br>int i = 0;<br>for(i=0; i<4; i++){}<br>std::cout << i;<br>",
    quesType: "fill",
    ans: "4"
  },
  {
    ques: "What is the output?<br><br>int a = 5;<br>int b = a & 3;<br>std::cout << b;<br>",
    quesType: "fill",
    ans: "1"
  },
  {
    ques: "What is the output?<br><br>int a = 4;<br>int b = ~a;<br>std::cout << b;<br>",
    quesType: "fill",
    ans: "-5"
  },
  {
    ques: "What is the output?<br><br>int a = 0;<br>if(a = 1) std::cout << a;<br>else std::cout << 0;<br>",
    quesType: "fill",
    ans: "1"
  },
  {
    ques: "What is the output?<br><br>int x = 3;<br>int y = x++ + ++x;<br>std::cout << y;<br>",
    quesType: "fill",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>int* ptr = nullptr;<br>std::cout << *ptr;<br>",
    quesType: "fill",
    ans: "Segmentation fault"
  },
  {
    ques: "What is the output?<br><br>int a = 3;<br>std::cout << a % 2;<br>",
    quesType: "fill",
    ans: "1"
  },
  {
    ques: "What is the output?<br><br>int a = 5;<br>std::cout << a / 0;<br>",
    quesType: "fill",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>int i = 1;<br>while(i < 5) i++;<br>std::cout << i;<br>",
    quesType: "fill",
    ans: "5"
  },
  {
    ques: "What is the output?<br><br>int a = 1;<br>std::cout << a << ++a << a++;<br>",
    quesType: "fill",
    ans: "Undefined behavior"
  },
  {
    ques: "What is the output?<br><br>char c = 'a';<br>std::cout << (int)c;<br>",
    quesType: "fill",
    ans: "97"
  },
  {
    ques: "What is the output?<br><br>int a = 1;<br>if(a == 1) std::cout << \"One\";<br>else std::cout << \"Zero\";<br>",
    quesType: "fill",
    ans: "One"
  },
   {
    "ques": "In Java, which feature allows a subclass to provide a specific implementation of a method already defined in its superclass?<br>",
    "quesType": "mcq",
    "op1": "Encapsulation",
    "op2": "Abstraction",
    "op3": "Method Overriding",
    "op4": "Method Overloading",
    "ans": "Method Overriding"
  },
  {
    "ques": "What will be the output if a final method is attempted to be overridden in a subclass?<br>",
    "quesType": "mcq",
    "op1": "Compile-time error",
    "op2": "Runtime error",
    "op3": "Program runs successfully",
    "op4": "Method is hidden",
    "ans": "Compile-time error"
  },
  {
    "ques": "Which of the following best describes an abstract class in Java?<br>",
    "quesType": "mcq",
    "op1": "Can be instantiated",
    "op2": "Cannot have constructors",
    "op3": "Must have at least one abstract method",
    "op4": "Cannot be instantiated directly",
    "ans": "Cannot be instantiated directly"
  },
  {
    "ques": "What is the difference between method overloading and method overriding?<br>",
    "quesType": "mcq",
    "op1": "Overloading is runtime polymorphism, overriding is compile-time polymorphism",
    "op2": "Overloading is compile-time polymorphism, overriding is runtime polymorphism",
    "op3": "Both are runtime polymorphism",
    "op4": "Both are compile-time polymorphism",
    "ans": "Overloading is compile-time polymorphism, overriding is runtime polymorphism"
  },
  {
    "ques": "What keyword is used to prevent inheritance of a class in Java?<br>",
    "quesType": "mcq",
    "op1": "final",
    "op2": "static",
    "op3": "abstract",
    "op4": "private",
    "ans": "final"
  },
  {
    "ques": "Which of the following is true about interfaces in Java?<br>",
    "quesType": "mcq",
    "op1": "Interfaces can have method implementations",
    "op2": "Interfaces cannot extend other interfaces",
    "op3": "Interfaces support multiple inheritance",
    "op4": "Interfaces can have constructors",
    "ans": "Interfaces support multiple inheritance"
  },
  {
    "ques": "What happens if a class implements two interfaces that have the same method signature?<br>",
    "quesType": "mcq",
    "op1": "Class must override the method once",
    "op2": "Compiler throws an error",
    "op3": "Class must override the method twice",
    "op4": "Class inherits both implementations",
    "ans": "Class must override the method once"
  },
  {
    "ques": "Which OOP principle helps in hiding internal details and exposing only necessary features?<br>",
    "quesType": "mcq",
    "op1": "Inheritance",
    "op2": "Encapsulation",
    "op3": "Polymorphism",
    "op4": "Abstraction",
    "ans": "Encapsulation"
  },
  {
    "ques": "If a superclass reference points to a subclass object, which methods are called at runtime?<br>",
    "quesType": "mcq",
    "op1": "Superclass methods only",
    "op2": "Subclass overridden methods",
    "op3": "Both superclass and subclass methods",
    "op4": "Depends on compiler",
    "ans": "Subclass overridden methods"
  },
  {
    "ques": "What is the result of casting a superclass reference holding a subclass object back to the subclass type?<br>",
    "quesType": "mcq",
    "op1": "ClassCastException if incorrect type",
    "op2": "Compile-time error",
    "op3": "Always successful",
    "op4": "Runtime error",
    "ans": "ClassCastException if incorrect type"
  },
  {
    "ques": "In Java, the process of wrapping data and methods into a single unit is called ___.<br>",
    "quesType": "fill",
    "ans": "Encapsulation"
  },
  {
    "ques": "The ability of an object to take many forms is known as ___.<br>",
    "quesType": "fill",
    "ans": "Polymorphism"
  },
  {
    "ques": "A class that cannot be instantiated and may contain abstract methods is called an ___.<br>",
    "quesType": "fill",
    "ans": "Abstract class"
  },
  {
    "ques": "To implement multiple inheritance in Java, we use ___.<br>",
    "quesType": "fill",
    "ans": "Interfaces"
  },
  {
    "ques": "The keyword ___ is used to inherit the properties of a class.<br>",
    "quesType": "fill",
    "ans": "extends"
  },
  {
    "ques": "In method overriding, the method in the subclass must have the same ___ as in the superclass.<br>",
    "quesType": "fill",
    "ans": "signature"
  },
  {
    "ques": "The runtime determination of the method to call is called ___.<br>",
    "quesType": "fill",
    "ans": "Dynamic dispatch"
  },
  {
    "ques": "If a method is declared with the ___ keyword, it cannot be overridden.<br>",
    "quesType": "fill",
    "ans": "final"
  },
  {
    "ques": "An interface can have only ___ and ___ (since Java 8).<br>",
    "quesType": "fill",
    "ans": "abstract methods, default methods"
  },
  {
    "ques": "If a class implements an interface, it must provide implementations for all its ___ methods.<br>",
    "quesType": "fill",
    "ans": "abstract"
  },
  {
    "ques": "What is the index of the last element in a 2D array declared as int arr[5][10]?<br>",
    "quesType": "mcq",
    "op1": "arr[4][9]",
    "op2": "arr[5][10]",
    "op3": "arr[4][10]",
    "op4": "arr[5][9]",
    "ans": "arr[4][9]"
  },
  {
    "ques": "How is memory allocated for a 2D array in Java?<br>",
    "quesType": "mcq",
    "op1": "Contiguous block of memory",
    "op2": "Array of arrays (rows as separate arrays)",
    "op3": "Linked list",
    "op4": "Single dimensional array internally",
    "ans": "Array of arrays (rows as separate arrays)"
  },
  {
    "ques": "If int[][] matrix = new int[3][4]; what is matrix.length?<br>",
    "quesType": "mcq",
    "op1": "3",
    "op2": "4",
    "op3": "12",
    "op4": "Throws error",
    "ans": "3"
  },
  {
    "ques": "Which loop structure is the most efficient to traverse all elements of a 2D array?<br>",
    "quesType": "mcq",
    "op1": "Single loop",
    "op2": "Nested for loops",
    "op3": "While loop only",
    "op4": "Recursion only",
    "ans": "Nested for loops"
  },
  {
    "ques": "What is the output of the following code?<br>int[][] arr = {{1,2},{3,4},{5,6}};<br>System.out.println(arr[2][1]);<br>",
    "quesType": "mcq",
    "op1": "5",
    "op2": "6",
    "op3": "4",
    "op4": "IndexOutOfBoundsException",
    "ans": "6"
  },
  {
    "ques": "What will happen if you try to access arr[3][0] in int arr[3][4]?<br>",
    "quesType": "mcq",
    "op1": "Returns default value 0",
    "op2": "Compile-time error",
    "op3": "Runtime ArrayIndexOutOfBoundsException",
    "op4": "Returns garbage value",
    "ans": "Runtime ArrayIndexOutOfBoundsException"
  },
  {
    "ques": "Which of these correctly initializes a jagged 2D array in Java?<br>",
    "quesType": "mcq",
    "op1": "int[][] arr = new int[3][];<br>arr[0] = new int[2];<br>arr[1] = new int[3];<br>arr[2] = new int[1];",
    "op2": "int[][] arr = new int[3][3];",
    "op3": "int[][] arr = new int[2][2];",
    "op4": "int[][] arr = new int[3];",
    "ans": "int[][] arr = new int[3][];<br>arr[0] = new int[2];<br>arr[1] = new int[3];<br>arr[2] = new int[1];"
  },
  {
    "ques": "What is the result of this code snippet?<br>int[][] arr = new int[2][2];<br>arr[0] = null;<br>System.out.println(arr[0][0]);<br>",
    "quesType": "mcq",
    "op1": "Prints 0",
    "op2": "NullPointerException",
    "op3": "Compile-time error",
    "op4": "Prints null",
    "ans": "NullPointerException"
  },
  {
    "ques": "How to get the number of columns in a 2D array in Java?<br>",
    "quesType": "mcq",
    "op1": "arr.length",
    "op2": "arr[0].length",
    "op3": "arr.columns",
    "op4": "arr.rowCount",
    "ans": "arr[0].length"
  },
  {
    "ques": "In a 2D array int[][] arr = new int[5][5], what is the default value of arr[0][0]?<br>",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "A 2D array is essentially an array of ___ in Java.<br>",
    "quesType": "fill",
    "ans": "arrays"
  },
  {
    "ques": "In a jagged array, each row can have ___ number of columns.<br>",
    "quesType": "fill",
    "ans": "different"
  },
  {
    "ques": "Accessing an invalid index in a 2D array causes a ___ at runtime.<br>",
    "quesType": "fill",
    "ans": "ArrayIndexOutOfBoundsException"
  },
  {
    "ques": "In Java, you can declare a 2D array as int arr[][] or int[][] arr or int []arr[].<br>",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "The expression arr.length returns the number of ___ in the 2D array.<br>",
    "quesType": "fill",
    "ans": "rows"
  },
  {
    "ques": "You can partially initialize a 2D array by creating a ___ array and then assigning row arrays.<br>",
    "quesType": "fill",
    "ans": "jagged"
  },
  {
    "ques": "The memory layout of a 2D array in Java is ___ compared to C/C++.<br>",
    "quesType": "fill",
    "ans": "non-contiguous"
  },
  {
    "ques": "Each element in a 2D array is accessed by specifying the row and ___ index.<br>",
    "quesType": "fill",
    "ans": "column"
  },
  {
    "ques": "The expression arr[1] refers to the ___ array in the 2D array.<br>",
    "quesType": "fill",
    "ans": "second row"
  },
  {
    "ques": "If arr is a 2D array, arr[0] can be assigned ___ to change the first row.<br>",
    "quesType": "fill",
    "ans": "another array"
  },
  {
    "ques": "What happens if you assign arr[0] = new int[]{1,2,3}; when arr is declared as int[][] arr = new int[2][4];?<br>",
    "quesType": "mcq",
    "op1": "Compiles and runs fine, changes first row length to 3<br>",
    "op2": "Compilation error<br>",
    "op3": "Runtime ArrayIndexOutOfBoundsException<br>",
    "op4": "Runtime NullPointerException<br>",
    "ans": "Compiles and runs fine, changes first row length to 3<br>"
  },
  {
    "ques": "What is the output of this code?<br>int[][] arr = {{1,2},{3,4,5}};<br>System.out.println(arr[1].length);<br>",
    "quesType": "mcq",
    "op1": "2<br>",
    "op2": "3<br>",
    "op3": "5<br>",
    "op4": "Compilation error<br>",
    "ans": "3<br>"
  },
  {
    "ques": "In Java, which of the following is true about 2D arrays?<br>",
    "quesType": "mcq",
    "op1": "All rows must have the same number of columns<br>",
    "op2": "Rows can have different lengths<br>",
    "op3": "2D arrays can't be jagged<br>",
    "op4": "2D arrays are always stored contiguously<br>",
    "ans": "Rows can have different lengths<br>"
  },
  {
    "ques": "What exception is thrown if you try to access arr[2][5] where arr is int[3][5]?<br>",
    "quesType": "mcq",
    "op1": "ArrayIndexOutOfBoundsException<br>",
    "op2": "NullPointerException<br>",
    "op3": "Compile-time error<br>",
    "op4": "No exception<br>",
    "ans": "ArrayIndexOutOfBoundsException<br>"
  },
  {
    "ques": "What does arr[0][0] represent in a 2D array?<br>",
    "quesType": "mcq",
    "op1": "First element in the first row<br>",
    "op2": "Last element in the first row<br>",
    "op3": "First element in the last row<br>",
    "op4": "None of the above<br>",
    "ans": "First element in the first row<br>"
  },
  {
    "ques": "Which method is best to print a 2D array in Java?<br>",
    "quesType": "mcq",
    "op1": "Arrays.toString(arr)<br>",
    "op2": "Arrays.deepToString(arr)<br>",
    "op3": "arr.toString()<br>",
    "op4": "System.out.println(arr)<br>",
    "ans": "Arrays.deepToString(arr)<br>"
  },
  {
    "ques": "What is the output of:<br>int[][] arr = new int[2][];<br>arr[0] = new int[3];<br>System.out.println(arr[0][1]);<br>",
    "quesType": "mcq",
    "op1": "0<br>",
    "op2": "NullPointerException<br>",
    "op3": "Compilation error<br>",
    "op4": "Garbage value<br>",
    "ans": "0<br>"
  },
  {
    "ques": "How do you declare a 2D array named matrix with 4 rows and 5 columns in Java?<br>",
    "quesType": "mcq",
    "op1": "int matrix[4][5];<br>",
    "op2": "int[][] matrix = new int[4][5];<br>",
    "op3": "int matrix = new int[4][5];<br>",
    "op4": "int matrix[][] = new int[5][4];<br>",
    "ans": "int[][] matrix = new int[4][5];<br>"
  },
  {
    "ques": "Which of the following is invalid for a 2D array declaration?<br>",
    "quesType": "mcq",
    "op1": "int[][] arr;<br>",
    "op2": "int arr[][];<br>",
    "op3": "int[][] arr = new int[3][];<br>",
    "op4": "int[][] arr = new int[][3];<br>",
    "ans": "int[][] arr = new int[][3];<br>"
  },
  {
    "ques": "The default value of elements in a newly created int 2D array is ___.<br>",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "In a jagged 2D array, different rows may have ___ numbers of columns.<br>",
    "quesType": "fill",
    "ans": "different"
  },
  {
    "ques": "Accessing a null row in a 2D array causes a ___ at runtime.<br>",
    "quesType": "fill",
    "ans": "NullPointerException"
  },
  {
    "ques": "The length of the outer array in int[][] arr = new int[4][5]; is ___.<br>",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "The length of the inner arrays (columns) in int[][] arr = new int[4][5]; is ___.<br>",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "You can assign one row of a 2D array to another row variable because each row is a ___ array.<br>",
    "quesType": "fill",
    "ans": "1D"
  },
  {
    "ques": "The rows of a 2D array can be of ___ length if declared jagged.<br>",
    "quesType": "fill",
    "ans": "variable"
  },
  {
    "ques": "To iterate over all elements of a 2D array, nested ___ loops are typically used.<br>",
    "quesType": "fill",
    "ans": "for"
  },
  {
    "ques": "You can dynamically allocate rows of a 2D array by first creating the outer array and then ___ arrays for each row.<br>",
    "quesType": "fill",
    "ans": "allocating"
  },
  {
    "ques": "The expression arr[1] in a 2D array returns the entire ___ at index 1.<br>",
    "quesType": "fill",
    "ans": "row"
  },
  {
    "ques": "When printing a 2D array, the method Arrays.deepToString() prints ___ arrays recursively.<br>",
    "quesType": "fill",
    "ans": "nested"
  },
   {
    "ques": "What is the output of this recursive function?<br>int fun(int n) {<br> if(n == 0) return 0;<br> return n + fun(n-1);<br>}<br>System.out.println(fun(3));<br>",
    "quesType": "mcq",
    "op1": "6<br>",
    "op2": "3<br>",
    "op3": "0<br>",
    "op4": "Compilation error<br>",
    "ans": "6<br>"
  },
  {
    "ques": "What happens if the base case is missing in a recursive function?<br>",
    "quesType": "mcq",
    "op1": "Function terminates normally<br>",
    "op2": "Stack Overflow error<br>",
    "op3": "Returns zero<br>",
    "op4": "Compilation error<br>",
    "ans": "Stack Overflow error<br>"
  },
  {
    "ques": "Consider the following code:<br>int factorial(int n) {<br> if(n <= 1) return 1;<br> else return n * factorial(n - 1);<br>}<br>What is factorial(4)?<br>",
    "quesType": "mcq",
    "op1": "10<br>",
    "op2": "24<br>",
    "op3": "16<br>",
    "op4": "0<br>",
    "ans": "24<br>"
  },
  {
    "ques": "What is the output of:<br>void print(int n) {<br> if(n == 0) return;<br> print(n-1);<br> System.out.print(n + \" \");<br>}<br>print(3);<br>",
    "quesType": "mcq",
    "op1": "3 2 1<br>",
    "op2": "1 2 3<br>",
    "op3": "3 2 1 0<br>",
    "op4": "0 1 2 3<br>",
    "ans": "1 2 3<br>"
  },
  {
    "ques": "Which of these is NOT a valid recursive case?<br>",
    "quesType": "mcq",
    "op1": "Call to the same function with a smaller problem<br>",
    "op2": "Base case to stop recursion<br>",
    "op3": "Call to a different function<br>",
    "op4": "Infinite recursion<br>",
    "ans": "Infinite recursion<br>"
  },
  {
    "ques": "What will be printed by this function?<br>void printDesc(int n) {<br> if(n <= 0) return;<br> System.out.print(n + \" \");<br> printDesc(n-1);<br>}<br>printDesc(3);<br>",
    "quesType": "mcq",
    "op1": "1 2 3<br>",
    "op2": "3 2 1<br>",
    "op3": "0 1 2 3<br>",
    "op4": "3 2 1 0<br>",
    "ans": "3 2 1<br>"
  },
  {
    "ques": "Which recursive algorithm divides the problem size by half at each call?<br>",
    "quesType": "mcq",
    "op1": "Binary search<br>",
    "op2": "Factorial<br>",
    "op3": "Fibonacci<br>",
    "op4": "Tower of Hanoi<br>",
    "ans": "Binary search<br>"
  },
  {
    "ques": "How many times is the function called when computing fib(5) with naive recursion?<br>",
    "quesType": "mcq",
    "op1": "5<br>",
    "op2": "7<br>",
    "op3": "15<br>",
    "op4": "10<br>",
    "ans": "15<br>"
  },
  {
    "ques": "What is the output of:<br>int sum(int n) {<br> if(n == 1) return 1;<br> return n + sum(n-1);<br>}<br>System.out.println(sum(4));<br>",
    "quesType": "mcq",
    "op1": "10<br>",
    "op2": "9<br>",
    "op3": "4<br>",
    "op4": "16<br>",
    "ans": "10<br>"
  },
  {
    "ques": "The base case in recursion is important to ___ the recursive calls.<br>",
    "quesType": "fill",
    "ans": "stop"
  },
  {
    "ques": "Recursive functions use the ___ memory area for storing call information.<br>",
    "quesType": "fill",
    "ans": "stack"
  },
  {
    "ques": "If a function calls itself directly or indirectly, it is called ___.<br>",
    "quesType": "fill",
    "ans": "recursion"
  },
  {
    "ques": "In recursion, each function call has its own ___ of local variables.<br>",
    "quesType": "fill",
    "ans": "copy"
  },
  {
    "ques": "The process where the function calls itself at the end (tail position) is called ___ recursion.<br>",
    "quesType": "fill",
    "ans": "tail"
  },
  {
    "ques": "Recursion is often replaced by ___ to improve efficiency.<br>",
    "quesType": "fill",
    "ans": "iteration"
  },
  {
    "ques": "In the Fibonacci series, fib(0) is usually defined as ___.<br>",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "Stack Overflow error occurs due to ___ recursive calls.<br>",
    "quesType": "fill",
    "ans": "infinite"
  },
  {
    "ques": "Recursion depth is the maximum number of ___ active at once.<br>",
    "quesType": "fill",
    "ans": "calls"
  },
  {
    "ques": "Recursion with two or more recursive calls is called ___ recursion.<br>",
    "quesType": "fill",
    "ans": "tree"
  },
  {
    "ques": "A recursive function must have a ___ case to prevent infinite recursion.<br>",
    "quesType": "fill",
    "ans": "base"
  },
  {
    "ques": "What will be the output of this recursive function?<br>int mystery(int n) {<br> if(n <= 1) return 1;<br> return n * mystery(n - 1);<br>}<br>System.out.println(mystery(4));<br>",
    "quesType": "mcq",
    "op1": "10<br>",
    "op2": "24<br>",
    "op3": "16<br>",
    "op4": "8<br>",
    "ans": "24<br>"
  },
  {
    "ques": "What does this recursive function compute?<br>int func(int n) {<br> if(n == 0) return 0;<br> return n + func(n - 2);<br>}<br>",
    "quesType": "mcq",
    "op1": "Sum of all integers from n to 0<br>",
    "op2": "Sum of all even numbers up to n<br>",
    "op3": "Sum of odd numbers up to n<br>",
    "op4": "Factorial of n<br>",
    "ans": "Sum of all integers from n to 0<br>"
  },
  {
    "ques": "What is the output of:<br>void fun(int n) {<br> if(n == 0) return;<br> fun(n - 1);<br> fun(n - 1);<br> System.out.print(n + \" \");<br>}<br>fun(2);<br>",
    "quesType": "mcq",
    "op1": "1 1 2<br>",
    "op2": "1 2<br>",
    "op3": "1 1 1 2<br>",
    "op4": "2<br>",
    "ans": "1 1 2<br>"
  },
  {
    "ques": "Which of the following describes the time complexity of the naive Fibonacci recursion?<br>",
    "quesType": "mcq",
    "op1": "O(n)<br>",
    "op2": "O(n log n)<br>",
    "op3": "O(2^n)<br>",
    "op4": "O(n^2)<br>",
    "ans": "O(2^n)<br>"
  },
  {
    "ques": "Which is true about tail recursion?<br>",
    "quesType": "mcq",
    "op1": "Last statement is recursive call<br>",
    "op2": "Can be optimized to iteration<br>",
    "op3": "Uses less stack memory<br>",
    "op4": "All of the above<br>",
    "ans": "All of the above<br>"
  },
  {
    "ques": "What is the output of:<br>int count = 0;<br>void f(int n) {<br> if(n == 0) return;<br> count++;<br> f(n - 1);<br> f(n - 1);<br>}<br>f(3);<br>System.out.println(count);<br>",
    "quesType": "mcq",
    "op1": "3<br>",
    "op2": "7<br>",
    "op3": "15<br>",
    "op4": "8<br>",
    "ans": "7<br>"
  },
  {
    "ques": "What is the output of:<br>int fun(int n) {<br> if(n <= 1) return 1;<br> return fun(n-1) + fun(n-2);<br>}<br>System.out.println(fun(5));<br>",
    "quesType": "mcq",
    "op1": "5<br>",
    "op2": "8<br>",
    "op3": "13<br>",
    "op4": "3<br>",
    "ans": "8<br>"
  },
  {
    "ques": "If a recursive function does not have a base case, what will happen?<br>",
    "quesType": "mcq",
    "op1": "Program crashes<br>",
    "op2": "Stack overflow error<br>",
    "op3": "Returns zero<br>",
    "op4": "Returns null<br>",
    "ans": "Stack overflow error<br>"
  },
  {
    "ques": "Which statement is true about recursive function calls?<br>",
    "quesType": "mcq",
    "op1": "Each call has its own local variables<br>",
    "op2": "All calls share the same local variables<br>",
    "op3": "Recursive calls do not use the stack<br>",
    "op4": "Local variables are static<br>",
    "ans": "Each call has its own local variables<br>"
  },
  {
    "ques": "What is the output of:<br>int fun(int n) {<br> if(n == 0) return 0;<br> return n + fun(n-2);<br>}<br>System.out.println(fun(5));<br>",
    "quesType": "mcq",
    "op1": "9<br>",
    "op2": "15<br>",
    "op3": "5<br>",
    "op4": "0<br>",
    "ans": "9<br>"
  },
  {
    "ques": "The base case prevents ___ in recursion.<br>",
    "quesType": "fill",
    "ans": "infinite recursion"
  },
  {
    "ques": "In recursion, the ___ stores return addresses and local variables.<br>",
    "quesType": "fill",
    "ans": "call stack"
  },
  {
    "ques": "___ recursion makes multiple recursive calls from a single function call.<br>",
    "quesType": "fill",
    "ans": "tree"
  },
  {
    "ques": "A recursive function that calls itself once per execution is called ___ recursion.<br>",
    "quesType": "fill",
    "ans": "linear"
  },
  {
    "ques": "Recursive solutions can be converted to ___ to optimize memory usage.<br>",
    "quesType": "fill",
    "ans": "iteration"
  },
  {
    "ques": "The process of breaking problems into subproblems in recursion is called ___.<br>",
    "quesType": "fill",
    "ans": "divide and conquer"
  },
  {
    "ques": "Recursive algorithms require more ___ than iterative algorithms.<br>",
    "quesType": "fill",
    "ans": "memory"
  },
  {
    "ques": "Tail recursion can be optimized by the compiler into ___ calls.<br>",
    "quesType": "fill",
    "ans": "jump"
  },
  {
    "ques": "The maximum depth of recursive calls is called recursion ___.<br>",
    "quesType": "fill",
    "ans": "depth"
  },
  {
    "ques": "Memoization is a technique used to optimize ___ recursive algorithms.<br>",
    "quesType": "fill",
    "ans": "overlapping subproblems"
  },
   {
    "ques": "What will be the output of this code?<br>int x = 10;<br>int *p = &x;<br>*p += 5;<br>cout << x;<br>",
    "quesType": "mcq",
    "op1": "10<br>",
    "op2": "5<br>",
    "op3": "15<br>",
    "op4": "Compilation error<br>",
    "ans": "15<br>"
  },
  {
    "ques": "Which of the following correctly defines a pure virtual function?<br>",
    "quesType": "mcq",
    "op1": "virtual void func() = 0;<br>",
    "op2": "void func() = 0;<br>",
    "op3": "virtual void func();<br>",
    "op4": "void virtual func() = 0;<br>",
    "ans": "virtual void func() = 0;<br>"
  },
  {
    "ques": "What will be the output of:<br>class A { public: A() { cout << \"A\"; } };<br>class B : public A { public: B() { cout << \"B\"; } };<br>int main() { B obj; }<br>",
    "quesType": "mcq",
    "op1": "AB<br>",
    "op2": "BA<br>",
    "op3": "B<br>",
    "op4": "A<br>",
    "ans": "AB<br>"
  },
  {
    "ques": "What is the output of:<br>int fun(int n) { if(n <= 1) return 1; return n * fun(n-1); }<br>cout << fun(4);<br>",
    "quesType": "mcq",
    "op1": "24<br>",
    "op2": "10<br>",
    "op3": "16<br>",
    "op4": "8<br>",
    "ans": "24<br>"
  },
  {
    "ques": "What does the 'mutable' keyword allow in C++?<br>",
    "quesType": "mcq",
    "op1": "Changing const member variables<br>",
    "op2": "Modifying private members<br>",
    "op3": "Allow modification of variables inside const functions<br>",
    "op4": "Prevent modification of variables<br>",
    "ans": "Allow modification of variables inside const functions<br>"
  },
  {
    "ques": "What will be the output of:<br>int arr[] = {1, 2, 3, 4};<br>cout << *(arr + 2);<br>",
    "quesType": "mcq",
    "op1": "1<br>",
    "op2": "2<br>",
    "op3": "3<br>",
    "op4": "4<br>",
    "ans": "3<br>"
  },
  {
    "ques": "Fill in the blank:<br>The process of hiding internal data and only exposing necessary parts is called ___.<br>",
    "quesType": "fill",
    "ans": "encapsulation"
  },
  {
    "ques": "Fill in the blank:<br>___ allows functions or operators to have different implementations based on their arguments.<br>",
    "quesType": "fill",
    "ans": "polymorphism"
  },
  {
    "ques": "Fill in the blank:<br>A ___ constructor is called when a new object is created as a copy of an existing object.<br>",
    "quesType": "fill",
    "ans": "copy"
  },
  {
    "ques": "Fill in the blank:<br>Dynamic memory allocation in C++ uses the ___ and ___ operators.<br>",
    "quesType": "fill",
    "ans": "new and delete"
  },
  {
    "ques": "What will be output by this code?<br>int x = 5;<br>int &ref = x;<br>ref = 10;<br>cout << x;<br>",
    "quesType": "mcq",
    "op1": "5<br>",
    "op2": "10<br>",
    "op3": "Compilation error<br>",
    "op4": "Undefined behavior<br>",
    "ans": "10<br>"
  },
  {
    "ques": "What is the result of the following code?<br>int x = 1;<br>int* p = &x;<br>p++;<br>cout << *p;<br>",
    "quesType": "mcq",
    "op1": "1<br>",
    "op2": "Garbage value or runtime error<br>",
    "op3": "Compilation error<br>",
    "op4": "0<br>",
    "ans": "Garbage value or runtime error<br>"
  },
  {
    "ques": "What keyword is used to define a template in C++?<br>",
    "quesType": "mcq",
    "op1": "template<br>",
    "op2": "generic<br>",
    "op3": "typename<br>",
    "op4": "type<br>",
    "ans": "template<br>"
  },
  {
    "ques": "What will happen if virtual destructor is not used in base class?<br>",
    "quesType": "mcq",
    "op1": "Derived class destructor will not be called<br>",
    "op2": "Program will not compile<br>",
    "op3": "No effect<br>",
    "op4": "Base class destructor will not be called<br>",
    "ans": "Derived class destructor will not be called<br>"
  },
  {
    "ques": "What is the output of:<br>void f(int n) {<br> if(n == 0) return;<br> f(n-1);<br> cout << n << \" \";<br>}<br>f(3);<br>",
    "quesType": "mcq",
    "op1": "1 2 3<br>",
    "op2": "3 2 1<br>",
    "op3": "0 1 2<br>",
    "op4": "Compilation error<br>",
    "ans": "1 2 3<br>"
  },
  {
    "ques": "What is the size of a pointer variable on a 64-bit system?<br>",
    "quesType": "mcq",
    "op1": "4 bytes<br>",
    "op2": "8 bytes<br>",
    "op3": "Depends on data type<br>",
    "op4": "2 bytes<br>",
    "ans": "8 bytes<br>"
  },
  {
    "ques": "Which STL container allows fast insertion and deletion from both ends?<br>",
    "quesType": "mcq",
    "op1": "vector<br>",
    "op2": "list<br>",
    "op3": "deque<br>",
    "op4": "map<br>",
    "ans": "deque<br>"
  },
  {
    "ques": "Which of the following statements about references in C++ is false?<br>",
    "quesType": "mcq",
    "op1": "References must be initialized when declared<br>",
    "op2": "References can be reseated to refer to another object<br>",
    "op3": "References provide alias for variables<br>",
    "op4": "References cannot be null<br>",
    "ans": "References can be reseated to refer to another object<br>"
  },
  {
    "ques": "Fill in the blank:<br>A function defined inside a class is called ___.<br>",
    "quesType": "fill",
    "ans": "member function"
  },
  {
    "ques": "Fill in the blank:<br>The operator used to access members of a class through a pointer is ___.<br>",
    "quesType": "fill",
    "ans": "->"
  },
  {
    "ques": "Fill in the blank:<br>___ are functions with the same name but different parameters.<br>",
    "quesType": "fill",
    "ans": "function overloads"
  },
  {
    "ques": "Fill in the blank:<br>The special function called when an object goes out of scope is called the ___.<br>",
    "quesType": "fill",
    "ans": "destructor"
  },
  {
    "ques": "What is the output of:<br>int a = 5;<br>int b = 10;<br>swap(a, b);<br>cout << a << \" \" << b;<br>void swap(int &x, int &y) { int temp = x; x = y; y = temp; }<br>",
    "quesType": "mcq",
    "op1": "5 10<br>",
    "op2": "10 5<br>",
    "op3": "Compilation error<br>",
    "op4": "Undefined behavior<br>",
    "ans": "10 5<br>"
  },
  {
    "ques": "What does the following code snippet output?<br>const int x = 10;<br>int *p = (int*)&x;<br>*p = 20;<br>cout << x;<br>",
    "quesType": "mcq",
    "op1": "10<br>",
    "op2": "20<br>",
    "op3": "Compiler error<br>",
    "op4": "Undefined behavior<br>",
    "ans": "10<br>"
  },
  {
    "ques": "Fill in the blank:<br>___ inheritance means a derived class inherits from multiple base classes.<br>",
    "quesType": "fill",
    "ans": "multiple"
  },
  {
    "ques": "Fill in the blank:<br>A ___ function can access private and protected members of a class.<br>",
    "quesType": "fill",
    "ans": "friend"
  },
  {
    "ques": "Fill in the blank:<br>___ exception handling is done using try, catch, and throw keywords.<br>",
    "quesType": "fill",
    "ans": "standard"
  },
  {
    "ques": "What happens when 'delete' is called on a pointer that is nullptr?<br>",
    "quesType": "mcq",
    "op1": "Program crashes<br>",
    "op2": "Undefined behavior<br>",
    "op3": "Safe, nothing happens<br>",
    "op4": "Deletes some random memory<br>",
    "ans": "Safe, nothing happens<br>"
  },
  {
    "ques": "What is the output of:<br>int x = 5;<br>int &y = x;<br>y = 10;<br>cout << x;<br>",
    "quesType": "mcq",
    "op1": "5<br>",
    "op2": "10<br>",
    "op3": "Compilation error<br>",
    "op4": "Garbage value<br>",
    "ans": "10<br>"
  },
  {
    "ques": "Fill in the blank:<br>Default arguments in functions are specified in the ___.<br>",
    "quesType": "fill",
    "ans": "function declaration"
  },
  {
    "ques": "Fill in the blank:<br>A ___ is a blueprint for creating objects.<br>",
    "quesType": "fill",
    "ans": "class"
  },
  {
    "ques": "What will be the output?<br>int a[] = {1, 2, 3, 4};<br>cout << sizeof(a) / sizeof(a[0]);<br>",
    "quesType": "mcq",
    "op1": "4<br>",
    "op2": "16<br>",
    "op3": "Depends on compiler<br>",
    "op4": "Compilation error<br>",
    "ans": "4<br>"
  },
  {
    "ques": "What does the following code print?<br>int x = 5;<br>int *p = &x;<br>cout << sizeof(p);<br>",
    "quesType": "mcq",
    "op1": "4<br>",
    "op2": "8<br>",
    "op3": "Depends on system<br>",
    "op4": "Compilation error<br>",
    "ans": "Depends on system<br>"
  },
  {
    "ques": "What will be the output of this code?<br>int i = 0;<br>while(i < 5) { cout << i << \" \"; i++; }<br>",
    "quesType": "mcq",
    "op1": "0 1 2 3 4<br>",
    "op2": "1 2 3 4 5<br>",
    "op3": "0 1 2 3 4 5<br>",
    "op4": "Compilation error<br>",
    "ans": "0 1 2 3 4<br>"
  },
  {
    "ques": "Fill in the blank:<br>___ operator is used to allocate memory dynamically.<br>",
    "quesType": "fill",
    "ans": "new"
  },
  {
    "ques": "What is the output of:<br>int factorial(int n) {<br> if(n <= 1) return 1;<br> return n * factorial(n - 1);<br>}<br>cout << factorial(3);<br>",
    "quesType": "mcq",
    "op1": "3<br>",
    "op2": "6<br>",
    "op3": "9<br>",
    "op4": "Error<br>",
    "ans": "6<br>"
  },
  {
    "ques": "What will be the output?<br>class Base { public: virtual void show() { cout << \"Base\"; } };<br>class Derived : public Base { public: void show() override { cout << \"Derived\"; } };<br>Base* b = new Derived();<br>b->show();<br>",
    "quesType": "mcq",
    "op1": "Base<br>",
    "op2": "Derived<br>",
    "op3": "Compilation error<br>",
    "op4": "Runtime error<br>",
    "ans": "Derived<br>"
  },
  {
    "ques": "What is the output?<br>int x = 5;<br>int* ptr = &x;<br>int** pptr = &ptr;<br>cout << **pptr;<br>",
    "quesType": "mcq",
    "op1": "5<br>",
    "op2": "Address of x<br>",
    "op3": "Compilation error<br>",
    "op4": "Undefined behavior<br>",
    "ans": "5<br>"
  },
  {
    "ques": "What happens if you try to delete a pointer twice?<br>",
    "quesType": "mcq",
    "op1": "Safe, nothing happens<br>",
    "op2": "Compiler error<br>",
    "op3": "Undefined behavior, possible crash<br>",
    "op4": "Memory leak<br>",
    "ans": "Undefined behavior, possible crash<br>"
  },
  {
    "ques": "What is the output of this code?<br>int a = 10;<br>int b = 20;<br>a = b++ + ++a;<br>cout << a << \" \" << b;<br>",
    "quesType": "mcq",
    "op1": "31 21<br>",
    "op2": "30 21<br>",
    "op3": "30 20<br>",
    "op4": "31 20<br>",
    "ans": "31 21<br>"
  },
  {
    "ques": "Which of the following is NOT a feature of C++?<br>",
    "quesType": "mcq",
    "op1": "Encapsulation<br>",
    "op2": "Inheritance<br>",
    "op3": "Reflection<br>",
    "op4": "Polymorphism<br>",
    "ans": "Reflection<br>"
  },
  {
    "ques": "What is the size of an empty class in C++?<br>",
    "quesType": "mcq",
    "op1": "0 bytes<br>",
    "op2": "1 byte<br>",
    "op3": "Depends on compiler<br>",
    "op4": "4 bytes<br>",
    "ans": "1 byte<br>"
  },
  {
    "ques": "What is the output?<br>int main() {<br> int x = 5;<br> int &r = x;<br> int &&rr = std::move(r);<br> cout << rr;<br> return 0;<br>}<br>",
    "quesType": "mcq",
    "op1": "5<br>",
    "op2": "Compiler error<br>",
    "op3": "Undefined behavior<br>",
    "op4": "Garbage value<br>",
    "ans": "5<br>"
  },
  {
    "ques": "Which of the following is NOT a valid way to allocate memory dynamically?<br>",
    "quesType": "mcq",
    "op1": "int* p = new int[10];<br>",
    "op2": "int* p = (int*) malloc(10 * sizeof(int));<br>",
    "op3": "int* p = new int;<br>",
    "op4": "int p[10];<br>",
    "ans": "int p[10];<br>"
  },
  {
    "ques": "Fill in the blank:<br>In C++, the ___ keyword prevents a class from being inherited.<br>",
    "quesType": "fill",
    "ans": "final"
  },
  {
    "ques": "Fill in the blank:<br>A ___ class has no objects and is used only as a base class.<br>",
    "quesType": "fill",
    "ans": "abstract"
  },
  {
    "ques": "Fill in the blank:<br>The C++11 feature that allows initialization of variables in constructors more conveniently is called ___.<br>",
    "quesType": "fill",
    "ans": "initializer list"
  },
  {
    "ques": "Fill in the blank:<br>RAII stands for ___.<br>",
    "quesType": "fill",
    "ans": "Resource Acquisition Is Initialization"
  },
  {
    "ques": "What will be the output?<br>int arr[] = {1, 2, 3, 4};<br>int* p = arr;<br>cout << *(p + 3);<br>",
    "quesType": "mcq",
    "op1": "1<br>",
    "op2": "2<br>",
    "op3": "3<br>",
    "op4": "4<br>",
    "ans": "4<br>"
  },
  {
    "ques": "What does the keyword 'constexpr' indicate?<br>",
    "quesType": "mcq",
    "op1": "A function or variable that can be evaluated at compile time<br>",
    "op2": "A constant pointer<br>",
    "op3": "A constant expression evaluated at runtime<br>",
    "op4": "An external variable<br>",
    "ans": "A function or variable that can be evaluated at compile time<br>"
  },
  {
    "ques": "What happens if you override a virtual function without the 'override' keyword?<br>",
    "quesType": "mcq",
    "op1": "Compiler error<br>",
    "op2": "Function is not virtual anymore<br>",
    "op3": "No error, but may cause bugs if function signature mismatches<br>",
    "op4": "Undefined behavior<br>",
    "ans": "No error, but may cause bugs if function signature mismatches<br>"
  },
  {
    "ques": "What will be the output?<br>int x = 10;<br>int y = 20;<br>int& r = x;<br>r = y;<br>cout << x << \" \" << y;<br>",
    "quesType": "mcq",
    "op1": "20 20<br>",
    "op2": "10 20<br>",
    "op3": "20 10<br>",
    "op4": "Compilation error<br>",
    "ans": "20 20<br>"
  },
  {
    "ques": "Which of the following is used to specify an exception specification?<br>",
    "quesType": "mcq",
    "op1": "try<br>",
    "op2": "catch<br>",
    "op3": "throw<br>",
    "op4": "noexcept<br>",
    "ans": "noexcept<br>"
  },
  {
    "ques": "What is the output?<br>int fun(int x = 5, int y = 10) { return x + y; }<br>cout << fun(3);<br>",
    "quesType": "mcq",
    "op1": "8<br>",
    "op2": "15<br>",
    "op3": "Compilation error<br>",
    "op4": "13<br>",
    "ans": "13<br>"
  },
  {
    "ques": "Fill in the blank:<br>The process of defining multiple functions with the same name but different parameters is called ___.<br>",
    "quesType": "fill",
    "ans": "function overloading"
  },
  {
    "ques": "Fill in the blank:<br>The ___ operator is used to access members of a class through an object.<br>",
    "quesType": "fill",
    "ans": "."
  },
  {
    "ques": "Fill in the blank:<br>___ is the process by which a call to a member function causes a different function to be executed depending on the type of the object.<br>",
    "quesType": "fill",
    "ans": "polymorphism"
  },
  {
    "ques": "Fill in the blank:<br>A ___ pointer can point to objects of different classes related by inheritance.<br>",
    "quesType": "fill",
    "ans": "base class"
  },
  {
    "ques": "Fill in the blank:<br>The operator used to allocate memory for arrays dynamically is ___.<br>",
    "quesType": "fill",
    "ans": "new[]"
  },
  {
    "ques": "What is the output?<br>char str[] = \"Hello\";<br>char* p = str;<br>cout << *(p + 1);<br>",
    "quesType": "mcq",
    "op1": "H<br>",
    "op2": "e<br>",
    "op3": "l<br>",
    "op4": "o<br>",
    "ans": "e<br>"
  },
  {
    "ques": "What is the output of:<br>int a = 1;<br>int b = 2;<br>a = a ^ b;<br>b = a ^ b;<br>a = a ^ b;<br>cout << a << \" \" << b;<br>",
    "quesType": "mcq",
    "op1": "1 2<br>",
    "op2": "2 1<br>",
    "op3": "0 0<br>",
    "op4": "Undefined behavior<br>",
    "ans": "2 1<br>"
  },
  {
    "ques": "What happens when you declare a destructor as virtual?<br>",
    "quesType": "mcq",
    "op1": "Ensures derived class destructor is called when deleting via base pointer<br>",
    "op2": "Destructor cannot be called explicitly<br>",
    "op3": "Destructor is called twice<br>",
    "op4": "No effect<br>",
    "ans": "Ensures derived class destructor is called when deleting via base pointer<br>"
  },
  {
    "ques": "Fill in the blank:<br>___ is used to transfer ownership of resources in C++11.<br>",
    "quesType": "fill",
    "ans": "move semantics"
  },
  {
    "ques": "Fill in the blank:<br>___ allows a function to accept any number of arguments.<br>",
    "quesType": "fill",
    "ans": "variadic templates"
  },
  {
    "ques": "Fill in the blank:<br>A ___ is an object that manages lifetime of a dynamically allocated object.<br>",
    "quesType": "fill",
    "ans": "smart pointer"
  },
  {
    "ques": "What will be the output?<br>int a = 0;<br>for(int i=0; i < 3; i++) {<br> a += i;<br>}<br>cout << a;<br>",
    "quesType": "mcq",
    "op1": "3<br>",
    "op2": "6<br>",
    "op3": "0<br>",
    "op4": "Compilation error<br>",
    "ans": "3<br>"
  },
  {
    "ques": "What is the output?<br>int x = 10;<br>int* p = &x;<br>p = p + 1;<br>cout << *p;<br>",
    "quesType": "mcq",
    "op1": "10<br>",
    "op2": "Garbage value<br>",
    "op3": "Compilation error<br>",
    "op4": "Undefined behavior<br>",
    "ans": "Garbage value<br>"
  },
  {
    "ques": "Fill in the blank:<br>The keyword ___ is used to declare a function template.<br>",
    "quesType": "fill",
    "ans": "template"
  },
  {
    "ques": "Fill in the blank:<br>___ function is automatically called when an object is created.<br>",
    "quesType": "fill",
    "ans": "constructor"
  },
  {
    "ques": "Fill in the blank:<br>In C++, the ___ keyword is used to declare a constant variable.<br>",
    "quesType": "fill",
    "ans": "const"
  },
  {
    "ques": "Fill in the blank:<br>___ is a type of function that cannot be inherited.<br>",
    "quesType": "fill",
    "ans": "final function"
  }

]

let cIncorrectAnswers=[];

let cTimerId="";
let cSkip =document.getElementById("cSkip");
let codingcQues=document.getElementById("codingcQues");
let mcqc =document.getElementById("mcqc");
let cQuestionNumber=document.getElementById("cQuestionNumber");
let cQuestionCount=2;
let cScore=0;
let cScoreDisplay=document.getElementById("cScoreDisplay");
let cScoreShow=document.getElementById("cScoreShow");
let cSkip2 =document.getElementById("cSkip2");

let cFillAns =document.getElementById("cFillAns");
let cStatus1=document.getElementById("cStatus1");
let cStatus2=document.getElementById("cStatus2");
let cStatus3=document.getElementById("cStatus3");
let cCheckFill =document.getElementById("cCheckFill");

let codingResultc=document.getElementById("codingResultc");

let cIncorrectAnswersDisplay =document.getElementById("cIncorrectAnswersDisplay");
let cScoreBelow70 =document.getElementById("cScoreBelow70");
let cScore100 =document.getElementById("cScore100");

let cResult1=document.getElementById("cResult1");
let cResult2=document.getElementById("cResult2");
let cResult3=document.getElementById("cResult3");
let cResult4=document.getElementById("cResult4");
let cResult5=document.getElementById("cResult5");
let cBg1 =document.getElementById("cBg1");

function codingcStart(){
  codingcHide.classList.add("d-none");
  codingcShow.classList.remove("d-none");

  // codingcBack.classList.add("d-none");

  let fillBlankc=document.getElementById("fillBlankc");
  let op1c=document.getElementById("op1c");
  let op2c=document.getElementById("op2c");
  let op3c=document.getElementById("op3c");
  let op4c=document.getElementById("op4c");

  let cFillAns =document.getElementById("cFillAns");
  let cStatus1=document.getElementById("cStatus1");
  let cStatus2=document.getElementById("cStatus2");
  let cStatus3=document.getElementById("cStatus3");
  let cCheckFill =document.getElementById("cCheckFill");

  cFillAns.disabled=false;
  cStatus1.classList.remove("d-none");
  cStatus2.classList.add("d-none");
  cStatus3.classList.add("d-none");
  cFillAns.value="";
  cSkip2.textContent="Skip";
  cSkip2.style.backgroundColor="orange";
  cSkip2.style.borderColor="orange";

  cSkip.textContent="Skip";
  cSkip.style.backgroundColor="orange";
  cSkip.style.borderColor="orange";
  cScoreShow.textContent="";
  cTimer.style.color="black";

      if(cLevel===1){
     let cRandom = Math.floor(Math.random() * codingc1Arr.length);
      let y = codingc1Arr[cRandom];
       cTimer.textContent="20";
       cTime=20

      cTimerId= setInterval(function(){
              cTime=cTime-1;
              if(cTime==0){
                clearInterval(cTimerId);
                 cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
                cQuestionCount=cQuestionCount+1;
                cTime=20;
                codingcStart();
              }
              if(cTime<=5){
                cTimer.style.color="red";
                cTimer.textContent=cTime;
              }
              else{
                 cTimer.textContent=cTime;
              }
             
            },1000);

      if(cQuestionCount==12){
        clearInterval(cTimerId);
        mcqc.classList.add("d-none");
        document.getElementById("cScoreEnd").textContent=cScoreDisplay.textContent;
        fillBlankc.classList.add("d-none");
        codingcShow.classList.add("d-none");
        codingResultc.classList.remove("d-none");

        if(cScore<70){
        cScoreBelow70.classList.remove("d-none");
        cScore100.classList.add("d-none");
        sectionCodingc.classList.add("back15");

        cResult1.textContent="Test finished!!";
        cResult2.textContent="😓 Oops! Not quite right.";
        cResult3.src="https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
        cResult4.textContent="Don't worry — try again!";

        let h2 =document.createElement("h2");
        h2.textContent="Incorrect Answers :"
        h2.classList.add("text-center","incorrect-answer");
        cIncorrectAnswersDisplay.appendChild(h2);

        for(let z of cIncorrectAnswers){
          let card =document.createElement("div");
         card.classList.add("d-flex","flex-column","card4","shadow");
          cIncorrectAnswersDisplay.appendChild(card);
          let  question =document.createElement("h6");
          question.textContent=z.ques;
          card.appendChild(question);
          let wrongDiv =document.createElement("div");
          wrongDiv.classList.add("d-flex","flex-row");
          card.appendChild(wrongDiv);

          let wrong =document.createElement("p");
          wrongDiv.textContent="Your Answer : "+z.wrong;
          wrongDiv.appendChild(wrong);

         let wrongTick = document.createElement("i");
         wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1","tick1");
         wrongDiv.appendChild(wrongTick);

         let correctDiv=document.createElement("div");
         correctDiv.classList.add("d-flex","flex-row");
         card.appendChild(correctDiv);

          let correct=document.createElement("p");
          correct.textContent="Correct Answer : "+z.correct;
          correctDiv.appendChild(correct);

            let correctTick = document.createElement("i");
            correctTick.classList.add("fa-solid","fa-check", "ml-2","mt-1","tick2");
            correctDiv.appendChild(correctTick);
        }

      }
      else if(cScore<100){
        cScoreBelow70.classList.remove("d-none");
        cScore100.classList.add("d-none");
        sectionCodingc.classList.add("back15");

         cResult1.textContent="Test finished!!";
        cResult2.textContent="🎉 Hurry! Congratulations! 🎉";
        cResult3.src="https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
        cResult4.textContent="Keep trying, keep coding — success and good score will come."

        let h2 =document.createElement("h2");
        h2.textContent="Incorrect Answers :"
        h2.classList.add("text-center","incorrect-answer");
        cIncorrectAnswersDisplay.appendChild(h2);

        for(let z of cIncorrectAnswers){
          let card =document.createElement("div");
         card.classList.add("d-flex","flex-column","card4","shadow");
          cIncorrectAnswersDisplay.appendChild(card);
          let  question =document.createElement("h6");
          question.textContent=z.ques;
          card.appendChild(question);
          let wrongDiv =document.createElement("div");
          wrongDiv.classList.add("d-flex","flex-row");
          card.appendChild(wrongDiv);

          let wrong =document.createElement("p");
          wrongDiv.textContent="Your Answer : "+z.wrong;
          wrongDiv.appendChild(wrong);

         let wrongTick = document.createElement("i");
         wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1","tick1");
         wrongDiv.appendChild(wrongTick);

         let correctDiv=document.createElement("div");
         correctDiv.classList.add("d-flex","flex-row");
         card.appendChild(correctDiv);

          let correct=document.createElement("p");
          correct.textContent="Correct Answer : "+z.correct;
          correctDiv.appendChild(correct);

            let correctTick = document.createElement("i");
            correctTick.classList.add("fa-solid","fa-check", "ml-2","mt-1","tick2");
            correctDiv.appendChild(correctTick);
        }
      }
      
      else if(cScore===100){
          document.getElementById("sectionCodingc").classList.add("back14");
          cScore100.classList.remove("d-none");
          cScoreBelow70.classList.add("d-none");
        }
      }

      if(y.quesType==="mcq"){
        mcqc.classList.remove("d-none");
        let formattedQuestion = y.ques.replace(/\n/g, "<br>");
        codingcQues.innerHTML = formattedQuestion;

        fillBlankc.classList.add("d-none");
        op1c.textContent=y.op1;
        op2c.textContent=y.op2;
        op3c.textContent=y.op3;
        op4c.textContent=y.op4;
                           
        op1c.onclick=function(){
          op2c.disabled=true;
          op3c.disabled=true;
          op4c.disabled=true;
          if(op1c.textContent===y.ans){
            op1c.style.backgroundColor="green";
            cScore=cScore+10;
            cScoreShow.textContent="+10";
            cScoreShow.style.color="green";
            cScoreDisplay.textContent="Score: "+cScore+"/100";
          }
          else{
            op1c.style.backgroundColor="red";
            cScore=cScore-5;
            cScoreShow.textContent="-5";
            cScoreShow.style.color="red";
            cScoreDisplay.textContent="Score: "+cScore+"/100";
            let wrong_answer={ques:y.ques, correct:y.ans, wrong:op1c.textContent};
            cIncorrectAnswers.push(wrong_answer);
          }
          clearInterval(cTimerId);
          cTime=20;
          cSkip.textContent="Next";
          cSkip.style.backgroundColor="#23ebdd";
          cSkip.style.borderColor="#23ebdd"
          cSkip.onclick=function(){
            cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
            op1c.disabled=false;
            op2c.disabled=false;
            op3c.disabled=false;
            op4c.disabled=false;
            cQuestionCount=cQuestionCount+1;
            op1c.style.backgroundColor="white";
            op2c.style.backgroundColor="white";
            op3c.style.backgroundColor="white";
            op4c.style.backgroundColor="white";
            codingcStart();
          }
        }

        op2c.onclick=function(){
  op1c.disabled=true;
  op3c.disabled=true;
  op4c.disabled=true;
  if(op2c.textContent===y.ans){
    op2c.style.backgroundColor="green";
    cScore=cScore+10;
    cScoreShow.textContent="+10";
    cScoreShow.style.color="green";
    cScoreDisplay.textContent="Score: "+cScore+"/100";
  }
  else{
    op2c.style.backgroundColor="red";
    cScore=cScore-5;
    cScoreShow.textContent="-5";
    cScoreShow.style.color="red";
    cScoreDisplay.textContent="Score: "+cScore+"/100";
    let wrong_answer={
      ques:y.ques,
      correct:y.ans,
      wrong:op2c.textContent
    }
    cIncorrectAnswers.push(wrong_answer);
  }
  clearInterval(cTimerId);
  cTime=20;
  cSkip.textContent="Next";
  cSkip.style.backgroundColor="#23ebdd";
  cSkip.style.borderColor="#23ebdd";

  cSkip.onclick=function(){
    cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
    op1c.disabled=false;
    op2c.disabled=false;
    op3c.disabled=false;
    op4c.disabled=false;
    cQuestionCount=cQuestionCount+1;
    op1c.style.backgroundColor="white";
    op2c.style.backgroundColor="white";
    op3c.style.backgroundColor="white";
    op4c.style.backgroundColor="white";
    codingcStart();
  }
}

        op3c.onclick=function(){
  op1c.disabled=true;
  op2c.disabled=true;
  op4c.disabled=true;
  if(op3c.textContent===y.ans){
    op3c.style.backgroundColor="green";
    cScore=cScore+10;
    cScoreShow.textContent="+10";
    cScoreShow.style.color="green";
    cScoreDisplay.textContent="Score: "+cScore+"/100";
  }
  else{
    op3c.style.backgroundColor="red";
    cScore=cScore-5;
    cScoreShow.textContent="-5";
    cScoreShow.style.color="red";
    cScoreDisplay.textContent="Score: "+cScore+"/100";
    let wrong_answer={
      ques:y.ques,
      correct:y.ans,
      wrong:op3c.textContent
    }
    cIncorrectAnswers.push(wrong_answer);
  }
  clearInterval(cTimerId);
  cTime=20;
  cSkip.style.backgroundColor="#23ebdd";
  cSkip.style.borderColor="#23ebdd";
  cSkip.textContent="Next";

  cSkip.onclick=function(){
    cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
    op1c.disabled=false;
    op2c.disabled=false;
    op3c.disabled=false;
    op4c.disabled=false;
    cQuestionCount=cQuestionCount+1;
    op1c.style.backgroundColor="white";
    op2c.style.backgroundColor="white";
    op3c.style.backgroundColor="white";
    op4c.style.backgroundColor="white";
    codingcStart();
  }
         }

         op4c.onclick=function(){
  op1c.disabled=true;
  op2c.disabled=true;
  op3c.disabled=true;
  if(op4c.textContent===y.ans){
    op4c.style.backgroundColor="green";
    cScore=cScore+10;
    cScoreShow.textContent="+10";
    cScoreShow.style.color="green";
    cScoreDisplay.textContent="Score: "+cScore+"/100";
  }
  else{
    op4c.style.backgroundColor="red";
    cScore=cScore-5;
    cScoreShow.textContent="-5";
    cScoreShow.style.color="red";
    cScoreDisplay.textContent="Score: "+cScore+"/100";
    let wrong_answer={
      ques:y.ques,
      correct:y.ans,
      wrong:op4c.textContent
    }
    cIncorrectAnswers.push(wrong_answer);
  }
  clearInterval(cTimerId);
  cTime=20;
  cSkip.style.backgroundColor="#23ebdd";
  cSkip.style.borderColor="#23ebdd";
  cSkip.textContent="Next";

  cSkip.onclick=function(){
    cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
    op1c.disabled=false;
    op2c.disabled=false;
    op3c.disabled=false;
    op4c.disabled=false;
    cQuestionCount=cQuestionCount+1;
    op1c.style.backgroundColor="white";
    op2c.style.backgroundColor="white";
    op3c.style.backgroundColor="white";
    op4c.style.backgroundColor="white";
    codingcStart();
  }
        }


        cSkip.onclick=function(){
          clearInterval(cTimerId);
          cTime=20;
          cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
          op1c.disabled=false;
          op2c.disabled=false;
          op3c.disabled=false;
          op4c.disabled=false;
          cQuestionCount=cQuestionCount+1;
          op1c.style.backgroundColor="white";
          op2c.style.backgroundColor="white";
          op3c.style.backgroundColor="white";
          op4c.style.backgroundColor="white";
          let wrong_answer={ques:y.ques, correct:y.ans, wrong:"Skipped"};
          cIncorrectAnswers.push(wrong_answer);
          codingcStart();
        }
      }

      else {
        mcqc.classList.add("d-none");
        fillBlankc.classList.remove("d-none");
        let formattedQuestion = y.ques.replace(/\n/g, "<br>");
        codingcQues.innerHTML = formattedQuestion;

        cCheckFill.onclick=function(){
          clearInterval(cTimerId);
          cCheckFill.disabled=false;
          cSkip2.textContent="Next";
          cSkip2.style.backgroundColor="#23ebdd";
          cSkip2.style.borderColor="#23ebdd"
          cFillAns.disabled=true;

          if(cFillAns.value.trim().toLowerCase()===y.ans.trim().toLowerCase()){
            cStatus1.classList.add("d-none");
            cStatus2.classList.remove("d-none");

            cScore=cScore+10;
            cScoreShow.textContent="+10";
            cScoreShow.style.color="green";
            cScoreDisplay.textContent="Score: "+cScore+"/100";
          }
          else{
            cStatus1.classList.add("d-none");
            cStatus3.classList.remove("d-none");
            cScore=cScore-5;
            cScoreShow.textContent="-5";
            cScoreShow.style.color="red";
            cScoreDisplay.textContent="Score: "+cScore+"/100";
            let wrong_answer={ques:y.ques, correct:y.ans, wrong:cFillAns.value};
            cIncorrectAnswers.push(wrong_answer);
          }
        }

        cSkip2.onclick=function(){
          if(cFillAns.value===""){
            let wrong_answer={ques:y.ques, correct:y.ans, wrong:"Skipped"};
            cIncorrectAnswers.push(wrong_answer);
          }
          clearInterval(cTimerId);
          cTime=20;
          cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
          cQuestionCount=cQuestionCount+1;
          codingcStart();
        }
      }
      }

      else if(cLevel===2){
     let cRandom = Math.floor(Math.random() * codingc2Arr.length);
      let y = codingc2Arr[cRandom];
       cTimer.textContent="25";
       cTime=25

      cTimerId= setInterval(function(){
              cTime=cTime-1;
              if(cTime==0){
                clearInterval(cTimerId);
                 cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
                cQuestionCount=cQuestionCount+1;
                cTime=25;
                codingcStart();
              }
              if(cTime<=5){
                cTimer.style.color="red";
                cTimer.textContent=cTime;
              }
              else{
                 cTimer.textContent=cTime;
              }
             
            },1000);

      if(cQuestionCount==12){
        clearInterval(cTimerId);
        mcqc.classList.add("d-none");
        document.getElementById("cScoreEnd").textContent=cScoreDisplay.textContent;
        fillBlankc.classList.add("d-none");
        codingcShow.classList.add("d-none");
        codingResultc.classList.remove("d-none");

        if(cScore<70){
        cScoreBelow70.classList.remove("d-none");
        cScore100.classList.add("d-none");
        sectionCodingc.classList.add("back15");

        cResult1.textContent="Test finished!!";
        cResult2.textContent="😓 Oops! Not quite right.";
        cResult3.src="https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
        cResult4.textContent="Don't worry — try again!";

        let h2 =document.createElement("h2");
        h2.textContent="Incorrect Answers :"
        h2.classList.add("text-center","incorrect-answer");
        cIncorrectAnswersDisplay.appendChild(h2);

        for(let z of cIncorrectAnswers){
          let card =document.createElement("div");
         card.classList.add("d-flex","flex-column","card4","shadow");
          cIncorrectAnswersDisplay.appendChild(card);
          let  question =document.createElement("h6");
          question.textContent=z.ques;
          card.appendChild(question);
          let wrongDiv =document.createElement("div");
          wrongDiv.classList.add("d-flex","flex-row");
          card.appendChild(wrongDiv);

          let wrong =document.createElement("p");
          wrongDiv.textContent="Your Answer : "+z.wrong;
          wrongDiv.appendChild(wrong);

         let wrongTick = document.createElement("i");
         wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1","tick1");
         wrongDiv.appendChild(wrongTick);

         let correctDiv=document.createElement("div");
         correctDiv.classList.add("d-flex","flex-row");
         card.appendChild(correctDiv);

          let correct=document.createElement("p");
          correct.textContent="Correct Answer : "+z.correct;
          correctDiv.appendChild(correct);

            let correctTick = document.createElement("i");
            correctTick.classList.add("fa-solid","fa-check", "ml-2","mt-1","tick2");
            correctDiv.appendChild(correctTick);
          
        }

      }
      else if(cScore<100){
        cScoreBelow70.classList.remove("d-none");
        cScore100.classList.add("d-none");
        sectionCodingc.classList.add("back15");

         cResult1.textContent="Test finished!!";
        cResult2.textContent="🎉 Hurry! Congratulations! 🎉";
        cResult3.src="https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
        cResult4.textContent="Keep trying, keep coding — success and good score will come."
        
        let h2 =document.createElement("h2");
        h2.textContent="Incorrect Answers :"
        h2.classList.add("text-center","incorrect-answer");
        cIncorrectAnswersDisplay.appendChild(h2);

        for(let z of cIncorrectAnswers){
          let card =document.createElement("div");
         card.classList.add("d-flex","flex-column","card4","shadow");
          cIncorrectAnswersDisplay.appendChild(card);
          let  question =document.createElement("h6");
          question.textContent=z.ques;
          card.appendChild(question);
          let wrongDiv =document.createElement("div");
          wrongDiv.classList.add("d-flex","flex-row");
          card.appendChild(wrongDiv);

          let wrong =document.createElement("p");
          wrongDiv.textContent="Your Answer : "+z.wrong;
          wrongDiv.appendChild(wrong);

         let wrongTick = document.createElement("i");
         wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1","tick1");
         wrongDiv.appendChild(wrongTick);

         let correctDiv=document.createElement("div");
         correctDiv.classList.add("d-flex","flex-row");
         card.appendChild(correctDiv);

          let correct=document.createElement("p");
          correct.textContent="Correct Answer : "+z.correct;
          correctDiv.appendChild(correct);

            let correctTick = document.createElement("i");
            correctTick.classList.add("fa-solid","fa-check", "ml-2","mt-1","tick2");
            correctDiv.appendChild(correctTick);
          
        }
      }
      else if(cScore===100){
          document.getElementById("sectionCodingc").classList.add("back14");
          cScore100.classList.remove("d-none");
          cScoreBelow70.classList.add("d-none");

        }
      }
      if(y.quesType==="mcq"){
        mcqc.classList.remove("d-none");
       let formattedQuestion = y.ques.replace(/\n/g, "<br>");
        codingcQues.innerHTML = formattedQuestion;

        fillBlankc.classList.add("d-none");
             op1c.textContent=y.op1;
             op2c.textContent=y.op2;
             op3c.textContent=y.op3;
             op4c.textContent=y.op4;
                           
        op1c.onclick=function(){
          opc2.disabled=true;
          opc3.disabled=true;
          opc4.disabled=true;
          if(opc1.textContent===y.ans){
            opc1.style.backgroundColor="green";
            cScore=cScore+10;
            cScoreShow.textContent="+10";
            cScoreShow.style.color="green";
            cScoreDisplay.textContent="Score: "+cScore+"/100";
          }
          else{
             opc1.style.backgroundColor="red";
            cScore=cScore-5;
            cScoreShow.textContent="-5";
            cScoreShow.style.color="red";
            cScoreDisplay.textContent="Score: "+cScore+"/100";
            let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:opc1.textContent
            }
            cIncorrectAnswers.push(wrong_answer);
          }
            clearInterval(cTimerId);
            cTime=25;
            cSkip.textContent="Next";
            cSkip.style.backgroundColor="#23ebdd";
            cSkip.style.borderColor="#23ebdd"

        }
        op2c.onclick=function(){
  op1c.disabled=true;
  op3c.disabled=true;
  op4c.disabled=true;
  if(op2c.textContent===y.ans){
    op2c.style.backgroundColor="green";
    cScore=cScore+10;
    cScoreShow.textContent="+10";
    cScoreShow.style.color="green";
    cScoreDisplay.textContent="Score: "+cScore+"/100";
  }
  else{
    op2c.style.backgroundColor="red";
    cScore=cScore-5;
    cScoreShow.textContent="-5";
    cScoreShow.style.color="red";
    cScoreDisplay.textContent="Score: "+cScore+"/100";
    let wrong_answer={
      ques:y.ques,
      correct:y.ans,
      wrong:op2c.textContent
    }
    cIncorrectAnswers.push(wrong_answer);
  }
  clearInterval(cTimerId);
  cTime=25;
  cSkip.textContent="Next";
  cSkip.style.backgroundColor="#23ebdd";
  cSkip.style.borderColor="#23ebdd";

  cSkip.onclick=function(){
    cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
    op1c.disabled=false;
    op2c.disabled=false;
    op3c.disabled=false;
    op4c.disabled=false;
    cQuestionCount=cQuestionCount+1;
    op1c.style.backgroundColor="white";
    op2c.style.backgroundColor="white";
    op3c.style.backgroundColor="white";
    op4c.style.backgroundColor="white";
    codingcStart();
  }
        }

         op3c.onclick=function(){
  op1c.disabled=true;
  op2c.disabled=true;
  op4c.disabled=true;
  if(op3c.textContent===y.ans){
    op3c.style.backgroundColor="green";
    cScore=cScore+10;
    cScoreShow.textContent="+10";
    cScoreShow.style.color="green";
    cScoreDisplay.textContent="Score: "+cScore+"/100";
  }
  else{
    op3c.style.backgroundColor="red";
    cScore=cScore-5;
    cScoreShow.textContent="-5";
    cScoreShow.style.color="red";
    cScoreDisplay.textContent="Score: "+cScore+"/100";
    let wrong_answer={
      ques:y.ques,
      correct:y.ans,
      wrong:op3c.textContent
    }
    cIncorrectAnswers.push(wrong_answer);
  }
  clearInterval(cTimerId);
  cTime=25;
  cSkip.style.backgroundColor="#23ebdd";
  cSkip.style.borderColor="#23ebdd";
  cSkip.textContent="Next";

  cSkip.onclick=function(){
    cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
    op1c.disabled=false;
    op2c.disabled=false;
    op3c.disabled=false;
    op4c.disabled=false;
    cQuestionCount=cQuestionCount+1;
    op1c.style.backgroundColor="white";
    op2c.style.backgroundColor="white";
    op3c.style.backgroundColor="white";
    op4c.style.backgroundColor="white";
    codingcStart();
  }
         }

        op4c.onclick=function(){
  op1c.disabled=true;
  op2c.disabled=true;
  op3c.disabled=true;
  if(op4c.textContent===y.ans){
    op4c.style.backgroundColor="green";
    cScore=cScore+10;
    cScoreShow.textContent="+10";
    cScoreShow.style.color="green";
    cScoreDisplay.textContent="Score: "+cScore+"/100";
  }
  else{
    op4c.style.backgroundColor="red";
    cScore=cScore-5;
    cScoreShow.textContent="-5";
    cScoreShow.style.color="red";
    cScoreDisplay.textContent="Score: "+cScore+"/100";
    let wrong_answer={
      ques:y.ques,
      correct:y.ans,
      wrong:op4c.textContent
    }
    cIncorrectAnswers.push(wrong_answer);
  }
  clearInterval(cTimerId);
  cTime=25;
  cSkip.style.backgroundColor="#23ebdd";
  cSkip.style.borderColor="#23ebdd";
  cSkip.textContent="Next";

  cSkip.onclick=function(){
    cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
    op1c.disabled=false;
    op2c.disabled=false;
    op3c.disabled=false;
    op4c.disabled=false;
    cQuestionCount=cQuestionCount+1;
    op1c.style.backgroundColor="white";
    op2c.style.backgroundColor="white";
    op3c.style.backgroundColor="white";
    op4c.style.backgroundColor="white";
    codingcStart();
  }
        }

        cSkip.onclick=function(){
          clearInterval(cTimerId);
          cTime=25;
          cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
          op1c.disabled=false;
          op2c.disabled=false;
          op3c.disabled=false;
          op4c.disabled=false;
          cQuestionCount=cQuestionCount+1;
          op1c.style.backgroundColor="white";
          op2c.style.backgroundColor="white";
          op3c.style.backgroundColor="white";
          op4c.style.backgroundColor="white";
          let wrong_answer={ques:y.ques, correct:y.ans, wrong:"Skipped"};
          cIncorrectAnswers.push(wrong_answer);
          codingcStart();
        }
    
    }
         else {
        mcqc.classList.add("d-none");
        fillBlankc.classList.remove("d-none");
        let formattedQuestion = y.ques.replace(/\n/g, "<br>");
        codingcQues.innerHTML = formattedQuestion;

        cCheckFill.onclick=function(){
          clearInterval(cTimerId);
          cCheckFill.disabled=false;
          cSkip2.textContent="Next";
          cSkip2.style.backgroundColor="#23ebdd";
          cSkip2.style.borderColor="#23ebdd"
          cFillAns.disabled=true;

          if(cFillAns.value.trim().toLowerCase()===y.ans.trim().toLowerCase()){
            cStatus1.classList.add("d-none");
            cStatus2.classList.remove("d-none");

            cScore=cScore+10;
            cScoreShow.textContent="+10";
            cScoreShow.style.color="green";
            cScoreDisplay.textContent="Score: "+cScore+"/100";
          }
          else{
            cStatus1.classList.add("d-none");
            cStatus3.classList.remove("d-none");
            cScore=cScore-5;
            cScoreShow.textContent="-5";
            cScoreShow.style.color="red";
            cScoreDisplay.textContent="Score: "+cScore+"/100";
            let wrong_answer={ques:y.ques, correct:y.ans, wrong:cFillAns.value};
            cIncorrectAnswers.push(wrong_answer);
          }
        }

        cSkip2.onclick=function(){
          if(cFillAns.value===""){
            let wrong_answer={ques:y.ques, correct:y.ans, wrong:"Skipped"};
            cIncorrectAnswers.push(wrong_answer);
          }
          clearInterval(cTimerId);
          cTime=25;
          cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
          cQuestionCount=cQuestionCount+1;
          codingcStart();
        }
                }
        
      }
  

       else if(cLevel===3){
     let cRandom = Math.floor(Math.random() * codingc3Arr.length);
      let y = codingc3Arr[cRandom];
       cTimer.textContent="30";
       cTime=30

      cTimerId= setInterval(function(){
              cTime=cTime-1;
              if(cTime==0){
                clearInterval(cTimerId);
                 cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
                cQuestionCount=cQuestionCount+1;
                cTime=30;
                codingcStart();
              }
              if(cTime<=5){
                cTimer.style.color="red";
                cTimer.textContent=cTime;
              }
              else{
                 cTimer.textContent=cTime;
              }
            },1000);

      if(cQuestionCount==12){
        clearInterval(cTimerId);
        mcqc.classList.add("d-none");
        document.getElementById("cScoreEnd").textContent=cScoreDisplay.textContent;
        fillBlankc.classList.add("d-none");
        codingcShow.classList.add("d-none");
        codingResultc.classList.remove("d-none");

        if(cScore<70){
        cScoreBelow70.classList.remove("d-none");
        cScore100.classList.add("d-none");
        sectionCodingc.classList.add("back15");

        cResult1.textContent="Test finished!!";
        cResult2.textContent="😓 Oops! Not quite right.";
        cResult3.src="https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
        cResult4.textContent="Don't worry — try again!";

        let h2 =document.createElement("h2");
        h2.textContent="Incorrect Answers :"
        h2.classList.add("text-center","incorrect-answer");
        cIncorrectAnswersDisplay.appendChild(h2);

        for(let z of cIncorrectAnswers){
          let card =document.createElement("div");
         card.classList.add("d-flex","flex-column","card4","shadow");
          cIncorrectAnswersDisplay.appendChild(card);
          let question =document.createElement("h6");
          question.textContent=z.ques;
          card.appendChild(question);
          let wrongDiv =document.createElement("div");
          wrongDiv.classList.add("d-flex","flex-row");
          card.appendChild(wrongDiv);

          let wrong =document.createElement("p");
          wrongDiv.textContent="Your Answer : "+z.wrong;
          wrongDiv.appendChild(wrong);

         let wrongTick = document.createElement("i");
         wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1","tick1");
         wrongDiv.appendChild(wrongTick);

         let correctDiv=document.createElement("div");
         correctDiv.classList.add("d-flex","flex-row");
         card.appendChild(correctDiv);

          let correct=document.createElement("p");
          correct.textContent="Correct Answer : "+z.correct;
          correctDiv.appendChild(correct);

          let correctTick = document.createElement("i");
          correctTick.classList.add("fa-solid","fa-check", "ml-2","mt-1","tick2");
          correctDiv.appendChild(correctTick);
        }

      }
      else if(cScore<100){
        cScoreBelow70.classList.remove("d-none");
        cScore100.classList.add("d-none");
        sectionCodingc.classList.add("back15");

         cResult1.textContent="Test finished!!";
        cResult2.textContent="🎉 Hurry! Congratulations! 🎉";
        cResult3.src="https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
        cResult4.textContent="Keep trying, keep coding — success and good score will come."

        let h2 =document.createElement("h2");
        h2.textContent="Incorrect Answers :"
        h2.classList.add("text-center","incorrect-answer");
        cIncorrectAnswersDisplay.appendChild(h2);

        for(let z of cIncorrectAnswers){
          let card =document.createElement("div");
         card.classList.add("d-flex","flex-column","card4","shadow");
          cIncorrectAnswersDisplay.appendChild(card);
          let question =document.createElement("h6");
          question.textContent=z.ques;
          card.appendChild(question);
          let wrongDiv =document.createElement("div");
          wrongDiv.classList.add("d-flex","flex-row");
          card.appendChild(wrongDiv);

          let wrong =document.createElement("p");
          wrongDiv.textContent="Your Answer : "+z.wrong;
          wrongDiv.appendChild(wrong);

         let wrongTick = document.createElement("i");
         wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1","tick1");
         wrongDiv.appendChild(wrongTick);

         let correctDiv=document.createElement("div");
         correctDiv.classList.add("d-flex","flex-row");
         card.appendChild(correctDiv);

          let correct=document.createElement("p");
          correct.textContent="Correct Answer : "+z.correct;
          correctDiv.appendChild(correct);

          let correctTick = document.createElement("i");
          correctTick.classList.add("fa-solid","fa-check", "ml-2","mt-1","tick2");
          correctDiv.appendChild(correctTick);
        }
      }
      else if(cScore===100){
          document.getElementById("sectionCodingc").classList.add("back14");
          cScore100.classList.remove("d-none");
          cScoreBelow70.classList.add("d-none");
        }
      }
      if(y.quesType==="mcq"){
        mcqc.classList.remove("d-none");
       let formattedQuestion = y.ques.replace(/\n/g, "<br>");
        codingcQues.innerHTML = formattedQuestion;

        fillBlankc.classList.add("d-none");
             op1c.textContent=y.op1;
            op2c.textContent=y.op2;
             op3c.textContent=y.op3;
             op4c.textContent=y.op4;

        op1c.onclick=function(){
          op2c.disabled=true;
          op3c.disabled=true;
          op4c.disabled=true;
          if(op1c.textContent===y.ans){
            op1c.style.backgroundColor="green";
            cScore=cScore+10;
            cScoreShow.textContent="+10";
            cScoreShow.style.color="green";
            cScoreDisplay.textContent="Score: "+cScore+"/100";
          }
          else{
             op1c.style.backgroundColor="red";
            cScore=cScore-5;
            cScoreShow.textContent="-5";
            cScoreShow.style.color="red";
            cScoreDisplay.textContent="Score: "+cScore+"/100";
            let wrong_answer={
              ques:y.ques,
              correct:y.ans,
              wrong:op1c.textContent
            }
            cIncorrectAnswers.push(wrong_answer);
          }
            clearInterval(cTimerId);
            cTime=30;
            cSkip.textContent="Next";
            cSkip.style.backgroundColor="#23ebdd";
            cSkip.style.borderColor="#23ebdd"

            cSkip.onclick=function(){
        cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
          op1c.disabled=false;
          op2c.disabled=false;
          op3c.disabled=false;
          op4c.disabled=false;
          cQuestionCount=cQuestionCount+1;
          op1c.style.backgroundColor="white";
          op2c.style.backgroundColor="white";
          op3c.style.backgroundColor="white";
          op4c.style.backgroundColor="white";
              codingcStart();
            }
        }
        op2c.onclick=function(){
  op1c.disabled=true;
  op3c.disabled=true;
  op4c.disabled=true;
  if(op2c.textContent===y.ans){
    op2c.style.backgroundColor="green";
    cScore=cScore+10;
    cScoreShow.textContent="+10";
    cScoreShow.style.color="green";
    cScoreDisplay.textContent="Score: "+cScore+"/100";
  }
  else{
    op2c.style.backgroundColor="red";
    cScore=cScore-5;
    cScoreShow.textContent="-5";
    cScoreShow.style.color="red";
    cScoreDisplay.textContent="Score: "+cScore+"/100";
    let wrong_answer={
      ques:y.ques,
      correct:y.ans,
      wrong:op2c.textContent
    }
    cIncorrectAnswers.push(wrong_answer);
  }
  clearInterval(cTimerId);
  cTime=30;
  cSkip.textContent="Next";
  cSkip.style.backgroundColor="#23ebdd";
  cSkip.style.borderColor="#23ebdd";

  cSkip.onclick=function(){
    cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
    op1c.disabled=false;
    op2c.disabled=false;
    op3c.disabled=false;
    op4c.disabled=false;
    cQuestionCount=cQuestionCount+1;
    op1c.style.backgroundColor="white";
    op2c.style.backgroundColor="white";
    op3c.style.backgroundColor="white";
    op4c.style.backgroundColor="white";
    codingcStart();
  }
        }

        op3c.onclick=function(){
  op1c.disabled=true;
  op2c.disabled=true;
  op4c.disabled=true;
  if(op3c.textContent===y.ans){
    op3c.style.backgroundColor="green";
    cScore=cScore+10;
    cScoreShow.textContent="+10";
    cScoreShow.style.color="green";
    cScoreDisplay.textContent="Score: "+cScore+"/100";
  }
  else{
    op3c.style.backgroundColor="red";
    cScore=cScore-5;
    cScoreShow.textContent="-5";
    cScoreShow.style.color="red";
    cScoreDisplay.textContent="Score: "+cScore+"/100";
    let wrong_answer={
      ques:y.ques,
      correct:y.ans,
      wrong:op3c.textContent
    }
    cIncorrectAnswers.push(wrong_answer);
  }
  clearInterval(cTimerId);
  cTime=30;
  cSkip.style.backgroundColor="#23ebdd";
  cSkip.style.borderColor="#23ebdd";
  cSkip.textContent="Next";

  cSkip.onclick=function(){
    cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
    op1c.disabled=false;
    op2c.disabled=false;
    op3c.disabled=false;
    op4c.disabled=false;
    cQuestionCount=cQuestionCount+1;
    op1c.style.backgroundColor="white";
    op2c.style.backgroundColor="white";
    op3c.style.backgroundColor="white";
    op4c.style.backgroundColor="white";
    codingcStart();
  }
        }

        op4c.onclick=function(){
  op1c.disabled=true;
  op2c.disabled=true;
  op3c.disabled=true;
  if(op4c.textContent===y.ans){
    op4c.style.backgroundColor="green";
    cScore=cScore+10;
    cScoreShow.textContent="+10";
    cScoreShow.style.color="green";
    cScoreDisplay.textContent="Score: "+cScore+"/100";
  }
  else{
    op4c.style.backgroundColor="red";
    cScore=cScore-5;
    cScoreShow.textContent="-5";
    cScoreShow.style.color="red";
    cScoreDisplay.textContent="Score: "+cScore+"/100";
    let wrong_answer={
      ques:y.ques,
      correct:y.ans,
      wrong:op4c.textContent
    }
    cIncorrectAnswers.push(wrong_answer);
  }
  clearInterval(cTimerId);
  cTime=30;
  cSkip.style.backgroundColor="#23ebdd";
  cSkip.style.borderColor="#23ebdd";
  cSkip.textContent="Next";

  cSkip.onclick=function(){
    cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
    op1c.disabled=false;
    op2c.disabled=false;
    op3c.disabled=false;
    op4c.disabled=false;
    cQuestionCount=cQuestionCount+1;
    op1c.style.backgroundColor="white";
    op2c.style.backgroundColor="white";
    op3c.style.backgroundColor="white";
    op4c.style.backgroundColor="white";
    codingcStart();
  }
        }

         cSkip.onclick=function(){
          clearInterval(cTimerId);
          cTime=30;
          cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
          op1c.disabled=false;
          op2c.disabled=false;
          op3c.disabled=false;
          op4c.disabled=false;
          cQuestionCount=cQuestionCount+1;
          op1c.style.backgroundColor="white";
          op2c.style.backgroundColor="white";
          op3c.style.backgroundColor="white";
          op4c.style.backgroundColor="white";
          let wrong_answer={ques:y.ques, correct:y.ans, wrong:"Skipped"};
          cIncorrectAnswers.push(wrong_answer);
          codingcStart();
        }
    

    
      }     
      else {
        mcqc.classList.add("d-none");
        fillBlankc.classList.remove("d-none");
        let formattedQuestion = y.ques.replace(/\n/g, "<br>");
        codingcQues.innerHTML = formattedQuestion;

        cCheckFill.onclick=function(){
          clearInterval(cTimerId);
          cCheckFill.disabled=false;
          cSkip2.textContent="Next";
          cSkip2.style.backgroundColor="#23ebdd";
          cSkip2.style.borderColor="#23ebdd"
          cFillAns.disabled=true;

          if(cFillAns.value.trim().toLowerCase()===y.ans.trim().toLowerCase()){
            cStatus1.classList.add("d-none");
            cStatus2.classList.remove("d-none");

            cScore=cScore+10;
            cScoreShow.textContent="+10";
            cScoreShow.style.color="green";
            cScoreDisplay.textContent="Score: "+cScore+"/100";
          }
          else{
            cStatus1.classList.add("d-none");
            cStatus3.classList.remove("d-none");
            cScore=cScore-5;
            cScoreShow.textContent="-5";
            cScoreShow.style.color="red";
            cScoreDisplay.textContent="Score: "+cScore+"/100";
            let wrong_answer={ques:y.ques, correct:y.ans, wrong:cFillAns.value};
            cIncorrectAnswers.push(wrong_answer);
          }
        }

        cSkip2.onclick=function(){
          if(cFillAns.value===""){
            let wrong_answer={ques:y.ques, correct:y.ans, wrong:"Skipped"};
            cIncorrectAnswers.push(wrong_answer);
          }
          clearInterval(cTimerId);
          cTime=30;
          cQuestionNumber.textContent="Question:"+cQuestionCount+"/10";
          cQuestionCount=cQuestionCount+1;
          codingcStart();
        }
      }
        
        
       }
        }
      
function resetCodingc() {

  document.getElementById("codingcShow").classList.add("d-none");
  document.getElementById("codingResultc").classList.add("d-none");
  document.getElementById("codingcHide").classList.remove("d-none");

  document.getElementById("cQuestionNumber").innerText = "Question: 1/10";
  document.getElementById("cScoreDisplay").innerText = "Score: 0/100";
  document.getElementById("cScoreShow").innerText = "";
  document.getElementById("cTimer").innerText = "00";
  document.getElementById("codingcQues").innerText = "";

  document.getElementById("op1c").innerText = "option1";
  document.getElementById("op2c").innerText = "option2";
  document.getElementById("op3c").innerText = "option3";
  document.getElementById("op4c").innerText = "option4";

  cIncorrectAnswers=[];
  document.getElementById("cIncorrectAnswersDisplay").innerHTML = "";

  cScore100.classList.add("d-none");
  cScoreBelow70.classList.add("d-none");

  cResult1.textContent="";
  cResult2.textContent="";
  cResult3.src="";
  cResult4.textContent="";

  sectionCodingc.classList.remove("back14");
  sectionCodingc.classList.remove("back15");

  document.getElementById("cFillAns").value = "";
  document.getElementById("fillBlankc").style.display = "none";
  document.getElementById("mcqc").style.display = "block";

  document.getElementById("cStatus1").classList.remove("d-none");
  document.getElementById("cStatus2").classList.add("d-none");
  document.getElementById("cStatus3").classList.add("d-none");

  if (typeof cTimerId !== "undefined") {
    clearInterval(cTimerId);
  }
   cTime=20;
  cQuestionCount =2;
  cScore = 0;
}

function cResetLevel(){
  cButton1.disabled=false;
  cButton2.disabled=false;
  cButton3.disabled=false;
  cButton.classList.add("d-none");
  cIncorrectAnswers=[];
}




    //  python


let pyButton = document.getElementById("pyButton");
let pyButton1 = document.getElementById("pyButton1");
let pyButton2 = document.getElementById("pyButton2");
let pyButton3 = document.getElementById("pyButton3");
let pyLevel = 0;
let pyCodingTest = document.getElementById("pyCodingTest");
let pyTimer = document.getElementById("pyTimer");

pyButton1.onclick = function () {
  pyButton2.disabled = true;
  pyButton3.disabled = true;
  pyLevel = 1;

  pyButton.classList.remove("d-none");
  pyButton.classList.add("d-block");
};

pyButton2.onclick = function () {
  pyButton1.disabled = true;
  pyButton3.disabled = true;
  pyLevel = 2;

  pyButton.classList.remove("d-none");
  pyButton.classList.add("d-block");
};

pyButton3.onclick = function () {
  pyButton2.disabled = true;
  pyButton1.disabled = true;
  pyLevel = 3;

  pyButton.classList.remove("d-none");
  pyButton.classList.add("d-block");
};

let pyTime = 0;

let codingpyShow = document.getElementById("codingpyShow");
let codingpyHide = document.getElementById("codingpyHide");
let codingpyBack = document.getElementById("codingpyBack");

codingpyBack.onclick = function () {
  codingpyShow.classList.add("d-none");
  codingpyHide.classList.remove("d-none");
};


let codingpy1Arr=[
  {
    "ques": "What is the output of: print(2 ** 3)?",
    "quesType": "mcq",
    "op1": "6",
    "op2": "8",
    "op3": "9",
    "op4": "5",
    "ans": "8"
  },
  {
    "ques": "What is the correct file extension for Python files?",
    "quesType": "mcq",
    "op1": ".pyt",
    "op2": ".pt",
    "op3": ".py",
    "op4": ".python",
    "ans": ".py"
  },
  {
    "ques": "What is the keyword to define a function in Python?",
    "quesType": "mcq",
    "op1": "def",
    "op2": "function",
    "op3": "define",
    "op4": "func",
    "ans": "def"
  },
  {
    "ques": "Which of the following is used to get input from the user?",
    "quesType": "mcq",
    "op1": "print()",
    "op2": "scanf()",
    "op3": "cin",
    "op4": "input()",
    "ans": "input()"
  },
  {
    "ques": "Which symbol is used for comments in Python?",
    "quesType": "mcq",
    "op1": "//",
    "op2": "/*",
    "op3": "#",
    "op4": "--",
    "ans": "#"
  },
  {
    "ques": "What is the data type of: name = 'Puppy'?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "str",
    "op3": "bool",
    "op4": "list",
    "ans": "str"
  },
  {
    "ques": "Which operator is used for equality check?",
    "quesType": "mcq",
    "op1": "=",
    "op2": "==",
    "op3": "!=",
    "op4": "equals",
    "ans": "=="
  },
  {
    "ques": "Which of these is a valid Python list?",
    "quesType": "mcq",
    "op1": "(1, 2, 3)",
    "op2": "{1, 2, 3}",
    "op3": "[1, 2, 3]",
    "op4": "<1, 2, 3>",
    "ans": "[1, 2, 3]"
  },
  {
    "ques": "How do you start a for loop in Python?",
    "quesType": "mcq",
    "op1": "for i in range():",
    "op2": "loop i in range():",
    "op3": "for(i=0;i<10;i++)",
    "op4": "foreach(i)",
    "ans": "for i in range():"
  },
  {
    "ques": "Which keyword is used for conditional branching?",
    "quesType": "mcq",
    "op1": "if",
    "op2": "when",
    "op3": "switch",
    "op4": "cond",
    "ans": "if"
  },
  {
    "ques": "What is the output of: print(type(5.0))?",
    "quesType": "mcq",
    "op1": "<class 'float'>",
    "op2": "<class 'int'>",
    "op3": "<float>",
    "op4": "5.0",
    "ans": "<class 'float'>"
  },
  {
    "ques": "Which data structure stores key-value pairs?",
    "quesType": "mcq",
    "op1": "list",
    "op2": "tuple",
    "op3": "dictionary",
    "op4": "set",
    "ans": "dictionary"
  },
  {
    "ques": "Which keyword is used to exit a loop?",
    "quesType": "mcq",
    "op1": "exit",
    "op2": "stop",
    "op3": "end",
    "op4": "break",
    "ans": "break"
  },
  {
    "ques": "How do you create a set in Python?",
    "quesType": "mcq",
    "op1": "[]",
    "op2": "()",
    "op3": "{}",
    "op4": "<>",
    "ans": "{}"
  },
  {
    "ques": "What is the result of: len('hello')?",
    "quesType": "mcq",
    "op1": "5",
    "op2": "4",
    "op3": "6",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "What is the correct way to define a variable?",
    "quesType": "mcq",
    "op1": "int x = 5",
    "op2": "x = 5",
    "op3": "declare x = 5",
    "op4": "dim x = 5",
    "ans": "x = 5"
  },
  {
    "ques": "What is the output of: print(10 // 3)?",
    "quesType": "mcq",
    "op1": "3.33",
    "op2": "3",
    "op3": "4",
    "op4": "3.0",
    "ans": "3"
  },
  {
    "ques": "Which of these is not a Python keyword?",
    "quesType": "mcq",
    "op1": "class",
    "op2": "function",
    "op3": "lambda",
    "op4": "try",
    "ans": "function"
  },
  {
    "ques": "Which one is a mutable data type?",
    "quesType": "mcq",
    "op1": "tuple",
    "op2": "str",
    "op3": "int",
    "op4": "list",
    "ans": "list"
  },
  {
    "ques": "How do you write comments in Python?",
    "quesType": "mcq",
    "op1": "/* comment */",
    "op2": "// comment",
    "op3": "# comment",
    "op4": "<!-- comment -->",
    "ans": "# comment"
  },
  {
    "ques": "What is the output of: print(4 + 3)?",
    "quesType": "fill",
    "ans": "7"
  },
  {
    "ques": "Fill in the blank to print: Hello World",
    "quesType": "fill",
    "ans": "print(\"Hello World\")"
  },
  {
    "ques": "What is the output of: print(len('python'))?",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "What will be the output of: print(9 % 2)?",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "What keyword is used to define a class in Python?",
    "quesType": "fill",
    "ans": "class"
  },
  {
    "ques": "Which function is used to get input from user?",
    "quesType": "fill",
    "ans": "input()"
  },
  {
    "ques": "What is the output of: print('A' * 3)?",
    "quesType": "fill",
    "ans": "AAA"
  },
  {
    "ques": "What is the output of: print(bool(0))?",
    "quesType": "fill",
    "ans": "False"
  },
  {
    "ques": "Which keyword is used to handle exceptions?",
    "quesType": "fill",
    "ans": "try"
  },
  {
    "ques": "Which keyword is used to define an anonymous function?",
    "quesType": "fill",
    "ans": "lambda"
  },
  {
    "ques": "What is the output of: print(10 > 5)?",
    "quesType": "fill",
    "ans": "True"
  },
  {
    "ques": "What is the output of: print(type(3))?",
    "quesType": "fill",
    "ans": "<class 'int'>"
  },
  {
    "ques": "Which method is used to add an item to a list?",
    "quesType": "fill",
    "ans": "append"
  },
  {
    "ques": "What is the output of: print([1,2,3][1])?",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "What is the output of: print(3 * 'a')?",
    "quesType": "fill",
    "ans": "aaa"
  },
  {
    "ques": "Which function is used to find length of list?",
    "quesType": "fill",
    "ans": "len"
  },
  {
    "ques": "What is the index of first item in a Python list?",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "What is the output of: print(7 // 2)?",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "What will be printed: print('Hi' + 'Python')?",
    "quesType": "fill",
    "ans": "HiPython"
  },
  {
    "ques": "What is the keyword used to return value from a function?",
    "quesType": "fill",
    "ans": "return"
  },
  {
  ques: "Which of the following is a valid variable name in Python?",
  quesType: "mcq",
  op1: "2name",
  op2: "name_2",
  op3: "name-2",
  op4: "name 2",
  ans: "name_2"
},
{
  ques: "Which function converts a string to an integer?",
  quesType: "mcq",
  op1: "str()",
  op2: "int()",
  op3: "float()",
  op4: "char()",
  ans: "int()"
},
{
  ques: "Which data type is used to store True or False?",
  quesType: "mcq",
  op1: "int",
  op2: "str",
  op3: "bool",
  op4: "char",
  ans: "bool"
},
{
  ques: "What is the output of: print(2 == 2.0)?",
  quesType: "mcq",
  op1: "False",
  op2: "True",
  op3: "0",
  op4: "Error",
  ans: "True"
},
{
  ques: "What is the result of: print(5 != 3)?",
  quesType: "mcq",
  op1: "False",
  op2: "True",
  op3: "None",
  op4: "Error",
  ans: "True"
},
{
  ques: "Which keyword is used to check a condition?",
  quesType: "mcq",
  op1: "select",
  op2: "if",
  op3: "loop",
  op4: "define",
  ans: "if"
},
{
  ques: "Which data structure does not allow duplicate values?",
  quesType: "mcq",
  op1: "list",
  op2: "tuple",
  op3: "set",
  op4: "dict",
  ans: "set"
},
{
  ques: "Which keyword is used to define a loop?",
  quesType: "mcq",
  op1: "do",
  op2: "while",
  op3: "loop",
  op4: "repeat",
  ans: "while"
},
{
  ques: "Which one of the following is an immutable data type?",
  quesType: "mcq",
  op1: "list",
  op2: "set",
  op3: "dict",
  op4: "tuple",
  ans: "tuple"
},
{
  ques: "What is the output of: print('5' + '6')?",
  quesType: "mcq",
  op1: "11",
  op2: "56",
  op3: "5 6",
  op4: "Error",
  ans: "56"
},
{
  ques: "Which of these is a Python tuple?",
  quesType: "mcq",
  op1: "[1, 2, 3]",
  op2: "{1, 2, 3}",
  op3: "(1, 2, 3)",
  op4: "<1, 2, 3>",
  ans: "(1, 2, 3)"
},
{
  ques: "What is the output of: print(3 * 2 + 4)?",
  quesType: "mcq",
  op1: "14",
  op2: "10",
  op3: "6",
  op4: "12",
  ans: "10"
},
{
  ques: "Which of the following creates an empty dictionary?",
  quesType: "mcq",
  op1: "[]",
  op2: "()",
  op3: "{}",
  op4: "dict()",
  ans: "dict()"
},
{
  ques: "Which built-in function returns the maximum value?",
  quesType: "mcq",
  op1: "max()",
  op2: "maximum()",
  op3: "top()",
  op4: "high()",
  ans: "max()"
},
{
  ques: "What is used to define a block of code in Python?",
  quesType: "mcq",
  op1: "Brackets",
  op2: "Indentation",
  op3: "Curly braces",
  op4: "Quotation marks",
  ans: "Indentation"
},
{
  ques: "Which method is used to remove an item from a list?",
  quesType: "mcq",
  op1: "delete()",
  op2: "pop()",
  op3: "removeItem()",
  op4: "cut()",
  ans: "pop()"
},
{
  ques: "What is the output of: print(type([]))?",
  quesType: "mcq",
  op1: "<class 'list'>",
  op2: "<type 'list'>",
  op3: "<class list>",
  op4: "<list>",
  ans: "<class 'list'>"
},
{
  ques: "Which keyword is used to create a loop over a sequence?",
  quesType: "mcq",
  op1: "loop",
  op2: "for",
  op3: "while",
  op4: "next",
  ans: "for"
},
{
  ques: "Which one is a built-in data type in Python?",
  quesType: "mcq",
  op1: "array",
  op2: "number",
  op3: "float",
  op4: "character",
  ans: "float"
},
{
  ques: "Which of the following is used to import a module?",
  quesType: "mcq",
  op1: "require",
  op2: "include",
  op3: "import",
  op4: "attach",
  ans: "import"
}
,
{
  ques: "Fill in the blank: ______(\"Welcome\")",
  quesType: "fill",
  ans: "print"
},
{
  ques: "What is the output of: print(10 * 0)?",
  quesType: "fill",
  ans: "0"
},
{
  ques: "What is the keyword to start a function definition?",
  quesType: "fill",
  ans: "def"
},
{
  ques: "What will be printed: print(6 / 2)?",
  quesType: "fill",
  ans: "3.0"
},
{
  ques: "What is the output of: print('Hello'[-1])?",
  quesType: "fill",
  ans: "o"
},
{
  ques: "Which keyword ends a function and returns a value?",
  quesType: "fill",
  ans: "return"
},
{
  ques: "What will be printed: print(9 % 4)?",
  quesType: "fill",
  ans: "1"
},
{
  ques: "What is the result of: print(bool(1))?",
  quesType: "fill",
  ans: "True"
},
{
  ques: "Which function gives the smallest value?",
  quesType: "fill",
  ans: "min"
},
{
  ques: "What is the correct syntax to create an empty list?",
  quesType: "fill",
  ans: "[]"
},
{
  ques: "How do you define a tuple with one item: _____?",
  quesType: "fill",
  ans: "(1,)"
},
{
  ques: "What is the output of: print(4 ** 2)?",
  quesType: "fill",
  ans: "16"
},
{
  ques: "What will be printed: print('a' in 'apple')?",
  quesType: "fill",
  ans: "True"
},
{
  ques: "What keyword is used to check multiple conditions?",
  quesType: "fill",
  ans: "elif"
},
{
  ques: "What is the output of: print(len([]))?",
  quesType: "fill",
  ans: "0"
},
{
  ques: "Which method removes all items from a list?",
  quesType: "fill",
  ans: "clear"
},
{
  ques: "What is the output of: print(7 >= 7)?",
  quesType: "fill",
  ans: "True"
},
{
  ques: "Which keyword is used to skip a loop iteration?",
  quesType: "fill",
  ans: "continue"
},
{
  ques: "What does the expression: 5 // 2 return?",
  quesType: "fill",
  ans: "2"
},
{
  ques: "Which function is used to find data type of a variable?",
  quesType: "fill",
  ans: "type"
}
,
{
  ques: "Which symbol is used to assign a value to a variable?",
  quesType: "mcq",
  op1: "==",
  op2: "=",
  op3: ":=",
  op4: "->",
  ans: "="
},
{
  ques: "Which of these is the correct way to start a Python file?",
  quesType: "mcq",
  op1: "#!/usr/bin/env python",
  op2: "// Python",
  op3: "begin python",
  op4: "<python>",
  ans: "#!/usr/bin/env python"
},
{
  ques: "What will be the output of: print('3' + '7')?",
  quesType: "mcq",
  op1: "37",
  op2: "10",
  op3: "3 7",
  op4: "Error",
  ans: "37"
},
{
  ques: "Which data type is used to store multiple items in a key-value pair?",
  quesType: "mcq",
  op1: "tuple",
  op2: "list",
  op3: "set",
  op4: "dictionary",
  ans: "dictionary"
},
{
  ques: "What is the output of: print(type(True))?",
  quesType: "mcq",
  op1: "<class 'bool'>",
  op2: "<bool>",
  op3: "boolean",
  op4: "<type 'bool'>",
  ans: "<class 'bool'>"
},
{
  ques: "Which of the following is not a valid logical operator in Python?",
  quesType: "mcq",
  op1: "and",
  op2: "or",
  op3: "not",
  op4: "maybe",
  ans: "maybe"
},
{
  ques: "Which of these is a Python boolean value?",
  quesType: "mcq",
  op1: "Yes",
  op2: "True",
  op3: "true",
  op4: "T",
  ans: "True"
},
{
  ques: "What is the output of: print(10 == '10')?",
  quesType: "mcq",
  op1: "True",
  op2: "False",
  op3: "10",
  op4: "Error",
  ans: "False"
},
{
  ques: "Which keyword is used to create a class?",
  quesType: "mcq",
  op1: "class",
  op2: "object",
  op3: "define",
  op4: "function",
  ans: "class"
},
{
  ques: "Which of the following is not a valid Python data type?",
  quesType: "mcq",
  op1: "list",
  op2: "set",
  op3: "array",
  op4: "tuple",
  ans: "array"
},
{
  ques: "Which operator is used to multiply numbers in Python?",
  quesType: "mcq",
  op1: "%",
  op2: "x",
  op3: "*",
  op4: "**",
  ans: "*"
},
{
  ques: "What does the `range()` function return?",
  quesType: "mcq",
  op1: "list",
  op2: "tuple",
  op3: "range object",
  op4: "iterator",
  ans: "range object"
},
{
  ques: "What will be the output of: print(5 > 10)?",
  quesType: "mcq",
  op1: "True",
  op2: "False",
  op3: "5",
  op4: "10",
  ans: "False"
},
{
  ques: "Which of the following is not a loop in Python?",
  quesType: "mcq",
  op1: "for",
  op2: "while",
  op3: "loop",
  op4: "none of these",
  ans: "loop"
},
{
  ques: "What is the value of: 3 + 2 * 2?",
  quesType: "mcq",
  op1: "10",
  op2: "7",
  op3: "8",
  op4: "12",
  ans: "7"
},
{
  ques: "Which keyword is used for exception handling?",
  quesType: "mcq",
  op1: "handle",
  op2: "try",
  op3: "check",
  op4: "except",
  ans: "try"
},
{
  ques: "What is the output of: print(int(5.9))?",
  quesType: "mcq",
  op1: "6",
  op2: "5",
  op3: "5.9",
  op4: "Error",
  ans: "5"
},
{
  ques: "Which of these is not a valid loop control keyword?",
  quesType: "mcq",
  op1: "continue",
  op2: "exit",
  op3: "break",
  op4: "pass",
  ans: "exit"
},
{
  ques: "What is the output of: print(len('abcde'))?",
  quesType: "mcq",
  op1: "4",
  op2: "5",
  op3: "6",
  op4: "Error",
  ans: "5"
},
{
  ques: "Which method converts a string to lowercase?",
  quesType: "mcq",
  op1: "lower()",
  op2: "uppercase()",
  op3: "downcase()",
  op4: "smallcase()",
  ans: "lower()"
}
,
{
  ques: "Which symbol is used to assign a value to a variable?",
  quesType: "mcq",
  op1: "==",
  op2: "=",
  op3: ":=",
  op4: "->",
  ans: "="
},
{
  ques: "Which of these is the correct way to start a Python file?",
  quesType: "mcq",
  op1: "#!/usr/bin/env python",
  op2: "// Python",
  op3: "begin python",
  op4: "<python>",
  ans: "#!/usr/bin/env python"
},
{
  ques: "What will be the output of: print('3' + '7')?",
  quesType: "mcq",
  op1: "37",
  op2: "10",
  op3: "3 7",
  op4: "Error",
  ans: "37"
},
{
  ques: "Which data type is used to store multiple items in a key-value pair?",
  quesType: "mcq",
  op1: "tuple",
  op2: "list",
  op3: "set",
  op4: "dictionary",
  ans: "dictionary"
},
{
  ques: "What is the output of: print(type(True))?",
  quesType: "mcq",
  op1: "<class 'bool'>",
  op2: "<bool>",
  op3: "boolean",
  op4: "<type 'bool'>",
  ans: "<class 'bool'>"
},
{
  ques: "Which of the following is not a valid logical operator in Python?",
  quesType: "mcq",
  op1: "and",
  op2: "or",
  op3: "not",
  op4: "maybe",
  ans: "maybe"
},
{
  ques: "Which of these is a Python boolean value?",
  quesType: "mcq",
  op1: "Yes",
  op2: "True",
  op3: "true",
  op4: "T",
  ans: "True"
},
{
  ques: "What is the output of: print(10 == '10')?",
  quesType: "mcq",
  op1: "True",
  op2: "False",
  op3: "10",
  op4: "Error",
  ans: "False"
},
{
  ques: "Which keyword is used to create a class?",
  quesType: "mcq",
  op1: "class",
  op2: "object",
  op3: "define",
  op4: "function",
  ans: "class"
},
{
  ques: "Which of the following is not a valid Python data type?",
  quesType: "mcq",
  op1: "list",
  op2: "set",
  op3: "array",
  op4: "tuple",
  ans: "array"
},
{
  ques: "Which operator is used to multiply numbers in Python?",
  quesType: "mcq",
  op1: "%",
  op2: "x",
  op3: "*",
  op4: "**",
  ans: "*"
},
{
  ques: "What does the `range()` function return?",
  quesType: "mcq",
  op1: "list",
  op2: "tuple",
  op3: "range object",
  op4: "iterator",
  ans: "range object"
},
{
  ques: "What will be the output of: print(5 > 10)?",
  quesType: "mcq",
  op1: "True",
  op2: "False",
  op3: "5",
  op4: "10",
  ans: "False"
},
{
  ques: "Which of the following is not a loop in Python?",
  quesType: "mcq",
  op1: "for",
  op2: "while",
  op3: "loop",
  op4: "none of these",
  ans: "loop"
},
{
  ques: "What is the value of: 3 + 2 * 2?",
  quesType: "mcq",
  op1: "10",
  op2: "7",
  op3: "8",
  op4: "12",
  ans: "7"
},
{
  ques: "Which keyword is used for exception handling?",
  quesType: "mcq",
  op1: "handle",
  op2: "try",
  op3: "check",
  op4: "except",
  ans: "try"
},
{
  ques: "What is the output of: print(int(5.9))?",
  quesType: "mcq",
  op1: "6",
  op2: "5",
  op3: "5.9",
  op4: "Error",
  ans: "5"
},
{
  ques: "Which of these is not a valid loop control keyword?",
  quesType: "mcq",
  op1: "continue",
  op2: "exit",
  op3: "break",
  op4: "pass",
  ans: "exit"
},
{
  ques: "What is the output of: print(len('abcde'))?",
  quesType: "mcq",
  op1: "4",
  op2: "5",
  op3: "6",
  op4: "Error",
  ans: "5"
},
{
  ques: "Which method converts a string to lowercase?",
  quesType: "mcq",
  op1: "lower()",
  op2: "uppercase()",
  op3: "downcase()",
  op4: "smallcase()",
  ans: "lower()"
}
,
{
  ques: "Fill in the blank: x = _____(5.5) converts float to int",
  quesType: "fill",
  ans: "int"
},
{
  ques: "What is the output of: print('A' * 5)?",
  quesType: "fill",
  ans: "AAAAA"
},
{
  ques: "Which function is used to round a number?",
  quesType: "fill",
  ans: "round"
},
{
  ques: "What will be printed: print(2 ** 4)?",
  quesType: "fill",
  ans: "16"
},
{
  ques: "What is the output of: print(type('123'))?",
  quesType: "fill",
  ans: "<class 'str'>"
},
{
  ques: "Which keyword is used to define a module?",
  quesType: "fill",
  ans: "import"
},
{
  ques: "What is the output of: print('Hello'[1])?",
  quesType: "fill",
  ans: "e"
},
{
  ques: "Fill in the blank: myList._____(4) adds item to the list",
  quesType: "fill",
  ans: "append"
},
{
  ques: "What will be printed: print(10 >= 10)?",
  quesType: "fill",
  ans: "True"
},
{
  ques: "Which function is used to find the smallest value?",
  quesType: "fill",
  ans: "min"
},
{
  ques: "What is the result of: print(20 / 4)?",
  quesType: "fill",
  ans: "5.0"
},
{
  ques: "What is the result of: 3 + 5 * 2?",
  quesType: "fill",
  ans: "13"
},
{
  ques: "What will be printed: print('py'.upper())?",
  quesType: "fill",
  ans: "PY"
},
{
  ques: "What is the output of: print(len(' '))?",
  quesType: "fill",
  ans: "1"
},
{
  ques: "Fill in the blank: x = [1, 2, 3]; x._____(1) removes 1 from list",
  quesType: "fill",
  ans: "remove"
},
{
  ques: "Which keyword is used to define a condition if previous is false?",
  quesType: "fill",
  ans: "elif"
},
{
  ques: "What is the output of: print('abc'.isalpha())?",
  quesType: "fill",
  ans: "True"
},
{
  ques: "Fill in the blank: _____ 'Python' == 'python'",
  quesType: "fill",
  ans: "not"
},
{
  ques: "What is the output of: print(4 != 5)?",
  quesType: "fill",
  ans: "True"
},
{
  ques: "Fill in the blank: ____ 5 > 3: print('Yes')",
  quesType: "fill",
  ans: "if"
}
,
{
  ques: "Which function returns the absolute value?",
  quesType: "mcq",
  op1: "abs()",
  op2: "fabs()",
  op3: "absolute()",
  op4: "value()",
  ans: "abs()"
},
{
  ques: "Which keyword is used to create a generator?",
  quesType: "mcq",
  op1: "yield",
  op2: "generate",
  op3: "return",
  op4: "pass",
  ans: "yield"
},
{
  ques: "What is the output of: print(type({}))?",
  quesType: "mcq",
  op1: "<class 'dict'>",
  op2: "<class 'set'>",
  op3: "<class 'list'>",
  op4: "<class 'tuple'>",
  ans: "<class 'dict'>"
},
{
  ques: "Which module is used for regular expressions in Python?",
  quesType: "mcq",
  op1: "regex",
  op2: "pyregex",
  op3: "re",
  op4: "express",
  ans: "re"
},
{
  ques: "What is the output of: print(4 < 4)?",
  quesType: "mcq",
  op1: "True",
  op2: "False",
  op3: "Error",
  op4: "None",
  ans: "False"
},
{
  ques: "What is the output of: print(None == 0)?",
  quesType: "mcq",
  op1: "True",
  op2: "False",
  op3: "None",
  op4: "Error",
  ans: "False"
},
{
  ques: "Which symbol is used for floor division?",
  quesType: "mcq",
  op1: "/",
  op2: "//",
  op3: "%%",
  op4: "**",
  ans: "//"
},
{
  ques: "What is the output of: print(True + False)?",
  quesType: "mcq",
  op1: "1",
  op2: "TrueFalse",
  op3: "0",
  op4: "Error",
  ans: "1"
},
{
  ques: "What does list('abc') return?",
  quesType: "mcq",
  op1: "['abc']",
  op2: "['a','b','c']",
  op3: "('a','b','c')",
  op4: "{'a','b','c'}",
  ans: "['a','b','c']"
},
{
  ques: "Which statement is used to handle exceptions?",
  quesType: "mcq",
  op1: "try-except",
  op2: "catch",
  op3: "trap",
  op4: "handle",
  ans: "try-except"
},
{
  ques: "Which operator is used for exponentiation?",
  quesType: "mcq",
  op1: "^",
  op2: "**",
  op3: "exp",
  op4: "^^",
  ans: "**"
},
{
  ques: "What will be the output of: print(3 and 0)?",
  quesType: "mcq",
  op1: "True",
  op2: "0",
  op3: "3",
  op4: "False",
  ans: "0"
},
{
  ques: "Which method returns the index of a value in a list?",
  quesType: "mcq",
  op1: "index()",
  op2: "find()",
  op3: "locate()",
  op4: "search()",
  ans: "index()"
},
{
  ques: "What is the default return value of a function with no return?",
  quesType: "mcq",
  op1: "0",
  op2: "None",
  op3: "''",
  op4: "undefined",
  ans: "None"
},
{
  ques: "What does `is` check for in Python?",
  quesType: "mcq",
  op1: "Equality",
  op2: "Identity",
  op3: "Existence",
  op4: "Type",
  ans: "Identity"
},
{
  ques: "Which of these is used to define a block in Python?",
  quesType: "mcq",
  op1: "curly braces",
  op2: "semicolon",
  op3: "indentation",
  op4: "parenthesis",
  ans: "indentation"
},
{
  ques: "Which method is used to convert a list to a string?",
  quesType: "mcq",
  op1: "join()",
  op2: "concat()",
  op3: "merge()",
  op4: "combine()",
  ans: "join()"
},
{
  ques: "What is the output of: print(0 or 1)?",
  quesType: "mcq",
  op1: "1",
  op2: "0",
  op3: "True",
  op4: "False",
  ans: "1"
},
{
  ques: "Which of the following is a keyword in Python?",
  quesType: "mcq",
  op1: "define",
  op2: "lambda",
  op3: "include",
  op4: "var",
  ans: "lambda"
},
{
  ques: "Which module provides date and time functions?",
  quesType: "mcq",
  op1: "calendar",
  op2: "datetime",
  op3: "timeutils",
  op4: "clock",
  ans: "datetime"
},
{
  ques: "Which function is used to convert to a float?",
  quesType: "mcq",
  op1: "float()",
  op2: "int()",
  op3: "double()",
  op4: "toFloat()",
  ans: "float()"
},
{
  ques: "What is the output of: bool([])?",
  quesType: "mcq",
  op1: "True",
  op2: "False",
  op3: "None",
  op4: "[]",
  ans: "False"
},
{
  ques: "Which keyword is used to define inheritance?",
  quesType: "mcq",
  op1: "inherits",
  op2: "extends",
  op3: "super",
  op4: "class",
  ans: "class"
},
{
  ques: "Which one is used for single-line comments?",
  quesType: "mcq",
  op1: "//",
  op2: "#",
  op3: "/* */",
  op4: "<!-- -->",
  ans: "#"
},
{
  ques: "Which function gives power of a number?",
  quesType: "mcq",
  op1: "power()",
  op2: "exponent()",
  op3: "pow()",
  op4: "exp()",
  ans: "pow()"
},
{
  ques: "What is the result of: print(10 % 4)?",
  quesType: "mcq",
  op1: "0",
  op2: "2",
  op3: "4",
  op4: "6",
  ans: "2"
},
{
  ques: "Which method changes all string characters to upper case?",
  quesType: "mcq",
  op1: "upper()",
  op2: "capitalize()",
  op3: "big()",
  op4: "up()",
  ans: "upper()"
},
{
  ques: "What is the output of: bool('False')?",
  quesType: "mcq",
  op1: "False",
  op2: "True",
  op3: "None",
  op4: "Error",
  ans: "True"
},
{
  ques: "Which function is used to create an anonymous function?",
  quesType: "mcq",
  op1: "lambda",
  op2: "def",
  op3: "anon",
  op4: "none",
  ans: "lambda"
},
{
  ques: "What does 'pass' do in Python?",
  quesType: "mcq",
  op1: "Terminates loop",
  op2: "Skips to next",
  op3: "Does nothing",
  op4: "Pauses code",
  ans: "Does nothing"
},
{
  ques: "Which method is used to get dictionary keys?",
  quesType: "mcq",
  op1: "getKeys()",
  op2: "keys()",
  op3: "allKeys()",
  op4: "keySet()",
  ans: "keys()"
},
{
  ques: "What is the output of: 3 != 3?",
  quesType: "mcq",
  op1: "False",
  op2: "True",
  op3: "None",
  op4: "3",
  ans: "False"
},
{
  ques: "Which operator is used to check membership?",
  quesType: "mcq",
  op1: "in",
  op2: "has",
  op3: "==",
  op4: "find",
  ans: "in"
},
{
  ques: "Which method adds a new key-value to a dictionary?",
  quesType: "mcq",
  op1: "add()",
  op2: "insert()",
  op3: "update()",
  op4: "append()",
  ans: "update()"
},
{
  ques: "What is the output of: 'Python'.lower()?",
  quesType: "mcq",
  op1: "PYTHON",
  op2: "python",
  op3: "Python",
  op4: "error",
  ans: "python"
},
{
  ques: "What is used to terminate a line in Python?",
  quesType: "mcq",
  op1: "semicolon",
  op2: "nothing",
  op3: "end",
  op4: "newline",
  ans: "nothing"
},
{
  ques: "Which keyword is used to skip a loop iteration?",
  quesType: "mcq",
  op1: "skip",
  op2: "pass",
  op3: "continue",
  op4: "next",
  ans: "continue"
},
{
  ques: "What is the output of: print(type((1,)))?",
  quesType: "mcq",
  op1: "<class 'list'>",
  op2: "<class 'tuple'>",
  op3: "<class 'int'>",
  op4: "<class 'str'>",
  ans: "<class 'tuple'>"
},
{
  ques: "What is the result of: len({'a': 1, 'b': 2})?",
  quesType: "mcq",
  op1: "2",
  op2: "1",
  op3: "3",
  op4: "Error",
  ans: "2"
}
,
{
  ques: "Fill in the blank to create a list: myList = ______",
  quesType: "fill",
  ans: "[1, 2, 3]"
},
{
  ques: "What is the output of: print(2 + 3 * 2)?",
  quesType: "fill",
  ans: "8"
},
{
  ques: "What is the result of: print('Hello'.lower())?",
  quesType: "fill",
  ans: "hello"
},
{
  ques: "Fill in the blank: my_dict = {'a': 1}; print(my_dict._______('a'))",
  quesType: "fill",
  ans: "get"
},
{
  ques: "What will be the result of: print(len('12345'))?",
  quesType: "fill",
  ans: "5"
},
{
  ques: "Fill in the blank to slice string: 'Python'[0:2] returns ______",
  quesType: "fill",
  ans: "Py"
},
{
  ques: "What is the output of: print(9 // 2)?",
  quesType: "fill",
  ans: "4"
},
{
  ques: "Which keyword is used to define a class in Python?",
  quesType: "fill",
  ans: "class"
},
{
  ques: "Fill in the blank to get the last element: list1[-1] returns ______",
  quesType: "fill",
  ans: "last element"
},
{
  ques: "What will be printed: print('abc'[1])?",
  quesType: "fill",
  ans: "b"
},
{
  ques: "Fill in the blank: myList.________() removes last element",
  quesType: "fill",
  ans: "pop"
},
{
  ques: "What is the output of: print(type(3.5))?",
  quesType: "fill",
  ans: "<class 'float'>"
},
{
  ques: "Which function is used to get user input?",
  quesType: "fill",
  ans: "input"
},
{
  ques: "Which operator is used to compare values for equality?",
  quesType: "fill",
  ans: "=="
},
{
  ques: "What is the result of: print('abc'.replace('a', 'z'))?",
  quesType: "fill",
  ans: "zbc"
},
{
  ques: "Fill in the blank: ______(10.6) → rounds to nearest int",
  quesType: "fill",
  ans: "round"
},
{
  ques: "Which method checks if a string is numeric?",
  quesType: "fill",
  ans: "isnumeric"
},
{
  ques: "Fill in the blank: print(type(())) gives ______",
  quesType: "fill",
  ans: "<class 'tuple'>"
},
{
  ques: "Fill in the blank to convert list to set: set([1,2,3]) → ______",
  quesType: "fill",
  ans: "{1, 2, 3}"
},
{
  ques: "What does len('') return?",
  quesType: "fill",
  ans: "0"
},
{
  ques: "What is the output of: print(3 != 3)?",
  quesType: "fill",
  ans: "False"
},
{
  ques: "Fill in the blank: a = {1, 2, 3}; a.______(4) adds 4",
  quesType: "fill",
  ans: "add"
},
{
  ques: "What does int('7') return?",
  quesType: "fill",
  ans: "7"
},
{
  ques: "What is the output of: print('a' not in 'apple')?",
  quesType: "fill",
  ans: "False"
},
{
  ques: "Which keyword is used to define anonymous functions?",
  quesType: "fill",
  ans: "lambda"
},
{
  ques: "What is the output of: 3 ** 3?",
  quesType: "fill",
  ans: "27"
},
{
  ques: "What is the output of: bool('')?",
  quesType: "fill",
  ans: "False"
},
{
  ques: "Fill in the blank: ______ 'x' in 'text'",
  quesType: "fill",
  ans: "print"
},
{
  ques: "Which keyword is used to start an exception block?",
  quesType: "fill",
  ans: "try"
},
{
  ques: "Which string method removes spaces from both ends?",
  quesType: "fill",
  ans: "strip"
},
{
  ques: "What is the output of: print(5 > 3 and 2 < 1)?",
  quesType: "fill",
  ans: "False"
},
{
  ques: "Fill in the blank: x = ['a', 'b']; x.______('c') adds item",
  quesType: "fill",
  ans: "append"
},
{
  ques: "What is the output of: type(5) == int?",
  quesType: "fill",
  ans: "False"
},
{
  ques: "Fill in the blank: from math import ______ (to use pi)",
  quesType: "fill",
  ans: "pi"
},
{
  ques: "Fill in the blank: my_dict = {}; type(my_dict) → ______",
  quesType: "fill",
  ans: "<class 'dict'>"
},
{
  ques: "What is the output of: print('a' * 3)?",
  quesType: "fill",
  ans: "aaa"
},
{
  ques: "Which method splits a string into list?",
  quesType: "fill",
  ans: "split"
},
{
  ques: "What does '5'.isdigit() return?",
  quesType: "fill",
  ans: "True"
},
{
  ques: "Fill in the blank: list1 = [1,2]; list1 += [3] → ______",
  quesType: "fill",
  ans: "[1, 2, 3]"
},
{
  ques: "What is the output of: print(True and False)?",
  quesType: "fill",
  ans: "False"
}
,
{
  ques: "Which keyword is used to define a function in Python?",
  quesType: "mcq",
  op1: "fun",
  op2: "define",
  op3: "def",
  op4: "function",
  ans: "def"
},
{
  ques: "What is the default value of variables in Python?",
  quesType: "mcq",
  op1: "0",
  op2: "null",
  op3: "None",
  op4: "undefined",
  ans: "None"
},
{
  ques: "Which built-in function returns the largest item?",
  quesType: "mcq",
  op1: "big()",
  op2: "max()",
  op3: "largest()",
  op4: "greatest()",
  ans: "max()"
},
{
  ques: "Which method converts a string into a list?",
  quesType: "mcq",
  op1: "convert()",
  op2: "split()",
  op3: "list()",
  op4: "break()",
  ans: "split()"
},
{
  ques: "Which of these is a mutable data type?",
  quesType: "mcq",
  op1: "tuple",
  op2: "str",
  op3: "list",
  op4: "int",
  ans: "list"
},
{
  ques: "What is the keyword used to check conditions?",
  quesType: "mcq",
  op1: "when",
  op2: "check",
  op3: "if",
  op4: "condition",
  ans: "if"
},
{
  ques: "Which symbol is used for comments in Python?",
  quesType: "mcq",
  op1: "#",
  op2: "//",
  op3: "--",
  op4: ";",
  ans: "#"
},
{
  ques: "Which of the following is a Python tuple?",
  quesType: "mcq",
  op1: "{1,2}",
  op2: "[1,2]",
  op3: "(1,2)",
  op4: "<1,2>",
  ans: "(1,2)"
},
{
  ques: "Which loop runs as long as a condition is true?",
  quesType: "mcq",
  op1: "repeat",
  op2: "for",
  op3: "while",
  op4: "loop",
  ans: "while"
},
{
  ques: "What is the output of: print(bool(0))?",
  quesType: "mcq",
  op1: "True",
  op2: "False",
  op3: "0",
  op4: "None",
  ans: "False"
},
{
  ques: "Which built-in function returns the type of an object?",
  quesType: "mcq",
  op1: "typeof()",
  op2: "kind()",
  op3: "type()",
  op4: "what()",
  ans: "type()"
},
{
  ques: "Which function is used to convert int to string?",
  quesType: "mcq",
  op1: "convert()",
  op2: "intstr()",
  op3: "str()",
  op4: "string()",
  ans: "str()"
},
{
  ques: "Which of the following is not a keyword?",
  quesType: "mcq",
  op1: "elif",
  op2: "True",
  op3: "None",
  op4: "print",
  ans: "print"
},
{
  ques: "Which function is used to get length of string?",
  quesType: "mcq",
  op1: "count()",
  op2: "length()",
  op3: "len()",
  op4: "size()",
  ans: "len()"
},
{
  ques: "What is the result of 10 / 5?",
  quesType: "mcq",
  op1: "2.0",
  op2: "2",
  op3: "5",
  op4: "10",
  ans: "2.0"
},
{
  ques: "Which operator checks identity?",
  quesType: "mcq",
  op1: "==",
  op2: "=",
  op3: "is",
  op4: "===",
  ans: "is"
},
{
  ques: "Which is used to terminate a loop immediately?",
  quesType: "mcq",
  op1: "pass",
  op2: "end",
  op3: "break",
  op4: "continue",
  ans: "break"
},
{
  ques: "Which of these opens a file for reading?",
  quesType: "mcq",
  op1: "'w'",
  op2: "'a'",
  op3: "'r'",
  op4: "'x'",
  ans: "'r'"
},
{
  ques: "Which exception is raised when index is out of range?",
  quesType: "mcq",
  op1: "KeyError",
  op2: "IndexError",
  op3: "ValueError",
  op4: "TypeError",
  ans: "IndexError"
},
{
  ques: "What is the value of 5 % 2?",
  quesType: "mcq",
  op1: "0",
  op2: "1",
  op3: "2",
  op4: "5",
  ans: "1"
},
{
  ques: "Which function gives ASCII code of a character?",
  quesType: "mcq",
  op1: "ord()",
  op2: "ascii()",
  op3: "asc()",
  op4: "char()",
  ans: "ord()"
},
{
  ques: "Which function gives character from ASCII code?",
  quesType: "mcq",
  op1: "chr()",
  op2: "char()",
  op3: "ord()",
  op4: "string()",
  ans: "chr()"
},
{
  ques: "What is the result of: True or False?",
  quesType: "mcq",
  op1: "True",
  op2: "False",
  op3: "None",
  op4: "0",
  ans: "True"
},
{
  ques: "Which method returns all values of a dictionary?",
  quesType: "mcq",
  op1: "getValues()",
  op2: "vals()",
  op3: "values()",
  op4: "all()",
  ans: "values()"
},
{
  ques: "Which data type does not allow duplicates?",
  quesType: "mcq",
  op1: "list",
  op2: "set",
  op3: "tuple",
  op4: "dict",
  ans: "set"
},
{
  ques: "Which method is used to remove all items from a list?",
  quesType: "mcq",
  op1: "delete()",
  op2: "remove()",
  op3: "clear()",
  op4: "popall()",
  ans: "clear()"
},
{
  ques: "Which method returns number of times an item appears?",
  quesType: "mcq",
  op1: "count()",
  op2: "repeat()",
  op3: "times()",
  op4: "find()",
  ans: "count()"
},
{
  ques: "Which keyword is used to check if variable exists in list?",
  quesType: "mcq",
  op1: "has",
  op2: "in",
  op3: "exists",
  op4: "with",
  ans: "in"
},
{
  ques: "Which method can be used to sort a list?",
  quesType: "mcq",
  op1: "order()",
  op2: "arrange()",
  op3: "sort()",
  op4: "lineup()",
  ans: "sort()"
},
{
  ques: "What will be the result of: 2 ** 0?",
  quesType: "mcq",
  op1: "0",
  op2: "1",
  op3: "2",
  op4: "None",
  ans: "1"
}

,
{
  ques: "Fill in the blank: x = _______  # Assigns a None value",
  quesType: "fill",
  ans: "None"
},
{
  ques: "Fill in the blank: 'Hello World'.________() → 'HELLO WORLD'",
  quesType: "fill",
  ans: "upper"
},
{
  ques: "Fill in the blank: ________ x in range(5):",
  quesType: "fill",
  ans: "for"
},
{
  ques: "Fill in the blank: ________ 5 > 2: print('Yes')",
  quesType: "fill",
  ans: "if"
},
{
  ques: "What is the result of: 4 + 3 * 2?",
  quesType: "fill",
  ans: "10"
},
{
  ques: "What does int('123') return?",
  quesType: "fill",
  ans: "123"
},
{
  ques: "Which function is used to find minimum value?",
  quesType: "fill",
  ans: "min"
},
{
  ques: "Fill in the blank: print(_______(10.99)) → 10",
  quesType: "fill",
  ans: "int"
},
{
  ques: "What is the output of: print('2' + '2')?",
  quesType: "fill",
  ans: "22"
},
{
  ques: "What does print(2 == 2) return?",
  quesType: "fill",
  ans: "True"
},
{
  ques: "What is the type of: type([])?",
  quesType: "fill",
  ans: "<class 'list'>"
},
{
  ques: "Which string method capitalizes the first letter?",
  quesType: "fill",
  ans: "capitalize"
},
{
  ques: "What is the output of: 5 != 5?",
  quesType: "fill",
  ans: "False"
},
{
  ques: "Which function prints data in console?",
  quesType: "fill",
  ans: "print"
},
{
  ques: "Fill in the blank: my_set = {1, 2, 3}; my_set.______(2)",
  quesType: "fill",
  ans: "remove"
},
{
  ques: "What is the result of: 4 * 3?",
  quesType: "fill",
  ans: "12"
},
{
  ques: "What is the result of: 9 // 2?",
  quesType: "fill",
  ans: "4"
},
{
  ques: "What does type('5') return?",
  quesType: "fill",
  ans: "<class 'str'>"
},
{
  ques: "What is returned by input() by default?",
  quesType: "fill",
  ans: "str"
},
{
  ques: "Fill in the blank: x = [1, 2]; x.________(1) → [2]",
  quesType: "fill",
  ans: "remove"
},
{
  ques: "What is the result of: len('Nanda')?",
  quesType: "fill",
  ans: "5"
},
{
  ques: "What does 'abc'.isalpha() return?",
  quesType: "fill",
  ans: "True"
},
{
  ques: "What is the output of: print(10 >= 5)?",
  quesType: "fill",
  ans: "True"
},
{
  ques: "Fill in the blank: from math import _______  # square root etc.",
  quesType: "fill",
  ans: "sqrt"
},
{
  ques: "What is the output of: print(bool(1))?",
  quesType: "fill",
  ans: "True"
},
{
  ques: "Fill in the blank: ________ is used to raise errors manually",
  quesType: "fill",
  ans: "raise"
},
{
  ques: "What is the result of: 'a' in 'apple'?",
  quesType: "fill",
  ans: "True"
},
{
  ques: "What is the result of: 15 % 4?",
  quesType: "fill",
  ans: "3"
},
{
  ques: "Fill in the blank: def greet(): ______ 'Hello'",
  quesType: "fill",
  ans: "return"
},
{
  ques: "What is the result of: len([])?",
  quesType: "fill",
  ans: "0"
}


]

let codingpy2Arr=[
  {
  ques: "What is the output of: print(10 and 0 or 5)?",
  quesType: "mcq",
  op1: "0",
  op2: "5",
  op3: "10",
  op4: "True",
  ans: "5"
},
{
  ques: "Which of the following statements creates a shallow copy of a list?",
  quesType: "mcq",
  op1: "list2 = list1.copy()",
  op2: "list2 = list(list1)",
  op3: "list2 = list1[:] ",
  op4: "All of the above",
  ans: "All of the above"
},
{
  ques: "Which of the following is not iterable in Python?",
  quesType: "mcq",
  op1: "list",
  op2: "int",
  op3: "string",
  op4: "tuple",
  ans: "int"
},
{
  ques: "What does the expression 'a' * 3 return?",
  quesType: "mcq",
  op1: "aaa",
  op2: "a3",
  op3: "Error",
  op4: "None",
  ans: "aaa"
},
{
  ques: "Which method can be used to convert a string to a float?",
  quesType: "mcq",
  op1: "strToFloat()",
  op2: "float()",
  op3: "parseFloat()",
  op4: "toFloat()",
  ans: "float()"
},
{
  ques: "Which built-in module provides file path operations?",
  quesType: "mcq",
  op1: "sys",
  op2: "os",
  op3: "path",
  op4: "file",
  ans: "os"
},
{
  ques: "What is the output of: print(bool([]) == False)?",
  quesType: "mcq",
  op1: "True",
  op2: "False",
  op3: "None",
  op4: "Error",
  ans: "True"
},
{
  ques: "Which of the following is used to define a private member in a class?",
  quesType: "mcq",
  op1: "__var",
  op2: "private var",
  op3: "var__",
  op4: "_var",
  ans: "__var"
},
{
  ques: "Which keyword is used to inherit a class in Python?",
  quesType: "mcq",
  op1: "inherit",
  op2: "extends",
  op3: "is",
  op4: "class",
  ans: "class"
},
{
  ques: "What does the zip() function do?",
  quesType: "mcq",
  op1: "Compress data",
  op2: "Combine iterables",
  op3: "Encrypt data",
  op4: "Extract files",
  ans: "Combine iterables"
},
{
  ques: "What is the output of: print(2 < 3 < 4)?",
  quesType: "mcq",
  op1: "True",
  op2: "False",
  op3: "Error",
  op4: "None",
  ans: "True"
},
{
  ques: "Which operator has the highest precedence in Python?",
  quesType: "mcq",
  op1: "+",
  op2: "**",
  op3: "*",
  op4: "//",
  ans: "**"
},
{
  ques: "Which statement is true about Python functions?",
  quesType: "mcq",
  op1: "They can return multiple values",
  op2: "They cannot return values",
  op3: "They must return only integers",
  op4: "They require a return statement",
  ans: "They can return multiple values"
},
{
  ques: "What is the output of: print(len(set([1, 2, 2, 3])))?",
  quesType: "mcq",
  op1: "3",
  op2: "4",
  op3: "2",
  op4: "Error",
  ans: "3"
},
{
  ques: "Which function returns the memory address of an object?",
  quesType: "mcq",
  op1: "memory()",
  op2: "ref()",
  op3: "id()",
  op4: "addr()",
  ans: "id()"
},
{
  ques: "Which built-in function helps with sorting based on keys?",
  quesType: "mcq",
  op1: "map()",
  op2: "filter()",
  op3: "sorted()",
  op4: "zip()",
  ans: "sorted()"
},
{
  ques: "Which Python keyword is used to create an iterator class?",
  quesType: "mcq",
  op1: "next",
  op2: "iter",
  op3: "__iter__",
  op4: "yield",
  ans: "__iter__"
},
{
  ques: "What does the 'enumerate()' function return?",
  quesType: "mcq",
  op1: "Only values",
  op2: "Only indexes",
  op3: "Both index and value",
  op4: "Nothing",
  ans: "Both index and value"
},
{
  ques: "What is the output of: print('5' + str(5))?",
  quesType: "mcq",
  op1: "55",
  op2: "10",
  op3: "Error",
  op4: "None",
  ans: "55"
},
{
  ques: "What is the data type of: range(5)?",
  quesType: "mcq",
  op1: "list",
  op2: "tuple",
  op3: "range",
  op4: "int",
  ans: "range"
},
{
  ques: "Which is used to define default arguments in a function?",
  quesType: "mcq",
  op1: "default",
  op2: "=",
  op3: ":",
  op4: "?",
  ans: "="
},
{
  ques: "Which method checks if a string starts with a value?",
  quesType: "mcq",
  op1: "starts()",
  op2: "startswith()",
  op3: "begin()",
  op4: "startwith()",
  ans: "startswith()"
},
{
  ques: "What will be the result of: print(bool(' '))?",
  quesType: "mcq",
  op1: "True",
  op2: "False",
  op3: "None",
  op4: "Error",
  ans: "True"
},
{
  ques: "Which keyword is used for context managers?",
  quesType: "mcq",
  op1: "context",
  op2: "with",
  op3: "open",
  op4: "file",
  ans: "with"
},
{
  ques: "What is the output of: list(map(str, [1, 2, 3]))?",
  quesType: "mcq",
  op1: "['1','2','3']",
  op2: "[1,2,3]",
  op3: "['str', 'str', 'str']",
  op4: "Error",
  ans: "['1','2','3']"
},
{
  ques: "Which exception is raised when a variable is not defined?",
  quesType: "mcq",
  op1: "KeyError",
  op2: "NameError",
  op3: "ValueError",
  op4: "IndexError",
  ans: "NameError"
},
{
  ques: "What is the result of: 2 ** 3 ** 2?",
  quesType: "mcq",
  op1: "512",
  op2: "64",
  op3: "36",
  op4: "16",
  ans: "512"
},
{
  ques: "Which keyword is used to define a generator?",
  quesType: "mcq",
  op1: "def",
  op2: "generate",
  op3: "yield",
  op4: "lambda",
  ans: "yield"
},
{
  ques: "Which function is used to combine two lists into a dictionary?",
  quesType: "mcq",
  op1: "zip()",
  op2: "dict()",
  op3: "combine()",
  op4: "merge()",
  ans: "dict()"
},
{
  ques: "Which function helps convert string to integer safely?",
  quesType: "mcq",
  op1: "int()",
  op2: "safeint()",
  op3: "float()",
  op4: "parse()",
  ans: "int()"
},
{
  ques: "Fill in the blank: def greet(name): return 'Hello ' + ______",
  quesType: "fill",
  ans: "name"
},
{
  ques: "What will be the output of: print(type((1)))?",
  quesType: "fill",
  ans: "<class 'int'>"
},
{
  ques: "Fill in the blank: x = [1,2,3]; x = x[::-1] gives ______",
  quesType: "fill",
  ans: "[3, 2, 1]"
},
{
  ques: "What is the output of: print('nanda'.capitalize())?",
  quesType: "fill",
  ans: "Nanda"
},
{
  ques: "Fill in the blank: 'Python'.replace('Py', 'Na') → ______",
  quesType: "fill",
  ans: "Nathon"
},
{
  ques: "What is the output of: list('NaNdA')?",
  quesType: "fill",
  ans: "['N', 'a', 'N', 'd', 'A']"
},
{
  ques: "Fill in the blank: x = {'name': 'Nanda'}; print(x['____'])",
  quesType: "fill",
  ans: "name"
},
{
  ques: "Which method adds a key-value pair to a dictionary?",
  quesType: "fill",
  ans: "update"
},
{
  ques: "Fill in the blank: print(2 ** 3 ** 1) returns ______",
  quesType: "fill",
  ans: "8"
},
{
  ques: "Fill in the blank: def add(a=1, b=2): return a + b; add() returns ______",
  quesType: "fill",
  ans: "3"
},
{
  ques: "Which function returns sorted list: ______([3,1,2]) → [1,2,3]",
  quesType: "fill",
  ans: "sorted"
},
{
  ques: "Which module provides time delay functions?",
  quesType: "fill",
  ans: "time"
},
{
  ques: "Fill in the blank: print(bool('Nanda')) → ______",
  quesType: "fill",
  ans: "True"
},
{
  ques: "Fill in the blank: 'Nanda'.startswith('Na') → ______",
  quesType: "fill",
  ans: "True"
},
{
  ques: "Which function is used to convert list to tuple?",
  quesType: "fill",
  ans: "tuple"
},
{
  ques: "What is the output: print(bool([]) or True)?",
  quesType: "fill",
  ans: "True"
},
{
  ques: "Fill in the blank: name = 'Nanda'; print(name[-1]) → ______",
  quesType: "fill",
  ans: "a"
},
{
  ques: "What does x = {x for x in range(3)} create?",
  quesType: "fill",
  ans: "set"
},
{
  ques: "Fill in the blank: '   Nanda  '.strip() → ______",
  quesType: "fill",
  ans: "Nanda"
},
{
  ques: "What is returned by range(2, 10, 2)?",
  quesType: "fill",
  ans: "[2, 4, 6, 8]"
},
{
  ques: "Fill in the blank: [1,2,3] == [1,2,3] → ______",
  quesType: "fill",
  ans: "True"
},
{
  ques: "Fill in the blank: from math import ______ to get square root",
  quesType: "fill",
  ans: "sqrt"
},
{
  ques: "Fill in the blank: print(ord('N')) → ______",
  quesType: "fill",
  ans: "78"
},
{
  ques: "What is the output: len(set('Nanda'))?",
  quesType: "fill",
  ans: "4"
},
{
  ques: "Fill in the blank: def call(): yield 'Hi Nanda'; next(call()) → ______",
  quesType: "fill",
  ans: "Hi Nanda"
},
{
  ques: "What is the data type of {}?",
  quesType: "fill",
  ans: "<class 'dict'>"
},
{
  ques: "What does print(isinstance(5.0, int)) return?",
  quesType: "fill",
  ans: "False"
},
{
  ques: "Fill in the blank: list(map(int, ['1','2'])) → ______",
  quesType: "fill",
  ans: "[1, 2]"
},
{
  ques: "What does range(0) return?",
  quesType: "fill",
  ans: "[]"
},
{
  ques: "Fill in the blank: mylist = ['n','a']; print(''.join(mylist)) → ______",
  quesType: "fill",
  ans: "na"
}
,
{
  ques: "What is the output of: print((lambda x: x * 2)(5))?",
  quesType: "mcq",
  op1: "5",
  op2: "10",
  op3: "TypeError",
  op4: "None",
  ans: "10"
},
{
  ques: "Which of these statements about generators is false?",
  quesType: "mcq",
  op1: "They use yield",
  op2: "They return a list",
  op3: "They are lazy",
  op4: "They implement __next__",
  ans: "They return a list"
},
{
  ques: "What is the output of: print(list(range(2, 10, 3)))?",
  quesType: "mcq",
  op1: "[2,5,8]",
  op2: "[2,10]",
  op3: "[2,3,4,5,6,7,8,9]",
  op4: "[2,5,8,11]",
  ans: "[2,5,8]"
},
{
  ques: "What does __str__ do in a class?",
  quesType: "mcq",
  op1: "Stringify object",
  op2: "Initialize object",
  op3: "Equal compare",
  op4: "Destroy object",
  ans: "Stringify object"
},
{
  ques: "Which module is used to serialize objects?",
  quesType: "mcq",
  op1: "pickle",
  op2: "jsonify",
  op3: "marshal",
  op4: "serialize",
  ans: "pickle"
},
{
  ques: "What is the result of: bool({0: 'zero'})?",
  quesType: "mcq",
  op1: "True",
  op2: "False",
  op3: "None",
  op4: "Error",
  ans: "True"
},
{
  ques: "Which of these methods returns the number of bits needed to represent an int?",
  quesType: "mcq",
  op1: "bit_length()",
  op2: "bits()",
  op3: "binary()",
  op4: "length()",
  ans: "bit_length()"
},
{
  ques: "Which function filters elements from an iterable?",
  quesType: "mcq",
  op1: "map()",
  op2: "zip()",
  op3: "filter()",
  op4: "reduce()",
  ans: "filter()"
},
{
  ques: "What is the output of: print({1,2} & {2,3})?",
  quesType: "mcq",
  op1: "{1,2,3}",
  op2: "{2}",
  op3: "{1,3}",
  op4: "None",
  ans: "{2}"
},
{
  ques: "Which of these triggers a KeyError?",
  quesType: "mcq",
  op1: "d.get('x')",
  op2: "d['x']",
  op3: "'x' in d",
  op4: "d.setdefault('x')",
  ans: "d['x']"
},
{
  ques: "What is output of: print([i**2 for i in range(3)])?",
  quesType: "mcq",
  op1: "[1,4,9]",
  op2: "[0,1,4]",
  op3: "[2,4,6]",
  op4: "Error",
  ans: "[0,1,4]"
},
{
  ques: "Which module provides date parsing utilities?",
  quesType: "mcq",
  op1: "datetime",
  op2: "time",
  op3: "re",
  op4: "dateutil",
  ans: "dateutil"
},
{
  ques: "What does pass do inside an empty class?",
  quesType: "mcq",
  op1: "Does nothing placeholder",
  op2: "Raises error",
  op3: "Ends class definition",
  op4: "Deletes class",
  ans: "Does nothing placeholder"
},
{
  ques: "What does methods __len__ implement?",
  quesType: "mcq",
  op1: "Equality",
  op2: "Length",
  op3: "Iteration",
  op4: "Comparison",
  ans: "Length"
},
{
  ques: "Which exception catches all exceptions?",
  quesType: "mcq",
  op1: "Exception",
  op2: "BaseException",
  op3: "AllException",
  op4: "Error",
  ans: "BaseException"
},
{
  ques: "What is the output of: print(set('aab'))?",
  quesType: "mcq",
  op1: "{'a','a','b'}",
  op2: "{'a','b'}",
  op3: "['a','b']",
  op4: "None",
  ans: "{'a','b'}"
},
{
  ques: "Which function forms an iterable of tuples?",
  quesType: "mcq",
  op1: "zip()",
  op2: "map()",
  op3: "filter()",
  op4: "iter()",
  ans: "zip()"
},
{
  ques: "Which of these is mutable?",
  quesType: "mcq",
  op1: "frozenset",
  op2: "tuple",
  op3: "str",
  op4: "list",
  ans: "list"
},
{
  ques: "Which keyword ensures cleanup after execution?",
  quesType: "mcq",
  op1: "finally",
  op2: "cleanup",
  op3: "after",
  op4: "end",
  ans: "finally"
},
{
  ques: "Which is true for Python functions?",
  quesType: "mcq",
  op1: "They can have docstrings",
  op2: "They can't",
  op3: "Only modules have docstrings",
  op4: "Only classes",
  ans: "They can have docstrings"
},
{
  ques: "What is the output of: print(divmod(7,3))?",
  quesType: "mcq",
  op1: "(2,1)",
  op2: "2.33",
  op3: "(3,1)",
  op4: "None",
  ans: "(2,1)"
},
{
  ques: "Which module supports counter dictionaries?",
  quesType: "mcq",
  op1: "collections",
  op2: "counter",
  op3: "stats",
  op4: "json",
  ans: "collections"
},
{
  ques: "What is the output of: print([].pop())?",
  quesType: "mcq",
  op1: "Error",
  op2: "None",
  op3: "''",
  op4: "0",
  ans: "Error"
},
{
  ques: "What does repr() return?",
  quesType: "mcq",
  op1: "Developer-friendly string",
  op2: "User-friendly string",
  op3: "HTML",
  op4: "JSON",
  ans: "Developer-friendly string"
},
{
  ques: "What is the output of: print(*[1,2,3])?",
  quesType: "mcq",
  op1: "[1,2,3]",
  op2: "1 2 3",
  op3: "Error",
  op4: "None",
  ans: "1 2 3"
},
{
  ques: "Which decorator creates class methods?",
  quesType: "mcq",
  op1: "@staticmethod",
  op2: "@classmethod",
  op3: "@instancemethod",
  op4: "@method",
  ans: "@classmethod"
},
{
  ques: "What is the result of: print(0.1 + 0.2 == 0.3)?",
  quesType: "mcq",
  op1: "True",
  op2: "False",
  op3: "Maybe",
  op4: "Error",
  ans: "False"
},
{
  ques: "Which function reads single character input?",
  quesType: "mcq",
  op1: "getchar()",
  op2: "input(1)",
  op3: "chr()",
  op4: "No built-in",
  ans: "No built-in"
},
{
  ques: "What data type is True + True?",
  quesType: "mcq",
  op1: "bool",
  op2: "int",
  op3: "float",
  op4: "str",
  ans: "int"
},
{
  ques: "What is output of: print(type((i for i in [])))?",
  quesType: "mcq",
  op1: "<class 'list'>",
  op2: "<class 'generator'>",
  op3: "<class 'tuple'>",
  op4: "<class 'iterator'>",
  ans: "<class 'generator'>"
},
{
  ques: "Which module implements in-memory file object?",
  quesType: "mcq",
  op1: "io",
  op2: "sys",
  op3: "os",
  op4: "file",
  ans: "io"
},
{
  ques: "Which method checks if all elements are True?",
  quesType: "mcq",
  op1: "all()",
  op2: "any()",
  op3: "every()",
  op4: "each()",
  ans: "all()"
},
{
  ques: "Which of these is a coroutine keyword?",
  quesType: "mcq",
  op1: "async",
  op2: "await",
  op3: "yield from",
  op4: "All of the above",
  ans: "All of the above"
},
{
  ques: "What is the output of: print((1,2)+(3,))?",
  quesType: "mcq",
  op1: "(1,2,3)",
  op2: "[1,2,3]",
  op3: "(1,2)+(3,)",
  op4: "Error",
  ans: "(1,2,3)"
},
{
  ques: "Which function converts bytes to int?",
  quesType: "mcq",
  op1: "int.from_bytes()",
  op2: "bytes.to_int()",
  op3: "from_bytes()",
  op4: "convert()",
  ans: "int.from_bytes()"
}
,
{
  ques: "Fill in the blank: def factorial(n): return 1 if n==0 else n*factorial(_______)",
  quesType: "fill",
  ans: "n-1"
},
{
  ques: "What is output: print(','.join(str(i) for i in range(3)))?",
  quesType: "fill",
  ans: "0,1,2"
},
{
  ques: "Fill in the blank: gen = (x*x for x in range(3)); next(gen) → ______",
  quesType: "fill",
  ans: "0"
},
{
  ques: "Which keyword catches exceptions and always runs? ______",
  quesType: "fill",
  ans: "finally"
},
{
  ques: "Fill in the blank: [i for i in range(5) if i%2==0] → ______",
  quesType: "fill",
  ans: "[0, 2, 4]"
},
{
  ques: "What does '__init__' return by default? ______",
  quesType: "fill",
  ans: "None"
},
{
  ques: "Fill in the blank: text = 'Python'; print(text[-2:]) → ______",
  quesType: "fill",
  ans: "on"
},
{
  ques: "Which statement defines context manager? ______",
  quesType: "fill",
  ans: "with"
},
{
  ques: "Fill in the blank: print(type(lambda: None)) → ______",
  quesType: "fill",
  ans: "<class 'function'>"
},
{
  ques: "Which built-in returns True if any element is true? ______",
  quesType: "fill",
  ans: "any"
},
{
  ques: "Fill in the blank: tuple(range(3)) → ______",
  quesType: "fill",
  ans: "(0, 1, 2)"
},
{
  ques: "Which operator checks identity? ______",
  quesType: "fill",
  ans: "is"
},
{
  ques: "Fill in the blank: x = 5; x &= 3; x → ______",
  quesType: "fill",
  ans: "1"
},
{
  ques: "Which built-in module logs events? ______",
  quesType: "fill",
  ans: "logging"
},
{
  ques: "Fill in the blank: '1,2,3'.split(',') → ______",
  quesType: "fill",
  ans: "['1', '2', '3']"
},
{
  ques: "Which builtin returns memory address? ______(obj)",
  quesType: "fill",
  ans: "id"
},
{
  ques: "Fill in the blank: dict(a=1, b=2) → ______",
  quesType: "fill",
  ans: "{'a': 1, 'b': 2}"
},
{
  ques: "Which method returns lowercase? ______()",
  quesType: "fill",
  ans: "lower"
},
{
  ques: "Fill in the blank: set([1,2,2]) → ______",
  quesType: "fill",
  ans: "{1, 2}"
},
{
  ques: "Which keyword defines asynchronous function? ______",
  quesType: "fill",
  ans: "async"
},
{
  ques: "Fill in the blank: (1,2,3)[::-1] → ______",
  quesType: "fill",
  ans: "(3, 2, 1)"
},
{
  ques: "Which exception is thrown by int('a')? ______",
  quesType: "fill",
  ans: "ValueError"
},
{
  ques: "Fill in the blank: open('file','___') for writing → 'w'",
  quesType: "fill",
  ans: "w"
},
{
  ques: "Which built-in sorts lists in place? ______()",
  quesType: "fill",
  ans: "sort"
},
{
  ques: "Fill in the blank: [None] * 3 → ______",
  quesType: "fill",
  ans: "[None, None, None]"
},
{
  ques: "Which keyword stops only current loop? ______",
  quesType: "fill",
  ans: "continue"
},
{
  ques: "Fill in the blank: ord('A') → ______",
  quesType: "fill",
  ans: "65"
},
{
  ques: "Which builtin returns repr string? ______()",
  quesType: "fill",
  ans: "repr"
},
{
  ques: "Fill in the blank: list(filter(lambda x:x>1, [0,2,3])) → ______",
  quesType: "fill",
  ans: "[2, 3]"
},
{
  ques: "Which builtin converts to float? ______()",
  quesType: "fill",
  ans: "float"
},
{
  ques: "Fill in the blank: len({1,2,3}) → ______",
  quesType: "fill",
  ans: "3"
},
{
  ques: "Which method removes whitespace ends? ______()",
  quesType: "fill",
  ans: "strip"
},
{
  ques: "Fill in the blank: {'a':1}.keys() → ______",
  quesType: "fill",
  ans: "dict_keys(['a'])"
},
{
  ques: "Which operator adds to set? s._____(x)",
  quesType: "fill",
  ans: "add"
},
{
  ques: "Fill in the blank: len(open) returns ______ arguments count",
  quesType: "fill",
  ans: "2"
},
{
  ques: "Which statement stops exceptions? ______ Exception as e:",
  quesType: "fill",
  ans: "except"
},
{
  ques: "Fill in the blank: hasattr(obj, 'x') checks if ______",
  quesType: "fill",
  ans: "obj has attribute x"
}
,
{ ques: "What does the enumerate() function do?", quesType: "mcq", op1: "Returns index and value", op2: "Only value", op3: "Only index", op4: "Raises error", ans: "Returns index and value" },
{ ques: "Which keyword is used for exception handling?", quesType: "mcq", op1: "error", op2: "catch", op3: "except", op4: "trycatch", ans: "except" },
{ ques: "What is the output of: print(5 == '5')?", quesType: "mcq", op1: "True", op2: "False", op3: "None", op4: "Error", ans: "False" },
{ ques: "Which function is used to get the length of a list?", quesType: "mcq", op1: "size()", op2: "count()", op3: "length()", op4: "len()", ans: "len()" },
{ ques: "Which operator is used for exponentiation in Python?", quesType: "mcq", op1: "^", op2: "**", op3: "//", op4: "exp", ans: "**" },
{ ques: "Which keyword is used to define a function?", quesType: "mcq", op1: "func", op2: "define", op3: "def", op4: "function", ans: "def" },
{ ques: "Which method adds an item to the end of a list?", quesType: "mcq", op1: "add()", op2: "append()", op3: "insert()", op4: "extend()", ans: "append()" },
{ ques: "What is the result of 3 * 'Nanda'?", quesType: "mcq", op1: "Nanda3", op2: "NandaNandaNanda", op3: "Error", op4: "3", ans: "NandaNandaNanda" },
{ ques: "Which data type is immutable?", quesType: "mcq", op1: "list", op2: "set", op3: "tuple", op4: "dict", ans: "tuple" },
{ ques: "What is the output of: print(bool('False'))?", quesType: "mcq", op1: "False", op2: "True", op3: "None", op4: "Error", ans: "True" },
{ ques: "Which built-in converts string to integer?", quesType: "mcq", op1: "str()", op2: "float()", op3: "int()", op4: "convert()", ans: "int()" },
{ ques: "What is the output: print(type([]))?", quesType: "mcq", op1: "<class 'list'>", op2: "<list>", op3: "<type 'list'>", op4: "list", ans: "<class 'list'>" },
{ ques: "What does range(5) return?", quesType: "mcq", op1: "[1,2,3,4,5]", op2: "[0,1,2,3,4]", op3: "0-5", op4: "5 numbers", ans: "[0,1,2,3,4]" },
{ ques: "Which loop is guaranteed to execute at least once?", quesType: "mcq", op1: "for", op2: "while", op3: "do-while", op4: "None", ans: "None" },
{ ques: "What is the output of: print(9//2)?", quesType: "mcq", op1: "4.5", op2: "4", op3: "5", op4: "Error", ans: "4" },
{ ques: "Which function returns max of a list?", quesType: "mcq", op1: "maximum()", op2: "max()", op3: "high()", op4: "top()", ans: "max()" },
{ ques: "What is the result of: 7 % 3?", quesType: "mcq", op1: "2", op2: "1", op3: "3", op4: "0", ans: "1" },
{ ques: "What is a lambda in Python?", quesType: "mcq", op1: "Loop", op2: "Function", op3: "Operator", op4: "Error", ans: "Function" },
{ ques: "Which function returns sorted version of a list?", quesType: "mcq", op1: "sort()", op2: "sorted()", op3: "arrange()", op4: "None", ans: "sorted()" },
{ ques: "Which collection is unordered?", quesType: "mcq", op1: "list", op2: "tuple", op3: "dict", op4: "set", ans: "set" },
{ ques: "Which of these is a valid function name?", quesType: "mcq", op1: "1fun", op2: "fun-1", op3: "_fun", op4: "fun@1", ans: "_fun" },
{ ques: "Which operator checks for identity?", quesType: "mcq", op1: "==", op2: "is", op3: "in", op4: "=", ans: "is" },
{ ques: "Which method removes an element by index?", quesType: "mcq", op1: "delete()", op2: "remove()", op3: "pop()", op4: "cut()", ans: "pop()" },
{ ques: "Which method removes by value?", quesType: "mcq", op1: "remove()", op2: "pop()", op3: "del()", op4: "clear()", ans: "remove()" },
{ ques: "What is the type of {1,2,3}?", quesType: "mcq", op1: "list", op2: "tuple", op3: "set", op4: "dict", ans: "set" },
{ ques: "Which statement is used to stop a loop?", quesType: "mcq", op1: "stop", op2: "break", op3: "exit", op4: "end", ans: "break" },
{ ques: "Which function is used to check type of variable?", quesType: "mcq", op1: "kind()", op2: "check()", op3: "type()", op4: "typeof()", ans: "type()" },
{ ques: "Which method adds a new key-value in dict?", quesType: "mcq", op1: "append()", op2: "add()", op3: "insert()", op4: "update()", ans: "update()" },
{ ques: "Which method copies a list?", quesType: "mcq", op1: "copy()", op2: "duplicate()", op3: "replicate()", op4: "mirror()", ans: "copy()" },
{ ques: "Which keyword is used for inheritance?", quesType: "mcq", op1: "inherits", op2: "from", op3: "base", op4: "extends", ans: "from" },
{ ques: "What is the result of: len(set([1,2,2]))?", quesType: "mcq", op1: "2", op2: "3", op3: "1", op4: "Error", ans: "2" },
{ ques: "What is output of: print(list('abc'))?", quesType: "mcq", op1: "['abc']", op2: "['a','b','c']", op3: "abc", op4: "[abc]", ans: "['a','b','c']" },
{ ques: "What is 'None' in Python?", quesType: "mcq", op1: "0", op2: "Empty string", op3: "Boolean", op4: "Null value", ans: "Null value" },
{ ques: "What is result of: not True?", quesType: "mcq", op1: "False", op2: "True", op3: "None", op4: "Error", ans: "False" },
{ ques: "Which keyword defines a class?", quesType: "mcq", op1: "def", op2: "class", op3: "type", op4: "object", ans: "class" },
{ ques: "Which loop is preferred when index is needed?", quesType: "mcq", op1: "while", op2: "for", op3: "loop", op4: "None", ans: "for" },
{ ques: "What does dict.keys() return?", quesType: "mcq", op1: "Values", op2: "Keys", op3: "Tuples", op4: "Items", ans: "Keys" },
{ ques: "Which method converts string to list?", quesType: "mcq", op1: "split()", op2: "explode()", op3: "stringToList()", op4: "separate()", ans: "split()" },
{ ques: "What is output: print(10 != 10)?", quesType: "mcq", op1: "True", op2: "False", op3: "Error", op4: "None", ans: "False" },
{ ques: "Which is faster: list or tuple?", quesType: "mcq", op1: "tuple", op2: "list", op3: "both same", op4: "None", ans: "tuple" }
,
{ ques: "Fill: 'hello'.capitalize() → ______", quesType: "fill", ans: "Hello" },
{ ques: "Fill: len([1,2,3,4]) → ______", quesType: "fill", ans: "4" },
{ ques: "Fill: 'abc'.upper() → ______", quesType: "fill", ans: "ABC" },
{ ques: "Fill: 2 ** 3 → ______", quesType: "fill", ans: "8" },
{ ques: "Fill: 9 // 2 → ______", quesType: "fill", ans: "4" },
{ ques: "Fill: [1,2,3].pop() → ______", quesType: "fill", ans: "3" },
{ ques: "Fill: 'python'[1] → ______", quesType: "fill", ans: "y" },
{ ques: "Fill: list('ab') → ______", quesType: "fill", ans: "['a', 'b']" },
{ ques: "Fill: bool([]) → ______", quesType: "fill", ans: "False" },
{ ques: "Fill: 3 > 2 → ______", quesType: "fill", ans: "True" },
{ ques: "Fill: 'Hi Nanda'.split() → ______", quesType: "fill", ans: "['Hi', 'Nanda']" },
{ ques: "Fill: 10 % 3 → ______", quesType: "fill", ans: "1" },
{ ques: "Fill: [1]*3 → ______", quesType: "fill", ans: "[1, 1, 1]" },
{ ques: "Fill: int('4') → ______", quesType: "fill", ans: "4" },
{ ques: "Fill: sum([1,2,3]) → ______", quesType: "fill", ans: "6" },
{ ques: "Fill: type('Nanda') → ______", quesType: "fill", ans: "<class 'str'>" },
{ ques: "Fill: 'a' in 'apple' → ______", quesType: "fill", ans: "True" },
{ ques: "Fill: range(2, 5) → ______", quesType: "fill", ans: "[2, 3, 4]" },
{ ques: "Fill: '   abc  '.strip() → ______", quesType: "fill", ans: "abc" },
{ ques: "Fill: min(3, 7, 2) → ______", quesType: "fill", ans: "2" },
{ ques: "Fill: max(1,5,3) → ______", quesType: "fill", ans: "5" },
{ ques: "Fill: print('ab'.isalpha()) → ______", quesType: "fill", ans: "True" },
{ ques: "Fill: 'nanda'.replace('a','@') → ______", quesType: "fill", ans: "n@nd@" },
{ ques: "Fill: round(3.7) → ______", quesType: "fill", ans: "4" },
{ ques: "Fill: sorted([3,1,2]) → ______", quesType: "fill", ans: "[1, 2, 3]" },
{ ques: "Fill: dict(a=1) → ______", quesType: "fill", ans: "{'a': 1}" },
{ ques: "Fill: 7 >= 7 → ______", quesType: "fill", ans: "True" },
{ ques: "Fill: chr(97) → ______", quesType: "fill", ans: "a" },
{ ques: "Fill: ord('N') → ______", quesType: "fill", ans: "78" },
{ ques: "Fill: isinstance('Nanda', str) → ______", quesType: "fill", ans: "True" },
{ ques: "Fill: print(None == False) → ______", quesType: "fill", ans: "False" },
{ ques: "Fill: float(3) → ______", quesType: "fill", ans: "3.0" },
{ ques: "Fill: not 0 → ______", quesType: "fill", ans: "True" },
{ ques: "Fill: range(0,3,2) → ______", quesType: "fill", ans: "[0, 2]" },
{ ques: "Fill: 'hello'[0:2] → ______", quesType: "fill", ans: "he" },
{ ques: "Fill: input() returns value of type ______", quesType: "fill", ans: "str" },
{ ques: "Fill: print('a' + 'b') → ______", quesType: "fill", ans: "ab" },
{ ques: "Fill: 'AbC'.lower() → ______", quesType: "fill", ans: "abc" },
{ ques: "Fill: '123'.isdigit() → ______", quesType: "fill", ans: "True" },
{ ques: "Fill: 'nanda'.count('a') → ______", quesType: "fill", ans: "2" }


]

let codingpy3Arr=[
  {
    "ques": "What is the output of: print(0.1 + 0.2 == 0.3)?",
    "quesType": "mcq",
    "op1": "True",
    "op2": "False",
    "op3": "None",
    "op4": "Error",
    "ans": "False"
  },
  {
    "ques": "Which of these is not a valid way to declare a list in Python?",
    "quesType": "mcq",
    "op1": "[]",
    "op2": "list()",
    "op3": "{}",
    "op4": "[1, 2, 3]",
    "ans": "{}"
  },
  {
    "ques": "What is the output of: print(type(lambda x: x))?",
    "quesType": "mcq",
    "op1": "<class 'lambda'>",
    "op2": "<function>",
    "op3": "<class 'function'>",
    "op4": "<lambda>",
    "ans": "<class 'function'>"
  },
  {
    "ques": "Which of the following is not a valid Python data type?",
    "quesType": "mcq",
    "op1": "list",
    "op2": "set",
    "op3": "array",
    "op4": "tuple",
    "ans": "array"
  },
  {
    "ques": "Which function returns an iterable in Python?",
    "quesType": "mcq",
    "op1": "range()",
    "op2": "int()",
    "op3": "float()",
    "op4": "len()",
    "ans": "range()"
  },
  {
    "ques": "What does the 'is' operator compare?",
    "quesType": "mcq",
    "op1": "Value",
    "op2": "Type",
    "op3": "Memory location",
    "op4": "Size",
    "ans": "Memory location"
  },
  {
    "ques": "Which method is used to deep copy a Python object?",
    "quesType": "mcq",
    "op1": "copy()",
    "op2": "clone()",
    "op3": "deepcopy()",
    "op4": "copy.deepcopy()",
    "ans": "copy.deepcopy()"
  },
  {
    "ques": "What is the output of: print(all([]))?",
    "quesType": "mcq",
    "op1": "True",
    "op2": "False",
    "op3": "Error",
    "op4": "None",
    "ans": "True"
  },
  {
    "ques": "Which keyword is used to handle exceptions?",
    "quesType": "mcq",
    "op1": "catch",
    "op2": "except",
    "op3": "error",
    "op4": "fail",
    "ans": "except"
  },
  {
    "ques": "What is the output of: print(2 ** 3 ** 2)?",
    "quesType": "mcq",
    "op1": "64",
    "op2": "512",
    "op3": "256",
    "op4": "729",
    "ans": "512"
  },
  {
    "ques": "Which of the following can be a dictionary key?",
    "quesType": "mcq",
    "op1": "list",
    "op2": "dict",
    "op3": "set",
    "op4": "tuple",
    "ans": "tuple"
  },
  {
    "ques": "Which function is used to get ASCII of a character?",
    "quesType": "mcq",
    "op1": "asc()",
    "op2": "char()",
    "op3": "ord()",
    "op4": "ascii()",
    "ans": "ord()"
  },
  {
    "ques": "What is the result of: print(bool('False'))?",
    "quesType": "mcq",
    "op1": "False",
    "op2": "True",
    "op3": "None",
    "op4": "0",
    "ans": "True"
  },
  {
    "ques": "Which module provides regular expressions in Python?",
    "quesType": "mcq",
    "op1": "os",
    "op2": "sys",
    "op3": "regex",
    "op4": "re",
    "ans": "re"
  },
  {
    "ques": "Which built-in module caches function results?",
    "quesType": "mcq",
    "op1": "functools",
    "op2": "collections",
    "op3": "hashlib",
    "op4": "math",
    "ans": "functools"
  },
  {
    "ques": "Which function converts list to set?",
    "quesType": "mcq",
    "op1": "list()",
    "op2": "dict()",
    "op3": "set()",
    "op4": "tuple()",
    "ans": "set()"
  },
  {
    "ques": "Which of the following is a Python generator expression?",
    "quesType": "mcq",
    "op1": "[x*x for x in range(3)]",
    "op2": "{x*x for x in range(3)}",
    "op3": "(x*x for x in range(3))",
    "op4": "<x*x for x in range(3)>",
    "ans": "(x*x for x in range(3))"
  },
  {
    "ques": "What is the output of: print(type((1)))?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "tuple",
    "op3": "list",
    "op4": "str",
    "ans": "int"
  },
  {
    "ques": "Which of these functions is not part of the math module?",
    "quesType": "mcq",
    "op1": "sqrt()",
    "op2": "pow()",
    "op3": "log()",
    "op4": "round()",
    "ans": "round()"
  },
  {
    "ques": "What is the type of reversed('abc')?",
    "quesType": "mcq",
    "op1": "list",
    "op2": "reversed",
    "op3": "iterator",
    "op4": "str",
    "ans": "reversed"
  },
  {
    "ques": "What is the output of: print(10 and 0 or 5)?",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "Fill the blank: s = 'hello'; print(s[::-1])",
    "quesType": "fill",
    "ans": "olleh"
  },
  {
    "ques": "What is the output of: print([] == False)?",
    "quesType": "fill",
    "ans": "False"
  },
  {
    "ques": "What is the output of: print(True + True + False)?",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "What is the output of: print(list(map(len, ['hi', 'hello'])))?",
    "quesType": "fill",
    "ans": "[2, 5]"
  },
  {
    "ques": "What is the output of: print([1, 2] * 2)?",
    "quesType": "fill",
    "ans": "[1, 2, 1, 2]"
  },
  {
    "ques": "What is the output of: print(2 ** 3)?",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "What is the output of: print(type(5.0))?",
    "quesType": "fill",
    "ans": "<class 'float'>"
  },
  {
    "ques": "What is the result of len(set('apple'))?",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "What is the output of: print(3 * 'puppy')?",
    "quesType": "fill",
    "ans": "puppypuppypuppy"
  },
  {
    "ques": "What is the output of: print(type((1,)))?",
    "quesType": "fill",
    "ans": "<class 'tuple'>"
  },
  {
    "ques": "What is the output of: print(bool('False'))?",
    "quesType": "fill",
    "ans": "True"
  },
  {
    "ques": "What is the output of: print(4 // 3)?",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "What is the output of: print(len('OpenAI GPT'))?",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "What is the output of: print(9 % 2)?",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "Fill to get square: f = lambda x: x ** __; print(f(3))",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "What is the output of: print({i for i in range(3)})?",
    "quesType": "fill",
    "ans": "{0, 1, 2}"
  },
  {
    "ques": "Output of: print({1:'a',2:'b'}[1])",
    "quesType": "fill",
    "ans": "a"
  },
  {
    "ques": "Fill the blank: import math; print(math.sqrt(25))",
    "quesType": "fill",
    "ans": "5.0"
  },
    {
      "ques": "What is the output of: print(0.1 + 0.2 == 0.3)?",
      "quesType": "mcq",
      "op1": "True",
      "op2": "False",
      "op3": "None",
      "op4": "Error",
      "ans": "False"
    },
    {
      "ques": "Which of these is not a valid way to declare a list in Python?",
      "quesType": "mcq",
      "op1": "[]",
      "op2": "list()",
      "op3": "{}",
      "op4": "[1, 2, 3]",
      "ans": "{}"
    },
    {
      "ques": "What is the output of: print(type(lambda x: x))?",
      "quesType": "mcq",
      "op1": "<class 'lambda'>",
      "op2": "<function>",
      "op3": "<class 'function'>",
      "op4": "<lambda>",
      "ans": "<class 'function'>"
    },
    {
      "ques": "Which of the following is not a valid Python data type?",
      "quesType": "mcq",
      "op1": "list",
      "op2": "set",
      "op3": "array",
      "op4": "tuple",
      "ans": "array"
    },
    {
      "ques": "Which function returns an iterable in Python?",
      "quesType": "mcq",
      "op1": "range()",
      "op2": "int()",
      "op3": "float()",
      "op4": "len()",
      "ans": "range()"
    },
    {
      "ques": "What does the 'is' operator compare?",
      "quesType": "mcq",
      "op1": "Value",
      "op2": "Type",
      "op3": "Memory location",
      "op4": "Size",
      "ans": "Memory location"
    },
    {
      "ques": "Which method is used to deep copy a Python object?",
      "quesType": "mcq",
      "op1": "copy()",
      "op2": "clone()",
      "op3": "deepcopy()",
      "op4": "copy.deepcopy()",
      "ans": "copy.deepcopy()"
    },
    {
      "ques": "What is the output of: print(all([]))?",
      "quesType": "mcq",
      "op1": "True",
      "op2": "False",
      "op3": "Error",
      "op4": "None",
      "ans": "True"
    },
    {
      "ques": "Which keyword is used to handle exceptions?",
      "quesType": "mcq",
      "op1": "catch",
      "op2": "except",
      "op3": "error",
      "op4": "fail",
      "ans": "except"
    },
    {
      "ques": "What is the output of: print(2 ** 3 ** 2)?",
      "quesType": "mcq",
      "op1": "64",
      "op2": "512",
      "op3": "256",
      "op4": "729",
      "ans": "512"
    },
    {
      "ques": "Which of the following can be a dictionary key?",
      "quesType": "mcq",
      "op1": "list",
      "op2": "dict",
      "op3": "set",
      "op4": "tuple",
      "ans": "tuple"
    },
    {
      "ques": "Which function is used to get ASCII of a character?",
      "quesType": "mcq",
      "op1": "asc()",
      "op2": "char()",
      "op3": "ord()",
      "op4": "ascii()",
      "ans": "ord()"
    },
    {
      "ques": "What is the result of: print(bool('False'))?",
      "quesType": "mcq",
      "op1": "False",
      "op2": "True",
      "op3": "None",
      "op4": "0",
      "ans": "True"
    },
    {
      "ques": "Which module provides regular expressions in Python?",
      "quesType": "mcq",
      "op1": "os",
      "op2": "sys",
      "op3": "regex",
      "op4": "re",
      "ans": "re"
    },
    {
      "ques": "Which built-in module caches function results?",
      "quesType": "mcq",
      "op1": "functools",
      "op2": "collections",
      "op3": "hashlib",
      "op4": "math",
      "ans": "functools"
    },
    {
      "ques": "Which function converts list to set?",
      "quesType": "mcq",
      "op1": "list()",
      "op2": "dict()",
      "op3": "set()",
      "op4": "tuple()",
      "ans": "set()"
    },
    {
      "ques": "Which of the following is a Python generator expression?",
      "quesType": "mcq",
      "op1": "[x*x for x in range(3)]",
      "op2": "{x*x for x in range(3)}",
      "op3": "(x*x for x in range(3))",
      "op4": "<x*x for x in range(3)>",
      "ans": "(x*x for x in range(3))"
    },
    {
      "ques": "What is the output of: print(type((1)))?",
      "quesType": "mcq",
      "op1": "int",
      "op2": "tuple",
      "op3": "list",
      "op4": "str",
      "ans": "int"
    },
    {
      "ques": "Which of these functions is not part of the math module?",
      "quesType": "mcq",
      "op1": "sqrt()",
      "op2": "pow()",
      "op3": "log()",
      "op4": "round()",
      "ans": "round()"
    },
    {
      "ques": "What is the type of reversed('abc')?",
      "quesType": "mcq",
      "op1": "list",
      "op2": "reversed",
      "op3": "iterator",
      "op4": "str",
      "ans": "reversed"
    },
    {
      "ques": "What is the output of: print(10 and 0 or 5)?",
      "quesType": "fill",
      "ans": "5"
    },
    {
      "ques": "Fill the blank: s = 'hello'; print(s[::-1])",
      "quesType": "fill",
      "ans": "olleh"
    },
    {
      "ques": "What is the output of: print([] == False)?",
      "quesType": "fill",
      "ans": "False"
    },
    {
      "ques": "What is the output of: print(True + True + False)?",
      "quesType": "fill",
      "ans": "2"
    },
    {
      "ques": "What is the output of: print(list(map(len, ['hi', 'hello'])))?",
      "quesType": "fill",
      "ans": "[2, 5]"
    },
    {
      "ques": "What is the output of: print([1, 2] * 2)?",
      "quesType": "fill",
      "ans": "[1, 2, 1, 2]"
    },
    {
      "ques": "What is the output of: print(2 ** 3)?",
      "quesType": "fill",
      "ans": "8"
    },
    {
      "ques": "What is the output of: print(type(5.0))?",
      "quesType": "fill",
      "ans": "<class 'float'>"
    },
    {
      "ques": "What is the result of len(set('apple'))?",
      "quesType": "fill",
      "ans": "4"
    },
    {
      "ques": "What is the output of: print(3 * 'puppy')?",
      "quesType": "fill",
      "ans": "puppypuppypuppy"
    },
    {
      "ques": "What is the output of: print(type((1,)))?",
      "quesType": "fill",
      "ans": "<class 'tuple'>"
    },
    {
      "ques": "What is the output of: print(bool('False'))?",
      "quesType": "fill",
      "ans": "True"
    },
    {
      "ques": "What is the output of: print(4 // 3)?",
      "quesType": "fill",
      "ans": "1"
    },
    {
      "ques": "What is the output of: print(len('OpenAI GPT'))?",
      "quesType": "fill",
      "ans": "10"
    },
    {
      "ques": "What is the output of: print(9 % 2)?",
      "quesType": "fill",
      "ans": "1"
    },
    {
      "ques": "Fill to get square: f = lambda x: x ** __; print(f(3))",
      "quesType": "fill",
      "ans": "2"
    },
    {
      "ques": "What is the output of: print({i for i in range(3)})?",
      "quesType": "fill",
      "ans": "{0, 1, 2}"
    },
    {
      "ques": "Output of: print({1:'a',2:'b'}[1])",
      "quesType": "fill",
      "ans": "a"
    },
    {
      "ques": "Fill the blank: import math; print(math.sqrt(25))",
      "quesType": "fill",
      "ans": "5.0"
    }
  ,
  {
      "ques": "What will be the output of: print({1: 'a', 2: 'b'} == {2: 'b', 1: 'a'})?",
      "quesType": "mcq",
      "op1": "False",
      "op2": "True",
      "op3": "None",
      "op4": "Error",
      "ans": "True"
    },
    {
      "ques": "Which of these is a valid way to define a coroutine?",
      "quesType": "mcq",
      "op1": "def coro(): yield",
      "op2": "async def coro(): pass",
      "op3": "def coro() -> await",
      "op4": "yield async def coro()",
      "ans": "async def coro(): pass"
    },
    {
      "ques": "What is the output of: print(id([]) == id([]))?",
      "quesType": "mcq",
      "op1": "True",
      "op2": "False",
      "op3": "Error",
      "op4": "Depends",
      "ans": "False"
    },
    {
      "ques": "Which module provides tools for working with iterators?",
      "quesType": "mcq",
      "op1": "operator",
      "op2": "functools",
      "op3": "itertools",
      "op4": "collections",
      "ans": "itertools"
    },
    {
      "ques": "What is the return type of a generator function?",
      "quesType": "mcq",
      "op1": "list",
      "op2": "tuple",
      "op3": "generator",
      "op4": "function",
      "ans": "generator"
    },
    {
      "ques": "Which of the following is not a valid string formatting method in Python?",
      "quesType": "mcq",
      "op1": "f-strings",
      "op2": "str.format()",
      "op3": "% formatting",
      "op4": "format.str()",
      "ans": "format.str()"
    },
    {
      "ques": "Which function is used to get the base class of a class?",
      "quesType": "mcq",
      "op1": "base()",
      "op2": "super()",
      "op3": "getbase()",
      "op4": "baseclass()",
      "ans": "super()"
    },
    {
      "ques": "What is printed by: print((lambda x: x + 1)(4))?",
      "quesType": "mcq",
      "op1": "4",
      "op2": "5",
      "op3": "None",
      "op4": "Error",
      "ans": "5"
    },
    {
      "ques": "Which special method is used to override object string representation?",
      "quesType": "mcq",
      "op1": "__init__",
      "op2": "__str__",
      "op3": "__repr__",
      "op4": "__getattr__",
      "ans": "__str__"
    },
    {
      "ques": "Which of the following statements will raise an exception?",
      "quesType": "mcq",
      "op1": "int('10')",
      "op2": "int('10.5')",
      "op3": "float('10.5')",
      "op4": "str(10)",
      "ans": "int('10.5')"
    },
    {
      "ques": "Which method is used to define properties in Python classes?",
      "quesType": "mcq",
      "op1": "getattr",
      "op2": "@property",
      "op3": "__getattr__",
      "op4": "get()",
      "ans": "@property"
    },
    {
      "ques": "What is returned by re.findall(r'\\d+', 'abc123def45')?",
      "quesType": "mcq",
      "op1": "[123, 45]",
      "op2": "['123', '45']",
      "op3": "[1, 2, 3, 4, 5]",
      "op4": "[abc, def]",
      "ans": "['123', '45']"
    },
    {
      "ques": "Which keyword is used to create a generator?",
      "quesType": "mcq",
      "op1": "yield",
      "op2": "return",
      "op3": "async",
      "op4": "gen",
      "ans": "yield"
    },
    {
      "ques": "Which function converts object to a JSON string?",
      "quesType": "mcq",
      "op1": "json.stringify()",
      "op2": "json.encode()",
      "op3": "json.dumps()",
      "op4": "json.to_str()",
      "ans": "json.dumps()"
    },
    {
      "ques": "Which of these is a valid Python context manager?",
      "quesType": "mcq",
      "op1": "with open()",
      "op2": "try open()",
      "op3": "context open()",
      "op4": "manage open()",
      "ans": "with open()"
    },
    {
      "ques": "Which function will give you all attributes and methods of an object?",
      "quesType": "mcq",
      "op1": "all()",
      "op2": "dir()",
      "op3": "list()",
      "op4": "type()",
      "ans": "dir()"
    },
    {
      "ques": "Which method is used for sorting custom objects?",
      "quesType": "mcq",
      "op1": "sorted(obj)",
      "op2": "obj.sort()",
      "op3": "sort(obj)",
      "op4": "sorted(obj, key=...)",
      "ans": "sorted(obj, key=...)"
    },
    {
      "ques": "What is the purpose of the 'pass' statement?",
      "quesType": "mcq",
      "op1": "Breaks a loop",
      "op2": "Skips execution",
      "op3": "Does nothing",
      "op4": "Continues loop",
      "ans": "Does nothing"
    },
    {
      "ques": "Which of the following is used for annotations in Python?",
      "quesType": "mcq",
      "op1": "#",
      "op2": ":",
      "op3": "->",
      "op4": "@",
      "ans": "@"
    },
    {
      "ques": "Which built-in function is used to evaluate expressions?",
      "quesType": "mcq",
      "op1": "eval()",
      "op2": "exec()",
      "op3": "compile()",
      "op4": "input()",
      "ans": "eval()"
    },
    {
      "ques": "What is the output of: print(1 < 2 < 3)?",
      "quesType": "fill",
      "ans": "True"
    },
    {
      "ques": "Output of: print(len([i for i in range(1000) if i % 2 == 0]))",
      "quesType": "fill",
      "ans": "500"
    },
    {
      "ques": "What is the output of: print('Puppy'[::-1])",
      "quesType": "fill",
      "ans": "yppuP"
    },
    {
      "ques": "Output of: print(','.join(['a','b','c']))",
      "quesType": "fill",
      "ans": "a,b,c"
    },
    {
      "ques": "What is the result of: print(bool(' '))?",
      "quesType": "fill",
      "ans": "True"
    },
    {
      "ques": "Output of: print(type((x for x in range(3))))",
      "quesType": "fill",
      "ans": "<class 'generator'>"
    },
    {
      "ques": "What is the output of: print(4 ** 0.5)?",
      "quesType": "fill",
      "ans": "2.0"
    },
    {
      "ques": "Output of: print(type(None))",
      "quesType": "fill",
      "ans": "<class 'NoneType'>"
    },
    {
      "ques": "Output of: print('a' * 3 + 'b')",
      "quesType": "fill",
      "ans": "aaab"
    },
    {
      "ques": "Output of: print(round(2.675, 2))",
      "quesType": "fill",
      "ans": "2.67"
    },
    {
      "ques": "Output of: print(set([1, 2, 2, 3]))",
      "quesType": "fill",
      "ans": "{1, 2, 3}"
    },
    {
      "ques": "Output of: print((True and False) or True)",
      "quesType": "fill",
      "ans": "True"
    },
    {
      "ques": "Output of: print(max(['apple','banana','pear']))",
      "quesType": "fill",
      "ans": "pear"
    },
    {
      "ques": "Output of: print(min([1, 4, -1, 0]))",
      "quesType": "fill",
      "ans": "-1"
    },
    {
      "ques": "Output of: print([x*x for x in range(3)])",
      "quesType": "fill",
      "ans": "[0, 1, 4]"
    },
    {
      "ques": "Fill the blank: from math import ___; print(factorial(5))",
      "quesType": "fill",
      "ans": "factorial"
    },
    {
      "ques": "Output of: print(abs(-10))",
      "quesType": "fill",
      "ans": "10"
    },
    {
      "ques": "Output of: print([i for i in range(5) if i != 2])",
      "quesType": "fill",
      "ans": "[0, 1, 3, 4]"
    },
    {
      "ques": "Output of: print('P' in 'Puppy')",
      "quesType": "fill",
      "ans": "True"
    },
    {
      "ques": "Output of: print(3 < 2 or 2 < 4)",
      "quesType": "fill",
      "ans": "True"
    },
    {
      "ques": "Output of: print(sum([1, 2, 3]))",
      "quesType": "fill",
      "ans": "6"
    },
    {
      "ques": "What is the result of: print((10, 20) + (30,))?",
      "quesType": "mcq",
      "op1": "(10, 20, 30)",
      "op2": "[10, 20, 30]",
      "op3": "Error",
      "op4": "(10, 2030)",
      "ans": "(10, 20, 30)"
    },
    {
      "ques": "Which built-in module supports handling dates and times?",
      "quesType": "mcq",
      "op1": "time",
      "op2": "calendar",
      "op3": "datetime",
      "op4": "os",
      "ans": "datetime"
    },
    {
      "ques": "What does 'assert' keyword do?",
      "quesType": "mcq",
      "op1": "Stops program",
      "op2": "Tests condition and raises error if False",
      "op3": "Prints message",
      "op4": "Skips execution",
      "ans": "Tests condition and raises error if False"
    },
    {
      "ques": "Which Python statement is used for pattern matching (as of 3.10)?",
      "quesType": "mcq",
      "op1": "case",
      "op2": "match",
      "op3": "switch",
      "op4": "select",
      "ans": "match"
    },
    {
      "ques": "What does the function zip() return?",
      "quesType": "mcq",
      "op1": "List",
      "op2": "Tuple",
      "op3": "Iterator of tuples",
      "op4": "Dictionary",
      "ans": "Iterator of tuples"
    },
    {
      "ques": "Which method is triggered when object is printed?",
      "quesType": "mcq",
      "op1": "__print__",
      "op2": "__str__",
      "op3": "__repr__",
      "op4": "__output__",
      "ans": "__str__"
    },
    {
      "ques": "Which Python object can be used as a key in a dictionary?",
      "quesType": "mcq",
      "op1": "list",
      "op2": "set",
      "op3": "tuple",
      "op4": "dict",
      "ans": "tuple"
    },
    {
      "ques": "Which function is used to create anonymous functions?",
      "quesType": "mcq",
      "op1": "def",
      "op2": "lambda",
      "op3": "anon",
      "op4": "fun",
      "ans": "lambda"
    },
    {
      "ques": "Which is used to handle cleanup actions?",
      "quesType": "mcq",
      "op1": "except",
      "op2": "else",
      "op3": "finally",
      "op4": "catch",
      "ans": "finally"
    },
    {
      "ques": "Which keyword is used to manually raise an exception?",
      "quesType": "mcq",
      "op1": "except",
      "op2": "raise",
      "op3": "throw",
      "op4": "error",
      "ans": "raise"
    },
    {
      "ques": "Which method is used to convert object to a string?",
      "quesType": "mcq",
      "op1": "str()",
      "op2": "string()",
      "op3": "repr()",
      "op4": "type()",
      "ans": "str()"
    },
    {
      "ques": "Which built-in function helps in reducing a list to a single value?",
      "quesType": "mcq",
      "op1": "reduce()",
      "op2": "map()",
      "op3": "filter()",
      "op4": "all()",
      "ans": "reduce()"
    },
    {
      "ques": "Which module contains reduce() in Python 3?",
      "quesType": "mcq",
      "op1": "math",
      "op2": "functools",
      "op3": "operator",
      "op4": "itertools",
      "ans": "functools"
    },
    {
      "ques": "Which function returns an iterator with filtered values?",
      "quesType": "mcq",
      "op1": "filter()",
      "op2": "select()",
      "op3": "map()",
      "op4": "reduce()",
      "ans": "filter()"
    },
    {
      "ques": "What is the correct way to handle a FileNotFoundError?",
      "quesType": "mcq",
      "op1": "try/except",
      "op2": "if file == None",
      "op3": "using isfile()",
      "op4": "raise manually",
      "ans": "try/except"
    },
    {
      "ques": "Which decorator is used to define static methods?",
      "quesType": "mcq",
      "op1": "@classmethod",
      "op2": "@staticmethod",
      "op3": "@function",
      "op4": "@static",
      "ans": "@staticmethod"
    },
    {
      "ques": "What does 'with' statement do in Python?",
      "quesType": "mcq",
      "op1": "Loops",
      "op2": "Condition",
      "op3": "Context management",
      "op4": "Class definition",
      "ans": "Context management"
    },
    {
      "ques": "What will be printed by: print(' '.isspace())?",
      "quesType": "mcq",
      "op1": "True",
      "op2": "False",
      "op3": "None",
      "op4": "Error",
      "ans": "True"
    },
    {
      "ques": "Which keyword is used to continue to next loop iteration?",
      "quesType": "mcq",
      "op1": "pass",
      "op2": "skip",
      "op3": "continue",
      "op4": "next",
      "ans": "continue"
    },
    {
      "ques": "What is output of: print(1 if True else 2)?",
      "quesType": "mcq",
      "op1": "1",
      "op2": "2",
      "op3": "True",
      "op4": "None",
      "ans": "1"
    },
    {
      "ques": "Output of: print((5, 6, 7)[-1])",
      "quesType": "fill",
      "ans": "7"
    },
    {
      "ques": "Fill the blank: list1 = [1,2]; list2 = list1; print(list1 is list2)",
      "quesType": "fill",
      "ans": "True"
    },
    {
      "ques": "Output of: print(bool([]))",
      "quesType": "fill",
      "ans": "False"
    },
    {
      "ques": "Fill blank: from math import sqrt; print(sqrt(36))",
      "quesType": "fill",
      "ans": "6.0"
    },
    {
      "ques": "Output of: print(','.join('abc'))",
      "quesType": "fill",
      "ans": "a,b,c"
    },
    {
      "ques": "Output of: print(bin(5))",
      "quesType": "fill",
      "ans": "0b101"
    },
    {
      "ques": "What is printed: print(type(True and False))",
      "quesType": "fill",
      "ans": "<class 'bool'>"
    },
    {
      "ques": "Output of: print(chr(65))",
      "quesType": "fill",
      "ans": "A"
    },
    {
      "ques": "Fill the blank: print(5 ** 2 == __)",
      "quesType": "fill",
      "ans": "25"
    },
    {
      "ques": "What is the result of: print(list(range(2, 10, 3)))",
      "quesType": "fill",
      "ans": "[2, 5, 8]"
    },
    {
      "ques": "Output of: print(round(7.126, 2))",
      "quesType": "fill",
      "ans": "7.13"
    },
    {
      "ques": "Fill the blank: print({x for x in range(3)}.pop())",
      "quesType": "fill",
      "ans": "0"
    },
    {
      "ques": "What is printed: print(ord('B'))",
      "quesType": "fill",
      "ans": "66"
    },
    {
      "ques": "Fill the blank: print(sum([i for i in range(4)]))",
      "quesType": "fill",
      "ans": "6"
    },
    {
      "ques": "Output of: print(not 0 and not 1)",
      "quesType": "fill",
      "ans": "False"
    },
    {
      "ques": "Output of: print(10 != 10.0)",
      "quesType": "fill",
      "ans": "False"
    },
    {
      "ques": "Fill the blank: a = 10; print(a >> 1)",
      "quesType": "fill",
      "ans": "5"
    },
    {
      "ques": "Output of: print(True ^ False)",
      "quesType": "fill",
      "ans": "True"
    },
    {
      "ques": "What will be the output of: print(type(lambda x: x))?",
      "quesType": "mcq",
      "op1": "<class 'function'>",
      "op2": "<class 'lambda'>",
      "op3": "<class 'method'>",
      "op4": "<lambda>",
      "ans": "<class 'function'>"
    },
    {
      "ques": "What will be the output of: print(([] or False) == False)?",
      "quesType": "mcq",
      "op1": "True",
      "op2": "False",
      "op3": "None",
      "op4": "Error",
      "ans": "True"
    },
    {
      "ques": "Which module allows you to serialize Python objects?",
      "quesType": "mcq",
      "op1": "pickle",
      "op2": "marshal",
      "op3": "json",
      "op4": "all of the above",
      "ans": "all of the above"
    },
    {
      "ques": "What is the output of: bool(None)?",
      "quesType": "mcq",
      "op1": "True",
      "op2": "False",
      "op3": "None",
      "op4": "0",
      "ans": "False"
    },
    {
      "ques": "Which method is used to open a file for both reading and writing?",
      "quesType": "mcq",
      "op1": "'rw'",
      "op2": "'r+'",
      "op3": "'rw+'",
      "op4": "'wr'",
      "ans": "'r+'"
    },
    {
      "ques": "What does the globals() function return?",
      "quesType": "mcq",
      "op1": "All global classes",
      "op2": "All local variables",
      "op3": "A dictionary of current global symbol table",
      "op4": "All objects",
      "ans": "A dictionary of current global symbol table"
    },
    {
      "ques": "Which method removes all elements from a list?",
      "quesType": "mcq",
      "op1": "remove()",
      "op2": "clear()",
      "op3": "del()",
      "op4": "erase()",
      "ans": "clear()"
    },
    {
      "ques": "Which of the following is not a valid set method?",
      "quesType": "mcq",
      "op1": "add()",
      "op2": "update()",
      "op3": "append()",
      "op4": "remove()",
      "ans": "append()"
    },
    {
      "ques": "Which keyword is used for type hinting?",
      "quesType": "mcq",
      "op1": "type",
      "op2": "hint",
      "op3": "->",
      "op4": ":=",
      "ans": "->"
    },
    {
      "ques": "What will be the output of: print(eval('2 + 3 * 4'))?",
      "quesType": "mcq",
      "op1": "20",
      "op2": "14",
      "op3": "24",
      "op4": "Error",
      "ans": "14"
    },
    {
      "ques": "What is the base class of all classes in Python?",
      "quesType": "mcq",
      "op1": "Object",
      "op2": "object",
      "op3": "Base",
      "op4": "None",
      "ans": "object"
    },
    {
      "ques": "Which method checks whether a string starts with a substring?",
      "quesType": "mcq",
      "op1": "startswith()",
      "op2": "beginwith()",
      "op3": "hasprefix()",
      "op4": "prefix()",
      "ans": "startswith()"
    },
    {
      "ques": "What will be the output of: print([1, 2] * 2)?",
      "quesType": "mcq",
      "op1": "[1, 2, 1, 2]",
      "op2": "[2, 4]",
      "op3": "[1, 2, 2, 4]",
      "op4": "Error",
      "ans": "[1, 2, 1, 2]"
    },
    {
      "ques": "Which operator is used for bitwise XOR?",
      "quesType": "mcq",
      "op1": "^",
      "op2": "^^",
      "op3": "xor",
      "op4": "&^",
      "ans": "^"
    },
    {
      "ques": "Which module is used for working with CSV files?",
      "quesType": "mcq",
      "op1": "csv",
      "op2": "excel",
      "op3": "filecsv",
      "op4": "pandas",
      "ans": "csv"
    },
    {
      "ques": "Which of the following is a mutable data type?",
      "quesType": "mcq",
      "op1": "str",
      "op2": "tuple",
      "op3": "set",
      "op4": "frozenset",
      "ans": "set"
    },
    {
      "ques": "What is the purpose of hasattr() function?",
      "quesType": "mcq",
      "op1": "To set attribute",
      "op2": "To remove attribute",
      "op3": "To check if attribute exists",
      "op4": "To rename attribute",
      "ans": "To check if attribute exists"
    },
    {
      "ques": "What is the output of: type(3) == int?",
      "quesType": "mcq",
      "op1": "True",
      "op2": "False",
      "op3": "int",
      "op4": "None",
      "ans": "True"
    },
    {
      "ques": "What is the result of: [1, 2] + [3, 4]?",
      "quesType": "mcq",
      "op1": "[1, 2, 3, 4]",
      "op2": "[4, 6]",
      "op3": "[1, 2, 7]",
      "op4": "Error",
      "ans": "[1, 2, 3, 4]"
    },
    {
      "ques": "Which Python function is used to dynamically execute code?",
      "quesType": "mcq",
      "op1": "eval()",
      "op2": "exec()",
      "op3": "compile()",
      "op4": "all of the above",
      "ans": "all of the above"
    },
    {
      "ques": "Output of: print(True + True + False)",
      "quesType": "fill",
      "ans": "2"
    },
    {
      "ques": "What is returned by: list(map(str, [1, 2]))?",
      "quesType": "fill",
      "ans": "['1', '2']"
    },
    {
      "ques": "Fill the blank: print(max([4, 1, 7, 9]))",
      "quesType": "fill",
      "ans": "9"
    },
    {
      "ques": "Output of: print(2 << 2)",
      "quesType": "fill",
      "ans": "8"
    },
    {
      "ques": "Fill the blank: print('a' in 'apple')",
      "quesType": "fill",
      "ans": "True"
    },
    {
      "ques": "Output of: print(sorted([3, 1, 2]))",
      "quesType": "fill",
      "ans": "[1, 2, 3]"
    },
    {
      "ques": "What is the result of: print(int('0xFF', 16))",
      "quesType": "fill",
      "ans": "255"
    },
    {
      "ques": "Output of: print(len(set('nanda')))",
      "quesType": "fill",
      "ans": "4"
    },
    {
      "ques": "What is the output of: print('abc'.upper())",
      "quesType": "fill",
      "ans": "ABC"
    },
    {
      "ques": "What is printed: print('Hello {} {}'.format('Nanda', 'Puppy'))",
      "quesType": "fill",
      "ans": "Hello Nanda Puppy"
    },
    {
      "ques": "What is the output of: print(float('1.5') + 2)?",
      "quesType": "fill",
      "ans": "3.5"
    },
    {
      "ques": "Fill the blank: x = [1, 2]; x.append(3); print(x)",
      "quesType": "fill",
      "ans": "[1, 2, 3]"
    },
    {
      "ques": "Output of: print(list('ab'))",
      "quesType": "fill",
      "ans": "['a', 'b']"
    },
    {
      "ques": "What will be printed: print(2 ** 3 ** 2)",
      "quesType": "fill",
      "ans": "512"
    },
    {
      "ques": "Output of: print(bool('False'))",
      "quesType": "fill",
      "ans": "True"
    },
    {
      "ques": "What is printed: print(divmod(9, 2))",
      "quesType": "fill",
      "ans": "(4, 1)"
    },
    {
      "ques": "Output of: print(oct(8))",
      "quesType": "fill",
      "ans": "0o10"
    },
    {
      "ques": "What is returned by: [i for i in range(5) if i % 2 == 0]",
      "quesType": "fill",
      "ans": "[0, 2, 4]"
    }
]


  let pyIncorrectAnswers = [];

let pyTimerId = "";
let pySkip = document.getElementById("pySkip");
let codingpyQues = document.getElementById("codingpyQues");
let mcqpy = document.getElementById("mcqpy");
let pyQuestionNumber = document.getElementById("pyQuestionNumber");
let pyQuestionCount = 2;
let pyScore = 0;
let pyScoreDisplay = document.getElementById("pyScoreDisplay");
let pyScoreShow = document.getElementById("pyScoreShow");
let pySkip2 = document.getElementById("pySkip2");

let pyFillAns = document.getElementById("pyFillAns");
let pyStatus1 = document.getElementById("pyStatus1");
let pyStatus2 = document.getElementById("pyStatus2");
let pyStatus3 = document.getElementById("pyStatus3");
let pyCheckFill = document.getElementById("pyCheckFill");

let codingResultpy = document.getElementById("codingResultpy");

let pyIncorrectAnswersDisplay = document.getElementById("pyIncorrectAnswersDisplay");
let pyScoreBelow70 = document.getElementById("pyScoreBelow70");
let pyScore100 = document.getElementById("pyScore100");

let pyResult1 = document.getElementById("pyResult1");
let pyResult2 = document.getElementById("pyResult2");
let pyResult3 = document.getElementById("pyResult3");
let pyResult4 = document.getElementById("pyResult4");
let pyResult5 = document.getElementById("pyResult5");
let pyBg1 = document.getElementById("pyBg1");


function codingpyStart(){
    codingpyHide.classList.add("d-none");
codingpyShow.classList.remove("d-none");

// codingpyBack.classList.add("d-none");

let fillBlankpy = document.getElementById("fillBlankpy");
let op1py = document.getElementById("op1py");
let op2py = document.getElementById("op2py");
let op3py = document.getElementById("op3py");
let op4py = document.getElementById("op4py");

let pyFillAns = document.getElementById("pyFillAns");
let pyStatus1 = document.getElementById("pyStatus1");
let pyStatus2 = document.getElementById("pyStatus2");
let pyStatus3 = document.getElementById("pyStatus3");
let pyCheckFill = document.getElementById("pyCheckFill");

pyFillAns.disabled = false;
pyStatus1.classList.remove("d-none");
pyStatus2.classList.add("d-none");
pyStatus3.classList.add("d-none");
pyFillAns.value = "";
pySkip2.textContent = "Skip";
pySkip2.style.backgroundColor = "orange";
pySkip2.style.borderColor = "orange";

pySkip.textContent = "Skip";
pySkip.style.backgroundColor = "orange";
pySkip.style.borderColor = "orange";
pyScoreShow.textContent = "";
pyTimer.style.color = "black";


if (pyLevel === 1) {
  let pyRandom = Math.floor(Math.random() * codingpy1Arr.length);
  let y = codingpy1Arr[pyRandom];
  pyTimer.textContent = "20";
  pyTime = 20;

  pyTimerId = setInterval(function () {
    pyTime = pyTime - 1;
    if (pyTime == 0) {
      clearInterval(pyTimerId);
      pyQuestionNumber.textContent = "Question:" + pyQuestionCount + "/10";
      pyQuestionCount = pyQuestionCount + 1;
      pyTime = 20;
      codingpyStart();
    }
    if (pyTime <= 5) {
      pyTimer.style.color = "red";
      pyTimer.textContent = pyTime;
    } else {
      pyTimer.textContent = pyTime;
    }
  }, 1000);

  if (pyQuestionCount == 12) {
    clearInterval(pyTimerId);
    mcqpy.classList.add("d-none");
    document.getElementById("pyScoreEnd").textContent = pyScoreDisplay.textContent;
    fillBlankpy.classList.add("d-none");
    codingpyShow.classList.add("d-none");
    codingResultpy.classList.remove("d-none");

    if (pyScore < 70) {
      pyScoreBelow70.classList.remove("d-none");
      pyScore100.classList.add("d-none");
      sectionCodingpy.classList.add("back15");

      pyResult1.textContent = "Test finished!!";
      pyResult2.textContent = "😓 Oops! Not quite right.";
      pyResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      pyResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      pyIncorrectAnswersDisplay.appendChild(h2);

      for (let z of pyIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        pyIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (pyScore < 100) {
      pyScoreBelow70.classList.remove("d-none");
      pyScore100.classList.add("d-none");
      sectionCodingpy.classList.add("back15");

      pyResult1.textContent = "Test finished!!";
      pyResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      pyResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      pyResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      pyIncorrectAnswersDisplay.appendChild(h2);

      for (let z of pyIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        pyIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (pyScore === 100) {
      document.getElementById("sectionCodingpy").classList.add("back14");
      pyScore100.classList.remove("d-none");
      pyScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqpy.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingpyQues.innerHTML = formattedQuestion;

    fillBlankpy.classList.add("d-none");
    op1py.textContent = y.op1;
    op2py.textContent = y.op2;
    op3py.textContent = y.op3;
    op4py.textContent = y.op4;

    const allOps = [op1py, op2py, op3py, op4py];
    allOps.forEach((op, i) => {
      op.onclick = function () {
        allOps.forEach(o => (o.disabled = true));
        clearInterval(pyTimerId);
        pyTime = 20;

        if (op.textContent === y.ans) {
          op.style.backgroundColor = "green";
          pyScore += 10;
          pyScoreShow.textContent = "+10";
          pyScoreShow.style.color = "green";
        } else {
          op.style.backgroundColor = "red";
          pyScore -= 5;
          pyScoreShow.textContent = "-5";
          pyScoreShow.style.color = "red";
          let wrong_answer = { ques: y.ques, correct: y.ans, wrong: op.textContent };
          pyIncorrectAnswers.push(wrong_answer);
        }

        pyScoreDisplay.textContent = "Score: " + pyScore + "/100";

        pySkip.textContent = "Next";
        pySkip.style.backgroundColor = "#23ebdd";
        pySkip.style.borderColor = "#23ebdd";

        pySkip.onclick = function () {
          pyQuestionNumber.textContent = "Question:" + pyQuestionCount + "/10";
          pyQuestionCount += 1;
          allOps.forEach(o => {
            o.disabled = false;
            o.style.backgroundColor = "white";
          });
          codingpyStart();
        };
      };
    });

    pySkip.onclick = function () {
      clearInterval(pyTimerId);
      pyTime = 20;
      pyQuestionNumber.textContent = "Question:" + pyQuestionCount + "/10";
      pyQuestionCount += 1;
      allOps.forEach(o => {
        o.disabled = false;
        o.style.backgroundColor = "white";
      });
      let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
      pyIncorrectAnswers.push(wrong_answer);
      codingpyStart();
    };
  } else {
    mcqpy.classList.add("d-none");
    fillBlankpy.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingpyQues.innerHTML = formattedQuestion;

    pyCheckFill.onclick = function () {
      clearInterval(pyTimerId);
      pyCheckFill.disabled = false;
      pySkip2.textContent = "Next";
      pySkip2.style.backgroundColor = "#23ebdd";
      pySkip2.style.borderColor = "#23ebdd";
      pyFillAns.disabled = true;

      if (pyFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        pyStatus1.classList.add("d-none");
        pyStatus2.classList.remove("d-none");

        pyScore += 10;
        pyScoreShow.textContent = "+10";
        pyScoreShow.style.color = "green";
      } else {
        pyStatus1.classList.add("d-none");
        pyStatus3.classList.remove("d-none");

        pyScore -= 5;
        pyScoreShow.textContent = "-5";
        pyScoreShow.style.color = "red";

        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: pyFillAns.value };
        pyIncorrectAnswers.push(wrong_answer);
      }

      pyScoreDisplay.textContent = "Score: " + pyScore + "/100";
    };

    pySkip2.onclick = function () {
      if (pyFillAns.value === "") {
        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
        pyIncorrectAnswers.push(wrong_answer);
      }
      clearInterval(pyTimerId);
      pyTime = 20;
      pyQuestionNumber.textContent = "Question:" + pyQuestionCount + "/10";
      pyQuestionCount += 1;
      codingpyStart();
    };
  }
}

else if (pyLevel === 2) {
  let pyRandom = Math.floor(Math.random() * codingpy2Arr.length);
  let y = codingpy2Arr[pyRandom];
  pyTimer.textContent = "25";
  pyTime = 25;

  pyTimerId = setInterval(function () {
    pyTime = pyTime - 1;
    if (pyTime == 0) {
      clearInterval(pyTimerId);
      pyQuestionNumber.textContent = "Question:" + pyQuestionCount + "/10";
      pyQuestionCount = pyQuestionCount + 1;
      pyTime = 25;
      codingpyStart();
    }
    if (pyTime <= 5) {
      pyTimer.style.color = "red";
      pyTimer.textContent = pyTime;
    } else {
      pyTimer.textContent = pyTime;
    }
  }, 1000);

  if (pyQuestionCount == 12) {
    clearInterval(pyTimerId);
    mcqpy.classList.add("d-none");
    document.getElementById("pyScoreEnd").textContent = pyScoreDisplay.textContent;
    fillBlankpy.classList.add("d-none");
    codingpyShow.classList.add("d-none");
    codingResultpy.classList.remove("d-none");

    if (pyScore < 70) {
      pyScoreBelow70.classList.remove("d-none");
      pyScore100.classList.add("d-none");
      sectionCodingpy.classList.add("back15");

      pyResult1.textContent = "Test finished!!";
      pyResult2.textContent = "😓 Oops! Not quite right.";
      pyResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      pyResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      pyIncorrectAnswersDisplay.appendChild(h2);

      for (let z of pyIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        pyIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (pyScore < 100) {
      pyScoreBelow70.classList.remove("d-none");
      pyScore100.classList.add("d-none");
      sectionCodingpy.classList.add("back15");

      pyResult1.textContent = "Test finished!!";
      pyResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      pyResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      pyResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      pyIncorrectAnswersDisplay.appendChild(h2);

      for (let z of pyIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        pyIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (pyScore === 100) {
      document.getElementById("sectionCodingpy").classList.add("back14");
      pyScore100.classList.remove("d-none");
      pyScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqpy.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingpyQues.innerHTML = formattedQuestion;
    fillBlankpy.classList.add("d-none");
    op1py.textContent = y.op1;
    op2py.textContent = y.op2;
    op3py.textContent = y.op3;
    op4py.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(pyTimerId);
      pyTime = 25;
      pySkip.textContent = "Next";
      pySkip.style.backgroundColor = "#23ebdd";
      pySkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        pyScore += 10;
        pyScoreShow.textContent = "+10";
        pyScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        pyScore -= 5;
        pyScoreShow.textContent = "-5";
        pyScoreShow.style.color = "red";
        pyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      pyScoreDisplay.textContent = "Score: " + pyScore + "/100";
    }

    op1py.onclick = () => handleOptionClick(op1py, [op2py, op3py, op4py]);
    op2py.onclick = () => handleOptionClick(op2py, [op1py, op3py, op4py]);
    op3py.onclick = () => handleOptionClick(op3py, [op1py, op2py, op4py]);
    op4py.onclick = () => handleOptionClick(op4py, [op1py, op2py, op3py]);

    pySkip.onclick = function () {
      clearInterval(pyTimerId);
      pyTime = 25;
      pyQuestionNumber.textContent = "Question:" + pyQuestionCount + "/10";
      pyQuestionCount++;
      [op1py, op2py, op3py, op4py].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      pyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingpyStart();
    };
  }
   else {
  mcqpy.classList.add("d-none");
  fillBlankpy.classList.remove("d-none");
  let formattedQuestion = y.ques.replace(/\n/g, "<br>");
  codingpyQues.innerHTML = formattedQuestion;

  pyCheckFill.disabled = false;
  pyFillAns.disabled = false;
  pyFillAns.value = "";
  pyStatus1.classList.remove("d-none");
  pyStatus2.classList.add("d-none");
  pyStatus3.classList.add("d-none");
  pyScoreShow.textContent = "";

  pyCheckFill.onclick = function () {
    clearInterval(pyTimerId);
    pyCheckFill.disabled = true;
    pySkip2.textContent = "Next";
    pySkip2.style.backgroundColor = "#23ebdd";
    pySkip2.style.borderColor = "#23ebdd";
    pyFillAns.disabled = true;

    if (pyFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
      pyStatus1.classList.add("d-none");
      pyStatus2.classList.remove("d-none");
      pyScore += 10;
      pyScoreShow.textContent = "+10";
      pyScoreShow.style.color = "green";
    } else {
      pyStatus1.classList.add("d-none");
      pyStatus3.classList.remove("d-none");
      pyScore -= 5;
      pyScoreShow.textContent = "-5";
      pyScoreShow.style.color = "red";
      pyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: pyFillAns.value });
    }
    pyScoreDisplay.textContent = "Score: " + pyScore + "/100";
  };

  pySkip2.onclick = function () {
    if (pyFillAns.value === "") {
      pyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
    }
    clearInterval(pyTimerId);
    pyTime = 25;
    pyQuestionNumber.textContent = "Question:" + pyQuestionCount + "/10";
    pyQuestionCount++;
    codingpyStart(); 
  };
}

}
else if (pyLevel === 3) {
  let pyRandom = Math.floor(Math.random() * codingpy3Arr.length);
  let y = codingpy3Arr[pyRandom];
  pyTimer.textContent = "30";
  pyTime = 30;

  pyTimerId = setInterval(function () {
    pyTime = pyTime - 1;
    if (pyTime == 0) {
      clearInterval(pyTimerId);
      pyQuestionNumber.textContent = "Question:" + pyQuestionCount + "/10";
      pyQuestionCount = pyQuestionCount + 1;
      pyTime = 30;
      codingpyStart();
    }
    if (pyTime <= 5) {
      pyTimer.style.color = "red";
      pyTimer.textContent = pyTime;
    } else {
      pyTimer.textContent = pyTime;
    }
  }, 1000);

  if (pyQuestionCount == 12) {
    clearInterval(pyTimerId);
    mcqpy.classList.add("d-none");
    document.getElementById("pyScoreEnd").textContent = pyScoreDisplay.textContent;
    fillBlankpy.classList.add("d-none");
    codingpyShow.classList.add("d-none");
    codingResultpy.classList.remove("d-none");

    if (pyScore < 70) {
      pyScoreBelow70.classList.remove("d-none");
      pyScore100.classList.add("d-none");
      sectionCodingpy.classList.add("back15");

      pyResult1.textContent = "Test finished!!";
      pyResult2.textContent = "😓 Oops! Not quite right.";
      pyResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      pyResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      pyIncorrectAnswersDisplay.appendChild(h2);

      for (let z of pyIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        pyIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (pyScore < 100) {
      pyScoreBelow70.classList.remove("d-none");
      pyScore100.classList.add("d-none");
      sectionCodingpy.classList.add("back15");

      pyResult1.textContent = "Test finished!!";
      pyResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      pyResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      pyResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      pyIncorrectAnswersDisplay.appendChild(h2);

      for (let z of pyIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        pyIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (pyScore === 100) {
      document.getElementById("sectionCodingpy").classList.add("back14");
      pyScore100.classList.remove("d-none");
      pyScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqpy.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingpyQues.innerHTML = formattedQuestion;
    fillBlankpy.classList.add("d-none");
    op1py.textContent = y.op1;
    op2py.textContent = y.op2;
    op3py.textContent = y.op3;
    op4py.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(pyTimerId);
      pyTime = 30;
      pySkip.textContent = "Next";
      pySkip.style.backgroundColor = "#23ebdd";
      pySkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        pyScore += 10;
        pyScoreShow.textContent = "+10";
        pyScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        pyScore -= 5;
        pyScoreShow.textContent = "-5";
        pyScoreShow.style.color = "red";
        pyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      pyScoreDisplay.textContent = "Score: " + pyScore + "/100";
    }

    op1py.onclick = () => handleOptionClick(op1py, [op2py, op3py, op4py]);
    op2py.onclick = () => handleOptionClick(op2py, [op1py, op3py, op4py]);
    op3py.onclick = () => handleOptionClick(op3py, [op1py, op2py, op4py]);
    op4py.onclick = () => handleOptionClick(op4py, [op1py, op2py, op3py]);

    pySkip.onclick = function () {
      clearInterval(pyTimerId);
      pyTime = 30;
      pyQuestionNumber.textContent = "Question:" + pyQuestionCount + "/10";
      pyQuestionCount++;
      [op1py, op2py, op3py, op4py].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      pyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingpyStart();
    };
  } 
    else {
  mcqpy.classList.add("d-none");
  fillBlankpy.classList.remove("d-none");
  let formattedQuestion = y.ques.replace(/\n/g, "<br>");
  codingpyQues.innerHTML = formattedQuestion;

  pyCheckFill.disabled = false;
  pyFillAns.disabled = false;
  pyFillAns.value = "";
  pyStatus1.classList.remove("d-none");
  pyStatus2.classList.add("d-none");
  pyStatus3.classList.add("d-none");
  pyScoreShow.textContent = "";

  pyCheckFill.onclick = function () {
    clearInterval(pyTimerId);
    pyCheckFill.disabled = true;
    pySkip2.textContent = "Next";
    pySkip2.style.backgroundColor = "#23ebdd";
    pySkip2.style.borderColor = "#23ebdd";
    pyFillAns.disabled = true;

    if (pyFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
      pyStatus1.classList.add("d-none");
      pyStatus2.classList.remove("d-none");
      pyScore += 10;
      pyScoreShow.textContent = "+10";
      pyScoreShow.style.color = "green";
    } else {
      pyStatus1.classList.add("d-none");
      pyStatus3.classList.remove("d-none");
      pyScore -= 5;
      pyScoreShow.textContent = "-5";
      pyScoreShow.style.color = "red";
      pyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: pyFillAns.value });
    }
    pyScoreDisplay.textContent = "Score: " + pyScore + "/100";
  };

  pySkip2.onclick = function () {
    if (pyFillAns.value === "") {
      pyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
    }
    clearInterval(pyTimerId);
    pyTime = 30;
    pyQuestionNumber.textContent = "Question:" + pyQuestionCount + "/10";
    pyQuestionCount++;
    codingpyStart(); 
  };
}

}

    
}
function resetCodingpy() {
  document.getElementById("codingpyShow").classList.add("d-none");
  document.getElementById("codingResultpy").classList.add("d-none");
  document.getElementById("codingpyHide").classList.remove("d-none");

  document.getElementById("pyQuestionNumber").innerText = "Question: 1/10";
  document.getElementById("pyScoreDisplay").innerText = "Score: 0/100";
  document.getElementById("pyScoreShow").innerText = "";
  document.getElementById("pyTimer").innerText = "00";
  document.getElementById("codingpyQues").innerText = "";

  document.getElementById("op1py").innerText = "option1";
  document.getElementById("op2py").innerText = "option2";
  document.getElementById("op3py").innerText = "option3";
  document.getElementById("op4py").innerText = "option4";

  pyIncorrectAnswers = [];
  document.getElementById("pyIncorrectAnswersDisplay").innerHTML = "";

  pyScore100.classList.add("d-none");
  pyScoreBelow70.classList.add("d-none");

  pyResult1.textContent = "";
  pyResult2.textContent = "";
  pyResult3.src = "";
  pyResult4.textContent = "";

  sectionCodingpy.classList.remove("back14");
  sectionCodingpy.classList.remove("back15");

  document.getElementById("pyFillAns").value = "";
  document.getElementById("fillBlankpy").style.display = "none";
  document.getElementById("mcqpy").style.display = "block";

  document.getElementById("pyStatus1").classList.remove("d-none");
  document.getElementById("pyStatus2").classList.add("d-none");
  document.getElementById("pyStatus3").classList.add("d-none");

  if (typeof pyTimerId !== "undefined") {
    clearInterval(pyTimerId);
  }
  pyTime = 20;
  pyQuestionCount = 2;
  pyScore = 0;
}
function pyResetLevel() {
  pyButton1.disabled = false;
  pyButton2.disabled = false;
  pyButton3.disabled = false;
  pyButton.classList.add("d-none");
  pyIncorrectAnswers = [];
}
function goBackToCoding() {
  display('section1');
  setTimeout(() => {
    document.getElementById('Coding').scrollIntoView({
      behavior: 'auto', 
      block: 'start'
    });
  },25);
}
function goBackToList() {
  display('section1');
  setTimeout(() => {
    document.getElementById('List').scrollIntoView({
      behavior: 'auto', 
      block: 'start'
    });
  },25);
}
function goBackToTyping() {
  display('section1');
  setTimeout(() => {
    document.getElementById('Typing').scrollIntoView({
      behavior: 'auto', 
      block: 'start'
    });
  },25);
}
function goBackToWeb() {
  display('section1');
  setTimeout(() => {
    document.getElementById('Web').scrollIntoView({
      behavior: 'auto', 
      block: 'start'
    });
  },25);
}
function goBackToStopWatch() {
  display('section1');
  setTimeout(() => {
    document.getElementById('StopWatch').scrollIntoView({
      behavior: 'auto', 
      block: 'start'
    });
  },25);
}
function goBackToMath() {
  display('section1');
  setTimeout(() => {
    document.getElementById('Math').scrollIntoView({
      behavior: 'auto', 
      block: 'start'
    });
  },25);
}




// #C

let sharpButton = document.getElementById("sharpButton");
let sharpButton1 = document.getElementById("sharpButton1");
let sharpButton2 = document.getElementById("sharpButton2");
let sharpButton3 = document.getElementById("sharpButton3");
let sharpLevel = 0;
let sharpCodingTest = document.getElementById("sharpCodingTest");
let sharpTimer = document.getElementById("sharpTimer");

sharpButton1.onclick = function () {
  sharpButton2.disabled = true;
  sharpButton3.disabled = true;
  sharpLevel = 1;

  sharpButton.classList.remove("d-none");
  sharpButton.classList.add("d-block");
};

sharpButton2.onclick = function () {
  sharpButton1.disabled = true;
  sharpButton3.disabled = true;
  sharpLevel = 2;

  sharpButton.classList.remove("d-none");
  sharpButton.classList.add("d-block");
};

sharpButton3.onclick = function () {
  sharpButton2.disabled = true;
  sharpButton1.disabled = true;
  sharpLevel = 3;

  sharpButton.classList.remove("d-none");
  sharpButton.classList.add("d-block");
};

let sharpTime = 0;

let codingsharpShow = document.getElementById("codingsharpShow");
let codingsharpHide = document.getElementById("codingsharpHide");
let codingsharpBack = document.getElementById("codingsharpBack");

codingsharpBack.onclick = function () {
  codingsharpShow.classList.add("d-none");
  codingsharpHide.classList.remove("d-none");
};

let codingsharp1Arr=[
  {
    "ques": "Which keyword is used to define a class in C#?",
    "quesType": "mcq",
    "op1": "struct",
    "op2": "define",
    "op3": "class",
    "op4": "object",
    "ans": "class"
  },
  {
    "ques": "What is the correct file extension for a C# source file?",
    "quesType": "mcq",
    "op1": ".csharp",
    "op2": ".cs",
    "op3": ".c#",
    "op4": ".cpp",
    "ans": ".cs"
  },
  {
    "ques": "Which method is the entry point of a C# program?",
    "quesType": "mcq",
    "op1": "start()",
    "op2": "Main()",
    "op3": "init()",
    "op4": "run()",
    "ans": "Main()"
  },
  {
    "ques": "Which keyword is used to inherit a class in C#?",
    "quesType": "mcq",
    "op1": "inherits",
    "op2": "extends",
    "op3": "base",
    "op4": ":",
    "ans": ":"
  },
  {
    "ques": "Which of the following is a value type in C#?",
    "quesType": "mcq",
    "op1": "class",
    "op2": "interface",
    "op3": "int",
    "op4": "delegate",
    "ans": "int"
  },
  {
    "ques": "Which keyword is used to create objects in C#?",
    "quesType": "mcq",
    "op1": "object",
    "op2": "create",
    "op3": "new",
    "op4": "instance",
    "ans": "new"
  },
  {
    "ques": "Which symbol is used for single-line comments in C#?",
    "quesType": "mcq",
    "op1": "##",
    "op2": "//",
    "op3": "#",
    "op4": "--",
    "ans": "//"
  },
  {
    "ques": "What is the size of an int in C#?",
    "quesType": "mcq",
    "op1": "2 bytes",
    "op2": "4 bytes",
    "op3": "8 bytes",
    "op4": "1 byte",
    "ans": "4 bytes"
  },
  {
    "ques": "Which keyword is used to handle exceptions?",
    "quesType": "mcq",
    "op1": "try",
    "op2": "except",
    "op3": "handle",
    "op4": "error",
    "ans": "try"
  },
  {
    "ques": "Which of these is a reference type?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "bool",
    "op3": "class",
    "op4": "float",
    "ans": "class"
  },
  {
    "ques": "Which loop is guaranteed to execute at least once?",
    "quesType": "mcq",
    "op1": "for",
    "op2": "while",
    "op3": "do-while",
    "op4": "foreach",
    "ans": "do-while"
  },
  {
    "ques": "What is the default value of a boolean in C#?",
    "quesType": "mcq",
    "op1": "true",
    "op2": "1",
    "op3": "false",
    "op4": "null",
    "ans": "false"
  },
  {
    "ques": "Which keyword is used to return a value from a method?",
    "quesType": "mcq",
    "op1": "exit",
    "op2": "end",
    "op3": "return",
    "op4": "stop",
    "ans": "return"
  },
  {
    "ques": "Which access modifier makes a member accessible only within its class?",
    "quesType": "mcq",
    "op1": "private",
    "op2": "public",
    "op3": "protected",
    "op4": "internal",
    "ans": "private"
  },
  {
    "ques": "Which type is used to store text in C#?",
    "quesType": "mcq",
    "op1": "char",
    "op2": "string",
    "op3": "text",
    "op4": "int",
    "ans": "string"
  },
  {
    "ques": "How do you write a namespace in C#?",
    "quesType": "mcq",
    "op1": "package",
    "op2": "namespace",
    "op3": "module",
    "op4": "space",
    "ans": "namespace"
  },
  {
    "ques": "Which of these is used to write output in C#?",
    "quesType": "mcq",
    "op1": "Console.WriteLine()",
    "op2": "print()",
    "op3": "echo",
    "op4": "cout",
    "ans": "Console.WriteLine()"
  },
  {
    "ques": "Which keyword is used to create a constant?",
    "quesType": "mcq",
    "op1": "static",
    "op2": "const",
    "op3": "final",
    "op4": "readonly",
    "ans": "const"
  },
  {
    "ques": "Which operator is used for logical AND?",
    "quesType": "mcq",
    "op1": "&&",
    "op2": "&",
    "op3": "and",
    "op4": "&&&",
    "ans": "&&"
  },
  {
    "ques": "What does IDE stand for?",
    "quesType": "mcq",
    "op1": "Integrated Design Engine",
    "op2": "Intelligent Debug Editor",
    "op3": "Integrated Development Environment",
    "op4": "Internal Development Execution",
    "ans": "Integrated Development Environment"
  },
   { "ques": "What is the keyword to define a class in C#?", "quesType": "fill", "ans": "class" },
  { "ques": "What is the entry point method in a C# program?", "quesType": "fill", "ans": "Main" },
  { "ques": "Which symbol is used to write single-line comments?", "quesType": "fill", "ans": "//" },
  { "ques": "What is the file extension for a C# file?", "quesType": "fill", "ans": ".cs" },
  { "ques": "Keyword used to create an object in C#?", "quesType": "fill", "ans": "new" },
  { "ques": "Which data type stores true/false values?", "quesType": "fill", "ans": "bool" },
  { "ques": "How do you write output to the console?", "quesType": "fill", "ans": "Console.WriteLine()" },
  { "ques": "Which keyword is used to inherit a class?", "quesType": "fill", "ans": ":" },
  { "ques": "Which loop executes at least once?", "quesType": "fill", "ans": "do-while" },
  { "ques": "Which type stores decimal numbers?", "quesType": "fill", "ans": "float" },
  { "ques": "Keyword to handle exceptions in C#?", "quesType": "fill", "ans": "try" },
  { "ques": "How do you define a constant value?", "quesType": "fill", "ans": "const" },
  { "ques": "Which type is used to store a group of characters?", "quesType": "fill", "ans": "string" },
  { "ques": "Which operator is used for equality check?", "quesType": "fill", "ans": "==" },
  { "ques": "Which keyword is used to return a value from a method?", "quesType": "fill", "ans": "return" },
  { "ques": "How do you define a namespace?", "quesType": "fill", "ans": "namespace" },
  { "ques": "What keyword is used for conditional checks?", "quesType": "fill", "ans": "if" },
  { "ques": "Which access modifier restricts access within the class?", "quesType": "fill", "ans": "private" },
  { "ques": "Which keyword is used to define a method?", "quesType": "fill", "ans": "void" },
  { "ques": "Which operator is used for logical OR?", "quesType": "fill", "ans": "||" },
  {
    "ques": "Which keyword is used to create a method in C#?",
    "quesType": "mcq",
    "op1": "function",
    "op2": "method",
    "op3": "void",
    "op4": "def",
    "ans": "void"
  },
  {
    "ques": "Which symbol is used for multi-line comments in C#?",
    "quesType": "mcq",
    "op1": "//",
    "op2": "#",
    "op3": "/* */",
    "op4": "<!-- -->",
    "ans": "/* */"
  },
  {
    "ques": "Which data type is used to store true or false in C#?",
    "quesType": "mcq",
    "op1": "boolean",
    "op2": "bool",
    "op3": "bit",
    "op4": "logic",
    "ans": "bool"
  },
  {
    "ques": "What is the result of 10 % 3 in C#?",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "3",
    "op4": "10",
    "ans": "1"
  },
  {
    "ques": "Which loop is best used when the number of iterations is known?",
    "quesType": "mcq",
    "op1": "while",
    "op2": "do-while",
    "op3": "for",
    "op4": "foreach",
    "ans": "for"
  },
  {
    "ques": "Which of the following is not a valid variable name in C#?",
    "quesType": "mcq",
    "op1": "_value",
    "op2": "1value",
    "op3": "value1",
    "op4": "value_1",
    "ans": "1value"
  },
  {
    "ques": "Which keyword is used to declare a class member as not modifiable?",
    "quesType": "mcq",
    "op1": "const",
    "op2": "readonly",
    "op3": "static",
    "op4": "final",
    "ans": "readonly"
  },
  {
    "ques": "Which of the following is not a value type?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "float",
    "op3": "string",
    "op4": "bool",
    "ans": "string"
  },
  {
    "ques": "Which access modifier allows access within the same assembly?",
    "quesType": "mcq",
    "op1": "public",
    "op2": "internal",
    "op3": "private",
    "op4": "protected",
    "ans": "internal"
  },
  {
    "ques": "Which operator is used for incrementing a value by 1?",
    "quesType": "mcq",
    "op1": "++",
    "op2": "+=",
    "op3": "+1",
    "op4": "+",
    "ans": "++"
  },
  {
    "ques": "What is the default value of an int variable?",
    "quesType": "mcq",
    "op1": "0",
    "op2": "null",
    "op3": "undefined",
    "op4": "None",
    "ans": "0"
  },
  {
    "ques": "Which keyword is used to define an abstract method?",
    "quesType": "mcq",
    "op1": "virtual",
    "op2": "override",
    "op3": "abstract",
    "op4": "interface",
    "ans": "abstract"
  },
  {
    "ques": "Which of the following is a correct declaration of an array?",
    "quesType": "mcq",
    "op1": "int arr[] = new int[5];",
    "op2": "int arr = new int(5);",
    "op3": "int[] arr = new int[5];",
    "op4": "array arr = int[5];",
    "ans": "int[] arr = new int[5];"
  },
  {
    "ques": "Which keyword is used to override a base class method?",
    "quesType": "mcq",
    "op1": "override",
    "op2": "new",
    "op3": "base",
    "op4": "virtual",
    "ans": "override"
  },
  {
    "ques": "What does OOP stand for?",
    "quesType": "mcq",
    "op1": "Objective Oriented Programming",
    "op2": "Object Oriented Programming",
    "op3": "Object Order Programming",
    "op4": "Ordered Object Programming",
    "ans": "Object Oriented Programming"
  },
  {
    "ques": "What does CLR stand for in .NET?",
    "quesType": "mcq",
    "op1": "Common Language Runtime",
    "op2": "Common Line Runtime",
    "op3": "Code Language Runtime",
    "op4": "Class Level Runtime",
    "ans": "Common Language Runtime"
  },
  {
    "ques": "Which keyword prevents a class from being inherited?",
    "quesType": "mcq",
    "op1": "static",
    "op2": "sealed",
    "op3": "final",
    "op4": "private",
    "ans": "sealed"
  },
  {
    "ques": "Which operator is used for NOT in C#?",
    "quesType": "mcq",
    "op1": "~",
    "op2": "!",
    "op3": "not",
    "op4": "None",
    "ans": "!"
  },
  {
    "ques": "Which keyword is used to implement interface methods?",
    "quesType": "mcq",
    "op1": "override",
    "op2": "new",
    "op3": "implement",
    "op4": "interface",
    "ans": "override"
  },
  {
    "ques": "Which data type holds a single Unicode character?",
    "quesType": "mcq",
    "op1": "char",
    "op2": "string",
    "op3": "int",
    "op4": "byte",
    "ans": "char"
  },
  {
    "ques": "Which exception occurs when dividing by zero?",
    "quesType": "mcq",
    "op1": "DivideException",
    "op2": "ArithmeticException",
    "op3": "DivideByZeroException",
    "op4": "MathError",
    "ans": "DivideByZeroException"
  },
  {
    "ques": "Which class is the base class for all exceptions?",
    "quesType": "mcq",
    "op1": "BaseException",
    "op2": "SystemException",
    "op3": "Exception",
    "op4": "Error",
    "ans": "Exception"
  },
  {
    "ques": "What does IDE stand for in programming?",
    "quesType": "mcq",
    "op1": "Integrated Debug Environment",
    "op2": "Intelligent Development Environment",
    "op3": "Integrated Development Environment",
    "op4": "Interface Design Editor",
    "ans": "Integrated Development Environment"
  },
  {
    "ques": "Which class is used to read user input in console apps?",
    "quesType": "mcq",
    "op1": "Console.Read()",
    "op2": "Console.Input()",
    "op3": "Console.ReadLine()",
    "op4": "Input.Read()",
    "ans": "Console.ReadLine()"
  },
  {
    "ques": "Which keyword is used to define an interface?",
    "quesType": "mcq",
    "op1": "interface",
    "op2": "abstract",
    "op3": "struct",
    "op4": "implements",
    "ans": "interface"
  },
  {
    "ques": "Which keyword is used to call the base class constructor?",
    "quesType": "mcq",
    "op1": "this",
    "op2": "base",
    "op3": "super",
    "op4": "parent",
    "ans": "base"
  },
  {
    "ques": "What is the default value of a string?",
    "quesType": "mcq",
    "op1": "\"0\"",
    "op2": "null",
    "op3": "\"\"",
    "op4": "undefined",
    "ans": "null"
  },
  {
    "ques": "Which keyword is used to define a struct?",
    "quesType": "mcq",
    "op1": "class",
    "op2": "struct",
    "op3": "structure",
    "op4": "define",
    "ans": "struct"
  },
  {
    "ques": "Which operator is used to access members of an object?",
    "quesType": "mcq",
    "op1": "::",
    "op2": ".",
    "op3": "->",
    "op4": ":",
    "ans": "."
  },
  {
    "ques": "Which keyword is used to define an enumeration?",
    "quesType": "mcq",
    "op1": "enum",
    "op2": "list",
    "op3": "set",
    "op4": "array",
    "ans": "enum"
  },
  { "ques": "Keyword to define a struct in C#?", "quesType": "fill", "ans": "struct" },
  { "ques": "Keyword to define a constant field?", "quesType": "fill", "ans": "const" },
  { "ques": "Operator used for logical NOT?", "quesType": "fill", "ans": "!" },
  { "ques": "Default value of an uninitialized string?", "quesType": "fill", "ans": "null" },
  { "ques": "Symbol used for accessing object members?", "quesType": "fill", "ans": "." },
  { "ques": "What keyword is used to stop a loop?", "quesType": "fill", "ans": "break" },
  { "ques": "Data type to store a single character?", "quesType": "fill", "ans": "char" },
  { "ques": "What is the keyword for defining an interface?", "quesType": "fill", "ans": "interface" },
  { "ques": "Name of the exception for divide by zero?", "quesType": "fill", "ans": "DivideByZeroException" },
  { "ques": "Main base class for exceptions?", "quesType": "fill", "ans": "Exception" },
  { "ques": "What symbol is used for increment?", "quesType": "fill", "ans": "++" },
  { "ques": "How do you declare an array of integers?", "quesType": "fill", "ans": "int[] arr" },
  { "ques": "What is the symbol for modulus?", "quesType": "fill", "ans": "%" },
  { "ques": "Which keyword is used to seal a class?", "quesType": "fill", "ans": "sealed" },
  { "ques": "Method used to read input?", "quesType": "fill", "ans": "Console.ReadLine()" },
  { "ques": "What is the .NET runtime called?", "quesType": "fill", "ans": "CLR" },
  { "ques": "How do you define an enumeration?", "quesType": "fill", "ans": "enum" },
  { "ques": "Which keyword is used for a nullable type?", "quesType": "fill", "ans": "?" },
  { "ques": "What is the access modifier for full public access?", "quesType": "fill", "ans": "public" },
  { "ques": "What is the operator used to compare equality?", "quesType": "fill", "ans": "==" },
  { "ques": "Which keyword calls the parent constructor?", "quesType": "fill", "ans": "base" },
  { "ques": "Which loop checks condition first?", "quesType": "fill", "ans": "while" },
  { "ques": "What does IDE stand for?", "quesType": "fill", "ans": "Integrated Development Environment" },
  { "ques": "Which keyword is used to define a class?", "quesType": "fill", "ans": "class" },
  { "ques": "What keyword defines a readonly variable?", "quesType": "fill", "ans": "readonly" },
  { "ques": "What keyword is used to override a method?", "quesType": "fill", "ans": "override" },
  { "ques": "Which keyword is used to define abstract methods?", "quesType": "fill", "ans": "abstract" },
  { "ques": "How do you print to the console?", "quesType": "fill", "ans": "Console.WriteLine()" },
  { "ques": "What is the keyword to return a value?", "quesType": "fill", "ans": "return" },
  { "ques": "What keyword allows access within the same class?", "quesType": "fill", "ans": "private" },
  {
    "ques": "What is the entry point method in a C# console application?",
    "quesType": "mcq",
    "op1": "Start()",
    "op2": "Begin()",
    "op3": "Main()",
    "op4": "Init()",
    "ans": "Main()"
  },
  {
    "ques": "Which keyword is used to inherit from a base class?",
    "quesType": "mcq",
    "op1": "extends",
    "op2": "base",
    "op3": "inherits",
    "op4": ":",
    "ans": ":"
  },
  {
    "ques": "Which data type is used to represent decimal numbers?",
    "quesType": "mcq",
    "op1": "float",
    "op2": "decimal",
    "op3": "double",
    "op4": "All of these",
    "ans": "All of these"
  },
  {
    "ques": "Which access modifier makes members visible only to child classes?",
    "quesType": "mcq",
    "op1": "private",
    "op2": "protected",
    "op3": "internal",
    "op4": "public",
    "ans": "protected"
  },
  {
    "ques": "Which keyword is used to define a block of code that may throw an exception?",
    "quesType": "mcq",
    "op1": "try",
    "op2": "catch",
    "op3": "throw",
    "op4": "check",
    "ans": "try"
  },
  {
    "ques": "Which class is used to handle console output?",
    "quesType": "mcq",
    "op1": "Console.Out()",
    "op2": "System.Print()",
    "op3": "Console.WriteLine()",
    "op4": "Console.Output()",
    "ans": "Console.WriteLine()"
  },
  {
    "ques": "Which value is returned by a method that does not return anything?",
    "quesType": "mcq",
    "op1": "null",
    "op2": "void",
    "op3": "0",
    "op4": "undefined",
    "ans": "void"
  },
  {
    "ques": "What is the result of 7 / 2 in C#?",
    "quesType": "mcq",
    "op1": "3.5",
    "op2": "4",
    "op3": "3",
    "op4": "Error",
    "ans": "3"
  },
  {
    "ques": "Which loop guarantees at least one execution?",
    "quesType": "mcq",
    "op1": "for",
    "op2": "while",
    "op3": "foreach",
    "op4": "do-while",
    "ans": "do-while"
  },
  {
    "ques": "Which keyword is used to skip an iteration in a loop?",
    "quesType": "mcq",
    "op1": "exit",
    "op2": "return",
    "op3": "skip",
    "op4": "continue",
    "ans": "continue"
  },
  {
    "ques": "Which is a correct syntax to create a class in C#?",
    "quesType": "mcq",
    "op1": "class MyClass {}",
    "op2": "MyClass() {}",
    "op3": "def class MyClass {}",
    "op4": "Class: MyClass",
    "ans": "class MyClass {}"
  },
  {
    "ques": "What keyword is used to implement multiple interfaces?",
    "quesType": "mcq",
    "op1": "interface",
    "op2": "inherit",
    "op3": ":",
    "op4": "with",
    "ans": ":"
  },
  {
    "ques": "Which keyword is used to create an object?",
    "quesType": "mcq",
    "op1": "make",
    "op2": "class",
    "op3": "new",
    "op4": "create",
    "ans": "new"
  },
  {
    "ques": "Which data type is used to store a true or false value?",
    "quesType": "mcq",
    "op1": "char",
    "op2": "bit",
    "op3": "boolean",
    "op4": "bool",
    "ans": "bool"
  },
  {
    "ques": "What does .NET stand for?",
    "quesType": "mcq",
    "op1": "Network Engine Tool",
    "op2": "Dot Network",
    "op3": "No Exact Term",
    "op4": "It’s just a name",
    "ans": "It’s just a name"
  },
  {
    "ques": "Which loop is used for collection traversal?",
    "quesType": "mcq",
    "op1": "foreach",
    "op2": "while",
    "op3": "do-while",
    "op4": "if",
    "ans": "foreach"
  },
  {
    "ques": "Which type of method can be called without an object?",
    "quesType": "mcq",
    "op1": "abstract",
    "op2": "virtual",
    "op3": "instance",
    "op4": "static",
    "ans": "static"
  },
  {
    "ques": "Which method is used to get current date and time?",
    "quesType": "mcq",
    "op1": "System.Time.Now()",
    "op2": "DateTime.Now",
    "op3": "GetDate()",
    "op4": "Clock.Now",
    "ans": "DateTime.Now"
  },
  {
    "ques": "What keyword is used to handle exceptions?",
    "quesType": "mcq",
    "op1": "catch",
    "op2": "throw",
    "op3": "handle",
    "op4": "rescue",
    "ans": "catch"
  },
  {
    "ques": "What is the correct file extension for C# files?",
    "quesType": "mcq",
    "op1": ".cs",
    "op2": ".csharp",
    "op3": ".c#",
    "op4": ".net",
    "ans": ".cs"
  },
  {
    "ques": "What is the base class for all classes in C#?",
    "quesType": "mcq",
    "op1": "BaseObject",
    "op2": "System.Object",
    "op3": "ObjectBase",
    "op4": "Class",
    "ans": "System.Object"
  },
  {
    "ques": "Which data type is best for monetary values?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "float",
    "op3": "double",
    "op4": "decimal",
    "ans": "decimal"
  },
  {
    "ques": "Which keyword defines a property?",
    "quesType": "mcq",
    "op1": "getset",
    "op2": "property",
    "op3": "prop",
    "op4": "get; set;",
    "ans": "get; set;"
  },
  {
    "ques": "Which function returns the length of a string?",
    "quesType": "mcq",
    "op1": "Length()",
    "op2": "strLength()",
    "op3": "size()",
    "op4": "Length",
    "ans": "Length"
  },
  {
    "ques": "Which class handles strings in C#?",
    "quesType": "mcq",
    "op1": "Char",
    "op2": "Text",
    "op3": "String",
    "op4": "str",
    "ans": "String"
  },
  {
    "ques": "Which keyword is used to indicate inheritance from an interface?",
    "quesType": "mcq",
    "op1": "interface",
    "op2": ":",
    "op3": "with",
    "op4": "inherits",
    "ans": ":"
  },
  {
    "ques": "Which method is used to convert string to int?",
    "quesType": "mcq",
    "op1": "ToInt()",
    "op2": "Int32()",
    "op3": "Convert.ToInt32()",
    "op4": "string.toInt()",
    "ans": "Convert.ToInt32()"
  },
  {
    "ques": "What is boxing in C#?",
    "quesType": "mcq",
    "op1": "Converting int to float",
    "op2": "Converting value type to object",
    "op3": "Object to string",
    "op4": "Looping",
    "ans": "Converting value type to object"
  },
  {
    "ques": "What is the default access modifier of a class?",
    "quesType": "mcq",
    "op1": "public",
    "op2": "private",
    "op3": "internal",
    "op4": "protected",
    "ans": "internal"
  },
  {
    "ques": "Which statement is used to throw an exception?",
    "quesType": "mcq",
    "op1": "throw",
    "op2": "catch",
    "op3": "raise",
    "op4": "error",
    "ans": "throw"
  },
  { "ques": "The keyword to skip an iteration in C# is?", "quesType": "fill", "ans": "continue" },
  { "ques": "The default access modifier of a class is?", "quesType": "fill", "ans": "internal" },
  { "ques": "A method that doesn’t return anything is marked with?", "quesType": "fill", "ans": "void" },
  { "ques": "Entry method in C# console app is called?", "quesType": "fill", "ans": "Main" },
  { "ques": "Symbol used to create an object is?", "quesType": "fill", "ans": "new" },
  { "ques": "Keyword used to declare a static member?", "quesType": "fill", "ans": "static" },
  { "ques": "Keyword used to define a class in C#?", "quesType": "fill", "ans": "class" },
  { "ques": "To read user input in console, use?", "quesType": "fill", "ans": "Console.ReadLine()" },
  { "ques": "To write to console, use?", "quesType": "fill", "ans": "Console.WriteLine()" },
  { "ques": "C# file extension is?", "quesType": "fill", "ans": ".cs" },
  { "ques": "Type used to store true/false?", "quesType": "fill", "ans": "bool" },
  { "ques": "To return a value from method use?", "quesType": "fill", "ans": "return" },
  { "ques": "To stop a loop immediately, use?", "quesType": "fill", "ans": "break" },
  { "ques": "To declare a decimal variable, use ___ keyword.", "quesType": "fill", "ans": "decimal" },
  { "ques": "Keyword to handle exceptions is?", "quesType": "fill", "ans": "catch" },
  { "ques": "The result of 7 / 2 in integer division is?", "quesType": "fill", "ans": "3" },
  { "ques": "Keyword used to inherit a class?", "quesType": "fill", "ans": ":" },
  { "ques": "Keyword used to throw an exception?", "quesType": "fill", "ans": "throw" },
  { "ques": "The method used to get date and time?", "quesType": "fill", "ans": "DateTime.Now" },
  { "ques": "Access modifier to allow child class access?", "quesType": "fill", "ans": "protected" },
  { "ques": "The base class of all classes is?", "quesType": "fill", "ans": "System.Object" },
  { "ques": "What is the full form of OOP?", "quesType": "fill", "ans": "Object Oriented Programming" },
  { "ques": "Which loop checks after executing once?", "quesType": "fill", "ans": "do-while" },
  { "ques": "Data type used for single characters?", "quesType": "fill", "ans": "char" },
  { "ques": "C# was developed by ___?", "quesType": "fill", "ans": "Microsoft" },
  { "ques": "To convert string to int, use?", "quesType": "fill", "ans": "Convert.ToInt32()" },
  { "ques": "To check string length, use?", "quesType": "fill", "ans": "Length" },
  { "ques": "To handle multiple exceptions, use ___ blocks.", "quesType": "fill", "ans": "catch" },
  { "ques": "Keyword used to define a property?", "quesType": "fill", "ans": "get; set;" },
  { "ques": "Which loop is best for collections?", "quesType": "fill", "ans": "foreach" },
  {
    "ques": "Which keyword is used to define a namespace in C#?",
    "quesType": "mcq",
    "op1": "package",
    "op2": "namespace",
    "op3": "module",
    "op4": "define",
    "ans": "namespace"
  },
  {
    "ques": "Which symbol is used to end a statement in C#?",
    "quesType": "mcq",
    "op1": ".",
    "op2": ",",
    "op3": ";",
    "op4": ":",
    "ans": ";"
  },
  {
    "ques": "Which data type is used to store whole numbers?",
    "quesType": "mcq",
    "op1": "float",
    "op2": "string",
    "op3": "int",
    "op4": "bool",
    "ans": "int"
  },
  {
    "ques": "Which of these is a correct variable declaration?",
    "quesType": "mcq",
    "op1": "int num = 5;",
    "op2": "num = 5 int;",
    "op3": "int = num 5;",
    "op4": "int num;",
    "ans": "int num = 5;"
  },
  {
    "ques": "Which symbol is used for addition?",
    "quesType": "mcq",
    "op1": "*",
    "op2": "+",
    "op3": "-",
    "op4": "/",
    "ans": "+"
  },
  {
    "ques": "Which keyword is used to declare a constant?",
    "quesType": "mcq",
    "op1": "final",
    "op2": "let",
    "op3": "readonly",
    "op4": "const",
    "ans": "const"
  },
  {
    "ques": "Which data type is used to store text?",
    "quesType": "mcq",
    "op1": "text",
    "op2": "char",
    "op3": "String",
    "op4": "bool",
    "ans": "String"
  },
  {
    "ques": "How do you start a single-line comment?",
    "quesType": "mcq",
    "op1": "//",
    "op2": "#",
    "op3": "--",
    "op4": "/*",
    "ans": "//"
  },
  {
    "ques": "Which method is used to print something to the screen?",
    "quesType": "mcq",
    "op1": "Write()",
    "op2": "Echo()",
    "op3": "Console.WriteLine()",
    "op4": "Display()",
    "ans": "Console.WriteLine()"
  },
  {
    "ques": "Which of these is a valid identifier?",
    "quesType": "mcq",
    "op1": "2value",
    "op2": "value_2",
    "op3": "value-2",
    "op4": "value.2",
    "ans": "value_2"
  },
  {
    "ques": "What is the correct way to declare a character variable?",
    "quesType": "mcq",
    "op1": "char c = 'A';",
    "op2": "char c = A;",
    "op3": "char c = \"A\";",
    "op4": "char = 'A';",
    "ans": "char c = 'A';"
  },
  {
    "ques": "Which keyword is used to define a method?",
    "quesType": "mcq",
    "op1": "method",
    "op2": "func",
    "op3": "function",
    "op4": "void",
    "ans": "void"
  },
  {
    "ques": "What is the output of: Console.WriteLine(3 + 2);",
    "quesType": "mcq",
    "op1": "5",
    "op2": "32",
    "op3": "3 + 2",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "What is the result of 5 % 2?",
    "quesType": "mcq",
    "op1": "2",
    "op2": "1",
    "op3": "0",
    "op4": "5",
    "ans": "1"
  },
  {
    "ques": "Which keyword is used to return a value from a method?",
    "quesType": "mcq",
    "op1": "exit",
    "op2": "leave",
    "op3": "return",
    "op4": "stop",
    "ans": "return"
  },
  {
    "ques": "Which is the correct syntax for a for loop?",
    "quesType": "mcq",
    "op1": "for (int i = 0; i < 10; i++)",
    "op2": "for i in range(10):",
    "op3": "loop (i = 0; i < 10)",
    "op4": "for (int i = 10)",
    "ans": "for (int i = 0; i < 10; i++)"
  },
  {
    "ques": "What is the output of: Console.WriteLine(\"Hello \" + \"World\");",
    "quesType": "mcq",
    "op1": "HelloWorld",
    "op2": "Hello World",
    "op3": "Hello + World",
    "op4": "Error",
    "ans": "Hello World"
  },
  {
    "ques": "Which data type is used to store decimal numbers?",
    "quesType": "mcq",
    "op1": "bool",
    "op2": "float",
    "op3": "int",
    "op4": "string",
    "ans": "float"
  },
  {
    "ques": "How do you read input from the user?",
    "quesType": "mcq",
    "op1": "Console.Input()",
    "op2": "Input.Read()",
    "op3": "Console.ReadLine()",
    "op4": "Read.Console()",
    "ans": "Console.ReadLine()"
  },
  {
    "ques": "Which of these is NOT a valid keyword in C#?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "value",
    "op3": "class",
    "op4": "public",
    "ans": "value"
  },
  {
    "ques": "Which symbol is used for equality comparison?",
    "quesType": "mcq",
    "op1": "===",
    "op2": "=",
    "op3": "==",
    "op4": "!=",
    "ans": "=="
  },
  {
    "ques": "What is the value of 10 / 2 in integer division?",
    "quesType": "mcq",
    "op1": "5",
    "op2": "5.0",
    "op3": "Error",
    "op4": "0.5",
    "ans": "5"
  },
  {
    "ques": "Which of these is a boolean value?",
    "quesType": "mcq",
    "op1": "true",
    "op2": "yes",
    "op3": "1",
    "op4": "enabled",
    "ans": "true"
  },
  {
    "ques": "How do you write an empty string?",
    "quesType": "mcq",
    "op1": "\" \"",
    "op2": "''",
    "op3": "\"\"",
    "op4": "None",
    "ans": "\"\""
  },
  {
    "ques": "Which method converts a string to uppercase?",
    "quesType": "mcq",
    "op1": "ToCapital()",
    "op2": "Upper()",
    "op3": "ToUpper()",
    "op4": "Capital()",
    "ans": "ToUpper()"
  },
  {
    "ques": "Which operator is used for logical AND?",
    "quesType": "mcq",
    "op1": "||",
    "op2": "&&",
    "op3": "&",
    "op4": "|",
    "ans": "&&"
  },
  {
    "ques": "Which symbol is used for NOT equal?",
    "quesType": "mcq",
    "op1": "!=",
    "op2": "==!",
    "op3": "!==",
    "op4": "><",
    "ans": "!="
  },
  {
    "ques": "What is the value of int x = 5 + 2 * 2?",
    "quesType": "mcq",
    "op1": "14",
    "op2": "9",
    "op3": "11",
    "op4": "7",
    "ans": "9"
  },
  {
    "ques": "Which keyword is used for conditional branching?",
    "quesType": "mcq",
    "op1": "for",
    "op2": "if",
    "op3": "loop",
    "op4": "break",
    "ans": "if"
  },
  {
    "ques": "Which operator is used to increment a value?",
    "quesType": "mcq",
    "op1": "++",
    "op2": "--",
    "op3": "+=",
    "op4": "==",
    "ans": "++"
  }
,
 { "ques": "C# statements end with a ____.", "quesType": "fill", "ans": ";" },
  { "ques": "A string is enclosed in ____ quotes.", "quesType": "fill", "ans": "\"" },
  { "ques": "The addition operator is ____.", "quesType": "fill", "ans": "+" },
  { "ques": "The method to display output is ____.", "quesType": "fill", "ans": "Console.WriteLine()" },
  { "ques": "To store numbers without decimals, we use ____ type.", "quesType": "fill", "ans": "int" },
  { "ques": "To store text, we use ____ type.", "quesType": "fill", "ans": "String" },
  { "ques": "To get input from user, we use ____.", "quesType": "fill", "ans": "Console.ReadLine()" },
  { "ques": "The symbol for multiplication is ____.", "quesType": "fill", "ans": "*" },
  { "ques": "Single-line comments start with ____.", "quesType": "fill", "ans": "//" },
  { "ques": "To compare two values, we use ____ operator.", "quesType": "fill", "ans": "==" },
  { "ques": "The keyword to declare a method is ____.", "quesType": "fill", "ans": "void" },
  { "ques": "The keyword to return a value is ____.", "quesType": "fill", "ans": "return" },
  { "ques": "The modulo operator is ____.", "quesType": "fill", "ans": "%" },
  { "ques": "To increase a value by 1, we use ____ operator.", "quesType": "fill", "ans": "++" },
  { "ques": "Logical AND operator is ____.", "quesType": "fill", "ans": "&&" },
  { "ques": "To create a new variable, we use ____.", "quesType": "fill", "ans": "int" },
  { "ques": "Boolean values are ____ and ____.", "quesType": "fill", "ans": "true, false" },
  { "ques": "To declare a constant, we use ____ keyword.", "quesType": "fill", "ans": "const" },
  { "ques": "The symbol for division is ____.", "quesType": "fill", "ans": "/" },
  { "ques": "The if condition block starts with ____ keyword.", "quesType": "fill", "ans": "if" },
  { "ques": "The output of 10 / 5 is ____.", "quesType": "fill", "ans": "2" },
  { "ques": "The keyword for creating a namespace is ____.", "quesType": "fill", "ans": "namespace" },
  { "ques": "To join two strings we use ____ operator.", "quesType": "fill", "ans": "+" },
  { "ques": "To create a comment, we start with ____.", "quesType": "fill", "ans": "//" },
  { "ques": "To run a loop for fixed times, we use ____ loop.", "quesType": "fill", "ans": "for" },
  { "ques": "To check a condition, we use ____ statement.", "quesType": "fill", "ans": "if" },
  { "ques": "The keyword to create a class is ____.", "quesType": "fill", "ans": "class" },
  { "ques": "To subtract 1 from a number, use ____.", "quesType": "fill", "ans": "--" },
  { "ques": "To convert string to uppercase, use ____.", "quesType": "fill", "ans": "ToUpper()" },
  { "ques": "The keyword to stop loop execution is ____.", "quesType": "fill", "ans": "break" },
  {
    "ques": "Which keyword is used to define a class in C#?",
    "quesType": "mcq",
    "op1": "object",
    "op2": "define",
    "op3": "class",
    "op4": "new",
    "ans": "class"
  },
  {
    "ques": "Which access modifier allows full access?",
    "quesType": "mcq",
    "op1": "private",
    "op2": "internal",
    "op3": "protected",
    "op4": "public",
    "ans": "public"
  },
  {
    "ques": "Which keyword is used to define an array?",
    "quesType": "mcq",
    "op1": "[]",
    "op2": "array",
    "op3": "{}",
    "op4": "list",
    "ans": "[]"
  },
  {
    "ques": "Which loop is guaranteed to execute at least once?",
    "quesType": "mcq",
    "op1": "for",
    "op2": "while",
    "op3": "foreach",
    "op4": "do-while",
    "ans": "do-while"
  },
  {
    "ques": "Which of these is a valid string declaration?",
    "quesType": "mcq",
    "op1": "String s = Hello;",
    "op2": "String s = 'Hello';",
    "op3": "String s = \"Hello\";",
    "op4": "String s = Hello\";",
    "ans": "String s = \"Hello\";"
  },
  {
    "ques": "Which operator is used to check NOT condition?",
    "quesType": "mcq",
    "op1": "!",
    "op2": "!=",
    "op3": "NOT",
    "op4": "~",
    "ans": "!"
  },
  {
    "ques": "What is the default value of an int variable?",
    "quesType": "mcq",
    "op1": "null",
    "op2": "1",
    "op3": "0",
    "op4": "undefined",
    "ans": "0"
  },
  {
    "ques": "Which keyword is used to create objects?",
    "quesType": "mcq",
    "op1": "new",
    "op2": "object",
    "op3": "class",
    "op4": "create",
    "ans": "new"
  },
  {
    "ques": "Which of the following is a looping structure?",
    "quesType": "mcq",
    "op1": "if",
    "op2": "for",
    "op3": "switch",
    "op4": "class",
    "ans": "for"
  },
  {
    "ques": "Which of these is a correct method signature?",
    "quesType": "mcq",
    "op1": "void method;",
    "op2": "method void()",
    "op3": "void method()",
    "op4": "method: void()",
    "ans": "void method()"
  },
  {
    "ques": "Which data type is used to store true or false?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "char",
    "op3": "bool",
    "op4": "string",
    "ans": "bool"
  },
  {
    "ques": "Which statement is used to skip an iteration?",
    "quesType": "mcq",
    "op1": "skip",
    "op2": "exit",
    "op3": "break",
    "op4": "continue",
    "ans": "continue"
  },
  {
    "ques": "Which type stores a sequence of characters?",
    "quesType": "mcq",
    "op1": "string",
    "op2": "char",
    "op3": "bool",
    "op4": "int",
    "ans": "string"
  },
  {
    "ques": "What is the result of: 9 % 2?",
    "quesType": "mcq",
    "op1": "4",
    "op2": "2",
    "op3": "1",
    "op4": "0",
    "ans": "1"
  },
  {
    "ques": "Which of these is not a loop?",
    "quesType": "mcq",
    "op1": "while",
    "op2": "switch",
    "op3": "do-while",
    "op4": "for",
    "ans": "switch"
  },
  {
    "ques": "Which keyword is used to define the main entry point?",
    "quesType": "mcq",
    "op1": "start",
    "op2": "entry",
    "op3": "Main",
    "op4": "Run",
    "ans": "Main"
  },
  {
    "ques": "What is the size of `int` in C#?",
    "quesType": "mcq",
    "op1": "8 bytes",
    "op2": "4 bytes",
    "op3": "2 bytes",
    "op4": "1 byte",
    "ans": "4 bytes"
  },
  {
    "ques": "Which of these is a ternary operator symbol?",
    "quesType": "mcq",
    "op1": "?:",
    "op2": "&&",
    "op3": "==",
    "op4": "=>",
    "ans": "?:"
  },
  {
    "ques": "What is the default value of a string?",
    "quesType": "mcq",
    "op1": "\"\"",
    "op2": "null",
    "op3": "0",
    "op4": "\"null\"",
    "ans": "null"
  },
  {
    "ques": "Which method is used to convert string to lowercase?",
    "quesType": "mcq",
    "op1": "lower()",
    "op2": "ToLower()",
    "op3": "convertLower()",
    "op4": "downcase()",
    "ans": "ToLower()"
  },
  {
    "ques": "What is the result of: true && false?",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "error",
    "op4": "null",
    "ans": "false"
  },
  {
    "ques": "Which operator is used to assign a value?",
    "quesType": "mcq",
    "op1": "=",
    "op2": "==",
    "op3": ":=",
    "op4": "equals",
    "ans": "="
  },
  {
    "ques": "How do you declare a method that returns nothing?",
    "quesType": "mcq",
    "op1": "returnless",
    "op2": "void",
    "op3": "empty",
    "op4": "skip",
    "ans": "void"
  },
  {
    "ques": "Which keyword handles exceptions?",
    "quesType": "mcq",
    "op1": "catch",
    "op2": "if",
    "op3": "except",
    "op4": "error",
    "ans": "catch"
  },
  {
    "ques": "What is used to combine multiple conditions?",
    "quesType": "mcq",
    "op1": "|| and &&",
    "op2": "== and !=",
    "op3": "++ and --",
    "op4": "< and >",
    "ans": "|| and &&"
  },
  {
    "ques": "Which of these stores a block of code?",
    "quesType": "mcq",
    "op1": "method",
    "op2": "int",
    "op3": "char",
    "op4": "bool",
    "ans": "method"
  },
  {
    "ques": "What will Console.WriteLine(5 * 2); output?",
    "quesType": "mcq",
    "op1": "52",
    "op2": "10",
    "op3": "5*2",
    "op4": "error",
    "ans": "10"
  },
  {
    "ques": "Which of the following is used to exit the loop?",
    "quesType": "mcq",
    "op1": "end",
    "op2": "stop",
    "op3": "break",
    "op4": "exit",
    "ans": "break"
  },
  {
    "ques": "To take user input, which method is used?",
    "quesType": "mcq",
    "op1": "Console.ReadLine()",
    "op2": "Console.Read()",
    "op3": "Input.Read()",
    "op4": "Scanner()",
    "ans": "Console.ReadLine()"
  },
  {
    "ques": "Which symbol is used to create an array?",
    "quesType": "mcq",
    "op1": "{}",
    "op2": "[]",
    "op3": "()",
    "op4": "<>",
    "ans": "[]"
  },
   {
    "ques": "Which access modifier allows access only within the same class?",
    "quesType": "mcq",
    "op1": "public",
    "op2": "private",
    "op3": "protected",
    "op4": "internal",
    "ans": "private"
  },
  {
    "ques": "What keyword is used to define a class in C#?",
    "quesType": "mcq",
    "op1": "struct",
    "op2": "object",
    "op3": "class",
    "op4": "define",
    "ans": "class"
  },
  {
    "ques": "Which loop is used when the number of iterations is not known?",
    "quesType": "mcq",
    "op1": "for",
    "op2": "foreach",
    "op3": "while",
    "op4": "loop",
    "ans": "while"
  },
  {
    "ques": "Which keyword prevents a class from being inherited?",
    "quesType": "mcq",
    "op1": "final",
    "op2": "sealed",
    "op3": "static",
    "op4": "const",
    "ans": "sealed"
  },
  {
    "ques": "Which operator is used for logical OR?",
    "quesType": "mcq",
    "op1": "&&",
    "op2": "||",
    "op3": "&",
    "op4": "|",
    "ans": "||"
  },
  {
    "ques": "What does the 'new' keyword do?",
    "quesType": "mcq",
    "op1": "Deletes an object",
    "op2": "Creates an object",
    "op3": "Copies an object",
    "op4": "Modifies an object",
    "ans": "Creates an object"
  },
  {
    "ques": "Which data type can hold true or false?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "bool",
    "op3": "string",
    "op4": "char",
    "ans": "bool"
  },
  {
    "ques": "Which method returns the length of a string?",
    "quesType": "mcq",
    "op1": "Length()",
    "op2": "GetLength()",
    "op3": "Count()",
    "op4": "Length",
    "ans": "Length"
  },
  {
    "ques": "How is a character constant defined?",
    "quesType": "mcq",
    "op1": "\"A\"",
    "op2": "'A'",
    "op3": "`A`",
    "op4": "<A>",
    "ans": "'A'"
  },
  {
    "ques": "What is the default value of an int?",
    "quesType": "mcq",
    "op1": "null",
    "op2": "0",
    "op3": "undefined",
    "op4": "empty",
    "ans": "0"
  },
  {
    "ques": "Which keyword defines a read-only variable?",
    "quesType": "mcq",
    "op1": "const",
    "op2": "readonly",
    "op3": "sealed",
    "op4": "static",
    "ans": "readonly"
  },
  {
    "ques": "Which statement is used to stop a loop?",
    "quesType": "mcq",
    "op1": "stop",
    "op2": "exit",
    "op3": "break",
    "op4": "return",
    "ans": "break"
  },
  {
    "ques": "What is the output of: Console.WriteLine(5 == 5);",
    "quesType": "mcq",
    "op1": "True",
    "op2": "False",
    "op3": "Error",
    "op4": "5 == 5",
    "ans": "True"
  },
  {
    "ques": "Which data type would you use for storing a name?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "bool",
    "op3": "string",
    "op4": "char",
    "ans": "string"
  },
  {
    "ques": "Which operator is used to assign a value?",
    "quesType": "mcq",
    "op1": "=",
    "op2": "==",
    "op3": ":=",
    "op4": "::",
    "ans": "="
  },
  {
    "ques": "Which of the following is NOT a value type?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "float",
    "op3": "string",
    "op4": "char",
    "ans": "string"
  },
  {
    "ques": "Which method checks if two strings are equal?",
    "quesType": "mcq",
    "op1": "Equals()",
    "op2": "Compare()",
    "op3": "Match()",
    "op4": "isSame()",
    "ans": "Equals()"
  },
  {
    "ques": "Which symbol is used for single-line comments?",
    "quesType": "mcq",
    "op1": "//",
    "op2": "#",
    "op3": "/*",
    "op4": "--",
    "ans": "//"
  },
  {
    "ques": "What is the size of 'int' in C#?",
    "quesType": "mcq",
    "op1": "2 bytes",
    "op2": "4 bytes",
    "op3": "8 bytes",
    "op4": "Depends on system",
    "ans": "4 bytes"
  },
  {
    "ques": "Which access modifier allows access from anywhere?",
    "quesType": "mcq",
    "op1": "protected",
    "op2": "internal",
    "op3": "private",
    "op4": "public",
    "ans": "public"
  },
  {
    "ques": "What does the 'static' keyword denote?",
    "quesType": "mcq",
    "op1": "Object variable",
    "op2": "Method local variable",
    "op3": "Class-wide member",
    "op4": "Final member",
    "ans": "Class-wide member"
  },
  {
    "ques": "Which method is used to convert string to int?",
    "quesType": "mcq",
    "op1": "int.Parse()",
    "op2": "ToInt()",
    "op3": "Convert.Int()",
    "op4": "string.ToInt()",
    "ans": "int.Parse()"
  },
  {
    "ques": "Which of these is the correct entry point of a C# program?",
    "quesType": "mcq",
    "op1": "Start()",
    "op2": "Main()",
    "op3": "main()",
    "op4": "Run()",
    "ans": "Main()"
  },
  {
    "ques": "Which loop iterates over arrays or collections?",
    "quesType": "mcq",
    "op1": "for",
    "op2": "while",
    "op3": "foreach",
    "op4": "loop",
    "ans": "foreach"
  },
  {
    "ques": "Which keyword is used to create a new object?",
    "quesType": "mcq",
    "op1": "new",
    "op2": "create",
    "op3": "object",
    "op4": "instance",
    "ans": "new"
  },
  {
    "ques": "Which operator checks inequality?",
    "quesType": "mcq",
    "op1": "==",
    "op2": "=",
    "op3": "!=",
    "op4": "<>",
    "ans": "!="
  },
  {
    "ques": "Which one is a reference type?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "float",
    "op3": "string",
    "op4": "char",
    "ans": "string"
  },
  {
    "ques": "Which statement skips to the next iteration in a loop?",
    "quesType": "mcq",
    "op1": "next",
    "op2": "pass",
    "op3": "continue",
    "op4": "skip",
    "ans": "continue"
  },
  {
    "ques": "Which method removes leading and trailing whitespaces?",
    "quesType": "mcq",
    "op1": "Strip()",
    "op2": "Trim()",
    "op3": "Clean()",
    "op4": "Format()",
    "ans": "Trim()"
  },
  {
    "ques": "Which operator is used to combine conditions?",
    "quesType": "mcq",
    "op1": "+",
    "op2": "&",
    "op3": "&&",
    "op4": "==",
    "ans": "&&"
  },
  { "ques": "The default value of a bool is ____.", "quesType": "fill", "ans": "false" },
  { "ques": "To define a class, we use the keyword ____.", "quesType": "fill", "ans": "class" },
  { "ques": "The method name to start program is ____.", "quesType": "fill", "ans": "Main" },
  { "ques": "We declare an array using ____ brackets.", "quesType": "fill", "ans": "[]" },
  { "ques": "The symbol for logical OR is ____.", "quesType": "fill", "ans": "||" },
  { "ques": "To skip a loop iteration, we use ____.", "quesType": "fill", "ans": "continue" },
  { "ques": "To check not equal, we use ____ operator.", "quesType": "fill", "ans": "!=" },
  { "ques": "A string's default value is ____.", "quesType": "fill", "ans": "null" },
  { "ques": "The data type to store single letter is ____.", "quesType": "fill", "ans": "char" },
  { "ques": "To convert string to lowercase, use ____.", "quesType": "fill", "ans": "ToLower()" },
  { "ques": "To convert string to uppercase, use ____.", "quesType": "fill", "ans": "ToUpper()" },
  { "ques": "Ternary operator uses ____ symbols.", "quesType": "fill", "ans": "?:" },
  { "ques": "To exit loop early, we use ____.", "quesType": "fill", "ans": "break" },
  { "ques": "To hold decimal values, we use ____ type.", "quesType": "fill", "ans": "float" },
  { "ques": "The return type for no return value is ____.", "quesType": "fill", "ans": "void" },
  { "ques": "An array index starts from ____.", "quesType": "fill", "ans": "0" },
  { "ques": "The operator to increase value is ____.", "quesType": "fill", "ans": "++" },
  { "ques": "A do-while loop always runs at least ____ time.", "quesType": "fill", "ans": "one" },
  { "ques": "To declare a new object, we use ____ keyword.", "quesType": "fill", "ans": "new" },
  { "ques": "The equality comparison symbol is ____.", "quesType": "fill", "ans": "==" },
  { "ques": "To store a yes/no value, use ____ type.", "quesType": "fill", "ans": "bool" },
  { "ques": "An if block begins with ____ keyword.", "quesType": "fill", "ans": "if" },
  { "ques": "To define multiple options, use ____ statement.", "quesType": "fill", "ans": "switch" },
  { "ques": "To declare a constant value, use ____.", "quesType": "fill", "ans": "const" },
  { "ques": "The logical NOT is written as ____.", "quesType": "fill", "ans": "!" },
  { "ques": "Method blocks are enclosed by ____ braces.", "quesType": "fill", "ans": "{}" },
  { "ques": "The number 5.5 is of type ____.", "quesType": "fill", "ans": "float" },
  { "ques": "A variable should be declared before it is ____.", "quesType": "fill", "ans": "used" },
  { "ques": "An array can hold multiple ____.", "quesType": "fill", "ans": "values" },
  { "ques": "The keyword used to catch exceptions is ____.", "quesType": "fill", "ans": "catch" },
  { "ques": "The keyword ____ is used to define a class.", "quesType": "fill", "ans": "class" },
  { "ques": "To declare a variable that cannot be modified, use ____.", "quesType": "fill", "ans": "const" },
  { "ques": "The method ____ is the entry point in a C# application.", "quesType": "fill", "ans": "Main" },
  { "ques": "The operator ____ is used to compare equality.", "quesType": "fill", "ans": "==" },
  { "ques": "The access modifier ____ allows access from anywhere.", "quesType": "fill", "ans": "public" },
  { "ques": "To declare a method that returns no value, use ____.", "quesType": "fill", "ans": "void" },
  { "ques": "The keyword ____ is used to create objects.", "quesType": "fill", "ans": "new" },
  { "ques": "To declare a method that belongs to the class, use ____.", "quesType": "fill", "ans": "static" },
  { "ques": "The keyword ____ is used to stop execution inside a loop.", "quesType": "fill", "ans": "break" },
  { "ques": "The loop that checks condition before execution is ____.", "quesType": "fill", "ans": "while" },
  { "ques": "The data type ____ stores text strings.", "quesType": "fill", "ans": "string" },
  { "ques": "To read user input, use the method ____.", "quesType": "fill", "ans": "Console.ReadLine()" },
  { "ques": "To display output, the method ____ is used.", "quesType": "fill", "ans": "Console.WriteLine()" },
  { "ques": "The ____ keyword is used to define namespaces.", "quesType": "fill", "ans": "namespace" },
  { "ques": "The ____ symbol is used for logical OR.", "quesType": "fill", "ans": "||" },
  { "ques": "To increment a variable, use the ____ operator.", "quesType": "fill", "ans": "++" },
  { "ques": "To skip an iteration, the ____ statement is used.", "quesType": "fill", "ans": "continue" },
  { "ques": "The method ____ removes whitespace from strings.", "quesType": "fill", "ans": "Trim()" },
  { "ques": "The keyword ____ makes a class non-inheritable.", "quesType": "fill", "ans": "sealed" },
  { "ques": "The method ____ checks string equality.", "quesType": "fill", "ans": "Equals()" },
  { "ques": "To convert string to integer, use ____.", "quesType": "fill", "ans": "int.Parse()" },
  { "ques": "The size of 'int' in C# is ____ bytes.", "quesType": "fill", "ans": "4" },
  { "ques": "The ____ keyword declares a block of code to run repeatedly.", "quesType": "fill", "ans": "loop" },
  { "ques": "The character constant is enclosed in ____ quotes.", "quesType": "fill", "ans": "'" },
  { "ques": "The keyword ____ is used to define a function with return.", "quesType": "fill", "ans": "return" },
  { "ques": "To comment a single line, prefix it with ____.", "quesType": "fill", "ans": "//" },
  { "ques": "The ____ operator assigns a value to a variable.", "quesType": "fill", "ans": "=" },
  { "ques": "The ____ loop iterates over arrays or collections.", "quesType": "fill", "ans": "foreach" },
  { "ques": "To create a string with no value, assign it as ____.", "quesType": "fill", "ans": "\"\"" },
  { "ques": "The ____ data type holds true or false values.", "quesType": "fill", "ans": "bool" }

]

let codingsharp2Arr=[
  {
    "ques": "Which keyword is used to define a class in C#?",
    "quesType": "mcq",
    "op1": "define",
    "op2": "class",
    "op3": "struct",
    "op4": "newclass",
    "ans": "class"
  },
  {
    "ques": "Which symbol is used to denote a single-line comment in C#?",
    "quesType": "mcq",
    "op1": "#",
    "op2": "/* */",
    "op3": "--",
    "op4": "//",
    "ans": "//"
  },
  {
    "ques": "What is the extension of a C# source code file?",
    "quesType": "mcq",
    "op1": ".cs",
    "op2": ".cpp",
    "op3": ".c",
    "op4": ".java",
    "ans": ".cs"
  },
  {
    "ques": "Which keyword is used to create an object in C#?",
    "quesType": "mcq",
    "op1": "make",
    "op2": "object",
    "op3": "new",
    "op4": "create",
    "ans": "new"
  },
  {
    "ques": "Which of these is a value type in C#?",
    "quesType": "mcq",
    "op1": "string",
    "op2": "object",
    "op3": "int",
    "op4": "class",
    "ans": "int"
  },
  {
    "ques": "Which method is the entry point of a C# program?",
    "quesType": "mcq",
    "op1": "Start()",
    "op2": "Execute()",
    "op3": "Main()",
    "op4": "Run()",
    "ans": "Main()"
  },
  {
    "ques": "What keyword is used to inherit a class in C#?",
    "quesType": "mcq",
    "op1": "inherits",
    "op2": "extends",
    "op3": ":",
    "op4": "with",
    "ans": ":"
  },
  {
    "ques": "Which of the following is a reference type in C#?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "char",
    "op3": "float",
    "op4": "string",
    "ans": "string"
  },
  {
    "ques": "Which access modifier makes a member accessible within the same class?",
    "quesType": "mcq",
    "op1": "private",
    "op2": "public",
    "op3": "protected",
    "op4": "internal",
    "ans": "private"
  },
  {
    "ques": "Which loop is used to execute a block at least once?",
    "quesType": "mcq",
    "op1": "while",
    "op2": "do-while",
    "op3": "for",
    "op4": "foreach",
    "ans": "do-while"
  },
  {
    "ques": "Which data type is used for true/false values in C#?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "bool",
    "op3": "char",
    "op4": "bit",
    "ans": "bool"
  },
  {
    "ques": "Which of the following converts a string to an integer?",
    "quesType": "mcq",
    "op1": "ToInt()",
    "op2": "Convert.Int()",
    "op3": "int.Parse()",
    "op4": "Parse.Int()",
    "ans": "int.Parse()"
  },
  {
    "ques": "Which keyword is used to define an interface?",
    "quesType": "mcq",
    "op1": "interface",
    "op2": "contract",
    "op3": "abstract",
    "op4": "define",
    "ans": "interface"
  },
  {
    "ques": "Which operator is used for logical AND in C#?",
    "quesType": "mcq",
    "op1": "&",
    "op2": "&&",
    "op3": "and",
    "op4": "||",
    "ans": "&&"
  },
  {
    "ques": "Which keyword is used for exception handling?",
    "quesType": "mcq",
    "op1": "exception",
    "op2": "throw",
    "op3": "try",
    "op4": "catch",
    "ans": "try"
  },
  {
    "ques": "What is the base class of all classes in C#?",
    "quesType": "mcq",
    "op1": "System",
    "op2": "Base",
    "op3": "Object",
    "op4": "Root",
    "ans": "Object"
  },
  {
    "ques": "Which collection is used to store key-value pairs?",
    "quesType": "mcq",
    "op1": "List",
    "op2": "Array",
    "op3": "Dictionary",
    "op4": "Set",
    "ans": "Dictionary"
  },
  {
    "ques": "Which keyword is used to define a constant value?",
    "quesType": "mcq",
    "op1": "const",
    "op2": "static",
    "op3": "readonly",
    "op4": "final",
    "ans": "const"
  },
  {
    "ques": "Which operator is used for null-coalescing?",
    "quesType": "mcq",
    "op1": "??",
    "op2": "?:",
    "op3": "::",
    "op4": "==",
    "ans": "??"
  },
  {
    "ques": "Which statement is used to stop a loop?",
    "quesType": "mcq",
    "op1": "exit",
    "op2": "return",
    "op3": "break",
    "op4": "continue",
    "ans": "break"
  },

  {
    "ques": "What is the output of: Console.WriteLine(5 + 3)?",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "Fill in the blank: A class in C# is declared using the _____ keyword.",
    "quesType": "fill",
    "ans": "class"
  },
  {
    "ques": "Fill in the blank: A C# file ends with the extension _____.",
    "quesType": "fill",
    "ans": ".cs"
  },
  {
    "ques": "Fill in the blank: The entry method for C# is called _____.",
    "quesType": "fill",
    "ans": "Main"
  },
  {
    "ques": "Fill in the blank: To inherit a class, we use the symbol _____.",
    "quesType": "fill",
    "ans": ":"
  },
  {
    "ques": "Fill in the blank: Strings in C# are ____ types.",
    "quesType": "fill",
    "ans": "reference"
  },
  {
    "ques": "Fill in the blank: The keyword used to define a constant is _____.",
    "quesType": "fill",
    "ans": "const"
  },
  {
    "ques": "Fill in the blank: Logical AND operator in C# is _____.",
    "quesType": "fill",
    "ans": "&&"
  },
  {
    "ques": "Fill in the blank: To catch exceptions, we use the _____ block.",
    "quesType": "fill",
    "ans": "try"
  },
  {
    "ques": "Fill in the blank: To stop a loop early, use the _____ statement.",
    "quesType": "fill",
    "ans": "break"
  },
  {
    "ques": "Fill in the blank: The null-coalescing operator is _____.",
    "quesType": "fill",
    "ans": "??"
  },
  {
    "ques": "Fill in the blank: The topmost class in C# hierarchy is _____.",
    "quesType": "fill",
    "ans": "Object"
  },
  {
    "ques": "Fill in the blank: The keyword used to define an interface is _____.",
    "quesType": "fill",
    "ans": "interface"
  },
  {
    "ques": "Fill in the blank: Use _____ to read input from user in console.",
    "quesType": "fill",
    "ans": "Console.ReadLine()"
  },
  {
    "ques": "Fill in the blank: The keyword used to make something accessible to all is _____.",
    "quesType": "fill",
    "ans": "public"
  },
  {
    "ques": "Fill in the blank: A class method is usually marked with _____ keyword.",
    "quesType": "fill",
    "ans": "static"
  },
  {
    "ques": "Fill in the blank: C# was developed by _____.",
    "quesType": "fill",
    "ans": "Microsoft"
  },
  {
    "ques": "Fill in the blank: The loop that always runs at least once is _____.",
    "quesType": "fill",
    "ans": "do-while"
  },
  {
    "ques": "Fill in the blank: _____ is used to perform conditional branching.",
    "quesType": "fill",
    "ans": "if"
  },
  {
    "ques": "Fill in the blank: _____ is the method used to display output.",
    "quesType": "fill",
    "ans": "Console.WriteLine()"
  },
  {
    "ques": "Which keyword is used to declare a method in C#?",
    "quesType": "mcq",
    "op1": "func",
    "op2": "method",
    "op3": "void",
    "op4": "def",
    "ans": "void"
  },
  {
    "ques": "Which keyword is used to inherit a class?",
    "quesType": "mcq",
    "op1": "inherit",
    "op2": ":",
    "op3": "extends",
    "op4": "implements",
    "ans": ":"
  },
  {
    "ques": "Which loop will always execute at least once?",
    "quesType": "mcq",
    "op1": "for",
    "op2": "while",
    "op3": "foreach",
    "op4": "do-while",
    "ans": "do-while"
  },
  {
    "ques": "Which data type is used for storing true/false values?",
    "quesType": "mcq",
    "op1": "bit",
    "op2": "boolean",
    "op3": "bool",
    "op4": "byte",
    "ans": "bool"
  },
  {
    "ques": "Which of the following is a reference type?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "char",
    "op3": "string",
    "op4": "float",
    "ans": "string"
  },
  {
    "ques": "Which collection stores unique items only?",
    "quesType": "mcq",
    "op1": "List",
    "op2": "Array",
    "op3": "Set",
    "op4": "HashSet",
    "ans": "HashSet"
  },
  {
    "ques": "What is the result of 9 % 2?",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "4",
    "op4": "0",
    "ans": "1"
  },
  {
    "ques": "Which statement is used to handle exceptions?",
    "quesType": "mcq",
    "op1": "try-catch",
    "op2": "if-else",
    "op3": "error",
    "op4": "check",
    "ans": "try-catch"
  },
  {
    "ques": "Which access modifier allows access from anywhere?",
    "quesType": "mcq",
    "op1": "private",
    "op2": "protected",
    "op3": "public",
    "op4": "internal",
    "ans": "public"
  },
  {
    "ques": "What is the size of an int in C#?",
    "quesType": "mcq",
    "op1": "8 bytes",
    "op2": "2 bytes",
    "op3": "4 bytes",
    "op4": "1 byte",
    "ans": "4 bytes"
  },
  {
    "ques": "Which keyword is used to define a constant value?",
    "quesType": "mcq",
    "op1": "fixed",
    "op2": "static",
    "op3": "const",
    "op4": "readonly",
    "ans": "const"
  },
  {
    "ques": "Which keyword is used to define a namespace?",
    "quesType": "mcq",
    "op1": "package",
    "op2": "module",
    "op3": "namespace",
    "op4": "using",
    "ans": "namespace"
  },
  {
    "ques": "Which method reads input from the user?",
    "quesType": "mcq",
    "op1": "Console.Read()",
    "op2": "Console.ReadLine()",
    "op3": "Console.Input()",
    "op4": "Read.Input()",
    "ans": "Console.ReadLine()"
  },
  {
    "ques": "Which keyword is used to define a class?",
    "quesType": "mcq",
    "op1": "define",
    "op2": "class",
    "op3": "struct",
    "op4": "object",
    "ans": "class"
  },
  {
    "ques": "What is the default value of a bool variable?",
    "quesType": "mcq",
    "op1": "true",
    "op2": "null",
    "op3": "0",
    "op4": "false",
    "ans": "false"
  },
  {
    "ques": "Which method prints data to the console?",
    "quesType": "mcq",
    "op1": "System.Print()",
    "op2": "Console.Output()",
    "op3": "Console.WriteLine()",
    "op4": "System.Out()",
    "ans": "Console.WriteLine()"
  },
  {
    "ques": "Which operator is used for equality check?",
    "quesType": "mcq",
    "op1": "=",
    "op2": "==",
    "op3": "!=",
    "op4": "equals",
    "ans": "=="
  },
  {
    "ques": "Which data type is used for decimal numbers?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "char",
    "op3": "double",
    "op4": "bool",
    "ans": "double"
  },
  {
    "ques": "Which loop is best for iterating through arrays?",
    "quesType": "mcq",
    "op1": "for",
    "op2": "foreach",
    "op3": "while",
    "op4": "do-while",
    "ans": "foreach"
  },
  {
    "ques": "What is used to create an object?",
    "quesType": "mcq",
    "op1": "create",
    "op2": "new",
    "op3": "object",
    "op4": "init",
    "ans": "new"
  },
  {
    "ques": "Fill in the blank: The entry point of a C# program is the _____ method.",
    "quesType": "fill",
    "ans": "Main"
  },
  {
    "ques": "Fill in the blank: The keyword to declare a variable is _____.",
    "quesType": "fill",
    "ans": "var"
  },
  {
    "ques": "Fill in the blank: The _____ keyword is used for loops.",
    "quesType": "fill",
    "ans": "for"
  },
  {
    "ques": "Fill in the blank: To read input, we use _____.",
    "quesType": "fill",
    "ans": "Console.ReadLine()"
  },
  {
    "ques": "Fill in the blank: To print output, we use _____.",
    "quesType": "fill",
    "ans": "Console.WriteLine()"
  },
  {
    "ques": "Fill in the blank: Boolean variables can be true or _____.",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "Fill in the blank: A list of values can be stored in an _____.",
    "quesType": "fill",
    "ans": "array"
  },
  {
    "ques": "Fill in the blank: Strings are of _____ type.",
    "quesType": "fill",
    "ans": "reference"
  },
  {
    "ques": "Fill in the blank: Exception handling uses the _____ block.",
    "quesType": "fill",
    "ans": "try"
  },
  {
    "ques": "Fill in the blank: The keyword used to return a value is _____.",
    "quesType": "fill",
    "ans": "return"
  },
  {
    "ques": "Fill in the blank: A group of related classes can be placed in a _____.",
    "quesType": "fill",
    "ans": "namespace"
  },
  {
    "ques": "Fill in the blank: _____ is the base class of all classes.",
    "quesType": "fill",
    "ans": "Object"
  },
  {
    "ques": "Fill in the blank: Constants are declared using the _____ keyword.",
    "quesType": "fill",
    "ans": "const"
  },
  {
    "ques": "Fill in the blank: The equality check operator is _____.",
    "quesType": "fill",
    "ans": "=="
  },
  {
    "ques": "Fill in the blank: The not-equal operator is _____.",
    "quesType": "fill",
    "ans": "!="
  },
  {
    "ques": "Fill in the blank: Logical AND is represented by _____.",
    "quesType": "fill",
    "ans": "&&"
  },
  {
    "ques": "Fill in the blank: Logical OR is represented by _____.",
    "quesType": "fill",
    "ans": "||"
  },
  {
    "ques": "Fill in the blank: Arrays in C# are zero-_____.",
    "quesType": "fill",
    "ans": "indexed"
  },
  {
    "ques": "Fill in the blank: A class is defined using the keyword _____.",
    "quesType": "fill",
    "ans": "class"
  },
  {
    "ques": "Fill in the blank: A method declared as static belongs to the _____.",
    "quesType": "fill",
    "ans": "class"
  },
  {
    "ques": "Fill in the blank: An object is an instance of a _____.",
    "quesType": "fill",
    "ans": "class"
  }
  ,
  {
    "ques": "Which of the following is the correct file extension for a C# file?",
    "quesType": "mcq",
    "op1": ".java",
    "op2": ".cpp",
    "op3": ".cs",
    "op4": ".csharp",
    "ans": ".cs"
  },
  {
    "ques": "What is the default access modifier for class members in C#?",
    "quesType": "mcq",
    "op1": "private",
    "op2": "public",
    "op3": "protected",
    "op4": "internal",
    "ans": "private"
  },
  {
    "ques": "Which keyword is used to prevent inheritance of a class?",
    "quesType": "mcq",
    "op1": "private",
    "op2": "sealed",
    "op3": "final",
    "op4": "static",
    "ans": "sealed"
  },
  {
    "ques": "Which of the following is NOT a value type?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "bool",
    "op3": "double",
    "op4": "string",
    "ans": "string"
  },
  {
    "ques": "Which keyword is used to create an interface in C#?",
    "quesType": "mcq",
    "op1": "interface",
    "op2": "class",
    "op3": "implements",
    "op4": "inherits",
    "ans": "interface"
  },
  {
    "ques": "Which method is the entry point of a C# console application?",
    "quesType": "mcq",
    "op1": "Start()",
    "op2": "Run()",
    "op3": "Begin()",
    "op4": "Main()",
    "ans": "Main()"
  },
  {
    "ques": "Which keyword is used to call the base class constructor?",
    "quesType": "mcq",
    "op1": "super",
    "op2": "base",
    "op3": "this",
    "op4": "parent",
    "ans": "base"
  },
  {
    "ques": "What does CLR stand for?",
    "quesType": "mcq",
    "op1": "Common Language Runtime",
    "op2": "Common Logic Runtime",
    "op3": "Central Library Runtime",
    "op4": "Central Language Runtime",
    "ans": "Common Language Runtime"
  },
  {
    "ques": "Which loop is used when the number of iterations is known?",
    "quesType": "mcq",
    "op1": "while",
    "op2": "do-while",
    "op3": "for",
    "op4": "foreach",
    "ans": "for"
  },
  {
    "ques": "Which keyword is used to define a property in C#?",
    "quesType": "mcq",
    "op1": "attribute",
    "op2": "prop",
    "op3": "property",
    "op4": "get; set;",
    "ans": "get; set;"
  },

  {
    "ques": "Fill in the blank: The keyword used to define a method that does not return any value is _____.",
    "quesType": "fill",
    "ans": "void"
  },
  {
    "ques": "Fill in the blank: The keyword used to inherit a class is _____.",
    "quesType": "fill",
    "ans": ":"
  },
  {
    "ques": "Fill in the blank: To stop a loop manually, we use the _____ keyword.",
    "quesType": "fill",
    "ans": "break"
  },
  {
    "ques": "Fill in the blank: The keyword _____ is used to throw an exception.",
    "quesType": "fill",
    "ans": "throw"
  },
  {
    "ques": "Fill in the blank: A _____ is a blueprint for creating objects.",
    "quesType": "fill",
    "ans": "class"
  },
  {
    "ques": "Fill in the blank: All C# programs begin execution from the _____ method.",
    "quesType": "fill",
    "ans": "Main"
  },
  {
    "ques": "Fill in the blank: A variable that holds decimal values can use the _____ data type.",
    "quesType": "fill",
    "ans": "float"
  },
  {
    "ques": "Fill in the blank: An array index in C# starts from _____.",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "Fill in the blank: C# is developed by _____.",
    "quesType": "fill",
    "ans": "Microsoft"
  },
  {
    "ques": "Fill in the blank: The _____ keyword is used to create an object.",
    "quesType": "fill",
    "ans": "new"
  },

  {
    "ques": "Which collection stores data in key-value pairs?",
    "quesType": "mcq",
    "op1": "Array",
    "op2": "List",
    "op3": "Dictionary",
    "op4": "Queue",
    "ans": "Dictionary"
  },
  {
    "ques": "Which of these can be used to handle exceptions?",
    "quesType": "mcq",
    "op1": "if-else",
    "op2": "try-catch",
    "op3": "do-while",
    "op4": "switch-case",
    "ans": "try-catch"
  },
  {
    "ques": "Which modifier makes a class member accessible only within the class?",
    "quesType": "mcq",
    "op1": "public",
    "op2": "protected",
    "op3": "private",
    "op4": "internal",
    "ans": "private"
  },
  {
    "ques": "Which keyword is used to define constants?",
    "quesType": "mcq",
    "op1": "static",
    "op2": "readonly",
    "op3": "const",
    "op4": "fixed",
    "ans": "const"
  },
  {
    "ques": "Which type of method cannot be overridden?",
    "quesType": "mcq",
    "op1": "public",
    "op2": "private",
    "op3": "static",
    "op4": "sealed",
    "ans": "sealed"
  },
  {
    "ques": "Which of these is NOT a valid access modifier in C#?",
    "quesType": "mcq",
    "op1": "public",
    "op2": "protected",
    "op3": "open",
    "op4": "internal",
    "ans": "open"
  },
  {
    "ques": "What is the result of 5 + 2 * 3?",
    "quesType": "mcq",
    "op1": "21",
    "op2": "11",
    "op3": "15",
    "op4": "7",
    "ans": "11"
  },
  {
    "ques": "What is the default value of an int variable?",
    "quesType": "mcq",
    "op1": "null",
    "op2": "0",
    "op3": "undefined",
    "op4": "-1",
    "ans": "0"
  },
  {
    "ques": "Which data type is used for single characters?",
    "quesType": "mcq",
    "op1": "string",
    "op2": "char",
    "op3": "bool",
    "op4": "int",
    "ans": "char"
  },
  {
    "ques": "Which function is used to convert string to integer?",
    "quesType": "mcq",
    "op1": "int()",
    "op2": "Convert.ToInt32()",
    "op3": "parse()",
    "op4": "toInteger()",
    "ans": "Convert.ToInt32()"
  },

  {
    "ques": "Fill in the blank: The _____ class is used for console input/output.",
    "quesType": "fill",
    "ans": "Console"
  },
  {
    "ques": "Fill in the blank: _____ is used to create an array.",
    "quesType": "fill",
    "ans": "new"
  },
  {
    "ques": "Fill in the blank: A class that cannot be instantiated is declared as _____.",
    "quesType": "fill",
    "ans": "abstract"
  },
  {
    "ques": "Fill in the blank: A _____ loop checks the condition after executing the body.",
    "quesType": "fill",
    "ans": "do-while"
  },
  {
    "ques": "Fill in the blank: _____ is used to represent true/false in C#.",
    "quesType": "fill",
    "ans": "bool"
  },
  {
    "ques": "Fill in the blank: The _____ operator returns the remainder of a division.",
    "quesType": "fill",
    "ans": "%"
  },
  {
    "ques": "Fill in the blank: A function inside a class is called a _____.",
    "quesType": "fill",
    "ans": "method"
  },
  {
    "ques": "Fill in the blank: _____ keyword is used to implement interfaces.",
    "quesType": "fill",
    "ans": "interface"
  },
  {
    "ques": "Fill in the blank: Inheritance is implemented using the _____ symbol.",
    "quesType": "fill",
    "ans": ":"
  },
  {
    "ques": "Fill in the blank: C# supports _____ level of access modifiers.",
    "quesType": "fill",
    "ans": "five"
  },
  {
    "ques": "Which symbol is used to denote a single-line comment in C#?",
    "quesType": "mcq",
    "op1": "/* */",
    "op2": "//",
    "op3": "#",
    "op4": "--",
    "ans": "//"
  },
  {
    "ques": "Which of the following is a reference type?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "double",
    "op3": "decimal",
    "op4": "string",
    "ans": "string"
  },
  {
    "ques": "Which data type is used to store true or false values?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "bool",
    "op3": "char",
    "op4": "byte",
    "ans": "bool"
  },
  {
    "ques": "Which keyword is used to create a constant in C#?",
    "quesType": "mcq",
    "op1": "readonly",
    "op2": "constant",
    "op3": "const",
    "op4": "final",
    "ans": "const"
  },
  {
    "ques": "What does IDE stand for?",
    "quesType": "mcq",
    "op1": "Integrated Developer Environment",
    "op2": "Internal Development Editor",
    "op3": "Integrated Development Environment",
    "op4": "Internet Developer Edition",
    "ans": "Integrated Development Environment"
  },
  {
    "ques": "Which access modifier makes a member visible only inside its class?",
    "quesType": "mcq",
    "op1": "private",
    "op2": "public",
    "op3": "internal",
    "op4": "protected",
    "ans": "private"
  },
  {
    "ques": "What is the default value of a `bool` in C#?",
    "quesType": "mcq",
    "op1": "null",
    "op2": "true",
    "op3": "false",
    "op4": "0",
    "ans": "false"
  },
  {
    "ques": "Which loop guarantees at least one execution?",
    "quesType": "mcq",
    "op1": "for",
    "op2": "while",
    "op3": "do-while",
    "op4": "foreach",
    "ans": "do-while"
  },
  {
    "ques": "Which operator is used to compare two values?",
    "quesType": "mcq",
    "op1": "==",
    "op2": "=",
    "op3": "<>",
    "op4": "!=",
    "ans": "=="
  },
  {
    "ques": "What is the size of an `int` in C#?",
    "quesType": "mcq",
    "op1": "2 bytes",
    "op2": "4 bytes",
    "op3": "6 bytes",
    "op4": "8 bytes",
    "ans": "4 bytes"
  },

  {
    "ques": "Fill in the blank: The keyword used to inherit a class is _____.",
    "quesType": "fill",
    "ans": ":"
  },
  {
    "ques": "Fill in the blank: The main method must be _____ in C#.",
    "quesType": "fill",
    "ans": "static"
  },
  {
    "ques": "Fill in the blank: A method that does not return a value is declared as _____.",
    "quesType": "fill",
    "ans": "void"
  },
  {
    "ques": "Fill in the blank: The method to read input from the user is Console._____.",
    "quesType": "fill",
    "ans": "ReadLine"
  },
  {
    "ques": "Fill in the blank: The method to output to the console is Console._____.",
    "quesType": "fill",
    "ans": "WriteLine"
  },
  {
    "ques": "Fill in the blank: Arrays in C# are _____-indexed.",
    "quesType": "fill",
    "ans": "zero"
  },
  {
    "ques": "Fill in the blank: The _____ keyword is used to create a new object.",
    "quesType": "fill",
    "ans": "new"
  },
  {
    "ques": "Fill in the blank: The _____ keyword is used to handle exceptions.",
    "quesType": "fill",
    "ans": "try"
  },
  {
    "ques": "Fill in the blank: The method used to convert a string to an integer is _____.",
    "quesType": "fill",
    "ans": "Convert.ToInt32"
  },
  {
    "ques": "Fill in the blank: The class used to work with files is _____.",
    "quesType": "fill",
    "ans": "File"
  },

  {
    "ques": "Which operator is used to add two numbers?",
    "quesType": "mcq",
    "op1": "+",
    "op2": "-",
    "op3": "*",
    "op4": "/",
    "ans": "+"
  },
  {
    "ques": "Which one is a valid declaration of a string variable?",
    "quesType": "mcq",
    "op1": "string name;",
    "op2": "str name;",
    "op3": "String = name;",
    "op4": "name string;",
    "ans": "string name;"
  },
  {
    "ques": "Which data type is best for storing large whole numbers?",
    "quesType": "mcq",
    "op1": "float",
    "op2": "int",
    "op3": "double",
    "op4": "long",
    "ans": "long"
  },
  {
    "ques": "What keyword is used to return a value from a method?",
    "quesType": "mcq",
    "op1": "send",
    "op2": "get",
    "op3": "return",
    "op4": "output",
    "ans": "return"
  },
  {
    "ques": "Which of these is used to define a namespace?",
    "quesType": "mcq",
    "op1": "namespace",
    "op2": "package",
    "op3": "module",
    "op4": "define",
    "ans": "namespace"
  },
  {
    "ques": "Which is not a valid loop in C#?",
    "quesType": "mcq",
    "op1": "while",
    "op2": "for",
    "op3": "repeat",
    "op4": "foreach",
    "ans": "repeat"
  },
  {
    "ques": "Which type is used to represent characters?",
    "quesType": "mcq",
    "op1": "char",
    "op2": "string",
    "op3": "byte",
    "op4": "bool",
    "ans": "char"
  },
  {
    "ques": "Which exception is thrown when dividing by zero?",
    "quesType": "mcq",
    "op1": "NullReferenceException",
    "op2": "DivideByZeroException",
    "op3": "ArithmeticException",
    "op4": "OverflowException",
    "ans": "DivideByZeroException"
  },
  {
    "ques": "Which method is used to pause the program?",
    "quesType": "mcq",
    "op1": "Console.Read()",
    "op2": "Console.Pause()",
    "op3": "Console.Wait()",
    "op4": "Console.Stop()",
    "ans": "Console.Read()"
  },
  {
    "ques": "Which data type would you use to store monetary values?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "decimal",
    "op3": "float",
    "op4": "double",
    "ans": "decimal"
  },

  {
    "ques": "Fill in the blank: _____ is used to write text to the console.",
    "quesType": "fill",
    "ans": "Console.WriteLine"
  },
  {
    "ques": "Fill in the blank: _____ is used to read input from the console.",
    "quesType": "fill",
    "ans": "Console.ReadLine"
  },
  {
    "ques": "Fill in the blank: You use the _____ keyword to exit a loop.",
    "quesType": "fill",
    "ans": "break"
  },
  {
    "ques": "Fill in the blank: A _____ is a block of code that performs a task.",
    "quesType": "fill",
    "ans": "method"
  },
  {
    "ques": "Fill in the blank: The keyword used to define a constant value is _____.",
    "quesType": "fill",
    "ans": "const"
  },
  {
    "ques": "Fill in the blank: In C#, class members are _____ by default.",
    "quesType": "fill",
    "ans": "private"
  },
  {
    "ques": "Fill in the blank: You can use _____ loop to iterate through arrays.",
    "quesType": "fill",
    "ans": "foreach"
  },
  {
    "ques": "Fill in the blank: The entry point of a C# program is the _____ method.",
    "quesType": "fill",
    "ans": "Main"
  },
  {
    "ques": "Fill in the blank: The keyword used to create a class is _____.",
    "quesType": "fill",
    "ans": "class"
  },
  {
    "ques": "Fill in the blank: _____ is used to specify the type of variable.",
    "quesType": "fill",
    "ans": "datatype"
  },
  {
    "ques": "Which keyword is used to prevent a class from being inherited?",
    "quesType": "mcq",
    "op1": "sealed",
    "op2": "private",
    "op3": "abstract",
    "op4": "final",
    "ans": "sealed"
  },
  {
    "ques": "What is the base class of all classes in C#?",
    "quesType": "mcq",
    "op1": "System",
    "op2": "Object",
    "op3": "Base",
    "op4": "Parent",
    "ans": "Object"
  },
  {
    "ques": "Which of the following is true about 'ref' keyword in C#?",
    "quesType": "mcq",
    "op1": "Passes by value",
    "op2": "Passes by reference",
    "op3": "It is used for readonly fields",
    "op4": "Used for exception handling",
    "ans": "Passes by reference"
  },
  {
    "ques": "Which keyword is used to define an interface?",
    "quesType": "mcq",
    "op1": "interface",
    "op2": "implements",
    "op3": "contract",
    "op4": "define",
    "ans": "interface"
  },
  {
    "ques": "Which statement is used to define an enumeration?",
    "quesType": "mcq",
    "op1": "define",
    "op2": "enum",
    "op3": "set",
    "op4": "type",
    "ans": "enum"
  },
  {
    "ques": "Which of the following is the default access modifier for class members?",
    "quesType": "mcq",
    "op1": "private",
    "op2": "public",
    "op3": "internal",
    "op4": "protected",
    "ans": "private"
  },
  {
    "ques": "Which of the following can be declared as abstract?",
    "quesType": "mcq",
    "op1": "method",
    "op2": "class",
    "op3": "both",
    "op4": "none",
    "ans": "both"
  },
  {
    "ques": "Which access modifier makes a member accessible only within its class and derived classes?",
    "quesType": "mcq",
    "op1": "internal",
    "op2": "private",
    "op3": "protected",
    "op4": "public",
    "ans": "protected"
  },
  {
    "ques": "Which LINQ method filters a sequence based on a predicate?",
    "quesType": "mcq",
    "op1": "Select()",
    "op2": "Where()",
    "op3": "OrderBy()",
    "op4": "GroupBy()",
    "ans": "Where()"
  },
  {
    "ques": "Which of these keywords is used for implementing polymorphism?",
    "quesType": "mcq",
    "op1": "override",
    "op2": "sealed",
    "op3": "new",
    "op4": "event",
    "ans": "override"
  },

  {
    "ques": "Fill in the blank: The keyword _____ is used to inherit a class.",
    "quesType": "fill",
    "ans": ":"
  },
  {
    "ques": "Fill in the blank: Abstract methods must be implemented in _____ classes.",
    "quesType": "fill",
    "ans": "derived"
  },
  {
    "ques": "Fill in the blank: A _____ method cannot be overridden.",
    "quesType": "fill",
    "ans": "sealed"
  },
  {
    "ques": "Fill in the blank: The keyword _____ is used to define an interface.",
    "quesType": "fill",
    "ans": "interface"
  },
  {
    "ques": "Fill in the blank: The _____ operator is used for null-coalescing.",
    "quesType": "fill",
    "ans": "??"
  },
  {
    "ques": "Fill in the blank: The 'ref' keyword passes parameters by _____.",
    "quesType": "fill",
    "ans": "reference"
  },
  {
    "ques": "Fill in the blank: The base class of all exceptions in C# is _____.",
    "quesType": "fill",
    "ans": "System.Exception"
  },
  {
    "ques": "Fill in the blank: A _____ is a special method used to initialize objects.",
    "quesType": "fill",
    "ans": "constructor"
  },
  {
    "ques": "Fill in the blank: The keyword _____ is used to call the base class constructor.",
    "quesType": "fill",
    "ans": "base"
  },
  {
    "ques": "Fill in the blank: A _____ is a block of code that performs a specific task.",
    "quesType": "fill",
    "ans": "method"
  }

]

let codingsharp3Arr=[
  {
    "ques": "What is the output of the following code?\nint? x = null;\nint y = x ?? 5;\nConsole.WriteLine(y);",
    "quesType": "mcq",
    "op1": "null",
    "op2": "0",
    "op3": "5",
    "op4": "Compile Error",
    "ans": "5"
  },
  {
    "ques": "Which method is used to convert an object to a JSON string in C#?",
    "quesType": "mcq",
    "op1": "Json.Serialize()",
    "op2": "JsonConvert.SerializeObject()",
    "op3": "ToJson()",
    "op4": "Json.Stringify()",
    "ans": "JsonConvert.SerializeObject()"
  },
  {
    "ques": "Which collection does not allow duplicate elements?",
    "quesType": "mcq",
    "op1": "List",
    "op2": "Dictionary",
    "op3": "HashSet",
    "op4": "Queue",
    "ans": "HashSet"
  },
  {
    "ques": "What is the purpose of the 'yield return' statement?",
    "quesType": "mcq",
    "op1": "Stops execution permanently",
    "op2": "Returns multiple values at once",
    "op3": "Pauses iteration and resumes later",
    "op4": "Creates a thread",
    "ans": "Pauses iteration and resumes later"
  },
  {
    "ques": "Which of the following is not thread-safe by default?",
    "quesType": "mcq",
    "op1": "ConcurrentDictionary",
    "op2": "Hashtable",
    "op3": "List",
    "op4": "ImmutableArray",
    "ans": "List"
  },
  {
    "ques": "Which pattern is used to restrict a class to a single instance?",
    "quesType": "mcq",
    "op1": "Factory Pattern",
    "op2": "Strategy Pattern",
    "op3": "Singleton Pattern",
    "op4": "Builder Pattern",
    "ans": "Singleton Pattern"
  },
  {
    "ques": "Which interface must a class implement to support 'using' statement?",
    "quesType": "mcq",
    "op1": "IDisposable",
    "op2": "IClonable",
    "op3": "IEnumerable",
    "op4": "ISerializable",
    "ans": "IDisposable"
  },
  {
    "ques": "Which of the following is true about dynamic type in C#?",
    "quesType": "mcq",
    "op1": "Type checking happens at compile time",
    "op2": "Type checking happens at runtime",
    "op3": "It is same as var",
    "op4": "It cannot hold value types",
    "ans": "Type checking happens at runtime"
  },
  {
    "ques": "Which C# feature allows automatic property implementation?",
    "quesType": "mcq",
    "op1": "Indexer",
    "op2": "Auto-Implemented Properties",
    "op3": "Delegates",
    "op4": "LINQ",
    "ans": "Auto-Implemented Properties"
  },
  {
    "ques": "Which attribute is used to make a method asynchronous?",
    "quesType": "mcq",
    "op1": "[Async]",
    "op2": "async",
    "op3": "[Task]",
    "op4": "await",
    "ans": "async"
  },

  {
    "ques": "Fill in the blank: The keyword _____ is used to define a lambda expression.",
    "quesType": "fill",
    "ans": "=>"
  },
  {
    "ques": "Fill in the blank: In C#, _____ collections are used for high-performance concurrent access.",
    "quesType": "fill",
    "ans": "concurrent"
  },
  {
    "ques": "Fill in the blank: The base class of all custom exceptions should be _____.",
    "quesType": "fill",
    "ans": "System.Exception"
  },
  {
    "ques": "Fill in the blank: To ensure thread safety, use the _____ keyword to lock shared resources.",
    "quesType": "fill",
    "ans": "lock"
  },
  {
    "ques": "Fill in the blank: The _____ modifier allows overriding in derived classes.",
    "quesType": "fill",
    "ans": "virtual"
  },
  {
    "ques": "Fill in the blank: The 'yield return' statement is only valid inside an _____ method.",
    "quesType": "fill",
    "ans": "iterator"
  },
  {
    "ques": "Fill in the blank: The _____ type allows holding any data type with late binding.",
    "quesType": "fill",
    "ans": "dynamic"
  },
  {
    "ques": "Fill in the blank: The 'using' statement ensures _____ is automatically called.",
    "quesType": "fill",
    "ans": "Dispose"
  },
  {
    "ques": "Fill in the blank: _____ types are evaluated at runtime, not compile time.",
    "quesType": "fill",
    "ans": "dynamic"
  },
  {
    "ques": "Fill in the blank: _____ collections do not allow duplicate keys.",
    "quesType": "fill",
    "ans": "Dictionary"
  },
  {
    "ques": "int x = 5;\nint y = ++x + x++ + ++x;\nConsole.WriteLine(y);",
    "ans": "21"
  },
  {
    "ques": "string s = null;\nConsole.WriteLine(s?.Length ?? -1);",
    "ans": "-1"
  },
  {
    "ques": "List<int> list = new List<int> {1, 2, 3};\nlist.ForEach(i => Console.Write(i * i + \" \"));",
    "ans": "1 4 9 "
  },
  {
    "ques": "int[] a = {1, 2, 3};\nint sum = a.Aggregate((acc, x) => acc - x);\nConsole.WriteLine(sum);",
    "ans": "-4"
  },
  {
    "ques": "string s = \"racecar\";\nConsole.WriteLine(s.SequenceEqual(s.Reverse()));",
    "ans": "True"
  },
  {
    "ques": "var x = new int[] {1, 2, 3};\nvar y = x;\ny[0] = 99;\nConsole.WriteLine(x[0]);",
    "ans": "99"
  },
  {
    "ques": "int x = 5;\nobject obj = x;\nx = 10;\nConsole.WriteLine(obj);",
    "ans": "5"
  },
  {
    "ques": "int x = 5;\nref int y = ref x;\ny = 9;\nConsole.WriteLine(x);",
    "ans": "9"
  },
  {
    "ques": "int x = 1;\nfor (int i = 0; i < 3; i++)\n    x = x << 1;\nConsole.WriteLine(x);",
    "ans": "8"
  },
  {
    "ques": "Console.WriteLine(\"5\" + 5);",
    "ans": "55"
  },
  {
    "ques": "Console.WriteLine(\"a\".CompareTo(\"b\") < 0);",
    "ans": "True"
  },
  {
    "ques": "int[] arr = {1, 2, 3, 4};\nConsole.WriteLine(arr.FirstOrDefault(n => n > 4));",
    "ans": "0"
  },
  {
    "ques": "string s = \"C# is fun\";\nConsole.WriteLine(string.Join(\"-\", s.Split()));",
    "ans": "C#-is-fun"
  },
  {
    "ques": "int a = 10;\nConsole.WriteLine(a.ToString(\"X\"));",
    "ans": "A"
  },
  {
    "ques": "int a = 2;\nConsole.WriteLine(Math.Pow(a, 3));",
    "ans": "8"
  },
  {
    "ques": "string s = \"abc\";\ns += s;\ns = s.Substring(1, 4);\nConsole.WriteLine(s);",
    "ans": "bcab"
  },
  {
    "ques": "Console.WriteLine(Enumerable.Range(1, 5).Sum());",
    "ans": "15"
  },
  {
    "ques": "int a = 5;\nConsole.WriteLine(a.GetType());",
    "ans": "System.Int32"
  },
  {
    "ques": "object o = null;\nConsole.WriteLine(o ?? \"null object\");",
    "ans": "null object"
  },
  {
    "ques": "var list = new List<int> { 1, 2, 3 };\nlist.RemoveAt(1);\nConsole.WriteLine(string.Join(\",\", list));",
    "ans": "1,3"
  },
  {
    "ques": "string str = \"Hello\";\nConsole.WriteLine(str.Insert(5, \" World\"));",
    "ans": "Hello World"
  },
  {
    "ques": "int[] arr = {2, 4, 6};\nConsole.WriteLine(arr.All(x => x % 2 == 0));",
    "ans": "True"
  },
  {
    "ques": "int[] arr = {3, 5, 7};\nConsole.WriteLine(arr.Any(x => x % 2 == 0));",
    "ans": "False"
  },
  {
    "ques": "int n = 4;\nConsole.WriteLine(Convert.ToString(n, 2));",
    "ans": "100"
  },
  {
    "ques": "int[] nums = {1, 2, 3};\nConsole.WriteLine(nums.Select(x => x * 2).Sum());",
    "ans": "12"
  },
  {
    "ques": "int x = 0;\nConsole.WriteLine(x == false);",
    "ans": "Compile-time Error"
  },
  {
    "ques": "string s = \"abc\";\nConsole.WriteLine(s == \"abc\" ? \"Match\" : \"No Match\");",
    "ans": "Match"
  },
  {
    "ques": "int a = 10;\nint b = 20;\n(a, b) = (b, a);\nConsole.WriteLine($\"a={a}, b={b}\");",
    "ans": "a=20, b=10"
  },
  {
    "ques": "Console.WriteLine(\"\\u0043\\u0023\");",
    "ans": "C#"
  },
  {
    "ques": "var now = DateTime.Now;\nConsole.WriteLine(now.Year > 2000);",
    "ans": "True"
  },
  {
    "ques": "What is the output of:\nint x = 5;\nint y = ++x + x++ + ++x;\nConsole.WriteLine(y);",
    "quesType": "mcq",
    "op1": "17",
    "op2": "20",
    "op3": "21",
    "op4": "23",
    "ans": "21"
  },
  {
    "ques": "What is the output of:\nint[] arr = {1, 2, 3};\nint result = arr.Aggregate((a, b) => a - b);\nConsole.WriteLine(result);",
    "quesType": "mcq",
    "op1": "-4",
    "op2": "4",
    "op3": "0",
    "op4": "Error",
    "ans": "-4"
  },
  {
    "ques": "What does this print?\nobject o = null;\nConsole.WriteLine(o ?? \"null\");",
    "quesType": "mcq",
    "op1": "null",
    "op2": "null object",
    "op3": "Exception",
    "op4": "Runtime Error",
    "ans": "null"
  },
  {
    "ques": "What is output of:\nint x = 2;\nConsole.WriteLine(Math.Pow(x, 3));",
    "quesType": "mcq",
    "op1": "6",
    "op2": "9",
    "op3": "8",
    "op4": "2^3",
    "ans": "8"
  },
  {
    "ques": "Which of these creates a deep copy?\n",
    "quesType": "mcq",
    "op1": "var copy = original;",
    "op2": "var copy = new List<int>(original);",
    "op3": "copy = original.ToList();",
    "op4": "original.Clone()",
    "ans": "copy = original.ToList();"
  },
  {
    "ques": "What is the output of:\nConsole.WriteLine(\"\\u0043\\u0023\");",
    "quesType": "mcq",
    "op1": "C#",
    "op2": "\\u0043\\u0023",
    "op3": "43#",
    "op4": "Compile error",
    "ans": "C#"
  },
  {
    "ques": "Which keyword exits a method and returns a value?",
    "quesType": "mcq",
    "op1": "break",
    "op2": "continue",
    "op3": "yield",
    "op4": "return",
    "ans": "return"
  },
  {
    "ques": "What will this output?\nint x = 10;\nint y = x++ * ++x;\nConsole.WriteLine(y);",
    "quesType": "mcq",
    "op1": "100",
    "op2": "110",
    "op3": "121",
    "op4": "132",
    "ans": "121"
  },
  {
    "ques": "Which one is false about string?\nstring s = \"abc\";",
    "quesType": "mcq",
    "op1": "s[0] = 'z';",
    "op2": "s = s + \"d\";",
    "op3": "s.Length == 3",
    "op4": "s.Contains(\"a\")",
    "ans": "s[0] = 'z';"
  },
  {
    "ques": "Which LINQ method sums elements?\nint[] nums = {1,2,3};",
    "quesType": "mcq",
    "op1": "nums.Aggregate()",
    "op2": "nums.Sum()",
    "op3": "nums.Join()",
    "op4": "nums.Concat()",
    "ans": "nums.Sum()"
  },
  {
    "ques": "int x = 5;\nint y = ++x + x++ + ++x;\nConsole.WriteLine(y);",
    "quesType": "fill",
    "ans": "21"
  },
  {
    "ques": "object o = null;\nConsole.WriteLine(o ?? \"____\");",
    "quesType": "fill",
    "ans": "null"
  },
  {
    "ques": "Console.WriteLine(\"C#\" == \"C#\");",
    "quesType": "fill",
    "ans": "True"
  },
  {
    "ques": "int[] arr = {1, 2, 3};\nConsole.WriteLine(arr.Aggregate((a,b) => a - b));",
    "quesType": "fill",
    "ans": "-4"
  },
  {
    "ques": "string s = \"Hello\";\nConsole.WriteLine(s.Insert(5, \" World\"));",
    "quesType": "fill",
    "ans": "Hello World"
  },
  {
    "ques": "Console.WriteLine(\"\\u0043\\u0023\");",
    "quesType": "fill",
    "ans": "C#"
  },
  {
    "ques": "Console.WriteLine(\"abc\".Substring(1,2));",
    "quesType": "fill",
    "ans": "bc"
  },
  {
    "ques": "Console.WriteLine(Convert.ToString(10, 2));",
    "quesType": "fill",
    "ans": "1010"
  },
  {
    "ques": "Console.WriteLine((5 & 3) == ____);",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "Console.WriteLine(\"test\".ToUpper());",
    "quesType": "fill",
    "ans": "TEST"
  },
  {
    "ques": "What will be the output?\nint[] arr = {1, 2, 3};\nConsole.WriteLine(string.Join(\"\", arr.Reverse()));",
    "quesType": "mcq",
    "op1": "321",
    "op2": "123",
    "op3": "3 2 1",
    "op4": "System.Int32[]",
    "ans": "321"
  },
  {
    "ques": "Which statement will throw an error?\nstring s = \"123\";",
    "quesType": "mcq",
    "op1": "int.Parse(s);",
    "op2": "Convert.ToInt32(s);",
    "op3": "int.TryParse(s, out _);",
    "op4": "s.ToCharArray()[5];",
    "ans": "s.ToCharArray()[5];"
  },
  {
    "ques": "What is output of:\nint x = 10;\nConsole.WriteLine(x >> 1);",
    "quesType": "mcq",
    "op1": "5",
    "op2": "20",
    "op3": "0",
    "op4": "1",
    "ans": "5"
  },
  {
    "ques": "What does this print?\nbool b = !(true && false);\nConsole.WriteLine(b);",
    "quesType": "mcq",
    "op1": "false",
    "op2": "true",
    "op3": "error",
    "op4": "0",
    "ans": "true"
  },
  {
    "ques": "Which function is not part of LINQ?",
    "quesType": "mcq",
    "op1": "Select",
    "op2": "Where",
    "op3": "Repeat",
    "op4": "Shift",
    "ans": "Shift"
  },
  {
    "ques": "What is the result of:\nConsole.WriteLine(\"A\".CompareTo(\"B\"));",
    "quesType": "mcq",
    "op1": "-1",
    "op2": "1",
    "op3": "0",
    "op4": "Compile error",
    "ans": "-1"
  },
  {
    "ques": "Which output is correct?\nConsole.WriteLine(Math.Floor(5.9));",
    "quesType": "mcq",
    "op1": "6",
    "op2": "5",
    "op3": "5.9",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "What is output of:\nint[] a = {1, 2};\nint[] b = a;\nb[0] = 9;\nConsole.WriteLine(a[0]);",
    "quesType": "mcq",
    "op1": "1",
    "op2": "9",
    "op3": "0",
    "op4": "Error",
    "ans": "9"
  },
  {
    "ques": "What will print?\nConsole.WriteLine(\"hello\".IndexOf(\"z\"));",
    "quesType": "mcq",
    "op1": "-1",
    "op2": "0",
    "op3": "1",
    "op4": "Error",
    "ans": "-1"
  },
  {
    "ques": "What happens here?\nstring s = null;\nConsole.WriteLine(s?.ToUpper());",
    "quesType": "mcq",
    "op1": "NULL",
    "op2": "null",
    "op3": "Error",
    "op4": "System.NullReferenceException",
    "ans": "null"
  },
  {
    "ques": "Console.WriteLine(\"abcd\".Substring(1, 2));",
    "quesType": "fill",
    "ans": "bc"
  },
  {
    "ques": "int[] a = {10, 20};\nint[] b = a;\nb[1] = 99;\nConsole.WriteLine(a[1]);",
    "quesType": "fill",
    "ans": "99"
  },
  {
    "ques": "string name = \"Puppy\";\nConsole.WriteLine(name.ToLower());",
    "quesType": "fill",
    "ans": "puppy"
  },
  {
    "ques": "Console.WriteLine(5 == 5 && 3 < 4);",
    "quesType": "fill",
    "ans": "True"
  },
  {
    "ques": "int x = 15;\nConsole.WriteLine(x & 7);",
    "quesType": "fill",
    "ans": "7"
  },
  {
    "ques": "Console.WriteLine(\"a\".CompareTo(\"A\"));",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "Console.WriteLine(Math.Ceiling(4.3));",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "string[] words = {\"a\", \"b\"};\nConsole.WriteLine(string.Join(\"-\", words));",
    "quesType": "fill",
    "ans": "a-b"
  },
  {
    "ques": "int x = 8;\nint y = x >> 2;\nConsole.WriteLine(y);",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "Console.WriteLine(\"abc\".EndsWith(\"c\"));",
    "quesType": "fill",
    "ans": "True"
  },
  {
    "ques": "What is the output of:\nConsole.WriteLine(10 / 4);",
    "quesType": "mcq",
    "op1": "2.5",
    "op2": "2",
    "op3": "2.0",
    "op4": "Compile Error",
    "ans": "2"
  },
  {
    "ques": "Which statement is true about nullable types in C#?",
    "quesType": "mcq",
    "op1": "They can store only 0",
    "op2": "They cannot store null",
    "op3": "They can hold value or null",
    "op4": "They are reference types",
    "ans": "They can hold value or null"
  },
  {
    "ques": "What is the output of:\nConsole.WriteLine(Math.Pow(2, 3));",
    "quesType": "mcq",
    "op1": "8",
    "op2": "6",
    "op3": "Error",
    "op4": "None",
    "ans": "8"
  },
  {
    "ques": "Which of the following is NOT a value type?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "float",
    "op3": "string",
    "op4": "char",
    "ans": "string"
  },
  {
    "ques": "What will be printed?\nint? x = null;\nConsole.WriteLine(x ?? 100);",
    "quesType": "mcq",
    "op1": "0",
    "op2": "null",
    "op3": "100",
    "op4": "Compile Error",
    "ans": "100"
  },
  {
    "ques": "Which access modifier allows access within the same class only?",
    "quesType": "mcq",
    "op1": "private",
    "op2": "protected",
    "op3": "public",
    "op4": "internal",
    "ans": "private"
  },
  {
    "ques": "What is boxing in C#?",
    "quesType": "mcq",
    "op1": "Converting reference to value",
    "op2": "Converting int to string",
    "op3": "Converting value to reference",
    "op4": "Casting between classes",
    "ans": "Converting value to reference"
  },
  {
    "ques": "What is output of:\nConsole.WriteLine(\"puppy\"[1]);",
    "quesType": "mcq",
    "op1": "p",
    "op2": "u",
    "op3": "y",
    "op4": "Error",
    "ans": "u"
  },
  {
    "ques": "Which of the following throws NullReferenceException?",
    "quesType": "mcq",
    "op1": "int x = 0;",
    "op2": "string s = null;\ns.ToUpper();",
    "op3": "Console.WriteLine(\"hi\");",
    "op4": "None",
    "ans": "string s = null;\ns.ToUpper();"
  },
  {
    "ques": "Which operator is used to check data type?",
    "quesType": "mcq",
    "op1": "==",
    "op2": "is",
    "op3": "as",
    "op4": "=",
    "ans": "is"
  },
  {
    "ques": "What will be output of:\nint x = 5;\nConsole.WriteLine(++x);",
    "quesType": "mcq",
    "op1": "6",
    "op2": "5",
    "op3": "Error",
    "op4": "None",
    "ans": "6"
  },
  {
    "ques": "Which class is used for string manipulations?",
    "quesType": "mcq",
    "op1": "StringBuilder",
    "op2": "StringJoiner",
    "op3": "TextWriter",
    "op4": "CharArray",
    "ans": "StringBuilder"
  },
  {
    "ques": "What is the base class of all classes in C#?",
    "quesType": "mcq",
    "op1": "System.Object",
    "op2": "Base",
    "op3": "Class",
    "op4": "System.Class",
    "ans": "System.Object"
  },
  {
    "ques": "Which loop is guaranteed to execute at least once?",
    "quesType": "mcq",
    "op1": "for",
    "op2": "while",
    "op3": "foreach",
    "op4": "do-while",
    "ans": "do-while"
  },
  {
    "ques": "Which one allows multiple interface inheritance?",
    "quesType": "mcq",
    "op1": "Class",
    "op2": "Interface",
    "op3": "Abstract",
    "op4": "Enum",
    "ans": "Interface"
  },
  {
    "ques": "Which method is called first in C# application?",
    "quesType": "mcq",
    "op1": "Start()",
    "op2": "Begin()",
    "op3": "Main()",
    "op4": "Run()",
    "ans": "Main()"
  },
  {
    "ques": "Which symbol is used for lambda expression?",
    "quesType": "mcq",
    "op1": "->",
    "op2": ":=",
    "op3": "=>",
    "op4": "==>",
    "ans": "=>"
  },
  {
    "ques": "What does 'ref' keyword do?",
    "quesType": "mcq",
    "op1": "Passes by value",
    "op2": "Copies variable",
    "op3": "Passes by reference",
    "op4": "Returns memory",
    "ans": "Passes by reference"
  },
  {
    "ques": "Which one is a sealed class?",
    "quesType": "mcq",
    "op1": "A class that can be inherited",
    "op2": "A class that can’t be inherited",
    "op3": "Static class",
    "op4": "Abstract class",
    "ans": "A class that can’t be inherited"
  },
  {
    "ques": "What will be output of:\nint[] a = {1,2,3};\nConsole.WriteLine(a[3]);",
    "quesType": "mcq",
    "op1": "3",
    "op2": "0",
    "op3": "Error",
    "op4": "null",
    "ans": "Error"
  },
  {
    "ques": "int x = 10;\nConsole.WriteLine(x >> 2);",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "Console.WriteLine(\"C#\".Length);",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "int[] arr = {1, 2, 3};\nConsole.WriteLine(arr[1]);",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "Console.WriteLine(10 % 3);",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "string a = \"puppy\";\nConsole.WriteLine(a.ToUpper());",
    "quesType": "fill",
    "ans": "PUPPY"
  },
  {
    "ques": "bool isTrue = !false;\nConsole.WriteLine(isTrue);",
    "quesType": "fill",
    "ans": "True"
  },
  {
    "ques": "int x = 2, y = 3;\nConsole.WriteLine(Math.Max(x, y));",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "Console.WriteLine(\"hello\".Contains(\"h\"));",
    "quesType": "fill",
    "ans": "True"
  },
  {
    "ques": "string s = null;\nConsole.WriteLine(s ?? \"default\");",
    "quesType": "fill",
    "ans": "default"
  },
  {
    "ques": "Console.WriteLine(\"apple\".StartsWith(\"a\"));",
    "quesType": "fill",
    "ans": "True"
  },
  {
    "ques": "int x = 5;\nx += 3;\nConsole.WriteLine(x);",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "Console.WriteLine(3 + 4 * 2);",
    "quesType": "fill",
    "ans": "11"
  },
  {
    "ques": "Console.WriteLine(\"test\".Replace(\"t\", \"T\"));",
    "quesType": "fill",
    "ans": "TesT"
  },
  {
    "ques": "Console.WriteLine(\"abc\".ToCharArray()[1]);",
    "quesType": "fill",
    "ans": "b"
  },
  {
    "ques": "double x = 7.5;\nConsole.WriteLine(Math.Floor(x));",
    "quesType": "fill",
    "ans": "7"
  },
  {
    "ques": "int x = 10;\nConsole.WriteLine(x == 10);",
    "quesType": "fill",
    "ans": "True"
  },
  {
    "ques": "Console.WriteLine(Convert.ToInt32(\"5\"));",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "Console.WriteLine(Math.Round(5.6));",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "Console.WriteLine(\"xyz\".Substring(0, 2));",
    "quesType": "fill",
    "ans": "xy"
  },
  {
    "ques": "int[] a = {10, 20};\nConsole.WriteLine(a.Length);",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "What is the output of:\nConsole.WriteLine(\"Hello\".GetType());",
    "quesType": "mcq",
    "op1": "System.Int32",
    "op2": "System.String",
    "op3": "System.Char",
    "op4": "System.Object",
    "ans": "System.String"
  },
  {
    "ques": "Which class allows us to work with files in C#?",
    "quesType": "mcq",
    "op1": "System.IO.Writer",
    "op2": "System.File",
    "op3": "System.IO.File",
    "op4": "System.IO.Text",
    "ans": "System.IO.File"
  },
  {
    "ques": "What does the following return?\n\"12345\".Substring(1, 2);",
    "quesType": "mcq",
    "op1": "23",
    "op2": "12",
    "op3": "123",
    "op4": "34",
    "ans": "23"
  },
  {
    "ques": "Which keyword is used to implement abstraction?",
    "quesType": "mcq",
    "op1": "virtual",
    "op2": "abstract",
    "op3": "override",
    "op4": "static",
    "ans": "abstract"
  },
  {
    "ques": "What will this return?\nConvert.ToBoolean(\"false\")",
    "quesType": "mcq",
    "op1": "True",
    "op2": "False",
    "op3": "null",
    "op4": "Exception",
    "ans": "False"
  },
  {
    "ques": "Which method is used to append in StringBuilder?",
    "quesType": "mcq",
    "op1": "add()",
    "op2": "append()",
    "op3": "Append()",
    "op4": "Insert()",
    "ans": "Append()"
  },
  {
    "ques": "What does 'as' keyword do?",
    "quesType": "mcq",
    "op1": "Casts if possible, else returns null",
    "op2": "Casts and throws exception",
    "op3": "Checks type only",
    "op4": "Performs arithmetic cast",
    "ans": "Casts if possible, else returns null"
  },
  {
    "ques": "Which LINQ method filters data?",
    "quesType": "mcq",
    "op1": "Where()",
    "op2": "Select()",
    "op3": "GroupBy()",
    "op4": "OrderBy()",
    "ans": "Where()"
  },
  {
    "ques": "What is the return type of Main() in console app?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "string",
    "op3": "void",
    "op4": "Both int and void",
    "ans": "Both int and void"
  },
  {
    "ques": "What keyword prevents a class from being inherited?",
    "quesType": "mcq",
    "op1": "abstract",
    "op2": "sealed",
    "op3": "static",
    "op4": "virtual",
    "ans": "sealed"
  },
  {
    "ques": "Which exception occurs when dividing by zero?",
    "quesType": "mcq",
    "op1": "OverflowException",
    "op2": "DivideByZeroException",
    "op3": "ArithmeticException",
    "op4": "InvalidOperationException",
    "ans": "DivideByZeroException"
  },
  {
    "ques": "What is the output of:\nConsole.WriteLine(typeof(int).IsValueType);",
    "quesType": "mcq",
    "op1": "True",
    "op2": "False",
    "op3": "1",
    "op4": "0",
    "ans": "True"
  },
  {
    "ques": "Which type supports lazy initialization?",
    "quesType": "mcq",
    "op1": "Lazy<T>",
    "op2": "Deferred<T>",
    "op3": "Nullable<T>",
    "op4": "Yield<T>",
    "ans": "Lazy<T>"
  },
  {
    "ques": "Which one is used to define anonymous type?",
    "quesType": "mcq",
    "op1": "var person = new { name = \"John\" };",
    "op2": "dynamic person = { name: \"John\" };",
    "op3": "object person = { name = \"John\" };",
    "op4": "string person = { name = \"John\" };",
    "ans": "var person = new { name = \"John\" };"
  },
  {
    "ques": "Which method stops a thread immediately?",
    "quesType": "mcq",
    "op1": "Abort()",
    "op2": "End()",
    "op3": "Kill()",
    "op4": "Stop()",
    "ans": "Abort()"
  },
  {
    "ques": "Which operator combines delegate methods?",
    "quesType": "mcq",
    "op1": "+",
    "op2": "&",
    "op3": "=>",
    "op4": "||",
    "ans": "+"
  },
  {
    "ques": "Which feature allows method names to be reused?",
    "quesType": "mcq",
    "op1": "Overloading",
    "op2": "Overriding",
    "op3": "Polymorphism",
    "op4": "Abstraction",
    "ans": "Overloading"
  },
  {
    "ques": "Which class is used for JSON serialization?",
    "quesType": "mcq",
    "op1": "JsonSerializer",
    "op2": "DataContractJsonSerializer",
    "op3": "XmlSerializer",
    "op4": "BinaryFormatter",
    "ans": "JsonSerializer"
  },
  {
    "ques": "Which method starts a task in Task Parallel Library?",
    "quesType": "mcq",
    "op1": "Run()",
    "op2": "Begin()",
    "op3": "Start()",
    "op4": "Execute()",
    "ans": "Run()"
  },
  {
    "ques": "Which syntax defines a lambda expression?",
    "quesType": "mcq",
    "op1": "(x) -> x+1",
    "op2": "x => x + 1",
    "op3": "lambda x: x + 1",
    "op4": "func(x) = x + 1",
    "ans": "x => x + 1"
  },
  {
    "ques": "Console.WriteLine(Math.Sqrt(49));",
    "quesType": "fill",
    "ans": "7"
  },
  {
    "ques": "string s = \"racecar\";\nConsole.WriteLine(s.Reverse().First());",
    "quesType": "fill",
    "ans": "r"
  },
  {
    "ques": "Console.WriteLine(\"apple\".IndexOf(\"p\"));",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "Console.WriteLine(string.Join(\",\", new int[]{1,2,3}));",
    "quesType": "fill",
    "ans": "1,2,3"
  },
  {
    "ques": "Console.WriteLine(\"Hello\".Substring(1, 3));",
    "quesType": "fill",
    "ans": "ell"
  },
  {
    "ques": "Console.WriteLine(\"  test  \".Trim().Length);",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "var list = new List<int>{1,2,3};\nConsole.WriteLine(list.Count);",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "int x = 4;\nConsole.WriteLine(x << 1);",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "Console.WriteLine(Convert.ToInt32(\"123\"));",
    "quesType": "fill",
    "ans": "123"
  },
  {
    "ques": "Console.WriteLine((5.0/2).ToString(\"0.00\"));",
    "quesType": "fill",
    "ans": "2.50"
  },
  {
    "ques": "Console.WriteLine(new string('a', 5));",
    "quesType": "fill",
    "ans": "aaaaa"
  },
  {
    "ques": "Console.WriteLine(\"puppy\".ToCharArray().Length);",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "Console.WriteLine(DateTime.Now.Year);",
    "quesType": "fill",
    "ans": "2025"
  },
  {
    "ques": "Console.WriteLine(\"C#\" + \" is cool\");",
    "quesType": "fill",
    "ans": "C# is cool"
  },
  {
    "ques": "Console.WriteLine(\"Hello World\".Split(' ')[1]);",
    "quesType": "fill",
    "ans": "World"
  },
  {
    "ques": "Console.WriteLine(Math.Round(4.567, 1));",
    "quesType": "fill",
    "ans": "4.6"
  },
  {
    "ques": "Console.WriteLine(\"abcde\".Remove(2));",
    "quesType": "fill",
    "ans": "ab"
  },
  {
    "ques": "Console.WriteLine(5.0 == 5);",
    "quesType": "fill",
    "ans": "True"
  },
  {
    "ques": "Console.WriteLine(\"A\".ToLower());",
    "quesType": "fill",
    "ans": "a"
  },
  {
    "ques": "Console.WriteLine(\"xyz\".PadLeft(5, '*'));",
    "quesType": "fill",
    "ans": "**xyz"
  }
]

let sharpIncorrectAnswers = [];

let sharpTimerId = "";
let sharpSkip = document.getElementById("sharpSkip");
let codingsharpQues = document.getElementById("codingsharpQues");
let mcqsharp = document.getElementById("mcqsharp");
let sharpQuestionNumber = document.getElementById("sharpQuestionNumber");
let sharpQuestionCount = 2;
let sharpScore = 0;
let sharpScoreDisplay = document.getElementById("sharpScoreDisplay");
let sharpScoreShow = document.getElementById("sharpScoreShow");
let sharpSkip2 = document.getElementById("sharpSkip2");

let sharpFillAns = document.getElementById("sharpFillAns");
let sharpStatus1 = document.getElementById("sharpStatus1");
let sharpStatus2 = document.getElementById("sharpStatus2");
let sharpStatus3 = document.getElementById("sharpStatus3");
let sharpCheckFill = document.getElementById("sharpCheckFill");

let codingResultsharp = document.getElementById("codingResultsharp");

let sharpIncorrectAnswersDisplay = document.getElementById("sharpIncorrectAnswersDisplay");
let sharpScoreBelow70 = document.getElementById("sharpScoreBelow70");
let sharpScore100 = document.getElementById("sharpScore100");

let sharpResult1 = document.getElementById("sharpResult1");
let sharpResult2 = document.getElementById("sharpResult2");
let sharpResult3 = document.getElementById("sharpResult3");
let sharpResult4 = document.getElementById("sharpResult4");
let sharpResult5 = document.getElementById("sharpResult5");
let sharpBg1 = document.getElementById("sharpBg1");

function codingsharpStart(){
  codingsharpHide.classList.add("d-none");
codingsharpShow.classList.remove("d-none");

let fillBlanksharp = document.getElementById("fillBlanksharp");
let op1sharp = document.getElementById("op1sharp");
let op2sharp = document.getElementById("op2sharp");
let op3sharp = document.getElementById("op3sharp");
let op4sharp = document.getElementById("op4sharp");

let sharpFillAns = document.getElementById("sharpFillAns");
let sharpStatus1 = document.getElementById("sharpStatus1");
let sharpStatus2 = document.getElementById("sharpStatus2");
let sharpStatus3 = document.getElementById("sharpStatus3");
let sharpCheckFill = document.getElementById("sharpCheckFill");

sharpFillAns.disabled = false;
sharpStatus1.classList.remove("d-none");
sharpStatus2.classList.add("d-none");
sharpStatus3.classList.add("d-none");
sharpFillAns.value = "";
sharpSkip2.textContent = "Skip";
sharpSkip2.style.backgroundColor = "orange";
sharpSkip2.style.borderColor = "orange";

sharpSkip.textContent = "Skip";
sharpSkip.style.backgroundColor = "orange";
sharpSkip.style.borderColor = "orange";
sharpScoreShow.textContent = "";
sharpTimer.style.color = "black";

  if (sharpLevel === 1) {
  let sharpRandom = Math.floor(Math.random() * codingsharp1Arr.length);
  let y = codingsharp1Arr[sharpRandom];
  sharpTimer.textContent = "20";
  sharpTime = 20;

  sharpTimerId = setInterval(function () {
    sharpTime = sharpTime - 1;
    if (sharpTime == 0) {
      clearInterval(sharpTimerId);
      sharpQuestionNumber.textContent = "Question:" + sharpQuestionCount + "/10";
      sharpQuestionCount = sharpQuestionCount + 1;
      sharpTime = 20;
      codingsharpStart();
    }
    if (sharpTime <= 5) {
      sharpTimer.style.color = "red";
      sharpTimer.textContent = sharpTime;
    } else {
      sharpTimer.textContent = sharpTime;
    }
  }, 1000);

  if (sharpQuestionCount == 12) {
    clearInterval(sharpTimerId);
    mcqsharp.classList.add("d-none");
    document.getElementById("sharpScoreEnd").textContent = sharpScoreDisplay.textContent;
    fillBlanksharp.classList.add("d-none");
    codingsharpShow.classList.add("d-none");
    codingResultsharp.classList.remove("d-none");

    if (sharpScore < 70) {
      sharpScoreBelow70.classList.remove("d-none");
      sharpScore100.classList.add("d-none");
      sectionCodingsharp.classList.add("back15");

      sharpResult1.textContent = "Test finished!!";
      sharpResult2.textContent = "😓 Oops! Not quite right.";
      sharpResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      sharpResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      sharpIncorrectAnswersDisplay.appendChild(h2);

      for (let z of sharpIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        sharpIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (sharpScore < 100) {
      sharpScoreBelow70.classList.remove("d-none");
      sharpScore100.classList.add("d-none");
      sectionCodingsharp.classList.add("back15");

      sharpResult1.textContent = "Test finished!!";
      sharpResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      sharpResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      sharpResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      sharpIncorrectAnswersDisplay.appendChild(h2);

      for (let z of sharpIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        sharpIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (sharpScore === 100) {
      document.getElementById("sectionCodingsharp").classList.add("back14");
      sharpScore100.classList.remove("d-none");
      sharpScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqsharp.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingsharpQues.innerHTML = formattedQuestion;

    fillBlanksharp.classList.add("d-none");
    op1sharp.textContent = y.op1;
    op2sharp.textContent = y.op2;
    op3sharp.textContent = y.op3;
    op4sharp.textContent = y.op4;

    const allOps = [op1sharp, op2sharp, op3sharp, op4sharp];
    allOps.forEach((op, i) => {
      op.onclick = function () {
        allOps.forEach(o => (o.disabled = true));
        clearInterval(sharpTimerId);
        sharpTime = 20;

        if (op.textContent === y.ans) {
          op.style.backgroundColor = "green";
          sharpScore += 10;
          sharpScoreShow.textContent = "+10";
          sharpScoreShow.style.color = "green";
        } else {
          op.style.backgroundColor = "red";
          sharpScore -= 5;
          sharpScoreShow.textContent = "-5";
          sharpScoreShow.style.color = "red";
          let wrong_answer = { ques: y.ques, correct: y.ans, wrong: op.textContent };
          sharpIncorrectAnswers.push(wrong_answer);
        }

        sharpScoreDisplay.textContent = "Score: " + sharpScore + "/100";

        sharpSkip.textContent = "Next";
        sharpSkip.style.backgroundColor = "#23ebdd";
        sharpSkip.style.borderColor = "#23ebdd";

        sharpSkip.onclick = function () {
          sharpQuestionNumber.textContent = "Question:" + sharpQuestionCount + "/10";
          sharpQuestionCount += 1;
          allOps.forEach(o => {
            o.disabled = false;
            o.style.backgroundColor = "white";
          });
          codingsharpStart();
        };
      };
    });

    sharpSkip.onclick = function () {
      clearInterval(sharpTimerId);
      sharpTime = 20;
      sharpQuestionNumber.textContent = "Question:" + sharpQuestionCount + "/10";
      sharpQuestionCount += 1;
      allOps.forEach(o => {
        o.disabled = false;
        o.style.backgroundColor = "white";
      });
      let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
      sharpIncorrectAnswers.push(wrong_answer);
      codingsharpStart();
    };
  } else {
    mcqsharp.classList.add("d-none");
    fillBlanksharp.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingsharpQues.innerHTML = formattedQuestion;

    sharpCheckFill.onclick = function () {
      clearInterval(sharpTimerId);
      sharpCheckFill.disabled = false;
      sharpSkip2.textContent = "Next";
      sharpSkip2.style.backgroundColor = "#23ebdd";
      sharpSkip2.style.borderColor = "#23ebdd";
      sharpFillAns.disabled = true;

      if (sharpFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        sharpStatus1.classList.add("d-none");
        sharpStatus2.classList.remove("d-none");

        sharpScore += 10;
        sharpScoreShow.textContent = "+10";
        sharpScoreShow.style.color = "green";
      } else {
        sharpStatus1.classList.add("d-none");
        sharpStatus3.classList.remove("d-none");

        sharpScore -= 5;
        sharpScoreShow.textContent = "-5";
        sharpScoreShow.style.color = "red";

        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: sharpFillAns.value };
        sharpIncorrectAnswers.push(wrong_answer);
      }

      sharpScoreDisplay.textContent = "Score: " + sharpScore + "/100";
    };

    sharpSkip2.onclick = function () {
      if (sharpFillAns.value === "") {
        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
        sharpIncorrectAnswers.push(wrong_answer);
      }
      clearInterval(sharpTimerId);
      sharpTime = 20;
      sharpQuestionNumber.textContent = "Question:" + sharpQuestionCount + "/10";
      sharpQuestionCount += 1;
      codingsharpStart();
    };
  }
   }
   else if (sharpLevel === 2) {
  let sharpRandom = Math.floor(Math.random() * codingsharp2Arr.length);
  let y = codingsharp2Arr[sharpRandom];
  sharpTimer.textContent = "25";
  sharpTime = 25;

  sharpTimerId = setInterval(function () {
    sharpTime = sharpTime - 1;
    if (sharpTime == 0) {
      clearInterval(sharpTimerId);
      sharpQuestionNumber.textContent = "Question:" + sharpQuestionCount + "/10";
      sharpQuestionCount = sharpQuestionCount + 1;
      sharpTime = 25;
      codingsharpStart();
    }
    if (sharpTime <= 5) {
      sharpTimer.style.color = "red";
      sharpTimer.textContent = sharpTime;
    } else {
      sharpTimer.textContent = sharpTime;
    }
  }, 1000);

  if (sharpQuestionCount == 12) {
    clearInterval(sharpTimerId);
    mcqsharp.classList.add("d-none");
    document.getElementById("sharpScoreEnd").textContent = sharpScoreDisplay.textContent;
    fillBlanksharp.classList.add("d-none");
    codingsharpShow.classList.add("d-none");
    codingResultsharp.classList.remove("d-none");

    if (sharpScore < 70) {
      sharpScoreBelow70.classList.remove("d-none");
      sharpScore100.classList.add("d-none");
      sectionCodingsharp.classList.add("back15");

      sharpResult1.textContent = "Test finished!!";
      sharpResult2.textContent = "😓 Oops! Not quite right.";
      sharpResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      sharpResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      sharpIncorrectAnswersDisplay.appendChild(h2);

      for (let z of sharpIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        sharpIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (sharpScore < 100) {
      sharpScoreBelow70.classList.remove("d-none");
      sharpScore100.classList.add("d-none");
      sectionCodingsharp.classList.add("back15");

      sharpResult1.textContent = "Test finished!!";
      sharpResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      sharpResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      sharpResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      sharpIncorrectAnswersDisplay.appendChild(h2);

      for (let z of sharpIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        sharpIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (sharpScore === 100) {
      document.getElementById("sectionCodingsharp").classList.add("back14");
      sharpScore100.classList.remove("d-none");
      sharpScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqsharp.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingsharpQues.innerHTML = formattedQuestion;
    fillBlanksharp.classList.add("d-none");
    op1sharp.textContent = y.op1;
    op2sharp.textContent = y.op2;
    op3sharp.textContent = y.op3;
    op4sharp.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(sharpTimerId);
      sharpTime = 25;
      sharpSkip.textContent = "Next";
      sharpSkip.style.backgroundColor = "#23ebdd";
      sharpSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        sharpScore += 10;
        sharpScoreShow.textContent = "+10";
        sharpScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        sharpScore -= 5;
        sharpScoreShow.textContent = "-5";
        sharpScoreShow.style.color = "red";
        sharpIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      sharpScoreDisplay.textContent = "Score: " + sharpScore + "/100";
    }

    op1sharp.onclick = () => handleOptionClick(op1sharp, [op2sharp, op3sharp, op4sharp]);
    op2sharp.onclick = () => handleOptionClick(op2sharp, [op1sharp, op3sharp, op4sharp]);
    op3sharp.onclick = () => handleOptionClick(op3sharp, [op1sharp, op2sharp, op4sharp]);
    op4sharp.onclick = () => handleOptionClick(op4sharp, [op1sharp, op2sharp, op3sharp]);

    sharpSkip.onclick = function () {
      clearInterval(sharpTimerId);
      sharpTime = 25;
      sharpQuestionNumber.textContent = "Question:" + sharpQuestionCount + "/10";
      sharpQuestionCount++;
      [op1sharp, op2sharp, op3sharp, op4sharp].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      sharpIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingsharpStart();
    };
  } 
  else {
  mcqsharp.classList.add("d-none");
  fillBlanksharp.classList.remove("d-none");
  let formattedQuestion = y.ques.replace(/\n/g, "<br>");
  codingsharpQues.innerHTML = formattedQuestion;


  sharpCheckFill.disabled = false;
  sharpFillAns.disabled = false;
  sharpFillAns.value = "";
  sharpStatus1.classList.remove("d-none");
  sharpStatus2.classList.add("d-none");
  sharpStatus3.classList.add("d-none");
  sharpScoreShow.textContent = "";

  sharpCheckFill.onclick = function () {
    clearInterval(sharpTimerId);
    sharpCheckFill.disabled = true;
    sharpSkip2.textContent = "Next";
    sharpSkip2.style.backgroundColor = "#23ebdd";
    sharpSkip2.style.borderColor = "#23ebdd";
    sharpFillAns.disabled = true;

    if (sharpFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
      sharpStatus1.classList.add("d-none");
      sharpStatus2.classList.remove("d-none");
      sharpScore += 10;
      sharpScoreShow.textContent = "+10";
      sharpScoreShow.style.color = "green";
    } else {
      sharpStatus1.classList.add("d-none");
      sharpStatus3.classList.remove("d-none");
      sharpScore -= 5;
      sharpScoreShow.textContent = "-5";
      sharpScoreShow.style.color = "red";
      sharpIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: sharpFillAns.value });
    }
    sharpScoreDisplay.textContent = "Score: " + sharpScore + "/100";
  };

  sharpSkip2.onclick = function () {
    if (sharpFillAns.value === "") {
      sharpIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
    }
    clearInterval(sharpTimerId);
    sharpTime = 25;
    sharpQuestionNumber.textContent = "Question:" + sharpQuestionCount + "/10";
    sharpQuestionCount++;
    codingsharpStart();
  };
}

}
else if (sharpLevel === 3) {
  let sharpRandom = Math.floor(Math.random() * codingsharp3Arr.length);
  let y = codingsharp3Arr[sharpRandom];
  sharpTimer.textContent = "30";
  sharpTime = 30;

  sharpTimerId = setInterval(function () {
    sharpTime = sharpTime - 1;
    if (sharpTime == 0) {
      clearInterval(sharpTimerId);
      sharpQuestionNumber.textContent = "Question:" + sharpQuestionCount + "/10";
      sharpQuestionCount = sharpQuestionCount + 1;
      sharpTime = 30;
      codingsharpStart();
    }
    if (sharpTime <= 5) {
      sharpTimer.style.color = "red";
      sharpTimer.textContent = sharpTime;
    } else {
      sharpTimer.textContent = sharpTime;
    }
  }, 1000);

  if (sharpQuestionCount == 12) {
    clearInterval(sharpTimerId);
    mcqsharp.classList.add("d-none");
    document.getElementById("sharpScoreEnd").textContent = sharpScoreDisplay.textContent;
    fillBlanksharp.classList.add("d-none");
    codingsharpShow.classList.add("d-none");
    codingResultsharp.classList.remove("d-none");

    if (sharpScore < 70) {
      sharpScoreBelow70.classList.remove("d-none");
      sharpScore100.classList.add("d-none");
      sectionCodingsharp.classList.add("back15");

      sharpResult1.textContent = "Test finished!!";
      sharpResult2.textContent = "😓 Oops! Not quite right.";
      sharpResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      sharpResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      sharpIncorrectAnswersDisplay.appendChild(h2);

      for (let z of sharpIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        sharpIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (sharpScore < 100) {
      sharpScoreBelow70.classList.remove("d-none");
      sharpScore100.classList.add("d-none");
      sectionCodingsharp.classList.add("back15");

      sharpResult1.textContent = "Test finished!!";
      sharpResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      sharpResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      sharpResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      sharpIncorrectAnswersDisplay.appendChild(h2);

      for (let z of sharpIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        sharpIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (sharpScore === 100) {
      document.getElementById("sectionCodingsharp").classList.add("back14");
      sharpScore100.classList.remove("d-none");
      sharpScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqsharp.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingsharpQues.innerHTML = formattedQuestion;
    fillBlanksharp.classList.add("d-none");
    op1sharp.textContent = y.op1;
    op2sharp.textContent = y.op2;
    op3sharp.textContent = y.op3;
    op4sharp.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(sharpTimerId);
      sharpTime = 30;
      sharpSkip.textContent = "Next";
      sharpSkip.style.backgroundColor = "#23ebdd";
      sharpSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        sharpScore += 10;
        sharpScoreShow.textContent = "+10";
        sharpScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        sharpScore -= 5;
        sharpScoreShow.textContent = "-5";
        sharpScoreShow.style.color = "red";
        sharpIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      sharpScoreDisplay.textContent = "Score: " + sharpScore + "/100";
    }

    op1sharp.onclick = () => handleOptionClick(op1sharp, [op2sharp, op3sharp, op4sharp]);
    op2sharp.onclick = () => handleOptionClick(op2sharp, [op1sharp, op3sharp, op4sharp]);
    op3sharp.onclick = () => handleOptionClick(op3sharp, [op1sharp, op2sharp, op4sharp]);
    op4sharp.onclick = () => handleOptionClick(op4sharp, [op1sharp, op2sharp, op3sharp]);

    sharpSkip.onclick = function () {
      clearInterval(sharpTimerId);
      sharpTime = 30;
      sharpQuestionNumber.textContent = "Question:" + sharpQuestionCount + "/10";
      sharpQuestionCount++;
      [op1sharp, op2sharp, op3sharp, op4sharp].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      sharpIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingsharpStart();
    };
  }
   else {
  mcqsharp.classList.add("d-none");
  fillBlanksharp.classList.remove("d-none");
  let formattedQuestion = y.ques.replace(/\n/g, "<br>");
  codingsharpQues.innerHTML = formattedQuestion;


  sharpCheckFill.disabled = false;
  sharpFillAns.disabled = false;
  sharpFillAns.value = "";
  sharpStatus1.classList.remove("d-none");
  sharpStatus2.classList.add("d-none");
  sharpStatus3.classList.add("d-none");
  sharpScoreShow.textContent = "";

  sharpCheckFill.onclick = function () {
    clearInterval(sharpTimerId);
    sharpCheckFill.disabled = true;
    sharpSkip2.textContent = "Next";
    sharpSkip2.style.backgroundColor = "#23ebdd";
    sharpSkip2.style.borderColor = "#23ebdd";
    sharpFillAns.disabled = true;

    if (sharpFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
      sharpStatus1.classList.add("d-none");
      sharpStatus2.classList.remove("d-none");
      sharpScore += 10;
      sharpScoreShow.textContent = "+10";
      sharpScoreShow.style.color = "green";
    } else {
      sharpStatus1.classList.add("d-none");
      sharpStatus3.classList.remove("d-none");
      sharpScore -= 5;
      sharpScoreShow.textContent = "-5";
      sharpScoreShow.style.color = "red";
      sharpIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: sharpFillAns.value });
    }
    sharpScoreDisplay.textContent = "Score: " + sharpScore + "/100";
  };

  sharpSkip2.onclick = function () {
    if (sharpFillAns.value === "") {
      sharpIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
    }
    clearInterval(sharpTimerId);
    sharpTime = 30;
    sharpQuestionNumber.textContent = "Question:" + sharpQuestionCount + "/10";
    sharpQuestionCount++;
    codingsharpStart();
  };
}
}



}
function resetCodingsharp() {
  document.getElementById("codingsharpShow").classList.add("d-none");
  document.getElementById("codingResultsharp").classList.add("d-none");
  document.getElementById("codingsharpHide").classList.remove("d-none");

  document.getElementById("sharpQuestionNumber").innerText = "Question: 1/10";
  document.getElementById("sharpScoreDisplay").innerText = "Score: 0/100";
  document.getElementById("sharpScoreShow").innerText = "";
  document.getElementById("sharpTimer").innerText = "00";
  document.getElementById("codingsharpQues").innerText = "";

  document.getElementById("op1sharp").innerText = "option1";
  document.getElementById("op2sharp").innerText = "option2";
  document.getElementById("op3sharp").innerText = "option3";
  document.getElementById("op4sharp").innerText = "option4";

  sharpIncorrectAnswers = [];
  document.getElementById("sharpIncorrectAnswersDisplay").innerHTML = "";

  sharpScore100.classList.add("d-none");
  sharpScoreBelow70.classList.add("d-none");

  sharpResult1.textContent = "";
  sharpResult2.textContent = "";
  sharpResult3.src = "";
  sharpResult4.textContent = "";

  sectionCodingsharp.classList.remove("back14");
  sectionCodingsharp.classList.remove("back15");

  document.getElementById("sharpFillAns").value = "";
  document.getElementById("fillBlanksharp").style.display = "none";
  document.getElementById("mcqsharp").style.display = "block";

  document.getElementById("sharpStatus1").classList.remove("d-none");
  document.getElementById("sharpStatus2").classList.add("d-none");
  document.getElementById("sharpStatus3").classList.add("d-none");

  if (typeof sharpTimerId !== "undefined") {
    clearInterval(sharpTimerId);
  }
  sharpTime = 20;
  sharpQuestionCount = 2;
  sharpScore = 0;
}

function sharpResetLevel() {
  sharpButton1.disabled = false;
  sharpButton2.disabled = false;
  sharpButton3.disabled = false;
  sharpButton.classList.add("d-none");
  sharpIncorrectAnswers = [];
}

    // php 

let phpButton = document.getElementById("phpButton");
let phpButton1 = document.getElementById("phpButton1");
let phpButton2 = document.getElementById("phpButton2");
let phpButton3 = document.getElementById("phpButton3");
let phpLevel = 0;
let phpCodingTest = document.getElementById("phpCodingTest");
let phpTimer = document.getElementById("phpTimer");

phpButton1.onclick = function () {
  phpButton2.disabled = true;
  phpButton3.disabled = true;
  phpLevel = 1;

  phpButton.classList.remove("d-none");
  phpButton.classList.add("d-block");
};

phpButton2.onclick = function () {
  phpButton1.disabled = true;
  phpButton3.disabled = true;
  phpLevel = 2;

  phpButton.classList.remove("d-none");
  phpButton.classList.add("d-block");
};

phpButton3.onclick = function () {
  phpButton2.disabled = true;
  phpButton1.disabled = true;
  phpLevel = 3;

  phpButton.classList.remove("d-none");
  phpButton.classList.add("d-block");
};

let phpTime = 0;

let codingphpShow = document.getElementById("codingphpShow");
let codingphpHide = document.getElementById("codingphpHide");
let codingphpBack = document.getElementById("codingphpBack");

codingphpBack.onclick = function () {
  codingphpShow.classList.add("d-none");
  codingphpHide.classList.remove("d-none");
};

let codingphp1Arr=[
   {
    "ques": "Which tag is used to start PHP code?",
    "quesType": "mcq",
    "op1": "<?php",
    "op2": "<php>",
    "op3": "<?",
    "op4": "<script>",
    "ans": "<?php"
  },
  {
    "ques": "Which symbol is used to declare variables in PHP?",
    "quesType": "mcq",
    "op1": "&",
    "op2": "#",
    "op3": "$",
    "op4": "%",
    "ans": "$"
  },
  {
    "ques": "Which function is used to output text in PHP?",
    "quesType": "mcq",
    "op1": "print()",
    "op2": "echo",
    "op3": "printf()",
    "op4": "write()",
    "ans": "echo"
  },
  {
    "ques": "How do you write a single-line comment in PHP?",
    "quesType": "mcq",
    "op1": "// comment",
    "op2": "# comment",
    "op3": "/* comment */",
    "op4": "-- comment",
    "ans": "// comment"
  },
  {
    "ques": "Which superglobal is used to collect form data sent with POST?",
    "quesType": "mcq",
    "op1": "$_GET",
    "op2": "$_POST",
    "op3": "$_REQUEST",
    "op4": "$_FORM",
    "ans": "$_POST"
  },
  {
    "ques": "Which function checks if a file exists in PHP?",
    "quesType": "mcq",
    "op1": "file_exist()",
    "op2": "file_exists()",
    "op3": "exists()",
    "op4": "check_file()",
    "ans": "file_exists()"
  },
  {
    "ques": "Which keyword is used to create a class in PHP?",
    "quesType": "mcq",
    "op1": "define",
    "op2": "object",
    "op3": "class",
    "op4": "function",
    "ans": "class"
  },
  {
    "ques": "Which function is used to start a session?",
    "quesType": "mcq",
    "op1": "start_session()",
    "op2": "session()",
    "op3": "session_start()",
    "op4": "begin_session()",
    "ans": "session_start()"
  },
  {
    "ques": "Which function is used to read a file line by line?",
    "quesType": "mcq",
    "op1": "fread()",
    "op2": "file_get_contents()",
    "op3": "fgets()",
    "op4": "readline()",
    "ans": "fgets()"
  },
  {
    "ques": "Which operator is used to concatenate strings?",
    "quesType": "mcq",
    "op1": "+",
    "op2": ".",
    "op3": "&",
    "op4": "*",
    "ans": "."
  },
  {
    "ques": "Which keyword is used to inherit a class?",
    "quesType": "mcq",
    "op1": "extends",
    "op2": "implements",
    "op3": "inherits",
    "op4": "use",
    "ans": "extends"
  },
  {
    "ques": "Which of these is NOT a valid data type in PHP?",
    "quesType": "mcq",
    "op1": "string",
    "op2": "float",
    "op3": "char",
    "op4": "boolean",
    "ans": "char"
  },
  {
    "ques": "Which function is used to redirect to another page?",
    "quesType": "mcq",
    "op1": "header()",
    "op2": "redirect()",
    "op3": "move()",
    "op4": "goto()",
    "ans": "header()"
  },
  {
    "ques": "Which function returns the number of elements in an array?",
    "quesType": "mcq",
    "op1": "size()",
    "op2": "count()",
    "op3": "length()",
    "op4": "sizeof()",
    "ans": "count()"
  },
  {
    "ques": "Which loop is used to iterate over arrays?",
    "quesType": "mcq",
    "op1": "while",
    "op2": "for",
    "op3": "foreach",
    "op4": "loop",
    "ans": "foreach"
  },
  {
    "ques": "How do you declare a constant in PHP?",
    "quesType": "mcq",
    "op1": "const",
    "op2": "define()",
    "op3": "constant()",
    "op4": "var",
    "ans": "define()"
  },
  {
    "ques": "Which function checks if a variable is set?",
    "quesType": "mcq",
    "op1": "isset()",
    "op2": "is_set()",
    "op3": "check()",
    "op4": "defined()",
    "ans": "isset()"
  },
  {
    "ques": "What is the default file extension for PHP files?",
    "quesType": "mcq",
    "op1": ".ph",
    "op2": ".phtml",
    "op3": ".php",
    "op4": ".html",
    "ans": ".php"
  },
  {
    "ques": "Which keyword is used to include a file once?",
    "quesType": "mcq",
    "op1": "require",
    "op2": "include_once",
    "op3": "include",
    "op4": "require_once",
    "ans": "include_once"
  },
  {
    "ques": "Which variable holds cookie data?",
    "quesType": "mcq",
    "op1": "$_COOKIE",
    "op2": "$_SESSION",
    "op3": "$_POST",
    "op4": "$_GET",
    "ans": "$_COOKIE"
  },

  // +10 more MCQs and 30 Fill in the Blanks

  {
    "ques": "Fill in the blank: PHP stands for _____.",
    "quesType": "fill",
    "ans": "Hypertext Preprocessor"
  },
  {
    "ques": "Fill in the blank: The keyword _____ is used to declare a function.",
    "quesType": "fill",
    "ans": "function"
  },
  {
    "ques": "Fill in the blank: The operator _____ is used for concatenation.",
    "quesType": "fill",
    "ans": "."
  },
  {
    "ques": "Fill in the blank: _____ is used to start output buffering.",
    "quesType": "fill",
    "ans": "ob_start()"
  },
  {
    "ques": "Fill in the blank: Sessions are started using _____.",
    "quesType": "fill",
    "ans": "session_start()"
  },
  {
    "ques": "Fill in the blank: To destroy a session, use _____.",
    "quesType": "fill",
    "ans": "session_destroy()"
  },
  {
    "ques": "Fill in the blank: The _____ operator is used to compare values and types.",
    "quesType": "fill",
    "ans": "==="
  },
  {
    "ques": "Fill in the blank: _____ function is used to include and run a file.",
    "quesType": "fill",
    "ans": "include"
  },
  {
    "ques": "Fill in the blank: _____ keyword is used to exit from a loop.",
    "quesType": "fill",
    "ans": "break"
  },
  {
    "ques": "Fill in the blank: To check a condition, we use the _____ statement.",
    "quesType": "fill",
    "ans": "if"
  },
  {
    "ques": "Which tag is used to start PHP code?",
    "quesType": "mcq",
    "op1": "<?php",
    "op2": "<php>",
    "op3": "<?",
    "op4": "<script>",
    "ans": "<?php"
  },
  {
    "ques": "Which symbol is used to declare variables in PHP?",
    "quesType": "mcq",
    "op1": "&",
    "op2": "#",
    "op3": "$",
    "op4": "%",
    "ans": "$"
  },
  {
    "ques": "Which function outputs text in PHP?",
    "quesType": "mcq",
    "op1": "print()",
    "op2": "echo",
    "op3": "printf()",
    "op4": "write()",
    "ans": "echo"
  },
  {
    "ques": "How do you write a single-line comment in PHP?",
    "quesType": "mcq",
    "op1": "// comment",
    "op2": "# comment",
    "op3": "/* comment */",
    "op4": "-- comment",
    "ans": "// comment"
  },
  {
    "ques": "Which superglobal is used to collect form data with POST?",
    "quesType": "mcq",
    "op1": "$_GET",
    "op2": "$_POST",
    "op3": "$_REQUEST",
    "op4": "$_FORM",
    "ans": "$_POST"
  },
  {
    "ques": "Which function checks if a file exists?",
    "quesType": "mcq",
    "op1": "file_exist()",
    "op2": "file_exists()",
    "op3": "exists()",
    "op4": "check_file()",
    "ans": "file_exists()"
  },
  {
    "ques": "Which keyword creates a class in PHP?",
    "quesType": "mcq",
    "op1": "define",
    "op2": "object",
    "op3": "class",
    "op4": "function",
    "ans": "class"
  },
  {
    "ques": "Which function starts a session?",
    "quesType": "mcq",
    "op1": "start_session()",
    "op2": "session()",
    "op3": "session_start()",
    "op4": "begin_session()",
    "ans": "session_start()"
  },
  {
    "ques": "Which function reads a file line by line?",
    "quesType": "mcq",
    "op1": "fread()",
    "op2": "file_get_contents()",
    "op3": "fgets()",
    "op4": "readline()",
    "ans": "fgets()"
  },
  {
    "ques": "Which operator concatenates strings?",
    "quesType": "mcq",
    "op1": "+",
    "op2": ".",
    "op3": "&",
    "op4": "*",
    "ans": "."
  },
  {
    "ques": "Which keyword is used for inheritance?",
    "quesType": "mcq",
    "op1": "extends",
    "op2": "implements",
    "op3": "inherits",
    "op4": "use",
    "ans": "extends"
  },
  {
    "ques": "Which is NOT a valid PHP data type?",
    "quesType": "mcq",
    "op1": "string",
    "op2": "float",
    "op3": "char",
    "op4": "boolean",
    "ans": "char"
  },
  {
    "ques": "Which function redirects to another page?",
    "quesType": "mcq",
    "op1": "header()",
    "op2": "redirect()",
    "op3": "move()",
    "op4": "goto()",
    "ans": "header()"
  },
  {
    "ques": "Which function counts array elements?",
    "quesType": "mcq",
    "op1": "size()",
    "op2": "count()",
    "op3": "length()",
    "op4": "sizeof()",
    "ans": "count()"
  },
  {
    "ques": "Which loop iterates over arrays?",
    "quesType": "mcq",
    "op1": "while",
    "op2": "for",
    "op3": "foreach",
    "op4": "loop",
    "ans": "foreach"
  },
  {
    "ques": "How to declare a constant?",
    "quesType": "mcq",
    "op1": "const",
    "op2": "define()",
    "op3": "constant()",
    "op4": "var",
    "ans": "define()"
  },
  {
    "ques": "Which function checks if a variable is set?",
    "quesType": "mcq",
    "op1": "isset()",
    "op2": "is_set()",
    "op3": "check()",
    "op4": "defined()",
    "ans": "isset()"
  },
  {
    "ques": "Default file extension for PHP files?",
    "quesType": "mcq",
    "op1": ".ph",
    "op2": ".phtml",
    "op3": ".php",
    "op4": ".html",
    "ans": ".php"
  },
  {
    "ques": "Which keyword includes a file once?",
    "quesType": "mcq",
    "op1": "require",
    "op2": "include_once",
    "op3": "include",
    "op4": "require_once",
    "ans": "include_once"
  },
  {
    "ques": "Which superglobal holds cookie data?",
    "quesType": "mcq",
    "op1": "$_COOKIE",
    "op2": "$_SESSION",
    "op3": "$_POST",
    "op4": "$_GET",
    "ans": "$_COOKIE"
  },

  {
    "ques": "Fill in the blank: PHP stands for _____.",
    "quesType": "fill",
    "ans": "Hypertext Preprocessor"
  },
  {
    "ques": "Fill in the blank: The keyword _____ declares a function.",
    "quesType": "fill",
    "ans": "function"
  },
  {
    "ques": "Fill in the blank: The operator _____ concatenates strings.",
    "quesType": "fill",
    "ans": "."
  },
  {
    "ques": "Fill in the blank: _____ starts output buffering.",
    "quesType": "fill",
    "ans": "ob_start()"
  },
  {
    "ques": "Fill in the blank: Sessions start with _____.",
    "quesType": "fill",
    "ans": "session_start()"
  },
  {
    "ques": "Fill in the blank: Destroy a session with _____.",
    "quesType": "fill",
    "ans": "session_destroy()"
  },
  {
    "ques": "Fill in the blank: The operator _____ checks value & type.",
    "quesType": "fill",
    "ans": "==="
  },
  {
    "ques": "Fill in the blank: _____ includes and runs a file.",
    "quesType": "fill",
    "ans": "include"
  },
  {
    "ques": "Fill in the blank: Use _____ to exit a loop.",
    "quesType": "fill",
    "ans": "break"
  },
  {
    "ques": "Fill in the blank: _____ statement checks conditions.",
    "quesType": "fill",
    "ans": "if"
  },
  {
    "ques": "Fill in the blank: _____ keyword creates a class.",
    "quesType": "fill",
    "ans": "class"
  },
  {
    "ques": "Fill in the blank: _____ checks if variable is set.",
    "quesType": "fill",
    "ans": "isset()"
  },
  {
    "ques": "Fill in the blank: Use _____ to redirect pages.",
    "quesType": "fill",
    "ans": "header()"
  },
  {
    "ques": "Fill in the blank: _____ counts array elements.",
    "quesType": "fill",
    "ans": "count()"
  },
  {
    "ques": "Fill in the blank: _____ loop iterates over arrays.",
    "quesType": "fill",
    "ans": "foreach"
  },
  {
    "ques": "Fill in the blank: Define constant using _____.",
    "quesType": "fill",
    "ans": "define()"
  },
  {
    "ques": "Fill in the blank: PHP files end with _____.",
    "quesType": "fill",
    "ans": ".php"
  },
  {
    "ques": "Fill in the blank: Use _____ to check file exists.",
    "quesType": "fill",
    "ans": "file_exists()"
  },
  {
    "ques": "Fill in the blank: _____ holds POST data.",
    "quesType": "fill",
    "ans": "$_POST"
  },
  {
    "ques": "Fill in the blank: _____ holds cookie data.",
    "quesType": "fill",
    "ans": "$_COOKIE"
  },
  {
    "ques": "Fill in the blank: _____ is used for multi-line comments.",
    "quesType": "fill",
    "ans": "/* */"
  },
  {
    "ques": "Which symbol ends a PHP statement?",
    "quesType": "mcq",
    "op1": ".",
    "op2": ",",
    "op3": ";",
    "op4": ":",
    "ans": ";"
  },
  {
    "ques": "Which of these is used to include files?",
    "quesType": "mcq",
    "op1": "import",
    "op2": "include",
    "op3": "insert",
    "op4": "require",
    "ans": "include"
  },
  {
    "ques": "Which of these opens a file for reading?",
    "quesType": "mcq",
    "op1": "fopen()",
    "op2": "file_read()",
    "op3": "file_open()",
    "op4": "readfile()",
    "ans": "fopen()"
  },
  {
    "ques": "Which global variable holds uploaded files?",
    "quesType": "mcq",
    "op1": "$_FILE",
    "op2": "$_UPLOAD",
    "op3": "$_FILES",
    "op4": "$_DATA",
    "ans": "$_FILES"
  },
  {
    "ques": "Which of these is a loop in PHP?",
    "quesType": "mcq",
    "op1": "do-while",
    "op2": "repeat",
    "op3": "loop",
    "op4": "repeat-until",
    "ans": "do-while"
  },
  {
    "ques": "Which operator checks equality?",
    "quesType": "mcq",
    "op1": "===",
    "op2": "==",
    "op3": "=",
    "op4": "!=",
    "ans": "=="
  },
  {
    "ques": "Which keyword returns a value from a function?",
    "quesType": "mcq",
    "op1": "return",
    "op2": "output",
    "op3": "yield",
    "op4": "exit",
    "ans": "return"
  },
  {
    "ques": "Which function checks empty variables?",
    "quesType": "mcq",
    "op1": "isset()",
    "op2": "empty()",
    "op3": "is_null()",
    "op4": "is_empty()",
    "ans": "empty()"
  },
  {
    "ques": "How to make code run only if condition is false?",
    "quesType": "mcq",
    "op1": "if",
    "op2": "while",
    "op3": "else",
    "op4": "elseif",
    "ans": "else"
  },
  {
    "ques": "How to access array length?",
    "quesType": "mcq",
    "op1": "size()",
    "op2": "count()",
    "op3": "length()",
    "op4": "sizeof()",
    "ans": "count()"
  },
  {
    "ques": "Which function writes to a file?",
    "quesType": "mcq",
    "op1": "file_write()",
    "op2": "writefile()",
    "op3": "fwrite()",
    "op4": "write()",
    "ans": "fwrite()"
  },
  {
    "ques": "Which operator means 'not equal'?",
    "quesType": "mcq",
    "op1": "!=",
    "op2": "<>",
    "op3": "!==",
    "op4": "All of these",
    "ans": "!="
  },
  {
    "ques": "Which function stops script execution?",
    "quesType": "mcq",
    "op1": "stop()",
    "op2": "exit()",
    "op3": "die()",
    "op4": "Both exit() and die()",
    "ans": "Both exit() and die()"
  },
  {
    "ques": "How to set a cookie?",
    "quesType": "mcq",
    "op1": "setcookie()",
    "op2": "cookie_set()",
    "op3": "create_cookie()",
    "op4": "cookie()",
    "ans": "setcookie()"
  },
  {
    "ques": "Which operator is used for logical AND?",
    "quesType": "mcq",
    "op1": "&",
    "op2": "&&",
    "op3": "and",
    "op4": "&& and and",
    "ans": "&&"
  },
  {
    "ques": "How to convert string to integer?",
    "quesType": "mcq",
    "op1": "intval()",
    "op2": "strval()",
    "op3": "toInt()",
    "op4": "parseInt()",
    "ans": "intval()"
  },
  {
    "ques": "Which function gets string length?",
    "quesType": "mcq",
    "op1": "strlen()",
    "op2": "count()",
    "op3": "length()",
    "op4": "size()",
    "ans": "strlen()"
  },
  {
    "ques": "Which function splits strings?",
    "quesType": "mcq",
    "op1": "split()",
    "op2": "explode()",
    "op3": "implode()",
    "op4": "join()",
    "ans": "explode()"
  },
  {
    "ques": "How to loop 5 times?",
    "quesType": "mcq",
    "op1": "for",
    "op2": "while",
    "op3": "do",
    "op4": "repeat",
    "ans": "for"
  },
  {
    "ques": "Which superglobal has server info?",
    "quesType": "mcq",
    "op1": "$_SERVER",
    "op2": "$_POST",
    "op3": "$_ENV",
    "op4": "$_FILES",
    "ans": "$_SERVER"
  },

  {
    "ques": "Fill in the blank: A PHP block starts with _____.",
    "quesType": "fill",
    "ans": "<?php"
  },
  {
    "ques": "Fill in the blank: End PHP code with _____.",
    "quesType": "fill",
    "ans": "?>"
  },
  {
    "ques": "Fill in the blank: A variable always starts with _____.",
    "quesType": "fill",
    "ans": "$"
  },
  {
    "ques": "Fill in the blank: Use _____ to output data.",
    "quesType": "fill",
    "ans": "echo"
  },
  {
    "ques": "Fill in the blank: _____ writes files.",
    "quesType": "fill",
    "ans": "fwrite()"
  },
  {
    "ques": "Fill in the blank: _____ reads entire file.",
    "quesType": "fill",
    "ans": "file_get_contents()"
  },
  {
    "ques": "Fill in the blank: _____ checks if file exists.",
    "quesType": "fill",
    "ans": "file_exists()"
  },
  {
    "ques": "Fill in the blank: _____ deletes a file.",
    "quesType": "fill",
    "ans": "unlink()"
  },
  {
    "ques": "Fill in the blank: _____ stops script immediately.",
    "quesType": "fill",
    "ans": "exit()"
  },
  {
    "ques": "Fill in the blank: _____ sets cookies.",
    "quesType": "fill",
    "ans": "setcookie()"
  },
  {
    "ques": "Fill in the blank: _____ returns length of string.",
    "quesType": "fill",
    "ans": "strlen()"
  },
  {
    "ques": "Fill in the blank: _____ joins array elements.",
    "quesType": "fill",
    "ans": "implode()"
  },
  {
    "ques": "Fill in the blank: _____ splits strings.",
    "quesType": "fill",
    "ans": "explode()"
  },
  {
    "ques": "Fill in the blank: _____ converts to integer.",
    "quesType": "fill",
    "ans": "intval()"
  },
  {
    "ques": "Fill in the blank: _____ checks empty variable.",
    "quesType": "fill",
    "ans": "empty()"
  },
  {
    "ques": "Fill in the blank: _____ logical AND operator.",
    "quesType": "fill",
    "ans": "&&"
  },
  {
    "ques": "Fill in the blank: _____ starts a loop.",
    "quesType": "fill",
    "ans": "for"
  },
  {
    "ques": "Fill in the blank: _____ checks equality.",
    "quesType": "fill",
    "ans": "=="
  },
  {
    "ques": "Fill in the blank: _____ global has server info.",
    "quesType": "fill",
    "ans": "$_SERVER"
  },
  {
    "ques": "Fill in the blank: _____ holds uploaded files.",
    "quesType": "fill",
    "ans": "$_FILES"
  },
  {
    "ques": "Which symbol is used for comments in PHP?",
    "quesType": "mcq",
    "op1": "//",
    "op2": "/* */",
    "op3": "#",
    "op4": "All of these",
    "ans": "All of these"
  },
  {
    "ques": "Which function checks if a variable is set?",
    "quesType": "mcq",
    "op1": "isset()",
    "op2": "empty()",
    "op3": "is_null()",
    "op4": "check()",
    "ans": "isset()"
  },
  {
    "ques": "How to define a constant in PHP?",
    "quesType": "mcq",
    "op1": "const()",
    "op2": "define()",
    "op3": "constant()",
    "op4": "def()",
    "ans": "define()"
  },
  {
    "ques": "Which function destroys a session?",
    "quesType": "mcq",
    "op1": "session_destroy()",
    "op2": "session_end()",
    "op3": "destroy()",
    "op4": "end_session()",
    "ans": "session_destroy()"
  },
  {
    "ques": "Which function redirects to another page?",
    "quesType": "mcq",
    "op1": "header()",
    "op2": "redirect()",
    "op3": "goto()",
    "op4": "location()",
    "ans": "header()"
  },
  {
    "ques": "Which operator is used for string concatenation?",
    "quesType": "mcq",
    "op1": "+",
    "op2": "&",
    "op3": ".",
    "op4": "*",
    "ans": "."
  },
  {
    "ques": "Which function removes whitespace?",
    "quesType": "mcq",
    "op1": "strip()",
    "op2": "remove()",
    "op3": "trim()",
    "op4": "str_clean()",
    "ans": "trim()"
  },
  {
    "ques": "Which function finds position of substring?",
    "quesType": "mcq",
    "op1": "strpos()",
    "op2": "substr()",
    "op3": "str_find()",
    "op4": "find()",
    "ans": "strpos()"
  },
  {
    "ques": "Which keyword includes files only once?",
    "quesType": "mcq",
    "op1": "include",
    "op2": "require",
    "op3": "include_once",
    "op4": "require_once",
    "ans": "include_once"
  },
  {
    "ques": "Which of these is true about PHP arrays?",
    "quesType": "mcq",
    "op1": "Indexed",
    "op2": "Associative",
    "op3": "Multidimensional",
    "op4": "All of these",
    "ans": "All of these"
  },
  {
    "ques": "Which function sorts an array?",
    "quesType": "mcq",
    "op1": "arr_sort()",
    "op2": "sort()",
    "op3": "array_sort()",
    "op4": "sort_array()",
    "ans": "sort()"
  },
  {
    "ques": "Which function counts elements in an array?",
    "quesType": "mcq",
    "op1": "sizeof()",
    "op2": "count()",
    "op3": "elements()",
    "op4": "length()",
    "ans": "count()"
  },
  {
    "ques": "Which operator is used for conditional check?",
    "quesType": "mcq",
    "op1": "if",
    "op2": "? :",
    "op3": "&&",
    "op4": "||",
    "ans": "? :"
  },
  {
    "ques": "Which function splits a string by delimiter?",
    "quesType": "mcq",
    "op1": "implode()",
    "op2": "explode()",
    "op3": "break()",
    "op4": "split()",
    "ans": "explode()"
  },
  {
    "ques": "Which function joins array elements?",
    "quesType": "mcq",
    "op1": "implode()",
    "op2": "explode()",
    "op3": "join()",
    "op4": "merge()",
    "ans": "implode()"
  },
  {
    "ques": "Which function converts string to lowercase?",
    "quesType": "mcq",
    "op1": "tolower()",
    "op2": "strtolower()",
    "op3": "lower()",
    "op4": "stringlower()",
    "ans": "strtolower()"
  },
  {
    "ques": "Which function converts string to uppercase?",
    "quesType": "mcq",
    "op1": "toupper()",
    "op2": "strtoupper()",
    "op3": "upper()",
    "op4": "stringupper()",
    "ans": "strtoupper()"
  },
  {
    "ques": "Which function replaces text in string?",
    "quesType": "mcq",
    "op1": "replace()",
    "op2": "str_replace()",
    "op3": "string_replace()",
    "op4": "substitute()",
    "ans": "str_replace()"
  },
  {
    "ques": "Which function gets type of variable?",
    "quesType": "mcq",
    "op1": "var_type()",
    "op2": "gettype()",
    "op3": "type()",
    "op4": "typeof()",
    "ans": "gettype()"
  },
  {
    "ques": "Which superglobal gets URL parameters?",
    "quesType": "mcq",
    "op1": "$_POST",
    "op2": "$_GET",
    "op3": "$_REQUEST",
    "op4": "$_SERVER",
    "ans": "$_GET"
  },

  {
    "ques": "Fill in the blank: _____ includes files only once.",
    "quesType": "fill",
    "ans": "include_once"
  },
  {
    "ques": "Fill in the blank: _____ checks if a variable exists.",
    "quesType": "fill",
    "ans": "isset()"
  },
  {
    "ques": "Fill in the blank: _____ defines a constant.",
    "quesType": "fill",
    "ans": "define()"
  },
  {
    "ques": "Fill in the blank: _____ destroys session.",
    "quesType": "fill",
    "ans": "session_destroy()"
  },
  {
    "ques": "Fill in the blank: _____ redirects page.",
    "quesType": "fill",
    "ans": "header()"
  },
  {
    "ques": "Fill in the blank: _____ concatenates strings.",
    "quesType": "fill",
    "ans": "."
  },
  {
    "ques": "Fill in the blank: _____ removes whitespace.",
    "quesType": "fill",
    "ans": "trim()"
  },
  {
    "ques": "Fill in the blank: _____ finds substring position.",
    "quesType": "fill",
    "ans": "strpos()"
  },
  {
    "ques": "Fill in the blank: _____ splits string.",
    "quesType": "fill",
    "ans": "explode()"
  },
  {
    "ques": "Fill in the blank: _____ joins array elements.",
    "quesType": "fill",
    "ans": "implode()"
  },
  {
    "ques": "Fill in the blank: _____ sorts arrays.",
    "quesType": "fill",
    "ans": "sort()"
  },
  {
    "ques": "Fill in the blank: _____ counts array elements.",
    "quesType": "fill",
    "ans": "count()"
  },
  {
    "ques": "Fill in the blank: _____ is conditional operator.",
    "quesType": "fill",
    "ans": "? :"
  },
  {
    "ques": "Fill in the blank: _____ converts to lowercase.",
    "quesType": "fill",
    "ans": "strtolower()"
  },
  {
    "ques": "Fill in the blank: _____ converts to uppercase.",
    "quesType": "fill",
    "ans": "strtoupper()"
  },
  {
    "ques": "Fill in the blank: _____ replaces text.",
    "quesType": "fill",
    "ans": "str_replace()"
  },
  {
    "ques": "Fill in the blank: _____ gets variable type.",
    "quesType": "fill",
    "ans": "gettype()"
  },
  {
    "ques": "Fill in the blank: _____ holds URL parameters.",
    "quesType": "fill",
    "ans": "$_GET"
  },
  {
    "ques": "Fill in the blank: _____ is used for comments.",
    "quesType": "fill",
    "ans": "//"
  },
  {
    "ques": "Fill in the blank: _____ merges arrays.",
    "quesType": "fill",
    "ans": "array_merge()"
  },
  {
    "ques": "Which function starts a session in PHP?",
    "quesType": "mcq",
    "op1": "session_create()",
    "op2": "start_session()",
    "op3": "session_start()",
    "op4": "begin_session()",
    "ans": "session_start()"
  },
  {
    "ques": "Which symbol is used to suppress errors?",
    "quesType": "mcq",
    "op1": "*",
    "op2": "&",
    "op3": "@",
    "op4": "#",
    "ans": "@"
  },
  {
    "ques": "Which function checks if a file exists?",
    "quesType": "mcq",
    "op1": "file_exists()",
    "op2": "file_check()",
    "op3": "exists()",
    "op4": "file_is()",
    "ans": "file_exists()"
  },
  {
    "ques": "Which function reads a file line by line?",
    "quesType": "mcq",
    "op1": "readfile()",
    "op2": "fgets()",
    "op3": "file_get()",
    "op4": "getline()",
    "ans": "fgets()"
  },
  {
    "ques": "Which function writes to a file?",
    "quesType": "mcq",
    "op1": "fputs()",
    "op2": "fwrite()",
    "op3": "writefile()",
    "op4": "write()",
    "ans": "fwrite()"
  },
  {
    "ques": "What does PHP stand for?",
    "quesType": "mcq",
    "op1": "Private Home Page",
    "op2": "Personal Hypertext Processor",
    "op3": "PHP: Hypertext Preprocessor",
    "op4": "Programming Hypertext Processor",
    "ans": "PHP: Hypertext Preprocessor"
  },
  {
    "ques": "Which function ends script execution?",
    "quesType": "mcq",
    "op1": "stop()",
    "op2": "exit()",
    "op3": "die()",
    "op4": "Both exit() and die()",
    "ans": "Both exit() and die()"
  },
  {
    "ques": "Which version of PHP introduced namespaces?",
    "quesType": "mcq",
    "op1": "4.0",
    "op2": "5.0",
    "op3": "5.3",
    "op4": "7.0",
    "ans": "5.3"
  },
  {
    "ques": "Which function sends mail?",
    "quesType": "mcq",
    "op1": "send_mail()",
    "op2": "mail()",
    "op3": "email()",
    "op4": "post()",
    "ans": "mail()"
  },
  {
    "ques": "Which function gets client IP?",
    "quesType": "mcq",
    "op1": "$_SERVER['REMOTE_IP']",
    "op2": "$_SERVER['IP']",
    "op3": "$_SERVER['REMOTE_ADDR']",
    "op4": "$_SERVER['CLIENT_IP']",
    "ans": "$_SERVER['REMOTE_ADDR']"
  },
  {
    "ques": "Which function encrypts passwords?",
    "quesType": "mcq",
    "op1": "encrypt()",
    "op2": "md5()",
    "op3": "sha1()",
    "op4": "password_hash()",
    "ans": "password_hash()"
  },
  {
    "ques": "Which operator checks identity?",
    "quesType": "mcq",
    "op1": "==",
    "op2": "===",
    "op3": "!=",
    "op4": "!==",
    "ans": "==="
  },
  {
    "ques": "Which function opens a file?",
    "quesType": "mcq",
    "op1": "fopen()",
    "op2": "file_open()",
    "op3": "openfile()",
    "op4": "open()",
    "ans": "fopen()"
  },
  {
    "ques": "Which function closes a file?",
    "quesType": "mcq",
    "op1": "file_close()",
    "op2": "closefile()",
    "op3": "fclose()",
    "op4": "close()",
    "ans": "fclose()"
  },
  {
    "ques": "Which function reads entire file?",
    "quesType": "mcq",
    "op1": "file_get_contents()",
    "op2": "getfile()",
    "op3": "readfile()",
    "op4": "read()",
    "ans": "file_get_contents()"
  },
  {
    "ques": "Which function deletes a file?",
    "quesType": "mcq",
    "op1": "delete()",
    "op2": "remove()",
    "op3": "unlink()",
    "op4": "file_delete()",
    "ans": "unlink()"
  },
  {
    "ques": "Which keyword is used to define a class?",
    "quesType": "mcq",
    "op1": "function",
    "op2": "class",
    "op3": "object",
    "op4": "struct",
    "ans": "class"
  },
  {
    "ques": "Which keyword creates object?",
    "quesType": "mcq",
    "op1": "object",
    "op2": "create",
    "op3": "new",
    "op4": "instance",
    "ans": "new"
  },
  {
    "ques": "Which keyword refers to current object?",
    "quesType": "mcq",
    "op1": "self",
    "op2": "this",
    "op3": "object",
    "op4": "me",
    "ans": "this"
  },
  {
    "ques": "Which superglobal handles file uploads?",
    "quesType": "mcq",
    "op1": "$_FILES",
    "op2": "$_POST",
    "op3": "$_REQUEST",
    "op4": "$_UPLOAD",
    "ans": "$_FILES"
  },
  {
    "ques": "Fill in the blank: _____ starts a session.",
    "quesType": "fill",
    "ans": "session_start()"
  },
  {
    "ques": "Fill in the blank: _____ suppresses errors.",
    "quesType": "fill",
    "ans": "@"
  },
  {
    "ques": "Fill in the blank: _____ checks file existence.",
    "quesType": "fill",
    "ans": "file_exists()"
  },
  {
    "ques": "Fill in the blank: _____ reads file line.",
    "quesType": "fill",
    "ans": "fgets()"
  },
  {
    "ques": "Fill in the blank: _____ writes to file.",
    "quesType": "fill",
    "ans": "fwrite()"
  },
  {
    "ques": "Fill in the blank: PHP means _____.",
    "quesType": "fill",
    "ans": "PHP: Hypertext Preprocessor"
  },
  {
    "ques": "Fill in the blank: _____ ends script.",
    "quesType": "fill",
    "ans": "exit()"
  },
  {
    "ques": "Fill in the blank: _____ introduced namespaces.",
    "quesType": "fill",
    "ans": "5.3"
  },
  {
    "ques": "Fill in the blank: _____ sends email.",
    "quesType": "fill",
    "ans": "mail()"
  },
  {
    "ques": "Fill in the blank: _____ gets client IP.",
    "quesType": "fill",
    "ans": "$_SERVER['REMOTE_ADDR']"
  },
  {
    "ques": "Fill in the blank: _____ encrypts password.",
    "quesType": "fill",
    "ans": "password_hash()"
  },
  {
    "ques": "Fill in the blank: _____ checks identity.",
    "quesType": "fill",
    "ans": "==="
  },
  {
    "ques": "Fill in the blank: _____ opens file.",
    "quesType": "fill",
    "ans": "fopen()"
  },
  {
    "ques": "Fill in the blank: _____ closes file.",
    "quesType": "fill",
    "ans": "fclose()"
  },
  {
    "ques": "Fill in the blank: _____ reads file.",
    "quesType": "fill",
    "ans": "file_get_contents()"
  },
  {
    "ques": "Fill in the blank: _____ deletes file.",
    "quesType": "fill",
    "ans": "unlink()"
  },
  {
    "ques": "Fill in the blank: _____ defines class.",
    "quesType": "fill",
    "ans": "class"
  },
  {
    "ques": "Fill in the blank: _____ creates object.",
    "quesType": "fill",
    "ans": "new"
  },
  {
    "ques": "Fill in the blank: _____ refers to object.",
    "quesType": "fill",
    "ans": "this"
  },
  {
    "ques": "Fill in the blank: _____ handles uploads.",
    "quesType": "fill",
    "ans": "$_FILES"
  },
  {
    "ques": "Which function checks variable type?",
    "quesType": "mcq",
    "op1": "gettype()",
    "op2": "checktype()",
    "op3": "var_type()",
    "op4": "type()",
    "ans": "gettype()"
  },
  {
    "ques": "Which function checks if variable is empty?",
    "quesType": "mcq",
    "op1": "empty()",
    "op2": "is_null()",
    "op3": "isset()",
    "op4": "null()",
    "ans": "empty()"
  },
  {
    "ques": "Which function checks if variable is set?",
    "quesType": "mcq",
    "op1": "set()",
    "op2": "isset()",
    "op3": "empty()",
    "op4": "defined()",
    "ans": "isset()"
  },
  {
    "ques": "Which keyword declares constant?",
    "quesType": "mcq",
    "op1": "define",
    "op2": "const",
    "op3": "constant",
    "op4": "static",
    "ans": "define"
  },
  {
    "ques": "Which function includes file?",
    "quesType": "mcq",
    "op1": "include()",
    "op2": "require()",
    "op3": "import()",
    "op4": "Both include() and require()",
    "ans": "Both include() and require()"
  },
  {
    "ques": "Which function ends array?",
    "quesType": "mcq",
    "op1": "last()",
    "op2": "end()",
    "op3": "array_end()",
    "op4": "finish()",
    "ans": "end()"
  },
  {
    "ques": "Which function sorts array ascending?",
    "quesType": "mcq",
    "op1": "asort()",
    "op2": "sort()",
    "op3": "ksort()",
    "op4": "rsort()",
    "ans": "sort()"
  },
  {
    "ques": "Which function sorts array descending?",
    "quesType": "mcq",
    "op1": "sort()",
    "op2": "ksort()",
    "op3": "rsort()",
    "op4": "arsort()",
    "ans": "rsort()"
  },
  {
    "ques": "Which function counts array elements?",
    "quesType": "mcq",
    "op1": "size()",
    "op2": "count()",
    "op3": "length()",
    "op4": "num()",
    "ans": "count()"
  },
  {
    "ques": "Which function merges arrays?",
    "quesType": "mcq",
    "op1": "array_combine()",
    "op2": "array_merge()",
    "op3": "merge_array()",
    "op4": "combine_array()",
    "ans": "array_merge()"
  },
  {
    "ques": "Which keyword creates interface?",
    "quesType": "mcq",
    "op1": "abstract",
    "op2": "interface",
    "op3": "trait",
    "op4": "class",
    "ans": "interface"
  },
  {
    "ques": "Which keyword creates trait?",
    "quesType": "mcq",
    "op1": "class",
    "op2": "interface",
    "op3": "trait",
    "op4": "module",
    "ans": "trait"
  },
  {
    "ques": "Which keyword uses trait?",
    "quesType": "mcq",
    "op1": "use",
    "op2": "trait",
    "op3": "with",
    "op4": "extend",
    "ans": "use"
  },
  {
    "ques": "Which keyword calls parent constructor?",
    "quesType": "mcq",
    "op1": "base()",
    "op2": "parent::__construct()",
    "op3": "this::__construct()",
    "op4": "super()",
    "ans": "parent::__construct()"
  },
  {
    "ques": "Which operator concatenates strings?",
    "quesType": "mcq",
    "op1": "+",
    "op2": ".",
    "op3": "&",
    "op4": "*",
    "ans": "."
  },
  {
    "ques": "Which keyword creates loop?",
    "quesType": "mcq",
    "op1": "loop",
    "op2": "for",
    "op3": "do",
    "op4": "while",
    "ans": "for"
  },
  {
    "ques": "Which keyword checks condition?",
    "quesType": "mcq",
    "op1": "check",
    "op2": "verify",
    "op3": "if",
    "op4": "else",
    "ans": "if"
  },
  {
    "ques": "Which symbol denotes variable?",
    "quesType": "mcq",
    "op1": "#",
    "op2": "$",
    "op3": "&",
    "op4": "%",
    "ans": "$"
  },
  {
    "ques": "Which keyword defines function?",
    "quesType": "mcq",
    "op1": "def",
    "op2": "function",
    "op3": "func",
    "op4": "method",
    "ans": "function"
  },
  {
    "ques": "Which extension is PHP file?",
    "quesType": "mcq",
    "op1": ".php",
    "op2": ".ph",
    "op3": ".pp",
    "op4": ".html",
    "ans": ".php"
  },
  {
    "ques": "Fill: _____ checks type.",
    "quesType": "fill",
    "ans": "gettype()"
  },
  {
    "ques": "Fill: _____ checks empty.",
    "quesType": "fill",
    "ans": "empty()"
  },
  {
    "ques": "Fill: _____ checks set.",
    "quesType": "fill",
    "ans": "isset()"
  },
  {
    "ques": "Fill: _____ declares constant.",
    "quesType": "fill",
    "ans": "define"
  },
  {
    "ques": "Fill: _____ includes file.",
    "quesType": "fill",
    "ans": "include()"
  },
  {
    "ques": "Fill: _____ ends array.",
    "quesType": "fill",
    "ans": "end()"
  },
  {
    "ques": "Fill: _____ sorts array asc.",
    "quesType": "fill",
    "ans": "sort()"
  },
  {
    "ques": "Fill: _____ sorts array desc.",
    "quesType": "fill",
    "ans": "rsort()"
  },
  {
    "ques": "Fill: _____ counts array.",
    "quesType": "fill",
    "ans": "count()"
  },
  {
    "ques": "Fill: _____ merges arrays.",
    "quesType": "fill",
    "ans": "array_merge()"
  },
  {
    "ques": "Fill: _____ creates interface.",
    "quesType": "fill",
    "ans": "interface"
  },
  {
    "ques": "Fill: _____ creates trait.",
    "quesType": "fill",
    "ans": "trait"
  },
  {
    "ques": "Fill: _____ uses trait.",
    "quesType": "fill",
    "ans": "use"
  },
  {
    "ques": "Fill: _____ parent constructor.",
    "quesType": "fill",
    "ans": "parent::__construct()"
  },
  {
    "ques": "Fill: _____ concatenates strings.",
    "quesType": "fill",
    "ans": "."
  },
  {
    "ques": "Fill: _____ creates loop.",
    "quesType": "fill",
    "ans": "for"
  },
  {
    "ques": "Fill: _____ checks condition.",
    "quesType": "fill",
    "ans": "if"
  },
  {
    "ques": "Fill: _____ variable symbol.",
    "quesType": "fill",
    "ans": "$"
  },
  {
    "ques": "Fill: _____ defines function.",
    "quesType": "fill",
    "ans": "function"
  },
  {
    "ques": "Fill: _____ is PHP file ext.",
    "quesType": "fill",
    "ans": ".php"
  },
   {
    "ques": "Which tag starts PHP code?",
    "quesType": "mcq",
    "op1": "<?php",
    "op2": "<php>",
    "op3": "<?",
    "op4": "<!php>",
    "ans": "<?php"
  },
  {
    "ques": "Which function checks if file exists?",
    "quesType": "mcq",
    "op1": "is_file()",
    "op2": "file_exists()",
    "op3": "exists()",
    "op4": "check_file()",
    "ans": "file_exists()"
  },
  {
    "ques": "Which function reads file contents?",
    "quesType": "mcq",
    "op1": "readfile()",
    "op2": "fopen()",
    "op3": "file_get_contents()",
    "op4": "get_file()",
    "ans": "file_get_contents()"
  },
  {
    "ques": "Which function writes to file?",
    "quesType": "mcq",
    "op1": "writefile()",
    "op2": "fwrite()",
    "op3": "file_write()",
    "op4": "savefile()",
    "ans": "fwrite()"
  },
  {
    "ques": "Which function opens file?",
    "quesType": "mcq",
    "op1": "fopen()",
    "op2": "file_open()",
    "op3": "open()",
    "op4": "file()",
    "ans": "fopen()"
  },
  {
    "ques": "Which superglobal holds form data?",
    "quesType": "mcq",
    "op1": "$_POST",
    "op2": "$_GET",
    "op3": "$_REQUEST",
    "op4": "$_FORM",
    "ans": "$_POST"
  },
  {
    "ques": "Which operator checks identity?",
    "quesType": "mcq",
    "op1": "===",
    "op2": "==",
    "op3": "!=",
    "op4": "=",
    "ans": "==="
  },
  {
    "ques": "Which operator checks inequality?",
    "quesType": "mcq",
    "op1": "!=",
    "op2": "==",
    "op3": "===",
    "op4": "=",
    "ans": "!="
  },
  {
    "ques": "Which keyword breaks loop?",
    "quesType": "mcq",
    "op1": "stop",
    "op2": "exit",
    "op3": "break",
    "op4": "end",
    "ans": "break"
  },
  {
    "ques": "Which keyword skips iteration?",
    "quesType": "mcq",
    "op1": "skip",
    "op2": "continue",
    "op3": "next",
    "op4": "break",
    "ans": "continue"
  },
  {
    "ques": "Which function returns string length?",
    "quesType": "mcq",
    "op1": "strlen()",
    "op2": "strlength()",
    "op3": "length()",
    "op4": "str_size()",
    "ans": "strlen()"
  },
  {
    "ques": "Which function replaces string?",
    "quesType": "mcq",
    "op1": "str_change()",
    "op2": "replace()",
    "op3": "str_replace()",
    "op4": "change_str()",
    "ans": "str_replace()"
  },
  {
    "ques": "Which function converts string to array?",
    "quesType": "mcq",
    "op1": "explode()",
    "op2": "implode()",
    "op3": "split()",
    "op4": "break()",
    "ans": "explode()"
  },
  {
    "ques": "Which function converts array to string?",
    "quesType": "mcq",
    "op1": "implode()",
    "op2": "explode()",
    "op3": "join()",
    "op4": "concat()",
    "ans": "implode()"
  },
  {
    "ques": "Which function removes whitespace?",
    "quesType": "mcq",
    "op1": "trim()",
    "op2": "cut()",
    "op3": "strip()",
    "op4": "clear()",
    "ans": "trim()"
  },
  {
    "ques": "Which keyword defines class?",
    "quesType": "mcq",
    "op1": "class",
    "op2": "object",
    "op3": "new",
    "op4": "define",
    "ans": "class"
  },
  {
    "ques": "Which symbol denotes comment?",
    "quesType": "mcq",
    "op1": "//",
    "op2": "#",
    "op3": "/* */",
    "op4": "All of these",
    "ans": "All of these"
  },
  {
    "ques": "Which symbol accesses property?",
    "quesType": "mcq",
    "op1": ".",
    "op2": "->",
    "op3": "::",
    "op4": ":",
    "ans": "->"
  },
  {
    "ques": "Which keyword extends class?",
    "quesType": "mcq",
    "op1": "extend",
    "op2": "extends",
    "op3": "inherit",
    "op4": "use",
    "ans": "extends"
  },
  {
    "ques": "Which function destroys session?",
    "quesType": "mcq",
    "op1": "session_end()",
    "op2": "session_destroy()",
    "op3": "destroy_session()",
    "op4": "end_session()",
    "ans": "session_destroy()"
  },
  {
    "ques": "Which function starts session?",
    "quesType": "mcq",
    "op1": "session_open()",
    "op2": "session_start()",
    "op3": "start_session()",
    "op4": "session()",
    "ans": "session_start()"
  },
  {
    "ques": "Which superglobal holds session?",
    "quesType": "mcq",
    "op1": "$_SESSION",
    "op2": "$_POST",
    "op3": "$_GET",
    "op4": "$_COOKIE",
    "ans": "$_SESSION"
  },
  {
    "ques": "Which superglobal holds cookies?",
    "quesType": "mcq",
    "op1": "$_COOKIES",
    "op2": "$_COOKIE",
    "op3": "$_SESSION",
    "op4": "$_POST",
    "ans": "$_COOKIE"
  },
  {
    "ques": "Which keyword returns value?",
    "quesType": "mcq",
    "op1": "output",
    "op2": "return",
    "op3": "echo",
    "op4": "print",
    "ans": "return"
  },
  {
    "ques": "Which function stops script?",
    "quesType": "mcq",
    "op1": "stop()",
    "op2": "die()",
    "op3": "end()",
    "op4": "break()",
    "ans": "die()"
  },
  {
    "ques": "Which symbol for static method?",
    "quesType": "mcq",
    "op1": "::",
    "op2": "->",
    "op3": ".",
    "op4": "$",
    "ans": "::"
  },
  {
    "ques": "Which function includes file once?",
    "quesType": "mcq",
    "op1": "include()",
    "op2": "require()",
    "op3": "include_once()",
    "op4": "require_once()",
    "ans": "include_once()"
  },
  {
    "ques": "Which error level stops script?",
    "quesType": "mcq",
    "op1": "Notice",
    "op2": "Warning",
    "op3": "Error",
    "op4": "Fatal Error",
    "ans": "Fatal Error"
  },
  {
    "ques": "Which keyword catches exception?",
    "quesType": "mcq",
    "op1": "catch",
    "op2": "try",
    "op3": "throw",
    "op4": "handle",
    "ans": "catch"
  }
]
let codingphp2Arr=[
  {
    "ques": "What is the output?<br><br>```php<br>$x = 5;<br>$y = ++$x * $x++ + --$x;<br>echo $y;<br>```",
    "quesType": "mcq",
    "op1": "41",
    "op2": "40",
    "op3": "39",
    "op4": "42",
    "ans": "41"
  },
  {
    "ques": "What does this print?<br><br>```php<br>$a = \"Hello\";<br>$b = \"Hello\";<br>echo $a === $b ? \"Yes\" : \"No\";<br>```",
    "quesType": "mcq",
    "op1": "Yes",
    "op2": "No",
    "op3": "Error",
    "op4": "0",
    "ans": "Yes"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$x = 10;<br>$y = \"10\";<br>echo ($x == $y) ? \"A\" : \"B\";<br>```",
    "quesType": "mcq",
    "op1": "A",
    "op2": "B",
    "op3": "Error",
    "op4": "0",
    "ans": "A"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>$x = 0;<br>if ($x) { echo \"True\"; } else { echo \"False\"; }<br>```",
    "quesType": "mcq",
    "op1": "True",
    "op2": "False",
    "op3": "Error",
    "op4": "0",
    "ans": "False"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$arr = [1,2,3];<br>echo count($arr);<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "4",
    "op4": "1",
    "ans": "3"
  },
  {
    "ques": "Which value is printed?<br><br>```php<br>$x = \"5 cats\";<br>$y = 2;<br>echo $x + $y;<br>```",
    "quesType": "mcq",
    "op1": "7",
    "op2": "5",
    "op3": "2",
    "op4": "Error",
    "ans": "7"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$x = \"5\";<br>$y = 5;<br>echo ($x === $y) ? \"Same\" : \"Different\";<br>```",
    "quesType": "mcq",
    "op1": "Same",
    "op2": "Different",
    "op3": "Error",
    "op4": "0",
    "ans": "Different"
  },
  {
    "ques": "What does this output?<br><br>```php<br>$x = \"5.5\";<br>$y = 5;<br>echo $x + $y;<br>```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "10.5",
    "op3": "Error",
    "op4": "5.5",
    "ans": "10.5"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$a = [\"key\" => \"value\"];<br>echo $a[\"key\"];<br>```",
    "quesType": "mcq",
    "op1": "value",
    "op2": "key",
    "op3": "Error",
    "op4": "null",
    "ans": "value"
  },
  {
    "ques": "What does this print?<br><br>```php<br>$x = \"Hello\";<br>$x[0] = \"Y\";<br>echo $x;<br>```",
    "quesType": "mcq",
    "op1": "Yello",
    "op2": "Hello",
    "op3": "Error",
    "op4": "Y",
    "ans": "Yello"
  },
  {
    "ques": "Which is correct output?<br><br>```php<br>$x = null;<br>echo isset($x) ? \"Yes\" : \"No\";<br>```",
    "quesType": "mcq",
    "op1": "Yes",
    "op2": "No",
    "op3": "Error",
    "op4": "null",
    "ans": "No"
  },
  {
    "ques": "What is the output?<br><br>```php<br>define(\"PI\", 3.14);<br>echo PI;<br>```",
    "quesType": "mcq",
    "op1": "3.14",
    "op2": "Error",
    "op3": "PI",
    "op4": "0",
    "ans": "3.14"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>$x = 10;<br>$x .= \"20\";<br>echo $x;<br>```",
    "quesType": "mcq",
    "op1": "30",
    "op2": "1020",
    "op3": "Error",
    "op4": "10",
    "ans": "1020"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$x = [1,2,3];<br>unset($x[1]);<br>echo count($x);<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "1",
    "op4": "0",
    "ans": "2"
  },
  {
    "ques": "What does this print?<br><br>```php<br>echo strlen(\"PHP\");<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "4",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$x = 5;<br>$y = &$x;<br>$y = 10;<br>echo $x;<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "10",
    "op3": "0",
    "op4": "Error",
    "ans": "10"
  },
  {
    "ques": "What does this output?<br><br>```php<br>echo 5 <=> 5;<br>```",
    "quesType": "mcq",
    "op1": "-1",
    "op2": "0",
    "op3": "1",
    "op4": "Error",
    "ans": "0"
  },
  {
    "ques": "What is the output?<br><br>```php<br>echo (true ? \"Yes\" : \"No\");<br>```",
    "quesType": "mcq",
    "op1": "Yes",
    "op2": "No",
    "op3": "Error",
    "op4": "0",
    "ans": "Yes"
  },
  {
    "ques": "What will be printed?<br><br>```php<br>$x = [\"a\" => 1, \"b\" => 2];<br>echo array_key_exists(\"a\", $x) ? \"Yes\" : \"No\";<br>```",
    "quesType": "mcq",
    "op1": "Yes",
    "op2": "No",
    "op3": "Error",
    "op4": "1",
    "ans": "Yes"
  },
  {
    "ques": "What does this output?<br><br>```php<br>echo gettype(123);<br>```",
    "quesType": "mcq",
    "op1": "integer",
    "op2": "string",
    "op3": "float",
    "op4": "number",
    "ans": "integer"
  },
  {
    "ques": "```php\n$var = \"PHP\";\necho strtolower($var);\n```",
    "quesType": "fill",
    "ans": "php"
  },
  {
    "ques": "```php\n$nums = [1,2,3];\necho array_sum($nums);\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```php\necho strlen(\"Hello\");\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```php\n$x = 2;\n$x **= 3;\necho $x;\n```",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "```php\necho round(3.6);\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```php\necho abs(-5);\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```php\necho str_replace(\"a\", \"o\", \"cat\");\n```",
    "quesType": "fill",
    "ans": "cot"
  },
  {
    "ques": "```php\n$x = \"abc\";\necho strtoupper($x);\n```",
    "quesType": "fill",
    "ans": "ABC"
  },
  {
    "ques": "```php\n$x = 4;\n$y = 2;\necho $x / $y;\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```php\n$arr = [\"x\" => 1, \"y\" => 2];\necho $arr[\"y\"];\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```php\necho date(\"Y\", strtotime(\"2025-07-03\"));\n```",
    "quesType": "fill",
    "ans": "2025"
  },
  {
    "ques": "```php\n$x = \"Hello\";\necho $x[1];\n```",
    "quesType": "fill",
    "ans": "e"
  },
  {
    "ques": "```php\n$x = 3;\n$y = 4;\necho $x * $y;\n```",
    "quesType": "fill",
    "ans": "12"
  },
  {
    "ques": "```php\n$x = \"  PHP  \";\necho trim($x);\n```",
    "quesType": "fill",
    "ans": "PHP"
  },
  {
    "ques": "```php\n$arr = [\"one\", \"two\"];\necho implode(\",\", $arr);\n```",
    "quesType": "fill",
    "ans": "one,two"
  },
  {
    "ques": "```php\necho max(1, 5, 3);\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```php\necho min(2, 1, 0);\n```",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "```php\n$x = \"5\" + 5;\necho $x;\n```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "```php\necho substr(\"Hello\", 1, 3);\n```",
    "quesType": "fill",
    "ans": "ell"
  },
  {
    "ques": "```php\necho floor(4.9);\n```",
    "quesType": "fill",
    "ans": "4"
  },
   {
    "ques": "What does this output?<br><br>```php<br>echo 5 + \"5 days\";<br>```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "5",
    "op3": "Error",
    "op4": "5 days",
    "ans": "10"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$x = \"abc\";<br>echo isset($x) ? \"Yes\" : \"No\";<br>```",
    "quesType": "mcq",
    "op1": "Yes",
    "op2": "No",
    "op3": "Error",
    "op4": "abc",
    "ans": "Yes"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>$x = \"123\";<br>echo is_numeric($x) ? \"Yes\" : \"No\";<br>```",
    "quesType": "mcq",
    "op1": "Yes",
    "op2": "No",
    "op3": "123",
    "op4": "Error",
    "ans": "Yes"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$x = \"5.5 cats\";<br>echo (int)$x;<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "5.5",
    "op3": "0",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "What does this print?<br><br>```php<br>$x = 0;<br>echo empty($x) ? \"Empty\" : \"Not Empty\";<br>```",
    "quesType": "mcq",
    "op1": "Empty",
    "op2": "Not Empty",
    "op3": "0",
    "op4": "Error",
    "ans": "Empty"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$x = array(1,2,3);<br>echo $x[2];<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "Error",
    "ans": "3"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>$x = \"abc\";<br>echo strrev($x);<br>```",
    "quesType": "mcq",
    "op1": "cba",
    "op2": "abc",
    "op3": "bac",
    "op4": "Error",
    "ans": "cba"
  },
  {
    "ques": "What is the output?<br><br>```php<br>echo sqrt(16);<br>```",
    "quesType": "mcq",
    "op1": "4",
    "op2": "8",
    "op3": "2",
    "op4": "16",
    "ans": "4"
  },
  {
    "ques": "What will this echo?<br><br>```php<br>$x = \"php\";<br>$y = strtoupper($x);<br>echo $y;<br>```",
    "quesType": "mcq",
    "op1": "php",
    "op2": "PHP",
    "op3": "Php",
    "op4": "error",
    "ans": "PHP"
  },
  {
    "ques": "What does this print?<br><br>```php<br>$x = [\"a\" => 1, \"b\" => 2];<br>echo in_array(2, $x) ? \"Yes\" : \"No\";<br>```",
    "quesType": "mcq",
    "op1": "Yes",
    "op2": "No",
    "op3": "Error",
    "op4": "2",
    "ans": "Yes"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$x = \"abc\";<br>echo strpos($x, \"b\");<br>```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "2",
    "op4": "Error",
    "ans": "1"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>$x = [1,2,3];<br>array_push($x, 4);<br>echo end($x);<br>```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "4",
    "op3": "1",
    "op4": "Error",
    "ans": "4"
  },
  {
    "ques": "What is the output?<br><br>```php<br>echo pow(2, 3);<br>```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "8",
    "op3": "9",
    "op4": "2",
    "ans": "8"
  },
  {
    "ques": "What does this output?<br><br>```php<br>$x = \"php\";<br>echo ucfirst($x);<br>```",
    "quesType": "mcq",
    "op1": "php",
    "op2": "Php",
    "op3": "PHP",
    "op4": "error",
    "ans": "Php"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$x = \"Test\";<br>echo str_repeat($x, 2);<br>```",
    "quesType": "mcq",
    "op1": "Test",
    "op2": "TestTest",
    "op3": "error",
    "op4": "2",
    "ans": "TestTest"
  },
  {
    "ques": "What will this echo?<br><br>```php<br>echo floor(2.9);<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "2.9",
    "op4": "Error",
    "ans": "2"
  },
  {
    "ques": "What does this print?<br><br>```php<br>$x = \"abc\";<br>echo substr($x, -1);<br>```",
    "quesType": "mcq",
    "op1": "a",
    "op2": "b",
    "op3": "c",
    "op4": "Error",
    "ans": "c"
  },
  {
    "ques": "What is the output?<br><br>```php<br>echo rand(1,1);<br>```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "Error",
    "op4": "Random",
    "ans": "1"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>echo strlen(1234);<br>```",
    "quesType": "mcq",
    "op1": "4",
    "op2": "1",
    "op3": "Error",
    "op4": "0",
    "ans": "4"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$a = [1,2];<br>$b = [2,3];<br>$c = array_merge($a, $b);<br>echo count($c);<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "4",
    "op4": "Error",
    "ans": "4"
  }
  ,
  {
    "ques": "```php\necho round(2.5);\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```php\n$x = \"Hello World\";\necho str_word_count($x);\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```php\n$x = \"hello\";\necho ucwords($x);\n```",
    "quesType": "fill",
    "ans": "Hello"
  },
  {
    "ques": "```php\n$x = [1,2,3];\necho $x[0];\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```php\n$x = \"test\";\necho md5($x);\n```",
    "quesType": "fill",
    "ans": "098f6bcd4621d373cade4e832627b4f6"
  },
  {
    "ques": "```php\n$x = 4.2;\necho ceil($x);\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```php\n$x = \"abc\";\necho ord($x);\n```",
    "quesType": "fill",
    "ans": "97"
  },
  {
    "ques": "```php\n$x = \"abc\";\necho chr(97);\n```",
    "quesType": "fill",
    "ans": "a"
  },
  {
    "ques": "```php\n$x = [1,2,3];\narray_pop($x);\necho count($x);\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```php\necho rand(1, 1);\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "What does this output?<br><br>```php<br>echo 2 * 3 + 4;<br>```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "14",
    "op3": "12",
    "op4": "8",
    "ans": "10"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$x = \"5 cats\";<br>echo (int)$x + 2;<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "2",
    "op3": "7",
    "op4": "Error",
    "ans": "7"
  },
  {
    "ques": "What will this echo?<br><br>```php<br>$x = \"123\";<br>echo gettype($x);<br>```",
    "quesType": "mcq",
    "op1": "integer",
    "op2": "string",
    "op3": "double",
    "op4": "array",
    "ans": "string"
  },
  {
    "ques": "What is printed?<br><br>```php<br>$x = 5;<br>$y = &$x;<br>$y = 10;<br>echo $x;<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "10",
    "op3": "0",
    "op4": "Error",
    "ans": "10"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>$a = 5;<br>$b = 10;<br>echo $a < $b ? \"Yes\" : \"No\";<br>```",
    "quesType": "mcq",
    "op1": "Yes",
    "op2": "No",
    "op3": "5",
    "op4": "10",
    "ans": "Yes"
  },
  {
    "ques": "What is the output?<br><br>```php<br>echo strlen(\"hello\");<br>```",
    "quesType": "mcq",
    "op1": "4",
    "op2": "5",
    "op3": "6",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>$x = [\"a\" => 1, \"b\" => 2];<br>echo count($x);<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "Error",
    "ans": "2"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$x = 10;<br>$y = $x++ + ++$x;<br>echo $y;<br>```",
    "quesType": "mcq",
    "op1": "21",
    "op2": "22",
    "op3": "23",
    "op4": "20",
    "ans": "22"
  },
  {
    "ques": "What will this echo?<br><br>```php<br>echo strtoupper(\"php\");<br>```",
    "quesType": "mcq",
    "op1": "php",
    "op2": "Php",
    "op3": "PHP",
    "op4": "error",
    "ans": "PHP"
  },
  {
    "ques": "What does this print?<br><br>```php<br>$s = \"abc\";<br>echo $s[1];<br>```",
    "quesType": "mcq",
    "op1": "a",
    "op2": "b",
    "op3": "c",
    "op4": "Error",
    "ans": "b"
  },
  {
    "ques": "What is the output?<br><br>```php<br>echo round(2.4);<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "2.4",
    "op4": "Error",
    "ans": "2"
  },
  {
    "ques": "What will this echo?<br><br>```php<br>echo abs(-7);<br>```",
    "quesType": "mcq",
    "op1": "-7",
    "op2": "7",
    "op3": "0",
    "op4": "Error",
    "ans": "7"
  },
  {
    "ques": "What does this print?<br><br>```php<br>echo max(1, 3, 2);<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "Error",
    "ans": "3"
  },
  {
    "ques": "What is the output?<br><br>```php<br>echo strpos(\"hello\", \"e\");<br>```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "2",
    "op4": "Error",
    "ans": "1"
  },
  {
    "ques": "What will this echo?<br><br>```php<br>echo str_repeat(\"x\", 3);<br>```",
    "quesType": "mcq",
    "op1": "x",
    "op2": "xx",
    "op3": "xxx",
    "op4": "Error",
    "ans": "xxx"
  },
  {
    "ques": "What does this output?<br><br>```php<br>$x = \"PHP\";<br>echo strtolower($x);<br>```",
    "quesType": "mcq",
    "op1": "php",
    "op2": "Php",
    "op3": "PHP",
    "op4": "error",
    "ans": "php"
  },
  {
    "ques": "What is the output?<br><br>```php<br>echo date(\"Y\", strtotime(\"2000-01-01\"));<br>```",
    "quesType": "mcq",
    "op1": "2000",
    "op2": "1900",
    "op3": "2024",
    "op4": "Error",
    "ans": "2000"
  },
  {
    "ques": "What will this echo?<br><br>```php<br>$x = \"abc\";<br>echo strrev($x);<br>```",
    "quesType": "mcq",
    "op1": "cba",
    "op2": "abc",
    "op3": "bac",
    "op4": "Error",
    "ans": "cba"
  },
  {
    "ques": "What does this output?<br><br>```php<br>$x = [1,2,3];<br>echo array_sum($x);<br>```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "5",
    "op3": "3",
    "op4": "Error",
    "ans": "6"
  },
  {
    "ques": "What is the output?<br><br>```php<br>echo trim(\" hello \");<br>```",
    "quesType": "mcq",
    "op1": " hello ",
    "op2": "hello",
    "op3": " hello",
    "op4": "Error",
    "ans": "hello"
  },
  {
    "ques": "```php\n$x = 5;\n$y = 3;\necho $x * $y;\n```",
    "quesType": "fill",
    "ans": "15"
  },
  {
    "ques": "```php\necho strlen(\"test\");\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```php\necho strtoupper(\"hello\");\n```",
    "quesType": "fill",
    "ans": "HELLO"
  },
  {
    "ques": "```php\n$x = [1, 2, 3];\necho $x[1];\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```php\necho substr(\"world\", 1, 3);\n```",
    "quesType": "fill",
    "ans": "orl"
  },
  {
    "ques": "```php\necho round(4.7);\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```php\necho abs(-10);\n```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "```php\necho min(4, 9, 2);\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```php\necho str_repeat(\"hi\", 2);\n```",
    "quesType": "fill",
    "ans": "hihi"
  },
  {
    "ques": "```php\necho str_replace(\"a\", \"@\", \"apple\");\n```",
    "quesType": "fill",
    "ans": "@pple"
  },
  {
    "ques": "```php\n$x = \"PHP\";\necho strtolower($x);\n```",
    "quesType": "fill",
    "ans": "php"
  },
  {
    "ques": "```php\necho ord(\"A\");\n```",
    "quesType": "fill",
    "ans": "65"
  },
  {
    "ques": "```php\necho chr(66);\n```",
    "quesType": "fill",
    "ans": "B"
  },
  {
    "ques": "```php\n$x = \" hello \";\necho trim($x);\n```",
    "quesType": "fill",
    "ans": "hello"
  },
  {
    "ques": "```php\n$x = [1,2];\narray_push($x, 3);\necho end($x);\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```php\necho date(\"Y\", strtotime(\"1999-12-31\"));\n```",
    "quesType": "fill",
    "ans": "1999"
  },
  {
    "ques": "```php\necho floor(5.9);\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```php\necho pow(2, 4);\n```",
    "quesType": "fill",
    "ans": "16"
  },
  {
    "ques": "```php\n$x = \"abcdef\";\necho strpos($x, \"d\");\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```php\n$x = \"abc\";\necho strrev($x);\n```",
    "quesType": "fill",
    "ans": "cba"
  },
  {
    "ques": "What does this output?<br><br>```php<br>class A {<br>  public $x = 5;<br>}<br>$a = new A();<br>echo $a->x;<br>```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "5",
    "op3": "Error",
    "op4": "null",
    "ans": "5"
  },
  {
    "ques": "What is the output?<br><br>```php<br>class A {<br>  function sayHi() {<br>    echo \"Hi\";<br>  }<br>}<br>$a = new A();<br>$a->sayHi();<br>```",
    "quesType": "mcq",
    "op1": "Hi",
    "op2": "Error",
    "op3": "sayHi",
    "op4": "null",
    "ans": "Hi"
  },
  {
    "ques": "What is printed?<br><br>```php<br>class A {<br>  public $x = 10;<br>  function show() {<br>    echo $this->x;<br>  }<br>}<br>$a = new A();<br>$a->show();<br>```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "0",
    "op3": "Error",
    "op4": "x",
    "ans": "10"
  },
  {
    "ques": "What is the output?<br><br>```php<br>class A {<br>  static $x = 5;<br>}<br>echo A::$x;<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "0",
    "op3": "Error",
    "op4": "null",
    "ans": "5"
  },
  {
    "ques": "What does this print?<br><br>```php<br>class A {<br>  const VALUE = \"PHP\";<br>}<br>echo A::VALUE;<br>```",
    "quesType": "mcq",
    "op1": "PHP",
    "op2": "Error",
    "op3": "VALUE",
    "op4": "null",
    "ans": "PHP"
  },
  {
    "ques": "What will this echo?<br><br>```php<br>class A {<br>  public $x;<br>  function __construct($n) {<br>    $this->x = $n;<br>  }<br>}<br>$a = new A(7);<br>echo $a->x;<br>```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "7",
    "op3": "Error",
    "op4": "null",
    "ans": "7"
  },
  {
    "ques": "What does this output?<br><br>```php<br>class A {<br>  function __destruct() {<br>    echo \"Bye\";<br>  }<br>}<br>$a = new A();<br>unset($a);<br>```",
    "quesType": "mcq",
    "op1": "Bye",
    "op2": "Hi",
    "op3": "Error",
    "op4": "null",
    "ans": "Bye"
  },
  {
    "ques": "What will be printed?<br><br>```php<br>class A {<br>  public function test() {<br>    echo \"A\";<br>  }<br>}<br>class B extends A {<br>}<br>$b = new B();<br>$b->test();<br>```",
    "quesType": "mcq",
    "op1": "A",
    "op2": "B",
    "op3": "Error",
    "op4": "null",
    "ans": "A"
  },
  {
    "ques": "What is printed?<br><br>```php<br>class A {<br>  protected $x = 5;<br>  function getX() {<br>    echo $this->x;<br>  }<br>}<br>$a = new A();<br>$a->getX();<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "Error",
    "op3": "0",
    "op4": "null",
    "ans": "5"
  },
  {
    "ques": "What does this output?<br><br>```php<br>interface I {<br>  function hi();<br>}<br>class A implements I {<br>  function hi() {<br>    echo \"Hello\";<br>  }<br>}<br>$a = new A();<br>$a->hi();<br>```",
    "quesType": "mcq",
    "op1": "Hello",
    "op2": "Hi",
    "op3": "Error",
    "op4": "null",
    "ans": "Hello"
  },
  {
    "ques": "What will be printed?<br><br>```php<br>trait T {<br>  function hi() {<br>    echo \"Hi\";<br>  }<br>}<br>class A {<br>  use T;<br>}<br>$a = new A();<br>$a->hi();<br>```",
    "quesType": "mcq",
    "op1": "Hi",
    "op2": "Hello",
    "op3": "Error",
    "op4": "null",
    "ans": "Hi"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>class A {<br>  private $x = 5;<br>  function getX() {<br>    echo $this->x;<br>  }<br>}<br>$a = new A();<br>$a->getX();<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "Error",
    "op3": "0",
    "op4": "null",
    "ans": "5"
  },
  {
    "ques": "What does this output?<br><br>```php<br>class A {<br>  public static function hi() {<br>    echo \"Static\";<br>  }<br>}<br>A::hi();<br>```",
    "quesType": "mcq",
    "op1": "Static",
    "op2": "Hi",
    "op3": "Error",
    "op4": "null",
    "ans": "Static"
  },
  {
    "ques": "What is the output?<br><br>```php<br>class A {<br>  final function hi() {<br>    echo \"Final\";<br>  }<br>}<br>$a = new A();<br>$a->hi();<br>```",
    "quesType": "mcq",
    "op1": "Final",
    "op2": "Hi",
    "op3": "Error",
    "op4": "null",
    "ans": "Final"
  },
  {
    "ques": "What will be printed?<br><br>```php<br>abstract class A {<br>  abstract function hi();<br>}<br>class B extends A {<br>  function hi() {<br>    echo \"Hello\";<br>  }<br>}<br>$b = new B();<br>$b->hi();<br>```",
    "quesType": "mcq",
    "op1": "Hello",
    "op2": "Hi",
    "op3": "Error",
    "op4": "null",
    "ans": "Hello"
  },
  {
    "ques": "What does this output?<br><br>```php<br>class A {<br>  function __construct() {<br>    echo \"New\";<br>  }<br>}<br>$a = new A();<br>```",
    "quesType": "mcq",
    "op1": "New",
    "op2": "Hi",
    "op3": "Error",
    "op4": "null",
    "ans": "New"
  },
  {
    "ques": "What is the output?<br><br>```php<br>class A {<br>  public function hi() {<br>    echo \"A\";<br>  }<br>}<br>class B extends A {<br>  public function hi() {<br>    echo \"B\";<br>  }<br>}<br>$b = new B();<br>$b->hi();<br>```",
    "quesType": "mcq",
    "op1": "A",
    "op2": "B",
    "op3": "Error",
    "op4": "null",
    "ans": "B"
  },
  {
    "ques": "What will this echo?<br><br>```php<br>class A {<br>  function __toString() {<br>    return \"String\";<br>  }<br>}<br>$a = new A();<br>echo $a;<br>```",
    "quesType": "mcq",
    "op1": "String",
    "op2": "Object",
    "op3": "Error",
    "op4": "null",
    "ans": "String"
  },
  {
    "ques": "What does this print?<br><br>```php<br>class A {<br>  function __clone() {<br>    echo \"Cloned\";<br>  }<br>}<br>$a = new A();<br>$b = clone $a;<br>```",
    "quesType": "mcq",
    "op1": "Cloned",
    "op2": "New",
    "op3": "Error",
    "op4": "null",
    "ans": "Cloned"
  },
   {
    "ques": "What is the output?<br><br>```php<br>class A {<br>  public $x = 5;<br>}<br>$a = new A();<br>echo $a->x;<br>```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "Output?<br><br>```php<br>class A {<br>  function hi() {<br>    echo \"Hi\";<br>  }<br>}<br>$a = new A();<br>$a->hi();<br>```",
    "quesType": "fill",
    "ans": "Hi"
  },
  {
    "ques": "Result?<br><br>```php<br>class A {<br>  static $x = 10;<br>}<br>echo A::$x;<br>```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>class A {<br>  const VALUE = \"Hello\";<br>}<br>echo A::VALUE;<br>```",
    "quesType": "fill",
    "ans": "Hello"
  },
  {
    "ques": "Output?<br><br>```php<br>class A {<br>  public $x;<br>  function __construct($n) {<br>    $this->x = $n;<br>  }<br>}<br>$a = new A(20);<br>echo $a->x;<br>```",
    "quesType": "fill",
    "ans": "20"
  },
  {
    "ques": "What will be printed?<br><br>```php<br>class A {<br>  function __destruct() {<br>    echo \"Bye\";<br>  }<br>}<br>$a = new A();<br>unset($a);<br>```",
    "quesType": "fill",
    "ans": "Bye"
  },
  {
    "ques": "Result of this code?<br><br>```php<br>class A {<br>  function say() {<br>    echo \"A\";<br>  }<br>}<br>class B extends A {<br>}<br>$b = new B();<br>$b->say();<br>```",
    "quesType": "fill",
    "ans": "A"
  },
  {
    "ques": "What is printed?<br><br>```php<br>class A {<br>  protected $x = 8;<br>  function get() {<br>    echo $this->x;<br>  }<br>}<br>$a = new A();<br>$a->get();<br>```",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>interface I {<br>  function hi();<br>}<br>class A implements I {<br>  function hi() {<br>    echo \"Interface\";<br>  }<br>}<br>$a = new A();<br>$a->hi();<br>```",
    "quesType": "fill",
    "ans": "Interface"
  },
  {
    "ques": "Output?<br><br>```php<br>trait T {<br>  function hi() {<br>    echo \"Trait\";<br>  }<br>}<br>class A {<br>  use T;<br>}<br>$a = new A();<br>$a->hi();<br>```",
    "quesType": "fill",
    "ans": "Trait"
  },
  {
    "ques": "What is the result?<br><br>```php<br>class A {<br>  private $x = 12;<br>  function getX() {<br>    echo $this->x;<br>  }<br>}<br>$a = new A();<br>$a->getX();<br>```",
    "quesType": "fill",
    "ans": "12"
  },
  {
    "ques": "What does this print?<br><br>```php<br>class A {<br>  public static function say() {<br>    echo \"StaticMethod\";<br>  }<br>}<br>A::say();<br>```",
    "quesType": "fill",
    "ans": "StaticMethod"
  },
  {
    "ques": "What is printed?<br><br>```php<br>class A {<br>  final function hi() {<br>    echo \"FinalMethod\";<br>  }<br>}<br>$a = new A();<br>$a->hi();<br>```",
    "quesType": "fill",
    "ans": "FinalMethod"
  },
  {
    "ques": "Result?<br><br>```php<br>abstract class A {<br>  abstract function hello();<br>}<br>class B extends A {<br>  function hello() {<br>    echo \"AbstractImpl\";<br>  }<br>}<br>$b = new B();<br>$b->hello();<br>```",
    "quesType": "fill",
    "ans": "AbstractImpl"
  },
  {
    "ques": "What does this print?<br><br>```php<br>class A {<br>  function __construct() {<br>    echo \"Constructed\";<br>  }<br>}<br>$a = new A();<br>```",
    "quesType": "fill",
    "ans": "Constructed"
  },
  {
    "ques": "Output?<br><br>```php<br>class A {<br>  function hi() {<br>    echo \"A\";<br>  }<br>}<br>class B extends A {<br>  function hi() {<br>    echo \"B\";<br>  }<br>}<br>$b = new B();<br>$b->hi();<br>```",
    "quesType": "fill",
    "ans": "B"
  },
  {
    "ques": "What is echoed?<br><br>```php<br>class A {<br>  function __toString() {<br>    return \"ToString\";<br>  }<br>}<br>$a = new A();<br>echo $a;<br>```",
    "quesType": "fill",
    "ans": "ToString"
  },
  {
    "ques": "Result of this code?<br><br>```php<br>class A {<br>  function __clone() {<br>    echo \"Cloning\";<br>  }<br>}<br>$a = new A();<br>$b = clone $a;<br>```",
    "quesType": "fill",
    "ans": "Cloning"
  },
  {
    "ques": "What will be printed?<br><br>```php<br>class A {<br>  public $x = 10;<br>  public function getX() {<br>    return $this->x;<br>  }<br>}<br>$a = new A();<br>echo $a->getX();<br>```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>class A {<br>  public $x = 10;<br>}<br>class B extends A {<br>  public $x = 20;<br>}<br>$b = new B();<br>echo $b->x;<br>```",
    "quesType": "fill",
    "ans": "20"
  },
  {
    "ques": "What is the output?<br><br>```php<br>for ($i = 0; $i < 3; $i++) {<br>  echo $i;<br>}<br>```",
    "quesType": "mcq",
    "op1": "012",
    "op2": "123",
    "op3": "0 1 2 ",
    "op4": "Error",
    "ans": "012"
  },
  {
    "ques": "What will this print?<br><br>```php<br>$x = 1;<br>while($x <= 3) {<br>  echo $x;<br>  $x++;<br>}<br>```",
    "quesType": "mcq",
    "op1": "123",
    "op2": "012",
    "op3": "0 1 2 3 ",
    "op4": "Error",
    "ans": "123"
  },
  {
    "ques": "What is printed?<br><br>```php<br>$i = 0;<br>do {<br>  echo $i;<br>  $i++;<br>} while ($i < 2);<br>```",
    "quesType": "mcq",
    "op1": "01",
    "op2": "012",
    "op3": "1",
    "op4": "0",
    "ans": "01"
  },
  {
    "ques": "What is the output?<br><br>```php<br>for($i = 1; $i <= 3; $i++) {<br>  if($i == 2) continue;<br>  echo $i;<br>}<br>```",
    "quesType": "mcq",
    "op1": "13",
    "op2": "123",
    "op3": "12",
    "op4": "23",
    "ans": "13"
  },
  {
    "ques": "What does this print?<br><br>```php<br>for($i = 0; $i < 5; $i++) {<br>  if($i == 3) break;<br>  echo $i;<br>}<br>```",
    "quesType": "mcq",
    "op1": "012",
    "op2": "0123",
    "op3": "123",
    "op4": "01",
    "ans": "012"
  },
  {
    "ques": "What is output?<br><br>```php<br>$sum = 0;<br>for($i = 1; $i <= 3; $i++) {<br>  $sum += $i;<br>}<br>echo $sum;<br>```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "5",
    "op3": "3",
    "op4": "0",
    "ans": "6"
  },
  {
    "ques": "What is printed?<br><br>```php<br>$arr = [1,2,3];<br>foreach($arr as $v) {<br>  echo $v;<br>}<br>```",
    "quesType": "mcq",
    "op1": "123",
    "op2": "321",
    "op3": "1 2 3 ",
    "op4": "12",
    "ans": "123"
  },
  {
    "ques": "What does this output?<br><br>```php<br>for($i=0;$i<2;$i++) {<br>  for($j=0;$j<2;$j++) {<br>    echo \"*\";<br>  }<br>}<br>```",
    "quesType": "mcq",
    "op1": "**",
    "op2": "****",
    "op3": "***",
    "op4": "**",
    "ans": "****"
  },
  {
    "ques": "What will this echo?<br><br>```php<br>$i = 0;<br>while($i++ < 2) {<br>  echo $i;<br>}<br>```",
    "quesType": "mcq",
    "op1": "12",
    "op2": "23",
    "op3": "01",
    "op4": "123",
    "ans": "12"
  },
  {
    "ques": "What is output?<br><br>```php<br>$i = 0;<br>do {<br>  echo $i;<br>} while($i++ < 1);<br>```",
    "quesType": "mcq",
    "op1": "01",
    "op2": "0",
    "op3": "1",
    "op4": "10",
    "ans": "01"
  },

  {
    "ques": "What will be printed?<br><br>```php<br>for($i = 0; $i < 3; $i++) {<br>  echo $i*2;<br>}<br>```",
    "quesType": "mcq",
    "op1": "024",
    "op2": "012",
    "op3": "246",
    "op4": "0246",
    "ans": "024"
  },
  {
    "ques": "What is printed?<br><br>```php<br>$arr = [\"a\",\"b\"];<br>foreach($arr as $v) {<br>  echo $v;<br>}<br>```",
    "quesType": "mcq",
    "op1": "ab",
    "op2": "ba",
    "op3": "a",
    "op4": "b",
    "ans": "ab"
  },
  {
    "ques": "What is the output?<br><br>```php<br>for($i = 1; $i <= 3; $i++) {<br>  for($j = 1; $j <= 1; $j++) {<br>    echo $i;<br>  }<br>}<br>```",
    "quesType": "mcq",
    "op1": "123",
    "op2": "321",
    "op3": "111",
    "op4": "222",
    "ans": "123"
  },
  {
    "ques": "What does this output?<br><br>```php<br>$i = 1;<br>while($i <= 2) {<br>  echo $i;<br>  $i++;<br>}<br>```",
    "quesType": "mcq",
    "op1": "12",
    "op2": "123",
    "op3": "21",
    "op4": "1",
    "ans": "12"
  },
  {
    "ques": "What will be printed?<br><br>```php<br>$x = 0;<br>while($x < 1) {<br>  echo $x;<br>  $x++;<br>}<br>```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "2",
    "op4": "01",
    "ans": "0"
  },

  {
    "ques": "What is the output?<br><br>```php<br>for($i = 2; $i <= 4; $i++) {<br>  echo $i;<br>}<br>```",
    "quesType": "mcq",
    "op1": "234",
    "op2": "1234",
    "op3": "12",
    "op4": "24",
    "ans": "234"
  },
  {
    "ques": "What is printed?<br><br>```php<br>$i = 0;<br>do {<br>  echo $i;<br>  $i++;<br>} while($i < 3);<br>```",
    "quesType": "mcq",
    "op1": "012",
    "op2": "123",
    "op3": "01",
    "op4": "12",
    "ans": "012"
  },
  {
    "ques": "What will be echoed?<br><br>```php<br>for($i = 0; $i < 4; $i += 2) {<br>  echo $i;<br>}<br>```",
    "quesType": "mcq",
    "op1": "02",
    "op2": "012",
    "op3": "24",
    "op4": "04",
    "ans": "02"
  },
  {
    "ques": "What is the output?<br><br>```php<br>for($i = 1; $i <= 2; $i++) {<br>  for($j = 1; $j <= 2; $j++) {<br>    echo $j;<br>  }<br>}<br>```",
    "quesType": "mcq",
    "op1": "1212",
    "op2": "1122",
    "op3": "1234",
    "op4": "12",
    "ans": "1212"
  },
  {
    "ques": "What does this output?<br><br>```php<br>$x = 3;<br>while($x > 1) {<br>  echo $x;<br>  $x--;<br>}<br>```",
    "quesType": "mcq",
    "op1": "32",
    "op2": "321",
    "op3": "23",
    "op4": "21",
    "ans": "32"
  },
   {
    "ques": "What is output?<br><br>```php<br>$i = 0;<br>while($i < 5) {<br>  if($i == 3) break;<br>  echo $i;<br>  $i++;<br>}<br>```",
    "quesType": "mcq",
    "op1": "012",
    "op2": "0123",
    "op3": "123",
    "op4": "01",
    "ans": "012"
  },
  {
    "ques": "What will this echo?<br><br>```php<br>for($i = 1; $i <= 3; $i++) {<br>  if($i % 2 == 0) echo $i;<br>}<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "1",
    "op3": "12",
    "op4": "23",
    "ans": "2"
  },
  {
    "ques": "What is printed?<br><br>```php<br>$arr = [\"x\", \"y\", \"z\"];<br>foreach($arr as $v) {<br>  if($v == \"y\") continue;<br>  echo $v;<br>}<br>```",
    "quesType": "mcq",
    "op1": "xz",
    "op2": "xyz",
    "op3": "xy",
    "op4": "yz",
    "ans": "xz"
  },
  {
    "ques": "Output?<br><br>```php<br>$i = 5;<br>while($i > 3) {<br>  echo $i;<br>  $i--;<br>}<br>```",
    "quesType": "mcq",
    "op1": "54",
    "op2": "543",
    "op3": "432",
    "op4": "32",
    "ans": "54"
  },
  {
    "ques": "What does this print?<br><br>```php<br>for($i = 1; $i < 4; $i++) {<br>  echo $i*2;<br>}<br>```",
    "quesType": "mcq",
    "op1": "246",
    "op2": "123",
    "op3": "135",
    "op4": "234",
    "ans": "246"
  },
  {
    "ques": "What will be printed?<br><br>```php<br>$i = 0;<br>do {<br>  echo ++$i;<br>} while($i < 2);<br>```",
    "quesType": "mcq",
    "op1": "12",
    "op2": "23",
    "op3": "01",
    "op4": "11",
    "ans": "12"
  },
  {
    "ques": "What is the output?<br><br>```php<br>for($i = 2; $i <= 6; $i += 2) {<br>  echo $i;<br>}<br>```",
    "quesType": "mcq",
    "op1": "246",
    "op2": "24",
    "op3": "26",
    "op4": "234",
    "ans": "246"
  },
  {
    "ques": "What is printed?<br><br>```php<br>$arr = [1,2,3,4];<br>foreach($arr as $v) {<br>  if($v > 2) break;<br>  echo $v;<br>}<br>```",
    "quesType": "mcq",
    "op1": "12",
    "op2": "123",
    "op3": "1",
    "op4": "2",
    "ans": "12"
  },
  {
    "ques": "What does this output?<br><br>```php<br>$i = 1;<br>while($i < 4) {<br>  echo $i;<br>  $i += 2;<br>}<br>```",
    "quesType": "mcq",
    "op1": "13",
    "op2": "12",
    "op3": "14",
    "op4": "23",
    "ans": "13"
  },
  {
    "ques": "What is the result?<br><br>```php<br>for($i = 0; $i < 2; $i++) {<br>  for($j = 0; $j < 2; $j++) {<br>    echo $i + $j;<br>  }<br>}<br>```",
    "quesType": "mcq",
    "op1": "0112",
    "op2": "0123",
    "op3": "1122",
    "op4": "0011",
    "ans": "0112"
  },
  {
    "ques": "Output?<br><br>```php<br>for($i=0;$i<3;$i++){ echo $i; }<br>```",
    "quesType": "fill",
    "ans": "012"
  },
  {
    "ques": "Result?<br><br>```php<br>$i=1;<br>while($i<=2){ echo $i; $i++; }<br>```",
    "quesType": "fill",
    "ans": "12"
  },
  {
    "ques": "Echoed?<br><br>```php<br>$i=0;<br>do{ echo $i; $i++; } while($i<2);<br>```",
    "quesType": "fill",
    "ans": "01"
  },
  {
    "ques": "Output?<br><br>```php<br>$sum=0;<br>for($i=1;$i<=3;$i++){ $sum+=$i; } echo $sum;<br>```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "Result?<br><br>```php<br>for($i=0;$i<2;$i++){ for($j=0;$j<2;$j++){ echo \"*\"; } }<br>```",
    "quesType": "fill",
    "ans": "****"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>$arr=[\"A\",\"B\"]; foreach($arr as $v){ echo $v; }<br>```",
    "quesType": "fill",
    "ans": "AB"
  },
  {
    "ques": "Echo?<br><br>```php<br>$i=0; while($i<1){ echo $i; $i++; }<br>```",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "What is output?<br><br>```php<br>for($i=2;$i<=4;$i++){ echo $i; }<br>```",
    "quesType": "fill",
    "ans": "234"
  },
  {
    "ques": "What is printed?<br><br>```php<br>$i=0; do{ echo $i; $i++; } while($i<3);<br>```",
    "quesType": "fill",
    "ans": "012"
  },
  {
    "ques": "Output?<br><br>```php<br>for($i=0;$i<4;$i+=2){ echo $i; }<br>```",
    "quesType": "fill",
    "ans": "02"
  },
  {
    "ques": "What is the output?<br><br>```php<br>for($i=1;$i<=2;$i++){ for($j=1;$j<=2;$j++){ echo $j; } }<br>```",
    "quesType": "fill",
    "ans": "1212"
  },
  {
    "ques": "Result?<br><br>```php<br>$x=3; while($x>1){ echo $x; $x--; }<br>```",
    "quesType": "fill",
    "ans": "32"
  },
  {
    "ques": "Output?<br><br>```php<br>$i=0; while($i<5){ if($i==3) break; echo $i; $i++; }<br>```",
    "quesType": "fill",
    "ans": "012"
  },
  {
    "ques": "Echoed?<br><br>```php<br>for($i=1;$i<=3;$i++){ if($i%2==0) echo $i; }<br>```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "What is printed?<br><br>```php<br>$arr=[\"x\",\"y\",\"z\"]; foreach($arr as $v){ if($v==\"y\") continue; echo $v; }<br>```",
    "quesType": "fill",
    "ans": "xz"
  },
  {
    "ques": "Result?<br><br>```php<br>$i=5; while($i>3){ echo $i; $i--; }<br>```",
    "quesType": "fill",
    "ans": "54"
  },
  {
    "ques": "Echo?<br><br>```php<br>for($i=1;$i<4;$i++){ echo $i*2; }<br>```",
    "quesType": "fill",
    "ans": "246"
  },
  {
    "ques": "What is printed?<br><br>```php<br>$i=0; do{ echo ++$i; } while($i<2);<br>```",
    "quesType": "fill",
    "ans": "12"
  },
  {
    "ques": "What is output?<br><br>```php<br>for($i=2;$i<=6;$i+=2){ echo $i; }<br>```",
    "quesType": "fill",
    "ans": "246"
  },
  {
    "ques": "Result?<br><br>```php<br>$arr=[1,2,3,4]; foreach($arr as $v){ if($v>2) break; echo $v; }<br>```",
    "quesType": "fill",
    "ans": "12"
  },
  {
    "ques": "Echoed?<br><br>```php<br>$i=1; while($i<4){ echo $i; $i+=2; }<br>```",
    "quesType": "fill",
    "ans": "13"
  },
  {
    "ques": "What is printed?<br><br>```php<br>for($i=0;$i<2;$i++){ for($j=0;$j<2;$j++){ echo $i+$j; } }<br>```",
    "quesType": "fill",
    "ans": "0112"
  },
  {
    "ques": "Output?<br><br>```php<br>$i=0; while($i++<2){ echo $i; }<br>```",
    "quesType": "fill",
    "ans": "12"
  },
  {
    "ques": "Result?<br><br>```php<br>for($i=0;$i<3;$i++){ if($i==1) continue; echo $i; }<br>```",
    "quesType": "fill",
    "ans": "02"
  },
  {
    "ques": "Echo?<br><br>```php<br>$i=0; do{ if($i==1) break; echo $i; $i++; } while($i<3);<br>```",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "What is output?<br><br>```php<br>for($i=1;$i<=3;$i++){ if($i==2) break; echo $i; }<br>```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "Result?<br><br>```php<br>$arr=[1,2,3]; foreach($arr as $v){ echo $v*2; }<br>```",
    "quesType": "fill",
    "ans": "246"
  },
  {
    "ques": "Output?<br><br>```php<br>$i=1; while($i<=3){ if($i%2==0) echo $i; $i++; }<br>```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "Echo?<br><br>```php<br>for($i=1;$i<5;$i++){ if($i>3) break; echo $i; }<br>```",
    "quesType": "fill",
    "ans": "123"
  },
  {
    "ques": "What is output?<br><br>```php<br>$i=0; do{ echo $i; $i+=2; } while($i<5);<br>```",
    "quesType": "fill",
    "ans": "02"
  },
  {
    "ques": "What is output?<br><br>```php<br>for($i = 1; $i <= 3; $i++) { echo $i*3; }<br>```",
    "quesType": "mcq",
    "op1": "369",
    "op2": "123",
    "op3": "246",
    "op4": "345",
    "ans": "369"
  },
  {
    "ques": "What is printed?<br><br>```php<br>$i = 0;<br>while($i++ < 2) { echo $i; }<br>```",
    "quesType": "mcq",
    "op1": "12",
    "op2": "23",
    "op3": "01",
    "op4": "11",
    "ans": "12"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>for($i = 5; $i > 0; $i -= 2) { echo $i; }<br>```",
    "quesType": "mcq",
    "op1": "531",
    "op2": "52",
    "op3": "53",
    "op4": "54",
    "ans": "531"
  },
  {
    "ques": "What is output?<br><br>```php<br>for($i = 0; $i < 3; $i++) { if($i == 2) continue; echo $i; }<br>```",
    "quesType": "mcq",
    "op1": "012",
    "op2": "01",
    "op3": "02",
    "op4": "12",
    "ans": "01"
  },
  {
    "ques": "What will be echoed?<br><br>```php<br>$arr = [\"a\", \"b\", \"c\"]; foreach($arr as $v) { echo strtoupper($v); }<br>```",
    "quesType": "mcq",
    "op1": "ABC",
    "op2": "abc",
    "op3": "Abc",
    "op4": "ac",
    "ans": "ABC"
  },
  {
    "ques": "Output?<br><br>```php<br>$sum = 0; for($i = 2; $i <= 4; $i++) { $sum += $i; } echo $sum;<br>```",
    "quesType": "mcq",
    "op1": "7",
    "op2": "9",
    "op3": "8",
    "op4": "10",
    "ans": "9"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$i = 1; do { echo $i; $i+=2; } while($i < 5);<br>```",
    "quesType": "mcq",
    "op1": "13",
    "op2": "12",
    "op3": "14",
    "op4": "15",
    "ans": "13"
  },
  {
    "ques": "Result?<br><br>```php<br>for($i = 1; $i <= 2; $i++) { for($j = 1; $j <= 2; $j++) { echo $i.$j; } }<br>```",
    "quesType": "mcq",
    "op1": "1112",
    "op2": "1212",
    "op3": "11122122",
    "op4": "111221",
    "ans": "11122122"
  },
  {
    "ques": "What is echoed?<br><br>```php<br>$x = 0; while($x < 2) { echo ++$x; }<br>```",
    "quesType": "mcq",
    "op1": "12",
    "op2": "01",
    "op3": "23",
    "op4": "11",
    "ans": "12"
  },
  {
    "ques": "Output?<br><br>```php<br>for($i = 1; $i < 5; $i++) { if($i % 2 != 0) echo $i; }<br>```",
    "quesType": "mcq",
    "op1": "135",
    "op2": "13",
    "op3": "1357",
    "op4": "123",
    "ans": "13"
  },
  {
    "ques": "Result?<br><br>```php<br>$arr = [2, 4, 6]; foreach($arr as $v) { echo $v/2; }<br>```",
    "quesType": "mcq",
    "op1": "123",
    "op2": "124",
    "op3": "134",
    "op4": "13",
    "ans": "123"
  },
  {
    "ques": "What does this print?<br><br>```php<br>$i = 3; do { echo $i--; } while($i > 1);<br>```",
    "quesType": "mcq",
    "op1": "32",
    "op2": "321",
    "op3": "21",
    "op4": "31",
    "ans": "32"
  },
  {
    "ques": "Echoed output?<br><br>```php<br>for($i = 2; $i <= 4; $i++) { if($i == 3) continue; echo $i; }<br>```",
    "quesType": "mcq",
    "op1": "24",
    "op2": "23",
    "op3": "34",
    "op4": "2",
    "ans": "24"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$i = 0; while($i < 2) { echo $i; $i += 1; }<br>```",
    "quesType": "mcq",
    "op1": "01",
    "op2": "12",
    "op3": "02",
    "op4": "0",
    "ans": "01"
  },
  {
    "ques": "Output?<br><br>```php<br>$x = 2; while($x <= 4) { echo $x; $x++; }<br>```",
    "quesType": "mcq",
    "op1": "23",
    "op2": "234",
    "op3": "24",
    "op4": "2345",
    "ans": "234"
  },
  {
    "ques": "What will this echo?<br><br>```php<br>for($i = 0; $i < 4; $i+=2) { echo $i; }<br>```",
    "quesType": "mcq",
    "op1": "02",
    "op2": "012",
    "op3": "01",
    "op4": "0",
    "ans": "02"
  },
  {
    "ques": "Output?<br><br>```php<br>$arr = [\"one\", \"two\"]; foreach($arr as $v) { echo strlen($v); }<br>```",
    "quesType": "mcq",
    "op1": "23",
    "op2": "32",
    "op3": "34",
    "op4": "33",
    "ans": "33"
  },
  {
    "ques": "What is printed?<br><br>```php<br>for($i = 1; $i < 3; $i++) { for($j = 1; $j < 3; $j++) { echo $i + $j; } }<br>```",
    "quesType": "mcq",
    "op1": "2345",
    "op2": "234",
    "op3": "345",
    "op4": "2324",
    "ans": "2345"
  },
  {
    "ques": "Echoed result?<br><br>```php<br>$i = 0; do { echo $i; $i += 3; } while($i < 5);<br>```",
    "quesType": "mcq",
    "op1": "03",
    "op2": "04",
    "op3": "05",
    "op4": "012",
    "ans": "03"
  },
  {
    "ques": "Output?<br><br>```php<br>for($i = 0; $i < 5; $i++) { if($i > 2) break; echo $i; }<br>```",
    "quesType": "mcq",
    "op1": "0123",
    "op2": "012",
    "op3": "01",
    "op4": "02",
    "ans": "012"
  },
  {"ques": "Output?<br><br>```php<br>$i=0;while($i<3){echo $i;$i++;}<br>```","quesType": "fill","ans":"012"},
  {"ques": "Echoed?<br><br>```php<br>for($i=1;$i<4;$i++){echo $i*2;}<br>```","quesType": "fill","ans":"246"},
  {"ques": "Result?<br><br>```php<br>$sum=0;for($i=0;$i<3;$i++){$sum+=$i;}echo $sum;<br>```","quesType": "fill","ans":"3"},
  {"ques": "Output?<br><br>```php<br>$i=2;do{echo $i;$i+=2;}while($i<7);<br>```","quesType": "fill","ans":"24"},
  {"ques": "Echo?<br><br>```php<br>$arr=[\"p\",\"q\"];foreach($arr as $v){echo strtoupper($v);}<br>```","quesType": "fill","ans":"PQ"},
  {"ques": "Result?<br><br>```php<br>for($i=3;$i>0;$i--){echo $i;}<br>```","quesType": "fill","ans":"321"},
  {"ques": "Printed?<br><br>```php<br>$x=1;while($x<3){echo $x;$x++;}<br>```","quesType": "fill","ans":"12"},
  {"ques": "Output?<br><br>```php<br>for($i=0;$i<2;$i++){for($j=0;$j<2;$j++){echo \"#\";}}<br>```","quesType": "fill","ans":"####"},
  {"ques": "Echo?<br><br>```php<br>$arr=[1,3];foreach($arr as $v){echo $v+1;}<br>```","quesType": "fill","ans":"24"},
  {"ques": "Result?<br><br>```php<br>$i=0;do{echo ++$i;}while($i<2);<br>```","quesType": "fill","ans":"12"},
  {"ques": "What is output?<br><br>```php<br>for($i=1;$i<4;$i++){if($i==2)continue;echo $i;}<br>```","quesType": "fill","ans":"13"},
  {"ques": "Printed?<br><br>```php<br>$x=2;while($x<=4){echo $x;$x+=2;}<br>```","quesType": "fill","ans":"24"},
  {"ques": "Output?<br><br>```php<br>for($i=1;$i<=2;$i++){for($j=1;$j<=2;$j++){echo $j*2;}}<br>```","quesType": "fill","ans":"2212"},
  {"ques": "Echo?<br><br>```php<br>$i=1;do{echo $i;$i+=3;}while($i<5);<br>```","quesType": "fill","ans":"1"},
  {"ques": "Result?<br><br>```php<br>$arr=[2,4,6];foreach($arr as $v){if($v>4)break;echo $v;}<br>```","quesType": "fill","ans":"24"},
  {"ques": "Printed?<br><br>```php<br>$i=0;while($i<5){if($i==3)break;echo $i;$i++;}<br>```","quesType": "fill","ans":"012"},
  {"ques": "Output?<br><br>```php<br>for($i=1;$i<=4;$i++){if($i%2==0)echo $i;}<br>```","quesType": "fill","ans":"24"},
  {"ques": "Echoed?<br><br>```php<br>$i=0;do{echo $i;$i+=2;}while($i<4);<br>```","quesType": "fill","ans":"02"},
  {"ques": "Result?<br><br>```php<br>for($i=0;$i<3;$i++){if($i==1)continue;echo $i;}<br>```","quesType": "fill","ans":"02"},
  {"ques": "Printed?<br><br>```php<br>for($i=0;$i<4;$i++){if($i>1)break;echo $i;}<br>```","quesType": "fill","ans":"01"}

]
let codingphp3Arr=[
  {
    "ques": "What is output?<br><br>```php<br>$x = '5bar'; $y = 10 + $x; echo $y;<br>```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "15",
    "op3": "5bar10",
    "op4": "Error",
    "ans": "15"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>$a = [1, 2]; $b = $a; $b[0] = 3; echo $a[0];<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "3",
    "op3": "2",
    "op4": "Error",
    "ans": "1"
  },
  {
    "ques": "What is output?<br><br>```php<br>$a = 1; function test() { global $a; $a = 5; } test(); echo $a;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "5",
    "op3": "0",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "What does it print?<br><br>```php<br>$x = 5; $y = &$x; $y = 10; echo $x;<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "10",
    "op3": "0",
    "op4": "Error",
    "ans": "10"
  },
  {
    "ques": "Output?<br><br>```php<br>function f($x) { static $y = 0; $y += $x; return $y; } echo f(2); echo f(3);<br>```",
    "quesType": "mcq",
    "op1": "23",
    "op2": "5",
    "op3": "02",
    "op4": "25",
    "ans": "23"
  },
  {
    "ques": "What is echoed?<br><br>```php<br>$arr = [1,2,3]; unset($arr[1]); echo count($arr);<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "1",
    "op4": "0",
    "ans": "2"
  },
  {
    "ques": "Output?<br><br>```php<br>$a = \"1\"; $b = \"01\"; if($a == $b) echo \"yes\"; else echo \"no\";<br>```",
    "quesType": "mcq",
    "op1": "yes",
    "op2": "no",
    "op3": "1",
    "op4": "01",
    "ans": "yes"
  },
  {
    "ques": "What is printed?<br><br>```php<br>echo (false == \"0\") ? \"yes\" : \"no\";<br>```",
    "quesType": "mcq",
    "op1": "yes",
    "op2": "no",
    "op3": "Error",
    "op4": "0",
    "ans": "yes"
  },
  {
    "ques": "Result?<br><br>```php<br>$a = \"php\"; echo $a[1];<br>```",
    "quesType": "mcq",
    "op1": "p",
    "op2": "h",
    "op3": "Error",
    "op4": "php",
    "ans": "h"
  },
  {
    "ques": "Echoed output?<br><br>```php<br>$x = NULL; echo isset($x) ? \"1\" : \"0\";<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "NULL",
    "op4": "Error",
    "ans": "0"
  },
  {
    "ques": "What does this output?<br><br>```php<br>echo true + true;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "true",
    "op4": "Error",
    "ans": "2"
  },
  {
    "ques": "What will be printed?<br><br>```php<br>$x = [1, 2]; $x[] = 3; echo count($x);<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "4",
    "op4": "1",
    "ans": "3"
  },
  {
    "ques": "Output?<br><br>```php<br>$x = 5; function foo() { $x = 3; } foo(); echo $x;<br>```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "5",
    "op3": "0",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "What is result?<br><br>```php<br>$x = [\"a\" => 1]; foreach($x as &$v) {} $v = 2; echo $x[\"a\"];<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "0",
    "op4": "Error",
    "ans": "2"
  },
  {
    "ques": "Echoed output?<br><br>```php<br>$x = 0; echo $x++ + ++$x;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "2"
  },
  {
    "ques": "What is printed?<br><br>```php<br>echo strcmp(\"a\", \"b\") < 0 ? \"yes\" : \"no\";<br>```",
    "quesType": "mcq",
    "op1": "yes",
    "op2": "no",
    "op3": "0",
    "op4": "Error",
    "ans": "yes"
  },
  {
    "ques": "What is output?<br><br>```php<br>$x = function($y) { return $y*2; }; echo $x(5);<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "10",
    "op3": "2",
    "op4": "Error",
    "ans": "10"
  },
  {
    "ques": "What is echoed?<br><br>```php<br>$x = function($a, $b) { return $a($b); }; echo $x(function($v){return $v+1;}, 2);<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "1",
    "op3": "3",
    "op4": "Error",
    "ans": "3"
  },
  {
    "ques": "Output?<br><br>```php<br>class A { function __construct() { echo \"A\"; } } class B extends A { function __construct() { parent::__construct(); echo \"B\"; } } new B();<br>```",
    "quesType": "mcq",
    "op1": "A",
    "op2": "AB",
    "op3": "BA",
    "op4": "B",
    "ans": "AB"
  },
  {
    "ques": "What is output?<br><br>```php<br>class X { static $v = 1; function __construct() { self::$v++; } } new X(); new X(); echo X::$v;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "3"
  },
  {"ques": "Output?<br><br>```php<br>echo \"5\" + 5;<br>```","quesType": "fill","ans":"10"},
  {"ques": "What is printed?<br><br>```php<br>$a = \"10abc\"; echo $a + 2;<br>```","quesType": "fill","ans":"12"},
  {"ques": "Echoed result?<br><br>```php<br>$a = \"\"; echo empty($a) ? \"yes\" : \"no\";<br>```","quesType": "fill","ans":"yes"},
  {"ques": "Printed output?<br><br>```php<br>function x() { static $y = 1; $y++; return $y; } echo x(); echo x();<br>```","quesType": "fill","ans":"23"},
  {"ques": "Output?<br><br>```php<br>$a = [\"b\" => 2]; foreach($a as &$v) {} $v = 3; echo $a[\"b\"];<br>```","quesType": "fill","ans":"3"},
  {"ques": "Echoed?<br><br>```php<br>$x = 1; $y = &$x; $y += 2; echo $x;<br>```","quesType": "fill","ans":"3"},
  {"ques": "Printed?<br><br>```php<br>$x = \"a\"; $y = \"b\"; echo $x.$y;<br>```","quesType": "fill","ans":"ab"},
  {"ques": "Result?<br><br>```php<br>$x = 1; function t() { global $x; $x += 2; } t(); echo $x;<br>```","quesType": "fill","ans":"3"},
  {"ques": "Output?<br><br>```php<br>function f($a) { return $a(); } echo f(function(){ return 2; });<br>```","quesType": "fill","ans":"2"},
  {"ques": "Echoed result?<br><br>```php<br>class A { static $x = 1; function __construct() { self::$x++; } } new A(); new A(); echo A::$x;<br>```","quesType": "fill","ans":"3"},
  {"ques": "Output?<br><br>```php<br>$a = 0; $b = $a++; echo $b;<br>```","quesType": "fill","ans":"0"},
  {"ques": "Printed?<br><br>```php<br>$x = [1,2]; $y = $x; $y[0] = 9; echo $x[0];<br>```","quesType": "fill","ans":"1"},
  {"ques": "Echo?<br><br>```php<br>$x = NULL; echo is_null($x) ? \"yes\" : \"no\";<br>```","quesType": "fill","ans":"yes"},
  {"ques": "Output?<br><br>```php<br>$a = 5; echo $a > 2 ? \"big\" : \"small\";<br>```","quesType": "fill","ans":"big"},
  {"ques": "Result?<br><br>```php<br>$x = 1; if($x) echo \"true\"; else echo \"false\";<br>```","quesType": "fill","ans":"true"},
  {"ques": "Printed?<br><br>```php<br>echo intval(\"4abc\");<br>```","quesType": "fill","ans":"4"},
  {"ques": "Output?<br><br>```php<br>echo strcmp(\"a\", \"a\");<br>```","quesType": "fill","ans":"0"},
  {"ques": "Echoed?<br><br>```php<br>$a = [1,2,3]; unset($a[1]); echo count($a);<br>```","quesType": "fill","ans":"2"},
  {"ques": "Printed result?<br><br>```php<br>$x = \"abc\"; echo strlen($x);<br>```","quesType": "fill","ans":"3"},
  {"ques": "Output?<br><br>```php<br>$x = function($n){ return $n * $n; }; echo $x(3);<br>```","quesType": "fill","ans":"9"},
  {
    "ques": "What is the output?<br><br>```php<br>class A { public $x = 1; } $a = new A; $b = $a; $b->x = 5; echo $a->x;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "5",
    "op3": "0",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>$a = 5; $b = &$a; $b = 7; echo $a;<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "7",
    "op3": "0",
    "op4": "Error",
    "ans": "7"
  },
  {
    "ques": "What will be printed?<br><br>```php<br>$x = 'abc'; $y = 'ABC'; echo strtolower($y) == $x ? 'yes' : 'no';<br>```",
    "quesType": "mcq",
    "op1": "yes",
    "op2": "no",
    "op3": "abcABC",
    "op4": "Error",
    "ans": "yes"
  },
  {
    "ques": "What is output?<br><br>```php<br>echo \"5\" === 5 ? \"yes\" : \"no\";<br>```",
    "quesType": "mcq",
    "op1": "yes",
    "op2": "no",
    "op3": "5",
    "op4": "Error",
    "ans": "no"
  },
  {
    "ques": "Echoed output?<br><br>```php<br>$x = [\"a\" => 1]; $y = array_keys($x); echo $y[0];<br>```",
    "quesType": "mcq",
    "op1": "a",
    "op2": "1",
    "op3": "0",
    "op4": "Error",
    "ans": "a"
  },
  {
    "ques": "What does this output?<br><br>```php<br>$a = 0; $a = $a ?: 5; echo $a;<br>```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "5",
    "op3": "1",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "What will be echoed?<br><br>```php<br>$a = NULL; echo is_null($a) ? 1 : 0;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "NULL",
    "op4": "Error",
    "ans": "1"
  },
  {
    "ques": "Output?<br><br>```php<br>echo (int) \"010\";<br>```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "8",
    "op3": "2",
    "op4": "0",
    "ans": "10"
  },
  {
    "ques": "What does this print?<br><br>```php<br>function f($x = 5) { return $x * 2; } echo f();<br>```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "5",
    "op3": "2",
    "op4": "0",
    "ans": "10"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$x = \"php\"; echo substr($x, 1, 2);<br>```",
    "quesType": "mcq",
    "op1": "ph",
    "op2": "hp",
    "op3": "ph",
    "op4": "Error",
    "ans": "hp"
  },
  {
    "ques": "What will be printed?<br><br>```php<br>$x = [\"a\" => 1, \"b\" => 2]; echo count($x);<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "0",
    "op4": "Error",
    "ans": "2"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>echo gettype([]);<br>```",
    "quesType": "mcq",
    "op1": "array",
    "op2": "object",
    "op3": "string",
    "op4": "NULL",
    "ans": "array"
  },
  {
    "ques": "What is output?<br><br>```php<br>$a = [1,2,3]; echo in_array(2, $a) ? \"yes\" : \"no\";<br>```",
    "quesType": "mcq",
    "op1": "yes",
    "op2": "no",
    "op3": "1",
    "op4": "2",
    "ans": "yes"
  },
  {
    "ques": "What will be printed?<br><br>```php<br>$x = \"test\"; echo isset($x) ? \"yes\" : \"no\";<br>```",
    "quesType": "mcq",
    "op1": "yes",
    "op2": "no",
    "op3": "test",
    "op4": "Error",
    "ans": "yes"
  },
  {
    "ques": "Output?<br><br>```php<br>$x = [\"x\" => 1]; $y = $x; $y[\"x\"] = 2; echo $x[\"x\"];<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "0",
    "op4": "Error",
    "ans": "1"
  },
  {
    "ques": "What does it echo?<br><br>```php<br>$a = 5; function foo() { global $a; $a = 10; } foo(); echo $a;<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "10",
    "op3": "0",
    "op4": "Error",
    "ans": "10"
  },
  {
    "ques": "What is output?<br><br>```php<br>function f() { static $x = 0; $x++; return $x; } echo f(); echo f();<br>```",
    "quesType": "mcq",
    "op1": "12",
    "op2": "21",
    "op3": "11",
    "op4": "01",
    "ans": "12"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>$x = function($v) { return $v * $v; }; echo $x(4);<br>```",
    "quesType": "mcq",
    "op1": "4",
    "op2": "8",
    "op3": "16",
    "op4": "0",
    "ans": "16"
  },
  {
    "ques": "Output?<br><br>```php<br>$x = 1; $y = 2; echo $x + $y;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$x = [1, 2, 3]; array_pop($x); echo count($x);<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "1",
    "op4": "0",
    "ans": "2"
  },
  {"ques": "Output?<br><br>```php<br>$x = 5; echo $x * 2;<br>```","quesType": "fill","ans":"10"},
  {"ques": "Printed?<br><br>```php<br>echo strlen(\"php\");<br>```","quesType": "fill","ans":"3"},
  {"ques": "What is output?<br><br>```php<br>echo strtoupper(\"abc\");<br>```","quesType": "fill","ans":"ABC"},
  {"ques": "Echoed?<br><br>```php<br>echo str_repeat(\"a\", 3);<br>```","quesType": "fill","ans":"aaa"},
  {"ques": "Printed result?<br><br>```php<br>$x = [1,2]; echo in_array(2, $x) ? \"yes\" : \"no\";<br>```","quesType": "fill","ans":"yes"},
  {"ques": "What is output?<br><br>```php<br>$x = [1,2]; unset($x[0]); echo count($x);<br>```","quesType": "fill","ans":"1"},
  {"ques": "Printed?<br><br>```php<br>$x = \"abc\"; echo $x[2];<br>```","quesType": "fill","ans":"c"},
  {"ques": "Echoed result?<br><br>```php<br>$x = 1; $y = $x; $y++; echo $x;<br>```","quesType": "fill","ans":"1"},
  {"ques": "Output?<br><br>```php<br>$x = [\"a\" => 1]; $y = $x; $y[\"a\"] = 9; echo $x[\"a\"];<br>```","quesType": "fill","ans":"1"},
  {"ques": "Printed?<br><br>```php<br>function f($x) { return $x + 1; } echo f(4);<br>```","quesType": "fill","ans":"5"},
  {"ques": "Echo?<br><br>```php<br>$x = [1,2,3]; echo array_shift($x);<br>```","quesType": "fill","ans":"1"},
  {"ques": "Output?<br><br>```php<br>echo is_array([]) ? \"yes\" : \"no\";<br>```","quesType": "fill","ans":"yes"},
  {"ques": "Printed result?<br><br>```php<br>echo round(4.6);<br>```","quesType": "fill","ans":"5"},
  {"ques": "What is output?<br><br>```php<br>echo floor(4.9);<br>```","quesType": "fill","ans":"4"},
  {"ques": "Echoed?<br><br>```php<br>echo ceil(4.1);<br>```","quesType": "fill","ans":"5"},
  {"ques": "Output?<br><br>```php<br>echo abs(-5);<br>```","quesType": "fill","ans":"5"},
  {"ques": "Printed result?<br><br>```php<br>$x = \"PHP\"; echo strtolower($x);<br>```","quesType": "fill","ans":"php"},
  {"ques": "Echoed?<br><br>```php<br>$x = 2; $x += 3; echo $x;<br>```","quesType": "fill","ans":"5"},
  {"ques": "What is output?<br><br>```php<br>$x = 2; $x *= 3; echo $x;<br>```","quesType": "fill","ans":"6"},
  {"ques": "Printed?<br><br>```php<br>echo 2 ** 3;<br>```","quesType": "fill","ans":"8"},
   {
    "ques": "What will this output?<br><br>```php<br>$x = \"5 cats\"; echo $x + 2;<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "7",
    "op3": "2",
    "op4": "Error",
    "ans": "7"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>$x = \"abc\"; $y = (int)$x; echo $y;<br>```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "abc",
    "op3": "1",
    "op4": "Error",
    "ans": "0"
  },
  {
    "ques": "What is output?<br><br>```php<br>function test($x) { return $x(); } echo test(function() { return 5; });<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "0",
    "op3": "1",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "What will this echo?<br><br>```php<br>class A { static $x = 1; } class B extends A { static $x = 2; } echo A::$x . B::$x;<br>```",
    "quesType": "mcq",
    "op1": "12",
    "op2": "21",
    "op3": "11",
    "op4": "22",
    "ans": "12"
  },
  {
    "ques": "What is printed?<br><br>```php<br>trait T { function say() { echo \"T\"; } } class A { use T; } (new A)->say();<br>```",
    "quesType": "mcq",
    "op1": "T",
    "op2": "A",
    "op3": "Error",
    "op4": "Nothing",
    "ans": "T"
  },
  {
    "ques": "What is output?<br><br>```php<br>class A { final function f() {} } class B extends A { function f() {} }<br>```",
    "quesType": "mcq",
    "op1": "Error",
    "op2": "Nothing",
    "op3": "Success",
    "op4": "1",
    "ans": "Error"
  },
  {
    "ques": "Echo?<br><br>```php<br>$x = NULL; echo empty($x) ? 1 : 0;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "NULL",
    "op4": "Error",
    "ans": "1"
  },
  {
    "ques": "What is output?<br><br>```php<br>$a = [1,2]; $b = &$a; $b[] = 3; echo count($a);<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "1",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "Echoed?<br><br>```php<br>echo \"\" == 0 ? 1 : 0;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "Error",
    "op4": "NULL",
    "ans": "1"
  },
  {
    "ques": "Output?<br><br>```php<br>$x = 0; if($x) echo \"yes\"; else echo \"no\";<br>```",
    "quesType": "mcq",
    "op1": "yes",
    "op2": "no",
    "op3": "0",
    "op4": "Error",
    "ans": "no"
  },
  {
    "ques": "What is printed?<br><br>```php<br>$x = (object)[\"a\" => 1]; echo $x->a;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "a",
    "op3": "Array",
    "op4": "Error",
    "ans": "1"
  },
  {
    "ques": "Echo?<br><br>```php<br>$x = 5; function f(&$y) { $y = 10; } f($x); echo $x;<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "10",
    "op3": "0",
    "op4": "Error",
    "ans": "10"
  },
  {
    "ques": "What does this print?<br><br>```php<br>function f($x = \"hi\") { echo $x; } f();<br>```",
    "quesType": "mcq",
    "op1": "hi",
    "op2": "Error",
    "op3": "0",
    "op4": "NULL",
    "ans": "hi"
  },
  {
    "ques": "What is output?<br><br>```php<br>$a = \"abc\"; $b = \"ABC\"; echo strcmp($a, $b) > 0 ? \"yes\" : \"no\";<br>```",
    "quesType": "mcq",
    "op1": "yes",
    "op2": "no",
    "op3": "abc",
    "op4": "ABC",
    "ans": "yes"
  },
  {
    "ques": "Echoed?<br><br>```php<br>$a = 10; $b = 10; echo $a === $b ? 1 : 0;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "true",
    "op4": "false",
    "ans": "1"
  },
  {
    "ques": "What does it echo?<br><br>```php<br>$a = [1]; $b = [1]; echo $a == $b ? 1 : 0;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "true",
    "op4": "false",
    "ans": "1"
  },
  {
    "ques": "Output?<br><br>```php<br>$x = 1; echo isset($x) ? 1 : 0;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "true",
    "op4": "false",
    "ans": "1"
  },
  {
    "ques": "What is the output?<br><br>```php<br>$x = function($v) { return $v + 1; }; echo $x(1);<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "1",
    "op3": "0",
    "op4": "Error",
    "ans": "2"
  },
  {
    "ques": "Echoed?<br><br>```php<br>$x = \"php\"; echo strrev($x);<br>```",
    "quesType": "mcq",
    "op1": "php",
    "op2": "hphp",
    "op3": "php",
    "op4": "php",
    "ans": "php"
  },
  {
    "ques": "What does this print?<br><br>```php<br>$a = new class { public $x = 5; }; echo $a->x;<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "0",
    "op3": "1",
    "op4": "Error",
    "ans": "5"
  },
  {"ques": "Output?<br><br>```php<br>$x = 5; echo ++$x;<br>```","quesType":"fill","ans":"6"},
  {"ques": "Printed?<br><br>```php<br>$x = 5; echo $x++;<br>```","quesType":"fill","ans":"5"},
  {"ques": "Output?<br><br>```php<br>echo str_repeat(\"x\", 2);<br>```","quesType":"fill","ans":"xx"},
  {"ques": "Echoed?<br><br>```php<br>$x = \"abc\"; echo strtoupper($x);<br>```","quesType":"fill","ans":"ABC"},
  {"ques": "Result?<br><br>```php<br>$x = \"ABCD\"; echo substr($x, 1, 2);<br>```","quesType":"fill","ans":"BC"},
  {"ques": "Printed?<br><br>```php<br>$x = 4; $x *= 2; echo $x;<br>```","quesType":"fill","ans":"8"},
  {"ques": "Output?<br><br>```php<br>$x = 9; echo sqrt($x);<br>```","quesType":"fill","ans":"3"},
  {"ques": "Echoed?<br><br>```php<br>$x = 5; $x--; echo $x;<br>```","quesType":"fill","ans":"4"},
  {"ques": "What is printed?<br><br>```php<br>$x = \"hello\"; echo strlen($x);<br>```","quesType":"fill","ans":"5"},
  {"ques": "Output?<br><br>```php<br>$x = [\"a\" => 1]; echo isset($x[\"a\"]) ? \"yes\" : \"no\";<br>```","quesType":"fill","ans":"yes"},
  {"ques": "Printed?<br><br>```php<br>$x = \"abc\"; echo strpos($x, \"b\");<br>```","quesType":"fill","ans":"1"},
  {"ques": "Echo?<br><br>```php<br>echo round(4.4);<br>```","quesType":"fill","ans":"4"},
  {"ques": "Output?<br><br>```php<br>echo max(1, 2, 3);<br>```","quesType":"fill","ans":"3"},
  {"ques": "Echoed?<br><br>```php<br>$x = \"123\"; echo is_numeric($x) ? 1 : 0;<br>```","quesType":"fill","ans":"1"},
  {"ques": "Printed?<br><br>```php<br>$x = \"\"; echo empty($x) ? 1 : 0;<br>```","quesType":"fill","ans":"1"},
  {"ques": "Output?<br><br>```php<br>$x = 1; echo --$x;<br>```","quesType":"fill","ans":"0"},
  {"ques": "Echoed?<br><br>```php<br>$x = 2; $y = 3; echo $x * $y;<br>```","quesType":"fill","ans":"6"},
  {"ques": "Printed?<br><br>```php<br>$x = [1,2]; echo json_encode($x);<br>```","quesType":"fill","ans":"[1,2]"},
  {"ques": "Output?<br><br>```php<br>echo str_replace(\"a\", \"b\", \"cat\");<br>```","quesType":"fill","ans":"cbt"},
  {"ques": "Echoed?<br><br>```php<br>$x = [1,2,3]; echo end($x);<br>```","quesType":"fill","ans":"3"},
  {
    "ques": "What is output?<br><br>```php<br>$x = @file_get_contents('nonexistent'); echo $x === false ? 'no' : 'yes';<br>```",
    "quesType": "mcq",
    "op1": "no",
    "op2": "yes",
    "op3": "false",
    "op4": "Error",
    "ans": "no"
  },
  {
    "ques": "Output?<br><br>```php<br>$x = 5; echo $x > 2 && $x < 10 ? 'ok' : 'no';<br>```",
    "quesType": "mcq",
    "op1": "ok",
    "op2": "no",
    "op3": "5",
    "op4": "Error",
    "ans": "ok"
  },
  {
    "ques": "What is the output?<br><br>```php<br>class A { static function f() { echo 'A'; } } class B extends A { static function f() { parent::f(); echo 'B'; } } B::f();<br>```",
    "quesType": "mcq",
    "op1": "A",
    "op2": "B",
    "op3": "AB",
    "op4": "Error",
    "ans": "AB"
  },
  {
    "ques": "What does this echo?<br><br>```php<br>$x = [\"a\" => 1]; echo array_key_exists(\"a\", $x) ? 1 : 0;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "a",
    "op4": "Error",
    "ans": "1"
  },
  {
    "ques": "Printed output?<br><br>```php<br>$x = 5; $y = &$x; $y = 10; echo $x;<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "10",
    "op3": "0",
    "op4": "Error",
    "ans": "10"
  },
  {
    "ques": "What is output?<br><br>```php<br>define(\"X\", 5); echo defined(\"X\") ? 1 : 0;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "5",
    "op4": "Error",
    "ans": "1"
  },
  {
    "ques": "Echo?<br><br>```php<br>function f() { static $x = 0; $x++; return $x; } echo f().f();<br>```",
    "quesType": "mcq",
    "op1": "11",
    "op2": "12",
    "op3": "21",
    "op4": "22",
    "ans": "12"
  },
  {
    "ques": "What is printed?<br><br>```php<br>$x = \"a\"; $$x = \"b\"; echo $a;<br>```",
    "quesType": "mcq",
    "op1": "a",
    "op2": "b",
    "op3": "$a",
    "op4": "Error",
    "ans": "b"
  },
  {
    "ques": "Output?<br><br>```php<br>$x = [1,2,3]; echo count($x, COUNT_RECURSIVE);<br>```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "1",
    "op3": "0",
    "op4": "Error",
    "ans": "3"
  },
  {
    "ques": "What does this output?<br><br>```php<br>$x = [\"a\" => [1,2]]; echo count($x, COUNT_RECURSIVE);<br>```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "2",
    "op3": "4",
    "op4": "Error",
    "ans": "3"
  },
  {
    "ques": "Echo?<br><br>```php<br>echo __FILE__ == __DIR__.'/'.basename(__FILE__) ? 1 : 0;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "Error",
    "op4": "2",
    "ans": "1"
  },
  {
    "ques": "What is output?<br><br>```php<br>class X { function __toString() { return \"hi\"; } } echo new X;<br>```",
    "quesType": "mcq",
    "op1": "hi",
    "op2": "X",
    "op3": "Object",
    "op4": "Error",
    "ans": "hi"
  },
  {
    "ques": "Printed?<br><br>```php<br>interface I { public function f(); } class C implements I { function f() { echo \"ok\"; } } (new C)->f();<br>```",
    "quesType": "mcq",
    "op1": "ok",
    "op2": "Error",
    "op3": "1",
    "op4": "0",
    "ans": "ok"
  },
  {
    "ques": "What is output?<br><br>```php<br>$x = [1,2,3]; echo array_sum($x);<br>```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "5",
    "op3": "1",
    "op4": "0",
    "ans": "6"
  },
  {
    "ques": "Echo?<br><br>```php<br>$x = \"abc\"; echo strrev($x);<br>```",
    "quesType": "mcq",
    "op1": "cba",
    "op2": "abc",
    "op3": "Error",
    "op4": "1",
    "ans": "cba"
  },
  {
    "ques": "Printed output?<br><br>```php<br>$x = 5; $y = function($z) { return $z*2; }; echo $y($x);<br>```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "5",
    "op3": "0",
    "op4": "Error",
    "ans": "10"
  },
  {
    "ques": "What does this print?<br><br>```php<br>class X { static function f() { echo __CLASS__; } } X::f();<br>```",
    "quesType": "mcq",
    "op1": "X",
    "op2": "__CLASS__",
    "op3": "f",
    "op4": "Error",
    "ans": "X"
  },
  {
    "ques": "Output?<br><br>```php<br>$x = \"abc\"; echo md5($x) === md5(\"abc\") ? 1 : 0;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "Error",
    "op4": "abc",
    "ans": "1"
  },
  {
    "ques": "What is output?<br><br>```php<br>$x = \"abc\"; echo base64_encode($x);<br>```",
    "quesType": "mcq",
    "op1": "YWJj",
    "op2": "abc",
    "op3": "cba",
    "op4": "Error",
    "ans": "YWJj"
  },
  {
    "ques": "Echo?<br><br>```php<br>$x = trim(\" hi \"); echo $x;<br>```",
    "quesType": "mcq",
    "op1": "hi",
    "op2": " hi ",
    "op3": "Error",
    "op4": "1",
    "ans": "hi"
  },
  {
    "ques": "What does this output?<br><br>```php<br>$x = \"5\"; echo is_int($x) ? 1 : 0;<br>```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "5",
    "op4": "Error",
    "ans": "0"
  },
  {
    "ques": "Echo?<br><br>```php<br>$x = \"5\"; echo is_numeric($x) ? 1 : 0;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "5",
    "op4": "Error",
    "ans": "1"
  },
  {
    "ques": "Printed output?<br><br>```php<br>$x = [1,2,3]; shuffle($x); echo count($x);<br>```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "1",
    "op3": "0",
    "op4": "Error",
    "ans": "3"
  },
  {
    "ques": "What is output?<br><br>```php<br>function f($x) { return $x ? 1 : 0; } echo f(\"\");<br>```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "Error",
    "op4": "NULL",
    "ans": "0"
  },
  {
    "ques": "Echo?<br><br>```php<br>$x = 0; echo !$x ? 1 : 0;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "Error",
    "op4": "NULL",
    "ans": "1"
  },
  {"ques": "Output?<br><br>```php<br>$x = \"abc\"; echo strlen($x);<br>```","quesType":"fill","ans":"3"},
  {"ques": "Printed?<br><br>```php<br>$x = 2; echo pow($x, 3);<br>```","quesType":"fill","ans":"8"},
  {"ques": "Output?<br><br>```php<br>$x = [1,2,3]; echo in_array(2,$x) ? 1 : 0;<br>```","quesType":"fill","ans":"1"},
  {"ques": "Echoed?<br><br>```php<br>$x = \"abc\"; echo ucfirst($x);<br>```","quesType":"fill","ans":"Abc"},
  {"ques": "Printed?<br><br>```php<br>$x = [1,2,3]; echo max($x);<br>```","quesType":"fill","ans":"3"},
  {"ques": "Output?<br><br>```php<br>$x = \"abc\"; echo sha1($x) ? 1 : 0;<br>```","quesType":"fill","ans":"1"},
  {"ques": "Echoed?<br><br>```php<br>$x = \"a,b\"; echo explode(\",\",$x)[1];<br>```","quesType":"fill","ans":"b"},
  {"ques": "Printed?<br><br>```php<br>$x = \" abc \"; echo ltrim($x);<br>```","quesType":"fill","ans":"abc "},
  {"ques": "Output?<br><br>```php<br>$x = \" abc \"; echo rtrim($x);<br>```","quesType":"fill","ans":" abc"},
  {"ques": "Echoed?<br><br>```php<br>$x = \"Abc\"; echo strtolower($x);<br>```","quesType":"fill","ans":"abc"},
  {"ques": "Printed?<br><br>```php<br>$x = \"abc\"; echo strtoupper($x);<br>```","quesType":"fill","ans":"ABC"},
  {"ques": "Output?<br><br>```php<br>$x = \"abc\"; echo str_repeat($x,2);<br>```","quesType":"fill","ans":"abcabc"},
  {"ques": "Echoed?<br><br>```php<br>$x = \"abc\"; echo str_replace(\"a\",\"x\",$x);<br>```","quesType":"fill","ans":"xbc"},
  {"ques": "Printed?<br><br>```php<br>$x = \"abc\"; echo strrev($x);<br>```","quesType":"fill","ans":"cba"},
  {"ques": "Output?<br><br>```php<br>$x = [\"a\"=>1]; echo key($x);<br>```","quesType":"fill","ans":"a"},
  {"ques": "Echoed?<br><br>```php<br>$x = \"\"; echo empty($x) ? 1 : 0;<br>```","quesType":"fill","ans":"1"},
  {"ques": "Printed?<br><br>```php<br>$x = NULL; echo is_null($x) ? 1 : 0;<br>```","quesType":"fill","ans":"1"},
  {"ques": "Output?<br><br>```php<br>$x = 1; echo isset($x) ? 1 : 0;<br>```","quesType":"fill","ans":"1"},
  {"ques": "Echoed?<br><br>```php<br>$x = \"5\"; echo is_numeric($x) ? 1 : 0;<br>```","quesType":"fill","ans":"1"},
  {"ques": "Printed?<br><br>```php<br>$x = \"abc\"; echo is_string($x) ? 1 : 0;<br>```","quesType":"fill","ans":"1"},
  {"ques": "Output?<br><br>```php<br>$x = [1,2]; echo is_array($x) ? 1 : 0;<br>```","quesType":"fill","ans":"1"},
  {"ques": "Echoed?<br><br>```php<br>$x = 5; echo is_int($x) ? 1 : 0;<br>```","quesType":"fill","ans":"1"},
  {"ques": "Printed?<br><br>```php<br>$x = 5.5; echo is_float($x) ? 1 : 0;<br>```","quesType":"fill","ans":"1"},
  {"ques": "Output?<br><br>```php<br>$x = fopen(\"php://memory\",\"r\"); echo is_resource($x) ? 1 : 0;<br>```","quesType":"fill","ans":"1"},
  {"ques": "Echoed?<br><br>```php<br>$x = \"abc\"; echo ord($x[0]);<br>```","quesType":"fill","ans":"97"},
   {
    "ques": "What is the output?<br><br>```php<br>$a = [1, 2]; $b = $a; $b[] = 3; echo count($a);<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "1",
    "op4": "Error",
    "ans": "2"
  },
  {
    "ques": "What does this print?<br><br>```php<br>$a = [1]; $b =& $a; $b[] = 2; echo count($a);<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "0",
    "op4": "Error",
    "ans": "2"
  },
  {
    "ques": "Output?<br><br>```php<br>echo (int) true;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "true",
    "op4": "Error",
    "ans": "1"
  },
  {
    "ques": "Printed?<br><br>```php<br>echo (int) false;<br>```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "false",
    "op4": "Error",
    "ans": "0"
  },
  {
    "ques": "What is output?<br><br>```php<br>echo (int) \"5 apples\";<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "0",
    "op3": "Error",
    "op4": "apples",
    "ans": "5"
  },
  {
    "ques": "Printed output?<br><br>```php<br>echo (int) \"apples 5\";<br>```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "5",
    "op3": "Error",
    "op4": "apples",
    "ans": "0"
  },
  {
    "ques": "Echo?<br><br>```php<br>$x = \"5\" + \"5\"; echo $x;<br>```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "55",
    "op3": "Error",
    "op4": "5",
    "ans": "10"
  },
  {
    "ques": "What is output?<br><br>```php<br>$x = \"5\" . \"5\"; echo $x;<br>```",
    "quesType": "mcq",
    "op1": "55",
    "op2": "10",
    "op3": "5",
    "op4": "Error",
    "ans": "55"
  },
  {
    "ques": "Printed?<br><br>```php<br>$x = null; echo isset($x) ? 1 : 0;<br>```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "null",
    "op4": "Error",
    "ans": "0"
  },
  {
    "ques": "Output?<br><br>```php<br>$a = \"x\"; $$a = \"y\"; echo $x;<br>```",
    "quesType": "mcq",
    "op1": "x",
    "op2": "y",
    "op3": "Error",
    "op4": "null",
    "ans": "y"
  },
  {
    "ques": "Echo?<br><br>```php<br>$x = [\"a\"=>1]; echo isset($x[\"b\"]) ? 1 : 0;<br>```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "a",
    "op4": "Error",
    "ans": "0"
  },
  {
    "ques": "Output?<br><br>```php<br>$x = function() { return 5; }; echo $x();<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "0",
    "op3": "Error",
    "op4": "1",
    "ans": "5"
  },
  {
    "ques": "Printed?<br><br>```php<br>function f($x = 5) { return $x; } echo f();<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "0",
    "op3": "Error",
    "op4": "1",
    "ans": "5"
  },
  {
    "ques": "What is output?<br><br>```php<br>class A { const X = 5; } echo A::X;<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "X",
    "op3": "A",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "Echo?<br><br>```php<br>echo __FUNCTION__;<br>```",
    "quesType": "mcq",
    "op1": "\"\"",
    "op2": "__FUNCTION__",
    "op3": "1",
    "op4": "Error",
    "ans": "\"\""
  },
  {
    "ques": "Printed?<br><br>```php<br>$x = \"abc\"; echo substr($x, -1);<br>```",
    "quesType": "mcq",
    "op1": "c",
    "op2": "a",
    "op3": "b",
    "op4": "Error",
    "ans": "c"
  },
  {
    "ques": "Output?<br><br>```php<br>echo date(\"Y\", strtotime(\"2000-01-01\"));<br>```",
    "quesType": "mcq",
    "op1": "2000",
    "op2": "1970",
    "op3": "1900",
    "op4": "Error",
    "ans": "2000"
  },
  {
    "ques": "Echo?<br><br>```php<br>$x = [1,2,3]; echo end($x);<br>```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "1",
    "op3": "2",
    "op4": "Error",
    "ans": "3"
  },
  {
    "ques": "Output?<br><br>```php<br>$x = [\"a\"=>1, \"b\"=>2]; echo current($x);<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "a",
    "op4": "Error",
    "ans": "1"
  },
  {
    "ques": "Printed?<br><br>```php<br>$x = [\"a\"=>1, \"b\"=>2]; next($x); echo current($x);<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "1",
    "op3": "b",
    "op4": "Error",
    "ans": "2"
  },
  {
    "ques": "What is output?<br><br>```php<br>echo (5 <=> 5);<br>```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "-1",
    "op4": "Error",
    "ans": "0"
  },
  {
    "ques": "Echo?<br><br>```php<br>echo (4 <=> 5);<br>```",
    "quesType": "mcq",
    "op1": "-1",
    "op2": "0",
    "op3": "1",
    "op4": "Error",
    "ans": "-1"
  },
  {
    "ques": "Printed?<br><br>```php<br>echo (6 <=> 5);<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "-1",
    "op4": "Error",
    "ans": "1"
  },
  {
    "ques": "Output?<br><br>```php<br>echo implode(\",\", [1,2,3]);<br>```",
    "quesType": "mcq",
    "op1": "1,2,3",
    "op2": "123",
    "op3": "1 2 3",
    "op4": "Error",
    "ans": "1,2,3"
  },
  {
    "ques": "Echo?<br><br>```php<br>echo json_encode([\"a\"=>1]);<br>```",
    "quesType": "mcq",
    "op1": "{\"a\":1}",
    "op2": "[1]",
    "op3": "a:1",
    "op4": "Error",
    "ans": "{\"a\":1}"
  },
  {
    "ques": "Printed?<br><br>```php<br>$x = [\"a\", \"b\"]; echo in_array(\"b\", $x) ? 1 : 0;<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "b",
    "op4": "Error",
    "ans": "1"
  },
  {
    "ques": "Output?<br><br>```php<br>echo intval(\"5abc\");<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "0",
    "op3": "abc",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "Echo?<br><br>```php<br>echo gettype([]);<br>```",
    "quesType": "mcq",
    "op1": "array",
    "op2": "[]",
    "op3": "object",
    "op4": "Error",
    "ans": "array"
  },
  {
    "ques": "Printed?<br><br>```php<br>echo gettype(\"abc\");<br>```",
    "quesType": "mcq",
    "op1": "string",
    "op2": "abc",
    "op3": "Error",
    "op4": "int",
    "ans": "string"
  },
  {
    "ques": "```php\n$x = \"5\" + \"5\";\necho $x;\n```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "```php\n$x = \"5\" . \"5\";\necho $x;\n```",
    "quesType": "fill",
    "ans": "55"
  },
  {
    "ques": "```php\necho (int) \"5abc\";\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```php\n$x = [];\necho gettype($x);\n```",
    "quesType": "fill",
    "ans": "array"
  },
  {
    "ques": "```php\n$x = \"abc\";\necho gettype($x);\n```",
    "quesType": "fill",
    "ans": "string"
  },
  {
    "ques": "```php\n$x = null;\necho isset($x) ? 1 : 0;\n```",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "```php\n$x = \"a\";\n$$x = \"b\";\necho $a;\n```",
    "quesType": "fill",
    "ans": "b"
  },
  {
    "ques": "```php\n$a = [1,2];\n$b = $a;\n$b[] = 3;\necho count($a);\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```php\n$a = [1];\n$b =& $a;\n$b[] = 2;\necho count($a);\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```php\n$x = [\"a\"=>1];\necho isset($x[\"b\"]) ? 1 : 0;\n```",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "```php\n$x = [1,2,3];\necho end($x);\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```php\n$x = [\"a\"=>1, \"b\"=>2];\necho current($x);\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```php\n$x = [\"a\"=>1, \"b\"=>2];\nnext($x);\necho current($x);\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```php\necho (5 <=> 5);\n```",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "```php\necho (4 <=> 5);\n```",
    "quesType": "fill",
    "ans": "-1"
  },
  {
    "ques": "```php\necho (6 <=> 5);\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```php\n$x = [\"a\", \"b\"];\necho in_array(\"b\", $x) ? 1 : 0;\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```php\necho implode(\",\", [1,2,3]);\n```",
    "quesType": "fill",
    "ans": "1,2,3"
  },
  {
    "ques": "```php\necho json_encode([\"a\"=>1]);\n```",
    "quesType": "fill",
    "ans": "{\"a\":1}"
  },
  {
    "ques": "```php\nfunction f($x = 5) { return $x; }\necho f();\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```php\n$x = function() { return 7; };\necho $x();\n```",
    "quesType": "fill",
    "ans": "7"
  },
  {
    "ques": "```php\nclass A { const X = 9; }\necho A::X;\n```",
    "quesType": "fill",
    "ans": "9"
  },
  {
    "ques": "```php\n$x = \"abc\";\necho substr($x, -1);\n```",
    "quesType": "fill",
    "ans": "c"
  },
  {
    "ques": "```php\necho date(\"Y\", strtotime(\"1999-12-31\"));\n```",
    "quesType": "fill",
    "ans": "1999"
  },
  {
    "ques": "```php\necho intval(\"9xyz\");\n```",
    "quesType": "fill",
    "ans": "9"
  },
  {
    "ques": "```php\necho (int) true;\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```php\necho (int) false;\n```",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "```php\n$x = \"hello\";\necho strtoupper($x);\n```",
    "quesType": "fill",
    "ans": "HELLO"
  },
  {
    "ques": "```php\n$x = [1,2,3];\narray_pop($x);\necho count($x);\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```php\n$x = [1,2,3];\narray_shift($x);\necho count($x);\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "What is the output?<br><br>```php\n$x = [\"1\" => \"a\", \"01\" => \"b\"]; echo count($x);\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "1",
    "op3": "0",
    "op4": "Error",
    "ans": "1"
  },
  {
    "ques": "Output?<br><br>```php\n$a = 0; if($a = 1) echo \"yes\"; else echo \"no\";\n```",
    "quesType": "mcq",
    "op1": "yes",
    "op2": "no",
    "op3": "0",
    "op4": "1",
    "ans": "yes"
  },
  {
    "ques": "Printed?<br><br>```php\n$a = 0; if($a == 1) echo \"yes\"; else echo \"no\";\n```",
    "quesType": "mcq",
    "op1": "no",
    "op2": "yes",
    "op3": "0",
    "op4": "1",
    "ans": "no"
  },
  {
    "ques": "Echo?<br><br>```php\necho (\"5\" == 5) ? \"yes\" : \"no\";\n```",
    "quesType": "mcq",
    "op1": "yes",
    "op2": "no",
    "op3": "Error",
    "op4": "5",
    "ans": "yes"
  },
  {
    "ques": "Output?<br><br>```php\necho (\"5\" === 5) ? \"yes\" : \"no\";\n```",
    "quesType": "mcq",
    "op1": "no",
    "op2": "yes",
    "op3": "5",
    "op4": "Error",
    "ans": "no"
  },
  {
    "ques": "Printed?<br><br>```php\n$x = \"abc\"; echo strlen($x);\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "2",
    "op3": "1",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "Echo?<br><br>```php\necho strtoupper(\"hi\");\n```",
    "quesType": "mcq",
    "op1": "HI",
    "op2": "hi",
    "op3": "Hi",
    "op4": "Error",
    "ans": "HI"
  },
  {
    "ques": "Output?<br><br>```php\n$x = 5; $x += 5; echo $x;\n```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "5",
    "op3": "0",
    "op4": "55",
    "ans": "10"
  },
  {
    "ques": "Printed?<br><br>```php\necho round(2.5);\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "2.5",
    "op4": "Error",
    "ans": "3"
  },
  {
    "ques": "Output?<br><br>```php\n$x = 5; echo ++$x;\n```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "5",
    "op3": "7",
    "op4": "0",
    "ans": "6"
  },
  {
    "ques": "Printed?<br><br>```php\n$x = 5; echo $x++;\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "6",
    "op3": "0",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "Echo?<br><br>```php\n$x = [1, 2, 3]; echo array_sum($x);\n```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "5",
    "op3": "7",
    "op4": "0",
    "ans": "6"
  },
  {
    "ques": "Output?<br><br>```php\n$x = [1,2,3]; echo count($x);\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "2",
    "op3": "1",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "Printed?<br><br>```php\n$x = [1,2]; array_push($x,3); echo count($x);\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "2",
    "op3": "1",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "Echo?<br><br>```php\n$x = 5; $y = &$x; $y = 10; echo $x;\n```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "5",
    "op3": "0",
    "op4": "Error",
    "ans": "10"
  },
  {
    "ques": "Output?<br><br>```php\n$x = \"abc\"; echo $x[1];\n```",
    "quesType": "mcq",
    "op1": "b",
    "op2": "a",
    "op3": "c",
    "op4": "Error",
    "ans": "b"
  },
  {
    "ques": "Printed?<br><br>```php\necho ord(\"A\");\n```",
    "quesType": "mcq",
    "op1": "65",
    "op2": "97",
    "op3": "66",
    "op4": "Error",
    "ans": "65"
  },
  {
    "ques": "Echo?<br><br>```php\necho chr(66);\n```",
    "quesType": "mcq",
    "op1": "B",
    "op2": "A",
    "op3": "C",
    "op4": "Error",
    "ans": "B"
  },
  {
    "ques": "Output?<br><br>```php\n$x = \"5.5\"; echo (int)$x;\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "6",
    "op3": "5.5",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "Printed?<br><br>```php\n$x = [1,2,3]; echo array_pop($x);\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "2",
    "op3": "1",
    "op4": "Error",
    "ans": "3"
  },
  {
    "ques": "Echo?<br><br>```php\n$x = [1,2,3]; echo array_shift($x);\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "Error",
    "ans": "1"
  },
  {
    "ques": "Output?<br><br>```php\n$x = \"abc\"; echo strrev($x);\n```",
    "quesType": "mcq",
    "op1": "cba",
    "op2": "abc",
    "op3": "bca",
    "op4": "Error",
    "ans": "cba"
  },
  {
    "ques": "Printed?<br><br>```php\n$x = \"abc\"; echo strpos($x, \"b\");\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "2",
    "op4": "Error",
    "ans": "1"
  },
  {
    "ques": "Echo?<br><br>```php\n$x = \"abc\"; echo substr($x, 1);\n```",
    "quesType": "mcq",
    "op1": "bc",
    "op2": "ab",
    "op3": "ac",
    "op4": "Error",
    "ans": "bc"
  },
  {
    "ques": "Output?<br><br>```php\n$x = \"abc\"; echo strtoupper($x);\n```",
    "quesType": "mcq",
    "op1": "ABC",
    "op2": "abc",
    "op3": "Abc",
    "op4": "Error",
    "ans": "ABC"
  },
  {
    "ques": "Printed?<br><br>```php\n$x = \"ABC\"; echo strtolower($x);\n```",
    "quesType": "mcq",
    "op1": "abc",
    "op2": "ABC",
    "op3": "Abc",
    "op4": "Error",
    "ans": "abc"
  },
  {
    "ques": "Echo?<br><br>```php\n$x = \" abc \"; echo trim($x);\n```",
    "quesType": "mcq",
    "op1": "abc",
    "op2": " abc ",
    "op3": "abc ",
    "op4": " Error",
    "ans": "abc"
  },
  {
    "ques": "Output?<br><br>```php\n$x = \"1,2,3\"; $y = explode(\",\", $x); echo count($y);\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "2",
    "op3": "1",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "```php\n$x = \"123abc\"; echo intval($x);\n```",
    "quesType": "fill",
    "ans": "123"
  },
  {
    "ques": "```php\n$x = \"abc123\"; echo intval($x);\n```",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "```php\necho strlen(\"hello world\");\n```",
    "quesType": "fill",
    "ans": "11"
  },
  {
    "ques": "```php\necho substr(\"hello\", -2);\n```",
    "quesType": "fill",
    "ans": "lo"
  },
  {
    "ques": "```php\n$x = \"  hi  \"; echo trim($x);\n```",
    "quesType": "fill",
    "ans": "hi"
  },
  {
    "ques": "```php\necho str_repeat(\"ab\", 3);\n```",
    "quesType": "fill",
    "ans": "ababab"
  },
  {
    "ques": "```php\n$x = [1,2,3]; echo array_shift($x);\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```php\n$x = [1,2,3]; echo array_pop($x);\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```php\n$x = \"abc\"; echo strrev($x);\n```",
    "quesType": "fill",
    "ans": "cba"
  },
  {
    "ques": "```php\n$x = \"abc\"; echo ord($x);\n```",
    "quesType": "fill",
    "ans": "97"
  },
  {
    "ques": "```php\necho chr(67);\n```",
    "quesType": "fill",
    "ans": "C"
  },
  {
    "ques": "```php\necho number_format(12345.678, 2);\n```",
    "quesType": "fill",
    "ans": "12,345.68"
  },
  {
    "ques": "```php\n$x = \"one,two,three\"; $y = explode(\",\", $x); echo $y[1];\n```",
    "quesType": "fill",
    "ans": "two"
  },
  {
    "ques": "```php\n$x = [\"a\" => 1, \"b\" => 2]; echo json_encode($x);\n```",
    "quesType": "fill",
    "ans": "{\"a\":1,\"b\":2}"
  },
  {
    "ques": "```php\n$x = [1,2,3]; echo serialize($x);\n```",
    "quesType": "fill",
    "ans": "a:3:{i:0;i:1;i:1;i:2;i:2;i:3;}"
  },
  {
    "ques": "```php\n$x = \"abc\"; echo strtoupper($x);\n```",
    "quesType": "fill",
    "ans": "ABC"
  },
  {
    "ques": "```php\n$x = \"ABC\"; echo strtolower($x);\n```",
    "quesType": "fill",
    "ans": "abc"
  },
  {
    "ques": "```php\n$x = [\"one\", \"two\", \"three\"]; echo implode(\"-\", $x);\n```",
    "quesType": "fill",
    "ans": "one-two-three"
  },
  {
    "ques": "```php\n$x = [\"a\"=>1]; echo isset($x[\"b\"])?1:0;\n```",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "```php\n$x = [1,2,3]; echo count($x);\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```php\n$x = [\"a\",\"b\"]; echo in_array(\"c\", $x)?1:0;\n```",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "```php\n$x = 5; $y = &$x; $y = 10; echo $x;\n```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "```php\n$x = [1,2,3]; sort($x); echo $x[0];\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```php\n$x = [3,1,2]; sort($x); echo implode($x);\n```",
    "quesType": "fill",
    "ans": "123"
  },
  {
    "ques": "```php\n$x = [\"a\"=>1, \"b\"=>2]; ksort($x); echo key($x);\n```",
    "quesType": "fill",
    "ans": "a"
  },
  {
    "ques": "```php\n$x = \"Hello\"; echo strpos($x, \"l\");\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```php\n$x = 5; echo pow($x, 2);\n```",
    "quesType": "fill",
    "ans": "25"
  },
  {
    "ques": "```php\n$x = -5; echo abs($x);\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```php\n$x = 5.6; echo floor($x);\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```php\n$x = 5.6; echo ceil($x);\n```",
    "quesType": "fill",
    "ans": "6"
  }

]


let phpIncorrectAnswers = [];

let phpTimerId = "";
let phpSkip = document.getElementById("phpSkip");
let codingphpQues = document.getElementById("codingphpQues");
let mcqphp = document.getElementById("mcqphp");
let phpQuestionNumber = document.getElementById("phpQuestionNumber");
let phpQuestionCount = 2;
let phpScore = 0;
let phpScoreDisplay = document.getElementById("phpScoreDisplay");
let phpScoreShow = document.getElementById("phpScoreShow");
let phpSkip2 = document.getElementById("phpSkip2");

let phpFillAns = document.getElementById("phpFillAns");
let phpStatus1 = document.getElementById("phpStatus1");
let phpStatus2 = document.getElementById("phpStatus2");
let phpStatus3 = document.getElementById("phpStatus3");
let phpCheckFill = document.getElementById("phpCheckFill");

let codingResultphp = document.getElementById("codingResultphp");

let phpIncorrectAnswersDisplay = document.getElementById("phpIncorrectAnswersDisplay");
let phpScoreBelow70 = document.getElementById("phpScoreBelow70");
let phpScore100 = document.getElementById("phpScore100");

let phpResult1 = document.getElementById("phpResult1");
let phpResult2 = document.getElementById("phpResult2");
let phpResult3 = document.getElementById("phpResult3");
let phpResult4 = document.getElementById("phpResult4");
let phpResult5 = document.getElementById("phpResult5");
let phpBg1 = document.getElementById("phpBg1");

function codingphpStart(){
codingphpHide.classList.add("d-none");
codingphpShow.classList.remove("d-none");

let fillBlankphp = document.getElementById("fillBlankphp");
let op1php = document.getElementById("op1php");
let op2php = document.getElementById("op2php");
let op3php = document.getElementById("op3php");
let op4php = document.getElementById("op4php");

let phpFillAns = document.getElementById("phpFillAns");
let phpStatus1 = document.getElementById("phpStatus1");
let phpStatus2 = document.getElementById("phpStatus2");
let phpStatus3 = document.getElementById("phpStatus3");
let phpCheckFill = document.getElementById("phpCheckFill");

phpFillAns.disabled = false;
phpStatus1.classList.remove("d-none");
phpStatus2.classList.add("d-none");
phpStatus3.classList.add("d-none");
phpFillAns.value = "";
phpSkip2.textContent = "Skip";
phpSkip2.style.backgroundColor = "orange";
phpSkip2.style.borderColor = "orange";

phpSkip.textContent = "Skip";
phpSkip.style.backgroundColor = "orange";
phpSkip.style.borderColor = "orange";
phpScoreShow.textContent = "";
phpTimer.style.color = "black";

if (phpLevel === 1) {
  let phpRandom = Math.floor(Math.random() * codingphp1Arr.length);
  let y = codingphp1Arr[phpRandom];
  phpTimer.textContent = "20";
  phpTime = 20;

  phpTimerId = setInterval(function () {
    phpTime = phpTime - 1;
    if (phpTime == 0) {
      clearInterval(phpTimerId);
      phpQuestionNumber.textContent = "Question:" + phpQuestionCount + "/10";
      phpQuestionCount = phpQuestionCount + 1;
      phpTime = 20;
      codingphpStart();
    }
    if (phpTime <= 5) {
      phpTimer.style.color = "red";
      phpTimer.textContent = phpTime;
    } else {
      phpTimer.textContent = phpTime;
    }
  }, 1000);

  if (phpQuestionCount == 12) {
    clearInterval(phpTimerId);
    mcqphp.classList.add("d-none");
    document.getElementById("phpScoreEnd").textContent = phpScoreDisplay.textContent;
    fillBlankphp.classList.add("d-none");
    codingphpShow.classList.add("d-none");
    codingResultphp.classList.remove("d-none");

    if (phpScore < 70) {
      phpScoreBelow70.classList.remove("d-none");
      phpScore100.classList.add("d-none");
      sectionCodingphp.classList.add("back15");

      phpResult1.textContent = "Test finished!!";
      phpResult2.textContent = "😓 Oops! Not quite right.";
      phpResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      phpResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      phpIncorrectAnswersDisplay.appendChild(h2);

      for (let z of phpIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        phpIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (phpScore < 100) {
      phpScoreBelow70.classList.remove("d-none");
      phpScore100.classList.add("d-none");
      sectionCodingphp.classList.add("back15");

      phpResult1.textContent = "Test finished!!";
      phpResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      phpResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      phpResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      phpIncorrectAnswersDisplay.appendChild(h2);

      for (let z of phpIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        phpIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (phpScore === 100) {
      document.getElementById("sectionCodingphp").classList.add("back14");
      phpScore100.classList.remove("d-none");
      phpScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqphp.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingphpQues.innerHTML = formattedQuestion;

    fillBlankphp.classList.add("d-none");
    op1php.textContent = y.op1;
    op2php.textContent = y.op2;
    op3php.textContent = y.op3;
    op4php.textContent = y.op4;

    const allOps = [op1php, op2php, op3php, op4php];
    allOps.forEach((op, i) => {
      op.onclick = function () {
        allOps.forEach(o => (o.disabled = true));
        clearInterval(phpTimerId);
        phpTime = 20;

        if (op.textContent === y.ans) {
          op.style.backgroundColor = "green";
          phpScore += 10;
          phpScoreShow.textContent = "+10";
          phpScoreShow.style.color = "green";
        } else {
          op.style.backgroundColor = "red";
          phpScore -= 5;
          phpScoreShow.textContent = "-5";
          phpScoreShow.style.color = "red";
          let wrong_answer = { ques: y.ques, correct: y.ans, wrong: op.textContent };
          phpIncorrectAnswers.push(wrong_answer);
        }

        phpScoreDisplay.textContent = "Score: " + phpScore + "/100";

        phpSkip.textContent = "Next";
        phpSkip.style.backgroundColor = "#23ebdd";
        phpSkip.style.borderColor = "#23ebdd";

        phpSkip.onclick = function () {
          phpQuestionNumber.textContent = "Question:" + phpQuestionCount + "/10";
          phpQuestionCount += 1;
          allOps.forEach(o => {
            o.disabled = false;
            o.style.backgroundColor = "white";
          });
          codingphpStart();
        };
      };
    });

    phpSkip.onclick = function () {
      clearInterval(phpTimerId);
      phpTime = 20;
      phpQuestionNumber.textContent = "Question:" + phpQuestionCount + "/10";
      phpQuestionCount += 1;
      allOps.forEach(o => {
        o.disabled = false;
        o.style.backgroundColor = "white";
      });
      let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
      phpIncorrectAnswers.push(wrong_answer);
      codingphpStart();
    };
  } 
  else {
    mcqphp.classList.add("d-none");
    fillBlankphp.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingphpQues.innerHTML = formattedQuestion;

    phpCheckFill.onclick = function () {
      clearInterval(phpTimerId);
      phpCheckFill.disabled = false;
      phpSkip2.textContent = "Next";
      phpSkip2.style.backgroundColor = "#23ebdd";
      phpSkip2.style.borderColor = "#23ebdd";
      phpFillAns.disabled = true;

      if (phpFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        phpStatus1.classList.add("d-none");
        phpStatus2.classList.remove("d-none");

        phpScore += 10;
        phpScoreShow.textContent = "+10";
        phpScoreShow.style.color = "green";
      } else {
        phpStatus1.classList.add("d-none");
        phpStatus3.classList.remove("d-none");

        phpScore -= 5;
        phpScoreShow.textContent = "-5";
        phpScoreShow.style.color = "red";

        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: phpFillAns.value };
        phpIncorrectAnswers.push(wrong_answer);
      }

      phpScoreDisplay.textContent = "Score: " + phpScore + "/100";
    };

    phpSkip2.onclick = function () {
      if (phpFillAns.value === "") {
        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
        phpIncorrectAnswers.push(wrong_answer);
      }
      clearInterval(phpTimerId);
      phpTime = 20;
      phpQuestionNumber.textContent = "Question:" + phpQuestionCount + "/10";
      phpQuestionCount += 1;
      codingphpStart();
    };
  }
}
else if (phpLevel === 2) {
  let phpRandom = Math.floor(Math.random() * codingphp2Arr.length);
  let y = codingphp2Arr[phpRandom];
  phpTimer.textContent = "25";
  phpTime = 25;

  phpTimerId = setInterval(function () {
    phpTime = phpTime - 1;
    if (phpTime == 0) {
      clearInterval(phpTimerId);
      phpQuestionNumber.textContent = "Question:" + phpQuestionCount + "/10";
      phpQuestionCount = phpQuestionCount + 1;
      phpTime = 25;
      codingphpStart();
    }
    if (phpTime <= 5) {
      phpTimer.style.color = "red";
      phpTimer.textContent = phpTime;
    } else {
      phpTimer.textContent = phpTime;
    }
  }, 1000);

  if (phpQuestionCount == 12) {
    clearInterval(phpTimerId);
    mcqphp.classList.add("d-none");
    document.getElementById("phpScoreEnd").textContent = phpScoreDisplay.textContent;
    fillBlankphp.classList.add("d-none");
    codingphpShow.classList.add("d-none");
    codingResultphp.classList.remove("d-none");

    if (phpScore < 70) {
      phpScoreBelow70.classList.remove("d-none");
      phpScore100.classList.add("d-none");
      sectionCodingphp.classList.add("back15");

      phpResult1.textContent = "Test finished!!";
      phpResult2.textContent = "😓 Oops! Not quite right.";
      phpResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      phpResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      phpIncorrectAnswersDisplay.appendChild(h2);

      for (let z of phpIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        phpIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (phpScore < 100) {
      phpScoreBelow70.classList.remove("d-none");
      phpScore100.classList.add("d-none");
      sectionCodingphp.classList.add("back15");

      phpResult1.textContent = "Test finished!!";
      phpResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      phpResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      phpResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      phpIncorrectAnswersDisplay.appendChild(h2);

      for (let z of phpIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        phpIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (phpScore === 100) {
      document.getElementById("sectionCodingphp").classList.add("back14");
      phpScore100.classList.remove("d-none");
      phpScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqphp.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingphpQues.innerHTML = formattedQuestion;
    fillBlankphp.classList.add("d-none");
    op1php.textContent = y.op1;
    op2php.textContent = y.op2;
    op3php.textContent = y.op3;
    op4php.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(phpTimerId);
      phpTime = 25;
      phpSkip.textContent = "Next";
      phpSkip.style.backgroundColor = "#23ebdd";
      phpSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        phpScore += 10;
        phpScoreShow.textContent = "+10";
        phpScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        phpScore -= 5;
        phpScoreShow.textContent = "-5";
        phpScoreShow.style.color = "red";
        phpIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      phpScoreDisplay.textContent = "Score: " + phpScore + "/100";
    }

    op1php.onclick = () => handleOptionClick(op1php, [op2php, op3php, op4php]);
    op2php.onclick = () => handleOptionClick(op2php, [op1php, op3php, op4php]);
    op3php.onclick = () => handleOptionClick(op3php, [op1php, op2php, op4php]);
    op4php.onclick = () => handleOptionClick(op4php, [op1php, op2php, op3php]);

    phpSkip.onclick = function () {
      clearInterval(phpTimerId);
      phpTime = 25;
      phpQuestionNumber.textContent = "Question:" + phpQuestionCount + "/10";
      phpQuestionCount++;
      [op1php, op2php, op3php, op4php].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      phpIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingphpStart();
    };
  }
  else {
    mcqphp.classList.add("d-none");
    fillBlankphp.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingphpQues.innerHTML = formattedQuestion;

    phpCheckFill.disabled = false;
    phpFillAns.disabled = false;
    phpFillAns.value = "";
    phpStatus1.classList.remove("d-none");
    phpStatus2.classList.add("d-none");
    phpStatus3.classList.add("d-none");
    phpScoreShow.textContent = "";

    phpCheckFill.onclick = function () {
      clearInterval(phpTimerId);
      phpCheckFill.disabled = true;
      phpSkip2.textContent = "Next";
      phpSkip2.style.backgroundColor = "#23ebdd";
      phpSkip2.style.borderColor = "#23ebdd";
      phpFillAns.disabled = true;

      if (phpFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        phpStatus1.classList.add("d-none");
        phpStatus2.classList.remove("d-none");
        phpScore += 10;
        phpScoreShow.textContent = "+10";
        phpScoreShow.style.color = "green";
      } else {
        phpStatus1.classList.add("d-none");
        phpStatus3.classList.remove("d-none");
        phpScore -= 5;
        phpScoreShow.textContent = "-5";
        phpScoreShow.style.color = "red";
        phpIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: phpFillAns.value });
      }
      phpScoreDisplay.textContent = "Score: " + phpScore + "/100";
    };

    phpSkip2.onclick = function () {
      if (phpFillAns.value === "") {
        phpIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      }
      clearInterval(phpTimerId);
      phpTime = 25;
      phpQuestionNumber.textContent = "Question:" + phpQuestionCount + "/10";
      phpQuestionCount++;
      codingphpStart();
    };
  }
}
else if (phpLevel === 3) {
  let phpRandom = Math.floor(Math.random() * codingphp3Arr.length);
  let y = codingphp3Arr[phpRandom];
  phpTimer.textContent = "30";
  phpTime = 30;

  phpTimerId = setInterval(function () {
    phpTime = phpTime - 1;
    if (phpTime == 0) {
      clearInterval(phpTimerId);
      phpQuestionNumber.textContent = "Question:" + phpQuestionCount + "/10";
      phpQuestionCount = phpQuestionCount + 1;
      phpTime = 30;
      codingphpStart();
    }
    if (phpTime <= 5) {
      phpTimer.style.color = "red";
      phpTimer.textContent = phpTime;
    } else {
      phpTimer.textContent = phpTime;
    }
  }, 1000);

  if (phpQuestionCount == 12) {
    clearInterval(phpTimerId);
    mcqphp.classList.add("d-none");
    document.getElementById("phpScoreEnd").textContent = phpScoreDisplay.textContent;
    fillBlankphp.classList.add("d-none");
    codingphpShow.classList.add("d-none");
    codingResultphp.classList.remove("d-none");

    if (phpScore < 70) {
      phpScoreBelow70.classList.remove("d-none");
      phpScore100.classList.add("d-none");
      sectionCodingphp.classList.add("back15");

      phpResult1.textContent = "Test finished!!";
      phpResult2.textContent = "😓 Oops! Not quite right.";
      phpResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      phpResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      phpIncorrectAnswersDisplay.appendChild(h2);

      for (let z of phpIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        phpIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (phpScore < 100) {
      phpScoreBelow70.classList.remove("d-none");
      phpScore100.classList.add("d-none");
      sectionCodingphp.classList.add("back15");

      phpResult1.textContent = "Test finished!!";
      phpResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      phpResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      phpResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      phpIncorrectAnswersDisplay.appendChild(h2);

      for (let z of phpIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        phpIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (phpScore === 100) {
      document.getElementById("sectionCodingphp").classList.add("back14");
      phpScore100.classList.remove("d-none");
      phpScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqphp.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingphpQues.innerHTML = formattedQuestion;
    fillBlankphp.classList.add("d-none");
    op1php.textContent = y.op1;
    op2php.textContent = y.op2;
    op3php.textContent = y.op3;
    op4php.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(phpTimerId);
      phpTime = 30;
      phpSkip.textContent = "Next";
      phpSkip.style.backgroundColor = "#23ebdd";
      phpSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        phpScore += 10;
        phpScoreShow.textContent = "+10";
        phpScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        phpScore -= 5;
        phpScoreShow.textContent = "-5";
        phpScoreShow.style.color = "red";
        phpIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      phpScoreDisplay.textContent = "Score: " + phpScore + "/100";
    }

    op1php.onclick = () => handleOptionClick(op1php, [op2php, op3php, op4php]);
    op2php.onclick = () => handleOptionClick(op2php, [op1php, op3php, op4php]);
    op3php.onclick = () => handleOptionClick(op3php, [op1php, op2php, op4php]);
    op4php.onclick = () => handleOptionClick(op4php, [op1php, op2php, op3php]);

    phpSkip.onclick = function () {
      clearInterval(phpTimerId);
      phpTime = 30;
      phpQuestionNumber.textContent = "Question:" + phpQuestionCount + "/10";
      phpQuestionCount++;
      [op1php, op2php, op3php, op4php].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      phpIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingphpStart();
    };
  }
   else {
    mcqphp.classList.add("d-none");
    fillBlankphp.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingphpQues.innerHTML = formattedQuestion;

    phpCheckFill.disabled = false;
    phpFillAns.disabled = false;
    phpFillAns.value = "";
    phpStatus1.classList.remove("d-none");
    phpStatus2.classList.add("d-none");
    phpStatus3.classList.add("d-none");
    phpScoreShow.textContent = "";

    phpCheckFill.onclick = function () {
      clearInterval(phpTimerId);
      phpCheckFill.disabled = true;
      phpSkip2.textContent = "Next";
      phpSkip2.style.backgroundColor = "#23ebdd";
      phpSkip2.style.borderColor = "#23ebdd";
      phpFillAns.disabled = true;

      if (phpFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        phpStatus1.classList.add("d-none");
        phpStatus2.classList.remove("d-none");
        phpScore += 10;
        phpScoreShow.textContent = "+10";
        phpScoreShow.style.color = "green";
      } else {
        phpStatus1.classList.add("d-none");
        phpStatus3.classList.remove("d-none");
        phpScore -= 5;
        phpScoreShow.textContent = "-5";
        phpScoreShow.style.color = "red";
        phpIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: phpFillAns.value });
      }
      phpScoreDisplay.textContent = "Score: " + phpScore + "/100";
    };

    phpSkip2.onclick = function () {
      if (phpFillAns.value === "") {
        phpIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      }
      clearInterval(phpTimerId);
      phpTime = 30;
      phpQuestionNumber.textContent = "Question:" + phpQuestionCount + "/10";
      phpQuestionCount++;
      codingphpStart();
    };
  }
}


}
function resetCodingphp() {
  document.getElementById("codingphpShow").classList.add("d-none");
  document.getElementById("codingResultphp").classList.add("d-none");
  document.getElementById("codingphpHide").classList.remove("d-none");

  document.getElementById("phpQuestionNumber").innerText = "Question: 1/10";
  document.getElementById("phpScoreDisplay").innerText = "Score: 0/100";
  document.getElementById("phpScoreShow").innerText = "";
  document.getElementById("phpTimer").innerText = "00";
  document.getElementById("codingphpQues").innerText = "";

  document.getElementById("op1php").innerText = "option1";
  document.getElementById("op2php").innerText = "option2";
  document.getElementById("op3php").innerText = "option3";
  document.getElementById("op4php").innerText = "option4";

  phpIncorrectAnswers = [];
  document.getElementById("phpIncorrectAnswersDisplay").innerHTML = "";

  phpScore100.classList.add("d-none");
  phpScoreBelow70.classList.add("d-none");

  phpResult1.textContent = "";
  phpResult2.textContent = "";
  phpResult3.src = "";
  phpResult4.textContent = "";

  sectionCodingphp.classList.remove("back14");
  sectionCodingphp.classList.remove("back15");

  document.getElementById("phpFillAns").value = "";
  document.getElementById("fillBlankphp").style.display = "none";
  document.getElementById("mcqphp").style.display = "block";

  document.getElementById("phpStatus1").classList.remove("d-none");
  document.getElementById("phpStatus2").classList.add("d-none");
  document.getElementById("phpStatus3").classList.add("d-none");

  if (typeof phpTimerId !== "undefined") {
    clearInterval(phpTimerId);
  }
  phpTime = 20;
  phpQuestionCount = 2;
  phpScore = 0;
}

function phpResetLevel() {
  phpButton1.disabled = false;
  phpButton2.disabled = false;
  phpButton3.disabled = false;
  phpButton.classList.add("d-none");
  phpIncorrectAnswers = [];
}


// ruby 


let rubyButton = document.getElementById("rubyButton");
let rubyButton1 = document.getElementById("rubyButton1");
let rubyButton2 = document.getElementById("rubyButton2");
let rubyButton3 = document.getElementById("rubyButton3");
let rubyLevel = 0;
let rubyCodingTest = document.getElementById("rubyCodingTest");
let rubyTimer = document.getElementById("rubyTimer");

rubyButton1.onclick = function () {
  rubyButton2.disabled = true;
  rubyButton3.disabled = true;
  rubyLevel = 1;

  rubyButton.classList.remove("d-none");
  rubyButton.classList.add("d-block");
};

rubyButton2.onclick = function () {
  rubyButton1.disabled = true;
  rubyButton3.disabled = true;
  rubyLevel = 2;

  rubyButton.classList.remove("d-none");
  rubyButton.classList.add("d-block");
};

rubyButton3.onclick = function () {
  rubyButton2.disabled = true;
  rubyButton1.disabled = true;
  rubyLevel = 3;

  rubyButton.classList.remove("d-none");
  rubyButton.classList.add("d-block");
};

let rubyTime = 0;

let codingrubyShow = document.getElementById("codingrubyShow");
let codingrubyHide = document.getElementById("codingrubyHide");
let codingrubyBack = document.getElementById("codingrubyBack");

codingrubyBack.onclick = function () {
  codingrubyShow.classList.add("d-none");
  codingrubyHide.classList.remove("d-none");
};

let codingruby1Arr=[
  {
    "ques": "What is the output?<br><br>```ruby<br>x = 5<br>y = x * 2<br>puts y<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "10",
    "op3": "2",
    "op4": "0",
    "ans": "10"
  },
  {
    "ques": "What does this print?<br><br>```ruby<br>puts \"Hello\" + \" World\"<br>```",
    "quesType": "mcq",
    "op1": "HelloWorld",
    "op2": "Hello World",
    "op3": "Hello",
    "op4": "World",
    "ans": "Hello World"
  },
  {
    "ques": "What is the value?<br><br>```ruby<br>x = [1,2,3]<br>puts x.length<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "1",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "Which is true?<br><br>```ruby<br>x = nil<br>puts x.nil?<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "0",
    "ans": "true"
  },
  {
    "ques": "Output?<br><br>```ruby<br>puts 5 == 5<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Result?<br><br>```ruby<br>puts 5.eql?(5.0)<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "false"
  },
  {
    "ques": "What will be printed?<br><br>```ruby<br>puts \"Ruby\".upcase<br>```",
    "quesType": "mcq",
    "op1": "ruby",
    "op2": "Ruby",
    "op3": "RUBY",
    "op4": "Error",
    "ans": "RUBY"
  },
  {
    "ques": "Output?<br><br>```ruby<br>puts \"Hello\".length<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "4",
    "op3": "6",
    "op4": "0",
    "ans": "5"
  },
  {
    "ques": "What is printed?<br><br>```ruby<br>arr = [1,2,3]<br>puts arr[1]<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "2"
  },
  {
    "ques": "Which value?<br><br>```ruby<br>puts \"abc\" == \"abc\"<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Output?<br><br>```ruby<br>puts 5 <=> 5<br>```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "-1",
    "op4": "Error",
    "ans": "0"
  },
  {
    "ques": "What does it output?<br><br>```ruby<br>puts 5.to_s<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "\"5\"",
    "op3": "5.0",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "Which is printed?<br><br>```ruby<br>puts \"test\".include?(\"es\")<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Output?<br><br>```ruby<br>puts [1,2,3].first<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "1"
  },
  {
    "ques": "What is shown?<br><br>```ruby<br>puts [1,2,3].last<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "Result?<br><br>```ruby<br>puts \"abc\" + \"def\"<br>```",
    "quesType": "mcq",
    "op1": "abcdef",
    "op2": "abc def",
    "op3": "abc",
    "op4": "def",
    "ans": "abcdef"
  },
  {
    "ques": "Output?<br><br>```ruby<br>puts \"Hi\" * 2<br>```",
    "quesType": "mcq",
    "op1": "Hi",
    "op2": "HiHi",
    "op3": "Error",
    "op4": "2Hi",
    "ans": "HiHi"
  },
  {
    "ques": "Prints?<br><br>```ruby<br>puts 2 ** 3<br>```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "8",
    "op3": "9",
    "op4": "2",
    "ans": "8"
  },
  {
    "ques": "What is output?<br><br>```ruby<br>puts 10 / 2<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "2",
    "op3": "0",
    "op4": "10",
    "ans": "5"
  },
  {
    "ques": "What does it echo?<br><br>```ruby<br>puts \"ruby\".capitalize<br>```",
    "quesType": "mcq",
    "op1": "ruby",
    "op2": "Ruby",
    "op3": "RUBY",
    "op4": "error",
    "ans": "Ruby"
  },
  {
    "ques": "```ruby\nputs \"Ruby\".downcase\n```",
    "quesType": "fill",
    "ans": "ruby"
  },
  {
    "ques": "```ruby\nputs [1,2,3].sum\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```ruby\nputs \"Hello\".length\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```ruby\nputs 2 ** 4\n```",
    "quesType": "fill",
    "ans": "16"
  },
  {
    "ques": "```ruby\nputs \"test\".reverse\n```",
    "quesType": "fill",
    "ans": "tset"
  },
  {
    "ques": "```ruby\nputs \"abc\".upcase\n```",
    "quesType": "fill",
    "ans": "ABC"
  },
  {
    "ques": "```ruby\nputs 9 % 2\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```ruby\nputs 7 * 3\n```",
    "quesType": "fill",
    "ans": "21"
  },
  {
    "ques": "```ruby\nputs [1,2,3].include?(2)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```ruby\nputs [1,2,3].size\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```ruby\nputs \"abc\"[0]\n```",
    "quesType": "fill",
    "ans": "a"
  },
  {
    "ques": "```ruby\nputs \"Hello World\".split(\" \").first\n```",
    "quesType": "fill",
    "ans": "Hello"
  },
  {
    "ques": "```ruby\nputs \"Ruby\".gsub(\"R\", \"D\")\n```",
    "quesType": "fill",
    "ans": "Duby"
  },
  {
    "ques": "```ruby\nputs [1,2,3].push(4).inspect\n```",
    "quesType": "fill",
    "ans": "[1, 2, 3, 4]"
  },
  {
    "ques": "```ruby\nputs \"123\".to_i + 1\n```",
    "quesType": "fill",
    "ans": "124"
  },
  {
    "ques": "```ruby\nputs \"5\".to_f * 2\n```",
    "quesType": "fill",
    "ans": "10.0"
  },
  {
    "ques": "```ruby\nputs \"abc\".chars.count\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```ruby\nputs \"   text   \".strip\n```",
    "quesType": "fill",
    "ans": "text"
  },
  {
    "ques": "```ruby\nputs [1,2,3].min\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```ruby\nputs [1,2,3].max\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "Which symbol is used to define a block in Ruby?",
    "quesType": "mcq",
    "op1": "{} or do..end",
    "op2": "[]",
    "op3": "<>",
    "op4": "()",
    "ans": "{} or do..end"
  },
  {
    "ques": "Which method converts a string to an integer?",
    "quesType": "mcq",
    "op1": "to_i",
    "op2": "to_int",
    "op3": "int()",
    "op4": "convert",
    "ans": "to_i"
  },
  {
    "ques": "Which is a valid comment in Ruby?",
    "quesType": "mcq",
    "op1": "// comment",
    "op2": "/* comment */",
    "op3": "# comment",
    "op4": "-- comment",
    "ans": "# comment"
  },
  {
    "ques": "Which keyword defines a class in Ruby?",
    "quesType": "mcq",
    "op1": "define",
    "op2": "function",
    "op3": "class",
    "op4": "object",
    "ans": "class"
  },
  {
    "ques": "How do you define a method in Ruby?",
    "quesType": "mcq",
    "op1": "function name",
    "op2": "method name",
    "op3": "def name",
    "op4": "define name",
    "ans": "def name"
  },
  {
    "ques": "Which of these is truthy in Ruby?",
    "quesType": "mcq",
    "op1": "nil",
    "op2": "false",
    "op3": "0",
    "op4": "None",
    "ans": "0"
  },
  {
    "ques": "Which one is falsey in Ruby?",
    "quesType": "mcq",
    "op1": "false",
    "op2": "0",
    "op3": "empty string",
    "op4": "empty array",
    "ans": "false"
  },
  {
    "ques": "What is the default object in Ruby?",
    "quesType": "mcq",
    "op1": "nil",
    "op2": "Object",
    "op3": "self",
    "op4": "main",
    "ans": "main"
  },
  {
    "ques": "Which is used for string interpolation?",
    "quesType": "mcq",
    "op1": "' '",
    "op2": "\" \"",
    "op3": "` `",
    "op4": "## ##",
    "ans": "\" \""
  },
  {
    "ques": "Which method checks if a variable is nil?",
    "quesType": "mcq",
    "op1": "empty?",
    "op2": "nil?",
    "op3": "zero?",
    "op4": "null?",
    "ans": "nil?"
  },
  {
    "ques": "What is the extension of a Ruby file?",
    "quesType": "mcq",
    "op1": ".rb",
    "op2": ".ruby",
    "op3": ".py",
    "op4": ".r",
    "ans": ".rb"
  },
  {
    "ques": "Which method stops a loop?",
    "quesType": "mcq",
    "op1": "break",
    "op2": "stop",
    "op3": "exit",
    "op4": "halt",
    "ans": "break"
  },
  {
    "ques": "What does `gets` do?",
    "quesType": "mcq",
    "op1": "Prints output",
    "op2": "Takes input",
    "op3": "Exits program",
    "op4": "Repeats loop",
    "ans": "Takes input"
  },
  {
    "ques": "Which operator is used for range?",
    "quesType": "mcq",
    "op1": ".. and ...",
    "op2": "::",
    "op3": "->",
    "op4": "==>",
    "ans": ".. and ..."
  },
  {
    "ques": "Which method repeats a block n times?",
    "quesType": "mcq",
    "op1": "times",
    "op2": "repeat",
    "op3": "loop",
    "op4": "do",
    "ans": "times"
  },
  {
    "ques": "Which symbol defines a symbol literal?",
    "quesType": "mcq",
    "op1": "@",
    "op2": "#",
    "op3": ":",
    "op4": "&",
    "ans": ":"
  },
  {
    "ques": "How do you write an `if` statement?",
    "quesType": "mcq",
    "op1": "if condition then",
    "op2": "if (condition) { }",
    "op3": "if condition end",
    "op4": "if condition",
    "ans": "if condition"
  },
  {
    "ques": "Which keyword ends a block?",
    "quesType": "mcq",
    "op1": "done",
    "op2": "finish",
    "op3": "close",
    "op4": "end",
    "ans": "end"
  },
  {
    "ques": "Which is a valid global variable?",
    "quesType": "mcq",
    "op1": "@var",
    "op2": "$var",
    "op3": "#var",
    "op4": "&var",
    "ans": "$var"
  },
  {
    "ques": "What is the parent class of all classes?",
    "quesType": "mcq",
    "op1": "Object",
    "op2": "Base",
    "op3": "Super",
    "op4": "Root",
    "ans": "Object"
  },
  {
    "ques": "```ruby\n# Ruby uses the keyword ____ to define a method.\n```",
    "quesType": "fill",
    "ans": "def"
  },
  {
    "ques": "```ruby\n# The default output method is ____.\n```",
    "quesType": "fill",
    "ans": "puts"
  },
  {
    "ques": "```ruby\n# A variable starting with $ is a ____ variable.\n```",
    "quesType": "fill",
    "ans": "global"
  },
  {
    "ques": "```ruby\n# The special keyword used to exit a loop is ____.\n```",
    "quesType": "fill",
    "ans": "break"
  },
  {
    "ques": "```ruby\n# The method used to get input is ____.\n```",
    "quesType": "fill",
    "ans": "gets"
  },
  {
    "ques": "```ruby\n# Ruby files have the extension ____.\n```",
    "quesType": "fill",
    "ans": ".rb"
  },
  {
    "ques": "```ruby\n# The `elsif` keyword is used in ____ statements.\n```",
    "quesType": "fill",
    "ans": "if"
  },
  {
    "ques": "```ruby\n# The parent class for all classes in Ruby is ____.\n```",
    "quesType": "fill",
    "ans": "Object"
  },
  {
    "ques": "```ruby\n# To make a symbol we use the ____ character.\n```",
    "quesType": "fill",
    "ans": ":"
  },
  {
    "ques": "```ruby\n# In Ruby, ____ and nil are falsey.\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```ruby\n# `puts` adds a ____ at the end of output.\n```",
    "quesType": "fill",
    "ans": "newline"
  },
  {
    "ques": "```ruby\n# `print` does not add a ____ by default.\n```",
    "quesType": "fill",
    "ans": "newline"
  },
  {
    "ques": "```ruby\n# Ruby uses ____ for multi-line strings.\n```",
    "quesType": "fill",
    "ans": "HEREDOC"
  },
  {
    "ques": "```ruby\n# A block can be written with `do..____`.\n```",
    "quesType": "fill",
    "ans": "end"
  },
  {
    "ques": "```ruby\n# To convert to integer, use ____ method.\n```",
    "quesType": "fill",
    "ans": "to_i"
  },
  {
    "ques": "```ruby\n# To repeat code `n` times use the ____ method.\n```",
    "quesType": "fill",
    "ans": "times"
  },
  {
    "ques": "```ruby\n# The loop that runs forever unless broken is ____.\n```",
    "quesType": "fill",
    "ans": "loop"
  },
  {
    "ques": "```ruby\n# The method to check class of object is ____.\n```",
    "quesType": "fill",
    "ans": "class"
  },
  {
    "ques": "```ruby\n# `==` checks value, `eql?` checks value and ____.\n```",
    "quesType": "fill",
    "ans": "type"
  },
  {
    "ques": "```ruby\n# The `case` statement ends with ____ keyword.\n```",
    "quesType": "fill",
    "ans": "end"
  },
  {
    "ques": "Which method returns the class name of an object?",
    "quesType": "mcq",
    "op1": "type",
    "op2": "kind",
    "op3": "class",
    "op4": "object",
    "ans": "class"
  },
  {
    "ques": "Which is a valid Ruby symbol?",
    "quesType": "mcq",
    "op1": "'abc'",
    "op2": "\"abc\"",
    "op3": ":abc",
    "op4": "@abc",
    "ans": ":abc"
  },
  {
    "ques": "What is the output?<br><br>```ruby<br>puts \"abc\".empty?<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "0",
    "ans": "false"
  },
  {
    "ques": "How do you make a comment in Ruby?",
    "quesType": "mcq",
    "op1": "// comment",
    "op2": "-- comment",
    "op3": "# comment",
    "op4": "/* comment */",
    "ans": "# comment"
  },
  {
    "ques": "What does `nil` represent in Ruby?",
    "quesType": "mcq",
    "op1": "False",
    "op2": "Empty string",
    "op3": "No value",
    "op4": "0",
    "ans": "No value"
  },
  {
    "ques": "Which method converts a string to uppercase?",
    "quesType": "mcq",
    "op1": "upcase",
    "op2": "uppercase",
    "op3": "upper",
    "op4": "toupper",
    "ans": "upcase"
  },
  {
    "ques": "How do you write an array in Ruby?",
    "quesType": "mcq",
    "op1": "{1,2,3}",
    "op2": "(1,2,3)",
    "op3": "[1,2,3]",
    "op4": "<1,2,3>",
    "ans": "[1,2,3]"
  },
  {
    "ques": "Which loop runs a block while condition is true?",
    "quesType": "mcq",
    "op1": "do",
    "op2": "loop",
    "op3": "for",
    "op4": "while",
    "ans": "while"
  },
  {
    "ques": "What is the output?<br><br>```ruby<br>puts \"Ruby\".length<br>```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "4",
    "op3": "5",
    "op4": "6",
    "ans": "4"
  },
  {
    "ques": "What does `elsif` do?",
    "quesType": "mcq",
    "op1": "Ends loop",
    "op2": "Starts function",
    "op3": "Handles else-if",
    "op4": "Nothing",
    "ans": "Handles else-if"
  },
  {
    "ques": "Which is not a data type in Ruby?",
    "quesType": "mcq",
    "op1": "String",
    "op2": "Array",
    "op3": "Map",
    "op4": "Symbol",
    "ans": "Map"
  },
  {
    "ques": "How do you output without newline?",
    "quesType": "mcq",
    "op1": "puts",
    "op2": "print",
    "op3": "echo",
    "op4": "write",
    "ans": "print"
  },
  {
    "ques": "Which operator checks equality?",
    "quesType": "mcq",
    "op1": "=",
    "op2": "==",
    "op3": "===",
    "op4": ":=",
    "ans": "=="
  },
  {
    "ques": "Which method removes whitespace?",
    "quesType": "mcq",
    "op1": "strip",
    "op2": "chop",
    "op3": "cut",
    "op4": "trim",
    "ans": "strip"
  },
  {
    "ques": "Which is a valid instance variable?",
    "quesType": "mcq",
    "op1": "@var",
    "op2": "$var",
    "op3": "#var",
    "op4": ":var",
    "ans": "@var"
  },
  {
    "ques": "What keyword is used to inherit a class?",
    "quesType": "mcq",
    "op1": "extends",
    "op2": "inherits",
    "op3": "super",
    "op4": "<",
    "ans": "<"
  },
  {
    "ques": "Which method checks array length?",
    "quesType": "mcq",
    "op1": "count",
    "op2": "length",
    "op3": "size",
    "op4": "all",
    "ans": "length"
  },
  {
    "ques": "Which method runs code for each element?",
    "quesType": "mcq",
    "op1": "loop",
    "op2": "each",
    "op3": "for",
    "op4": "do",
    "ans": "each"
  },
  {
    "ques": "What does `next` do in loop?",
    "quesType": "mcq",
    "op1": "Stops loop",
    "op2": "Repeats loop",
    "op3": "Skips iteration",
    "op4": "Exits program",
    "ans": "Skips iteration"
  },
  {
    "ques": "What is `self` in Ruby?",
    "quesType": "mcq",
    "op1": "Global",
    "op2": "Current object",
    "op3": "Class name",
    "op4": "Parent class",
    "ans": "Current object"
  },
  {
    "ques": "```ruby\n# A loop that runs forever uses ____ keyword.\n```",
    "quesType": "fill",
    "ans": "loop"
  },
  {
    "ques": "```ruby\n# Strings can be combined with the ____ operator.\n```",
    "quesType": "fill",
    "ans": "+"
  },
  {
    "ques": "```ruby\n# A method inside a class is called ____ method.\n```",
    "quesType": "fill",
    "ans": "instance"
  },
  {
    "ques": "```ruby\n# To check if string contains a substring, use ____.\n```",
    "quesType": "fill",
    "ans": "include?"
  },
  {
    "ques": "```ruby\n# To round a float use ____ method.\n```",
    "quesType": "fill",
    "ans": "round"
  },
  {
    "ques": "```ruby\n# To check if array is empty use ____ method.\n```",
    "quesType": "fill",
    "ans": "empty?"
  },
  {
    "ques": "```ruby\n# To reverse a string use ____ method.\n```",
    "quesType": "fill",
    "ans": "reverse"
  },
  {
    "ques": "```ruby\n# The parent object in Ruby is ____.\n```",
    "quesType": "fill",
    "ans": "Object"
  },
  {
    "ques": "```ruby\n# `&&` is logical ____ operator.\n```",
    "quesType": "fill",
    "ans": "AND"
  },
  {
    "ques": "```ruby\n# A local variable starts with ____ character.\n```",
    "quesType": "fill",
    "ans": "lowercase"
  },
  {
    "ques": "```ruby\n# `ARGV` is used to get ____ arguments.\n```",
    "quesType": "fill",
    "ans": "command-line"
  },
  {
    "ques": "```ruby\n# To convert string to symbol use ____.\n```",
    "quesType": "fill",
    "ans": "to_sym"
  },
  {
    "ques": "```ruby\n# To repeat string n times use ____ operator.\n```",
    "quesType": "fill",
    "ans": "*"
  },
  {
    "ques": "```ruby\n# `unless` works opposite to ____.\n```",
    "quesType": "fill",
    "ans": "if"
  },
  {
    "ques": "```ruby\n# `redo` repeats the ____ iteration.\n```",
    "quesType": "fill",
    "ans": "current"
  },
  {
    "ques": "```ruby\n# Ruby gems are managed by ____ tool.\n```",
    "quesType": "fill",
    "ans": "bundler"
  },
  {
    "ques": "```ruby\n# To check variable type, use ____ method.\n```",
    "quesType": "fill",
    "ans": "class"
  },
  {
    "ques": "```ruby\n# `yield` is used inside ____.\n```",
    "quesType": "fill",
    "ans": "block"
  },
  {
    "ques": "```ruby\n# `require` is used to load ____.\n```",
    "quesType": "fill",
    "ans": "library"
  },
  {
    "ques": "```ruby\n# `super` calls the ____ method.\n```",
    "quesType": "fill",
    "ans": "parent"
  }
,
{
    "ques": "Which keyword is used to define a Ruby module?",
    "quesType": "mcq",
    "op1": "package",
    "op2": "module",
    "op3": "namespace",
    "op4": "group",
    "ans": "module"
  },
  {
    "ques": "Which symbol makes a Ruby symbol?",
    "quesType": "mcq",
    "op1": ":",
    "op2": "#",
    "op3": "@",
    "op4": "$",
    "ans": ":"
  },
  {
    "ques": "Which method converts an integer to a string?",
    "quesType": "mcq",
    "op1": "string()",
    "op2": "to_string",
    "op3": "to_s",
    "op4": "str()",
    "ans": "to_s"
  },
  {
    "ques": "Which variable is global in Ruby?",
    "quesType": "mcq",
    "op1": "@var",
    "op2": "$var",
    "op3": ":var",
    "op4": "#var",
    "ans": "$var"
  },
  {
    "ques": "Which method checks if a string is empty?",
    "quesType": "mcq",
    "op1": "zero?",
    "op2": "empty?",
    "op3": "blank?",
    "op4": "nil?",
    "ans": "empty?"
  },
  {
    "ques": "What is the output?<br><br>```ruby<br>puts 3 * 2 ** 2<br>```",
    "quesType": "mcq",
    "op1": "12",
    "op2": "18",
    "op3": "36",
    "op4": "24",
    "ans": "12"
  },
  {
    "ques": "Which keyword defines a constant?",
    "quesType": "mcq",
    "op1": "let",
    "op2": "const",
    "op3": "Constant",
    "op4": "None",
    "ans": "None"
  },
  {
    "ques": "What is the output?<br><br>```ruby<br>puts \"Hi\" + \" Ruby\"<br>```",
    "quesType": "mcq",
    "op1": "HiRuby",
    "op2": "Hi Ruby",
    "op3": "HiRuby ",
    "op4": "Hi Ruby ",
    "ans": "Hi Ruby"
  },
  {
    "ques": "Which operator is for range?",
    "quesType": "mcq",
    "op1": "::",
    "op2": "..",
    "op3": "**",
    "op4": "<>",
    "ans": ".."
  },
  {
    "ques": "What is the parent class of all classes?",
    "quesType": "mcq",
    "op1": "Base",
    "op2": "Super",
    "op3": "Object",
    "op4": "Root",
    "ans": "Object"
  },
  {
    "ques": "What is the output?<br><br>```ruby<br>puts [1,2,3].size<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "4",
    "op4": "1",
    "ans": "3"
  },
  {
    "ques": "Which method appends an element to an array?",
    "quesType": "mcq",
    "op1": "add",
    "op2": "push",
    "op3": "insert",
    "op4": "append",
    "ans": "push"
  },
  {
    "ques": "Which keyword is used for inheritance?",
    "quesType": "mcq",
    "op1": "extends",
    "op2": "inherits",
    "op3": "<",
    "op4": ":",
    "ans": "<"
  },
  {
    "ques": "Which loop is infinite unless broken?",
    "quesType": "mcq",
    "op1": "for",
    "op2": "while",
    "op3": "until",
    "op4": "loop",
    "ans": "loop"
  },
  {
    "ques": "What does `redo` do in a loop?",
    "quesType": "mcq",
    "op1": "Exits loop",
    "op2": "Repeats current iteration",
    "op3": "Skips iteration",
    "op4": "Starts new loop",
    "ans": "Repeats current iteration"
  },
  {
    "ques": "What is the output?<br><br>```ruby<br>puts \"abc\".upcase<br>```",
    "quesType": "mcq",
    "op1": "abc",
    "op2": "ABC",
    "op3": "Abc",
    "op4": "aBc",
    "ans": "ABC"
  },
  {
    "ques": "Which checks type of object?",
    "quesType": "mcq",
    "op1": "typeof",
    "op2": "kind",
    "op3": "class",
    "op4": "type",
    "ans": "class"
  },
  {
    "ques": "Which keyword ends a block?",
    "quesType": "mcq",
    "op1": "close",
    "op2": "done",
    "op3": "finish",
    "op4": "end",
    "ans": "end"
  },
  {
    "ques": "What is the output?<br><br>```ruby<br>puts 5 <=> 10<br>```",
    "quesType": "mcq",
    "op1": "-1",
    "op2": "0",
    "op3": "1",
    "op4": "Error",
    "ans": "-1"
  },
  {
    "ques": "Which method converts to symbol?",
    "quesType": "mcq",
    "op1": "to_sym",
    "op2": "symbol",
    "op3": "sym",
    "op4": "make_sym",
    "ans": "to_sym"
  },
  {
    "ques": "What is the output?<br><br>```ruby<br>puts nil.nil?<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "0",
    "ans": "true"
  },
  {
    "ques": "Which is falsey in Ruby?",
    "quesType": "mcq",
    "op1": "0",
    "op2": "false",
    "op3": "empty string",
    "op4": "[]",
    "ans": "false"
  },
  {
    "ques": "Which method repeats block for array elements?",
    "quesType": "mcq",
    "op1": "each",
    "op2": "loop",
    "op3": "while",
    "op4": "for",
    "ans": "each"
  },
  {
    "ques": "What does `next` do in a loop?",
    "quesType": "mcq",
    "op1": "Repeats",
    "op2": "Breaks",
    "op3": "Skips iteration",
    "op4": "Exits loop",
    "ans": "Skips iteration"
  },
  {
    "ques": "What is the output?<br><br>```ruby<br>puts \"abc\".reverse<br>```",
    "quesType": "mcq",
    "op1": "cba",
    "op2": "abc",
    "op3": "bac",
    "op4": "cab",
    "ans": "cba"
  },
  {
    "ques": "Which is a valid instance variable?",
    "quesType": "mcq",
    "op1": "$var",
    "op2": "@var",
    "op3": ":var",
    "op4": "#var",
    "ans": "@var"
  },
  {
    "ques": "What does `super` keyword do?",
    "quesType": "mcq",
    "op1": "Calls parent method",
    "op2": "Calls child method",
    "op3": "Stops execution",
    "op4": "Repeats loop",
    "ans": "Calls parent method"
  },
  {
    "ques": "Which is truthy in Ruby?",
    "quesType": "mcq",
    "op1": "false",
    "op2": "nil",
    "op3": "0",
    "op4": "None",
    "ans": "0"
  },
  {
    "ques": "Which is used for file loading?",
    "quesType": "mcq",
    "op1": "require",
    "op2": "include",
    "op3": "load",
    "op4": "use",
    "ans": "require"
  },
  {
    "ques": "Which symbol refers to the current object?",
    "quesType": "mcq",
    "op1": "$self",
    "op2": "#self",
    "op3": "self",
    "op4": ":self",
    "ans": "self"
  },
   { "ques": "```ruby\n# Ruby blocks end with ____ keyword.\n```", "quesType": "fill", "ans": "end" },
  { "ques": "```ruby\n# `puts` prints with a ____.\n```", "quesType": "fill", "ans": "newline" },
  { "ques": "```ruby\n# `print` does not add a ____ by default.\n```", "quesType": "fill", "ans": "newline" },
  { "ques": "```ruby\n# The global variable prefix is ____.\n```", "quesType": "fill", "ans": "$" },
  { "ques": "```ruby\n# The instance variable prefix is ____.\n```", "quesType": "fill", "ans": "@" },
  { "ques": "```ruby\n# The parent class for all classes is ____.\n```", "quesType": "fill", "ans": "Object" },
  { "ques": "```ruby\n# `nil` means ____.\n```", "quesType": "fill", "ans": "no value" },
  { "ques": "```ruby\n# To check array length use ____.\n```", "quesType": "fill", "ans": "length" },
  { "ques": "```ruby\n# To check string length use ____.\n```", "quesType": "fill", "ans": "length" },
  { "ques": "```ruby\n# A symbol starts with ____.\n```", "quesType": "fill", "ans": ":" },
  { "ques": "```ruby\n# `==` checks ____ equality.\n```", "quesType": "fill", "ans": "value" },
  { "ques": "```ruby\n# `===` checks ____ equality.\n```", "quesType": "fill", "ans": "case" },
  { "ques": "```ruby\n# `to_s` converts to ____.\n```", "quesType": "fill", "ans": "string" },
  { "ques": "```ruby\n# `to_i` converts to ____.\n```", "quesType": "fill", "ans": "integer" },
  { "ques": "```ruby\n# A loop runs forever with ____ keyword.\n```", "quesType": "fill", "ans": "loop" },
  { "ques": "```ruby\n# `break` ____ a loop.\n```", "quesType": "fill", "ans": "stops" },
  { "ques": "```ruby\n# `next` ____ the current loop iteration.\n```", "quesType": "fill", "ans": "skips" },
  { "ques": "```ruby\n# `redo` repeats the ____ iteration.\n```", "quesType": "fill", "ans": "current" },
  { "ques": "```ruby\n# `each` runs block for ____ elements.\n```", "quesType": "fill", "ans": "array" },
  { "ques": "```ruby\n# `yield` works inside a ____.\n```", "quesType": "fill", "ans": "block" },
  { "ques": "```ruby\n# The spaceship operator is ____.\n```", "quesType": "fill", "ans": "<=>" },
  { "ques": "```ruby\n# `require` loads a ____.\n```", "quesType": "fill", "ans": "file" },
  { "ques": "```ruby\n# `super` calls the ____ method.\n```", "quesType": "fill", "ans": "parent" },
  { "ques": "```ruby\n# Ruby file extension is ____.\n```", "quesType": "fill", "ans": ".rb" },
  { "ques": "```ruby\n# To reverse string use ____.\n```", "quesType": "fill", "ans": "reverse" },
  { "ques": "```ruby\n# To repeat string use ____ operator.\n```", "quesType": "fill", "ans": "*" },
  { "ques": "```ruby\n# Logical AND is written as ____.\n```", "quesType": "fill", "ans": "&&" },
  { "ques": "```ruby\n# Logical OR is written as ____.\n```", "quesType": "fill", "ans": "||" },
  { "ques": "```ruby\n# `false` and ____ are falsey.\n```", "quesType": "fill", "ans": "nil" },
  { "ques": "```ruby\n# `case` statement ends with ____.\n```", "quesType": "fill", "ans": "end" },
  ,
  {
    "ques": "Which method returns the first element of an array?",
    "quesType": "mcq",
    "op1": "start",
    "op2": "begin",
    "op3": "first",
    "op4": "head",
    "ans": "first"
  },
  {
    "ques": "Which method returns the last element?",
    "quesType": "mcq",
    "op1": "end",
    "op2": "tail",
    "op3": "last",
    "op4": "finish",
    "ans": "last"
  },
  {
    "ques": "What is the output?<br><br>```ruby<br>puts 10 % 3<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "1"
  },
  {
    "ques": "Which method joins array elements?",
    "quesType": "mcq",
    "op1": "concat",
    "op2": "merge",
    "op3": "join",
    "op4": "combine",
    "ans": "join"
  },
  {
    "ques": "Which method removes last element?",
    "quesType": "mcq",
    "op1": "cut",
    "op2": "pop",
    "op3": "shift",
    "op4": "remove",
    "ans": "pop"
  },
  {
    "ques": "What is the output?<br><br>```ruby<br>puts \"abc\".capitalize<br>```",
    "quesType": "mcq",
    "op1": "abc",
    "op2": "ABC",
    "op3": "Abc",
    "op4": "aBc",
    "ans": "Abc"
  },
  {
    "ques": "Which method converts string to integer?",
    "quesType": "mcq",
    "op1": "parseInt",
    "op2": "convert",
    "op3": "to_i",
    "op4": "int",
    "ans": "to_i"
  },
  {
    "ques": "Which is true about `nil`?",
    "quesType": "mcq",
    "op1": "It is falsey",
    "op2": "It is truthy",
    "op3": "It is a string",
    "op4": "It is an array",
    "ans": "It is falsey"
  },
  {
    "ques": "Which is a valid class name?",
    "quesType": "mcq",
    "op1": "myClass",
    "op2": "MyClass",
    "op3": "my_class",
    "op4": "classMy",
    "ans": "MyClass"
  },
  {
    "ques": "Which operator is used for AND?",
    "quesType": "mcq",
    "op1": "||",
    "op2": "&&",
    "op3": "&",
    "op4": "|",
    "ans": "&&"
  },
  {
    "ques": "What is the output?<br><br>```ruby<br>puts 2 ** 4<br>```",
    "quesType": "mcq",
    "op1": "8",
    "op2": "16",
    "op3": "4",
    "op4": "32",
    "ans": "16"
  },
  {
    "ques": "What is `puts` short for?",
    "quesType": "mcq",
    "op1": "Put string",
    "op2": "Put statement",
    "op3": "Put screen",
    "op4": "None",
    "ans": "Put string"
  },
  {
    "ques": "Which returns keys of a hash?",
    "quesType": "mcq",
    "op1": "key",
    "op2": "keys",
    "op3": "keylist",
    "op4": "list",
    "ans": "keys"
  },
  {
    "ques": "What is the output?<br><br>```ruby<br>puts \"hello\".gsub(\"l\", \"x\")<br>```",
    "quesType": "mcq",
    "op1": "hexxo",
    "op2": "hexxxo",
    "op3": "hexxxo",
    "op4": "hexo",
    "ans": "hexxxo"
  },
  {
    "ques": "Which operator checks identity?",
    "quesType": "mcq",
    "op1": "==",
    "op2": "===",
    "op3": "<=",
    "op4": ">=",
    "ans": "==="
  },
  {
    "ques": "Which runs once if condition is false?",
    "quesType": "mcq",
    "op1": "if",
    "op2": "while",
    "op3": "until",
    "op4": "case",
    "ans": "until"
  },
  {
    "ques": "What is the output?<br><br>```ruby<br>puts 1..3 === 2<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "1",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Which converts array to string?",
    "quesType": "mcq",
    "op1": "join",
    "op2": "merge",
    "op3": "implode",
    "op4": "combine",
    "ans": "join"
  },
  {
    "ques": "Which method checks class hierarchy?",
    "quesType": "mcq",
    "op1": "kind_of?",
    "op2": "type_of?",
    "op3": "is_a?",
    "op4": "inherits?",
    "ans": "is_a?"
  },
  {
    "ques": "What is the output?<br><br>```ruby<br>puts 7 / 2<br>```",
    "quesType": "mcq",
    "op1": "3.5",
    "op2": "3",
    "op3": "4",
    "op4": "2",
    "ans": "3"
  },
  {
    "ques": "Which is used to run shell commands?",
    "quesType": "mcq",
    "op1": "sh",
    "op2": "bash",
    "op3": "system",
    "op4": "cmd",
    "ans": "system"
  },
  {
    "ques": "What is the output?<br><br>```ruby<br>puts [1,2,3].include?(2)<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Which method converts to float?",
    "quesType": "mcq",
    "op1": "float",
    "op2": "to_f",
    "op3": "fconvert",
    "op4": "toFloat",
    "ans": "to_f"
  },
  {
    "ques": "Which is used to write output?",
    "quesType": "mcq",
    "op1": "echo",
    "op2": "print",
    "op3": "write",
    "op4": "puts",
    "ans": "puts"
  },
  {
    "ques": "What is the output?<br><br>```ruby<br>puts \"Ruby\" * 2<br>```",
    "quesType": "mcq",
    "op1": "RubyRuby",
    "op2": "Ruby Ruby",
    "op3": "Ruby*2",
    "op4": "Error",
    "ans": "RubyRuby"
  },
  {
    "ques": "Which method removes whitespace?",
    "quesType": "mcq",
    "op1": "strip",
    "op2": "chomp",
    "op3": "chop",
    "op4": "trim",
    "ans": "strip"
  },
  {
    "ques": "Which checks if key exists in hash?",
    "quesType": "mcq",
    "op1": "exist?",
    "op2": "key_exist?",
    "op3": "has_key?",
    "op4": "in?",
    "ans": "has_key?"
  },
  {
    "ques": "What is the output?<br><br>```ruby<br>puts 5.between?(1,10)<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "0",
    "ans": "true"
  },
  {
    "ques": "Which operator is the exponent operator?",
    "quesType": "mcq",
    "op1": "**",
    "op2": "^",
    "op3": "^^",
    "op4": "exp",
    "ans": "**"
  },
  {
    "ques": "Which keyword starts a conditional?",
    "quesType": "mcq",
    "op1": "case",
    "op2": "switch",
    "op3": "select",
    "op4": "if",
    "ans": "if"
  },
  {
    "ques": "What does `puts` return after printing?",
    "quesType": "mcq",
    "op1": "Printed string",
    "op2": "nil",
    "op3": "true",
    "op4": "0",
    "ans": "nil"
  },
  {
    "ques": "What is the output?<br><br>```ruby\nputs 7 % 3\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "4",
    "ans": "1"
  },
  {
    "ques": "Which keyword is used to define a method?",
    "quesType": "mcq",
    "op1": "function",
    "op2": "method",
    "op3": "def",
    "op4": "fun",
    "ans": "def"
  },
  {
    "ques": "Which operator is used for string interpolation?",
    "quesType": "mcq",
    "op1": "' '",
    "op2": "\" \"",
    "op3": ": :",
    "op4": "` `",
    "ans": "\" \""
  },
  {
    "ques": "What is the output?<br><br>```ruby\nputs \"Ruby\"[0]\n```",
    "quesType": "mcq",
    "op1": "R",
    "op2": "u",
    "op3": "0",
    "op4": "nil",
    "ans": "R"
  },
  {
    "ques": "What does `chomp` do?",
    "quesType": "mcq",
    "op1": "Removes whitespace",
    "op2": "Removes last character",
    "op3": "Removes newline",
    "op4": "Adds space",
    "ans": "Removes newline"
  },
  {
    "ques": "Which method converts string to integer?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "toInt",
    "op3": "to_i",
    "op4": "convert",
    "ans": "to_i"
  },
  {
    "ques": "What is the output?<br><br>```ruby\nputs (1..3).to_a\n```",
    "quesType": "mcq",
    "op1": "123",
    "op2": "[1,2,3]",
    "op3": "1 2 3",
    "op4": "[1..3]",
    "ans": "[1,2,3]"
  },
  {
    "ques": "Which method removes last element of array?",
    "quesType": "mcq",
    "op1": "pop",
    "op2": "delete",
    "op3": "remove",
    "op4": "cut",
    "ans": "pop"
  },
  {
    "ques": "Which keyword makes a new object?",
    "quesType": "mcq",
    "op1": "object",
    "op2": "new",
    "op3": "create",
    "op4": "make",
    "ans": "new"
  },
  {
    "ques": "Which method adds element at beginning?",
    "quesType": "mcq",
    "op1": "push",
    "op2": "unshift",
    "op3": "insert",
    "op4": "prepend",
    "ans": "unshift"
  },
  {
    "ques": "What is the output?<br><br>```ruby\nputs 2**3\n```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "8",
    "op3": "9",
    "op4": "4",
    "ans": "8"
  },
  {
    "ques": "Which method checks if variable is nil?",
    "quesType": "mcq",
    "op1": "null?",
    "op2": "none?",
    "op3": "nil?",
    "op4": "empty?",
    "ans": "nil?"
  },
  {
    "ques": "What does `freeze` do to object?",
    "quesType": "mcq",
    "op1": "Deletes it",
    "op2": "Makes read-only",
    "op3": "Duplicates",
    "op4": "Makes nil",
    "ans": "Makes read-only"
  },
  {
    "ques": "Which method repeats string?",
    "quesType": "mcq",
    "op1": "repeat",
    "op2": "times",
    "op3": "*",
    "op4": "loop",
    "ans": "*"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs \"A\" * 3\n```",
    "quesType": "mcq",
    "op1": "AAA",
    "op2": "A3",
    "op3": "Error",
    "op4": "AA",
    "ans": "AAA"
  },
  {
    "ques": "What is `attr_accessor` for?",
    "quesType": "mcq",
    "op1": "Make constant",
    "op2": "Read only",
    "op3": "Getter & Setter",
    "op4": "Static method",
    "ans": "Getter & Setter"
  },
  {
    "ques": "Which type is immutable?",
    "quesType": "mcq",
    "op1": "String",
    "op2": "Symbol",
    "op3": "Array",
    "op4": "Hash",
    "ans": "Symbol"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs nil.to_s\n```",
    "quesType": "mcq",
    "op1": "nil",
    "op2": "",
    "op3": "0",
    "op4": "null",
    "ans": ""
  },
  {
    "ques": "What does `alias` do?",
    "quesType": "mcq",
    "op1": "Renames file",
    "op2": "Creates method alias",
    "op3": "Makes variable global",
    "op4": "Deletes method",
    "ans": "Creates method alias"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs true && false\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "0",
    "ans": "false"
  },
  {
    "ques": "Which operator checks both value and type?",
    "quesType": "mcq",
    "op1": "==",
    "op2": "===",
    "op3": "!=",
    "op4": "equal?",
    "ans": "==="
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs \"123\".to_i + 4\n```",
    "quesType": "mcq",
    "op1": "127",
    "op2": "1234",
    "op3": "127.0",
    "op4": "Error",
    "ans": "127"
  },
  {
    "ques": "Which method removes nils from array?",
    "quesType": "mcq",
    "op1": "compact",
    "op2": "delete",
    "op3": "uniq",
    "op4": "filter",
    "ans": "compact"
  },
  {
    "ques": "What is `self` inside class?",
    "quesType": "mcq",
    "op1": "Parent class",
    "op2": "Module",
    "op3": "Current object",
    "op4": "Global",
    "ans": "Current object"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs [1,2].join(\"-\")\n```",
    "quesType": "mcq",
    "op1": "1 2",
    "op2": "1-2",
    "op3": "12",
    "op4": "1,2",
    "ans": "1-2"
  },
  {
    "ques": "Which method creates hash with default?",
    "quesType": "mcq",
    "op1": "Hash.make",
    "op2": "Hash.default",
    "op3": "Hash.new",
    "op4": "new_hash",
    "ans": "Hash.new"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs \"abc\".capitalize\n```",
    "quesType": "mcq",
    "op1": "Abc",
    "op2": "abc",
    "op3": "ABC",
    "op4": "aBc",
    "ans": "Abc"
  },
  {
    "ques": "Which method finds first matching element?",
    "quesType": "mcq",
    "op1": "detect",
    "op2": "find",
    "op3": "first",
    "op4": "select",
    "ans": "find"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs [1,2,3].last\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "nil",
    "ans": "3"
  },
  { "ques": "```ruby\n# Ruby uses ____ keyword to define class.\n```", "quesType": "fill", "ans": "class" },
  { "ques": "```ruby\n# Method names end with ____ keyword.\n```", "quesType": "fill", "ans": "end" },
  { "ques": "```ruby\n# To get number of items, call ____ on array.\n```", "quesType": "fill", "ans": "length" },
  { "ques": "```ruby\n# To turn symbol into string use ____.\n```", "quesType": "fill", "ans": "to_s" },
  { "ques": "```ruby\n# String interpolation works only in ____ quotes.\n```", "quesType": "fill", "ans": "double" },
  { "ques": "```ruby\n# The logical NOT operator is ____.\n```", "quesType": "fill", "ans": "!" },
  { "ques": "```ruby\n# The operator for power is ____.\n```", "quesType": "fill", "ans": "**" },
  { "ques": "```ruby\n# Default value for Hash can be set in ____.\n```", "quesType": "fill", "ans": "Hash.new" },
  { "ques": "```ruby\n# Method that returns copy in uppercase: ____.\n```", "quesType": "fill", "ans": "upcase" },
  { "ques": "```ruby\n# Method to remove duplicates in array: ____.\n```", "quesType": "fill", "ans": "uniq" },
  { "ques": "```ruby\n# Logical AND in Ruby: ____.\n```", "quesType": "fill", "ans": "&&" },
  { "ques": "```ruby\n# Logical OR in Ruby: ____.\n```", "quesType": "fill", "ans": "||" },
  { "ques": "```ruby\n# True class: ____.\n```", "quesType": "fill", "ans": "TrueClass" },
  { "ques": "```ruby\n# False class: ____.\n```", "quesType": "fill", "ans": "FalseClass" },
  { "ques": "```ruby\n# `each` yields element to ____.\n```", "quesType": "fill", "ans": "block" },
  { "ques": "```ruby\n# Global constant starts with ____ letter.\n```", "quesType": "fill", "ans": "capital" },
  { "ques": "```ruby\n# To delete key in hash use ____.\n```", "quesType": "fill", "ans": "delete" },
  { "ques": "```ruby\n# Number class in Ruby: ____.\n```", "quesType": "fill", "ans": "Integer" },
  { "ques": "```ruby\n# `case` statement starts with ____.\n```", "quesType": "fill", "ans": "case" },
  { "ques": "```ruby\n# Ruby's file extension: ____.\n```", "quesType": "fill", "ans": ".rb" },
  { "ques": "```ruby\n# To convert to float use ____.\n```", "quesType": "fill", "ans": "to_f" },
  { "ques": "```ruby\n# Add element at end: ____.\n```", "quesType": "fill", "ans": "push" },
  { "ques": "```ruby\n# Check if array includes value: ____.\n```", "quesType": "fill", "ans": "include?" },
  { "ques": "```ruby\n# `yield` passes control to ____.\n```", "quesType": "fill", "ans": "block" },
  { "ques": "```ruby\n# Method to remove spaces: ____.\n```", "quesType": "fill", "ans": "strip" },
  { "ques": "```ruby\n# Logical XOR isn't native; need to write as ____.\n```", "quesType": "fill", "ans": "^" },
  { "ques": "```ruby\n# Method to get first element: ____.\n```", "quesType": "fill", "ans": "first" },
  { "ques": "```ruby\n# `respond_to?` checks if method ____.\n```", "quesType": "fill", "ans": "exists" },
  { "ques": "```ruby\n# Ruby string is mutable, unlike ____.\n```", "quesType": "fill", "ans": "symbol" },
  { "ques": "```ruby\n# `unless` is like opposite of ____.\n```", "quesType": "fill", "ans": "if" }

]
let codingruby2Arr=[
   {
    "ques": "Which method is used to define a class-level method?",
    "quesType": "mcq",
    "op1": "self.method_name",
    "op2": "class.method_name",
    "op3": "def class.method",
    "op4": "All of these",
    "ans": "All of these"
  },
  {
    "ques": "What does `map` return?",
    "quesType": "mcq",
    "op1": "Original array",
    "op2": "Modified array",
    "op3": "Boolean",
    "op4": "nil",
    "ans": "Modified array"
  },
  {
    "ques": "What is the output?<br><br>```ruby\nputs [1,2,3].select { |x| x > 1 }\n```",
    "quesType": "mcq",
    "op1": "[1,2]",
    "op2": "[2,3]",
    "op3": "[1,2,3]",
    "op4": "nil",
    "ans": "[2,3]"
  },
  {
    "ques": "How do you define a block argument?",
    "quesType": "mcq",
    "op1": "&block",
    "op2": "*block",
    "op3": "$block",
    "op4": "@block",
    "ans": "&block"
  },
  {
    "ques": "Which keyword is used to handle exceptions?",
    "quesType": "mcq",
    "op1": "rescue",
    "op2": "catch",
    "op3": "handle",
    "op4": "except",
    "ans": "rescue"
  },
  {
    "ques": "What is a lambda in Ruby?",
    "quesType": "mcq",
    "op1": "A symbol",
    "op2": "An anonymous function",
    "op3": "A variable",
    "op4": "A keyword",
    "ans": "An anonymous function"
  },
  {
    "ques": "Which method stops iteration early?",
    "quesType": "mcq",
    "op1": "next",
    "op2": "stop",
    "op3": "break",
    "op4": "exit",
    "ans": "break"
  },
  {
    "ques": "Which method merges two hashes?",
    "quesType": "mcq",
    "op1": "join",
    "op2": "combine",
    "op3": "merge",
    "op4": "add",
    "ans": "merge"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs :foo.object_id == :foo.object_id\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Which symbol represents regex for digits?",
    "quesType": "mcq",
    "op1": "\\s",
    "op2": "\\w",
    "op3": "\\d",
    "op4": "\\b",
    "ans": "\\d"
  },
  {
    "ques": "Which method converts string to array by spaces?",
    "quesType": "mcq",
    "op1": "slice",
    "op2": "split",
    "op3": "chop",
    "op4": "break",
    "ans": "split"
  },
  {
    "ques": "What is `super` used for?",
    "quesType": "mcq",
    "op1": "Call parent method",
    "op2": "Exit loop",
    "op3": "Access constant",
    "op4": "Define block",
    "ans": "Call parent method"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs [1,2,3].inject(:+)\n```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "123",
    "op3": "Error",
    "op4": "nil",
    "ans": "6"
  },
  {
    "ques": "What does `yield` do?",
    "quesType": "mcq",
    "op1": "Break loop",
    "op2": "Call block",
    "op3": "Return nil",
    "op4": "None",
    "ans": "Call block"
  },
  {
    "ques": "Which module provides enumerable methods?",
    "quesType": "mcq",
    "op1": "Enumerable",
    "op2": "Enumerator",
    "op3": "Array",
    "op4": "Range",
    "ans": "Enumerable"
  },
  {
    "ques": "What is the output?<br><br>```ruby\nputs [1,2,3].any? { |x| x > 2 }\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "1",
    "ans": "true"
  },
  {
    "ques": "What does `redo` do in loops?",
    "quesType": "mcq",
    "op1": "Restart loop",
    "op2": "Re-execute current iteration",
    "op3": "Stop loop",
    "op4": "Skip iteration",
    "ans": "Re-execute current iteration"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs \"abc123\" =~ /\\d+/\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "abc",
    "op3": "nil",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "Which class is used for custom exceptions?",
    "quesType": "mcq",
    "op1": "Error",
    "op2": "Exception",
    "op3": "Runtime",
    "op4": "StandardError",
    "ans": "StandardError"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs [1,2,3].drop(1)\n```",
    "quesType": "mcq",
    "op1": "[1,2]",
    "op2": "[2,3]",
    "op3": "[1]",
    "op4": "[3]",
    "ans": "[2,3]"
  },
  {"ques": "```ruby\n# ____ calls the block with arguments.\n```", "quesType": "fill", "ans": "yield"},
  {"ques": "```ruby\n# The base Exception class is ____.\n```", "quesType": "fill", "ans": "Exception"},
  {"ques": "```ruby\n# To rescue an exception use ____ keyword.\n```", "quesType": "fill", "ans": "rescue"},
  {"ques": "```ruby\n# `lambda` is created using ____ keyword.\n```", "quesType": "fill", "ans": "lambda"},
  {"ques": "```ruby\n# `Proc` is another way to make ____ functions.\n```", "quesType": "fill", "ans": "anonymous"},
  {"ques": "```ruby\n# A module is defined using ____ keyword.\n```", "quesType": "fill", "ans": "module"},
  {"ques": "```ruby\n# To mix module in class use ____.\n```", "quesType": "fill", "ans": "include"},
  {"ques": "```ruby\n# To extend class methods use ____.\n```", "quesType": "fill", "ans": "extend"},
  {"ques": "```ruby\n# Regex is enclosed between ____ symbols.\n```", "quesType": "fill", "ans": "/ /"},
  {"ques": "```ruby\n# To match regex use ____ operator.\n```", "quesType": "fill", "ans": "=~"},
  {"ques": "```ruby\n# `.each_with_index` gives element and ____.\n```", "quesType": "fill", "ans": "index"},
  {"ques": "```ruby\n# `map` is same as ____ in other languages.\n```", "quesType": "fill", "ans": "map"},
  {"ques": "```ruby\n# `inject` is similar to ____.\n```", "quesType": "fill", "ans": "reduce"},
  {"ques": "```ruby\n# `begin` with `rescue` is for ____ handling.\n```", "quesType": "fill", "ans": "error"},
  {"ques": "```ruby\n# `$0` gives current ____ name.\n```", "quesType": "fill", "ans": "file"},
  {"ques": "```ruby\n# `ensure` block runs ____.\n```", "quesType": "fill", "ans": "always"},
  {"ques": "```ruby\n# `retry` keyword restarts ____.\n```", "quesType": "fill", "ans": "rescue"},
  {"ques": "```ruby\n# `method_missing` handles calls to ____ methods.\n```", "quesType": "fill", "ans": "undefined"},
  {"ques": "```ruby\n# `singleton` methods belong to ____ instance.\n```", "quesType": "fill", "ans": "one"},
  {"ques": "```ruby\n# `freeze` prevents ____ modification.\n```", "quesType": "fill", "ans": "object"},
  {
    "ques": "Which method checks if all elements match a condition?",
    "quesType": "mcq",
    "op1": "any?",
    "op2": "none?",
    "op3": "all?",
    "op4": "find",
    "ans": "all?"
  },
  {
    "ques": "What does `next` do inside a loop?",
    "quesType": "mcq",
    "op1": "Stops loop",
    "op2": "Skips to next iteration",
    "op3": "Repeats iteration",
    "op4": "Ends block",
    "ans": "Skips to next iteration"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs [1,2,3].none? { |x| x > 3 }\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Which method converts hash keys to array?",
    "quesType": "mcq",
    "op1": "keys",
    "op2": "values",
    "op3": "collect",
    "op4": "pluck",
    "ans": "keys"
  },
  {
    "ques": "Which method reverses an array?",
    "quesType": "mcq",
    "op1": "flip",
    "op2": "invert",
    "op3": "reverse",
    "op4": "back",
    "ans": "reverse"
  },
  {
    "ques": "What is the parent class of all exceptions?",
    "quesType": "mcq",
    "op1": "Exception",
    "op2": "Error",
    "op3": "StandardError",
    "op4": "BaseError",
    "ans": "Exception"
  },
  {
    "ques": "Which keyword defines a constant?",
    "quesType": "mcq",
    "op1": "const",
    "op2": "define",
    "op3": "Nothing special",
    "op4": "set",
    "ans": "Nothing special"
  },
  {
    "ques": "What does `binding` return?",
    "quesType": "mcq",
    "op1": "nil",
    "op2": "The current context",
    "op3": "Parent class",
    "op4": "A module",
    "ans": "The current context"
  },
  {
    "ques": "How do you open file in write mode?",
    "quesType": "mcq",
    "op1": "\"r\"",
    "op2": "\"w\"",
    "op3": "\"a\"",
    "op4": "\"rw\"",
    "ans": "\"w\""
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs \"abc\".gsub(\"a\",\"x\")\n```",
    "quesType": "mcq",
    "op1": "xbc",
    "op2": "abc",
    "op3": "xbcx",
    "op4": "acb",
    "ans": "xbc"
  },
  {
    "ques": "Which method calls method dynamically?",
    "quesType": "mcq",
    "op1": "call",
    "op2": "send",
    "op3": "eval",
    "op4": "exec",
    "ans": "send"
  },
  {
    "ques": "Which method joins array to string?",
    "quesType": "mcq",
    "op1": "combine",
    "op2": "join",
    "op3": "attach",
    "op4": "concat",
    "ans": "join"
  },
  {
    "ques": "What is a symbol used for?",
    "quesType": "mcq",
    "op1": "String manipulation",
    "op2": "Unique immutable identifier",
    "op3": "Array index",
    "op4": "Number operations",
    "ans": "Unique immutable identifier"
  },
  {
    "ques": "Which method converts object to JSON?",
    "quesType": "mcq",
    "op1": "to_json",
    "op2": "to_s",
    "op3": "inspect",
    "op4": "jsonify",
    "ans": "to_json"
  },
  {
    "ques": "Which statement runs code in block?",
    "quesType": "mcq",
    "op1": "yield",
    "op2": "return",
    "op3": "break",
    "op4": "next",
    "ans": "yield"
  },
  {
    "ques": "Which is NOT a valid range operator?",
    "quesType": "mcq",
    "op1": "..",
    "op2": "...",
    "op3": ".",
    "op4": "None",
    "ans": "."
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 5.times.map { |i| i*2 }\n```",
    "quesType": "mcq",
    "op1": "[0,1,2,3,4]",
    "op2": "[0,2,4,6,8]",
    "op3": "[1,2,3,4,5]",
    "op4": "[5,10]",
    "ans": "[0,2,4,6,8]"
  },
  {
    "ques": "Which method gives class name?",
    "quesType": "mcq",
    "op1": "klass",
    "op2": "name",
    "op3": "type",
    "op4": "class",
    "ans": "class"
  },
  {
    "ques": "What does `Thread` do?",
    "quesType": "mcq",
    "op1": "Handles blocks",
    "op2": "Handles arrays",
    "op3": "Enables concurrency",
    "op4": "Defines modules",
    "ans": "Enables concurrency"
  },
  {
    "ques": "What does `inspect` return?",
    "quesType": "mcq",
    "op1": "nil",
    "op2": "Human-readable string",
    "op3": "Object ID",
    "op4": "Hash",
    "ans": "Human-readable string"
  },
  {"ques": "```ruby\n# `File.open` is used for ____ operations.\n```", "quesType": "fill", "ans": "file"},
  {"ques": "```ruby\n# `Dir` class is used for ____ handling.\n```", "quesType": "fill", "ans": "directory"},
  {"ques": "```ruby\n# `begin` starts an ____ block.\n```", "quesType": "fill", "ans": "exception"},
  {"ques": "```ruby\n# `.freeze` makes an object ____.\n```", "quesType": "fill", "ans": "immutable"},
  {"ques": "```ruby\n# `puts` adds a ____ at end.\n```", "quesType": "fill", "ans": "newline"},
  {"ques": "```ruby\n# `.split` breaks a string into an ____.\n```", "quesType": "fill", "ans": "array"},
  {"ques": "```ruby\n# `.strip` removes ____ spaces.\n```", "quesType": "fill", "ans": "leading and trailing"},
  {"ques": "```ruby\n# `super` calls a ____ method.\n```", "quesType": "fill", "ans": "parent"},
  {"ques": "```ruby\n# `loop` creates an ____ loop.\n```", "quesType": "fill", "ans": "infinite"},
  {"ques": "```ruby\n# `.zip` merges arrays element ____.\n```", "quesType": "fill", "ans": "by element"},
  {"ques": "```ruby\n# `.flatten` converts nested arrays to ____.\n```", "quesType": "fill", "ans": "single array"},
  {"ques": "```ruby\n# `.compact` removes ____ values.\n```", "quesType": "fill", "ans": "nil"},
  {"ques": "```ruby\n# `.reject` filters elements that ____ condition.\n```", "quesType": "fill", "ans": "fail"},
  {"ques": "```ruby\n# `.select` keeps elements that ____ condition.\n```", "quesType": "fill", "ans": "match"},
  {"ques": "```ruby\n# `Thread` enables ____ execution.\n```", "quesType": "fill", "ans": "parallel"},
  {"ques": "```ruby\n# `sleep` pauses a ____.\n```", "quesType": "fill", "ans": "thread"},
  {"ques": "```ruby\n# `.each_key` iterates over hash ____.\n```", "quesType": "fill", "ans": "keys"},
  {"ques": "```ruby\n# `.each_value` iterates over hash ____.\n```", "quesType": "fill", "ans": "values"},
  {"ques": "```ruby\n# `.clear` empties a ____.\n```", "quesType": "fill", "ans": "hash or array"},
  {"ques": "```ruby\n# `.dup` creates a ____ copy.\n```", "quesType": "fill", "ans": "shallow"},
  {
    "ques": "Which method checks if an array includes an element?",
    "quesType": "mcq",
    "op1": "find",
    "op2": "has?",
    "op3": "include?",
    "op4": "exists?",
    "ans": "include?"
  },
  {
    "ques": "Which keyword defines a class variable?",
    "quesType": "mcq",
    "op1": "$",
    "op2": "@@",
    "op3": "@",
    "op4": "&",
    "ans": "@@"
  },
  {
    "ques": "What is the output?<br><br>```ruby\nputs \"ruby\".upcase\n```",
    "quesType": "mcq",
    "op1": "ruby",
    "op2": "RUBY",
    "op3": "Ruby",
    "op4": "error",
    "ans": "RUBY"
  },
  {
    "ques": "Which operator checks both value and type?",
    "quesType": "mcq",
    "op1": "==",
    "op2": "=",
    "op3": "===",
    "op4": "!=",
    "ans": "==="
  },
  {
    "ques": "What does `.empty?` return for `[ ]`?",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "0",
    "ans": "true"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs (1..3).to_a\n```",
    "quesType": "mcq",
    "op1": "1..3",
    "op2": "[1,2,3]",
    "op3": "1,2,3",
    "op4": "Error",
    "ans": "[1,2,3]"
  },
  {
    "ques": "Which operator is used for range excluding end?",
    "quesType": "mcq",
    "op1": "..",
    "op2": "...",
    "op3": ".",
    "op4": "~",
    "ans": "..."
  },
  {
    "ques": "Which is true about `Proc` vs `lambda`?",
    "quesType": "mcq",
    "op1": "Same behavior",
    "op2": "Return differently",
    "op3": "No difference",
    "op4": "lambda doesn’t exist",
    "ans": "Return differently"
  },
  {
    "ques": "Which loop iterates until false?",
    "quesType": "mcq",
    "op1": "while",
    "op2": "for",
    "op3": "each",
    "op4": "map",
    "ans": "while"
  },
  {
    "ques": "How do you skip to next iteration?",
    "quesType": "mcq",
    "op1": "next",
    "op2": "break",
    "op3": "redo",
    "op4": "stop",
    "ans": "next"
  },
  {
    "ques": "Which method converts symbol to string?",
    "quesType": "mcq",
    "op1": "to_s",
    "op2": "stringify",
    "op3": "inspect",
    "op4": "repr",
    "ans": "to_s"
  },
  {
    "ques": "How do you rescue all errors?",
    "quesType": "mcq",
    "op1": "rescue => e",
    "op2": "catch",
    "op3": "except",
    "op4": "handle",
    "ans": "rescue => e"
  },
  {
    "ques": "Which method combines arrays?",
    "quesType": "mcq",
    "op1": "merge",
    "op2": "concat",
    "op3": "attach",
    "op4": "mix",
    "ans": "concat"
  },
  {
    "ques": "What is a singleton method?",
    "quesType": "mcq",
    "op1": "Class method",
    "op2": "Module",
    "op3": "Defined on one instance",
    "op4": "Global method",
    "ans": "Defined on one instance"
  },
  {
    "ques": "Which regex matches word boundary?",
    "quesType": "mcq",
    "op1": "\\s",
    "op2": "\\w",
    "op3": "\\b",
    "op4": "\\d",
    "ans": "\\b"
  },
  {
    "ques": "Which class provides IO methods?",
    "quesType": "mcq",
    "op1": "Kernel",
    "op2": "IO",
    "op3": "File",
    "op4": "Dir",
    "ans": "IO"
  },
  {
    "ques": "What is `__FILE__`?",
    "quesType": "mcq",
    "op1": "Dir name",
    "op2": "Script arguments",
    "op3": "Current file name",
    "op4": "Variable",
    "ans": "Current file name"
  },
  {
    "ques": "Which keyword exits a loop?",
    "quesType": "mcq",
    "op1": "next",
    "op2": "redo",
    "op3": "break",
    "op4": "stop",
    "ans": "break"
  },
  {
    "ques": "Which method returns a new hash?",
    "quesType": "mcq",
    "op1": "to_a",
    "op2": "merge",
    "op3": "push",
    "op4": "append",
    "ans": "merge"
  },
  {
    "ques": "What does `.inspect` do?",
    "quesType": "mcq",
    "op1": "Add numbers",
    "op2": "Show class",
    "op3": "Return string representation",
    "op4": "Raises error",
    "ans": "Return string representation"
  },
  {
    "ques": "How do you make a symbol?",
    "quesType": "mcq",
    "op1": "#foo",
    "op2": "'foo'",
    "op3": ":foo",
    "op4": "&foo",
    "ans": ":foo"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs \"abc\"[0]\n```",
    "quesType": "mcq",
    "op1": "abc",
    "op2": "a",
    "op3": "97",
    "op4": "Error",
    "ans": "a"
  },
  {
    "ques": "Which keyword is used for refinement?",
    "quesType": "mcq",
    "op1": "extend",
    "op2": "include",
    "op3": "refine",
    "op4": "patch",
    "ans": "refine"
  },
  {
    "ques": "Which matches anything in regex?",
    "quesType": "mcq",
    "op1": "\\.",
    "op2": ".",
    "op3": "\\w",
    "op4": "\\d",
    "ans": "."
  },
  {
    "ques": "What is `alias` used for?",
    "quesType": "mcq",
    "op1": "Rename variable",
    "op2": "Rename class",
    "op3": "Create method alias",
    "op4": "Make module",
    "ans": "Create method alias"
  },
  {
    "ques": "Which method turns string to integer?",
    "quesType": "mcq",
    "op1": "to_s",
    "op2": "to_i",
    "op3": "parse",
    "op4": "int",
    "ans": "to_i"
  },
  {
    "ques": "What does `require` do?",
    "quesType": "mcq",
    "op1": "Run block",
    "op2": "Load file once",
    "op3": "Start thread",
    "op4": "Define class",
    "ans": "Load file once"
  },
  {
    "ques": "What does `load` do?",
    "quesType": "mcq",
    "op1": "Load file each time",
    "op2": "Same as require",
    "op3": "Alias",
    "op4": "Open file",
    "ans": "Load file each time"
  },
  {
    "ques": "Which object is global scope?",
    "quesType": "mcq",
    "op1": "self",
    "op2": "Object",
    "op3": "main",
    "op4": "global",
    "ans": "main"
  },
  {
    "ques": "Which keyword checks a pattern?",
    "quesType": "mcq",
    "op1": "case",
    "op2": "if",
    "op3": "when",
    "op4": "match",
    "ans": "when"
  },
  {"ques": "```ruby\n# `self` refers to current ____.\n```", "quesType": "fill", "ans": "object"},
  {"ques": "```ruby\n# `.reverse` returns a ____ copy.\n```", "quesType": "fill", "ans": "reversed"},
  {"ques": "```ruby\n# `__LINE__` gives current ____ number.\n```", "quesType": "fill", "ans": "line"},
  {"ques": "```ruby\n# `private` makes method only usable ____ class.\n```", "quesType": "fill", "ans": "inside"},
  {"ques": "```ruby\n# `.slice` extracts a ____.\n```", "quesType": "fill", "ans": "substring"},
  {"ques": "```ruby\n# `.to_sym` converts string to ____.\n```", "quesType": "fill", "ans": "symbol"},
  {"ques": "```ruby\n# `attr_accessor` creates ____ and ____.\n```", "quesType": "fill", "ans": "getter setter"},
  {"ques": "```ruby\n# `Kernel` module has core ____.\n```", "quesType": "fill", "ans": "methods"},
  {"ques": "```ruby\n# `.delete` removes ____ from string.\n```", "quesType": "fill", "ans": "characters"},
  {"ques": "```ruby\n# `.start_with?` checks string ____.\n```", "quesType": "fill", "ans": "prefix"},
  {"ques": "```ruby\n# `.end_with?` checks string ____.\n```", "quesType": "fill", "ans": "suffix"},
  {"ques": "```ruby\n# `||=` is called ____ assignment.\n```", "quesType": "fill", "ans": "conditional"},
  {"ques": "```ruby\n# `$LOAD_PATH` stores ____ paths.\n```", "quesType": "fill", "ans": "library"},
  {"ques": "```ruby\n# `.tap` yields ____ to block.\n```", "quesType": "fill", "ans": "self"},
  {"ques": "```ruby\n# `caller` returns current ____ stack.\n```", "quesType": "fill", "ans": "call"},
  {"ques": "```ruby\n# `.gsub` does ____ replacement.\n```", "quesType": "fill", "ans": "global"},
  {"ques": "```ruby\n# `.chomp` removes ____ line.\n```", "quesType": "fill", "ans": "newline"},
  {"ques": "```ruby\n# `.shift` removes first ____.\n```", "quesType": "fill", "ans": "element"},
  {"ques": "```ruby\n# `.pop` removes last ____.\n```", "quesType": "fill", "ans": "element"},
  {"ques": "```ruby\n# `.unshift` adds to ____ of array.\n```", "quesType": "fill", "ans": "start"},
  {"ques": "```ruby\n# `.push` adds to ____ of array.\n```", "quesType": "fill", "ans": "end"},
  {"ques": "```ruby\n# `.size` is same as ____.\n```", "quesType": "fill", "ans": "length"},
  {"ques": "```ruby\n# `defined?` checks if ____ exists.\n```", "quesType": "fill", "ans": "variable"},
  {"ques": "```ruby\n# `.upto` generates ____ range.\n```", "quesType": "fill", "ans": "inclusive"},
  {"ques": "```ruby\n# `.downto` counts ____.\n```", "quesType": "fill", "ans": "backwards"},
  {"ques": "```ruby\n# `.times` repeats block ____ times.\n```", "quesType": "fill", "ans": "n"},
  {"ques": "```ruby\n# `freeze` makes object ____.\n```", "quesType": "fill", "ans": "immutable"},
  {"ques": "```ruby\n# `class_eval` runs code in ____ scope.\n```", "quesType": "fill", "ans": "class"},
  {"ques": "```ruby\n# `.respond_to?` checks ____.\n```", "quesType": "fill", "ans": "method"},
  {"ques": "```ruby\n# `.clone` makes a ____ copy.\n```", "quesType": "fill", "ans": "deep"},
  {
    "ques": "Which method stops a thread?",
    "quesType": "mcq",
    "op1": "exit",
    "op2": "stop",
    "op3": "kill",
    "op4": "terminate",
    "ans": "exit"
  },
  {
    "ques": "Which method changes working directory?",
    "quesType": "mcq",
    "op1": "Dir.set",
    "op2": "Dir.cd",
    "op3": "Dir.change",
    "op4": "Dir.goto",
    "ans": "Dir.cd"
  },
  {
    "ques": "What does `redo` do inside loop?",
    "quesType": "mcq",
    "op1": "Exits loop",
    "op2": "Repeats current iteration",
    "op3": "Skips iteration",
    "op4": "Stops program",
    "ans": "Repeats current iteration"
  },
  {
    "ques": "What does `binding.pry` do?",
    "quesType": "mcq",
    "op1": "Breaks to debugger",
    "op2": "Raises error",
    "op3": "Creates Proc",
    "op4": "Pauses thread",
    "ans": "Breaks to debugger"
  },
  {
    "ques": "Which operator is spaceship?",
    "quesType": "mcq",
    "op1": "<>",
    "op2": "<=>",
    "op3": "=>",
    "op4": "==>",
    "ans": "<=>"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs :abc.to_s\n```",
    "quesType": "mcq",
    "op1": ":abc",
    "op2": "abc",
    "op3": "nil",
    "op4": "Error",
    "ans": "abc"
  },
  {
    "ques": "Which class is parent of all modules?",
    "quesType": "mcq",
    "op1": "Kernel",
    "op2": "Module",
    "op3": "Class",
    "op4": "Object",
    "ans": "Module"
  },
  {
    "ques": "Which method calls block for each pair?",
    "quesType": "mcq",
    "op1": "each_key",
    "op2": "each_value",
    "op3": "each_pair",
    "op4": "each_item",
    "ans": "each_pair"
  },
  {
    "ques": "Which method returns enumerator if no block?",
    "quesType": "mcq",
    "op1": "each",
    "op2": "loop",
    "op3": "run",
    "op4": "yield",
    "ans": "each"
  },
  {
    "ques": "Which regex matches any digit?",
    "quesType": "mcq",
    "op1": "\\w",
    "op2": "\\d",
    "op3": "\\s",
    "op4": "\\b",
    "ans": "\\d"
  },
  {
    "ques": "Which method writes file content?",
    "quesType": "mcq",
    "op1": "File.read",
    "op2": "File.append",
    "op3": "File.puts",
    "op4": "File.write",
    "ans": "File.write"
  },
  {
    "ques": "Which statement is used for multiple rescue?",
    "quesType": "mcq",
    "op1": "catch",
    "op2": "throw",
    "op3": "rescue",
    "op4": "ensure",
    "ans": "rescue"
  },
  {
    "ques": "Which method returns frozen status?",
    "quesType": "mcq",
    "op1": "freeze?",
    "op2": "immutable?",
    "op3": "frozen?",
    "op4": "lock?",
    "ans": "frozen?"
  },
  {
    "ques": "What does `prepend` do?",
    "quesType": "mcq",
    "op1": "Adds at end",
    "op2": "Overrides class",
    "op3": "Adds module before class",
    "op4": "Removes module",
    "ans": "Adds module before class"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs \"hi\" * 3\n```",
    "quesType": "mcq",
    "op1": "hi3",
    "op2": "hihihi",
    "op3": "3hi",
    "op4": "Error",
    "ans": "hihihi"
  },
  {
    "ques": "Which opens a file for reading?",
    "quesType": "mcq",
    "op1": "\"w\"",
    "op2": "\"r\"",
    "op3": "\"a\"",
    "op4": "\"rw\"",
    "ans": "\"r\""
  },
  {
    "ques": "Which operator is safe navigation?",
    "quesType": "mcq",
    "op1": "?",
    "op2": "&.",
    "op3": "->",
    "op4": "::",
    "ans": "&."
  },
  {
    "ques": "What does `define_method` do?",
    "quesType": "mcq",
    "op1": "Deletes method",
    "op2": "Defines method dynamically",
    "op3": "Freezes method",
    "op4": "Alias method",
    "ans": "Defines method dynamically"
  },
  {
    "ques": "Which is output?<br><br>```ruby\nputs (1..5).reject { |x| x.even? }\n```",
    "quesType": "mcq",
    "op1": "[2,4]",
    "op2": "[1,3,5]",
    "op3": "5",
    "op4": "Error",
    "ans": "[1,3,5]"
  },
  {
    "ques": "Which is a global variable?",
    "quesType": "mcq",
    "op1": "@var",
    "op2": "$var",
    "op3": ":var",
    "op4": "&var",
    "ans": "$var"
  },
  {
    "ques": "What is `yield_self`?",
    "quesType": "mcq",
    "op1": "Same as yield",
    "op2": "Yields self to block",
    "op3": "Returns nil",
    "op4": "Alias of tap",
    "ans": "Yields self to block"
  },
  {
    "ques": "Which converts string to float?",
    "quesType": "mcq",
    "op1": "to_f",
    "op2": "to_d",
    "op3": "float",
    "op4": "parse",
    "ans": "to_f"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs nil || \"yes\"\n```",
    "quesType": "mcq",
    "op1": "nil",
    "op2": "\"\"",
    "op3": "yes",
    "op4": "Error",
    "ans": "yes"
  },
  {
    "ques": "Which object is root of all Ruby objects?",
    "quesType": "mcq",
    "op1": "Module",
    "op2": "BasicObject",
    "op3": "Kernel",
    "op4": "Object",
    "ans": "BasicObject"
  },
  {
    "ques": "Which method removes duplicates?",
    "quesType": "mcq",
    "op1": "uniq",
    "op2": "flatten",
    "op3": "compact",
    "op4": "delete",
    "ans": "uniq"
  },
  {
    "ques": "Which returns size of file?",
    "quesType": "mcq",
    "op1": "File.read",
    "op2": "File.size",
    "op3": "File.count",
    "op4": "File.open",
    "ans": "File.size"
  },
  {
    "ques": "Which matches start of line in regex?",
    "quesType": "mcq",
    "op1": "$",
    "op2": "^",
    "op3": "*",
    "op4": ".",
    "ans": "^"
  },
  {
    "ques": "Which keyword finalizes execution?",
    "quesType": "mcq",
    "op1": "ensure",
    "op2": "finally",
    "op3": "exit",
    "op4": "break",
    "ans": "ensure"
  },
  {
    "ques": "Which disables garbage collection?",
    "quesType": "mcq",
    "op1": "GC.start",
    "op2": "GC.stop",
    "op3": "GC.disable",
    "op4": "GC.freeze",
    "ans": "GC.disable"
  },
  {"ques": "```ruby\n# `GC` is for ____ collection.\n```", "quesType": "fill", "ans": "garbage"},
  {"ques": "```ruby\n# `.map` returns a new ____.\n```", "quesType": "fill", "ans": "array"},
  {"ques": "```ruby\n# `.reduce` is same as ____.\n```", "quesType": "fill", "ans": "inject"},
  {"ques": "```ruby\n# `.grep` filters with ____.\n```", "quesType": "fill", "ans": "regex"},
  {"ques": "```ruby\n# `.compact!` modifies array in ____.\n```", "quesType": "fill", "ans": "place"},
  {"ques": "```ruby\n# `.select!` filters array ____.\n```", "quesType": "fill", "ans": "in place"},
  {"ques": "```ruby\n# `lambda` is strict about ____.\n```", "quesType": "fill", "ans": "arguments"},
  {"ques": "```ruby\n# `.call` executes a ____.\n```", "quesType": "fill", "ans": "proc"},
  {"ques": "```ruby\n# `.object_id` gives unique ____.\n```", "quesType": "fill", "ans": "id"},
  {"ques": "```ruby\n# `.binding` keeps current ____.\n```", "quesType": "fill", "ans": "context"},
  {"ques": "```ruby\n# `.eval` runs code from ____.\n```", "quesType": "fill", "ans": "string"},
  {"ques": "```ruby\n# `.respond_to?` checks for ____.\n```", "quesType": "fill", "ans": "method"},
  {"ques": "```ruby\n# `.ancestors` shows ____ chain.\n```", "quesType": "fill", "ans": "inheritance"},
  {"ques": "```ruby\n# `.method_missing` handles unknown ____.\n```", "quesType": "fill", "ans": "method"},
  {"ques": "```ruby\n# `public_send` calls ____ safely.\n```", "quesType": "fill", "ans": "method"},
  {"ques": "```ruby\n# `Regexp` is class for ____.\n```", "quesType": "fill", "ans": "regex"},
  {"ques": "```ruby\n# `$stdin` is standard ____.\n```", "quesType": "fill", "ans": "input"},
  {"ques": "```ruby\n# `$stdout` is standard ____.\n```", "quesType": "fill", "ans": "output"},
  {"ques": "```ruby\n# `$stderr` is standard ____.\n```", "quesType": "fill", "ans": "error"},
  {"ques": "```ruby\n# `.split` breaks string into ____.\n```", "quesType": "fill", "ans": "array"},
  {"ques": "```ruby\n# `BEGIN` runs ____ program starts.\n```", "quesType": "fill", "ans": "before"},
  {"ques": "```ruby\n# `END` runs ____ program ends.\n```", "quesType": "fill", "ans": "after"},
  {"ques": "```ruby\n# `.rand` generates ____ number.\n```", "quesType": "fill", "ans": "random"},
  {"ques": "```ruby\n# `Time.now` gives current ____.\n```", "quesType": "fill", "ans": "time"},
  {"ques": "```ruby\n# `.strftime` formats ____.\n```", "quesType": "fill", "ans": "time"},
  {"ques": "```ruby\n# `.fork` creates new ____.\n```", "quesType": "fill", "ans": "process"},
  {"ques": "```ruby\n# `.system` runs ____ command.\n```", "quesType": "fill", "ans": "shell"},
  {"ques": "```ruby\n# `__ENCODING__` shows current ____.\n```", "quesType": "fill", "ans": "encoding"},
  {"ques": "```ruby\n# `.marshal_dump` serializes ____.\n```", "quesType": "fill", "ans": "object"},
  {"ques": "```ruby\n# `.marshal_load` deserializes ____.\n```", "quesType": "fill", "ans": "object"},
  {
    "ques": "Which Ruby method returns current directory?",
    "quesType": "mcq",
    "op1": "Dir.now",
    "op2": "Dir.current",
    "op3": "Dir.getwd",
    "op4": "Dir.location",
    "ans": "Dir.getwd"
  },
  {
    "ques": "Which module is mixed into all Ruby objects?",
    "quesType": "mcq",
    "op1": "BasicObject",
    "op2": "Kernel",
    "op3": "ObjectSpace",
    "op4": "Enumerable",
    "ans": "Kernel"
  },
  {
    "ques": "Which method pauses a fiber?",
    "quesType": "mcq",
    "op1": "pause",
    "op2": "sleep",
    "op3": "yield",
    "op4": "Fiber.yield",
    "ans": "Fiber.yield"
  },
  {
    "ques": "Which statement is true about singleton methods?",
    "quesType": "mcq",
    "op1": "Defined on all instances",
    "op2": "Defined on a single object",
    "op3": "Part of inheritance chain",
    "op4": "Only for classes",
    "ans": "Defined on a single object"
  },
  {
    "ques": "Which command runs tests with RSpec?",
    "quesType": "mcq",
    "op1": "ruby spec.rb",
    "op2": "rspec spec.rb",
    "op3": "rails spec",
    "op4": "irb spec",
    "ans": "rspec spec.rb"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 'abc' =~ /b/\n```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "2",
    "op4": "nil",
    "ans": "1"
  },
  {
    "ques": "What does `.eql?` compare?",
    "quesType": "mcq",
    "op1": "Only value",
    "op2": "Value & type",
    "op3": "Only type",
    "op4": "Memory address",
    "ans": "Value & type"
  },
  {
    "ques": "Which IO method reads one line?",
    "quesType": "mcq",
    "op1": "gets",
    "op2": "readline",
    "op3": "lines",
    "op4": "next",
    "ans": "gets"
  },
  {
    "ques": "Which method is true if file exists?",
    "quesType": "mcq",
    "op1": "File.exists?",
    "op2": "File.exist?",
    "op3": "File.check",
    "op4": "File.present?",
    "ans": "File.exist?"
  },
  {
    "ques": "Which does `super` do?",
    "quesType": "mcq",
    "op1": "Calls same method in parent",
    "op2": "Calls child method",
    "op3": "Creates new method",
    "op4": "Deletes parent method",
    "ans": "Calls same method in parent"
  },
  {
    "ques": "Which syntax creates a block parameter?",
    "quesType": "mcq",
    "op1": "*args",
    "op2": "&block",
    "op3": "@block",
    "op4": "#block",
    "ans": "&block"
  },
  {
    "ques": "Which is output?<br><br>```ruby\nputs [1,2,3].take(2)\n```",
    "quesType": "mcq",
    "op1": "[1,2]",
    "op2": "[2,3]",
    "op3": "[1,3]",
    "op4": "[2]",
    "ans": "[1,2]"
  },
  {
    "ques": "Which method turns string to symbol?",
    "quesType": "mcq",
    "op1": "to_sym",
    "op2": "to_symbol",
    "op3": "symbolize",
    "op4": "make_sym",
    "ans": "to_sym"
  },
  {
    "ques": "Which checks if method exists?",
    "quesType": "mcq",
    "op1": "has_method?",
    "op2": "method_exist?",
    "op3": "respond_to?",
    "op4": "method?",
    "ans": "respond_to?"
  },
  {
    "ques": "Which converts array to hash?",
    "quesType": "mcq",
    "op1": "to_h",
    "op2": "to_hash",
    "op3": "as_hash",
    "op4": "hashify",
    "ans": "to_h"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs !!nil\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "error",
    "ans": "false"
  },
  {
    "ques": "Which method runs block then returns self?",
    "quesType": "mcq",
    "op1": "yield_self",
    "op2": "tap",
    "op3": "block",
    "op4": "with_self",
    "ans": "tap"
  },
  {
    "ques": "Which statement is true for `refinement`?",
    "quesType": "mcq",
    "op1": "Always global",
    "op2": "Affects only scope",
    "op3": "Changes core",
    "op4": "Removes method",
    "ans": "Affects only scope"
  },
  {
    "ques": "Which disables garbage collector?",
    "quesType": "mcq",
    "op1": "GC.enable",
    "op2": "GC.disable",
    "op3": "GC.stop",
    "op4": "GC.halt",
    "ans": "GC.disable"
  },
  {
    "ques": "Which creates new symbol?",
    "quesType": "mcq",
    "op1": ":\"abc\"",
    "op2": ":abc()",
    "op3": "symbol.abc",
    "op4": "Symbol.make",
    "ans": ":\"abc\""
  },
  {
    "ques": "Which method returns lines as array?",
    "quesType": "mcq",
    "op1": "IO.split",
    "op2": "IO.read_lines",
    "op3": "IO.readlines",
    "op4": "IO.to_a",
    "ans": "IO.readlines"
  },
  {
    "ques": "Which does `case` do?",
    "quesType": "mcq",
    "op1": "Iterates array",
    "op2": "Matches pattern",
    "op3": "Creates loop",
    "op4": "Ends block",
    "ans": "Matches pattern"
  },
  {
    "ques": "What does `alias` do?",
    "quesType": "mcq",
    "op1": "Hides method",
    "op2": "Renames method",
    "op3": "Deletes method",
    "op4": "Copies class",
    "ans": "Renames method"
  },
  {
    "ques": "Which regex matches word boundary?",
    "quesType": "mcq",
    "op1": "\\s",
    "op2": "\\b",
    "op3": "\\w",
    "op4": "\\W",
    "ans": "\\b"
  },
  {
    "ques": "Which opens file for append?",
    "quesType": "mcq",
    "op1": "\"w\"",
    "op2": "\"r\"",
    "op3": "\"a\"",
    "op4": "\"wa\"",
    "ans": "\"a\""
  },
  {
    "ques": "Which checks for numeric value?",
    "quesType": "mcq",
    "op1": "numeric?",
    "op2": "integer?",
    "op3": "is_number?",
    "op4": "is_numeric?",
    "ans": "integer?"
  },
  {
    "ques": "Which runs Ruby interactive shell?",
    "quesType": "mcq",
    "op1": "ruby",
    "op2": "rspec",
    "op3": "irb",
    "op4": "rails c",
    "ans": "irb"
  },
  {
    "ques": "Which returns method object?",
    "quesType": "mcq",
    "op1": "respond_to",
    "op2": "method",
    "op3": "call",
    "op4": "invoke",
    "ans": "method"
  },
  {
    "ques": "Which outputs `true` for `nil.nil?`?",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "error",
    "ans": "true"
  },
  {
    "ques": "Which is a DSL in Ruby?",
    "quesType": "mcq",
    "op1": "RSpec",
    "op2": "Rails",
    "op3": "Puma",
    "op4": "Rubocop",
    "ans": "RSpec"
  },
   {"ques": "```ruby\n# `irb` stands for ____ Ruby.\n```", "quesType": "fill", "ans": "interactive"},
  {"ques": "```ruby\n# `yield` gives control to ____.\n```", "quesType": "fill", "ans": "block"},
  {"ques": "```ruby\n# `.first` returns ____ element.\n```", "quesType": "fill", "ans": "first"},
  {"ques": "```ruby\n# `.last` returns ____ element.\n```", "quesType": "fill", "ans": "last"},
  {"ques": "```ruby\n# `.reverse` flips ____.\n```", "quesType": "fill", "ans": "array"},
  {"ques": "```ruby\n# `.shuffle` randomizes ____.\n```", "quesType": "fill", "ans": "array"},
  {"ques": "```ruby\n# `.sort` arranges in ____ order.\n```", "quesType": "fill", "ans": "ascending"},
  {"ques": "```ruby\n# `.sort!` sorts array ____.\n```", "quesType": "fill", "ans": "in place"},
  {"ques": "```ruby\n# `.downcase` converts to ____ case.\n```", "quesType": "fill", "ans": "lower"},
  {"ques": "```ruby\n# `.upcase` converts to ____ case.\n```", "quesType": "fill", "ans": "upper"},
  {"ques": "```ruby\n# `.chomp` removes ____ character.\n```", "quesType": "fill", "ans": "newline"},
  {"ques": "```ruby\n# `.strip` removes ____.\n```", "quesType": "fill", "ans": "whitespace"},
  {"ques": "```ruby\n# `.squeeze` removes duplicate ____.\n```", "quesType": "fill", "ans": "chars"},
  {"ques": "```ruby\n# `.delete` removes ____ from string.\n```", "quesType": "fill", "ans": "chars"},
  {"ques": "```ruby\n# `.capitalize` makes first letter ____.\n```", "quesType": "fill", "ans": "capital"},
  {"ques": "```ruby\n# `.chr` returns first ____.\n```", "quesType": "fill", "ans": "character"},
  {"ques": "```ruby\n# `.bytes` gives array of ____.\n```", "quesType": "fill", "ans": "bytes"},
  {"ques": "```ruby\n# `.scan` finds all ____ matches.\n```", "quesType": "fill", "ans": "regex"},
  {"ques": "```ruby\n# `.gsub` replaces using ____.\n```", "quesType": "fill", "ans": "regex"},
  {"ques": "```ruby\n# `.sub` replaces first ____.\n```", "quesType": "fill", "ans": "match"},
  {"ques": "```ruby\n# `.tr` translates ____.\n```", "quesType": "fill", "ans": "chars"},
  {"ques": "```ruby\n# `.start_with?` checks ____.\n```", "quesType": "fill", "ans": "prefix"},
  {"ques": "```ruby\n# `.end_with?` checks ____.\n```", "quesType": "fill", "ans": "suffix"},
  {"ques": "```ruby\n# `.casecmp` compares ____.\n```", "quesType": "fill", "ans": "case-insensitive"},
  {"ques": "```ruby\n# `.hex` converts to ____.\n```", "quesType": "fill", "ans": "integer"},
  {"ques": "```ruby\n# `.oct` converts to ____.\n```", "quesType": "fill", "ans": "integer"},
  {"ques": "```ruby\n# `.succ` returns ____ value.\n```", "quesType": "fill", "ans": "next"},
  {"ques": "```ruby\n# `.upto` iterates ____ values.\n```", "quesType": "fill", "ans": "sequential"},
  {"ques": "```ruby\n# `.times` runs ____ times.\n```", "quesType": "fill", "ans": "block"},
  {"ques": "```ruby\n# `.step` steps over ____.\n```", "quesType": "fill", "ans": "range"},
  {
    "ques": "What is output?<br><br>```ruby\nputs [1,2,3].map(&:to_s).join('-')\n```",
    "quesType": "mcq",
    "op1": "1-2-3",
    "op2": "123",
    "op3": "1 2 3",
    "op4": "Error",
    "ans": "1-2-3"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 'Ruby'.include?('b')\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 'abc'[1]\n```",
    "quesType": "mcq",
    "op1": "a",
    "op2": "b",
    "op3": "c",
    "op4": "nil",
    "ans": "b"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs (1..5).to_a.reverse[0]\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "5",
    "op3": "2",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs %w[a b c].join.upcase\n```",
    "quesType": "mcq",
    "op1": "abc",
    "op2": "ABC",
    "op3": "a b c",
    "op4": "Error",
    "ans": "ABC"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs [1, nil, 2].compact.sum\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "1",
    "op3": "2",
    "op4": "nil",
    "ans": "3"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 'abc'.gsub('b', 'x')\n```",
    "quesType": "mcq",
    "op1": "axc",
    "op2": "abc",
    "op3": "xbc",
    "op4": "Error",
    "ans": "axc"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs (1..3).inject(:*)\n```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "7",
    "op3": "9",
    "op4": "5",
    "ans": "6"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs [1,2,3].select(&:even?).first\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "nil",
    "ans": "2"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs {a: 1, b: 2}[:b]\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": ":b",
    "op4": "nil",
    "ans": "2"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs '123'.to_i + 7\n```",
    "quesType": "mcq",
    "op1": "130",
    "op2": "1237",
    "op3": "130",
    "op4": "Error",
    "ans": "130"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 'abc def'.split.size\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "nil",
    "ans": "2"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 5.times.map { |i| i }.inspect\n```",
    "quesType": "mcq",
    "op1": "[0, 1, 2, 3, 4]",
    "op2": "[1, 2, 3, 4, 5]",
    "op3": "[0, 1, 2, 3, 5]",
    "op4": "Error",
    "ans": "[0, 1, 2, 3, 4]"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 'Ruby'.reverse\n```",
    "quesType": "mcq",
    "op1": "Ruby",
    "op2": "ybuR",
    "op3": "burY",
    "op4": "Error",
    "ans": "ybuR"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs [1,2,3].reduce(:+)\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "6",
    "op3": "7",
    "op4": "nil",
    "ans": "6"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs (5..10).include?(7)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 'Hello'.gsub(/[aeiou]/, '*')\n```",
    "quesType": "mcq",
    "op1": "H*ll*",
    "op2": "Hello",
    "op3": "*H*ll*",
    "op4": "Error",
    "ans": "H*ll*"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs [1,2,3].any?(&:odd?)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 'abc'.tr('a', 'z')\n```",
    "quesType": "mcq",
    "op1": "zbc",
    "op2": "abc",
    "op3": "azc",
    "op4": "Error",
    "ans": "zbc"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 'aabbcc'.squeeze\n```",
    "quesType": "mcq",
    "op1": "abc",
    "op2": "aabbcc",
    "op3": "aabbc",
    "op4": "Error",
    "ans": "abc"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 5.even?\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "false"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 'abc123'.match?(/\\d/)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 10.div(3)\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "3.33",
    "op3": "3.0",
    "op4": "Error",
    "ans": "3"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs [1,2,3].drop(1).inspect\n```",
    "quesType": "mcq",
    "op1": "[2,3]",
    "op2": "[1,2]",
    "op3": "[3]",
    "op4": "Error",
    "ans": "[2,3]"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 'abc'.ord\n```",
    "quesType": "mcq",
    "op1": "97",
    "op2": "98",
    "op3": "99",
    "op4": "Error",
    "ans": "97"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 'abc'.bytesize\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "4",
    "op4": "Error",
    "ans": "3"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 'abc'.next\n```",
    "quesType": "mcq",
    "op1": "abd",
    "op2": "acc",
    "op3": "bbc",
    "op4": "bcd",
    "ans": "abd"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 'abc'.upcase!\n```",
    "quesType": "mcq",
    "op1": "ABC",
    "op2": "abc",
    "op3": "nil",
    "op4": "Error",
    "ans": "ABC"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs [1,2,3].sum(10)\n```",
    "quesType": "mcq",
    "op1": "16",
    "op2": "6",
    "op3": "10",
    "op4": "13",
    "ans": "16"
  },
   {
    "ques": "```ruby\nputs 'Ruby'.length\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```ruby\nputs [1,2,3].length\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```ruby\nputs (10..12).to_a.join\n```",
    "quesType": "fill",
    "ans": "101112"
  },
  {
    "ques": "```ruby\nputs 'abc def'.split.first\n```",
    "quesType": "fill",
    "ans": "abc"
  },
  {
    "ques": "```ruby\nputs 'abc'[0].ord\n```",
    "quesType": "fill",
    "ans": "97"
  },
  {
    "ques": "```ruby\nputs [1,2,3].min\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```ruby\nputs [1,2,3].max\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```ruby\nputs 'Ruby'.downcase\n```",
    "quesType": "fill",
    "ans": "ruby"
  },
  {
    "ques": "```ruby\nputs 'abc'.capitalize\n```",
    "quesType": "fill",
    "ans": "Abc"
  },
  {
    "ques": "```ruby\nputs 'abc'.swapcase\n```",
    "quesType": "fill",
    "ans": "ABC"
  },
  {
    "ques": "```ruby\nputs 2**4\n```",
    "quesType": "fill",
    "ans": "16"
  },
  {
    "ques": "```ruby\nputs [1,2,3].first\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```ruby\nputs [1,2,3].last\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```ruby\nputs 'aabbcc'.count('a')\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```ruby\nputs 'a,b,c'.split(',').size\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```ruby\nputs '123'.to_i * 2\n```",
    "quesType": "fill",
    "ans": "246"
  },
  {
    "ques": "```ruby\nputs [1,2,3].map { |x| x+1 }.sum\n```",
    "quesType": "fill",
    "ans": "9"
  },
  {
    "ques": "```ruby\nputs 'Ruby123'.gsub(/\d/, '').length\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```ruby\nputs (5..10).size\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```ruby\nputs 'abcde'.index('c')\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```ruby\nputs 'abc'.reverse.upcase\n```",
    "quesType": "fill",
    "ans": "CBA"
  },
  {
    "ques": "```ruby\nputs '   abc   '.strip\n```",
    "quesType": "fill",
    "ans": "abc"
  },
  {
    "ques": "```ruby\nputs [nil, false, true].compact.size\n```",
    "quesType": "fill",
    "ans": "1"
  }
]
let codingruby3Arr=[
   {
    "ques": "What is output?<br><br>```ruby\nx = [1,2,3].map do |i|\n  next if i == 2\n  i*2\nend\nputs x.compact.inspect\n```",
    "quesType": "mcq",
    "op1": "[2, 4, 6]",
    "op2": "[2, 6]",
    "op3": "[nil, 4, 6]",
    "op4": "[2, nil, 6]",
    "ans": "[2, 6]"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs lambda { return 1 }.call rescue puts 'Error'\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "Error",
    "op3": "nil",
    "op4": "0",
    "ans": "1"
  },
  {
    "ques": "What is output?<br><br>```ruby\ndef test\n  Proc.new { return 1 }.call\n  return 2\nend\nputs test\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "nil",
    "op4": "Error",
    "ans": "1"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs [1,2,3].lazy.map { |x| x * 2 }.first(2).inspect\n```",
    "quesType": "mcq",
    "op1": "[2, 4, 6]",
    "op2": "[2, 4]",
    "op3": "[1, 2]",
    "op4": "[4, 6]",
    "ans": "[2, 4]"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs Fiber.new { Fiber.yield 1; 2 }.resume\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "Fiber",
    "op4": "nil",
    "ans": "1"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs ({ a: 1, b: 2 }.keys & [:a]).any?\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs [1,2,3].inject(:-)\n```",
    "quesType": "mcq",
    "op1": "-4",
    "op2": "0",
    "op3": "2",
    "op4": "-2",
    "ans": "-4"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 'abc123'.scan(/\\d+/).first\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "123",
    "op3": "abc",
    "op4": "nil",
    "ans": "123"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs %i[a b c].map(&:to_s).join('-')\n```",
    "quesType": "mcq",
    "op1": "a-b-c",
    "op2": "abc",
    "op3": "a b c",
    "op4": ":a-:b-:c",
    "ans": "a-b-c"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs ({ a: 1 }).fetch(:b) rescue 'Missing'\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "nil",
    "op3": "Missing",
    "op4": ":b",
    "ans": "Missing"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 'abc'.match(/d/).nil?\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs :abc.to_s.upcase\n```",
    "quesType": "mcq",
    "op1": "ABC",
    "op2": ":ABC",
    "op3": "abc",
    "op4": "Abc",
    "ans": "ABC"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs ''.empty?\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs method(:puts).owner\n```",
    "quesType": "mcq",
    "op1": "Kernel",
    "op2": "Object",
    "op3": "IO",
    "op4": "nil",
    "ans": "Kernel"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 'abc'.object_id == 'abc'.object_id\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "false"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs Thread.new { 1+1 }.value\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "1",
    "op3": "nil",
    "op4": "Error",
    "ans": "2"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs [1,2,3].map { |x| break x if x > 1 }\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "nil",
    "op3": "[1,2,3]",
    "op4": "Error",
    "ans": "Error"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs Enumerator.new { |y| y << 1; y << 2 }.take(2).inspect\n```",
    "quesType": "mcq",
    "op1": "[1,2]",
    "op2": "[1]",
    "op3": "[2]",
    "op4": "nil",
    "ans": "[1,2]"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs [1,2].zip([3,4]).inspect\n```",
    "quesType": "mcq",
    "op1": "[[1,3],[2,4]]",
    "op2": "[[1,4],[2,3]]",
    "op3": "[[1,3,4],[2]]",
    "op4": "[[1],[2]]",
    "ans": "[[1,3],[2,4]]"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs (1..5).reject(&:odd?).inspect\n```",
    "quesType": "mcq",
    "op1": "[2,4]",
    "op2": "[1,3,5]",
    "op3": "[2, 4, 6]",
    "op4": "[]",
    "ans": "[2, 4]"
  },
   { "ques": "```ruby\nputs Fiber.new { Fiber.yield 'Hi'; 'Bye' }.resume\n```", "quesType": "fill", "ans": "Hi" },
  { "ques": "```ruby\nputs (1..3).lazy.map { |x| x*2 }.first\n```", "quesType": "fill", "ans": "2" },
  { "ques": "```ruby\nputs :abc.object_id == :abc.object_id\n```", "quesType": "fill", "ans": "true" },
  { "ques": "```ruby\nputs 'abc'[1,2]\n```", "quesType": "fill", "ans": "bc" },
  { "ques": "```ruby\nputs [1,2,3].take(2).last\n```", "quesType": "fill", "ans": "2" },
  { "ques": "```ruby\nputs 'abc123'.sub(/\d+/, 'x')\n```", "quesType": "fill", "ans": "abcx" },
  { "ques": "```ruby\nputs [].empty?\n```", "quesType": "fill", "ans": "true" },
  { "ques": "```ruby\nputs %w[a b].map(&:upcase).join\n```", "quesType": "fill", "ans": "AB" },
  { "ques": "```ruby\nputs { a: 1, b: 2 }.length\n```", "quesType": "fill", "ans": "2" },
  { "ques": "```ruby\nputs (1..3).detect(&:even?)\n```", "quesType": "fill", "ans": "2" },
  { "ques": "```ruby\nputs 'abc'.delete('b')\n```", "quesType": "fill", "ans": "ac" },
  { "ques": "```ruby\nputs 5.gcd(2)\n```", "quesType": "fill", "ans": "1" },
  { "ques": "```ruby\nputs 'abc def'.split.size\n```", "quesType": "fill", "ans": "2" },
  { "ques": "```ruby\nputs Thread.new { 3*3 }.value\n```", "quesType": "fill", "ans": "9" },
  { "ques": "```ruby\nputs '123abc'.reverse\n```", "quesType": "fill", "ans": "cba321" },
  { "ques": "```ruby\nputs [1,2,3].rotate.inspect\n```", "quesType": "fill", "ans": "[2, 3, 1]" },
  { "ques": "```ruby\nputs 'Ruby'.chars.first\n```", "quesType": "fill", "ans": "R" },
  { "ques": "```ruby\nputs :abc.to_s + '123'\n```", "quesType": "fill", "ans": "abc123" },
  { "ques": "```ruby\nputs Enumerator.new { |y| y << 1; y << 2 }.to_a.size\n```", "quesType": "fill", "ans": "2" },
  { "ques": "```ruby\nputs [1,2,3].reject(&:odd?).sum\n```", "quesType": "fill", "ans": "2" },
  {
    "ques": "What is `method_missing` used for in Ruby?",
    "quesType": "mcq",
    "op1": "To define class variables",
    "op2": "To handle calls to undefined methods",
    "op3": "To load files",
    "op4": "To freeze objects",
    "ans": "To handle calls to undefined methods"
  },
  {
    "ques": "What does this output?<br><br>```ruby\nclass Foo; def method_missing(name); 'oops'; end; end\nputs Foo.new.bar\n```",
    "quesType": "mcq",
    "op1": "oops",
    "op2": "bar",
    "op3": "nil",
    "op4": "Error",
    "ans": "oops"
  },
  {
    "ques": "What does `freeze` do?",
    "quesType": "mcq",
    "op1": "Makes object immutable",
    "op2": "Deletes methods",
    "op3": "Executes a block",
    "op4": "Forks a thread",
    "ans": "Makes object immutable"
  },
  {
    "ques": "What does this print?<br><br>```ruby\nputs :abc.object_id == :abc.object_id\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Which feature creates an anonymous function?",
    "quesType": "mcq",
    "op1": "Proc",
    "op2": "Class",
    "op3": "Module",
    "op4": "Fiber",
    "ans": "Proc"
  },
  {
    "ques": "What prints?<br><br>```ruby\nx = -> { return 1 }\nputs x.call\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "nil",
    "op3": "Error",
    "op4": "0",
    "ans": "1"
  },
  {
    "ques": "Which executes code on class definition?",
    "quesType": "mcq",
    "op1": "included",
    "op2": "initialize",
    "op3": "method_missing",
    "op4": "method_added",
    "ans": "method_added"
  },
  {
    "ques": "What does this output?<br><br>```ruby\nputs Class.new.superclass\n```",
    "quesType": "mcq",
    "op1": "Class",
    "op2": "Object",
    "op3": "Module",
    "op4": "BasicObject",
    "ans": "Object"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs Fiber.new { Fiber.yield 1; 2 }.resume\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "Fiber",
    "op4": "nil",
    "ans": "1"
  },
  {
    "ques": "What is the singleton class used for?",
    "quesType": "mcq",
    "op1": "To add constants",
    "op2": "To hold methods for one object",
    "op3": "To inherit modules",
    "op4": "To fork threads",
    "ans": "To hold methods for one object"
  },
  {
    "ques": "What does `autoload` do?",
    "quesType": "mcq",
    "op1": "Lazily loads constants",
    "op2": "Executes a block",
    "op3": "Handles errors",
    "op4": "Freezes a class",
    "ans": "Lazily loads constants"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 'abc'.encoding\n```",
    "quesType": "mcq",
    "op1": "UTF-8",
    "op2": "ASCII",
    "op3": "nil",
    "op4": "Error",
    "ans": "UTF-8"
  },
  {
    "ques": "What is a refinement?",
    "quesType": "mcq",
    "op1": "A block",
    "op2": "A module patch limited in scope",
    "op3": "A constant",
    "op4": "A frozen variable",
    "ans": "A module patch limited in scope"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs [].respond_to?(:each)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "What is the output?<br><br>```ruby\nputs defined? super\n```",
    "quesType": "mcq",
    "op1": "nil",
    "op2": "super",
    "op3": "false",
    "op4": "true",
    "ans": "nil"
  },
  {
    "ques": "Which runs when a constant is missing?",
    "quesType": "mcq",
    "op1": "method_missing",
    "op2": "const_missing",
    "op3": "autoload",
    "op4": "freeze",
    "ans": "const_missing"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs [1, 2, 3].drop(1).inspect\n```",
    "quesType": "mcq",
    "op1": "[2, 3]",
    "op2": "[1, 2]",
    "op3": "[1]",
    "op4": "[]",
    "ans": "[2, 3]"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 'abc'.ord\n```",
    "quesType": "mcq",
    "op1": "97",
    "op2": "98",
    "op3": "99",
    "op4": "Error",
    "ans": "97"
  },
  {
    "ques": "Which is true for a frozen object?",
    "quesType": "mcq",
    "op1": "You can add keys to frozen Hash",
    "op2": "You can change frozen Array",
    "op3": "You can't modify it",
    "op4": "You can delete methods",
    "ans": "You can't modify it"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 'abc'.match?(/a/)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs :abc.to_s.capitalize\n```",
    "quesType": "mcq",
    "op1": "Abc",
    "op2": "ABC",
    "op3": "abc",
    "op4": "error",
    "ans": "Abc"
  },
  {
    "ques": "Which method gives file line number?",
    "quesType": "mcq",
    "op1": "__LINE__",
    "op2": "__FILE__",
    "op3": "__dir__",
    "op4": "caller",
    "ans": "__LINE__"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 'abc'.object_id == 'abc'.object_id\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Error",
    "op4": "nil",
    "ans": "false"
  },
  {
    "ques": "What does `alias` do?",
    "quesType": "mcq",
    "op1": "Deletes a method",
    "op2": "Freezes an object",
    "op3": "Creates a new name for a method",
    "op4": "Creates a constant",
    "ans": "Creates a new name for a method"
  },
  {
    "ques": "What is printed?<br><br>```ruby\nputs '123abc'.sub!(/\\d+/, '')\n```",
    "quesType": "mcq",
    "op1": "abc",
    "op2": "123abc",
    "op3": "nil",
    "op4": "Error",
    "ans": "abc"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs %w[a b c].join.upcase\n```",
    "quesType": "mcq",
    "op1": "ABC",
    "op2": "abc",
    "op3": "A B C",
    "op4": "a b c",
    "ans": "ABC"
  },
  {
    "ques": "Which hook runs when module is included?",
    "quesType": "mcq",
    "op1": "included",
    "op2": "method_missing",
    "op3": "const_missing",
    "op4": "autoload",
    "ans": "included"
  },
  {
    "ques": "What is `superclass` for BasicObject?",
    "quesType": "mcq",
    "op1": "Object",
    "op2": "Module",
    "op3": "nil",
    "op4": "Class",
    "ans": "nil"
  },
  {
    "ques": "Which returns method’s owner?",
    "quesType": "mcq",
    "op1": "method.owner",
    "op2": "method.class",
    "op3": "object.class",
    "op4": "caller",
    "ans": "method.owner"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 'abc'.empty?\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "false"
  },
  {"ques": "```ruby\nputs :abc.to_s\n```", "quesType": "fill", "ans": "abc"},
  {"ques": "```ruby\nputs 'Ruby'.reverse\n```", "quesType": "fill", "ans": "ybuR"},
  {"ques": "```ruby\nputs [1,2,3].inject(:*)\n```", "quesType": "fill", "ans": "6"},
  {"ques": "```ruby\nputs (1..4).step(2).to_a.join\n```", "quesType": "fill", "ans": "13"},
  {"ques": "```ruby\nputs 'abc'.next\n```", "quesType": "fill", "ans": "abd"},
  {"ques": "```ruby\nputs Fiber.new { Fiber.yield 'Hi'; 'Bye' }.resume\n```", "quesType": "fill", "ans": "Hi"},
  {"ques": "```ruby\nputs ['x','y'].product(['1','2']).size\n```", "quesType": "fill", "ans": "4"},
  {"ques": "```ruby\nputs 'abc123'.sub(/\\d+/, '')\n```", "quesType": "fill", "ans": "abc"},
  {"ques": "```ruby\nputs [].respond_to?(:each)\n```", "quesType": "fill", "ans": "true"},
  {"ques": "```ruby\nputs :foo.object_id == :foo.object_id\n```", "quesType": "fill", "ans": "true"},
  {"ques": "```ruby\nputs 'abc'.ord\n```", "quesType": "fill", "ans": "97"},
  {"ques": "```ruby\nputs [1,2,3].count(&:odd?)\n```", "quesType": "fill", "ans": "2"},
  {"ques": "```ruby\nputs 'abc'.match?(/z/)\n```", "quesType": "fill", "ans": "false"},
  {"ques": "```ruby\nputs 'abc'.capitalize\n```", "quesType": "fill", "ans": "Abc"},
  {"ques": "```ruby\nputs %w[ruby rails].join('-').upcase\n```", "quesType": "fill", "ans": "RUBY-RAILS"},
  {"ques": "```ruby\nputs Hash.new(0)[:missing]\n```", "quesType": "fill", "ans": "0"},
  {"ques": "```ruby\nputs [1,2,3].drop(2).join\n```", "quesType": "fill", "ans": "3"},
  {"ques": "```ruby\nputs [1,2].zip([3,4]).inspect\n```", "quesType": "fill", "ans": "[[1, 3], [2, 4]]"},
  {"ques": "```ruby\nputs 3.times.map { |x| x }.last\n```", "quesType": "fill", "ans": "2"},
  {"ques": "```ruby\nputs 'abc'.encoding.name\n```", "quesType": "fill", "ans": "UTF-8"},
  {"ques": "```ruby\nputs %i[a b c].map(&:to_s).join\n```", "quesType": "fill", "ans": "abc"},
  {"ques": "```ruby\nputs [1, nil, 2].compact.size\n```", "quesType": "fill", "ans": "2"},
  {"ques": "```ruby\nputs 'abc'.sub!(/a/, 'x')\n```", "quesType": "fill", "ans": "xbc"},
  {"ques": "```ruby\nputs [1,2,3].rotate.inspect\n```", "quesType": "fill", "ans": "[2, 3, 1]"},
  {"ques": "```ruby\nputs 'abc'.empty?\n```", "quesType": "fill", "ans": "false"},
  {"ques": "```ruby\nputs 'ruby'.gsub('r', 'R')\n```", "quesType": "fill", "ans": "Ruby"},
  {"ques": "```ruby\nputs __LINE__ > 0\n```", "quesType": "fill", "ans": "true"},
  {"ques": "```ruby\nputs 'abc'.chop\n```", "quesType": "fill", "ans": "ab"},
  {"ques": "```ruby\nputs 'abc'.reverse.next\n```", "quesType": "fill", "ans": "dba"},
  {"ques": "```ruby\nputs [1,2,3].any?(&:even?)\n```", "quesType": "fill", "ans": "true"},
  {
    "ques": "What does `prepend` do in Ruby?",
    "quesType": "mcq",
    "op1": "Appends module methods",
    "op2": "Prepends module methods to inheritance chain",
    "op3": "Deletes constants",
    "op4": "Freezes object",
    "ans": "Prepends module methods to inheritance chain"
  },
  {
    "ques": "What is output?<br><br>```ruby\nmodule M; def hi; 'M'; end; end\nclass A; include M; end\nputs A.new.hi\n```",
    "quesType": "mcq",
    "op1": "M",
    "op2": "A",
    "op3": "nil",
    "op4": "Error",
    "ans": "M"
  },
  {
    "ques": "Which method stops a Fiber?",
    "quesType": "mcq",
    "op1": "Fiber#stop",
    "op2": "Fiber#terminate",
    "op3": "Fiber#resume",
    "op4": "No such method",
    "ans": "No such method"
  },
  {
    "ques": "What does this output?<br><br>```ruby\nputs self.class\n```",
    "quesType": "mcq",
    "op1": "Object",
    "op2": "Main",
    "op3": "Class",
    "op4": "Module",
    "ans": "Object"
  },
  {
    "ques": "What does `extend` do?",
    "quesType": "mcq",
    "op1": "Adds instance methods",
    "op2": "Adds class methods",
    "op3": "Freezes object",
    "op4": "Removes modules",
    "ans": "Adds class methods"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 1.upto(3).map { |x| x }.last\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "nil",
    "ans": "3"
  },
  {
    "ques": "Which does NOT raise an exception?",
    "quesType": "mcq",
    "op1": "nil.call",
    "op2": "5 / 0",
    "op3": "puts nil",
    "op4": "raise 'error'",
    "ans": "puts nil"
  },
  {
    "ques": "What is printed?<br><br>```ruby\nputs %i[x y z].map(&:to_s).join('-')\n```",
    "quesType": "mcq",
    "op1": "x-y-z",
    "op2": "xyz",
    "op3": "nil",
    "op4": "Error",
    "ans": "x-y-z"
  },
  {
    "ques": "Which hook runs when class is inherited?",
    "quesType": "mcq",
    "op1": "included",
    "op2": "method_missing",
    "op3": "inherited",
    "op4": "prepend",
    "ans": "inherited"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs (1..5).reject(&:even?).inspect\n```",
    "quesType": "mcq",
    "op1": "[1, 3, 5]",
    "op2": "[2, 4]",
    "op3": "[1, 2, 3]",
    "op4": "[]",
    "ans": "[1, 3, 5]"
  },
  {
    "ques": "What does `refine` do?",
    "quesType": "mcq",
    "op1": "Changes all objects",
    "op2": "Globally reopens class",
    "op3": "Scoped class modification",
    "op4": "Creates constants",
    "ans": "Scoped class modification"
  },
  {
    "ques": "What does this output?<br><br>```ruby\nputs 'Ruby'.downcase\n```",
    "quesType": "mcq",
    "op1": "ruby",
    "op2": "RUBY",
    "op3": "Ruby",
    "op4": "Error",
    "ans": "ruby"
  },
  {
    "ques": "Which is true for `Thread`?",
    "quesType": "mcq",
    "op1": "Threads run sequentially",
    "op2": "Threads share memory",
    "op3": "Threads freeze objects",
    "op4": "Threads are Procs",
    "ans": "Threads share memory"
  },
  {
    "ques": "What is printed?<br><br>```ruby\nputs 'abc'.tr('a', 'x')\n```",
    "quesType": "mcq",
    "op1": "xbc",
    "op2": "abc",
    "op3": "xbcabc",
    "op4": "Error",
    "ans": "xbc"
  },
  {
    "ques": "What does `method(:foo)` return?",
    "quesType": "mcq",
    "op1": "Symbol",
    "op2": "Proc",
    "op3": "Method",
    "op4": "Class",
    "ans": "Method"
  },
  {
    "ques": "What is `caller` used for?",
    "quesType": "mcq",
    "op1": "Freezes object",
    "op2": "Shows method source",
    "op3": "Shows call stack",
    "op4": "Deletes methods",
    "ans": "Shows call stack"
  },
  {
    "ques": "What is `tap` for?",
    "quesType": "mcq",
    "op1": "Fork threads",
    "op2": "Yield self and return it",
    "op3": "Freeze object",
    "op4": "Raise error",
    "ans": "Yield self and return it"
  },
  {
    "ques": "Which returns true?<br><br>```ruby\nputs [nil].any?\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "What does this output?<br><br>```ruby\nputs (0..3).size\n```",
    "quesType": "mcq",
    "op1": "4",
    "op2": "3",
    "op3": "0",
    "op4": "nil",
    "ans": "4"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 'Hi'.concat(' there')\n```",
    "quesType": "mcq",
    "op1": "Hi there",
    "op2": "Hi",
    "op3": "there",
    "op4": "nil",
    "ans": "Hi there"
  },
  {
    "ques": "Which evaluates code from string?",
    "quesType": "mcq",
    "op1": "eval",
    "op2": "autoload",
    "op3": "const_missing",
    "op4": "tap",
    "ans": "eval"
  },
  {
    "ques": "What does this output?<br><br>```ruby\nputs [1, 2].permutation(2).to_a.size\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "4",
    "op4": "2",
    "ans": "2"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs %q{abc}\n```",
    "quesType": "mcq",
    "op1": "abc",
    "op2": "%q{abc}",
    "op3": "nil",
    "op4": "Error",
    "ans": "abc"
  },
  {
    "ques": "What does `defined?` return for missing var?",
    "quesType": "mcq",
    "op1": "nil",
    "op2": "false",
    "op3": "0",
    "op4": "undefined",
    "ans": "nil"
  },
  {
    "ques": "Which hook runs on class eval?",
    "quesType": "mcq",
    "op1": "included",
    "op2": "const_missing",
    "op3": "method_added",
    "op4": "inherited",
    "ans": "method_added"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs ''.empty?\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "What does `dup` do?",
    "quesType": "mcq",
    "op1": "Deep copy",
    "op2": "Shallow copy",
    "op3": "Freeze object",
    "op4": "Eval",
    "ans": "Shallow copy"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 'Ruby'.chars.first\n```",
    "quesType": "mcq",
    "op1": "R",
    "op2": "u",
    "op3": "b",
    "op4": "y",
    "ans": "R"
  },
  {
    "ques": "Which returns receiver?",
    "quesType": "mcq",
    "op1": "tap",
    "op2": "yield_self",
    "op3": "eval",
    "op4": "both 1 and 2",
    "ans": "both 1 and 2"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs [1,2,3].sum\n```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "5",
    "op3": "3",
    "op4": "Error",
    "ans": "6"
  },
  {"ques": "```ruby\nputs %w[x y].join\n```", "quesType": "fill", "ans": "xy"},
  {"ques": "```ruby\nputs 'ruby'.capitalize\n```", "quesType": "fill", "ans": "Ruby"},
  {"ques": "```ruby\nputs [1,2,3].max\n```", "quesType": "fill", "ans": "3"},
  {"ques": "```ruby\nputs :x.to_s.upcase\n```", "quesType": "fill", "ans": "X"},
  {"ques": "```ruby\nputs (1..3).cover?(2)\n```", "quesType": "fill", "ans": "true"},
  {"ques": "```ruby\nputs [1,2].product([3]).flatten.join\n```", "quesType": "fill", "ans": "1323"},
  {"ques": "```ruby\nputs 'abc'.gsub('a','z')\n```", "quesType": "fill", "ans": "zbc"},
  {"ques": "```ruby\nputs Hash[%w[a b c d].each_slice(2).to_a]['c']\n```", "quesType": "fill", "ans": "d"},
  {"ques": "```ruby\nputs [1,2,3].reverse.first\n```", "quesType": "fill", "ans": "3"},
  {"ques": "```ruby\nputs ''.nil?\n```", "quesType": "fill", "ans": "false"},
  {"ques": "```ruby\nputs (1..5).to_a.sum\n```", "quesType": "fill", "ans": "15"},
  {"ques": "```ruby\nputs %w[a b].map(&:upcase).join\n```", "quesType": "fill", "ans": "AB"},
  {"ques": "```ruby\nputs [*1..3].last\n```", "quesType": "fill", "ans": "3"},
  {"ques": "```ruby\nputs %i[x y z].size\n```", "quesType": "fill", "ans": "3"},
  {"ques": "```ruby\nputs [nil].compact.empty?\n```", "quesType": "fill", "ans": "true"},
  {"ques": "```ruby\nputs 'abc'.length\n```", "quesType": "fill", "ans": "3"},
  {"ques": "```ruby\nputs 'ruby'.sub('r','R')\n```", "quesType": "fill", "ans": "Ruby"},
  {"ques": "```ruby\nputs [1,2,3].take(2).last\n```", "quesType": "fill", "ans": "2"},
  {"ques": "```ruby\nputs 'Ruby'.downcase\n```", "quesType": "fill", "ans": "ruby"},
  {"ques": "```ruby\nputs 'abc'.succ\n```", "quesType": "fill", "ans": "abd"},
  {"ques": "```ruby\nputs %q{hello}.upcase\n```", "quesType": "fill", "ans": "HELLO"},
  {"ques": "```ruby\nputs 'abc'.swapcase\n```", "quesType": "fill", "ans": "ABC"},
  {"ques": "```ruby\nputs [].empty?\n```", "quesType": "fill", "ans": "true"},
  {"ques": "```ruby\nputs 'abc'[0]\n```", "quesType": "fill", "ans": "a"},
  {"ques": "```ruby\nputs [1,2,3].first\n```", "quesType": "fill", "ans": "1"},
  {"ques": "```ruby\nputs 'abc'.slice(1)\n```", "quesType": "fill", "ans": "b"},
  {"ques": "```ruby\nputs %w[ruby rails].count\n```", "quesType": "fill", "ans": "2"},
  {"ques": "```ruby\nputs 'abc'.tr('a', 'x')\n```", "quesType": "fill", "ans": "xbc"},
  {"ques": "```ruby\nputs [1,2].permutation(1).to_a.size\n```", "quesType": "fill", "ans": "2"},
  {"ques": "```ruby\nputs 'abc'.object_id.class\n```", "quesType": "fill", "ans": "Integer"},
  {
    "ques": "What does `alias` do in Ruby?",
    "quesType": "mcq",
    "op1": "Renames a file",
    "op2": "Creates an alias for a method",
    "op3": "Creates a variable",
    "op4": "Stops execution",
    "ans": "Creates an alias for a method"
  },
  {
    "ques": "What is output?<br><br>```ruby\nx = :foo\nputs x.to_s.upcase\n```",
    "quesType": "mcq",
    "op1": "FOO",
    "op2": "foo",
    "op3": ":FOO",
    "op4": "Error",
    "ans": "FOO"
  },
  {
    "ques": "What does `self` refer to inside a class definition?",
    "quesType": "mcq",
    "op1": "An instance",
    "op2": "The class object",
    "op3": "The module",
    "op4": "nil",
    "ans": "The class object"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs %w[a b].map(&:capitalize).join\n```",
    "quesType": "mcq",
    "op1": "AB",
    "op2": "ab",
    "op3": "aB",
    "op4": "BA",
    "ans": "AB"
  },
  {
    "ques": "What does `super` do?",
    "quesType": "mcq",
    "op1": "Calls superclass method",
    "op2": "Creates class",
    "op3": "Yields block",
    "op4": "Freezes object",
    "ans": "Calls superclass method"
  },
  {
    "ques": "What does this output?<br><br>```ruby\nputs [1,2,3].drop(1).inspect\n```",
    "quesType": "mcq",
    "op1": "[2, 3]",
    "op2": "[1, 2]",
    "op3": "[1, 2, 3]",
    "op4": "[]",
    "ans": "[2, 3]"
  },
  {
    "ques": "Which is not an Enumerable?",
    "quesType": "mcq",
    "op1": "Array",
    "op2": "Hash",
    "op3": "Range",
    "op4": "Integer",
    "ans": "Integer"
  },
  {
    "ques": "Which prints true?<br><br>```ruby\nputs nil.nil?\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 'abc'.reverse\n```",
    "quesType": "mcq",
    "op1": "abc",
    "op2": "cba",
    "op3": "bca",
    "op4": "Error",
    "ans": "cba"
  },
  {
    "ques": "What is `singleton_class`?",
    "quesType": "mcq",
    "op1": "Object ID",
    "op2": "Meta class",
    "op3": "Instance variable",
    "op4": "Enumerable",
    "ans": "Meta class"
  },
  {
    "ques": "What does `yield` do?",
    "quesType": "mcq",
    "op1": "Break loop",
    "op2": "Return nil",
    "op3": "Call block",
    "op4": "Define module",
    "ans": "Call block"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs [1,2].cycle(2).to_a.size\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "4",
    "op3": "6",
    "op4": "8",
    "ans": "4"
  },
  {
    "ques": "Which raises NameError?",
    "quesType": "mcq",
    "op1": "puts A",
    "op2": "puts nil",
    "op3": "puts 'A'",
    "op4": "puts []",
    "ans": "puts A"
  },
  {
    "ques": "Which stops iteration?",
    "quesType": "mcq",
    "op1": "break",
    "op2": "next",
    "op3": "redo",
    "op4": "retry",
    "ans": "break"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs (1..3).inject(:+)\n```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "5",
    "op3": "3",
    "op4": "Error",
    "ans": "6"
  },
  {
    "ques": "What does `freeze` do?",
    "quesType": "mcq",
    "op1": "Deletes object",
    "op2": "Freezes object from modification",
    "op3": "Creates alias",
    "op4": "Calls superclass",
    "ans": "Freezes object from modification"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs :foo.object_id.class\n```",
    "quesType": "mcq",
    "op1": "Integer",
    "op2": "Symbol",
    "op3": "Fixnum",
    "op4": "Class",
    "ans": "Integer"
  },
  {
    "ques": "What does `define_method` do?",
    "quesType": "mcq",
    "op1": "Defines variable",
    "op2": "Defines constant",
    "op3": "Defines method dynamically",
    "op4": "Freezes object",
    "ans": "Defines method dynamically"
  },
  {
    "ques": "Which does not mutate receiver?",
    "quesType": "mcq",
    "op1": "reverse!",
    "op2": "map!",
    "op3": "map",
    "op4": "chomp!",
    "ans": "map"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 5.odd?\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Which is true about `Proc`?",
    "quesType": "mcq",
    "op1": "Always returns nil",
    "op2": "Can be passed around",
    "op3": "Freezes array",
    "op4": "Is a constant",
    "ans": "Can be passed around"
  },
  {
    "ques": "What does `binding` capture?",
    "quesType": "mcq",
    "op1": "Object ID",
    "op2": "Execution context",
    "op3": "Array index",
    "op4": "Class",
    "ans": "Execution context"
  },
  {
    "ques": "Which returns class name?<br><br>```ruby\nputs 5.class\n```",
    "quesType": "mcq",
    "op1": "Integer",
    "op2": "Fixnum",
    "op3": "Number",
    "op4": "Class",
    "ans": "Integer"
  },
  {
    "ques": "Which is output?<br><br>```ruby\nputs [1,2,3].find { |x| x > 1 }\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "nil",
    "ans": "2"
  },
  {
    "ques": "Which raises NoMethodError?",
    "quesType": "mcq",
    "op1": "nil.length",
    "op2": "puts nil",
    "op3": "puts 1",
    "op4": "puts []",
    "ans": "nil.length"
  },
  {
    "ques": "Which operator matches regex?",
    "quesType": "mcq",
    "op1": "==",
    "op2": "=~",
    "op3": "===",
    "op4": "!==",
    "ans": "=~"
  },
  {
    "ques": "Which hook is called when module included?",
    "quesType": "mcq",
    "op1": "included",
    "op2": "extended",
    "op3": "method_added",
    "op4": "inherited",
    "ans": "included"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 'abc'.upcase\n```",
    "quesType": "mcq",
    "op1": "ABC",
    "op2": "abc",
    "op3": "Abc",
    "op4": "CBA",
    "ans": "ABC"
  },
  {
    "ques": "Which is false about `nil`?",
    "quesType": "mcq",
    "op1": "Is falsey",
    "op2": "Is an object",
    "op3": "Responds to methods",
    "op4": "Raises error on puts",
    "ans": "Raises error on puts"
  },
  {
    "ques": "Which returns symbol?",
    "quesType": "mcq",
    "op1": ":x",
    "op2": "'x'",
    "op3": "`x`",
    "op4": "5",
    "ans": ":x"
  },
  {"ques": "```ruby\nputs :ruby.class\n```", "quesType": "fill", "ans": "Symbol"},
  {"ques": "```ruby\nputs 'abc'.swapcase\n```", "quesType": "fill", "ans": "ABC"},
  {"ques": "```ruby\nputs [1,2,3].min\n```", "quesType": "fill", "ans": "1"},
  {"ques": "```ruby\nputs 10.even?\n```", "quesType": "fill", "ans": "true"},
  {"ques": "```ruby\nputs 'Ruby'.length\n```", "quesType": "fill", "ans": "4"},
  {"ques": "```ruby\nputs (1..5).step(2).to_a.inspect\n```", "quesType": "fill", "ans": "[1, 3, 5]"},
  {"ques": "```ruby\nputs [*1..4].drop(2).first\n```", "quesType": "fill", "ans": "3"},
  {"ques": "```ruby\nputs 'abc'.gsub('b','x')\n```", "quesType": "fill", "ans": "axc"},
  {"ques": "```ruby\nputs [1,2,3].count(&:even?)\n```", "quesType": "fill", "ans": "1"},
  {"ques": "```ruby\nputs [1,2,3].reduce(:*)\n```", "quesType": "fill", "ans": "6"},
  {"ques": "```ruby\nputs 'abc'.chop\n```", "quesType": "fill", "ans": "ab"},
  {"ques": "```ruby\nputs [nil].compact.empty?\n```", "quesType": "fill", "ans": "true"},
  {"ques": "```ruby\nputs (1..5).to_a.last\n```", "quesType": "fill", "ans": "5"},
  {"ques": "```ruby\nputs [1,2,3].sum\n```", "quesType": "fill", "ans": "6"},
  {"ques": "```ruby\nputs :x.to_s\n```", "quesType": "fill", "ans": "x"},
  {"ques": "```ruby\nputs [1,2].concat([3]).inspect\n```", "quesType": "fill", "ans": "[1, 2, 3]"},
  {"ques": "```ruby\nputs 'Hello'.downcase\n```", "quesType": "fill", "ans": "hello"},
  {"ques": "```ruby\nputs 'abc'.capitalize\n```", "quesType": "fill", "ans": "Abc"},
  {"ques": "```ruby\nputs [1,2,3].first\n```", "quesType": "fill", "ans": "1"},
  {"ques": "```ruby\nputs 'abc'[1]\n```", "quesType": "fill", "ans": "b"},
  {"ques": "```ruby\nputs [].empty?\n```", "quesType": "fill", "ans": "true"},
  {"ques": "```ruby\nputs 'abc'.length\n```", "quesType": "fill", "ans": "3"},
  {"ques": "```ruby\nputs [1,2,3].reverse.last\n```", "quesType": "fill", "ans": "1"},
  {"ques": "```ruby\nputs %w[x y z].join('-')\n```", "quesType": "fill", "ans": "x-y-z"},
  {"ques": "```ruby\nputs 5.next\n```", "quesType": "fill", "ans": "6"},
  {"ques": "```ruby\nputs 'abc'.reverse\n```", "quesType": "fill", "ans": "cba"},
  {"ques": "```ruby\nputs [1,2].permutation(2).size\n```", "quesType": "fill", "ans": "2"},
  {"ques": "```ruby\nputs 'ruby'.upcase\n```", "quesType": "fill", "ans": "RUBY"},
  {"ques": "```ruby\nputs (1..5).cover?(5)\n```", "quesType": "fill", "ans": "true"},
  {"ques": "```ruby\nputs [1,2,3].map(&:to_s).join\n```", "quesType": "fill", "ans": "123"},
  {
    "ques": "What does `autoload` do in Ruby?",
    "quesType": "mcq",
    "op1": "Load a gem",
    "op2": "Load file only when constant is used",
    "op3": "Reload file",
    "op4": "Freezes module",
    "ans": "Load file only when constant is used"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs [1, nil, 2].compact!\n```",
    "quesType": "mcq",
    "op1": "[1, 2]",
    "op2": "nil",
    "op3": "Error",
    "op4": "[1, nil, 2]",
    "ans": "[1, 2]"
  },
  {
    "ques": "Which method is used to override `puts`?",
    "quesType": "mcq",
    "op1": "to_s",
    "op2": "inspect",
    "op3": "print",
    "op4": "initialize",
    "ans": "to_s"
  },
  {
    "ques": "What does this output?<br><br>```ruby\nputs 'ruby'.sub('u','oo')\n```",
    "quesType": "mcq",
    "op1": "ruby",
    "op2": "rooby",
    "op3": "rby",
    "op4": "Error",
    "ans": "rooby"
  },
  {
    "ques": "Which is NOT a valid Ruby variable name?",
    "quesType": "mcq",
    "op1": "_var",
    "op2": "var1",
    "op3": "$var",
    "op4": "1var",
    "ans": "1var"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs (5..10).include?(7)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "What does `extend` do?",
    "quesType": "mcq",
    "op1": "Adds module methods to instance",
    "op2": "Adds module methods to class level",
    "op3": "Freezes variable",
    "op4": "Creates class",
    "ans": "Adds module methods to class level"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 5.eql?(5.0)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "false"
  },
  {
    "ques": "Which operator matches regex pattern?",
    "quesType": "mcq",
    "op1": "=~",
    "op2": "==",
    "op3": "<=>",
    "op4": "===",
    "ans": "=~"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 'abc' * 2\n```",
    "quesType": "mcq",
    "op1": "abcabc",
    "op2": "abc",
    "op3": "Error",
    "op4": "abc2",
    "ans": "abcabc"
  },
  {
    "ques": "Which keyword ends execution?",
    "quesType": "mcq",
    "op1": "redo",
    "op2": "return",
    "op3": "yield",
    "op4": "next",
    "ans": "return"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs (1..5).reject(&:even?).inspect\n```",
    "quesType": "mcq",
    "op1": "[1, 3, 5]",
    "op2": "[2, 4]",
    "op3": "[1, 2, 3, 4, 5]",
    "op4": "[]",
    "ans": "[1, 3, 5]"
  },
  {
    "ques": "What does `prepend` do?",
    "quesType": "mcq",
    "op1": "Add module at end",
    "op2": "Add module before superclass",
    "op3": "Creates alias",
    "op4": "None",
    "ans": "Add module before superclass"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 'abcde'.slice(1,3)\n```",
    "quesType": "mcq",
    "op1": "bcd",
    "op2": "abc",
    "op3": "bc",
    "op4": "cde",
    "ans": "bcd"
  },
  {
    "ques": "Which is a valid way to get last element?",
    "quesType": "mcq",
    "op1": "arr.first",
    "op2": "arr.last",
    "op3": "arr.pop",
    "op4": "Both 2 and 3",
    "ans": "Both 2 and 3"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 'abc'.ord\n```",
    "quesType": "mcq",
    "op1": "97",
    "op2": "98",
    "op3": "99",
    "op4": "Error",
    "ans": "97"
  },
  {
    "ques": "What does `tap` do?",
    "quesType": "mcq",
    "op1": "Freezes object",
    "op2": "Yields object to block then returns object",
    "op3": "Duplicates object",
    "op4": "Extends class",
    "ans": "Yields object to block then returns object"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs 5 <=> 10\n```",
    "quesType": "mcq",
    "op1": "-1",
    "op2": "0",
    "op3": "1",
    "op4": "nil",
    "ans": "-1"
  },
  {
    "ques": "What is `method_missing` used for?",
    "quesType": "mcq",
    "op1": "To throw error",
    "op2": "To handle undefined methods",
    "op3": "To freeze class",
    "op4": "To define class",
    "ans": "To handle undefined methods"
  },
  {
    "ques": "What does `ObjectSpace` do?",
    "quesType": "mcq",
    "op1": "Manages classes",
    "op2": "Enumerates live objects",
    "op3": "Freezes arrays",
    "op4": "Handles regex",
    "ans": "Enumerates live objects"
  },
  {
    "ques": "What does `GC.start` do?",
    "quesType": "mcq",
    "op1": "Starts gem",
    "op2": "Starts garbage collection",
    "op3": "Stops method",
    "op4": "Creates constant",
    "ans": "Starts garbage collection"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs 'abc'.chop\n```",
    "quesType": "mcq",
    "op1": "ab",
    "op2": "abc",
    "op3": "bc",
    "op4": "a",
    "ans": "ab"
  },
  {
    "ques": "What does `dup` do?",
    "quesType": "mcq",
    "op1": "Duplicates an object",
    "op2": "Freezes an object",
    "op3": "Destroys object",
    "op4": "Calls block",
    "ans": "Duplicates an object"
  },
  {
    "ques": "What is output?<br><br>```ruby\nputs [].nil?\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "false"
  },
  {
    "ques": "What does `throw`/`catch` do?",
    "quesType": "mcq",
    "op1": "Loop",
    "op2": "Pattern match",
    "op3": "Flow control for non-local exit",
    "op4": "Regex operator",
    "ans": "Flow control for non-local exit"
  },
  {
    "ques": "Which is immutable?",
    "quesType": "mcq",
    "op1": "Array",
    "op2": "String",
    "op3": "Symbol",
    "op4": "Hash",
    "ans": "Symbol"
  },
  {
    "ques": "Which is false about `refinements`?",
    "quesType": "mcq",
    "op1": "It affects only current scope",
    "op2": "It can monkey patch globally",
    "op3": "It changes method lookup",
    "op4": "It is optional",
    "ans": "It can monkey patch globally"
  },
  {
    "ques": "What does `freeze` return?",
    "quesType": "mcq",
    "op1": "nil",
    "op2": "true",
    "op3": "self",
    "op4": "false",
    "ans": "self"
  },
  {
    "ques": "What prints?<br><br>```ruby\nputs :a == :a\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Which hook runs on subclassing?",
    "quesType": "mcq",
    "op1": "included",
    "op2": "extended",
    "op3": "inherited",
    "op4": "prepended",
    "ans": "inherited"
  },
  {"ques": "```ruby\nputs 'abc'.upcase\n```", "quesType": "fill", "ans": "ABC"},
  {"ques": "```ruby\nputs :abc.to_s\n```", "quesType": "fill", "ans": "abc"},
  {"ques": "```ruby\nputs 5.pred\n```", "quesType": "fill", "ans": "4"},
  {"ques": "```ruby\nputs [1,2].product([3]).inspect\n```", "quesType": "fill", "ans": "[[1, 3], [2, 3]]"},
  {"ques": "```ruby\nputs 'abc'.tr('a','x')\n```", "quesType": "fill", "ans": "xbc"},
  {"ques": "```ruby\nputs 'abc'.bytesize\n```", "quesType": "fill", "ans": "3"},
  {"ques": "```ruby\nputs [1,2,3].sample(2).size\n```", "quesType": "fill", "ans": "2"},
  {"ques": "```ruby\nputs [1,2,3].index(2)\n```", "quesType": "fill", "ans": "1"},
  {"ques": "```ruby\nputs 'abc'.succ\n```", "quesType": "fill", "ans": "abd"},
  {"ques": "```ruby\nputs 10.gcd(5)\n```", "quesType": "fill", "ans": "5"},
  {"ques": "```ruby\nputs [1,2].rotate.inspect\n```", "quesType": "fill", "ans": "[2, 1]"},
  {"ques": "```ruby\nputs [1,2,3].uniq.inspect\n```", "quesType": "fill", "ans": "[1, 2, 3]"},
  {"ques": "```ruby\nputs 'aBc'.swapcase\n```", "quesType": "fill", "ans": "AbC"},
  {"ques": "```ruby\nputs 'abc'.center(5, '_')\n```", "quesType": "fill", "ans": "_abc_"},
  {"ques": "```ruby\nputs [1,2].zip([3,4]).inspect\n```", "quesType": "fill", "ans": "[[1, 3], [2, 4]]"},
  {"ques": "```ruby\nputs [1,2,3].combination(2).to_a.size\n```", "quesType": "fill", "ans": "3"},
  {"ques": "```ruby\nputs [].empty?\n```", "quesType": "fill", "ans": "true"},
  {"ques": "```ruby\nputs 'ruby'.include?('u')\n```", "quesType": "fill", "ans": "true"},
  {"ques": "```ruby\nputs [1,2,3].reverse.first\n```", "quesType": "fill", "ans": "3"},
  {"ques": "```ruby\nputs 'abc'.chars.size\n```", "quesType": "fill", "ans": "3"},
  {"ques": "```ruby\nputs :foo.object_id == :foo.object_id\n```", "quesType": "fill", "ans": "true"},
  {"ques": "```ruby\nputs 'abc'.rjust(5, '*')\n```", "quesType": "fill", "ans": "**abc"},
  {"ques": "```ruby\nputs [1,2,3].shuffle.size\n```", "quesType": "fill", "ans": "3"},
  {"ques": "```ruby\nputs (5..10).min\n```", "quesType": "fill", "ans": "5"},
  {"ques": "```ruby\nputs [1,2,3].drop_while { |x| x < 2 }.inspect\n```", "quesType": "fill", "ans": "[2, 3]"},
  {"ques": "```ruby\nputs 'abc'.downcase\n```", "quesType": "fill", "ans": "abc"},
  {
    "ques": "Which module is mixed into all classes by default?",
    "quesType": "mcq",
    "op1": "Enumerable",
    "op2": "Comparable",
    "op3": "Kernel",
    "op4": "ObjectSpace",
    "ans": "Kernel"
  },
  {
    "ques": "What does `__END__` do in Ruby?",
    "quesType": "mcq",
    "op1": "Ends a method",
    "op2": "Indicates EOF for interpreter",
    "op3": "Declares constant",
    "op4": "Marks comment",
    "ans": "Indicates EOF for interpreter"
  },
  {
    "ques": "What does `__FILE__` return?",
    "quesType": "mcq",
    "op1": "The file size",
    "op2": "The filename",
    "op3": "The file extension",
    "op4": "The class name",
    "ans": "The filename"
  },
  {
    "ques": "What does `binding` provide?",
    "quesType": "mcq",
    "op1": "Scope context",
    "op2": "Thread safety",
    "op3": "Frozen module",
    "op4": "Garbage collection",
    "ans": "Scope context"
  },
  {
    "ques": "Which class can open files?",
    "quesType": "mcq",
    "op1": "IO",
    "op2": "Dir",
    "op3": "StringIO",
    "op4": "Both IO and StringIO",
    "ans": "Both IO and StringIO"
  },
  {
    "ques": "What prints?\n```ruby\nputs 'abc'[-1]\n```",
    "quesType": "mcq",
    "op1": "a",
    "op2": "b",
    "op3": "c",
    "op4": "Error",
    "ans": "c"
  },
  {
    "ques": "Which symbol accesses class variables?",
    "quesType": "mcq",
    "op1": "@",
    "op2": "$",
    "op3": "@@",
    "op4": "%",
    "ans": "@@"
  },
  {
    "ques": "What is output?\n```ruby\nputs 1.fdiv(2)\n```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "0.5",
    "op3": "1",
    "op4": "2",
    "ans": "0.5"
  },
  {
    "ques": "Which returns a frozen duplicate?",
    "quesType": "mcq",
    "op1": "dup",
    "op2": "clone",
    "op3": "freeze",
    "op4": "tap",
    "ans": "clone"
  },
  {
    "ques": "What does `caller` return?",
    "quesType": "mcq",
    "op1": "Method args",
    "op2": "Stack trace",
    "op3": "Caller object",
    "op4": "Variable name",
    "ans": "Stack trace"
  },
  {
    "ques": "Which hook runs when method missing?",
    "quesType": "mcq",
    "op1": "method_missing",
    "op2": "respond_to?",
    "op3": "inherited",
    "op4": "initialize",
    "ans": "method_missing"
  },
  {
    "ques": "What does `defined?` return for nil?",
    "quesType": "mcq",
    "op1": "nil",
    "op2": "false",
    "op3": "true",
    "op4": "Expression type",
    "ans": "Expression type"
  },
  {
    "ques": "What does `&&=` operator do?",
    "quesType": "mcq",
    "op1": "Logical OR assign",
    "op2": "Logical AND assign",
    "op3": "Bitwise OR",
    "op4": "Bitwise AND",
    "ans": "Logical AND assign"
  },
  {
    "ques": "Which is NOT true for blocks?",
    "quesType": "mcq",
    "op1": "Can be saved",
    "op2": "Passed as argument",
    "op3": "Anonymous",
    "op4": "Creates new scope",
    "ans": "Creates new scope"
  },
  {
    "ques": "What is `?` syntax?\n```ruby\nputs ?a\n```",
    "quesType": "mcq",
    "op1": "Error",
    "op2": "String 'a'",
    "op3": "97",
    "op4": "0",
    "ans": "97"
  },
  {
    "ques": "Which is not enumerable?",
    "quesType": "mcq",
    "op1": "Range",
    "op2": "Hash",
    "op3": "Proc",
    "op4": "Array",
    "ans": "Proc"
  },
  {
    "ques": "What does `redo` do?",
    "quesType": "mcq",
    "op1": "Repeats loop",
    "op2": "Breaks loop",
    "op3": "Continues loop",
    "op4": "Ends program",
    "ans": "Repeats loop"
  },
  {
    "ques": "What is output?\n```ruby\nputs 'abc'.reverse!\n```",
    "quesType": "mcq",
    "op1": "abc",
    "op2": "Error",
    "op3": "cba",
    "op4": "nil",
    "ans": "cba"
  },
  {
    "ques": "Which runs only once?",
    "quesType": "mcq",
    "op1": "BEGIN",
    "op2": "END",
    "op3": "Both",
    "op4": "None",
    "ans": "Both"
  },
  {
    "ques": "Which handles at_exit hooks?",
    "quesType": "mcq",
    "op1": "BEGIN",
    "op2": "END",
    "op3": "Kernel",
    "op4": "Object",
    "ans": "END"
  },
  {
    "ques": "What prints?\n```ruby\nputs %q{hi}\n```",
    "quesType": "mcq",
    "op1": "hi",
    "op2": "%q{hi}",
    "op3": "Error",
    "op4": "nil",
    "ans": "hi"
  },
  {
    "ques": "Which is NOT immutable?",
    "quesType": "mcq",
    "op1": "Symbol",
    "op2": "Fixnum",
    "op3": "String",
    "op4": "nil",
    "ans": "String"
  },
  {
    "ques": "What does `super` do?",
    "quesType": "mcq",
    "op1": "Calls parent class method",
    "op2": "Calls private method",
    "op3": "Stops inheritance",
    "op4": "Freezes class",
    "ans": "Calls parent class method"
  },
  {
    "ques": "What is output?\n```ruby\nputs nil || false\n```",
    "quesType": "mcq",
    "op1": "nil",
    "op2": "false",
    "op3": "true",
    "op4": "Error",
    "ans": "false"
  },
  {
    "ques": "What prints?\n```ruby\nputs %x(echo hi)\n```",
    "quesType": "mcq",
    "op1": "hi",
    "op2": "Error",
    "op3": "%x(echo hi)",
    "op4": "nil",
    "ans": "hi"
  },
  {
    "ques": "What does `throw` need?",
    "quesType": "mcq",
    "op1": "Block",
    "op2": "Condition",
    "op3": "Catch",
    "op4": "Redo",
    "ans": "Catch"
  },
  {
    "ques": "Which class handles regex?",
    "quesType": "mcq",
    "op1": "Regexp",
    "op2": "String",
    "op3": "Pattern",
    "op4": "MatchData",
    "ans": "Regexp"
  },
  {
    "ques": "What does `flip-flop` do?",
    "quesType": "mcq",
    "op1": "Bitwise XOR",
    "op2": "Range-based state toggle",
    "op3": "Regex match",
    "op4": "Array flip",
    "ans": "Range-based state toggle"
  },
  {
    "ques": "Which operator is safe nav?",
    "quesType": "mcq",
    "op1": "&.",
    "op2": "?.",
    "op3": "::",
    "op4": ":?",
    "ans": "&."
  },
  {"ques": "```ruby\nputs [1,2,3].last\n```", "quesType": "fill", "ans": "3"},
  {"ques": "```ruby\nputs [1,2,3].fetch(0)\n```", "quesType": "fill", "ans": "1"},
  {"ques": "```ruby\nputs '123'.to_i + 1\n```", "quesType": "fill", "ans": "124"},

]

let rubyIncorrectAnswers = [];

let rubyTimerId = "";
let rubySkip = document.getElementById("rubySkip");
let codingrubyQues = document.getElementById("codingrubyQues");
let mcqruby = document.getElementById("mcqruby");
let rubyQuestionNumber = document.getElementById("rubyQuestionNumber");
let rubyQuestionCount = 2;
let rubyScore = 0;
let rubyScoreDisplay = document.getElementById("rubyScoreDisplay");
let rubyScoreShow = document.getElementById("rubyScoreShow");
let rubySkip2 = document.getElementById("rubySkip2");

let rubyFillAns = document.getElementById("rubyFillAns");
let rubyStatus1 = document.getElementById("rubyStatus1");
let rubyStatus2 = document.getElementById("rubyStatus2");
let rubyStatus3 = document.getElementById("rubyStatus3");
let rubyCheckFill = document.getElementById("rubyCheckFill");

let codingResultruby = document.getElementById("codingResultruby");

let rubyIncorrectAnswersDisplay = document.getElementById("rubyIncorrectAnswersDisplay");
let rubyScoreBelow70 = document.getElementById("rubyScoreBelow70");
let rubyScore100 = document.getElementById("rubyScore100");

let rubyResult1 = document.getElementById("rubyResult1");
let rubyResult2 = document.getElementById("rubyResult2");
let rubyResult3 = document.getElementById("rubyResult3");
let rubyResult4 = document.getElementById("rubyResult4");
let rubyResult5 = document.getElementById("rubyResult5");
let rubyBg1 = document.getElementById("rubyBg1");

function codingrubyStart(){
  codingrubyHide.classList.add("d-none");
codingrubyShow.classList.remove("d-none");

let fillBlankruby = document.getElementById("fillBlankruby");
let op1ruby = document.getElementById("op1ruby");
let op2ruby = document.getElementById("op2ruby");
let op3ruby = document.getElementById("op3ruby");
let op4ruby = document.getElementById("op4ruby");

let rubyFillAns = document.getElementById("rubyFillAns");
let rubyStatus1 = document.getElementById("rubyStatus1");
let rubyStatus2 = document.getElementById("rubyStatus2");
let rubyStatus3 = document.getElementById("rubyStatus3");
let rubyCheckFill = document.getElementById("rubyCheckFill");

rubyFillAns.disabled = false;
rubyStatus1.classList.remove("d-none");
rubyStatus2.classList.add("d-none");
rubyStatus3.classList.add("d-none");
rubyFillAns.value = "";
rubySkip2.textContent = "Skip";
rubySkip2.style.backgroundColor = "orange";
rubySkip2.style.borderColor = "orange";

rubySkip.textContent = "Skip";
rubySkip.style.backgroundColor = "orange";
rubySkip.style.borderColor = "orange";
rubyScoreShow.textContent = "";
rubyTimer.style.color = "black";

if (rubyLevel === 1) {
  let rubyRandom = Math.floor(Math.random() * codingruby1Arr.length);
  let y = codingruby1Arr[rubyRandom];
  rubyTimer.textContent = "20";
  rubyTime = 20;

  rubyTimerId = setInterval(function () {
    rubyTime = rubyTime - 1;
    if (rubyTime == 0) {
      clearInterval(rubyTimerId);
      rubyQuestionNumber.textContent = "Question:" + rubyQuestionCount + "/10";
      rubyQuestionCount = rubyQuestionCount + 1;
      rubyTime = 20;
      codingrubyStart();
    }
    if (rubyTime <= 5) {
      rubyTimer.style.color = "red";
      rubyTimer.textContent = rubyTime;
    } else {
      rubyTimer.textContent = rubyTime;
    }
  }, 1000);

  if (rubyQuestionCount == 12) {
    clearInterval(rubyTimerId);
    mcqruby.classList.add("d-none");
    document.getElementById("rubyScoreEnd").textContent = rubyScoreDisplay.textContent;
    fillBlankruby.classList.add("d-none");
    codingrubyShow.classList.add("d-none");
    codingResultruby.classList.remove("d-none");

    if (rubyScore < 70) {
      rubyScoreBelow70.classList.remove("d-none");
      rubyScore100.classList.add("d-none");
      sectionCodingruby.classList.add("back15");

      rubyResult1.textContent = "Test finished!!";
      rubyResult2.textContent = "😓 Oops! Not quite right.";
      rubyResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      rubyResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      rubyIncorrectAnswersDisplay.appendChild(h2);

      for (let z of rubyIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        rubyIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (rubyScore < 100) {
      rubyScoreBelow70.classList.remove("d-none");
      rubyScore100.classList.add("d-none");
      sectionCodingruby.classList.add("back15");

      rubyResult1.textContent = "Test finished!!";
      rubyResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      rubyResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      rubyResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      rubyIncorrectAnswersDisplay.appendChild(h2);

      for (let z of rubyIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        rubyIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (rubyScore === 100) {
      document.getElementById("sectionCodingruby").classList.add("back14");
      rubyScore100.classList.remove("d-none");
      rubyScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqruby.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingrubyQues.innerHTML = formattedQuestion;

    fillBlankruby.classList.add("d-none");
    op1ruby.textContent = y.op1;
    op2ruby.textContent = y.op2;
    op3ruby.textContent = y.op3;
    op4ruby.textContent = y.op4;

    const allOps = [op1ruby, op2ruby, op3ruby, op4ruby];
    allOps.forEach((op, i) => {
      op.onclick = function () {
        allOps.forEach(o => (o.disabled = true));
        clearInterval(rubyTimerId);
        rubyTime = 20;

        if (op.textContent === y.ans) {
          op.style.backgroundColor = "green";
          rubyScore += 10;
          rubyScoreShow.textContent = "+10";
          rubyScoreShow.style.color = "green";
        } else {
          op.style.backgroundColor = "red";
          rubyScore -= 5;
          rubyScoreShow.textContent = "-5";
          rubyScoreShow.style.color = "red";
          let wrong_answer = { ques: y.ques, correct: y.ans, wrong: op.textContent };
          rubyIncorrectAnswers.push(wrong_answer);
        }

        rubyScoreDisplay.textContent = "Score: " + rubyScore + "/100";

        rubySkip.textContent = "Next";
        rubySkip.style.backgroundColor = "#23ebdd";
        rubySkip.style.borderColor = "#23ebdd";

        rubySkip.onclick = function () {
          rubyQuestionNumber.textContent = "Question:" + rubyQuestionCount + "/10";
          rubyQuestionCount += 1;
          allOps.forEach(o => {
            o.disabled = false;
            o.style.backgroundColor = "white";
          });
          codingrubyStart();
        };
      };
    });

    rubySkip.onclick = function () {
      clearInterval(rubyTimerId);
      rubyTime = 20;
      rubyQuestionNumber.textContent = "Question:" + rubyQuestionCount + "/10";
      rubyQuestionCount += 1;
      allOps.forEach(o => {
        o.disabled = false;
        o.style.backgroundColor = "white";
      });
      let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
      rubyIncorrectAnswers.push(wrong_answer);
      codingrubyStart();
    };
  } 
  else {
    mcqruby.classList.add("d-none");
    fillBlankruby.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingrubyQues.innerHTML = formattedQuestion;

    rubyCheckFill.onclick = function () {
      clearInterval(rubyTimerId);
      rubyCheckFill.disabled = false;
      rubySkip2.textContent = "Next";
      rubySkip2.style.backgroundColor = "#23ebdd";
      rubySkip2.style.borderColor = "#23ebdd";
      rubyFillAns.disabled = true;

      if (rubyFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        rubyStatus1.classList.add("d-none");
        rubyStatus2.classList.remove("d-none");

        rubyScore += 10;
        rubyScoreShow.textContent = "+10";
        rubyScoreShow.style.color = "green";
      } else {
        rubyStatus1.classList.add("d-none");
        rubyStatus3.classList.remove("d-none");

        rubyScore -= 5;
        rubyScoreShow.textContent = "-5";
        rubyScoreShow.style.color = "red";

        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: rubyFillAns.value };
        rubyIncorrectAnswers.push(wrong_answer);
      }

      rubyScoreDisplay.textContent = "Score: " + rubyScore + "/100";
    };

    rubySkip2.onclick = function () {
      if (rubyFillAns.value === "") {
        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
        rubyIncorrectAnswers.push(wrong_answer);
      }
      clearInterval(rubyTimerId);
      rubyTime = 20;
      rubyQuestionNumber.textContent = "Question:" + rubyQuestionCount + "/10";
      rubyQuestionCount += 1;
      codingrubyStart();
    };
  }
}
else if (rubyLevel === 2) {
  let rubyRandom = Math.floor(Math.random() * codingruby2Arr.length);
  let y = codingruby2Arr[rubyRandom];
  rubyTimer.textContent = "25";
  rubyTime = 25;

  rubyTimerId = setInterval(function () {
    rubyTime = rubyTime - 1;
    if (rubyTime == 0) {
      clearInterval(rubyTimerId);
      rubyQuestionNumber.textContent = "Question:" + rubyQuestionCount + "/10";
      rubyQuestionCount = rubyQuestionCount + 1;
      rubyTime = 25;
      codingrubyStart();
    }
    if (rubyTime <= 5) {
      rubyTimer.style.color = "red";
      rubyTimer.textContent = rubyTime;
    } else {
      rubyTimer.textContent = rubyTime;
    }
  }, 1000);

  if (rubyQuestionCount == 12) {
    clearInterval(rubyTimerId);
    mcqruby.classList.add("d-none");
    document.getElementById("rubyScoreEnd").textContent = rubyScoreDisplay.textContent;
    fillBlankruby.classList.add("d-none");
    codingrubyShow.classList.add("d-none");
    codingResultruby.classList.remove("d-none");

    if (rubyScore < 70) {
      rubyScoreBelow70.classList.remove("d-none");
      rubyScore100.classList.add("d-none");
      sectionCodingruby.classList.add("back15");

      rubyResult1.textContent = "Test finished!!";
      rubyResult2.textContent = "😓 Oops! Not quite right.";
      rubyResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      rubyResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      rubyIncorrectAnswersDisplay.appendChild(h2);

      for (let z of rubyIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        rubyIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (rubyScore < 100) {
      rubyScoreBelow70.classList.remove("d-none");
      rubyScore100.classList.add("d-none");
      sectionCodingruby.classList.add("back15");

      rubyResult1.textContent = "Test finished!!";
      rubyResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      rubyResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      rubyResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      rubyIncorrectAnswersDisplay.appendChild(h2);

      for (let z of rubyIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        rubyIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (rubyScore === 100) {
      document.getElementById("sectionCodingruby").classList.add("back14");
      rubyScore100.classList.remove("d-none");
      rubyScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqruby.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingrubyQues.innerHTML = formattedQuestion;
    fillBlankruby.classList.add("d-none");
    op1ruby.textContent = y.op1;
    op2ruby.textContent = y.op2;
    op3ruby.textContent = y.op3;
    op4ruby.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(rubyTimerId);
      rubyTime = 25;
      rubySkip.textContent = "Next";
      rubySkip.style.backgroundColor = "#23ebdd";
      rubySkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        rubyScore += 10;
        rubyScoreShow.textContent = "+10";
        rubyScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        rubyScore -= 5;
        rubyScoreShow.textContent = "-5";
        rubyScoreShow.style.color = "red";
        rubyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      rubyScoreDisplay.textContent = "Score: " + rubyScore + "/100";
    }

    op1ruby.onclick = () => handleOptionClick(op1ruby, [op2ruby, op3ruby, op4ruby]);
    op2ruby.onclick = () => handleOptionClick(op2ruby, [op1ruby, op3ruby, op4ruby]);
    op3ruby.onclick = () => handleOptionClick(op3ruby, [op1ruby, op2ruby, op4ruby]);
    op4ruby.onclick = () => handleOptionClick(op4ruby, [op1ruby, op2ruby, op3ruby]);

    rubySkip.onclick = function () {
      clearInterval(rubyTimerId);
      rubyTime = 25;
      rubyQuestionNumber.textContent = "Question:" + rubyQuestionCount + "/10";
      rubyQuestionCount++;
      [op1ruby, op2ruby, op3ruby, op4ruby].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      rubyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingrubyStart();
    };
  }
  else {
    mcqruby.classList.add("d-none");
    fillBlankruby.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingrubyQues.innerHTML = formattedQuestion;

    rubyCheckFill.disabled = false;
    rubyFillAns.disabled = false;
    rubyFillAns.value = "";
    rubyStatus1.classList.remove("d-none");
    rubyStatus2.classList.add("d-none");
    rubyStatus3.classList.add("d-none");
    rubyScoreShow.textContent = "";

    rubyCheckFill.onclick = function () {
      clearInterval(rubyTimerId);
      rubyCheckFill.disabled = true;
      rubySkip2.textContent = "Next";
      rubySkip2.style.backgroundColor = "#23ebdd";
      rubySkip2.style.borderColor = "#23ebdd";
      rubyFillAns.disabled = true;

      if (rubyFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        rubyStatus1.classList.add("d-none");
        rubyStatus2.classList.remove("d-none");
        rubyScore += 10;
        rubyScoreShow.textContent = "+10";
        rubyScoreShow.style.color = "green";
      } else {
        rubyStatus1.classList.add("d-none");
        rubyStatus3.classList.remove("d-none");
        rubyScore -= 5;
        rubyScoreShow.textContent = "-5";
        rubyScoreShow.style.color = "red";
        rubyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: rubyFillAns.value });
      }
      rubyScoreDisplay.textContent = "Score: " + rubyScore + "/100";
    };

    rubySkip2.onclick = function () {
      if (rubyFillAns.value === "") {
        rubyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      }
      clearInterval(rubyTimerId);
      rubyTime = 25;
      rubyQuestionNumber.textContent = "Question:" + rubyQuestionCount + "/10";
      rubyQuestionCount++;
      codingrubyStart();
    };
  }
}
else if (rubyLevel === 3) {
  let rubyRandom = Math.floor(Math.random() * codingruby3Arr.length);
  let y = codingruby3Arr[rubyRandom];
  rubyTimer.textContent = "30";
  rubyTime = 30;

  rubyTimerId = setInterval(function () {
    rubyTime = rubyTime - 1;
    if (rubyTime == 0) {
      clearInterval(rubyTimerId);
      rubyQuestionNumber.textContent = "Question:" + rubyQuestionCount + "/10";
      rubyQuestionCount = rubyQuestionCount + 1;
      rubyTime = 30;
      codingrubyStart();
    }
    if (rubyTime <= 5) {
      rubyTimer.style.color = "red";
      rubyTimer.textContent = rubyTime;
    } else {
      rubyTimer.textContent = rubyTime;
    }
  }, 1000);

  if (rubyQuestionCount == 12) {
    clearInterval(rubyTimerId);
    mcqruby.classList.add("d-none");
    document.getElementById("rubyScoreEnd").textContent = rubyScoreDisplay.textContent;
    fillBlankruby.classList.add("d-none");
    codingrubyShow.classList.add("d-none");
    codingResultruby.classList.remove("d-none");

    if (rubyScore < 70) {
      rubyScoreBelow70.classList.remove("d-none");
      rubyScore100.classList.add("d-none");
      sectionCodingruby.classList.add("back15");

      rubyResult1.textContent = "Test finished!!";
      rubyResult2.textContent = "😓 Oops! Not quite right.";
      rubyResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      rubyResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      rubyIncorrectAnswersDisplay.appendChild(h2);

      for (let z of rubyIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        rubyIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (rubyScore < 100) {
      rubyScoreBelow70.classList.remove("d-none");
      rubyScore100.classList.add("d-none");
      sectionCodingruby.classList.add("back15");

      rubyResult1.textContent = "Test finished!!";
      rubyResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      rubyResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      rubyResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      rubyIncorrectAnswersDisplay.appendChild(h2);

      for (let z of rubyIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        rubyIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (rubyScore === 100) {
      document.getElementById("sectionCodingruby").classList.add("back14");
      rubyScore100.classList.remove("d-none");
      rubyScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqruby.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingrubyQues.innerHTML = formattedQuestion;
    fillBlankruby.classList.add("d-none");
    op1ruby.textContent = y.op1;
    op2ruby.textContent = y.op2;
    op3ruby.textContent = y.op3;
    op4ruby.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(rubyTimerId);
      rubyTime = 30;
      rubySkip.textContent = "Next";
      rubySkip.style.backgroundColor = "#23ebdd";
      rubySkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        rubyScore += 10;
        rubyScoreShow.textContent = "+10";
        rubyScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        rubyScore -= 5;
        rubyScoreShow.textContent = "-5";
        rubyScoreShow.style.color = "red";
        rubyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      rubyScoreDisplay.textContent = "Score: " + rubyScore + "/100";
    }

    op1ruby.onclick = () => handleOptionClick(op1ruby, [op2ruby, op3ruby, op4ruby]);
    op2ruby.onclick = () => handleOptionClick(op2ruby, [op1ruby, op3ruby, op4ruby]);
    op3ruby.onclick = () => handleOptionClick(op3ruby, [op1ruby, op2ruby, op4ruby]);
    op4ruby.onclick = () => handleOptionClick(op4ruby, [op1ruby, op2ruby, op3ruby]);

    rubySkip.onclick = function () {
      clearInterval(rubyTimerId);
      rubyTime = 30;
      rubyQuestionNumber.textContent = "Question:" + rubyQuestionCount + "/10";
      rubyQuestionCount++;
      [op1ruby, op2ruby, op3ruby, op4ruby].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      rubyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingrubyStart();
    };
  }
   else {
    mcqruby.classList.add("d-none");
    fillBlankruby.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingrubyQues.innerHTML = formattedQuestion;

    rubyCheckFill.disabled = false;
    rubyFillAns.disabled = false;
    rubyFillAns.value = "";
    rubyStatus1.classList.remove("d-none");
    rubyStatus2.classList.add("d-none");
    rubyStatus3.classList.add("d-none");
    rubyScoreShow.textContent = "";

    rubyCheckFill.onclick = function () {
      clearInterval(rubyTimerId);
      rubyCheckFill.disabled = true;
      rubySkip2.textContent = "Next";
      rubySkip2.style.backgroundColor = "#23ebdd";
      rubySkip2.style.borderColor = "#23ebdd";
      rubyFillAns.disabled = true;

      if (rubyFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        rubyStatus1.classList.add("d-none");
        rubyStatus2.classList.remove("d-none");
        rubyScore += 10;
        rubyScoreShow.textContent = "+10";
        rubyScoreShow.style.color = "green";
      } else {
        rubyStatus1.classList.add("d-none");
        rubyStatus3.classList.remove("d-none");
        rubyScore -= 5;
        rubyScoreShow.textContent = "-5";
        rubyScoreShow.style.color = "red";
        rubyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: rubyFillAns.value });
      }
      rubyScoreDisplay.textContent = "Score: " + rubyScore + "/100";
    };

    rubySkip2.onclick = function () {
      if (rubyFillAns.value === "") {
        rubyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      }
      clearInterval(rubyTimerId);
      rubyTime = 30;
      rubyQuestionNumber.textContent = "Question:" + rubyQuestionCount + "/10";
      rubyQuestionCount++;
      codingrubyStart();
    };
  }
}


}

function resetCodingruby() {
  document.getElementById("codingrubyShow").classList.add("d-none");
  document.getElementById("codingResultruby").classList.add("d-none");
  document.getElementById("codingrubyHide").classList.remove("d-none");

  document.getElementById("rubyQuestionNumber").innerText = "Question: 1/10";
  document.getElementById("rubyScoreDisplay").innerText = "Score: 0/100";
  document.getElementById("rubyScoreShow").innerText = "";
  document.getElementById("rubyTimer").innerText = "00";
  document.getElementById("codingrubyQues").innerText = "";

  document.getElementById("op1ruby").innerText = "option1";
  document.getElementById("op2ruby").innerText = "option2";
  document.getElementById("op3ruby").innerText = "option3";
  document.getElementById("op4ruby").innerText = "option4";

  rubyIncorrectAnswers = [];
  document.getElementById("rubyIncorrectAnswersDisplay").innerHTML = "";

  rubyScore100.classList.add("d-none");
  rubyScoreBelow70.classList.add("d-none");

  rubyResult1.textContent = "";
  rubyResult2.textContent = "";
  rubyResult3.src = "";
  rubyResult4.textContent = "";

  sectionCodingruby.classList.remove("back14");
  sectionCodingruby.classList.remove("back15");

  document.getElementById("rubyFillAns").value = "";
  document.getElementById("fillBlankruby").style.display = "none";
  document.getElementById("mcqruby").style.display = "block";

  document.getElementById("rubyStatus1").classList.remove("d-none");
  document.getElementById("rubyStatus2").classList.add("d-none");
  document.getElementById("rubyStatus3").classList.add("d-none");

  if (typeof rubyTimerId !== "undefined") {
    clearInterval(rubyTimerId);
  }
  rubyTime = 20;
  rubyQuestionCount = 2;
  rubyScore = 0;
}

function rubyResetLevel() {
  rubyButton1.disabled = false;
  rubyButton2.disabled = false;
  rubyButton3.disabled = false;
  rubyButton.classList.add("d-none");
  rubyIncorrectAnswers = [];
}

    // rust

  
let rustButton = document.getElementById("rustButton");
let rustButton1 = document.getElementById("rustButton1");
let rustButton2 = document.getElementById("rustButton2");
let rustButton3 = document.getElementById("rustButton3");
let rustLevel = 0;
let rustCodingTest = document.getElementById("rustCodingTest");
let rustTimer = document.getElementById("rustTimer");

rustButton1.onclick = function () {
  rustButton2.disabled = true;
  rustButton3.disabled = true;
  rustLevel = 1;

  rustButton.classList.remove("d-none");
  rustButton.classList.add("d-block");
};

rustButton2.onclick = function () {
  rustButton1.disabled = true;
  rustButton3.disabled = true;
  rustLevel = 2;

  rustButton.classList.remove("d-none");
  rustButton.classList.add("d-block");
};

rustButton3.onclick = function () {
  rustButton2.disabled = true;
  rustButton1.disabled = true;
  rustLevel = 3;

  rustButton.classList.remove("d-none");
  rustButton.classList.add("d-block");
};

let rustTime = 0;

let codingrustShow = document.getElementById("codingrustShow");
let codingrustHide = document.getElementById("codingrustHide");
let codingrustBack = document.getElementById("codingrustBack");

codingrustBack.onclick = function () {
  codingrustShow.classList.add("d-none");
  codingrustHide.classList.remove("d-none");
};


let codingrust1Arr=[
  {
    "ques": "What is the output?<br><br>```rust<br>let x = 5;<br>println!(\"{}\", x * 2);<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "10",
    "op3": "2",
    "op4": "0",
    "ans": "10"
  },
  {
    "ques": "What is printed?<br><br>```rust<br>println!(\"{}\", \"Hello\".to_string() + \" World\");<br>```",
    "quesType": "mcq",
    "op1": "HelloWorld",
    "op2": "Hello World",
    "op3": "Hello",
    "op4": "World",
    "ans": "Hello World"
  },
  {
    "ques": "How to declare a mutable variable?<br><br>```rust<br>let mut x = 10;<br>```",
    "quesType": "mcq",
    "op1": "Immutable",
    "op2": "Mutable",
    "op3": "Constant",
    "op4": "Static",
    "ans": "Mutable"
  },
  {
    "ques": "What is the output?<br><br>```rust<br>let x = [1, 2, 3];<br>println!(\"{}\", x.len());<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "1",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "What is true?<br><br>```rust<br>let x: Option<i32> = None;<br>println!(\"{}\", x.is_none());<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "None",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Output?<br><br>```rust<br>println!(\"{}\", 5 == 5);<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "None",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Result?<br><br>```rust<br>println!(\"{}\", 5 == 5.0);<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Error",
    "op4": "None",
    "ans": "true"
  },
  {
    "ques": "What will be printed?<br><br>```rust<br>println!(\"{}\", \"rust\".to_uppercase());<br>```",
    "quesType": "mcq",
    "op1": "rust",
    "op2": "Rust",
    "op3": "RUST",
    "op4": "Error",
    "ans": "RUST"
  },
  {
    "ques": "Output?<br><br>```rust<br>println!(\"{}\", \"Hello\".len());<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "4",
    "op3": "6",
    "op4": "0",
    "ans": "5"
  },
  {
    "ques": "What is printed?<br><br>```rust<br>let arr = [1, 2, 3];<br>println!(\"{}\", arr[1]);<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "2"
  },
  {
    "ques": "Which value?<br><br>```rust<br>println!(\"{}\", \"abc\" == \"abc\");<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Error",
    "op4": "None",
    "ans": "true"
  },
  {
    "ques": "Output?<br><br>```rust<br>println!(\"{}\", 5.cmp(&5) == std::cmp::Ordering::Equal);<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Error",
    "op4": "0",
    "ans": "true"
  },
  {
    "ques": "Which is printed?<br><br>```rust<br>println!(\"{}\", \"test\".contains(\"es\"));<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "None",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Output?<br><br>```rust<br>let x = vec![1, 2, 3];<br>println!(\"{}\", x.first().unwrap());<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "1"
  },
  {
    "ques": "What is shown?<br><br>```rust<br>let x = vec![1, 2, 3];<br>println!(\"{}\", x.last().unwrap());<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "Result?<br><br>```rust<br>println!(\"{}\", format!(\"{}{}\", \"abc\", \"def\"));<br>```",
    "quesType": "mcq",
    "op1": "abcdef",
    "op2": "abc def",
    "op3": "abc",
    "op4": "def",
    "ans": "abcdef"
  },
  {
    "ques": "Output?<br><br>```rust<br>for _ in 0..2 { print!(\"Hi\"); }<br>```",
    "quesType": "mcq",
    "op1": "Hi",
    "op2": "HiHi",
    "op3": "Error",
    "op4": "2Hi",
    "ans": "HiHi"
  },
  {
    "ques": "Prints?<br><br>```rust<br>println!(\"{}\", 2_i32.pow(3));<br>```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "8",
    "op3": "9",
    "op4": "2",
    "ans": "8"
  },
  {
    "ques": "What is output?<br><br>```rust<br>println!(\"{}\", 10 / 2);<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "2",
    "op3": "0",
    "op4": "10",
    "ans": "5"
  },
  {
    "ques": "What is printed?<br><br>```rust<br>println!(\"{}\", \"rust\".replace(\"r\", \"R\"));<br>```",
    "quesType": "mcq",
    "op1": "rust",
    "op2": "Rust",
    "op3": "RUST",
    "op4": "error",
    "ans": "Rust"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"Rust\".to_lowercase());\n```",
    "quesType": "fill",
    "ans": "rust"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", vec![1, 2, 3].iter().sum::<i32>());\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"Hello\".len());\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 2_i32.pow(4));\n```",
    "quesType": "fill",
    "ans": "16"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"test\".chars().rev().collect::<String>());\n```",
    "quesType": "fill",
    "ans": "tset"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"abc\".to_uppercase());\n```",
    "quesType": "fill",
    "ans": "ABC"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 9 % 2);\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 7 * 3);\n```",
    "quesType": "fill",
    "ans": "21"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", vec![1, 2, 3].contains(&2));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", vec![1, 2, 3].len());\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"abc\".chars().nth(0).unwrap());\n```",
    "quesType": "fill",
    "ans": "a"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"Hello World\".split_whitespace().next().unwrap());\n```",
    "quesType": "fill",
    "ans": "Hello"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"Rust\".replace(\"R\", \"D\"));\n```",
    "quesType": "fill",
    "ans": "Dust"
  },
  {
    "ques": "```rust\nprintln!(\"{:?}\", vec![1, 2, 3, 4]);\n```",
    "quesType": "fill",
    "ans": "[1, 2, 3, 4]"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"123\".parse::<i32>().unwrap() + 1);\n```",
    "quesType": "fill",
    "ans": "124"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"5\".parse::<f32>().unwrap() * 2.0);\n```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"abc\".chars().count());\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"   text   \".trim());\n```",
    "quesType": "fill",
    "ans": "text"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", vec![1, 2, 3].iter().min().unwrap());\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", vec![1, 2, 3].iter().max().unwrap());\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "What will be printed?<br><br>```rust\nlet x = 4;\nprintln!(\"{}\", x + 1);\n```",
    "quesType": "mcq",
    "op1": "4",
    "op2": "5",
    "op3": "1",
    "op4": "0",
    "ans": "5"
  },
  {
    "ques": "What does this do?<br><br>```rust\nlet s = String::from(\"Rust\");\nprintln!(\"{}\", s);\n```",
    "quesType": "mcq",
    "op1": "Rust",
    "op2": "rust",
    "op3": "Error",
    "op4": "None",
    "ans": "Rust"
  },
  {
    "ques": "Which is a valid type?<br><br>```rust\nlet x: f64 = 2.5;\n```",
    "quesType": "mcq",
    "op1": "Integer",
    "op2": "Boolean",
    "op3": "Floating point",
    "op4": "String",
    "ans": "Floating point"
  },
  {
    "ques": "Which loop syntax is valid?<br><br>```rust\nfor i in 0..3 {\n println!(\"{}\", i);\n}\n```",
    "quesType": "mcq",
    "op1": "Invalid",
    "op2": "Valid",
    "op3": "Syntax error",
    "op4": "None",
    "ans": "Valid"
  },
  {
    "ques": "How to declare a constant?<br><br>```rust\nconst PI: f64 = 3.14;\n```",
    "quesType": "mcq",
    "op1": "const",
    "op2": "let",
    "op3": "mut",
    "op4": "var",
    "ans": "const"
  },
  {
    "ques": "Which keyword for function?<br><br>```rust\nfn main() {}\n```",
    "quesType": "mcq",
    "op1": "def",
    "op2": "fn",
    "op3": "func",
    "op4": "function",
    "ans": "fn"
  },
  {
    "ques": "What is output?<br><br>```rust\nlet b = true;\nprintln!(\"{}\", b);\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "1",
    "op4": "0",
    "ans": "true"
  },
  {
    "ques": "What does this print?<br><br>```rust\nprintln!(\"{}\", \"Rust\".chars().count());\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "4",
    "op3": "5",
    "op4": "0",
    "ans": "4"
  },
  {
    "ques": "What is the result?<br><br>```rust\nlet x = 5;\nprintln!(\"{}\", x > 3);\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Error",
    "op4": "5",
    "ans": "true"
  },
  {
    "ques": "Which operator for AND?<br><br>```rust\ntrue && false\n```",
    "quesType": "mcq",
    "op1": "||",
    "op2": "&&",
    "op3": "!",
    "op4": "&",
    "ans": "&&"
  },
  {
    "ques": "What is output?<br><br>```rust\nprintln!(\"{}\", 5 - 2);\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "5",
    "op4": "7",
    "ans": "3"
  },
  {
    "ques": "Which means equality?<br><br>```rust\nx == y\n```",
    "quesType": "mcq",
    "op1": "=",
    "op2": "===",
    "op3": "==",
    "op4": "!=",
    "ans": "=="
  },
  {
    "ques": "What is shown?<br><br>```rust\nlet t = true;\nprintln!(\"{}\", !t);\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Error",
    "op4": "0",
    "ans": "false"
  },
  {
    "ques": "Which is correct?<br><br>```rust\nlet c = 'A';\n```",
    "quesType": "mcq",
    "op1": "String",
    "op2": "Char",
    "op3": "Integer",
    "op4": "Array",
    "ans": "Char"
  },
  {
    "ques": "What does this show?<br><br>```rust\nlet tup = (1, true);\nprintln!(\"{}\", tup.0);\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "true",
    "op3": "(1, true)",
    "op4": "0",
    "ans": "1"
  },
  {
    "ques": "Which is the default main?<br><br>```rust\nfn main() {}\n```",
    "quesType": "mcq",
    "op1": "Class",
    "op2": "Method",
    "op3": "Function",
    "op4": "Struct",
    "ans": "Function"
  },
  {
    "ques": "Which is true for vector?<br><br>```rust\nlet v = vec![1,2,3];\n```",
    "quesType": "mcq",
    "op1": "Fixed size",
    "op2": "Dynamic size",
    "op3": "Immutable",
    "op4": "Doesn't exist",
    "ans": "Dynamic size"
  },
  {
    "ques": "What is printed?<br><br>```rust\nlet v = vec![1,2,3];\nprintln!(\"{}\", v[2]);\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "Which type is bool?<br><br>```rust\nlet x = false;\n```",
    "quesType": "mcq",
    "op1": "String",
    "op2": "Number",
    "op3": "Boolean",
    "op4": "Char",
    "ans": "Boolean"
  },
  {
    "ques": "Which is immutable by default?<br><br>```rust\nlet x = 1;\n```",
    "quesType": "mcq",
    "op1": "Immutable",
    "op2": "Mutable",
    "op3": "Constant",
    "op4": "Static",
    "ans": "Immutable"
  }
  ,
  {
    "ques": "```rust\nprintln!(\"{}\", \"Rust\".len());\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"abc\".chars().nth(1).unwrap());\n```",
    "quesType": "fill",
    "ans": "b"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 3 + 4);\n```",
    "quesType": "fill",
    "ans": "7"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 10 - 3);\n```",
    "quesType": "fill",
    "ans": "7"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 5 * 5);\n```",
    "quesType": "fill",
    "ans": "25"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 8 / 2);\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 2_u32.pow(5));\n```",
    "quesType": "fill",
    "ans": "32"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"abc\".contains(\"b\"));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"Hello World\".to_lowercase());\n```",
    "quesType": "fill",
    "ans": "hello world"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"Rust\".replace(\"R\", \"T\"));\n```",
    "quesType": "fill",
    "ans": "Tust"
  },
  {
    "ques": "What is printed?<br><br>```rust\nlet x = 2 + 3;\nprintln!(\"{}\", x);\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "5",
    "op4": "0",
    "ans": "5"
  },
  {
    "ques": "Which keyword declares an immutable variable?<br><br>```rust\nlet x = 5;\n```",
    "quesType": "mcq",
    "op1": "let",
    "op2": "mut",
    "op3": "const",
    "op4": "static",
    "ans": "let"
  },
  {
    "ques": "Which keyword makes a variable mutable?<br><br>```rust\nlet mut x = 5;\n```",
    "quesType": "mcq",
    "op1": "mut",
    "op2": "var",
    "op3": "const",
    "op4": "static",
    "ans": "mut"
  },
  {
    "ques": "What will this output?<br><br>```rust\nprintln!(\"{}\", \"Rust\".len());\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "4",
    "op3": "5",
    "op4": "0",
    "ans": "4"
  },
  {
    "ques": "Which is a valid function?<br><br>```rust\nfn main() {}\n```",
    "quesType": "mcq",
    "op1": "main",
    "op2": "func",
    "op3": "start",
    "op4": "launch",
    "ans": "main"
  },
  {
    "ques": "Which operator checks equality?<br><br>```rust\nx == y\n```",
    "quesType": "mcq",
    "op1": "=",
    "op2": "==",
    "op3": "===",
    "op4": "!=",
    "ans": "=="
  },
  {
    "ques": "Which prints `false`?<br><br>```rust\nprintln!(\"{}\", 2 == 3);\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "0",
    "op4": "Error",
    "ans": "false"
  },
  {
    "ques": "What is the type of `true`?<br><br>```rust\nlet x = true;\n```",
    "quesType": "mcq",
    "op1": "String",
    "op2": "Number",
    "op3": "Char",
    "op4": "Boolean",
    "ans": "Boolean"
  },
  {
    "ques": "Which is a tuple?<br><br>```rust\nlet t = (1, 2);\n```",
    "quesType": "mcq",
    "op1": "Array",
    "op2": "Vector",
    "op3": "Tuple",
    "op4": "Struct",
    "ans": "Tuple"
  },
  {
    "ques": "Which is an array?<br><br>```rust\nlet a = [1, 2, 3];\n```",
    "quesType": "mcq",
    "op1": "Tuple",
    "op2": "Vector",
    "op3": "Struct",
    "op4": "Array",
    "ans": "Array"
  },
  {
    "ques": "Which prints `2`?<br><br>```rust\nlet a = [1, 2, 3];\nprintln!(\"{}\", a[1]);\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "2"
  },
  {
    "ques": "What will this output?<br><br>```rust\nprintln!(\"{}\", 10 / 2);\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "2",
    "op3": "0",
    "op4": "1",
    "ans": "5"
  },
  {
    "ques": "Which loop is correct?<br><br>```rust\nfor i in 0..3 {\n println!(\"{}\", i);\n}\n```",
    "quesType": "mcq",
    "op1": "Invalid",
    "op2": "Valid",
    "op3": "Error",
    "op4": "None",
    "ans": "Valid"
  },
  {
    "ques": "Which keyword defines a constant?<br><br>```rust\nconst PI: f64 = 3.14;\n```",
    "quesType": "mcq",
    "op1": "let",
    "op2": "mut",
    "op3": "const",
    "op4": "static",
    "ans": "const"
  },
  {
    "ques": "Which is `true`?<br><br>```rust\n5 > 3\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "0",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "What does `!` do?<br><br>```rust\nprintln!(\"{}\", !true);\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Error",
    "op4": "None",
    "ans": "false"
  },
  {
    "ques": "Which creates a string?<br><br>```rust\nString::from(\"Rust\")\n```",
    "quesType": "mcq",
    "op1": "Array",
    "op2": "String",
    "op3": "Tuple",
    "op4": "Number",
    "ans": "String"
  },
  {
    "ques": "What is output?<br><br>```rust\nprintln!(\"{}\", \"abc\".to_uppercase());\n```",
    "quesType": "mcq",
    "op1": "abc",
    "op2": "ABC",
    "op3": "error",
    "op4": "None",
    "ans": "ABC"
  },
  {
    "ques": "Which operator is AND?<br><br>```rust\ntrue && false\n```",
    "quesType": "mcq",
    "op1": "||",
    "op2": "&&",
    "op3": "&",
    "op4": "and",
    "ans": "&&"
  },
  {
    "ques": "Which means OR?<br><br>```rust\ntrue || false\n```",
    "quesType": "mcq",
    "op1": "||",
    "op2": "&&",
    "op3": "or",
    "op4": "&",
    "ans": "||"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"abc\".len());\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 2 * 3);\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 7 % 3);\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"Rust\".contains(\"u\"));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 2_u32.pow(3));\n```",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"Rust\".to_lowercase());\n```",
    "quesType": "fill",
    "ans": "rust"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"abc\".replace(\"a\", \"z\"));\n```",
    "quesType": "fill",
    "ans": "zbc"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", [1,2,3].len());\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", (5 > 2) && (2 > 1));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", (5 < 2) || (2 > 1));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", !false);\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"abc\".chars().nth(0).unwrap());\n```",
    "quesType": "fill",
    "ans": "a"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"abc\".chars().nth(2).unwrap());\n```",
    "quesType": "fill",
    "ans": "c"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"  Rust  \".trim());\n```",
    "quesType": "fill",
    "ans": "Rust"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", [1,2,3].contains(&2));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", [1,2,3].first().unwrap());\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", [1,2,3].last().unwrap());\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", [1,2,3].iter().sum::<i32>());\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 10.0 / 2.0);\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"Rust\".starts_with(\"R\"));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "Who developed Rust?",
    "quesType": "mcq",
    "op1": "Microsoft",
    "op2": "Google",
    "op3": "Mozilla",
    "op4": "Apple",
    "ans": "Mozilla"
  },
  {
    "ques": "Which year was Rust 1.0 released?",
    "quesType": "mcq",
    "op1": "2006",
    "op2": "2010",
    "op3": "2015",
    "op4": "2020",
    "ans": "2015"
  },
  {
    "ques": "Which tool compiles Rust code?",
    "quesType": "mcq",
    "op1": "gcc",
    "op2": "rustc",
    "op3": "cargo",
    "op4": "rustdoc",
    "ans": "rustc"
  },
  {
    "ques": "What is Cargo?",
    "quesType": "mcq",
    "op1": "A compiler",
    "op2": "A debugger",
    "op3": "A package manager",
    "op4": "An IDE",
    "ans": "A package manager"
  },
  {
    "ques": "Which macro prints output?",
    "quesType": "mcq",
    "op1": "print",
    "op2": "printf",
    "op3": "println!",
    "op4": "echo",
    "ans": "println!"
  },
  {
    "ques": "What is `match` used for?",
    "quesType": "mcq",
    "op1": "Looping",
    "op2": "Conditional branching",
    "op3": "Error handling",
    "op4": "Function definition",
    "ans": "Conditional branching"
  },
  {
    "ques": "Which keyword handles errors?",
    "quesType": "mcq",
    "op1": "panic",
    "op2": "throw",
    "op3": "try",
    "op4": "Result",
    "ans": "Result"
  },
  {
    "ques": "Rust is which type of language?",
    "quesType": "mcq",
    "op1": "Interpreted",
    "op2": "Compiled",
    "op3": "Scripting",
    "op4": "Bytecode",
    "ans": "Compiled"
  },
  {
    "ques": "Rust guarantees...",
    "quesType": "mcq",
    "op1": "Garbage collection",
    "op2": "No memory safety",
    "op3": "Memory safety without GC",
    "op4": "No type safety",
    "ans": "Memory safety without GC"
  },
  {
    "ques": "Which keyword is for loops?",
    "quesType": "mcq",
    "op1": "while",
    "op2": "do",
    "op3": "repeat",
    "op4": "foreach",
    "ans": "while"
  },
  {
    "ques": "Which trait allows formatting?",
    "quesType": "mcq",
    "op1": "Display",
    "op2": "Debug",
    "op3": "Format",
    "op4": "Stringify",
    "ans": "Display"
  },
  {
    "ques": "What is `unwrap()` used for?",
    "quesType": "mcq",
    "op1": "Looping",
    "op2": "Error handling",
    "op3": "Condition",
    "op4": "Module import",
    "ans": "Error handling"
  },
  {
    "ques": "Which type means optional value?",
    "quesType": "mcq",
    "op1": "Option",
    "op2": "Result",
    "op3": "Maybe",
    "op4": "Choice",
    "ans": "Option"
  },
  {
    "ques": "Which keyword brings items into scope?",
    "quesType": "mcq",
    "op1": "use",
    "op2": "import",
    "op3": "require",
    "op4": "include",
    "ans": "use"
  },
  {
    "ques": "Which operator dereferences?",
    "quesType": "mcq",
    "op1": "&",
    "op2": "*",
    "op3": "!",
    "op4": "$",
    "ans": "*"
  },
  {
    "ques": "Which keyword defines a module?",
    "quesType": "mcq",
    "op1": "fn",
    "op2": "mod",
    "op3": "use",
    "op4": "struct",
    "ans": "mod"
  },
  {
    "ques": "What does this print?<br><br>```rust\nprintln!(\"{}\", 5 + 5);\n```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "5",
    "op3": "55",
    "op4": "Error",
    "ans": "10"
  },
  {
    "ques": "How to define a function?",
    "quesType": "mcq",
    "op1": "func",
    "op2": "fn",
    "op3": "def",
    "op4": "function",
    "ans": "fn"
  },
  {
    "ques": "Which is the correct comment syntax?",
    "quesType": "mcq",
    "op1": "# comment",
    "op2": "// comment",
    "op3": "-- comment",
    "op4": "/* comment */",
    "ans": "// comment"
  },
  {
    "ques": "Rust's memory model is...",
    "quesType": "mcq",
    "op1": "Garbage collected",
    "op2": "Manual",
    "op3": "Ownership-based",
    "op4": "Reference counted only",
    "ans": "Ownership-based"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"Rust\".len());\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 2 + 8);\n```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 9 / 3);\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"abc\".is_empty());\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"abc\".starts_with(\"a\"));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"rust\".to_uppercase());\n```",
    "quesType": "fill",
    "ans": "RUST"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 7.is_positive());\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", [1,2,3].get(0).unwrap());\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"Rust\".replace(\"R\", \"T\"));\n```",
    "quesType": "fill",
    "ans": "Tust"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", (5 > 2) && (2 < 1));\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", [1,2,3].contains(&4));\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"rustacean\".contains(\"ace\"));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nconst PI: f32 = 3.14;\nprintln!(\"{}\", PI);\n```",
    "quesType": "fill",
    "ans": "3.14"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 5.is_even());\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 4.is_even());\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"hello\".repeat(2));\n```",
    "quesType": "fill",
    "ans": "hellohello"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"Rust\".ends_with(\"t\"));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"  Hi  \".trim());\n```",
    "quesType": "fill",
    "ans": "Hi"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", [10,20,30].iter().sum::<i32>());\n```",
    "quesType": "fill",
    "ans": "60"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"Rust\".chars().count());\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "Rust is mainly known for?",
    "quesType": "mcq",
    "op1": "Web design",
    "op2": "Memory safety",
    "op3": "Graphics",
    "op4": "Database design",
    "ans": "Memory safety"
  },
  {
    "ques": "Which file extension is for Rust?",
    "quesType": "mcq",
    "op1": ".rs",
    "op2": ".rust",
    "op3": ".rusty",
    "op4": ".r",
    "ans": ".rs"
  },
  {
    "ques": "Which company sponsors Rust?",
    "quesType": "mcq",
    "op1": "Apple",
    "op2": "Meta",
    "op3": "Mozilla",
    "op4": "Intel",
    "ans": "Mozilla"
  },
  {
    "ques": "What does `cargo run` do?",
    "quesType": "mcq",
    "op1": "Deletes files",
    "op2": "Compiles and runs",
    "op3": "Installs Rust",
    "op4": "Runs tests only",
    "ans": "Compiles and runs"
  },
  {
    "ques": "Rust's default integer type is?",
    "quesType": "mcq",
    "op1": "u32",
    "op2": "i32",
    "op3": "i64",
    "op4": "f64",
    "ans": "i32"
  },
  {
    "ques": "How do you make a variable mutable?",
    "quesType": "mcq",
    "op1": "mut",
    "op2": "var",
    "op3": "let",
    "op4": "set",
    "ans": "mut"
  },
  {
    "ques": "Which is valid syntax?",
    "quesType": "mcq",
    "op1": "let x = 5;",
    "op2": "var x = 5;",
    "op3": "x := 5;",
    "op4": "int x = 5;",
    "ans": "let x = 5;"
  },
  {
    "ques": "Which type is for floating points?",
    "quesType": "mcq",
    "op1": "f32",
    "op2": "i32",
    "op3": "u32",
    "op4": "char",
    "ans": "f32"
  },
  {
    "ques": "Rust uses ____ for null safety?",
    "quesType": "mcq",
    "op1": "None",
    "op2": "Nil",
    "op3": "Option",
    "op4": "Maybe",
    "ans": "Option"
  },
  {
    "ques": "Which loop repeats forever?",
    "quesType": "mcq",
    "op1": "loop",
    "op2": "while",
    "op3": "for",
    "op4": "repeat",
    "ans": "loop"
  },
  {
    "ques": "What does `unwrap()` do?",
    "quesType": "mcq",
    "op1": "Compiles code",
    "op2": "Runs a macro",
    "op3": "Gets value or panics",
    "op4": "Loops forever",
    "ans": "Gets value or panics"
  },
  {
    "ques": "Which keyword is for error panic?",
    "quesType": "mcq",
    "op1": "error!",
    "op2": "fail!",
    "op3": "panic!",
    "op4": "break!",
    "ans": "panic!"
  },
  {
    "ques": "How to define a constant?",
    "quesType": "mcq",
    "op1": "const",
    "op2": "let",
    "op3": "var",
    "op4": "static",
    "ans": "const"
  },
  {
    "ques": "Which type for booleans?",
    "quesType": "mcq",
    "op1": "bit",
    "op2": "bool",
    "op3": "boolean",
    "op4": "logic",
    "ans": "bool"
  },
  {
    "ques": "How do you import libraries?",
    "quesType": "mcq",
    "op1": "import",
    "op2": "include",
    "op3": "use",
    "op4": "require",
    "ans": "use"
  },
  {
    "ques": "Which shows ownership?",
    "quesType": "mcq",
    "op1": "Python",
    "op2": "C",
    "op3": "Rust",
    "op4": "Java",
    "ans": "Rust"
  },
  {
    "ques": "Which output?\n```rust\nprintln!(\"{}\", 2*3);\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "6",
    "op3": "8",
    "op4": "Error",
    "ans": "6"
  },
  {
    "ques": "Which output?\n```rust\nprintln!(\"{}\", true && false);\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "1",
    "op4": "0",
    "ans": "false"
  },
  {
    "ques": "What is `.iter()` for?",
    "quesType": "mcq",
    "op1": "Mutate value",
    "op2": "Iterate",
    "op3": "Assign types",
    "op4": "Format strings",
    "ans": "Iterate"
  },
  {
    "ques": "Rust's package file is?",
    "quesType": "mcq",
    "op1": "Cargo.rs",
    "op2": "Rust.toml",
    "op3": "Cargo.toml",
    "op4": "Rustfile",
    "ans": "Cargo.toml"
  },
  {
    "ques": "What does `#[derive(Debug)]` do?",
    "quesType": "mcq",
    "op1": "Formats for println!",
    "op2": "Ignores errors",
    "op3": "Disables trait",
    "op4": "Runs tests",
    "ans": "Formats for println!"
  },
  {
    "ques": "Rust follows which paradigm?",
    "quesType": "mcq",
    "op1": "OOP only",
    "op2": "Functional only",
    "op3": "Multi-paradigm",
    "op4": "Scripting only",
    "ans": "Multi-paradigm"
  },
  {
    "ques": "Which is not a valid type?",
    "quesType": "mcq",
    "op1": "usize",
    "op2": "isize",
    "op3": "str",
    "op4": "num",
    "ans": "num"
  },
  {
    "ques": "What does `match` replace?",
    "quesType": "mcq",
    "op1": "switch-case",
    "op2": "if-else",
    "op3": "loop",
    "op4": "macro",
    "ans": "switch-case"
  },
  {
    "ques": "Which output?\n```rust\nprintln!(\"{}\", 8 % 3);\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "1",
    "op4": "5",
    "ans": "2"
  },
  {
    "ques": "Which output?\n```rust\nprintln!(\"{}\", \"Rust\".chars().count());\n```",
    "quesType": "mcq",
    "op1": "4",
    "op2": "3",
    "op3": "5",
    "op4": "1",
    "ans": "4"
  },
  {
    "ques": "Which output?\n```rust\nprintln!(\"{}\", [1,2,3].len());\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "3",
    "op3": "2",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "Which output?\n```rust\nprintln!(\"{}\", \"Hello\".replace(\"H\", \"Y\"));\n```",
    "quesType": "mcq",
    "op1": "Yello",
    "op2": "Hello",
    "op3": "H",
    "op4": "Y",
    "ans": "Yello"
  },
  {
    "ques": "What is `Vec`?",
    "quesType": "mcq",
    "op1": "Function",
    "op2": "Macro",
    "op3": "Growable array",
    "op4": "Keyword",
    "ans": "Growable array"
  },
  {
    "ques": "Which output?\n```rust\nprintln!(\"{}\", \"Rustacean\".contains(\"ace\"));\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "ace",
    "op4": "Rust",
    "ans": "true"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 4 + 6);\n```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 2.5_f32 + 2.5);\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", true || false);\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 10 - 3);\n```",
    "quesType": "fill",
    "ans": "7"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 2 * 4);\n```",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 9 / 3);\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 5 % 2);\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"rust\".to_uppercase());\n```",
    "quesType": "fill",
    "ans": "RUST"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"Rust\".to_lowercase());\n```",
    "quesType": "fill",
    "ans": "rust"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"hello\".len());\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", [1,2,3].is_empty());\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", vec![1,2].push(3));\n``` (Fill: does not return value but pushes 3)",
    "quesType": "fill",
    "ans": "()" 
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"abc\".contains(\"b\"));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"abc\".starts_with(\"a\"));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"abc\".ends_with(\"c\"));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "Fill: Keyword for mutable variable.",
    "quesType": "fill",
    "ans": "mut"
  },
  {
    "ques": "Fill: Rust uses ____ for dependency management.",
    "quesType": "fill",
    "ans": "Cargo"
  },
  {
    "ques": "Fill: Default integer type is ____.",
    "quesType": "fill",
    "ans": "i32"
  },
  {
    "ques": "Fill: To exit early from loop, use ____.",
    "quesType": "fill",
    "ans": "break"
  },
  {
    "ques": "Fill: To skip iteration in loop, use ____.",
    "quesType": "fill",
    "ans": "continue"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"Hello Rust\".replace(\"Rust\", \"World\"));\n```",
    "quesType": "fill",
    "ans": "Hello World"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", (1..5).contains(&3));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "Fill: Which keyword defines a function?",
    "quesType": "fill",
    "ans": "fn"
  },
  {
    "ques": "Fill: Macro for printing output?",
    "quesType": "fill",
    "ans": "println!"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", vec![1,2,3].len());\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "Fill: What is the keyword for modules?",
    "quesType": "fill",
    "ans": "mod"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"rust\".repeat(2));\n```",
    "quesType": "fill",
    "ans": "rustrust"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 2_i32.pow(3));\n```",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", (1..=3).sum::<i32>());\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "Fill: Rust's type for nothing is ____.",
    "quesType": "fill",
    "ans": "unit"
  },
  {
    "ques": "Which of these is a valid way to define an immutable variable?",
    "quesType": "mcq",
    "op1": "mut x = 5;",
    "op2": "const x = 5;",
    "op3": "let x = 5;",
    "op4": "var x = 5;",
    "ans": "let x = 5;"
  },
  {
    "ques": "Which of these is the result of `5 * 2`?",
    "quesType": "mcq",
    "op1": "10",
    "op2": "7",
    "op3": "0",
    "op4": "2",
    "ans": "10"
  },
  {
    "ques": "Which keyword is used for a code block that can fail?",
    "quesType": "mcq",
    "op1": "try",
    "op2": "match",
    "op3": "expect",
    "op4": "Result",
    "ans": "try"
  },
  {
    "ques": "Which type is used for floating point numbers?",
    "quesType": "mcq",
    "op1": "i32",
    "op2": "f32",
    "op3": "u8",
    "op4": "bool",
    "ans": "f32"
  },
  {
    "ques": "What is the default return value if not specified?",
    "quesType": "mcq",
    "op1": "null",
    "op2": "void",
    "op3": "()",
    "op4": "0",
    "ans": "()"
  },
  {
    "ques": "Which macro prints output?",
    "quesType": "mcq",
    "op1": "print!",
    "op2": "echo!",
    "op3": "printf!",
    "op4": "println!",
    "ans": "println!"
  },
  {
    "ques": "How do you make a variable mutable?",
    "quesType": "mcq",
    "op1": "mut let",
    "op2": "let mut",
    "op3": "var",
    "op4": "const mut",
    "ans": "let mut"
  },
  {
    "ques": "Which collection type grows dynamically?",
    "quesType": "mcq",
    "op1": "Array",
    "op2": "Tuple",
    "op3": "Vector",
    "op4": "Slice",
    "ans": "Vector"
  },
  {
    "ques": "Which tool builds and manages Rust projects?",
    "quesType": "mcq",
    "op1": "Rustup",
    "op2": "Cargo",
    "op3": "Crate",
    "op4": "Rustdoc",
    "ans": "Cargo"
  },
  {
    "ques": "Which is NOT a primitive type?",
    "quesType": "mcq",
    "op1": "i32",
    "op2": "bool",
    "op3": "String",
    "op4": "f64",
    "ans": "String"
  },
  {
    "ques": "Which operator checks equality?",
    "quesType": "mcq",
    "op1": "=",
    "op2": "==",
    "op3": "===",
    "op4": ":=",
    "ans": "=="
  },
  {
    "ques": "Which trait is used to format text output?",
    "quesType": "mcq",
    "op1": "Debug",
    "op2": "Display",
    "op3": "Clone",
    "op4": "Copy",
    "ans": "Display"
  },
  {
    "ques": "Which loop repeats indefinitely?",
    "quesType": "mcq",
    "op1": "loop",
    "op2": "while",
    "op3": "for",
    "op4": "repeat",
    "ans": "loop"
  },
  {
    "ques": "Which keyword ends a loop immediately?",
    "quesType": "mcq",
    "op1": "continue",
    "op2": "break",
    "op3": "return",
    "op4": "stop",
    "ans": "break"
  },
  {
    "ques": "Which keyword skips the current loop iteration?",
    "quesType": "mcq",
    "op1": "break",
    "op2": "return",
    "op3": "skip",
    "op4": "continue",
    "ans": "continue"
  },
  {
    "ques": "Which is true about ownership?",
    "quesType": "mcq",
    "op1": "Variables own memory",
    "op2": "Rust has garbage collection",
    "op3": "Rust has manual memory allocation",
    "op4": "All data is global",
    "ans": "Variables own memory"
  },
  {
    "ques": "How do you import external crates?",
    "quesType": "mcq",
    "op1": "import",
    "op2": "require",
    "op3": "use",
    "op4": "crate",
    "ans": "use"
  },
  {
    "ques": "What is the output?\n\n```rust\nprintln!(\"{}\", 2 + 2);\n```",
    "quesType": "mcq",
    "op1": "4",
    "op2": "22",
    "op3": "2+2",
    "op4": "Error",
    "ans": "4"
  },
  {
    "ques": "Which symbol denotes a reference?",
    "quesType": "mcq",
    "op1": "*",
    "op2": "&",
    "op3": "#",
    "op4": "%",
    "ans": "&"
  },
  {
    "ques": "Which keyword creates an enum?",
    "quesType": "mcq",
    "op1": "enum",
    "op2": "class",
    "op3": "struct",
    "op4": "variant",
    "ans": "enum"
  },
  {
    "ques": "Which keyword creates a structure?",
    "quesType": "mcq",
    "op1": "class",
    "op2": "struct",
    "op3": "enum",
    "op4": "impl",
    "ans": "struct"
  },
  {
    "ques": "Which output is correct?\n\n```rust\nprintln!(\"{}\", \"Rust\".len());\n```",
    "quesType": "mcq",
    "op1": "4",
    "op2": "3",
    "op3": "5",
    "op4": "0",
    "ans": "4"
  },
  {
    "ques": "What does `.clone()` do?",
    "quesType": "mcq",
    "op1": "Moves ownership",
    "op2": "Deletes variable",
    "op3": "Copies data",
    "op4": "Returns None",
    "ans": "Copies data"
  },
  {
    "ques": "Which symbol marks a comment?",
    "quesType": "mcq",
    "op1": "//",
    "op2": "/*",
    "op3": "#",
    "op4": "--",
    "ans": "//"
  },
  {
    "ques": "What is the default boolean type?",
    "quesType": "mcq",
    "op1": "bool",
    "op2": "boolean",
    "op3": "bit",
    "op4": "flag",
    "ans": "bool"
  },
  {
    "ques": "Which macro stops execution with a message?",
    "quesType": "mcq",
    "op1": "panic!",
    "op2": "stop!",
    "op3": "fail!",
    "op4": "break!",
    "ans": "panic!"
  },
  {
    "ques": "What does `unwrap()` do?",
    "quesType": "mcq",
    "op1": "Always panics",
    "op2": "Handles errors",
    "op3": "Returns the value or panics",
    "op4": "Converts to String",
    "ans": "Returns the value or panics"
  },
  {
    "ques": "Which is a valid file extension for Rust source?",
    "quesType": "mcq",
    "op1": ".rs",
    "op2": ".rust",
    "op3": ".r",
    "op4": ".rc",
    "ans": ".rs"
  },
  {
    "ques": "Which does `main` return?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "void",
    "op3": "unit",
    "op4": "String",
    "ans": "unit"
  },
  {
    "ques": "What is `Option` used for?",
    "quesType": "mcq",
    "op1": "Concurrency",
    "op2": "Error handling",
    "op3": "Nullable values",
    "op4": "Macros",
    "ans": "Nullable values"
  },
  {
    "ques": "```rust\nlet x = 2 + 2;\nprintln!(\"{}\", x);\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```rust\nlet s = \"Rust\";\nprintln!(\"{}\", s.len());\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```rust\nlet v = vec![1, 2, 3];\nprintln!(\"{}\", v[0]);\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "The keyword to create a structure is ____.",
    "quesType": "fill",
    "ans": "struct"
  },
  {
    "ques": "The keyword to create an enumeration is ____.",
    "quesType": "fill",
    "ans": "enum"
  },
  {
    "ques": "```rust\nlet flag = true;\nprintln!(\"{}\", flag);\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "The default integer type in Rust is ____.",
    "quesType": "fill",
    "ans": "i32"
  },
  {
    "ques": "The type for true/false is ____.",
    "quesType": "fill",
    "ans": "bool"
  },
  {
    "ques": "The macro to print text is ____!",
    "quesType": "fill",
    "ans": "println"
  },
  {
    "ques": "```rust\nlet x = Some(5);\nprintln!(\"{:?}\", x);\n```",
    "quesType": "fill",
    "ans": "Some(5)"
  },
  {
    "ques": "A variable that can change uses the keyword ____.",
    "quesType": "fill",
    "ans": "mut"
  },
  {
    "ques": "```rust\nlet mut n = 1;\nn += 1;\nprintln!(\"{}\", n);\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 10 / 2);\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "To import a module you use the keyword ____.",
    "quesType": "fill",
    "ans": "use"
  },
  {
    "ques": "Rust’s build tool is called ____.",
    "quesType": "fill",
    "ans": "Cargo"
  },
  {
    "ques": "The file extension for Rust source code is ___.",
    "quesType": "fill",
    "ans": ".rs"
  },
  {
    "ques": "```rust\nlet s = String::from(\"hi\");\nprintln!(\"{}\", s);\n```",
    "quesType": "fill",
    "ans": "hi"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 2 * 3);\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "A function that does not return anything has the type ___.",
    "quesType": "fill",
    "ans": "()"
  },
  {
    "ques": "Ownership rules help manage ____ safely.",
    "quesType": "fill",
    "ans": "memory"
  },
  {
    "ques": "The keyword for an infinite loop is ___.",
    "quesType": "fill",
    "ans": "loop"
  },
  {
    "ques": "```rust\nlet a = [1, 2, 3];\nprintln!(\"{}\", a.len());\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"abc\".replace(\"a\", \"z\"));\n```",
    "quesType": "fill",
    "ans": "zbc"
  },
  {
    "ques": "```rust\nlet t = (1, \"two\");\nprintln!(\"{}\", t.1);\n```",
    "quesType": "fill",
    "ans": "two"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 5 % 2);\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "The symbol for a reference is ____.",
    "quesType": "fill",
    "ans": "&"
  },
  {
    "ques": "A block of code with `if` is called a ____ statement.",
    "quesType": "fill",
    "ans": "conditional"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", true && false);\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 2_u32.pow(3));\n```",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "Rust’s error handling uses `Option` and ____ types.",
    "quesType": "fill",
    "ans": "Result"
  }
]
let codingrust2Arr=[
   {
    "ques": "Which trait must a type implement to be formatted with `println!(\"{}\")`?",
    "quesType": "mcq",
    "op1": "Clone",
    "op2": "Copy",
    "op3": "Debug",
    "op4": "Display",
    "ans": "Display"
  },
  {
    "ques": "What is the output?\n\n```rust\nlet x = vec![1, 2, 3];\nprintln!(\"{}\", x.len());\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "4",
    "op4": "Error",
    "ans": "3"
  },
  {
    "ques": "Which keyword transfers ownership?",
    "quesType": "mcq",
    "op1": "clone",
    "op2": "borrow",
    "op3": "move",
    "op4": "mut",
    "ans": "move"
  },
  {
    "ques": "Which lifetime annotation is valid?",
    "quesType": "mcq",
    "op1": "'life",
    "op2": "'a",
    "op3": "&a",
    "op4": "ref",
    "ans": "'a"
  },
  {
    "ques": "Which is true about `Box`?",
    "quesType": "mcq",
    "op1": "It stores data on the stack",
    "op2": "It stores data on the heap",
    "op3": "It clones data",
    "op4": "It copies data by default",
    "ans": "It stores data on the heap"
  },
  {
    "ques": "What is the result?\n\n```rust\nlet s = String::from(\"hi\");\nlet r = &s;\nprintln!(\"{}\", r);\n```",
    "quesType": "mcq",
    "op1": "hi",
    "op2": "&hi",
    "op3": "Error",
    "op4": "None",
    "ans": "hi"
  },
  {
    "ques": "Which keyword is used for pattern matching?",
    "quesType": "mcq",
    "op1": "select",
    "op2": "case",
    "op3": "switch",
    "op4": "match",
    "ans": "match"
  },
  {
    "ques": "Output?\n\n```rust\nlet x = 10;\nprintln!(\"{}\", x > 5);\n```",
    "quesType": "mcq",
    "op1": "false",
    "op2": "true",
    "op3": "10",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Which function returns the number of elements in a vector?",
    "quesType": "mcq",
    "op1": "size()",
    "op2": "len()",
    "op3": "length()",
    "op4": "count()",
    "ans": "len()"
  },
  {
    "ques": "Which is the correct way to define a constant?",
    "quesType": "mcq",
    "op1": "const PI = 3.14;",
    "op2": "let PI = 3.14;",
    "op3": "const PI: f64 = 3.14;",
    "op4": "#define PI 3.14",
    "ans": "const PI: f64 = 3.14;"
  },
  {
    "ques": "What does `unwrap()` do on an `Option`?",
    "quesType": "mcq",
    "op1": "Always returns None",
    "op2": "Panics if None",
    "op3": "Clones the value",
    "op4": "Does nothing",
    "ans": "Panics if None"
  },
  {
    "ques": "What is the result?\n\n```rust\nlet x = Some(5);\nmatch x {\n  Some(val) => println!(\"{}\", val),\n  None => println!(\"None\"),\n}\n```",
    "quesType": "mcq",
    "op1": "None",
    "op2": "5",
    "op3": "Some(5)",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "Which is NOT a valid loop keyword in Rust?",
    "quesType": "mcq",
    "op1": "loop",
    "op2": "while",
    "op3": "for",
    "op4": "repeat",
    "ans": "repeat"
  },
  {
    "ques": "Which operator is used for references?",
    "quesType": "mcq",
    "op1": "*",
    "op2": "&",
    "op3": "%",
    "op4": "&&",
    "ans": "&"
  },
  {
    "ques": "Which trait is needed for `println!(\"{:?}\", x)`?",
    "quesType": "mcq",
    "op1": "Clone",
    "op2": "Copy",
    "op3": "Display",
    "op4": "Debug",
    "ans": "Debug"
  },
  {
    "ques": "What is printed?\n\n```rust\nlet mut x = 5;\nx += 1;\nprintln!(\"{}\", x);\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "6",
    "op3": "1",
    "op4": "Error",
    "ans": "6"
  },
  {
    "ques": "Which type implements copy by default?",
    "quesType": "mcq",
    "op1": "String",
    "op2": "Vec",
    "op3": "i32",
    "op4": "Box",
    "ans": "i32"
  },
  {
    "ques": "What does `pub` mean?",
    "quesType": "mcq",
    "op1": "Private",
    "op2": "Public",
    "op3": "Protected",
    "op4": "None",
    "ans": "Public"
  },
  {
    "ques": "Which crate helps manage async tasks?",
    "quesType": "mcq",
    "op1": "serde",
    "op2": "tokio",
    "op3": "rand",
    "op4": "regex",
    "ans": "tokio"
  },
  {
    "ques": "Which symbol is used for mutable references?",
    "quesType": "mcq",
    "op1": "&mut",
    "op2": "*mut",
    "op3": "#mut",
    "op4": "~mut",
    "ans": "&mut"
  },
  {
    "ques": "Which type represents an error or a valid result?",
    "quesType": "mcq",
    "op1": "Option",
    "op2": "Result",
    "op3": "Either",
    "op4": "Match",
    "ans": "Result"
  },
  {
    "ques": "Which is NOT a valid collection?",
    "quesType": "mcq",
    "op1": "Vec",
    "op2": "HashMap",
    "op3": "String",
    "op4": "Queue",
    "ans": "Queue"
  },
  {
    "ques": "Output?\n\n```rust\nlet x = [10, 20, 30];\nprintln!(\"{}\", x[2]);\n```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "20",
    "op3": "30",
    "op4": "Error",
    "ans": "30"
  },
  {
    "ques": "What does `clone()` do?",
    "quesType": "mcq",
    "op1": "Moves data",
    "op2": "Copies stack data only",
    "op3": "Deep copies data",
    "op4": "Deletes data",
    "ans": "Deep copies data"
  },
  {
    "ques": "Which is true about `Vec`?",
    "quesType": "mcq",
    "op1": "Fixed-size",
    "op2": "Immutable",
    "op3": "Resizable",
    "op4": "Stores keys only",
    "ans": "Resizable"
  },
  {
    "ques": "Which keyword indicates trait implementation?",
    "quesType": "mcq",
    "op1": "do",
    "op2": "impl",
    "op3": "trait",
    "op4": "macro",
    "ans": "impl"
  },
  {
    "ques": "What does `?` operator do?",
    "quesType": "mcq",
    "op1": "Ignores error",
    "op2": "Returns Ok",
    "op3": "Propagates error",
    "op4": "Panics",
    "ans": "Propagates error"
  },
  {
    "ques": "Which is a valid way to write a tuple?",
    "quesType": "mcq",
    "op1": "[1, \"hi\"]",
    "op2": "(1, \"hi\")",
    "op3": "{1, \"hi\"}",
    "op4": "<1, \"hi\">",
    "ans": "(1, \"hi\")"
  },
  {
    "ques": "Which format is correct for defining a module?",
    "quesType": "mcq",
    "op1": "module my_mod {}",
    "op2": "mod my_mod {}",
    "op3": "mod = my_mod {}",
    "op4": "module = my_mod {}",
    "ans": "mod my_mod {}"
  },
  {
    "ques": "Which tool formats Rust code?",
    "quesType": "mcq",
    "op1": "Rustdoc",
    "op2": "Cargo",
    "op3": "Rustfmt",
    "op4": "Clippy",
    "ans": "Rustfmt"
  },
  {
    "ques": "```rust\nlet s = String::from(\"Rust\");\nprintln!(\"{}\", s.len());\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```rust\nlet mut v = vec![1, 2];\nv.push(3);\nprintln!(\"{}\", v.len());\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nlet t = (5, true);\nprintln!(\"{}\", t.0);\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```rust\nconst PI: f64 = 3.14;\nprintln!(\"{}\", PI);\n```",
    "quesType": "fill",
    "ans": "3.14"
  },
  {
    "ques": "```rust\nlet x = Some(10);\nprintln!(\"{}\", x.unwrap());\n```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "```rust\nlet x = vec![10, 20, 30];\nprintln!(\"{}\", x[1]);\n```",
    "quesType": "fill",
    "ans": "20"
  },
  {
    "ques": "```rust\nfn add(a: i32, b: i32) -> i32 { a + b }\nprintln!(\"{}\", add(2,3));\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```rust\nlet mut x = 2;\nx *= 3;\nprintln!(\"{}\", x);\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```rust\nlet s = \"abc\";\nprintln!(\"{}\", s.contains(\"a\"));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nlet a = [1,2,3];\nprintln!(\"{}\", a.iter().sum::<i32>());\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```rust\nlet s = \"Rustacean\";\nprintln!(\"{}\", s.replace(\"Rust\", \"Crust\"));\n```",
    "quesType": "fill",
    "ans": "Crustacean"
  },
  {
    "ques": "```rust\nlet x: Option<i32> = None;\nprintln!(\"{}\", x.is_none());\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nlet s = String::from(\"abc\");\nprintln!(\"{}\", &s[0..1]);\n```",
    "quesType": "fill",
    "ans": "a"
  },
  {
    "ques": "```rust\nlet mut s = String::from(\"hi\");\ns.push_str(\" there\");\nprintln!(\"{}\", s);\n```",
    "quesType": "fill",
    "ans": "hi there"
  },
  {
    "ques": "```rust\nlet x = 4.5_f32;\nprintln!(\"{}\", x.floor());\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```rust\nlet b = true;\nprintln!(\"{}\", !b);\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```rust\nlet x = 5;\nprintln!(\"{}\", x.pow(2));\n```",
    "quesType": "fill",
    "ans": "25"
  },
  {
    "ques": "```rust\nlet x = Some(\"yes\");\nprintln!(\"{}\", x.is_some());\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nlet mut v = vec![1];\nv.pop();\nprintln!(\"{}\", v.len());\n```",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "```rust\nlet s = \"Rust\";\nprintln!(\"{}\", s.chars().count());\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```rust\nlet mut s = String::from(\"abc\");\ns.clear();\nprintln!(\"{}\", s.is_empty());\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nlet nums = [2, 4, 6];\nprintln!(\"{}\", nums[2]);\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```rust\nlet mut v = vec![2];\nv.push(8);\nprintln!(\"{}\", v[1]);\n```",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "```rust\nlet flag = false;\nprintln!(\"{}\", flag || true);\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nlet s = \"Rust\";\nprintln!(\"{}\", s.to_uppercase());\n```",
    "quesType": "fill",
    "ans": "RUST"
  },
  {
    "ques": "```rust\nlet arr = [3, 1, 4];\nprintln!(\"{}\", arr[0]);\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nlet a = 7;\nprintln!(\"{}\", a % 3);\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```rust\nlet a = \"abc\";\nprintln!(\"{}\", a.starts_with(\"a\"));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nlet x = Some(2);\nprintln!(\"{}\", x.unwrap_or(0));\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```rust\nlet result: Result<i32, &str> = Ok(42);\nprintln!(\"{}\", result.unwrap());\n```",
    "quesType": "fill",
    "ans": "42"
  },
  {
    "ques": "```rust\nlet word = \"rust\";\nprintln!(\"{}\", word.ends_with(\"t\"));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "Which keyword is used to define an immutable variable in Rust?",
    "quesType": "mcq",
    "op1": "const",
    "op2": "let",
    "op3": "var",
    "op4": "mut",
    "ans": "let"
  },
  {
    "ques": "What is the default mutability of variables in Rust?",
    "quesType": "mcq",
    "op1": "Mutable",
    "op2": "Immutable",
    "op3": "Depends on scope",
    "op4": "Global",
    "ans": "Immutable"
  },
  {
    "ques": "What does the following print?\n```rust\nlet x = 5;\nprintln!(\"{}\", x == 5);\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "5",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Which trait is required for formatting with `{}` in `println!`?",
    "quesType": "mcq",
    "op1": "Debug",
    "op2": "Display",
    "op3": "Clone",
    "op4": "Copy",
    "ans": "Display"
  },
  {
    "ques": "How do you define a mutable variable?",
    "quesType": "mcq",
    "op1": "let x;",
    "op2": "let mut x;",
    "op3": "var x;",
    "op4": "mut x;",
    "ans": "let mut x;"
  },
  {
    "ques": "Which collection type allows duplicate values?",
    "quesType": "mcq",
    "op1": "HashSet",
    "op2": "Vec",
    "op3": "BTreeMap",
    "op4": "Option",
    "ans": "Vec"
  },
  {
    "ques": "Output?\n```rust\nprintln!(\"{:?}\", Some(3));\n```",
    "quesType": "mcq",
    "op1": "Some(3)",
    "op2": "3",
    "op3": "None",
    "op4": "Error",
    "ans": "Some(3)"
  },
  {
    "ques": "What does unwrap() do?",
    "quesType": "mcq",
    "op1": "Returns value inside Option if Some",
    "op2": "Always returns None",
    "op3": "Creates a panic",
    "op4": "Creates a new Option",
    "ans": "Returns value inside Option if Some"
  },
  {
    "ques": "Which crate is used for unit testing?",
    "quesType": "mcq",
    "op1": "cargo-test",
    "op2": "test",
    "op3": "std",
    "op4": "There is no crate",
    "ans": "std"
  },
  {
    "ques": "What does the `?` operator do?",
    "quesType": "mcq",
    "op1": "Performs addition",
    "op2": "Checks for None",
    "op3": "Propagates errors",
    "op4": "Makes variable mutable",
    "ans": "Propagates errors"
  },
  {
    "ques": "Which macro prints debug output?",
    "quesType": "mcq",
    "op1": "print!",
    "op2": "println!",
    "op3": "eprintln!",
    "op4": "dbg!",
    "ans": "dbg!"
  },
  {
    "ques": "Which keyword is used for modules?",
    "quesType": "mcq",
    "op1": "use",
    "op2": "import",
    "op3": "mod",
    "op4": "package",
    "ans": "mod"
  },
  {
    "ques": "Output?\n```rust\nlet a = vec![1,2];\nprintln!(\"{}\", a.contains(&2));\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "1",
    "op4": "2",
    "ans": "true"
  },
  {
    "ques": "Which collection type keeps keys unique?",
    "quesType": "mcq",
    "op1": "Vec",
    "op2": "HashMap",
    "op3": "VecDeque",
    "op4": "Option",
    "ans": "HashMap"
  },
  {
    "ques": "Which loop type is not valid in Rust?",
    "quesType": "mcq",
    "op1": "while",
    "op2": "loop",
    "op3": "foreach",
    "op4": "for",
    "ans": "foreach"
  },
  {
    "ques": "Which trait lets a type be cloned?",
    "quesType": "mcq",
    "op1": "Display",
    "op2": "Copy",
    "op3": "Clone",
    "op4": "Debug",
    "ans": "Clone"
  },
  {
    "ques": "Output?\n```rust\nprintln!(\"{}\", \"rust\".to_uppercase());\n```",
    "quesType": "mcq",
    "op1": "rust",
    "op2": "Rust",
    "op3": "RUST",
    "op4": "error",
    "ans": "RUST"
  },
  {
    "ques": "What does `panic!` do?",
    "quesType": "mcq",
    "op1": "Logs a warning",
    "op2": "Silently ignores",
    "op3": "Stops execution",
    "op4": "None",
    "ans": "Stops execution"
  },
  {
    "ques": "Which is true about `match`?",
    "quesType": "mcq",
    "op1": "It works only on integers",
    "op2": "It must be exhaustive",
    "op3": "It is not safe",
    "op4": "It does not need braces",
    "ans": "It must be exhaustive"
  },
  {
    "ques": "Output?\n```rust\nlet x = [10, 20];\nprintln!(\"{}\", x[0]);\n```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "20",
    "op3": "0",
    "op4": "Error",
    "ans": "10"
  },
  {
    "ques": "Which keyword is used for error handling?",
    "quesType": "mcq",
    "op1": "try",
    "op2": "catch",
    "op3": "match",
    "op4": "throw",
    "ans": "match"
  },
  {
    "ques": "Which data type stores true or false?",
    "quesType": "mcq",
    "op1": "bool",
    "op2": "u8",
    "op3": "char",
    "op4": "i32",
    "ans": "bool"
  },
  {
    "ques": "Which is a valid tuple syntax?",
    "quesType": "mcq",
    "op1": "let t = [1,2];",
    "op2": "let t = (1,2);",
    "op3": "let t = {1,2};",
    "op4": "let t = <1,2>;",
    "ans": "let t = (1,2);"
  },
  {
    "ques": "Which does not borrow?",
    "quesType": "mcq",
    "op1": "&x",
    "op2": "&mut x",
    "op3": "x",
    "op4": "*x",
    "ans": "x"
  },
  {
    "ques": "Which crate helps with JSON?",
    "quesType": "mcq",
    "op1": "serde",
    "op2": "tokio",
    "op3": "rayon",
    "op4": "rand",
    "ans": "serde"
  },
  {
    "ques": "Which operator checks equality?",
    "quesType": "mcq",
    "op1": "=",
    "op2": "==",
    "op3": "!=",
    "op4": "<=",
    "ans": "=="
  },
  {
    "ques": "Which macro writes to stderr?",
    "quesType": "mcq",
    "op1": "print!",
    "op2": "println!",
    "op3": "eprintln!",
    "op4": "dbg!",
    "ans": "eprintln!"
  },
  {
    "ques": "Which function gets user input?",
    "quesType": "mcq",
    "op1": "read()",
    "op2": "input()",
    "op3": "std::io::stdin()",
    "op4": "fetch()",
    "ans": "std::io::stdin()"
  },
  {
    "ques": "Which keyword is used for traits?",
    "quesType": "mcq",
    "op1": "trait",
    "op2": "interface",
    "op3": "impl",
    "op4": "class",
    "ans": "trait"
  },
  {
    "ques": "Which is true about ownership?",
    "quesType": "mcq",
    "op1": "Multiple owners at once",
    "op2": "Only one owner at a time",
    "op3": "No owners",
    "op4": "Unlimited clones",
    "ans": "Only one owner at a time"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 10 / 2);\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"Rust\".len());\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", [1,2,3].len());\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nlet s = String::from(\"hi\");\nprintln!(\"{}\", s.is_empty());\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 2_i32.pow(3));\n```",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"abc\".contains(\"b\"));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nlet t = (1, \"a\");\nprintln!(\"{}\", t.0);\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```rust\nlet arr = [5,6,7];\nprintln!(\"{}\", arr[2]);\n```",
    "quesType": "fill",
    "ans": "7"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"rust\".to_uppercase());\n```",
    "quesType": "fill",
    "ans": "RUST"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"    hi \".trim());\n```",
    "quesType": "fill",
    "ans": "hi"
  },
  {
    "ques": "```rust\nlet x: bool = true;\nprintln!(\"{}\", x);\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 3.0 * 2.0);\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"rust\".replace(\"r\", \"d\"));\n```",
    "quesType": "fill",
    "ans": "dust"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"abc\".starts_with(\"a\"));\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"abc\".ends_with(\"z\"));\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```rust\nlet v = vec![1,2];\nprintln!(\"{}\", v.is_empty());\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```rust\nlet x = Some(5);\nprintln!(\"{}\", x.is_some());\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nlet y: Option<i32> = None;\nprintln!(\"{}\", y.is_none());\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", 10 % 3);\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```rust\nprintln!(\"{}\", \"Rust\".chars().count());\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "What is the keyword for defining traits?",
    "quesType": "fill",
    "ans": "trait"
  },
  {
    "ques": "Rust's ownership rule: Only ___ owner at a time.",
    "quesType": "fill",
    "ans": "one"
  },
  {
    "ques": "What is the output of `true && false`?",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "Rust uses ___ borrowing for references.",
    "quesType": "fill",
    "ans": "immutable"
  },
  {
    "ques": "Keyword to bring module paths into scope: ___",
    "quesType": "fill",
    "ans": "use"
  },
  {
    "ques": "Keyword for error propagation: ___",
    "quesType": "fill",
    "ans": "?"
  },
  {
    "ques": "Keyword for infinite loop: ___",
    "quesType": "fill",
    "ans": "loop"
  },
  {
    "ques": "What macro prints to stderr?",
    "quesType": "fill",
    "ans": "eprintln!"
  },
  {
    "ques": "Which crate is popular for serialization?",
    "quesType": "fill",
    "ans": "serde"
  },
  {
    "ques": "What does `panic!` do? It ___ the program.",
    "quesType": "fill",
    "ans": "terminates"
  },
  {
    "ques": "Which keyword creates a new thread in Rust?",
    "quesType": "mcq",
    "op1": "async",
    "op2": "thread",
    "op3": "spawn",
    "op4": "new",
    "ans": "spawn"
  },
  {
    "ques": "Which macro prints with a newline?",
    "quesType": "mcq",
    "op1": "format!",
    "op2": "write!",
    "op3": "print!",
    "op4": "println!",
    "ans": "println!"
  },
  {
    "ques": "Which is a mutable reference?",
    "quesType": "mcq",
    "op1": "&var",
    "op2": "&mut var",
    "op3": "mut &var",
    "op4": "&var mut",
    "ans": "&mut var"
  },
  {
    "ques": "How do you declare an array of size 5?",
    "quesType": "mcq",
    "op1": "let a = [i32; 5];",
    "op2": "let a: [i32; 5];",
    "op3": "let a = [0; 5];",
    "op4": "let a = (0; 5);",
    "ans": "let a = [0; 5];"
  },
  {
    "ques": "What is the output?\n```rust\nprintln!(\"{}\", 4 * 3);\n```",
    "quesType": "mcq",
    "op1": "7",
    "op2": "12",
    "op3": "1",
    "op4": "9",
    "ans": "12"
  },
  {
    "ques": "Which type is unsigned?",
    "quesType": "mcq",
    "op1": "i32",
    "op2": "i64",
    "op3": "u32",
    "op4": "f32",
    "ans": "u32"
  },
  {
    "ques": "Which is the Rust testing macro?",
    "quesType": "mcq",
    "op1": "assert_eq!",
    "op2": "test_eq!",
    "op3": "debug_eq!",
    "op4": "expect_eq!",
    "ans": "assert_eq!"
  },
  {
    "ques": "What is the default integer type?",
    "quesType": "mcq",
    "op1": "i64",
    "op2": "i32",
    "op3": "u32",
    "op4": "usize",
    "ans": "i32"
  },
  {
    "ques": "What is the output?\n```rust\nprintln!(\"{}\", 10 % 4);\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "4",
    "op3": "1",
    "op4": "0",
    "ans": "2"
  },
  {
    "ques": "Which type is used for errors?",
    "quesType": "mcq",
    "op1": "Option",
    "op2": "Result",
    "op3": "String",
    "op4": "Error",
    "ans": "Result"
  },
  {
    "ques": "What does `unwrap` do?",
    "quesType": "mcq",
    "op1": "Creates a vector",
    "op2": "Handles panic",
    "op3": "Extracts value",
    "op4": "Returns error",
    "ans": "Extracts value"
  },
  {
    "ques": "Which trait is for formatting?",
    "quesType": "mcq",
    "op1": "Debug",
    "op2": "Clone",
    "op3": "Copy",
    "op4": "PartialEq",
    "ans": "Debug"
  },
  {
    "ques": "What is the output?\n```rust\nprintln!(\"{}\", \"abc\".is_empty());\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "abc",
    "op4": "0",
    "ans": "false"
  },
  {
    "ques": "How to read input?",
    "quesType": "mcq",
    "op1": "stdin!",
    "op2": "input!",
    "op3": "io::stdin",
    "op4": "readln!",
    "ans": "io::stdin"
  },
  {
    "ques": "What is a crate?",
    "quesType": "mcq",
    "op1": "A macro",
    "op2": "A package",
    "op3": "A keyword",
    "op4": "A module",
    "ans": "A package"
  },
  {
    "ques": "What does `.clone()` do?",
    "quesType": "mcq",
    "op1": "Creates a reference",
    "op2": "Copies value",
    "op3": "Deletes value",
    "op4": "Formats string",
    "ans": "Copies value"
  },
  {
    "ques": "Which symbol is for reference?",
    "quesType": "mcq",
    "op1": "&",
    "op2": "*",
    "op3": "#",
    "op4": "~",
    "ans": "&"
  },
  {
    "ques": "What does `.len()` return for an empty string?",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "None",
    "op4": "Error",
    "ans": "0"
  },
  {
    "ques": "What does `.push()` do?",
    "quesType": "mcq",
    "op1": "Removes element",
    "op2": "Adds element",
    "op3": "Sorts",
    "op4": "Reverses",
    "ans": "Adds element"
  },
  {
    "ques": "Which is correct about lifetimes?",
    "quesType": "mcq",
    "op1": "They control scope",
    "op2": "They are types",
    "op3": "They are macros",
    "op4": "They are traits",
    "ans": "They control scope"
  },
  {
    "ques": "Which trait is for equality?",
    "quesType": "mcq",
    "op1": "Debug",
    "op2": "PartialEq",
    "op3": "Clone",
    "op4": "Drop",
    "ans": "PartialEq"
  },
  {
    "ques": "Which macro writes to a string?",
    "quesType": "mcq",
    "op1": "write!",
    "op2": "writeln!",
    "op3": "format!",
    "op4": "println!",
    "ans": "format!"
  },
  {
    "ques": "What is the output?\n```rust\nprintln!(\"{}\", 5 == 5);\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "5",
    "op4": "==",
    "ans": "true"
  },
  {
    "ques": "What is `match` used for?",
    "quesType": "mcq",
    "op1": "Looping",
    "op2": "Conditionals",
    "op3": "Pattern matching",
    "op4": "Modules",
    "ans": "Pattern matching"
  },
  {
    "ques": "Which is a correct Option value?",
    "quesType": "mcq",
    "op1": "Some()",
    "op2": "None",
    "op3": "Err",
    "op4": "Both 1 and 2",
    "ans": "Both 1 and 2"
  },
  {
    "ques": "How to declare mutable var?",
    "quesType": "mcq",
    "op1": "var x",
    "op2": "let x",
    "op3": "let mut x",
    "op4": "mut x",
    "ans": "let mut x"
  },
  {
    "ques": "Which handles errors safely?",
    "quesType": "mcq",
    "op1": "panic!",
    "op2": "unwrap",
    "op3": "Result",
    "op4": "assert!",
    "ans": "Result"
  },
  {
    "ques": "What is `Vec`?",
    "quesType": "mcq",
    "op1": "HashMap",
    "op2": "Vector",
    "op3": "Tuple",
    "op4": "Option",
    "ans": "Vector"
  },
  {
    "ques": "Which means never type?",
    "quesType": "mcq",
    "op1": "None",
    "op2": "never",
    "op3": "!",
    "op4": "void",
    "ans": "!"
  },
  {
    "ques": "Which library does `io` belong to?",
    "quesType": "mcq",
    "op1": "std",
    "op2": "core",
    "op3": "alloc",
    "op4": "proc",
    "ans": "std"
  },
  { "ques": "```rust\nprintln!(\"{}\", 2 << 3);\n```", "quesType": "fill", "ans": "16" },
  { "ques": "```rust\nprintln!(\"{}\", 5 & 3);\n```", "quesType": "fill", "ans": "1" },
  { "ques": "```rust\nprintln!(\"{}\", \"abc\".repeat(2));\n```", "quesType": "fill", "ans": "abcabc" },
  { "ques": "```rust\nprintln!(\"{}\", \"abc\".find(\"b\").unwrap());\n```", "quesType": "fill", "ans": "1" },
  { "ques": "```rust\nprintln!(\"{}\", \"abc\".replace(\"a\", \"z\"));\n```", "quesType": "fill", "ans": "zbc" },
  { "ques": "```rust\nprintln!(\"{}\", 10_u8.saturating_add(250));\n```", "quesType": "fill", "ans": "255" },
  { "ques": "```rust\nprintln!(\"{}\", 7.5_f32.ceil());\n```", "quesType": "fill", "ans": "8" },
  { "ques": "```rust\nprintln!(\"{}\", 7.5_f32.floor());\n```", "quesType": "fill", "ans": "7" },
  { "ques": "```rust\nprintln!(\"{}\", 7.5_f32.round());\n```", "quesType": "fill", "ans": "8" },
  { "ques": "```rust\nprintln!(\"{}\", \"rustacean\".contains(\"ace\"));\n```", "quesType": "fill", "ans": "true" },
  { "ques": "```rust\nlet v = vec![1,2,3]; println!(\"{}\", v.first().unwrap());\n```", "quesType": "fill", "ans": "1" },
  { "ques": "```rust\nprintln!(\"{}\", (5.0_f32).sqrt());\n```", "quesType": "fill", "ans": "2.236068" },
  { "ques": "Rust uses ___ to manage concurrency.", "quesType": "fill", "ans": "threads" },
  { "ques": "The main Cargo config file is ___", "quesType": "fill", "ans": "Cargo.toml" },
  { "ques": "What is `Rc` for? ___ references.", "quesType": "fill", "ans": "shared" },
  { "ques": "Which keyword defines a module? ___", "quesType": "fill", "ans": "mod" },
  { "ques": "Rust does not have ___ collection type.", "quesType": "fill", "ans": "linked list" },
  { "ques": "Keyword to pattern match: ___", "quesType": "fill", "ans": "match" },
  { "ques": "Rust traits are like ___ in Java.", "quesType": "fill", "ans": "interfaces" },
  { "ques": "```rust\nprintln!(\"{}\", \"Hello\".to_lowercase());\n```", "quesType": "fill", "ans": "hello" },
  { "ques": "```rust\nprintln!(\"{}\", (1..5).contains(&3));\n```", "quesType": "fill", "ans": "true" },
  { "ques": "```rust\nprintln!(\"{}\", vec![1,2].len());\n```", "quesType": "fill", "ans": "2" },
  { "ques": "```rust\nprintln!(\"{}\", \"rust\".chars().nth(2).unwrap());\n```", "quesType": "fill", "ans": "s" },
  { "ques": "```rust\nprintln!(\"{}\", vec![1,2,3].pop().unwrap());\n```", "quesType": "fill", "ans": "3" },
  { "ques": "Keyword for documentation comments: ___", "quesType": "fill", "ans": "///" },
  { "ques": "The Rust compiler is called ___", "quesType": "fill", "ans": "rustc" },
  { "ques": "Keyword to exit a loop early: ___", "quesType": "fill", "ans": "break" },
  { "ques": "Rust is ___ safe language.", "quesType": "fill", "ans": "memory" },
  { "ques": "```rust\nprintln!(\"{}\", 4.2_f64 as i32);\n```", "quesType": "fill", "ans": "4" },
  { "ques": "```rust\nprintln!(\"{}\", \"Hello\".starts_with(\"H\"));\n```", "quesType": "fill", "ans": "true" },
  {
    "ques": "Which keyword marks an unsafe block?",
    "quesType": "mcq",
    "op1": "unsafe",
    "op2": "mut",
    "op3": "as",
    "op4": "unwrap",
    "ans": "unsafe"
  },
  {
    "ques": "Which function stops program execution with an error?",
    "quesType": "mcq",
    "op1": "panic!",
    "op2": "unwrap()",
    "op3": "exit!",
    "op4": "error!",
    "ans": "panic!"
  },
  {
    "ques": "What does `cargo build` do?",
    "quesType": "mcq",
    "op1": "Runs tests",
    "op2": "Builds project",
    "op3": "Runs code",
    "op4": "Generates docs",
    "ans": "Builds project"
  },
  {
    "ques": "What is the output?\n```rust\nprintln!(\"{}\", 3_usize + 2);\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "5",
    "op4": "1",
    "ans": "5"
  },
  {
    "ques": "Which operator dereferences a pointer?",
    "quesType": "mcq",
    "op1": "&",
    "op2": "*",
    "op3": "%",
    "op4": "#",
    "ans": "*"
  },
  {
    "ques": "Which is true for `HashMap`?",
    "quesType": "mcq",
    "op1": "Ordered",
    "op2": "Sorted",
    "op3": "Unordered",
    "op4": "Immutable",
    "ans": "Unordered"
  },
  {
    "ques": "What is a tuple?",
    "quesType": "mcq",
    "op1": "Fixed-size collection",
    "op2": "Growable array",
    "op3": "Macro",
    "op4": "Function",
    "ans": "Fixed-size collection"
  },
  {
    "ques": "How do you destructure a tuple?",
    "quesType": "mcq",
    "op1": "use split",
    "op2": "with match",
    "op3": "with let",
    "op4": "with &",
    "ans": "with let"
  },
  {
    "ques": "Which crate provides regex?",
    "quesType": "mcq",
    "op1": "regex",
    "op2": "rand",
    "op3": "chrono",
    "op4": "serde",
    "ans": "regex"
  },
  {
    "ques": "Which is a trait for iterators?",
    "quesType": "mcq",
    "op1": "Copy",
    "op2": "Iterator",
    "op3": "Debug",
    "op4": "Drop",
    "ans": "Iterator"
  },
  {
    "ques": "What is the output?\n```rust\nprintln!(\"{}\", vec![10,20].contains(&20));\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "0",
    "op4": "20",
    "ans": "true"
  },
  {
    "ques": "Which format specifier shows debug output?",
    "quesType": "mcq",
    "op1": "{}",
    "op2": "{:?}",
    "op3": "{:p}",
    "op4": "{:x}",
    "ans": "{:?}"
  },
  {
    "ques": "Which statement ends a function?",
    "quesType": "mcq",
    "op1": "return",
    "op2": "break",
    "op3": "continue",
    "op4": "loop",
    "ans": "return"
  },
  {
    "ques": "Which file holds dependency versions?",
    "quesType": "mcq",
    "op1": "Cargo.lock",
    "op2": "Cargo.toml",
    "op3": "Cargo.rs",
    "op4": "Build.rs",
    "ans": "Cargo.lock"
  },
  {
    "ques": "Which keyword implements a trait?",
    "quesType": "mcq",
    "op1": "trait",
    "op2": "fn",
    "op3": "mod",
    "op4": "impl",
    "ans": "impl"
  },
  {
    "ques": "What does `?` do?",
    "quesType": "mcq",
    "op1": "Unwrap",
    "op2": "Pattern match",
    "op3": "Propagate error",
    "op4": "Loop",
    "ans": "Propagate error"
  },
  {
    "ques": "What is the output?\n```rust\nprintln!(\"{}\", 2.0_f64.sqrt());\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "1.4142135",
    "op4": "0",
    "ans": "1.4142135"
  },
  {
    "ques": "Which crate is for serialization?",
    "quesType": "mcq",
    "op1": "serde",
    "op2": "rand",
    "op3": "regex",
    "op4": "chrono",
    "ans": "serde"
  },
  {
    "ques": "What is a macro?",
    "quesType": "mcq",
    "op1": "Trait",
    "op2": "Type",
    "op3": "Function-like code",
    "op4": "Variable",
    "ans": "Function-like code"
  },
  {
    "ques": "Which error handling is idiomatic?",
    "quesType": "mcq",
    "op1": "panic",
    "op2": "unwrap",
    "op3": "Result",
    "op4": "None",
    "ans": "Result"
  },
  {
    "ques": "Which keyword imports modules?",
    "quesType": "mcq",
    "op1": "use",
    "op2": "mod",
    "op3": "crate",
    "op4": "fn",
    "ans": "use"
  },
  {
    "ques": "Which type is best for fractional numbers?",
    "quesType": "mcq",
    "op1": "u32",
    "op2": "i64",
    "op3": "f64",
    "op4": "char",
    "ans": "f64"
  },
  {
    "ques": "What is `match`?",
    "quesType": "mcq",
    "op1": "Function",
    "op2": "Macro",
    "op3": "Control flow",
    "op4": "Crate",
    "ans": "Control flow"
  },
  {
    "ques": "Which type converts JSON?",
    "quesType": "mcq",
    "op1": "rand",
    "op2": "serde",
    "op3": "regex",
    "op4": "chrono",
    "ans": "serde"
  },
  {
    "ques": "Which keyword defines enums?",
    "quesType": "mcq",
    "op1": "enum",
    "op2": "struct",
    "op3": "trait",
    "op4": "mod",
    "ans": "enum"
  },
  {
    "ques": "How to loop forever?",
    "quesType": "mcq",
    "op1": "while true",
    "op2": "loop",
    "op3": "for",
    "op4": "match",
    "ans": "loop"
  },
  {
    "ques": "What does `.iter()` do?",
    "quesType": "mcq",
    "op1": "Consume values",
    "op2": "Create iterator",
    "op3": "Sort vector",
    "op4": "Remove item",
    "ans": "Create iterator"
  },
  {
    "ques": "Which crate helps with random numbers?",
    "quesType": "mcq",
    "op1": "serde",
    "op2": "rand",
    "op3": "regex",
    "op4": "chrono",
    "ans": "rand"
  },
  {
    "ques": "Which keyword defines a struct?",
    "quesType": "mcq",
    "op1": "enum",
    "op2": "fn",
    "op3": "trait",
    "op4": "struct",
    "ans": "struct"
  },
  {
    "ques": "Which macro prints to error output?",
    "quesType": "mcq",
    "op1": "eprint!",
    "op2": "print!",
    "op3": "println!",
    "op4": "write!",
    "ans": "eprint!"
  },
   {"ques": "```rust\nprintln!(\"{}\", \"Rust\".len());\n```", "quesType": "fill", "ans": "4"},
  {"ques": "```rust\nprintln!(\"{}\", 2_u8.wrapping_add(255));\n```", "quesType": "fill", "ans": "1"},
  {"ques": "```rust\nprintln!(\"{}\", \"abc\".replace(\"b\",\"x\"));\n```", "quesType": "fill", "ans": "axc"},
  {"ques": "```rust\nprintln!(\"{}\", \"rust\".ends_with(\"t\"));\n```", "quesType": "fill", "ans": "true"},
  {"ques": "```rust\nprintln!(\"{}\", vec![10,20,30].get(2).unwrap());\n```", "quesType": "fill", "ans": "30"},
  {"ques": "```rust\nprintln!(\"{}\", 3.5_f64.floor());\n```", "quesType": "fill", "ans": "3"},
  {"ques": "```rust\nprintln!(\"{}\", \"HELLO\".to_lowercase());\n```", "quesType": "fill", "ans": "hello"},
  {"ques": "```rust\nprintln!(\"{}\", \"Rust\".chars().nth(1).unwrap());\n```", "quesType": "fill", "ans": "u"},
  {"ques": "```rust\nprintln!(\"{}\", 5_i32.abs());\n```", "quesType": "fill", "ans": "5"},
  {"ques": "Rust compiler is called ___", "quesType": "fill", "ans": "rustc"},
  {"ques": "Which macro is for debug output? ___", "quesType": "fill", "ans": "dbg!"},
  {"ques": "Keyword to define trait: ___", "quesType": "fill", "ans": "trait"},
  {"ques": "Keyword to define module: ___", "quesType": "fill", "ans": "mod"},
  {"ques": "Rust tool to create project: ___", "quesType": "fill", "ans": "cargo"},
  {"ques": "Which macro writes formatted text? ___", "quesType": "fill", "ans": "format!"},
  {"ques": "Rust is ___ safe language.", "quesType": "fill", "ans": "memory"},
  {"ques": "The result of 2.pow(3): ___", "quesType": "fill", "ans": "8"},
  {"ques": "Rust build system is called ___", "quesType": "fill", "ans": "Cargo"},
  {"ques": "Function returning nothing: ___", "quesType": "fill", "ans": "()"},
  {"ques": "What is the default float type? ___", "quesType": "fill", "ans": "f64"},
  {"ques": "Keyword for infinite loop: ___", "quesType": "fill", "ans": "loop"},
  {"ques": "Keyword for match arm: ___", "quesType": "fill", "ans": "match"},
  {"ques": "Output of 10 % 3: ___", "quesType": "fill", "ans": "1"},
  {"ques": "Keyword to declare enum: ___", "quesType": "fill", "ans": "enum"},
  {"ques": "Output of \"test\".is_empty(): ___", "quesType": "fill", "ans": "false"},
  {"ques": "Result of vec![1,2].len(): ___", "quesType": "fill", "ans": "2"},
  {"ques": "Which macro logs error? ___", "quesType": "fill", "ans": "eprintln!"},
  {"ques": "Keyword to skip loop: ___", "quesType": "fill", "ans": "continue"},
  {"ques": "Keyword to exit loop: ___", "quesType": "fill", "ans": "break"},
  {"ques": "What does `.unwrap()` do? ___", "quesType": "fill", "ans": "extracts value"},
   {
    "ques": "Which macro prints to standard output?",
    "quesType": "mcq",
    "op1": "println!",
    "op2": "eprintln!",
    "op3": "format!",
    "op4": "panic!",
    "ans": "println!"
  },
  {
    "ques": "Which type holds multiple types?",
    "quesType": "mcq",
    "op1": "Vec",
    "op2": "Tuple",
    "op3": "Array",
    "op4": "HashMap",
    "ans": "Tuple"
  },
  {
    "ques": "Which method converts String to &str?",
    "quesType": "mcq",
    "op1": "into()",
    "op2": "to_string()",
    "op3": "as_str()",
    "op4": "format!",
    "ans": "as_str()"
  },
  {
    "ques": "What does `.expect()` do?",
    "quesType": "mcq",
    "op1": "Returns error",
    "op2": "Returns Option",
    "op3": "Panics on None",
    "op4": "Loops",
    "ans": "Panics on None"
  },
  {
    "ques": "Which keyword is used for modules?",
    "quesType": "mcq",
    "op1": "use",
    "op2": "fn",
    "op3": "mod",
    "op4": "crate",
    "ans": "mod"
  },
  {
    "ques": "Which data structure is mutable and grows?",
    "quesType": "mcq",
    "op1": "Vec",
    "op2": "Array",
    "op3": "Tuple",
    "op4": "Enum",
    "ans": "Vec"
  },
  {
    "ques": "What is printed?\n```rust\nprintln!(\"{}\", 'A' as u8);\n```",
    "quesType": "mcq",
    "op1": "65",
    "op2": "97",
    "op3": "A",
    "op4": "Error",
    "ans": "65"
  },
  {
    "ques": "What is the default integer type?",
    "quesType": "mcq",
    "op1": "i64",
    "op2": "i32",
    "op3": "u32",
    "op4": "usize",
    "ans": "i32"
  },
  {
    "ques": "Which operator gets a reference?",
    "quesType": "mcq",
    "op1": "&",
    "op2": "*",
    "op3": "&&",
    "op4": "#",
    "ans": "&"
  },
  {
    "ques": "What does `.clone()` do?",
    "quesType": "mcq",
    "op1": "Shallow copy",
    "op2": "Move value",
    "op3": "Deep copy",
    "op4": "Drop value",
    "ans": "Deep copy"
  },
  {
    "ques": "What is the output?\n```rust\nprintln!(\"{}\", \"Rust\".starts_with(\"R\"));\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "R",
    "op4": "rust",
    "ans": "true"
  },
  {
    "ques": "Which symbol defines a macro call?",
    "quesType": "mcq",
    "op1": "{}",
    "op2": "()",
    "op3": "!",
    "op4": "[]",
    "ans": "!"
  },
  {
    "ques": "Which crate is used for time/date?",
    "quesType": "mcq",
    "op1": "rand",
    "op2": "regex",
    "op3": "chrono",
    "op4": "serde",
    "ans": "chrono"
  },
  {
    "ques": "Which keyword defines an alias?",
    "quesType": "mcq",
    "op1": "mod",
    "op2": "fn",
    "op3": "type",
    "op4": "use",
    "ans": "type"
  },
  {
    "ques": "What does `Ok(())` mean?",
    "quesType": "mcq",
    "op1": "Returns error",
    "op2": "Returns unit on success",
    "op3": "Panics",
    "op4": "Runs loop",
    "ans": "Returns unit on success"
  },
  {
    "ques": "Which is a lifetime annotation?",
    "quesType": "mcq",
    "op1": "'static",
    "op2": "dyn",
    "op3": "&",
    "op4": "as",
    "ans": "'static"
  },
  {
    "ques": "What does `.push()` do on Vec?",
    "quesType": "mcq",
    "op1": "Remove last",
    "op2": "Insert element",
    "op3": "Sort",
    "op4": "Clone",
    "ans": "Insert element"
  },
  {
    "ques": "What is `Box<T>` used for?",
    "quesType": "mcq",
    "op1": "Thread",
    "op2": "Heap allocation",
    "op3": "Borrowing",
    "op4": "Pattern match",
    "ans": "Heap allocation"
  },
  {
    "ques": "Which trait for formatting output?",
    "quesType": "mcq",
    "op1": "Drop",
    "op2": "Iterator",
    "op3": "Debug",
    "op4": "Copy",
    "ans": "Debug"
  },
  {
    "ques": "How to break from loop?",
    "quesType": "mcq",
    "op1": "stop",
    "op2": "exit",
    "op3": "break",
    "op4": "end",
    "ans": "break"
  },
  {
    "ques": "What does `.pop()` do on Vec?",
    "quesType": "mcq",
    "op1": "Adds element",
    "op2": "Removes last",
    "op3": "Sorts",
    "op4": "Clones",
    "ans": "Removes last"
  },
  {
    "ques": "What does `unwrap_or()` do?",
    "quesType": "mcq",
    "op1": "Propagate error",
    "op2": "Return Result",
    "op3": "Return default",
    "op4": "Loop forever",
    "ans": "Return default"
  },
  {
    "ques": "Which function checks equality?",
    "quesType": "mcq",
    "op1": "==",
    "op2": "!=",
    "op3": "eq()",
    "op4": "PartialOrd",
    "ans": "eq()"
  },
  {
    "ques": "Which trait allows `+` operator?",
    "quesType": "mcq",
    "op1": "Add",
    "op2": "Debug",
    "op3": "Clone",
    "op4": "Drop",
    "ans": "Add"
  },
  {
    "ques": "What is the type of `None`?",
    "quesType": "mcq",
    "op1": "Option",
    "op2": "Result",
    "op3": "Vec",
    "op4": "HashMap",
    "ans": "Option"
  },
  {
    "ques": "How to define a constant?",
    "quesType": "mcq",
    "op1": "let",
    "op2": "const",
    "op3": "static",
    "op4": "mod",
    "ans": "const"
  },
  {
    "ques": "What is the output?\n```rust\nprintln!(\"{}\", 10.0 % 3.0);\n```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "1.0",
    "op4": "Error",
    "ans": "1.0"
  },
  {
    "ques": "Which crate parses CLI args?",
    "quesType": "mcq",
    "op1": "regex",
    "op2": "clap",
    "op3": "serde",
    "op4": "chrono",
    "ans": "clap"
  },
  {
    "ques": "Which crate creates HTTP servers?",
    "quesType": "mcq",
    "op1": "serde",
    "op2": "hyper",
    "op3": "rand",
    "op4": "regex",
    "ans": "hyper"
  },
  {
    "ques": "What does `mut` mean?",
    "quesType": "mcq",
    "op1": "Immutable",
    "op2": "Mutable",
    "op3": "Module",
    "op4": "Macro",
    "ans": "Mutable"
  },
  {"ques": "```rust\nprintln!(\"{}\", \"Rustacean\".len());\n```", "quesType": "fill", "ans": "9"},
  {"ques": "```rust\nprintln!(\"{}\", 100_u32.checked_add(50).unwrap());\n```", "quesType": "fill", "ans": "150"},
  {"ques": "```rust\nprintln!(\"{}\", \"hello\".to_uppercase());\n```", "quesType": "fill", "ans": "HELLO"},
  {"ques": "```rust\nprintln!(\"{}\", \"apple\".contains(\"pp\"));\n```", "quesType": "fill", "ans": "true"},
  {"ques": "```rust\nprintln!(\"{}\", vec![3,4,5].first().unwrap());\n```", "quesType": "fill", "ans": "3"},
  {"ques": "```rust\nprintln!(\"{}\", 3.9_f32.ceil());\n```", "quesType": "fill", "ans": "4"},
  {"ques": "```rust\nprintln!(\"{}\", \"Rust\".to_lowercase());\n```", "quesType": "fill", "ans": "rust"},
  {"ques": "```rust\nprintln!(\"{}\", \"abc\".chars().nth(2).unwrap());\n```", "quesType": "fill", "ans": "c"},
  {"ques": "Rust package registry is ___", "quesType": "fill", "ans": "crates.io"},
  {"ques": "Rust uses ___ safety.", "quesType": "fill", "ans": "memory"},
  {"ques": "Keyword for immutable variable: ___", "quesType": "fill", "ans": "let"},
  {"ques": "Keyword for mutable variable: ___", "quesType": "fill", "ans": "mut"},
  {"ques": "Rust compiler backend: ___", "quesType": "fill", "ans": "LLVM"},
  {"ques": "Output of \"Hi\".repeat(3): ___", "quesType": "fill", "ans": "HiHiHi"},
  {"ques": "Which macro stops execution? ___", "quesType": "fill", "ans": "panic!"},
  {"ques": "Which crate for async runtime? ___", "quesType": "fill", "ans": "tokio"},
  {"ques": "Rust's standard test framework: ___", "quesType": "fill", "ans": "test"},
  {"ques": "Output of 5 << 1: ___", "quesType": "fill", "ans": "10"},
  {"ques": "Rust's type inference: ___", "quesType": "fill", "ans": "strong"},
  {"ques": "Result of 9 / 2: ___", "quesType": "fill", "ans": "4"},
  {"ques": "Output of 9.0 / 2.0: ___", "quesType": "fill", "ans": "4.5"},
  {"ques": "Trait to drop value: ___", "quesType": "fill", "ans": "Drop"},
  {"ques": "Which type for large int? ___", "quesType": "fill", "ans": "i128"},
  {"ques": "Output of \"abc\".find(\"b\").unwrap(): ___", "quesType": "fill", "ans": "1"},
  {"ques": "Output of [1,2,3].iter().sum::<i32>(): ___", "quesType": "fill", "ans": "6"},
  {"ques": "Keyword for pattern match: ___", "quesType": "fill", "ans": "match"},
  {"ques": "Which crate builds web apps? ___", "quesType": "fill", "ans": "actix"},
  {"ques": "Which crate for JSON? ___", "quesType": "fill", "ans": "serde_json"},
  {"ques": "Rust uses ___ for concurrency.", "quesType": "fill", "ans": "threads"},
  {"ques": "Which keyword returns value? ___", "quesType": "fill", "ans": "return"}
]
let codingrust3Arr=[
  {
    "ques": "Which trait must be implemented to use `println!` with `{:?}`?",
    "quesType": "mcq",
    "op1": "Clone",
    "op2": "Debug",
    "op3": "Drop",
    "op4": "Copy",
    "ans": "Debug"
  },
  {
    "ques": "What is the output?\n```rust\nlet s = String::from(\"Rust\");\nlet r = &s;\nprintln!(\"{}\", r);\n```",
    "quesType": "mcq",
    "op1": "Rust",
    "op2": "Error",
    "op3": "Reference",
    "op4": "&Rust",
    "ans": "Rust"
  },
  {
    "ques": "Which lifetime outlives all others?",
    "quesType": "mcq",
    "op1": "'self",
    "op2": "'static",
    "op3": "'a",
    "op4": "'owned",
    "ans": "'static"
  },
  {
    "ques": "What does `Rc<T>` provide?",
    "quesType": "mcq",
    "op1": "Thread-safe sharing",
    "op2": "Single ownership",
    "op3": "Reference counting",
    "op4": "Borrow checker",
    "ans": "Reference counting"
  },
  {
    "ques": "What does `Arc<T>` stand for?",
    "quesType": "mcq",
    "op1": "Atomic Reference Count",
    "op2": "Async Read Count",
    "op3": "Array Ref Cell",
    "op4": "Allocated Ref Count",
    "ans": "Atomic Reference Count"
  },
  {
    "ques": "Which trait allows `==` operator?",
    "quesType": "mcq",
    "op1": "Ord",
    "op2": "PartialEq",
    "op3": "Copy",
    "op4": "Clone",
    "ans": "PartialEq"
  },
  {
    "ques": "What is output?\n```rust\nlet mut x = vec![1,2,3];\nx.pop();\nprintln!(\"{:?}\", x);\n```",
    "quesType": "mcq",
    "op1": "[1,2]",
    "op2": "[1,2,3]",
    "op3": "[2,3]",
    "op4": "[1,3]",
    "ans": "[1,2]"
  },
  {
    "ques": "Which trait enables iteration?",
    "quesType": "mcq",
    "op1": "Drop",
    "op2": "IntoIterator",
    "op3": "Debug",
    "op4": "Send",
    "ans": "IntoIterator"
  },
  {
    "ques": "Which is true about `Box<T>`?",
    "quesType": "mcq",
    "op1": "Allocates on stack",
    "op2": "Allocates on heap",
    "op3": "Unsafe by default",
    "op4": "Immutable only",
    "ans": "Allocates on heap"
  },
  {
    "ques": "Which is used for interior mutability?",
    "quesType": "mcq",
    "op1": "RefCell",
    "op2": "Rc",
    "op3": "Mutex",
    "op4": "Option",
    "ans": "RefCell"
  },
  {
    "ques": "Which crate for async I/O?",
    "quesType": "mcq",
    "op1": "regex",
    "op2": "serde",
    "op3": "tokio",
    "op4": "chrono",
    "ans": "tokio"
  },
  {
    "ques": "What is the output?\n```rust\nlet s = \"abc\";\nprintln!(\"{}\", &s[1..]);\n```",
    "quesType": "mcq",
    "op1": "a",
    "op2": "bc",
    "op3": "abc",
    "op4": "Error",
    "ans": "bc"
  },
  {
    "ques": "Which type is Send but not Sync?",
    "quesType": "mcq",
    "op1": "Rc",
    "op2": "Arc",
    "op3": "Mutex",
    "op4": "Cell",
    "ans": "Rc"
  },
  {
    "ques": "Which keyword disables copying?",
    "quesType": "mcq",
    "op1": "Copy",
    "op2": "Clone",
    "op3": "Drop",
    "op4": "PartialEq",
    "ans": "Drop"
  },
  {
    "ques": "Which is true about closures?",
    "quesType": "mcq",
    "op1": "They can capture variables",
    "op2": "They cannot mutate",
    "op3": "They require `mut` keyword",
    "op4": "They cannot return",
    "ans": "They can capture variables"
  },
  {
    "ques": "Which is a safe way to share data across threads?",
    "quesType": "mcq",
    "op1": "Rc",
    "op2": "Arc",
    "op3": "RefCell",
    "op4": "Cell",
    "ans": "Arc"
  },
  {
    "ques": "Which trait must be implemented for sorting?",
    "quesType": "mcq",
    "op1": "Ord",
    "op2": "Copy",
    "op3": "Drop",
    "op4": "Debug",
    "ans": "Ord"
  },
  {
    "ques": "Which macro asserts condition?",
    "quesType": "mcq",
    "op1": "expect!",
    "op2": "panic!",
    "op3": "assert!",
    "op4": "debug!",
    "ans": "assert!"
  },
  {
    "ques": "Which symbol is used for dereferencing?",
    "quesType": "mcq",
    "op1": "&",
    "op2": "*",
    "op3": "!",
    "op4": "$",
    "ans": "*"
  },
  {
    "ques": "Which function ends program immediately?",
    "quesType": "mcq",
    "op1": "panic!",
    "op2": "drop()",
    "op3": "unwrap()",
    "op4": "assert_eq!",
    "ans": "panic!"
  },
   {"ques": "```rust\nlet x = Some(5);\nprintln!(\"{}\", x.unwrap());\n```", "quesType": "fill", "ans": "5"},
  {"ques": "```rust\nlet x = vec![1,2,3];\nprintln!(\"{}\", x.len());\n```", "quesType": "fill", "ans": "3"},
  {"ques": "```rust\nprintln!(\"{}\", \"Rust\".replace(\"R\", \"T\"));\n```", "quesType": "fill", "ans": "Tust"},
  {"ques": "```rust\nlet x = [1,2,3];\nprintln!(\"{}\", x[0]);\n```", "quesType": "fill", "ans": "1"},
  {"ques": "```rust\nprintln!(\"{}\", \"abc\".chars().nth(1).unwrap());\n```", "quesType": "fill", "ans": "b"},
  {"ques": "```rust\nprintln!(\"{}\", vec![1,2].contains(&2));\n```", "quesType": "fill", "ans": "true"},
  {"ques": "```rust\nprintln!(\"{}\", 2_i32.pow(3));\n```", "quesType": "fill", "ans": "8"},
  {"ques": "```rust\nprintln!(\"{}\", \"Rust\".is_empty());\n```", "quesType": "fill", "ans": "false"},
  {"ques": "```rust\nprintln!(\"{}\", 7 % 3);\n```", "quesType": "fill", "ans": "1"},
  {"ques": "```rust\nprintln!(\"{}\", format!(\"{} {}\", \"Hi\", \"Rust\"));\n```", "quesType": "fill", "ans": "Hi Rust"},
  {"ques": "```rust\nprintln!(\"{}\", \"  hi  \".trim());\n```", "quesType": "fill", "ans": "hi"},
  {"ques": "```rust\nprintln!(\"{}\", 2.5_f64.floor());\n```", "quesType": "fill", "ans": "2"},
  {"ques": "```rust\nprintln!(\"{}\", \"rust\".to_uppercase());\n```", "quesType": "fill", "ans": "RUST"},
  {"ques": "```rust\nlet s = String::from(\"rust\");\nprintln!(\"{}\", s.len());\n```", "quesType": "fill", "ans": "4"},
  {"ques": "```rust\nlet mut s = String::from(\"hi\");\ns.push('!');\nprintln!(\"{}\", s);\n```", "quesType": "fill", "ans": "hi!"},
  {"ques": "```rust\nlet x = Some(3);\nprintln!(\"{}\", x.is_some());\n```", "quesType": "fill", "ans": "true"},
  {"ques": "```rust\nlet x: Result<i32, &str> = Ok(10);\nprintln!(\"{}\", x.unwrap());\n```", "quesType": "fill", "ans": "10"},
  {"ques": "```rust\nlet v = vec![\"a\", \"b\"];\nprintln!(\"{}\", v.join(\"-\"));\n```", "quesType": "fill", "ans": "a-b"},
  {"ques": "```rust\nprintln!(\"{}\", \"rust\".find(\"s\").unwrap());\n```", "quesType": "fill", "ans": "2"},
  {"ques": "```rust\nprintln!(\"{}\", [1,2,3].iter().min().unwrap());\n```", "quesType": "fill", "ans": "1"},
  {
    "ques": "Which trait allows you to clone an object?",
    "quesType": "mcq",
    "op1": "Copy",
    "op2": "Clone",
    "op3": "Debug",
    "op4": "Drop",
    "ans": "Clone"
  },
  {
    "ques": "What is the output?\n```rust\nlet x = vec![1,2,3];\nprintln!(\"{:?}\", x.get(1));\n```",
    "quesType": "mcq",
    "op1": "Some(2)",
    "op2": "2",
    "op3": "None",
    "op4": "Error",
    "ans": "Some(2)"
  },
  {
    "ques": "Which trait must be derived for equality checks?",
    "quesType": "mcq",
    "op1": "Debug",
    "op2": "Ord",
    "op3": "PartialEq",
    "op4": "Clone",
    "ans": "PartialEq"
  },
  {
    "ques": "Which does NOT implement Sync by default?",
    "quesType": "mcq",
    "op1": "Arc",
    "op2": "Rc",
    "op3": "Box",
    "op4": "Mutex",
    "ans": "Rc"
  },
  {
    "ques": "Which allows mutable borrowing?",
    "quesType": "mcq",
    "op1": "RefCell",
    "op2": "Rc",
    "op3": "Arc",
    "op4": "Cell",
    "ans": "RefCell"
  },
  {
    "ques": "Which keyword ends a match arm?",
    "quesType": "mcq",
    "op1": ":",
    "op2": "break",
    "op3": "=>",
    "op4": "return",
    "ans": "=>"
  },
  {
    "ques": "Which function panics on unwrap error?",
    "quesType": "mcq",
    "op1": "unwrap",
    "op2": "expect",
    "op3": "get",
    "op4": "None",
    "ans": "unwrap"
  },
  {
    "ques": "Which pattern matches any value?",
    "quesType": "mcq",
    "op1": "None",
    "op2": "_",
    "op3": "Some",
    "op4": "Err",
    "ans": "_"
  },
  {
    "ques": "What is the output?\n```rust\nlet x = Some(5);\nif let Some(y) = x {\n println!(\"{}\", y);\n}\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "Some(5)",
    "op3": "None",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "Which is true about Option<T>?",
    "quesType": "mcq",
    "op1": "Always contains value",
    "op2": "Represents Some or None",
    "op3": "Unsafe",
    "op4": "Mutable only",
    "ans": "Represents Some or None"
  },
  {
    "ques": "Which trait allows sorting with `sort`?",
    "quesType": "mcq",
    "op1": "Eq",
    "op2": "PartialOrd",
    "op3": "Ord",
    "op4": "Hash",
    "ans": "Ord"
  },
  {
    "ques": "Which statement is true about lifetimes?",
    "quesType": "mcq",
    "op1": "They control mutability",
    "op2": "They manage borrowing scopes",
    "op3": "They allow multiple owners",
    "op4": "They compile to runtime code",
    "ans": "They manage borrowing scopes"
  },
  {
    "ques": "What is the output?\n```rust\nlet x = String::from(\"abc\");\nlet y = x;\nprintln!(\"{}\", y);\n```",
    "quesType": "mcq",
    "op1": "abc",
    "op2": "Error",
    "op3": "None",
    "op4": "0",
    "ans": "abc"
  },
  {
    "ques": "Which is a concurrency primitive?",
    "quesType": "mcq",
    "op1": "Vec",
    "op2": "HashMap",
    "op3": "Mutex",
    "op4": "Option",
    "ans": "Mutex"
  },
  {
    "ques": "Which macro checks condition and panics?",
    "quesType": "mcq",
    "op1": "unwrap!",
    "op2": "panic!",
    "op3": "assert!",
    "op4": "Some!",
    "ans": "assert!"
  },
  {
    "ques": "Which feature does not exist in Rust?",
    "quesType": "mcq",
    "op1": "Null pointers",
    "op2": "Ownership",
    "op3": "Pattern matching",
    "op4": "Traits",
    "ans": "Null pointers"
  },
  {
    "ques": "Which is NOT valid in Rust?",
    "quesType": "mcq",
    "op1": "fn main() {}",
    "op2": "let mut x = 5;",
    "op3": "println!(\"Hello\");",
    "op4": "class MyClass {}",
    "ans": "class MyClass {}"
  },
  {
    "ques": "What is the output?\n```rust\nlet x: Result<i32, &str> = Ok(2);\nprintln!(\"{}\", x.unwrap());\n```",
    "quesType": "mcq",
    "op1": "Ok(2)",
    "op2": "2",
    "op3": "Error",
    "op4": "None",
    "ans": "2"
  },
  {
    "ques": "What does `.await` mean?",
    "quesType": "mcq",
    "op1": "Waits for thread",
    "op2": "Waits for future",
    "op3": "Allocates heap",
    "op4": "Blocks borrow",
    "ans": "Waits for future"
  },
  {
    "ques": "Which is a valid smart pointer?",
    "quesType": "mcq",
    "op1": "Vec",
    "op2": "Box",
    "op3": "Result",
    "op4": "String",
    "ans": "Box"
  },
  {
    "ques": "Which trait must be implemented to hash?",
    "quesType": "mcq",
    "op1": "Clone",
    "op2": "Debug",
    "op3": "Hash",
    "op4": "Drop",
    "ans": "Hash"
  },
  {
    "ques": "What is output?\n```rust\nlet mut s = String::new();\ns.push_str(\"hi\");\nprintln!(\"{}\", s);\n```",
    "quesType": "mcq",
    "op1": "hi",
    "op2": "Error",
    "op3": "None",
    "op4": "Empty",
    "ans": "hi"
  },
  {
    "ques": "Which tool is for package management?",
    "quesType": "mcq",
    "op1": "Rustc",
    "op2": "Cargo",
    "op3": "Clippy",
    "op4": "Fmt",
    "ans": "Cargo"
  },
  {
    "ques": "Which indicates an error type?",
    "quesType": "mcq",
    "op1": "Option",
    "op2": "Some",
    "op3": "Result",
    "op4": "Box",
    "ans": "Result"
  },
  {
    "ques": "Which is used to declare a macro?",
    "quesType": "mcq",
    "op1": "fn!",
    "op2": "macro_rules!",
    "op3": "rule_macro!",
    "op4": "macro!",
    "ans": "macro_rules!"
  },
  {
    "ques": "Which ensures single-threaded reference counting?",
    "quesType": "mcq",
    "op1": "Arc",
    "op2": "Rc",
    "op3": "RefCell",
    "op4": "Cell",
    "ans": "Rc"
  },
  {
    "ques": "Which loop is infinite by default?",
    "quesType": "mcq",
    "op1": "for",
    "op2": "while",
    "op3": "loop",
    "op4": "match",
    "ans": "loop"
  },
  {
    "ques": "Which is used to destructure enums?",
    "quesType": "mcq",
    "op1": "let",
    "op2": "match",
    "op3": "use",
    "op4": "trait",
    "ans": "match"
  },
  {
    "ques": "What is the output?\n```rust\nlet s = \"abc\";\nprintln!(\"{}\", s.len());\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "abc",
    "op4": "Error",
    "ans": "3"
  },
  {
    "ques": "Which type of variable is immutable by default?",
    "quesType": "mcq",
    "op1": "let",
    "op2": "mut",
    "op3": "const",
    "op4": "ref",
    "ans": "let"
  },
  {
    "ques": "Which is used to implement trait?",
    "quesType": "mcq",
    "op1": "match",
    "op2": "struct",
    "op3": "impl",
    "op4": "enum",
    "ans": "impl"
  },
  {
    "ques": "```rust\nlet s = String::from(\"Rust\");\nprintln!(\"{}\", s.len());\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```rust\nfn main() {\n let mut x = 5;\n x += 1;\n println!(\"{}\", x);\n}\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```rust\nfn add<T: std::ops::Add<Output=T>>(a: T, b: T) -> T { a + b }\nprintln!(\"{}\", add(2,3));\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```rust\nlet v = vec![1,2,3];\nprintln!(\"{}\", v[2]);\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nlet option: Option<i32> = Some(10);\nprintln!(\"{}\", option.unwrap());\n```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "```rust\nfn main() {\n let s = \"abc\";\n println!(\"{}\", &s[0..1]);\n}\n```",
    "quesType": "fill",
    "ans": "a"
  },
  {
    "ques": "```rust\nfn main() {\n let n = 2.5_f64.floor();\n println!(\"{}\", n);\n}\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```rust\nfn main() {\n let x = Some(5);\n println!(\"{}\", x.is_some());\n}\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nlet result: Result<i32, &str> = Ok(7);\nprintln!(\"{}\", result.unwrap());\n```",
    "quesType": "fill",
    "ans": "7"
  },
  {
    "ques": "```rust\nfn main() {\n let s = String::from(\"Hi\");\n println!(\"{}\", s.to_uppercase());\n}\n```",
    "quesType": "fill",
    "ans": "HI"
  },
  {
    "ques": "```rust\nfn main() {\n let mut v = vec![1,2];\n v.push(3);\n println!(\"{}\", v.len());\n}\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nlet b = true;\nprintln!(\"{}\", !b);\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```rust\nfn main() {\n let s = \"Rustacean\";\n println!(\"{}\", s.contains(\"ace\"));\n}\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nlet n = 9 % 4;\nprintln!(\"{}\", n);\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```rust\nlet a = [1,2,3];\nprintln!(\"{}\", a.iter().sum::<i32>());\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```rust\nfn main() {\n let x = Some(5);\n match x {\n Some(y) => println!(\"{}\", y),\n None => println!(\"0\"),\n }\n}\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```rust\nfn main() {\n let x = 5;\n let y = &x;\n println!(\"{}\", y);\n}\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```rust\nfn double(x: i32) -> i32 { x * 2 }\nprintln!(\"{}\", double(4));\n```",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "```rust\nlet t = (1, \"hi\");\nprintln!(\"{}\", t.1);\n```",
    "quesType": "fill",
    "ans": "hi"
  },
  {
    "ques": "```rust\nfn main() {\n println!(\"{}\", std::mem::size_of::<u8>());\n}\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```rust\nfn main() {\n let x = Some(3);\n println!(\"{}\", x.unwrap_or(0));\n}\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nlet b = Box::new(7);\nprintln!(\"{}\", b);\n```",
    "quesType": "fill",
    "ans": "7"
  },
  {
    "ques": "```rust\nlet s = \"abc\";\nprintln!(\"{}\", s.chars().nth(1).unwrap());\n```",
    "quesType": "fill",
    "ans": "b"
  },
  {
    "ques": "```rust\nfn main() {\n let x = 2.5;\n println!(\"{}\", x.ceil());\n}\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nfn main() {\n let mut s = String::from(\"Rust\");\n s.push('!');\n println!(\"{}\", s);\n}\n```",
    "quesType": "fill",
    "ans": "Rust!"
  },
  {
    "ques": "```rust\nfn main() {\n let n: i8 = -128;\n println!(\"{}\", n.abs() as u8);\n}\n```",
    "quesType": "fill",
    "ans": "128"
  },
  {
    "ques": "```rust\nfn main() {\n println!(\"{}\", 2.0_f64.sqrt());\n}\n```",
    "quesType": "fill",
    "ans": "1.4142135623730951"
  },
  {
    "ques": "```rust\nfn main() {\n println!(\"{}\", \"Hi\".repeat(3));\n}\n```",
    "quesType": "fill",
    "ans": "HiHiHi"
  },
  {
    "ques": "```rust\nfn main() {\n let arr = [5,6,7];\n println!(\"{}\", arr[0]);\n}\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```rust\nfn main() {\n println!(\"{}\", std::f64::INFINITY);\n}\n```",
    "quesType": "fill",
    "ans": "inf"
  },
  {
    "ques": "Which trait must be implemented to use `{}` in `println!`?",
    "quesType": "mcq",
    "op1": "Display",
    "op2": "Debug",
    "op3": "Clone",
    "op4": "Copy",
    "ans": "Display"
  },
  {
    "ques": "Which keyword is used to define an asynchronous function?",
    "quesType": "mcq",
    "op1": "future",
    "op2": "async",
    "op3": "await",
    "op4": "thread",
    "ans": "async"
  },
  {
    "ques": "What is `Rc` in Rust?",
    "quesType": "mcq",
    "op1": "A reference counted pointer",
    "op2": "A raw pointer",
    "op3": "A smart pointer for threads",
    "op4": "A trait",
    "ans": "A reference counted pointer"
  },
  {
    "ques": "Which crate is commonly used for asynchronous runtime?",
    "quesType": "mcq",
    "op1": "tokio",
    "op2": "std",
    "op3": "serde",
    "op4": "rayon",
    "ans": "tokio"
  },
  {
    "ques": "Which keyword is used to implement a trait?",
    "quesType": "mcq",
    "op1": "impl",
    "op2": "trait",
    "op3": "type",
    "op4": "struct",
    "ans": "impl"
  },
  {
    "ques": "Which pointer type allows mutable shared ownership?",
    "quesType": "mcq",
    "op1": "Box",
    "op2": "Rc",
    "op3": "Arc<Mutex<T>>",
    "op4": "Raw pointer",
    "ans": "Arc<Mutex<T>>"
  },
  {
    "ques": "Which macro prints debug info?",
    "quesType": "mcq",
    "op1": "print!",
    "op2": "debug!",
    "op3": "dbg!",
    "op4": "trace!",
    "ans": "dbg!"
  },
  {
    "ques": "Which type of error must be handled with `Result`?",
    "quesType": "mcq",
    "op1": "Compile-time",
    "op2": "Logic",
    "op3": "Runtime recoverable",
    "op4": "Syntax",
    "ans": "Runtime recoverable"
  },
  {
    "ques": "Which crate is used for serialization?",
    "quesType": "mcq",
    "op1": "serde",
    "op2": "rayon",
    "op3": "tokio",
    "op4": "rand",
    "ans": "serde"
  },
  {
    "ques": "Which trait provides formatted debug output?",
    "quesType": "mcq",
    "op1": "Clone",
    "op2": "Debug",
    "op3": "Display",
    "op4": "Eq",
    "ans": "Debug"
  },
  {
    "ques": "What does the `Send` trait indicate?",
    "quesType": "mcq",
    "op1": "The type is safe to share between threads",
    "op2": "The type is copyable",
    "op3": "The type has lifetime",
    "op4": "The type is mutable",
    "ans": "The type is safe to share between threads"
  },
  {
    "ques": "Which keyword ends a module path?",
    "quesType": "mcq",
    "op1": "mod",
    "op2": "use",
    "op3": "pub",
    "op4": "self",
    "ans": "self"
  },
  {
    "ques": "Which function reads a line from stdin?",
    "quesType": "mcq",
    "op1": "read",
    "op2": "stdin",
    "op3": "read_line",
    "op4": "get_line",
    "ans": "read_line"
  },
  {
    "ques": "What does `unwrap()` do?",
    "quesType": "mcq",
    "op1": "Unwraps an Option or Result, panics on None/Err",
    "op2": "Handles all errors gracefully",
    "op3": "Returns a pointer",
    "op4": "Wraps a value",
    "ans": "Unwraps an Option or Result, panics on None/Err"
  },
  {
    "ques": "Which syntax matches a pattern?",
    "quesType": "mcq",
    "op1": "if let",
    "op2": "unwrap",
    "op3": "when",
    "op4": "loop",
    "ans": "if let"
  },
  {
    "ques": "What does `as_ref()` do on an `Option`?",
    "quesType": "mcq",
    "op1": "Clones it",
    "op2": "Gets immutable reference",
    "op3": "Gets mutable reference",
    "op4": "Converts to Result",
    "ans": "Gets immutable reference"
  },
  {
    "ques": "Which is a smart pointer for heap allocation?",
    "quesType": "mcq",
    "op1": "Box",
    "op2": "RefCell",
    "op3": "Rc",
    "op4": "Cell",
    "ans": "Box"
  },
  {
    "ques": "Which pattern is used for matching multiple values?",
    "quesType": "mcq",
    "op1": "match",
    "op2": "loop",
    "op3": "unwrap",
    "op4": "expect",
    "ans": "match"
  },
  {
    "ques": "Which trait allows a type to be cloned?",
    "quesType": "mcq",
    "op1": "Copy",
    "op2": "Clone",
    "op3": "Debug",
    "op4": "PartialEq",
    "ans": "Clone"
  },
  {
    "ques": "Which is true about lifetime annotations?",
    "quesType": "mcq",
    "op1": "They indicate how long references live",
    "op2": "They define modules",
    "op3": "They define traits",
    "op4": "They are macros",
    "ans": "They indicate how long references live"
  },
  {
    "ques": "```rust\nfn main() { println!(\"{}\", \"Rust\".chars().count()); }\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```rust\nfn main() { let n = Some(9); println!(\"{}\", n.unwrap_or(0)); }\n```",
    "quesType": "fill",
    "ans": "9"
  },
  {
    "ques": "```rust\nfn main() { let v = vec![1,2,3,4]; println!(\"{}\", v.len()); }\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```rust\nfn main() { let mut x = 10; x *= 2; println!(\"{}\", x); }\n```",
    "quesType": "fill",
    "ans": "20"
  },
  {
    "ques": "```rust\nfn main() { let t = (3, \"abc\"); println!(\"{}\", t.0); }\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nfn main() { let s = \"abc\"; println!(\"{}\", s.to_uppercase()); }\n```",
    "quesType": "fill",
    "ans": "ABC"
  },
  {
    "ques": "```rust\nfn main() { let x: Result<i32, _> = Ok(5); println!(\"{}\", x.unwrap()); }\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "Which trait must be implemented to use {:?} in println!?",
    "quesType": "mcq",
    "op1": "Display",
    "op2": "Debug",
    "op3": "Clone",
    "op4": "Send",
    "ans": "Debug"
  },
  {
    "ques": "Which syntax allows pattern matching with default case?",
    "quesType": "mcq",
    "op1": "loop",
    "op2": "match",
    "op3": "if let",
    "op4": "unwrap",
    "ans": "match"
  },
  {
    "ques": "Which of these creates a thread-safe reference counted pointer?",
    "quesType": "mcq",
    "op1": "Rc",
    "op2": "Arc",
    "op3": "RefCell",
    "op4": "Box",
    "ans": "Arc"
  },
  {
    "ques": "Which crate is commonly used for async HTTP clients?",
    "quesType": "mcq",
    "op1": "serde",
    "op2": "tokio",
    "op3": "reqwest",
    "op4": "clap",
    "ans": "reqwest"
  },
  {
    "ques": "What does the `Send` trait imply?",
    "quesType": "mcq",
    "op1": "Sync across threads",
    "op2": "Value can be moved to another thread",
    "op3": "Value can be cloned",
    "op4": "Value is boxed",
    "ans": "Value can be moved to another thread"
  },
  {
    "ques": "Which method is used to convert a String slice to owned String?",
    "quesType": "mcq",
    "op1": "to_str()",
    "op2": "clone()",
    "op3": "to_string()",
    "op4": "as_str()",
    "ans": "to_string()"
  },
  {
    "ques": "Which trait bound means the type can be formatted with `{}`?",
    "quesType": "mcq",
    "op1": "Debug",
    "op2": "Display",
    "op3": "Clone",
    "op4": "Copy",
    "ans": "Display"
  },
  {
    "ques": "Which module is used for file operations?",
    "quesType": "mcq",
    "op1": "fs",
    "op2": "fmt",
    "op3": "env",
    "op4": "thread",
    "ans": "fs"
  },
  {
    "ques": "Which statement about `Mutex` is true?",
    "quesType": "mcq",
    "op1": "It provides interior mutability for single-thread only",
    "op2": "It provides safe shared mutability across threads",
    "op3": "It is for reading files",
    "op4": "It runs async code",
    "ans": "It provides safe shared mutability across threads"
  },
  {
    "ques": "Which keyword awaits an async operation?",
    "quesType": "mcq",
    "op1": "future",
    "op2": "yield",
    "op3": "await",
    "op4": "poll",
    "ans": "await"
  },
  {
    "ques": "What does `unwrap_or` do?",
    "quesType": "mcq",
    "op1": "Panics on None",
    "op2": "Returns Some always",
    "op3": "Provides default if None",
    "op4": "Throws error",
    "ans": "Provides default if None"
  },
  {
    "ques": "Which trait is used for custom error types?",
    "quesType": "mcq",
    "op1": "Debug",
    "op2": "Display",
    "op3": "Error",
    "op4": "Result",
    "ans": "Error"
  },
  {
    "ques": "What does `?` operator do?",
    "quesType": "mcq",
    "op1": "Unwraps or returns Err",
    "op2": "Panics",
    "op3": "Formats strings",
    "op4": "Defines macro",
    "ans": "Unwraps or returns Err"
  },
  {
    "ques": "Which syntax enables module import?",
    "quesType": "mcq",
    "op1": "mod",
    "op2": "use",
    "op3": "pub",
    "op4": "as",
    "ans": "use"
  },
  {
    "ques": "Which trait means equality check?",
    "quesType": "mcq",
    "op1": "Clone",
    "op2": "Eq",
    "op3": "Ord",
    "op4": "Debug",
    "ans": "Eq"
  },
  {
    "ques": "Which syntax runs code at compile time?",
    "quesType": "mcq",
    "op1": "macro_rules!",
    "op2": "const",
    "op3": "static",
    "op4": "trait",
    "ans": "macro_rules!"
  },
  {
    "ques": "Which method locks a Mutex?",
    "quesType": "mcq",
    "op1": "lock()",
    "op2": "unwrap()",
    "op3": "clone()",
    "op4": "await()",
    "ans": "lock()"
  },
  {
    "ques": "Which file is used for dependencies?",
    "quesType": "mcq",
    "op1": "Cargo.toml",
    "op2": "Cargo.lock",
    "op3": "main.rs",
    "op4": "lib.rs",
    "ans": "Cargo.toml"
  },
  {
    "ques": "Which macro tests code?",
    "quesType": "mcq",
    "op1": "assert!",
    "op2": "println!",
    "op3": "panic!",
    "op4": "dbg!",
    "ans": "assert!"
  },
  {
    "ques": "Which ensures safe borrowing?",
    "quesType": "mcq",
    "op1": "Rc",
    "op2": "RefCell",
    "op3": "UnsafeCell",
    "op4": "Unsafe",
    "ans": "RefCell"
  },
  {
    "ques": "```rust\nfn main() { let x = Some(5); println!(\"{}\", x.unwrap()); }\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```rust\nfn main() { let v = vec![10, 20]; println!(\"{}\", v[1]); }\n```",
    "quesType": "fill",
    "ans": "20"
  },
  {
    "ques": "```rust\nfn main() { let s = \"Rust\"; println!(\"{}\", s.len()); }\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```rust\nfn main() { let n = 2.5_f32; println!(\"{}\", n.ceil()); }\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nfn main() { let t = (42, \"hi\"); println!(\"{}\", t.1); }\n```",
    "quesType": "fill",
    "ans": "hi"
  },
  {
    "ques": "```rust\nfn main() { let x: Result<i32, &str> = Ok(7); println!(\"{}\", x.unwrap()); }\n```",
    "quesType": "fill",
    "ans": "7"
  },
  {
    "ques": "```rust\nfn main() { let s = \"abc\"; println!(\"{}\", s.to_uppercase()); }\n```",
    "quesType": "fill",
    "ans": "ABC"
  },
  {
    "ques": "```rust\nfn main() { let s = \" test \"; println!(\"{}\", s.trim()); }\n```",
    "quesType": "fill",
    "ans": "test"
  },
  {
    "ques": "```rust\nfn main() { let x = 5; println!(\"{}\", x.pow(2)); }\n```",
    "quesType": "fill",
    "ans": "25"
  },
  {
    "ques": "```rust\nfn main() { let b = true; println!(\"{}\", b as u8); }\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```rust\nfn main() { let mut s = String::from(\"hi\"); s.push('!'); println!(\"{}\", s); }\n```",
    "quesType": "fill",
    "ans": "hi!"
  },
  {
    "ques": "```rust\nfn main() { let mut v = vec![1,2]; v.push(3); println!(\"{}\", v.len()); }\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nfn main() { println!(\"{}\", \"abc\".contains(\"b\")); }\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nfn main() { let x: Option<i32> = None; println!(\"{}\", x.unwrap_or(99)); }\n```",
    "quesType": "fill",
    "ans": "99"
  },
  {
    "ques": "```rust\nfn main() { println!(\"{}\", \"abc\".replace(\"a\", \"z\")); }\n```",
    "quesType": "fill",
    "ans": "zbc"
  },
  {
    "ques": "```rust\nfn main() { println!(\"{}\", (1..4).sum::<i32>()); }\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```rust\nfn main() { let s = \"Hello World\"; println!(\"{}\", s.split_whitespace().count()); }\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```rust\nfn main() { let n = -7; println!(\"{}\", n.abs()); }\n```",
    "quesType": "fill",
    "ans": "7"
  },
  {
    "ques": "```rust\nfn main() { println!(\"{}\", \"rust\".starts_with(\"r\")); }\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nfn main() { let x = Some(5); if let Some(n) = x { println!(\"{}\", n); } }\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "What does the `Drop` trait do?",
    "quesType": "mcq",
    "op1": "Allocates memory",
    "op2": "Runs when a value goes out of scope",
    "op3": "Clones the value",
    "op4": "Enables multithreading",
    "ans": "Runs when a value goes out of scope"
  },
  {
    "ques": "Which ensures a struct cannot be copied automatically?",
    "quesType": "mcq",
    "op1": "Implementing Copy",
    "op2": "Implementing Drop",
    "op3": "Using Clone",
    "op4": "Using Rc",
    "ans": "Implementing Drop"
  },
  {
    "ques": "Which type allows interior mutability?",
    "quesType": "mcq",
    "op1": "Rc",
    "op2": "Arc",
    "op3": "RefCell",
    "op4": "Box",
    "ans": "RefCell"
  },
  {
    "ques": "What does `.expect()` do on Option?",
    "quesType": "mcq",
    "op1": "Always returns None",
    "op2": "Returns Ok",
    "op3": "Returns inner value or panics with message",
    "op4": "Ignores the error",
    "ans": "Returns inner value or panics with message"
  },
  {
    "ques": "Which trait is used for ordering comparisons?",
    "quesType": "mcq",
    "op1": "Eq",
    "op2": "Ord",
    "op3": "Clone",
    "op4": "Debug",
    "ans": "Ord"
  },
  {
    "ques": "Which syntax blocks multiple threads until all finish?",
    "quesType": "mcq",
    "op1": "join()",
    "op2": "await()",
    "op3": "lock()",
    "op4": "sync()",
    "ans": "join()"
  },
  {
    "ques": "What does `Pin` do in Rust?",
    "quesType": "mcq",
    "op1": "Locks a Mutex",
    "op2": "Prevents moving pinned data",
    "op3": "Runs async tasks",
    "op4": "Formats output",
    "ans": "Prevents moving pinned data"
  },
  {
    "ques": "Which crate is used for serialization/deserialization?",
    "quesType": "mcq",
    "op1": "tokio",
    "op2": "serde",
    "op3": "rand",
    "op4": "clap",
    "ans": "serde"
  },
  {
    "ques": "Which method converts String to integer safely?",
    "quesType": "mcq",
    "op1": "as_str()",
    "op2": "parse()",
    "op3": "unwrap()",
    "op4": "to_string()",
    "ans": "parse()"
  },
  {
    "ques": "Which method helps run async blocks in main?",
    "quesType": "mcq",
    "op1": "main!",
    "op2": "async_main!",
    "op3": "#[tokio::main]",
    "op4": "#[macro_use]",
    "ans": "#[tokio::main]"
  },
  {
    "ques": "Which macro checks conditions in tests?",
    "quesType": "mcq",
    "op1": "println!",
    "op2": "panic!",
    "op3": "assert_eq!",
    "op4": "format!",
    "ans": "assert_eq!"
  },
  {
    "ques": "Which method for Option returns true if Some?",
    "quesType": "mcq",
    "op1": "is_err()",
    "op2": "is_some()",
    "op3": "unwrap()",
    "op4": "unwrap_or()",
    "ans": "is_some()"
  },
  {
    "ques": "Which is used for non-blocking IO?",
    "quesType": "mcq",
    "op1": "std::fs",
    "op2": "std::thread",
    "op3": "tokio",
    "op4": "std::fmt",
    "ans": "tokio"
  },
  {
    "ques": "What does `unwrap_or_else` do?",
    "quesType": "mcq",
    "op1": "Returns inner or calls closure",
    "op2": "Always unwraps",
    "op3": "Panics on None",
    "op4": "Ignores None",
    "ans": "Returns inner or calls closure"
  },
  {
    "ques": "Which type enforces unique ownership?",
    "quesType": "mcq",
    "op1": "Box",
    "op2": "Rc",
    "op3": "Arc",
    "op4": "String",
    "ans": "Box"
  },
  {
    "ques": "Which indicates an IO error?",
    "quesType": "mcq",
    "op1": "Result<T, String>",
    "op2": "Result<T, std::io::Error>",
    "op3": "Option<T>",
    "op4": "Box<T>",
    "ans": "Result<T, std::io::Error>"
  },
  {
    "ques": "Which syntax declares a generic function?",
    "quesType": "mcq",
    "op1": "fn foo()",
    "op2": "fn foo<T>()",
    "op3": "fn foo<T, U>()",
    "op4": "Both 2 & 3",
    "ans": "Both 2 & 3"
  },
  {
    "ques": "Which keyword is used for lifetime annotation?",
    "quesType": "mcq",
    "op1": "&",
    "op2": "static",
    "op3": "'a",
    "op4": "mut",
    "ans": "'a"
  },
  {
    "ques": "Which ensures safe multi-thread sharing?",
    "quesType": "mcq",
    "op1": "Rc",
    "op2": "Arc<Mutex<T>>",
    "op3": "Box",
    "op4": "RefCell",
    "ans": "Arc<Mutex<T>>"
  },
  {
    "ques": "Which is true about traits?",
    "quesType": "mcq",
    "op1": "Traits can’t have methods",
    "op2": "Traits can have default methods",
    "op3": "Traits can’t be generic",
    "op4": "Traits can’t be used for polymorphism",
    "ans": "Traits can have default methods"
  },
  {
    "ques": "```rust\nfn main() { let x: Result<i32, _> = Ok(10); println!(\"{}\", x.unwrap()); }\n```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "```rust\nfn main() { let s = String::from(\"Rust\"); println!(\"{}\", s.chars().count()); }\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```rust\nfn main() { let x = Some(42); println!(\"{}\", x.unwrap_or(0)); }\n```",
    "quesType": "fill",
    "ans": "42"
  },
  {
    "ques": "```rust\nfn main() { println!(\"{}\", \"abcde\".get(2..3).unwrap()); }\n```",
    "quesType": "fill",
    "ans": "c"
  },
  {
    "ques": "```rust\nfn main() { println!(\"{}\", \"Hello\".replace(\"H\", \"Y\")); }\n```",
    "quesType": "fill",
    "ans": "Yello"
  },
  {
    "ques": "```rust\nfn main() { println!(\"{}\", (1..5).fold(0, |a, b| a + b)); }\n```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "```rust\nfn main() { let n: i8 = -8; println!(\"{}\", n.abs()); }\n```",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "```rust\nfn main() { let v = vec![5,10,15]; println!(\"{}\", v.iter().sum::<i32>()); }\n```",
    "quesType": "fill",
    "ans": "30"
  },
  {
    "ques": "```rust\nfn main() { let s = \"Rustacean\"; println!(\"{}\", s.starts_with(\"Rust\")); }\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nfn main() { let f = |x: i32| x * 2; println!(\"{}\", f(4)); }\n```",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "```rust\nfn main() { println!(\"{}\", \"Test\".to_lowercase()); }\n```",
    "quesType": "fill",
    "ans": "test"
  },
  {
    "ques": "```rust\nfn main() { let arr = [1, 2, 3]; println!(\"{}\", arr.len()); }\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nfn main() { let mut v = vec![1,2]; v.pop(); println!(\"{}\", v.len()); }\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```rust\nfn main() { let s = \"a,b,c\"; println!(\"{}\", s.split(',').count()); }\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nfn main() { println!(\"{}\", \"abc\".find(\"b\").unwrap()); }\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```rust\nfn main() { let s = \"abc\"; println!(\"{}\", s.ends_with(\"c\")); }\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nfn main() { let mut s = String::from(\"abc\"); s.push_str(\"123\"); println!(\"{}\", s); }\n```",
    "quesType": "fill",
    "ans": "abc123"
  },
  {
    "ques": "```rust\nfn main() { println!(\"{}\", \"Hello World\".split_whitespace().nth(1).unwrap()); }\n```",
    "quesType": "fill",
    "ans": "World"
  },
  {
    "ques": "```rust\nfn main() { println!(\"{}\", 3.14_f32.floor()); }\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nfn main() { let n: f64 = 2.7; println!(\"{}\", n.round()); }\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nfn main() { let x = 2.5_f32; println!(\"{}\", x.ceil()); }\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nfn main() { let arr = [10, 20, 30]; println!(\"{}\", arr.iter().position(|&x| x == 20).unwrap()); }\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```rust\nfn main() { let s = \"rustlang\"; println!(\"{}\", &s[4..]); }\n```",
    "quesType": "fill",
    "ans": "lang"
  },
  {
    "ques": "```rust\nfn main() { let v = vec![2,4,6]; println!(\"{}\", v.contains(&4)); }\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```rust\nfn main() { let s = \"hello world\"; println!(\"{}\", s.replace(\"world\", \"Rust\")); }\n```",
    "quesType": "fill",
    "ans": "hello Rust"
  },
  {
    "ques": "```rust\nfn main() { let n = -12; println!(\"{}\", n.signum()); }\n```",
    "quesType": "fill",
    "ans": "-1"
  },
  {
    "ques": "```rust\nfn main() { let v = vec![1,2,3]; println!(\"{}\", v.iter().max().unwrap()); }\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nfn main() { let v = vec![1,2,3]; println!(\"{}\", v.iter().min().unwrap()); }\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```rust\nfn main() { println!(\"{}\", \"rust\".to_uppercase()); }\n```",
    "quesType": "fill",
    "ans": "RUST"
  },
  {
    "ques": "```rust\nfn main() { let f = |x| x * x; println!(\"{}\", f(5)); }\n```",
    "quesType": "fill",
    "ans": "25"
  },
  {
    "ques": "```rust\nfn main() { let mut s = String::from(\"foo\"); s.push('!'); println!(\"{}\", s); }\n```",
    "quesType": "fill",
    "ans": "foo!"
  },
  {
    "ques": "```rust\nfn main() { let n = 3.14159; println!(\"{:.2}\", n); }\n```",
    "quesType": "fill",
    "ans": "3.14"
  },
  {
    "ques": "```rust\nfn main() { let b = true; println!(\"{}\", !b); }\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```rust\nfn main() { let mut v = vec![1,2]; v.insert(1, 5); println!(\"{:?}\", v); }\n```",
    "quesType": "fill",
    "ans": "[1, 5, 2]"
  },
  {
    "ques": "```rust\nfn main() { let tuple = (1, \"Rust\"); println!(\"{}\", tuple.1); }\n```",
    "quesType": "fill",
    "ans": "Rust"
  },
  {
    "ques": "```rust\nfn main() { let arr = [1,2,3]; println!(\"{}\", arr[2]); }\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nfn main() { let v = vec![5,6,7]; println!(\"{}\", v.len()); }\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```rust\nfn main() { println!(\"{}\", \"hello\".is_empty()); }\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```rust\nfn main() { let s = \"  hi  \"; println!(\"{}\", s.trim()); }\n```",
    "quesType": "fill",
    "ans": "hi"
  },
  {
    "ques": "```rust\nfn main() { println!(\"{}\", \"rust\".chars().nth(1).unwrap()); }\n```",
    "quesType": "fill",
    "ans": "u"
  },
  {
    "ques": "What is the output?\n\n```rust\nfn main() { println!(\"{}\", 2_i32.pow(3)); }\n```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "8",
    "op3": "9",
    "op4": "16",
    "ans": "8"
  },
  {
    "ques": "What prints?\n\n```rust\nfn main() { let s = \"rustacean\"; println!(\"{}\", &s[0..4]); }\n```",
    "quesType": "mcq",
    "op1": "rust",
    "op2": "acean",
    "op3": "rustace",
    "op4": "stac",
    "ans": "rust"
  },
  {
    "ques": "Output?\n\n```rust\nfn main() { let a = [5; 3]; println!(\"{}\", a[1]); }\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "5",
    "op3": "0",
    "op4": "1",
    "ans": "5"
  },
  {
    "ques": "Result?\n\n```rust\nfn main() { println!(\"{}\", 10.0_f64.sqrt()); }\n```",
    "quesType": "mcq",
    "op1": "3.16",
    "op2": "10.0",
    "op3": "5.0",
    "op4": "Error",
    "ans": "3.16"
  },
  {
    "ques": "What does it print?\n\n```rust\nfn main() { let s = \"rust\"; println!(\"{}\", s.len()); }\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "4",
    "op3": "5",
    "op4": "0",
    "ans": "4"
  },
  {
    "ques": "What is shown?\n\n```rust\nfn main() { println!(\"{}\", 20 % 3); }\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "2"
  },
  {
    "ques": "Output?\n\n```rust\nfn main() { let mut s = String::from(\"Hi\"); s.push_str(\" there\"); println!(\"{}\", s); }\n```",
    "quesType": "mcq",
    "op1": "Hi",
    "op2": "there",
    "op3": "Hi there",
    "op4": "Hi  there",
    "ans": "Hi there"
  },
  {
    "ques": "What does it output?\n\n```rust\nfn main() { println!(\"{}\", \"Rust\".starts_with(\"Ru\")); }\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Error",
    "op4": "0",
    "ans": "true"
  },
  {
    "ques": "Result?\n\n```rust\nfn main() { println!(\"{}\", 7_f32.round()); }\n```",
    "quesType": "mcq",
    "op1": "7",
    "op2": "7.0",
    "op3": "7.00",
    "op4": "7.000",
    "ans": "7"
  },
  {
    "ques": "What prints?\n\n```rust\nfn main() { println!(\"{}\", \"abc\".replace(\"b\", \"z\")); }\n```",
    "quesType": "mcq",
    "op1": "azc",
    "op2": "abc",
    "op3": "abz",
    "op4": "azb",
    "ans": "azc"
  },
  {
    "ques": "What is the output?\n\n```rust\nfn main() { println!(\"{}\", \"abc\".chars().rev().collect::<String>()); }\n```",
    "quesType": "mcq",
    "op1": "abc",
    "op2": "cba",
    "op3": "bac",
    "op4": "Error",
    "ans": "cba"
  },
  {
    "ques": "Prints?\n\n```rust\nfn main() { println!(\"{}\", vec![1,2,3].contains(&2)); }\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "1",
    "op4": "0",
    "ans": "true"
  },
  {
    "ques": "Output?\n\n```rust\nfn main() { let v = vec![10,20,30]; println!(\"{}\", v.first().unwrap()); }\n```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "20",
    "op3": "30",
    "op4": "None",
    "ans": "10"
  },
  {
    "ques": "What does this output?\n\n```rust\nfn main() { let b = false; println!(\"{}\", b as u8); }\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "0",
    "op3": "true",
    "op4": "false",
    "ans": "0"
  },
  {
    "ques": "Result?\n\n```rust\nfn main() { println!(\"{}\", \"abc def\".split_whitespace().count()); }\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "2"
  },
  {
    "ques": "What will be printed?\n\n```rust\nfn main() { println!(\"{}\", \"Rust\".ends_with(\"st\")); }\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Error",
    "op4": "0",
    "ans": "true"
  },
  {
    "ques": "What is output?\n\n```rust\nfn main() { println!(\"{}\", 2.0_f32.sqrt()); }\n```",
    "quesType": "mcq",
    "op1": "1.41",
    "op2": "1.42",
    "op3": "2",
    "op4": "Error",
    "ans": "1.41"
  },
  {
    "ques": "What is the output?\n\n```rust\nfn main() { let t = (3, 4); println!(\"{}\", t.0 + t.1); }\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "4",
    "op3": "7",
    "op4": "12",
    "ans": "7"
  },
  {
    "ques": "Prints?\n\n```rust\nfn main() { let arr = [1,2,3]; println!(\"{}\", arr.len()); }\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "1",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "Output?\n\n```rust\nfn main() { println!(\"{}\", (1..5).sum::<i32>()); }\n```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "15",
    "op3": "5",
    "op4": "6",
    "ans": "10"
  },
  {
    "ques": "Output?\n\n```rust\nfn main() { let s = String::from(\"Rust\"); println!(\"{}\", s.to_lowercase()); }\n```",
    "quesType": "mcq",
    "op1": "Rust",
    "op2": "rust",
    "op3": "RUST",
    "op4": "error",
    "ans": "rust"
  },
  {
    "ques": "What is printed?\n\n```rust\nfn main() { let mut x = 1; x += 2; println!(\"{}\", x); }\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "What does it show?\n\n```rust\nfn main() { println!(\"{}\", \"abc\".repeat(2)); }\n```",
    "quesType": "mcq",
    "op1": "abcabc",
    "op2": "abc",
    "op3": "ab",
    "op4": "Error",
    "ans": "abcabc"
  },
  {
    "ques": "Output?\n\n```rust\nfn main() { let s = \"Rust\"; println!(\"{}\", &s[1..]); }\n```",
    "quesType": "mcq",
    "op1": "Rust",
    "op2": "ust",
    "op3": "st",
    "op4": "R",
    "ans": "ust"
  },
  {
    "ques": "What is the output?\n\n```rust\nfn main() { let n = 5; println!(\"{}\", n * n); }\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "10",
    "op3": "25",
    "op4": "0",
    "ans": "25"
  },
  {
    "ques": "Result?\n\n```rust\nfn main() { let f = 5.5; println!(\"{}\", f.floor()); }\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "6",
    "op3": "5.5",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "What prints?\n\n```rust\nfn main() { println!(\"{}\", \"abc def\".find(\"d\").unwrap()); }\n```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "3",
    "op3": "4",
    "op4": "None",
    "ans": "4"
  },
  {
    "ques": "What is shown?\n\n```rust\nfn main() { println!(\"{}\", \"abc\".contains(\"b\")); }\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "1",
    "op4": "0",
    "ans": "true"
  },
  {
    "ques": "Output?\n\n```rust\nfn main() { let x = vec![2, 4, 6]; println!(\"{}\", x.len()); }\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "6",
    "op4": "1",
    "ans": "3"
  },
  {
    "ques": "Result?\n\n```rust\nfn main() { println!(\"{}\", \"Rust\".replace(\"R\", \"T\")); }\n```",
    "quesType": "mcq",
    "op1": "Rust",
    "op2": "Tust",
    "op3": "Tus",
    "op4": "ust",
    "ans": "Tust"
  },
  {
    "ques": "What prints?\n\n```rust\nfn main() { println!(\"{}\", \"hello\".chars().nth(1).unwrap()); }\n```",
    "quesType": "mcq",
    "op1": "h",
    "op2": "e",
    "op3": "l",
    "op4": "o",
    "ans": "e"
  },
  {
    "ques": "What is output?\n\n```rust\nfn main() { println!(\"{}\", \"hi\".to_uppercase()); }\n```",
    "quesType": "mcq",
    "op1": "HI",
    "op2": "hi",
    "op3": "Hi",
    "op4": "error",
    "ans": "HI"
  },
  {
    "ques": "Prints?\n\n```rust\nfn main() { let t = (5, true); println!(\"{}\", t.1); }\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "true",
    "op3": "false",
    "op4": "1",
    "ans": "true"
  },
  {
    "ques": "What shows?\n\n```rust\nfn main() { println!(\"{}\", [1,2,3].iter().sum::<i32>()); }\n```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "5",
    "op3": "3",
    "op4": "0",
    "ans": "6"
  },
  {
    "ques": "Output?\n\n```rust\nfn main() { let x = (1..5).collect::<Vec<i32>>(); println!(\"{}\", x.len()); }\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "4",
    "op3": "3",
    "op4": "Error",
    "ans": "4"
  },
  {
    "ques": "What is the output?\n\n```rust\nfn main() { println!(\"{}\", (1..=3).rev().nth(0).unwrap()); }\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "2",
    "op3": "1",
    "op4": "4",
    "ans": "3"
  },
  {
    "ques": "Prints?\n\n```rust\nfn main() { let s = \" rust \"; println!(\"{}\", s.trim()); }\n```",
    "quesType": "mcq",
    "op1": " rust ",
    "op2": "rust",
    "op3": "rust ",
    "op4": " rust",
    "ans": "rust"
  },
  {
    "ques": "What does this output?\n\n```rust\nfn main() { let x = Some(5); println!(\"{}\", x.unwrap()); }\n```",
    "quesType": "mcq",
    "op1": "Some(5)",
    "op2": "5",
    "op3": "None",
    "op4": "0",
    "ans": "5"
  },
  {
    "ques": "Result?\n\n```rust\nfn main() { let x = vec![1,2,3]; println!(\"{}\", x.last().unwrap()); }\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "What is printed?\n\n```rust\nfn main() { println!(\"{}\", \"RustLang\".contains(\"Lang\")); }\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "1",
    "op4": "0",
    "ans": "true"
  },
  {
    "ques": "Output?\n\n```rust\nfn main() { let s = String::from(\"Rust\"); println!(\"{}\", s.to_lowercase()); }\n```",
    "quesType": "mcq",
    "op1": "Rust",
    "op2": "rust",
    "op3": "RUST",
    "op4": "error",
    "ans": "rust"
  },
  {
    "ques": "What is printed?\n\n```rust\nfn main() { let mut x = 1; x += 2; println!(\"{}\", x); }\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "What does it show?\n\n```rust\nfn main() { println!(\"{}\", \"abc\".repeat(2)); }\n```",
    "quesType": "mcq",
    "op1": "abcabc",
    "op2": "abc",
    "op3": "ab",
    "op4": "Error",
    "ans": "abcabc"
  },
  {
    "ques": "Output?\n\n```rust\nfn main() { let s = \"Rust\"; println!(\"{}\", &s[1..]); }\n```",
    "quesType": "mcq",
    "op1": "Rust",
    "op2": "ust",
    "op3": "st",
    "op4": "R",
    "ans": "ust"
  },
  {
    "ques": "What is the output?\n\n```rust\nfn main() { let n = 5; println!(\"{}\", n * n); }\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "10",
    "op3": "25",
    "op4": "0",
    "ans": "25"
  },
  {
    "ques": "Result?\n\n```rust\nfn main() { let f = 5.5; println!(\"{}\", f.floor()); }\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "6",
    "op3": "5.5",
    "op4": "Error",
    "ans": "5"
  },
  {
    "ques": "What prints?\n\n```rust\nfn main() { println!(\"{}\", \"abc def\".find(\"d\").unwrap()); }\n```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "3",
    "op3": "4",
    "op4": "None",
    "ans": "4"
  },
  {
    "ques": "What is shown?\n\n```rust\nfn main() { println!(\"{}\", \"abc\".contains(\"b\")); }\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "1",
    "op4": "0",
    "ans": "true"
  },
  {
    "ques": "Output?\n\n```rust\nfn main() { let x = vec![2, 4, 6]; println!(\"{}\", x.len()); }\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "6",
    "op4": "1",
    "ans": "3"
  },
  {
    "ques": "Result?\n\n```rust\nfn main() { println!(\"{}\", \"Rust\".replace(\"R\", \"T\")); }\n```",
    "quesType": "mcq",
    "op1": "Rust",
    "op2": "Tust",
    "op3": "Tus",
    "op4": "ust",
    "ans": "Tust"
  },
  {
    "ques": "What prints?\n\n```rust\nfn main() { println!(\"{}\", \"hello\".chars().nth(1).unwrap()); }\n```",
    "quesType": "mcq",
    "op1": "h",
    "op2": "e",
    "op3": "l",
    "op4": "o",
    "ans": "e"
  },
  {
    "ques": "What is output?\n\n```rust\nfn main() { println!(\"{}\", \"hi\".to_uppercase()); }\n```",
    "quesType": "mcq",
    "op1": "HI",
    "op2": "hi",
    "op3": "Hi",
    "op4": "error",
    "ans": "HI"
  },
  {
    "ques": "Prints?\n\n```rust\nfn main() { let t = (5, true); println!(\"{}\", t.1); }\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "true",
    "op3": "false",
    "op4": "1",
    "ans": "true"
  },
  {
    "ques": "What shows?\n\n```rust\nfn main() { println!(\"{}\", [1,2,3].iter().sum::<i32>()); }\n```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "5",
    "op3": "3",
    "op4": "0",
    "ans": "6"
  },
  {
    "ques": "Output?\n\n```rust\nfn main() { let x = (1..5).collect::<Vec<i32>>(); println!(\"{}\", x.len()); }\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "4",
    "op3": "3",
    "op4": "Error",
    "ans": "4"
  },
  {
    "ques": "What is the output?\n\n```rust\nfn main() { println!(\"{}\", (1..=3).rev().nth(0).unwrap()); }\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "2",
    "op3": "1",
    "op4": "4",
    "ans": "3"
  },
  {
    "ques": "Prints?\n\n```rust\nfn main() { let s = \" rust \"; println!(\"{}\", s.trim()); }\n```",
    "quesType": "mcq",
    "op1": " rust ",
    "op2": "rust",
    "op3": "rust ",
    "op4": " rust",
    "ans": "rust"
  },
  {
    "ques": "What does this output?\n\n```rust\nfn main() { let x = Some(5); println!(\"{}\", x.unwrap()); }\n```",
    "quesType": "mcq",
    "op1": "Some(5)",
    "op2": "5",
    "op3": "None",
    "op4": "0",
    "ans": "5"
  },
  {
    "ques": "Result?\n\n```rust\nfn main() { let x = vec![1,2,3]; println!(\"{}\", x.last().unwrap()); }\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "What is printed?\n\n```rust\nfn main() { println!(\"{}\", \"RustLang\".contains(\"Lang\")); }\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "1",
    "op4": "0",
    "ans": "true"
  }
]

let rustIncorrectAnswers = [];

let rustTimerId = "";
let rustSkip = document.getElementById("rustSkip");
let codingrustQues = document.getElementById("codingrustQues");
let mcqrust = document.getElementById("mcqrust");
let rustQuestionNumber = document.getElementById("rustQuestionNumber");
let rustQuestionCount = 2;
let rustScore = 0;
let rustScoreDisplay = document.getElementById("rustScoreDisplay");
let rustScoreShow = document.getElementById("rustScoreShow");
let rustSkip2 = document.getElementById("rustSkip2");

let rustFillAns = document.getElementById("rustFillAns");
let rustStatus1 = document.getElementById("rustStatus1");
let rustStatus2 = document.getElementById("rustStatus2");
let rustStatus3 = document.getElementById("rustStatus3");
let rustCheckFill = document.getElementById("rustCheckFill");

let codingResultrust = document.getElementById("codingResultrust");

let rustIncorrectAnswersDisplay = document.getElementById("rustIncorrectAnswersDisplay");
let rustScoreBelow70 = document.getElementById("rustScoreBelow70");
let rustScore100 = document.getElementById("rustScore100");

let rustResult1 = document.getElementById("rustResult1");
let rustResult2 = document.getElementById("rustResult2");
let rustResult3 = document.getElementById("rustResult3");
let rustResult4 = document.getElementById("rustResult4");
let rustResult5 = document.getElementById("rustResult5");
let rustBg1 = document.getElementById("rustBg1");

function codingrustStart(){
  codingrustHide.classList.add("d-none");
codingrustShow.classList.remove("d-none");

let fillBlankrust = document.getElementById("fillBlankrust");
let op1rust = document.getElementById("op1rust");
let op2rust = document.getElementById("op2rust");
let op3rust = document.getElementById("op3rust");
let op4rust = document.getElementById("op4rust");

let rustFillAns = document.getElementById("rustFillAns");
let rustStatus1 = document.getElementById("rustStatus1");
let rustStatus2 = document.getElementById("rustStatus2");
let rustStatus3 = document.getElementById("rustStatus3");
let rustCheckFill = document.getElementById("rustCheckFill");

rustFillAns.disabled = false;
rustStatus1.classList.remove("d-none");
rustStatus2.classList.add("d-none");
rustStatus3.classList.add("d-none");
rustFillAns.value = "";
rustSkip2.textContent = "Skip";
rustSkip2.style.backgroundColor = "orange";
rustSkip2.style.borderColor = "orange";

rustSkip.textContent = "Skip";
rustSkip.style.backgroundColor = "orange";
rustSkip.style.borderColor = "orange";
rustScoreShow.textContent = "";
rustTimer.style.color = "black";

if (rustLevel === 1) {
  let rustRandom = Math.floor(Math.random() * codingrust1Arr.length);
  let y = codingrust1Arr[rustRandom];
  rustTimer.textContent = "20";
  rustTime = 20;

  rustTimerId = setInterval(function () {
    rustTime = rustTime - 1;
    if (rustTime == 0) {
      clearInterval(rustTimerId);
      rustQuestionNumber.textContent = "Question:" + rustQuestionCount + "/10";
      rustQuestionCount = rustQuestionCount + 1;
      rustTime = 20;
      codingrustStart();
    }
    if (rustTime <= 5) {
      rustTimer.style.color = "red";
      rustTimer.textContent = rustTime;
    } else {
      rustTimer.textContent = rustTime;
    }
  }, 1000);

  if (rustQuestionCount == 12) {
    clearInterval(rustTimerId);
    mcqrust.classList.add("d-none");
    document.getElementById("rustScoreEnd").textContent = rustScoreDisplay.textContent;
    fillBlankrust.classList.add("d-none");
    codingrustShow.classList.add("d-none");
    codingResultrust.classList.remove("d-none");

    if (rustScore < 70) {
      rustScoreBelow70.classList.remove("d-none");
      rustScore100.classList.add("d-none");
      sectionCodingrust.classList.add("back15");

      rustResult1.textContent = "Test finished!!";
      rustResult2.textContent = "😓 Oops! Not quite right.";
      rustResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      rustResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      rustIncorrectAnswersDisplay.appendChild(h2);

      for (let z of rustIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        rustIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (rustScore < 100) {
      rustScoreBelow70.classList.remove("d-none");
      rustScore100.classList.add("d-none");
      sectionCodingrust.classList.add("back15");

      rustResult1.textContent = "Test finished!!";
      rustResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      rustResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      rustResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      rustIncorrectAnswersDisplay.appendChild(h2);

      for (let z of rustIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        rustIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (rustScore === 100) {
      document.getElementById("sectionCodingrust").classList.add("back14");
      rustScore100.classList.remove("d-none");
      rustScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqrust.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingrustQues.innerHTML = formattedQuestion;

    fillBlankrust.classList.add("d-none");
    op1rust.textContent = y.op1;
    op2rust.textContent = y.op2;
    op3rust.textContent = y.op3;
    op4rust.textContent = y.op4;

    const allOps = [op1rust, op2rust, op3rust, op4rust];
    allOps.forEach((op, i) => {
      op.onclick = function () {
        allOps.forEach(o => (o.disabled = true));
        clearInterval(rustTimerId);
        rustTime = 20;

        if (op.textContent === y.ans) {
          op.style.backgroundColor = "green";
          rustScore += 10;
          rustScoreShow.textContent = "+10";
          rustScoreShow.style.color = "green";
        } else {
          op.style.backgroundColor = "red";
          rustScore -= 5;
          rustScoreShow.textContent = "-5";
          rustScoreShow.style.color = "red";
          let wrong_answer = { ques: y.ques, correct: y.ans, wrong: op.textContent };
          rustIncorrectAnswers.push(wrong_answer);
        }

        rustScoreDisplay.textContent = "Score: " + rustScore + "/100";

        rustSkip.textContent = "Next";
        rustSkip.style.backgroundColor = "#23ebdd";
        rustSkip.style.borderColor = "#23ebdd";

        rustSkip.onclick = function () {
          rustQuestionNumber.textContent = "Question:" + rustQuestionCount + "/10";
          rustQuestionCount += 1;
          allOps.forEach(o => {
            o.disabled = false;
            o.style.backgroundColor = "white";
          });
          codingrustStart();
        };
      };
    });

    rustSkip.onclick = function () {
      clearInterval(rustTimerId);
      rustTime = 20;
      rustQuestionNumber.textContent = "Question:" + rustQuestionCount + "/10";
      rustQuestionCount += 1;
      allOps.forEach(o => {
        o.disabled = false;
        o.style.backgroundColor = "white";
      });
      let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
      rustIncorrectAnswers.push(wrong_answer);
      codingrustStart();
    };
  } 
  else {
    mcqrust.classList.add("d-none");
    fillBlankrust.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingrustQues.innerHTML = formattedQuestion;

    rustCheckFill.onclick = function () {
      clearInterval(rustTimerId);
      rustCheckFill.disabled = false;
      rustSkip2.textContent = "Next";
      rustSkip2.style.backgroundColor = "#23ebdd";
      rustSkip2.style.borderColor = "#23ebdd";
      rustFillAns.disabled = true;

      if (rustFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        rustStatus1.classList.add("d-none");
        rustStatus2.classList.remove("d-none");

        rustScore += 10;
        rustScoreShow.textContent = "+10";
        rustScoreShow.style.color = "green";
      } else {
        rustStatus1.classList.add("d-none");
        rustStatus3.classList.remove("d-none");

        rustScore -= 5;
        rustScoreShow.textContent = "-5";
        rustScoreShow.style.color = "red";

        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: rustFillAns.value };
        rustIncorrectAnswers.push(wrong_answer);
      }

      rustScoreDisplay.textContent = "Score: " + rustScore + "/100";
    };

    rustSkip2.onclick = function () {
      if (rustFillAns.value === "") {
        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
        rustIncorrectAnswers.push(wrong_answer);
      }
      clearInterval(rustTimerId);
      rustTime = 20;
      rustQuestionNumber.textContent = "Question:" + rustQuestionCount + "/10";
      rustQuestionCount += 1;
      codingrustStart();
    };
  }
}
else if (rustLevel === 2) {
  let rustRandom = Math.floor(Math.random() * codingrust2Arr.length);
  let y = codingrust2Arr[rustRandom];
  rustTimer.textContent = "25";
  rustTime = 25;

  rustTimerId = setInterval(function () {
    rustTime = rustTime - 1;
    if (rustTime == 0) {
      clearInterval(rustTimerId);
      rustQuestionNumber.textContent = "Question:" + rustQuestionCount + "/10";
      rustQuestionCount = rustQuestionCount + 1;
      rustTime = 25;
      codingrustStart();
    }
    if (rustTime <= 5) {
      rustTimer.style.color = "red";
      rustTimer.textContent = rustTime;
    } else {
      rustTimer.textContent = rustTime;
    }
  }, 1000);

  if (rustQuestionCount == 12) {
    clearInterval(rustTimerId);
    mcqrust.classList.add("d-none");
    document.getElementById("rustScoreEnd").textContent = rustScoreDisplay.textContent;
    fillBlankrust.classList.add("d-none");
    codingrustShow.classList.add("d-none");
    codingResultrust.classList.remove("d-none");

    if (rustScore < 70) {
      rustScoreBelow70.classList.remove("d-none");
      rustScore100.classList.add("d-none");
      sectionCodingrust.classList.add("back15");

      rustResult1.textContent = "Test finished!!";
      rustResult2.textContent = "😓 Oops! Not quite right.";
      rustResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      rustResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      rustIncorrectAnswersDisplay.appendChild(h2);

      for (let z of rustIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        rustIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (rustScore < 100) {
      rustScoreBelow70.classList.remove("d-none");
      rustScore100.classList.add("d-none");
      sectionCodingrust.classList.add("back15");

      rustResult1.textContent = "Test finished!!";
      rustResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      rustResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      rustResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      rustIncorrectAnswersDisplay.appendChild(h2);

      for (let z of rustIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        rustIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (rustScore === 100) {
      document.getElementById("sectionCodingrust").classList.add("back14");
      rustScore100.classList.remove("d-none");
      rustScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqrust.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingrustQues.innerHTML = formattedQuestion;
    fillBlankrust.classList.add("d-none");
    op1rust.textContent = y.op1;
    op2rust.textContent = y.op2;
    op3rust.textContent = y.op3;
    op4rust.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(rustTimerId);
      rustTime = 25;
      rustSkip.textContent = "Next";
      rustSkip.style.backgroundColor = "#23ebdd";
      rustSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        rustScore += 10;
        rustScoreShow.textContent = "+10";
        rustScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        rustScore -= 5;
        rustScoreShow.textContent = "-5";
        rustScoreShow.style.color = "red";
        rustIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      rustScoreDisplay.textContent = "Score: " + rustScore + "/100";
    }

    op1rust.onclick = () => handleOptionClick(op1rust, [op2rust, op3rust, op4rust]);
    op2rust.onclick = () => handleOptionClick(op2rust, [op1rust, op3rust, op4rust]);
    op3rust.onclick = () => handleOptionClick(op3rust, [op1rust, op2rust, op4rust]);
    op4rust.onclick = () => handleOptionClick(op4rust, [op1rust, op2rust, op3rust]);

    rustSkip.onclick = function () {
      clearInterval(rustTimerId);
      rustTime = 25;
      rustQuestionNumber.textContent = "Question:" + rustQuestionCount + "/10";
      rustQuestionCount++;
      [op1rust, op2rust, op3rust, op4rust].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      rustIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingrustStart();
    };
  }
  else {
    mcqrust.classList.add("d-none");
    fillBlankrust.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingrustQues.innerHTML = formattedQuestion;

    rustCheckFill.disabled = false;
    rustFillAns.disabled = false;
    rustFillAns.value = "";
    rustStatus1.classList.remove("d-none");
    rustStatus2.classList.add("d-none");
    rustStatus3.classList.add("d-none");
    rustScoreShow.textContent = "";

    rustCheckFill.onclick = function () {
      clearInterval(rustTimerId);
      rustCheckFill.disabled = true;
      rustSkip2.textContent = "Next";
      rustSkip2.style.backgroundColor = "#23ebdd";
      rustSkip2.style.borderColor = "#23ebdd";
      rustFillAns.disabled = true;

      if (rustFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        rustStatus1.classList.add("d-none");
        rustStatus2.classList.remove("d-none");
        rustScore += 10;
        rustScoreShow.textContent = "+10";
        rustScoreShow.style.color = "green";
      } else {
        rustStatus1.classList.add("d-none");
        rustStatus3.classList.remove("d-none");
        rustScore -= 5;
        rustScoreShow.textContent = "-5";
        rustScoreShow.style.color = "red";
        rustIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: rustFillAns.value });
      }
      rustScoreDisplay.textContent = "Score: " + rustScore + "/100";
    };

    rustSkip2.onclick = function () {
      if (rustFillAns.value === "") {
        rustIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      }
      clearInterval(rustTimerId);
      rustTime = 25;
      rustQuestionNumber.textContent = "Question:" + rustQuestionCount + "/10";
      rustQuestionCount++;
      codingrustStart();
    };
  }
}
else if (rustLevel === 3) {
  let rustRandom = Math.floor(Math.random() * codingrust3Arr.length);
  let y = codingrust3Arr[rustRandom];
  rustTimer.textContent = "30";
  rustTime = 30;

  rustTimerId = setInterval(function () {
    rustTime = rustTime - 1;
    if (rustTime == 0) {
      clearInterval(rustTimerId);
      rustQuestionNumber.textContent = "Question:" + rustQuestionCount + "/10";
      rustQuestionCount = rustQuestionCount + 1;
      rustTime = 30;
      codingrustStart();
    }
    if (rustTime <= 5) {
      rustTimer.style.color = "red";
      rustTimer.textContent = rustTime;
    } else {
      rustTimer.textContent = rustTime;
    }
  }, 1000);

  if (rustQuestionCount == 12) {
    clearInterval(rustTimerId);
    mcqrust.classList.add("d-none");
    document.getElementById("rustScoreEnd").textContent = rustScoreDisplay.textContent;
    fillBlankrust.classList.add("d-none");
    codingrustShow.classList.add("d-none");
    codingResultrust.classList.remove("d-none");

    if (rustScore < 70) {
      rustScoreBelow70.classList.remove("d-none");
      rustScore100.classList.add("d-none");
      sectionCodingrust.classList.add("back15");

      rustResult1.textContent = "Test finished!!";
      rustResult2.textContent = "😓 Oops! Not quite right.";
      rustResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      rustResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      rustIncorrectAnswersDisplay.appendChild(h2);

      for (let z of rustIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        rustIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (rustScore < 100) {
      rustScoreBelow70.classList.remove("d-none");
      rustScore100.classList.add("d-none");
      sectionCodingrust.classList.add("back15");

      rustResult1.textContent = "Test finished!!";
      rustResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      rustResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      rustResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      rustIncorrectAnswersDisplay.appendChild(h2);

      for (let z of rustIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        rustIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (rustScore === 100) {
      document.getElementById("sectionCodingrust").classList.add("back14");
      rustScore100.classList.remove("d-none");
      rustScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqrust.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingrustQues.innerHTML = formattedQuestion;
    fillBlankrust.classList.add("d-none");
    op1rust.textContent = y.op1;
    op2rust.textContent = y.op2;
    op3rust.textContent = y.op3;
    op4rust.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(rustTimerId);
      rustTime = 30;
      rustSkip.textContent = "Next";
      rustSkip.style.backgroundColor = "#23ebdd";
      rustSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        rustScore += 10;
        rustScoreShow.textContent = "+10";
        rustScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        rustScore -= 5;
        rustScoreShow.textContent = "-5";
        rustScoreShow.style.color = "red";
        rustIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      rustScoreDisplay.textContent = "Score: " + rustScore + "/100";
    }

    op1rust.onclick = () => handleOptionClick(op1rust, [op2rust, op3rust, op4rust]);
    op2rust.onclick = () => handleOptionClick(op2rust, [op1rust, op3rust, op4rust]);
    op3rust.onclick = () => handleOptionClick(op3rust, [op1rust, op2rust, op4rust]);
    op4rust.onclick = () => handleOptionClick(op4rust, [op1rust, op2rust, op3rust]);

    rustSkip.onclick = function () {
      clearInterval(rustTimerId);
      rustTime = 30;
      rustQuestionNumber.textContent = "Question:" + rustQuestionCount + "/10";
      rustQuestionCount++;
      [op1rust, op2rust, op3rust, op4rust].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      rustIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingrustStart();
    };
  }
  else {
    mcqrust.classList.add("d-none");
    fillBlankrust.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingrustQues.innerHTML = formattedQuestion;

    rustCheckFill.disabled = false;
    rustFillAns.disabled = false;
    rustFillAns.value = "";
    rustStatus1.classList.remove("d-none");
    rustStatus2.classList.add("d-none");
    rustStatus3.classList.add("d-none");
    rustScoreShow.textContent = "";

    rustCheckFill.onclick = function () {
      clearInterval(rustTimerId);
      rustCheckFill.disabled = true;
      rustSkip2.textContent = "Next";
      rustSkip2.style.backgroundColor = "#23ebdd";
      rustSkip2.style.borderColor = "#23ebdd";
      rustFillAns.disabled = true;

      if (rustFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        rustStatus1.classList.add("d-none");
        rustStatus2.classList.remove("d-none");
        rustScore += 10;
        rustScoreShow.textContent = "+10";
        rustScoreShow.style.color = "green";
      } else {
        rustStatus1.classList.add("d-none");
        rustStatus3.classList.remove("d-none");
        rustScore -= 5;
        rustScoreShow.textContent = "-5";
        rustScoreShow.style.color = "red";
        rustIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: rustFillAns.value });
      }
      rustScoreDisplay.textContent = "Score: " + rustScore + "/100";
    };

    rustSkip2.onclick = function () {
      if (rustFillAns.value === "") {
        rustIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      }
      clearInterval(rustTimerId);
      rustTime = 30;
      rustQuestionNumber.textContent = "Question:" + rustQuestionCount + "/10";
      rustQuestionCount++;
      codingrustStart();
    };
  }
}



}
function resetCodingrust() {
  document.getElementById("codingrustShow").classList.add("d-none");
  document.getElementById("codingResultrust").classList.add("d-none");
  document.getElementById("codingrustHide").classList.remove("d-none");

  document.getElementById("rustQuestionNumber").innerText = "Question: 1/10";
  document.getElementById("rustScoreDisplay").innerText = "Score: 0/100";
  document.getElementById("rustScoreShow").innerText = "";
  document.getElementById("rustTimer").innerText = "00";
  document.getElementById("codingrustQues").innerText = "";

  document.getElementById("op1rust").innerText = "option1";
  document.getElementById("op2rust").innerText = "option2";
  document.getElementById("op3rust").innerText = "option3";
  document.getElementById("op4rust").innerText = "option4";

  rustIncorrectAnswers = [];
  document.getElementById("rustIncorrectAnswersDisplay").innerHTML = "";

  rustScore100.classList.add("d-none");
  rustScoreBelow70.classList.add("d-none");

  rustResult1.textContent = "";
  rustResult2.textContent = "";
  rustResult3.src = "";
  rustResult4.textContent = "";

  sectionCodingrust.classList.remove("back14");
  sectionCodingrust.classList.remove("back15");

  document.getElementById("rustFillAns").value = "";
  document.getElementById("fillBlankrust").style.display = "none";
  document.getElementById("mcqrust").style.display = "block";

  document.getElementById("rustStatus1").classList.remove("d-none");
  document.getElementById("rustStatus2").classList.add("d-none");
  document.getElementById("rustStatus3").classList.add("d-none");

  if (typeof rustTimerId !== "undefined") {
    clearInterval(rustTimerId);
  }
  rustTime = 20;
  rustQuestionCount = 2;
  rustScore = 0;
}

function rustResetLevel() {
  rustButton1.disabled = false;
  rustButton2.disabled = false;
  rustButton3.disabled = false;
  rustButton.classList.add("d-none");
  rustIncorrectAnswers = [];
}


  // go


  let goButton = document.getElementById("goButton");
let goButton1 = document.getElementById("goButton1");
let goButton2 = document.getElementById("goButton2");
let goButton3 = document.getElementById("goButton3");
let goLevel = 0;
let goCodingTest = document.getElementById("goCodingTest");
let goTimer = document.getElementById("goTimer");

goButton1.onclick = function () {
  goButton2.disabled = true;
  goButton3.disabled = true;
  goLevel = 1;

  goButton.classList.remove("d-none");
  goButton.classList.add("d-block");
};

goButton2.onclick = function () {
  goButton1.disabled = true;
  goButton3.disabled = true;
  goLevel = 2;

  goButton.classList.remove("d-none");
  goButton.classList.add("d-block");
};

goButton3.onclick = function () {
  goButton2.disabled = true;
  goButton1.disabled = true;
  goLevel = 3;

  goButton.classList.remove("d-none");
  goButton.classList.add("d-block");
};

let goTime = 0;

let codinggoShow = document.getElementById("codinggoShow");
let codinggoHide = document.getElementById("codinggoHide");
let codinggoBack = document.getElementById("codinggoBack");

codinggoBack.onclick = function () {
  codinggoShow.classList.add("d-none");
  codinggoHide.classList.remove("d-none");
};

let codinggo1Arr=[
   {
    "ques": "What is the output?<br><br>```go<br>fmt.Println(5 * 2)<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "10",
    "op3": "2",
    "op4": "0",
    "ans": "10"
  },
  {
    "ques": "What is printed?<br><br>```go<br>fmt.Println(\"Hello \" + \"World\")<br>```",
    "quesType": "mcq",
    "op1": "HelloWorld",
    "op2": "Hello World",
    "op3": "Hello",
    "op4": "World",
    "ans": "Hello World"
  },
  {
    "ques": "Which keyword declares a variable?<br><br>```go<br>var x int = 10<br>```",
    "quesType": "mcq",
    "op1": "var",
    "op2": "func",
    "op3": "let",
    "op4": "def",
    "ans": "var"
  },
  {
    "ques": "What is the output?<br><br>```go<br>arr := [3]int{1, 2, 3}<br>fmt.Println(len(arr))<br>```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "1",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "What is true?<br><br>```go<br>var x *int = nil<br>fmt.Println(x == nil)<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "What is the output?<br><br>```go<br>fmt.Println(5 == 5)<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Result?<br><br>```go<br>fmt.Println(5 == 5.0)<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Error",
    "op4": "nil",
    "ans": "true"
  },
  {
    "ques": "What will be printed?<br><br>```go<br>fmt.Println(strings.ToUpper(\"go\"))<br>```",
    "quesType": "mcq",
    "op1": "go",
    "op2": "Go",
    "op3": "GO",
    "op4": "Error",
    "ans": "GO"
  },
  {
    "ques": "Output?<br><br>```go<br>fmt.Println(len(\"Hello\"))<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "4",
    "op3": "6",
    "op4": "0",
    "ans": "5"
  },
  {
    "ques": "What is printed?<br><br>```go<br>arr := []int{1, 2, 3}<br>fmt.Println(arr[1])<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "2"
  },
  {
    "ques": "Which is valid?<br><br>```go<br>fmt.Println(\"abc\" == \"abc\")<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Error",
    "op4": "nil",
    "ans": "true"
  },
  {
    "ques": "Output?<br><br>```go<br>fmt.Println(strings.Contains(\"test\", \"es\"))<br>```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "What is printed?<br><br>```go<br>arr := []int{1, 2, 3}<br>fmt.Println(arr[0])<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "1"
  },
  {
    "ques": "What is shown?<br><br>```go<br>arr := []int{1, 2, 3}<br>fmt.Println(arr[len(arr)-1])<br>```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "3"
  },
  {
    "ques": "Result?<br><br>```go<br>fmt.Println(\"abc\" + \"def\")<br>```",
    "quesType": "mcq",
    "op1": "abcdef",
    "op2": "abc def",
    "op3": "abc",
    "op4": "def",
    "ans": "abcdef"
  },
  {
    "ques": "Output?<br><br>```go<br>for i := 0; i < 2; i++ { fmt.Print(\"Hi\") }<br>```",
    "quesType": "mcq",
    "op1": "Hi",
    "op2": "HiHi",
    "op3": "Error",
    "op4": "2Hi",
    "ans": "HiHi"
  },
  {
    "ques": "Prints?<br><br>```go<br>fmt.Println(math.Pow(2, 3))<br>```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "8",
    "op3": "9",
    "op4": "2",
    "ans": "8"
  },
  {
    "ques": "What is output?<br><br>```go<br>fmt.Println(10 / 2)<br>```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "2",
    "op3": "0",
    "op4": "10",
    "ans": "5"
  },
  {
    "ques": "What is printed?<br><br>```go<br>fmt.Println(strings.Replace(\"go\", \"g\", \"G\", 1))<br>```",
    "quesType": "mcq",
    "op1": "go",
    "op2": "Go",
    "op3": "GO",
    "op4": "error",
    "ans": "Go"
  },
  {
    "ques": "How to define a function?<br><br>```go<br>func add(x int, y int) int { return x + y }<br>```",
    "quesType": "mcq",
    "op1": "func",
    "op2": "def",
    "op3": "fn",
    "op4": "function",
    "ans": "func"
  },
  {
    "ques": "```go\nfmt.Println(strings.ToLower(\"Go\"))\n```",
    "quesType": "fill",
    "ans": "go"
  },
  {
    "ques": "```go\nfmt.Println(1 + 2 + 3)\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```go\nfmt.Println(len(\"Hello\"))\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```go\nfmt.Println(\"Go\" + \"Lang\")\n```",
    "quesType": "fill",
    "ans": "GoLang"
  },
  {
    "ques": "```go\nfmt.Println(4 * 5)\n```",
    "quesType": "fill",
    "ans": "20"
  },
  {
    "ques": "```go\nfmt.Println(20 / 4)\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```go\nfmt.Println(strings.HasPrefix(\"golang\", \"go\"))\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(strings.HasSuffix(\"golang\", \"lang\"))\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(strings.Contains(\"hello\", \"ll\"))\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(math.Sqrt(16))\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```go\nfmt.Println(math.Pow(3, 2))\n```",
    "quesType": "fill",
    "ans": "9"
  },
  {
    "ques": "```go\nfmt.Println(7 % 3)\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```go\nfmt.Println(2 << 2)\n```",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "```go\nfmt.Println(strings.Repeat(\"Go\", 2))\n```",
    "quesType": "fill",
    "ans": "GoGo"
  },
  {
    "ques": "```go\nfmt.Println(5 > 3)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(5 < 3)\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```go\nfmt.Println(5 == 5)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(5 != 5)\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```go\nfmt.Println(\"Hello, \" + \"World!\")\n```",
    "quesType": "fill",
    "ans": "Hello, World!"
  },
  {
    "ques": "```go\nfmt.Println(strings.TrimSpace(\"  Go  \"))\n```",
    "quesType": "fill",
    "ans": "Go"
  },
   {
    "ques": "What is output?<br><br>```go\nfmt.Println(2 + 3 * 2)\n```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "7",
    "op3": "8",
    "op4": "12",
    "ans": "8"
  },
  {
    "ques": "Which is the correct package name for formatting output?<br><br>",
    "quesType": "mcq",
    "op1": "math",
    "op2": "io",
    "op3": "fmt",
    "op4": "strings",
    "ans": "fmt"
  },
  {
    "ques": "Which type for decimal numbers?<br><br>",
    "quesType": "mcq",
    "op1": "int",
    "op2": "string",
    "op3": "float64",
    "op4": "bool",
    "ans": "float64"
  },
  {
    "ques": "Which will print true?<br><br>```go\nfmt.Println(5 >= 5)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "5",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "What is the output?<br><br>```go\nfmt.Println(len([]int{1,2,3,4}))\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "4",
    "op3": "5",
    "op4": "0",
    "ans": "4"
  },
  {
    "ques": "Which is used for loops?<br><br>",
    "quesType": "mcq",
    "op1": "loop",
    "op2": "while",
    "op3": "for",
    "op4": "repeat",
    "ans": "for"
  },
  {
    "ques": "Which is Go’s entry point?<br><br>",
    "quesType": "mcq",
    "op1": "main()",
    "op2": "start()",
    "op3": "run()",
    "op4": "init()",
    "ans": "main()"
  },
  {
    "ques": "Which is a comment?<br><br>```go\n// Hello\n```",
    "quesType": "mcq",
    "op1": "Inline comment",
    "op2": "Block comment",
    "op3": "Doc comment",
    "op4": "None",
    "ans": "Inline comment"
  },
  {
    "ques": "What is printed?<br><br>```go\nfmt.Println(true && false)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Error",
    "op4": "nil",
    "ans": "false"
  },
  {
    "ques": "Which is true?<br><br>```go\nfmt.Println(true || false)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Error",
    "op4": "nil",
    "ans": "true"
  },
  {
    "ques": "What is output?<br><br>```go\nfmt.Println(5 % 2)\n```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "2",
    "op4": "5",
    "ans": "1"
  },
  {
    "ques": "Which is valid slice?<br><br>",
    "quesType": "mcq",
    "op1": "[]int{1,2,3}",
    "op2": "[3]int{1,2,3}",
    "op3": "list{1,2,3}",
    "op4": "array{1,2,3}",
    "ans": "[]int{1,2,3}"
  },
  {
    "ques": "Which keyword for conditionals?<br><br>",
    "quesType": "mcq",
    "op1": "switch",
    "op2": "case",
    "op3": "when",
    "op4": "select",
    "ans": "switch"
  },
  {
    "ques": "Which prints variable type?<br><br>```go\nfmt.Printf(\"%T\", 5)\n```",
    "quesType": "mcq",
    "op1": "%T",
    "op2": "%d",
    "op3": "%v",
    "op4": "%s",
    "ans": "%T"
  },
  {
    "ques": "How to skip iteration?<br><br>",
    "quesType": "mcq",
    "op1": "break",
    "op2": "stop",
    "op3": "skip",
    "op4": "continue",
    "ans": "continue"
  },
  {
    "ques": "Which keyword stops loop?<br><br>",
    "quesType": "mcq",
    "op1": "stop",
    "op2": "exit",
    "op3": "break",
    "op4": "end",
    "ans": "break"
  },
  {
    "ques": "Which is a package import?<br><br>",
    "quesType": "mcq",
    "op1": "load fmt",
    "op2": "use fmt",
    "op3": "import fmt",
    "op4": "include fmt",
    "ans": "import fmt"
  },
  {
    "ques": "What is output?<br><br>```go\nfmt.Println(\"Go\" == \"go\")\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Error",
    "op4": "nil",
    "ans": "false"
  },
  {
    "ques": "How to format output?<br><br>",
    "quesType": "mcq",
    "op1": "fmt.Printf",
    "op2": "fmt.Println",
    "op3": "fmt.Scan",
    "op4": "fmt.Input",
    "ans": "fmt.Printf"
  },
  {
    "ques": "What is output?<br><br>```go\nfmt.Println(!true)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Error",
    "op4": "nil",
    "ans": "false"
  },
  {
    "ques": "```go\nfmt.Println(5 + 5)\n```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "```go\nfmt.Println(9 / 3)\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```go\nfmt.Println(2 * 5)\n```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "```go\nfmt.Println(10 - 4)\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```go\nfmt.Println(len(\"Golang\"))\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```go\nfmt.Println(strings.HasPrefix(\"Hello\", \"H\"))\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(strings.HasSuffix(\"Hello\", \"o\"))\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(strings.Contains(\"Hello\", \"ll\"))\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(strings.ToUpper(\"golang\"))\n```",
    "quesType": "fill",
    "ans": "GOLANG"
  },
  {
    "ques": "```go\nfmt.Println(strings.ToLower(\"GOLANG\"))\n```",
    "quesType": "fill",
    "ans": "golang"
  },
  {
    "ques": "```go\nfmt.Println(8 % 3)\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```go\nfmt.Println(2 << 3)\n```",
    "quesType": "fill",
    "ans": "16"
  },
  {
    "ques": "```go\nfmt.Println(math.Sqrt(25))\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```go\nfmt.Println(math.Pow(2, 4))\n```",
    "quesType": "fill",
    "ans": "16"
  },
  {
    "ques": "```go\nfmt.Println(10 >= 5)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(3 != 3)\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```go\nfmt.Println(strings.Trim(\"  Hello  \", \" \"))\n```",
    "quesType": "fill",
    "ans": "Hello"
  },
  {
    "ques": "```go\nfmt.Println(\"Go\" + \"lang\")\n```",
    "quesType": "fill",
    "ans": "Golang"
  },
  {
    "ques": "```go\nfmt.Println(strings.Repeat(\"Hi\", 3))\n```",
    "quesType": "fill",
    "ans": "HiHiHi"
  },
  {
    "ques": "```go\nfmt.Println(true && true)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "What is the output of:<br><br>```go\nfmt.Println(7 + 2)\n```",
    "quesType": "mcq",
    "op1": "9",
    "op2": "8",
    "op3": "7",
    "op4": "10",
    "ans": "9"
  },
  {
    "ques": "What is the output?<br><br>```go\nfmt.Println(5 * 5)\n```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "15",
    "op3": "20",
    "op4": "25",
    "ans": "25"
  },
  {
    "ques": "Which keyword is used to define a package in Go?",
    "quesType": "mcq",
    "op1": "package",
    "op2": "import",
    "op3": "func",
    "op4": "main",
    "ans": "package"
  },
  {
    "ques": "What does this print?<br><br>```go\nfmt.Println(\"Go\" + \"lang\")\n```",
    "quesType": "mcq",
    "op1": "Go lang",
    "op2": "Golang",
    "op3": "Go+lang",
    "op4": "Error",
    "ans": "Golang"
  },
  {
    "ques": "What is the default value of an int in Go?",
    "quesType": "mcq",
    "op1": "0",
    "op2": "nil",
    "op3": "1",
    "op4": "undefined",
    "ans": "0"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(len(\"Hi\"))\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "2"
  },
  {
    "ques": "Which is the entry point of a Go program?",
    "quesType": "mcq",
    "op1": "start()",
    "op2": "begin()",
    "op3": "main()",
    "op4": "init()",
    "ans": "main()"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(10 % 3)\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "1"
  },
  {
    "ques": "Which symbol is used for comments in Go?",
    "quesType": "mcq",
    "op1": "#",
    "op2": "//",
    "op3": "--",
    "op4": "/* */",
    "ans": "//"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(true && false)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "0",
    "op4": "1",
    "ans": "false"
  },
  {
    "ques": "Which is a valid variable name?",
    "quesType": "mcq",
    "op1": "1num",
    "op2": "var",
    "op3": "_num",
    "op4": "$num",
    "ans": "_num"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(5 == 5)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "5",
    "op4": "0",
    "ans": "true"
  },
  {
    "ques": "What keyword imports packages?",
    "quesType": "mcq",
    "op1": "use",
    "op2": "import",
    "op3": "include",
    "op4": "package",
    "ans": "import"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(9 / 2)\n```",
    "quesType": "mcq",
    "op1": "4.5",
    "op2": "4",
    "op3": "5",
    "op4": "Error",
    "ans": "4"
  },
  {
    "ques": "Which keyword declares a variable?",
    "quesType": "mcq",
    "op1": "var",
    "op2": "let",
    "op3": "val",
    "op4": "define",
    "ans": "var"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(\"Go\"[0])\n```",
    "quesType": "mcq",
    "op1": "G",
    "op2": "71",
    "op3": "go",
    "op4": "Error",
    "ans": "71"
  },
  {
    "ques": "Which format prints values?",
    "quesType": "mcq",
    "op1": "fmt.Print",
    "op2": "fmt.Println",
    "op3": "fmt.Output",
    "op4": "fmt.Display",
    "ans": "fmt.Println"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(\"Go\" == \"Go\")\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Go",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Which keyword makes a function?",
    "quesType": "mcq",
    "op1": "func",
    "op2": "def",
    "op3": "function",
    "op4": "method",
    "ans": "func"
  },
  {
    "ques": "Which format gives length of a slice?",
    "quesType": "mcq",
    "op1": "cap()",
    "op2": "len()",
    "op3": "size()",
    "op4": "length()",
    "ans": "len()"
  },
  {
    "ques": "What is the output?<br><br>```go\nfmt.Println(12 + 8)\n```",
    "quesType": "mcq",
    "op1": "18",
    "op2": "20",
    "op3": "21",
    "op4": "25",
    "ans": "20"
  },
  {
    "ques": "What is the output?<br><br>```go\nfmt.Println(15 - 7)\n```",
    "quesType": "mcq",
    "op1": "8",
    "op2": "7",
    "op3": "6",
    "op4": "9",
    "ans": "8"
  },
  {
    "ques": "Which is correct to declare an int variable?",
    "quesType": "mcq",
    "op1": "int x = 5",
    "op2": "var x int = 5",
    "op3": "x := int 5",
    "op4": "int := 5",
    "ans": "var x int = 5"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(5 * 4)\n```",
    "quesType": "mcq",
    "op1": "9",
    "op2": "10",
    "op3": "20",
    "op4": "25",
    "ans": "20"
  },
  {
    "ques": "Which statement is correct?",
    "quesType": "mcq",
    "op1": "Go supports classes",
    "op2": "Go uses packages",
    "op3": "Go has while loops",
    "op4": "Go uses semicolons at end",
    "ans": "Go uses packages"
  },
  {
    "ques": "What is printed?<br><br>```go\nfmt.Println(\"Golang\"[1])\n```",
    "quesType": "mcq",
    "op1": "71",
    "op2": "111",
    "op3": "97",
    "op4": "108",
    "ans": "111"
  },
  {
    "ques": "Which is a valid constant?",
    "quesType": "mcq",
    "op1": "const num = 10",
    "op2": "define num = 10",
    "op3": "let num = 10",
    "op4": "static num = 10",
    "ans": "const num = 10"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(2 << 2)\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "4",
    "op3": "6",
    "op4": "8",
    "ans": "8"
  },
  {
    "ques": "What does `:=` do?",
    "quesType": "mcq",
    "op1": "Comparison",
    "op2": "Addition",
    "op3": "Short variable declaration",
    "op4": "Constant declaration",
    "ans": "Short variable declaration"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(10 / 4)\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "2.5",
    "op3": "3",
    "op4": "2.0",
    "ans": "2"
  },
  {
    "ques": "Which keyword exits a loop?",
    "quesType": "mcq",
    "op1": "stop",
    "op2": "exit",
    "op3": "break",
    "op4": "return",
    "ans": "break"
  },
  {
    "ques": "Which format converts int to string?",
    "quesType": "mcq",
    "op1": "strconv.Itoa()",
    "op2": "fmt.ToString()",
    "op3": "intToString()",
    "op4": "string()",
    "ans": "strconv.Itoa()"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(len([]int{1,2,3,4}))\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "4",
    "op3": "5",
    "op4": "0",
    "ans": "4"
  },
  {
    "ques": "Which loop exists in Go?",
    "quesType": "mcq",
    "op1": "while",
    "op2": "for",
    "op3": "foreach",
    "op4": "loop",
    "ans": "for"
  },
  {
    "ques": "What is the zero value for string?",
    "quesType": "mcq",
    "op1": "0",
    "op2": "nil",
    "op3": "\"\"",
    "op4": "None",
    "ans": "\"\""
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(3.0 / 2.0)\n```",
    "quesType": "mcq",
    "op1": "1.0",
    "op2": "1.5",
    "op3": "2.0",
    "op4": "1",
    "ans": "1.5"
  },
  {
    "ques": "Which is true about Go arrays?",
    "quesType": "mcq",
    "op1": "Resizable",
    "op2": "Fixed length",
    "op3": "Always empty",
    "op4": "Stored in stack only",
    "ans": "Fixed length"
  },
  {
    "ques": "Which function prints to standard output?",
    "quesType": "mcq",
    "op1": "fmt.Inputln",
    "op2": "fmt.Println",
    "op3": "fmt.Outputln",
    "op4": "os.Print",
    "ans": "fmt.Println"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(1 << 3)\n```",
    "quesType": "mcq",
    "op1": "8",
    "op2": "3",
    "op3": "1",
    "op4": "0",
    "ans": "8"
  },
  {
    "ques": "Which keyword is used for error handling?",
    "quesType": "mcq",
    "op1": "try",
    "op2": "except",
    "op3": "catch",
    "op4": "panic",
    "ans": "panic"
  },
  {
    "ques": "What does `defer` do?",
    "quesType": "mcq",
    "op1": "Runs code later",
    "op2": "Runs code immediately",
    "op3": "Stops execution",
    "op4": "Repeats code",
    "ans": "Runs code later"
  },
  {
    "ques": "Which data type is dynamic?",
    "quesType": "mcq",
    "op1": "Array",
    "op2": "Slice",
    "op3": "String",
    "op4": "Int",
    "ans": "Slice"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(true || false)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "0",
    "op4": "1",
    "ans": "true"
  },
  {
    "ques": "Which package is used for strings?",
    "quesType": "mcq",
    "op1": "text",
    "op2": "format",
    "op3": "strings",
    "op4": "str",
    "ans": "strings"
  },
  {
    "ques": "Which is a valid import?",
    "quesType": "mcq",
    "op1": "import string",
    "op2": "import \"fmt\"",
    "op3": "use fmt",
    "op4": "package fmt",
    "ans": "import \"fmt\""
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(10 >= 10)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "1",
    "op4": "0",
    "ans": "true"
  },
  {
    "ques": "Which is a valid identifier?",
    "quesType": "mcq",
    "op1": "1stNum",
    "op2": "num_1",
    "op3": "num-1",
    "op4": "num 1",
    "ans": "num_1"
  },
  {
    "ques": "Which operator is bitwise AND?",
    "quesType": "mcq",
    "op1": "&",
    "op2": "&&",
    "op3": "|",
    "op4": "^",
    "ans": "&"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(5 & 3)\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "1"
  },
  {
    "ques": "```go\nfmt.Println(6 * 7)\n```",
    "quesType": "fill",
    "ans": "42"
  },
  {
    "ques": "```go\nfmt.Println(15 % 4)\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```go\nfmt.Println(14 / 2)\n```",
    "quesType": "fill",
    "ans": "7"
  },
  {
    "ques": "```go\nfmt.Println(5 << 1)\n```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "```go\nfmt.Println(8 >> 2)\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```go\nfmt.Println(true && true)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(true && false)\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```go\nfmt.Println(\"Go\" + \"1\")\n```",
    "quesType": "fill",
    "ans": "Go1"
  },
  {
    "ques": "```go\nfmt.Println(\"abc\" == \"abc\")\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(len(\"GoLang\"))\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```go\nfmt.Println(2*2 + 2)\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```go\nfmt.Println(10-10)\n```",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "```go\nfmt.Println(3 == 3)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(4 >= 5)\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```go\nfmt.Println(5 <= 5)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(5 != 5)\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```go\nfmt.Println(\"A\" + \"B\")\n```",
    "quesType": "fill",
    "ans": "AB"
  },
  {
    "ques": "```go\nfmt.Println(1 + 1 + 1)\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```go\nfmt.Println(9 / 3)\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```go\nfmt.Println(5 % 2)\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```go\nfmt.Println(2 << 3)\n```",
    "quesType": "fill",
    "ans": "16"
  },
  {
    "ques": "```go\nfmt.Println(16 >> 2)\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```go\nfmt.Println(7 & 2)\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```go\nfmt.Println(7 | 2)\n```",
    "quesType": "fill",
    "ans": "7"
  },
  {
    "ques": "```go\nfmt.Println(5 ^ 2)\n```",
    "quesType": "fill",
    "ans": "7"
  },
  {
    "ques": "```go\nfmt.Println(\"go\" == \"GO\")\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```go\nfmt.Println(\"abc\" != \"def\")\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(\"Hi\")\n```",
    "quesType": "fill",
    "ans": "Hi"
  },
  {
    "ques": "```go\nfmt.Println(len([]int{5, 6, 7}))\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```go\nfmt.Println(2 * 5)\n```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "What is the output?<br><br>```go\nfmt.Println(7 + 3)\n```",
    "quesType": "mcq",
    "op1": "9",
    "op2": "10",
    "op3": "11",
    "op4": "8",
    "ans": "10"
  },
  {
    "ques": "Which symbol is used for comments in Go?",
    "quesType": "mcq",
    "op1": "//",
    "op2": "#",
    "op3": "/* */",
    "op4": "--",
    "ans": "//"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(\"Go\" + \"Lang\")\n```",
    "quesType": "mcq",
    "op1": "Go Lang",
    "op2": "GoLang",
    "op3": "Golang",
    "op4": "GO LANG",
    "ans": "GoLang"
  },
  {
    "ques": "Which keyword is used for loops?",
    "quesType": "mcq",
    "op1": "while",
    "op2": "loop",
    "op3": "for",
    "op4": "repeat",
    "ans": "for"
  },
  {
    "ques": "Which is the entry point of a Go program?",
    "quesType": "mcq",
    "op1": "start()",
    "op2": "main()",
    "op3": "run()",
    "op4": "init()",
    "ans": "main()"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(5 != 5)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "0",
    "op4": "1",
    "ans": "false"
  },
  {
    "ques": "Which type is used for decimals?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "string",
    "op3": "float32",
    "op4": "bool",
    "ans": "float32"
  },
  {
    "ques": "Which is used for formatted output?",
    "quesType": "mcq",
    "op1": "fmt.Print",
    "op2": "fmt.Println",
    "op3": "fmt.Printf",
    "op4": "fmt.Out",
    "ans": "fmt.Printf"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(2 * 2 * 2)\n```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "8",
    "op3": "4",
    "op4": "2",
    "ans": "8"
  },
  {
    "ques": "Which is a correct slice declaration?",
    "quesType": "mcq",
    "op1": "slice := [3]int{1,2,3}",
    "op2": "slice := []int{1,2,3}",
    "op3": "slice := {1,2,3}",
    "op4": "slice := int[]{1,2,3}",
    "ans": "slice := []int{1,2,3}"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(10 % 3)\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "1"
  },
  {
    "ques": "Which keyword is used to define a struct?",
    "quesType": "mcq",
    "op1": "struct",
    "op2": "type",
    "op3": "class",
    "op4": "object",
    "ans": "type"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(\"hello\" == \"Hello\")\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "0",
    "op4": "1",
    "ans": "false"
  },
  {
    "ques": "Which is used to import packages?",
    "quesType": "mcq",
    "op1": "package",
    "op2": "import",
    "op3": "include",
    "op4": "use",
    "ans": "import"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(9 >> 1)\n```",
    "quesType": "mcq",
    "op1": "4",
    "op2": "8",
    "op3": "5",
    "op4": "6",
    "ans": "4"
  },
  {
    "ques": "Which shows type inference?",
    "quesType": "mcq",
    "op1": "var x int = 10",
    "op2": "x := 10",
    "op3": "x = int(10)",
    "op4": "let x = 10",
    "ans": "x := 10"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(\"abc\" + \"def\")\n```",
    "quesType": "mcq",
    "op1": "abcdef",
    "op2": "abc def",
    "op3": "abc",
    "op4": "def",
    "ans": "abcdef"
  },
  {
    "ques": "Which is used to declare a constant?",
    "quesType": "mcq",
    "op1": "var",
    "op2": "let",
    "op3": "const",
    "op4": "define",
    "ans": "const"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(\"Go\" == \"go\")\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "0",
    "op4": "1",
    "ans": "false"
  },
  {
    "ques": "Which is the correct `main` package?",
    "quesType": "mcq",
    "op1": "package go",
    "op2": "package start",
    "op3": "package main",
    "op4": "package core",
    "ans": "package main"
  },
  {
    "ques": "Which function ends the program?",
    "quesType": "mcq",
    "op1": "panic",
    "op2": "break",
    "op3": "stop",
    "op4": "quit",
    "ans": "panic"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(4 & 1)\n```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "2",
    "op4": "4",
    "ans": "0"
  },
  {
    "ques": "Which function can recover from panic?",
    "quesType": "mcq",
    "op1": "handle()",
    "op2": "recover()",
    "op3": "catch()",
    "op4": "try()",
    "ans": "recover()"
  },
  {
    "ques": "Which symbol is used for OR?",
    "quesType": "mcq",
    "op1": "||",
    "op2": "&&",
    "op3": "|",
    "op4": "^",
    "ans": "||"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(5 | 2)\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "7",
    "op3": "2",
    "op4": "3",
    "ans": "7"
  },
  {
    "ques": "What is the zero value for bool?",
    "quesType": "mcq",
    "op1": "0",
    "op2": "true",
    "op3": "false",
    "op4": "nil",
    "ans": "false"
  },
  {
    "ques": "Which package is used for math?",
    "quesType": "mcq",
    "op1": "calculate",
    "op2": "math",
    "op3": "numbers",
    "op4": "cal",
    "ans": "math"
  },
  {
    "ques": "Output?<br><br>```go\nfmt.Println(7 >= 7)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "0",
    "op4": "1",
    "ans": "true"
  },
  {
    "ques": "Which statement declares a bool?",
    "quesType": "mcq",
    "op1": "var b bool",
    "op2": "var b boolean",
    "op3": "bool b",
    "op4": "let b bool",
    "ans": "var b bool"
  },
  {
    "ques": "Which is correct for function declaration?",
    "quesType": "mcq",
    "op1": "func myFunc() {}",
    "op2": "function myFunc() {}",
    "op3": "def myFunc() {}",
    "op4": "fn myFunc() {}",
    "ans": "func myFunc() {}"
  },
  {
    "ques": "```go\nfmt.Println(\"Hello\" + \" World\")\n```",
    "quesType": "fill",
    "ans": "Hello World"
  },
  {
    "ques": "```go\nfmt.Println(10 - 4)\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```go\nfmt.Println(3 * 3)\n```",
    "quesType": "fill",
    "ans": "9"
  },
  {
    "ques": "```go\nfmt.Println(15 / 5)\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```go\nfmt.Println(8 % 3)\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```go\nvar x int = 100\nfmt.Println(x)\n```",
    "quesType": "fill",
    "ans": "100"
  },
  {
    "ques": "```go\nfmt.Println(true && false)\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```go\nfmt.Println(true || false)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(!true)\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```go\nfmt.Println(2 << 1)\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```go\nfmt.Println(4 >> 1)\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```go\nfmt.Println(\"Go\" == \"go\")\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```go\nfmt.Println(len(\"GoLang\"))\n```",
    "quesType": "fill",
    "ans": "6"
  },
  {
    "ques": "```go\nfmt.Println(\"abc\" + \"123\")\n```",
    "quesType": "fill",
    "ans": "abc123"
  },
  {
    "ques": "```go\nfmt.Println(5 > 2)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(5 < 2)\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```go\nvar y = \"Go\"\nfmt.Println(y)\n```",
    "quesType": "fill",
    "ans": "Go"
  },
  {
    "ques": "```go\nfmt.Println(\"GoLang\"[0])\n```",
    "quesType": "fill",
    "ans": "71"
  },
  {
    "ques": "```go\nfmt.Println(3 + 5*2)\n```",
    "quesType": "fill",
    "ans": "13"
  },
  {
    "ques": "```go\nfmt.Println(9 / 2)\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```go\nvar z = 42\nfmt.Println(z)\n```",
    "quesType": "fill",
    "ans": "42"
  },
  {
    "ques": "```go\nfmt.Println(\"test\" == \"test\")\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(0 == false)\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```go\nfmt.Println(1 == true)\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```go\nfmt.Println(2 & 1)\n```",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "```go\nfmt.Println(3 | 1)\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```go\nfmt.Println(\"abc\" != \"def\")\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(5 <= 5)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(7 >= 8)\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```go\nfmt.Println(\"Go\" + \" \" + \"Lang\")\n```",
    "quesType": "fill",
    "ans": "Go Lang"
  },
  {
    "ques": "Which of these is a correct way to import the fmt package?",
    "quesType": "mcq",
    "op1": "import fmt",
    "op2": "using fmt",
    "op3": "package fmt",
    "op4": "import \"fmt\"",
    "ans": "import \"fmt\""
  },
  {
    "ques": "What is the default value of an uninitialized int variable?",
    "quesType": "mcq",
    "op1": "nil",
    "op2": "0",
    "op3": "undefined",
    "op4": "null",
    "ans": "0"
  },
  {
    "ques": "Which keyword declares a constant?",
    "quesType": "mcq",
    "op1": "let",
    "op2": "var",
    "op3": "const",
    "op4": "define",
    "ans": "const"
  },
  {
    "ques": "How to write a comment?",
    "quesType": "mcq",
    "op1": "# comment",
    "op2": "// comment",
    "op3": "-- comment",
    "op4": "% comment",
    "ans": "// comment"
  },
  {
    "ques": "Which type is for true/false values?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "bool",
    "op3": "string",
    "op4": "float",
    "ans": "bool"
  },
  {
    "ques": "What does `:=` do?",
    "quesType": "mcq",
    "op1": "Declare and assign",
    "op2": "Only declare",
    "op3": "Only assign",
    "op4": "Compare",
    "ans": "Declare and assign"
  },
  {
    "ques": "Which is true about functions in Go?",
    "quesType": "mcq",
    "op1": "Cannot return values",
    "op2": "Can return multiple values",
    "op3": "Only main() exists",
    "op4": "Must return int",
    "ans": "Can return multiple values"
  },
  {
    "ques": "What is printed?\n\n```go\nfmt.Println(5 > 2)\n```",
    "quesType": "mcq",
    "op1": "false",
    "op2": "true",
    "op3": "5",
    "op4": "2",
    "ans": "true"
  },
  {
    "ques": "What is the zero value of a string?",
    "quesType": "mcq",
    "op1": "0",
    "op2": "nil",
    "op3": "\"\"",
    "op4": "None",
    "ans": "\"\""
  },
  {
    "ques": "Which package is used for formatted I/O?",
    "quesType": "mcq",
    "op1": "io",
    "op2": "fmt",
    "op3": "scan",
    "op4": "input",
    "ans": "fmt"
  },
  {
    "ques": "Which operator checks equality?",
    "quesType": "mcq",
    "op1": "=",
    "op2": "==",
    "op3": "===",
    "op4": "!=",
    "ans": "=="
  },
  {
    "ques": "Which symbol denotes a package?",
    "quesType": "mcq",
    "op1": "package",
    "op2": "module",
    "op3": "import",
    "op4": "use",
    "ans": "package"
  },
  {
    "ques": "Which data type is immutable?",
    "quesType": "mcq",
    "op1": "string",
    "op2": "slice",
    "op3": "array",
    "op4": "map",
    "ans": "string"
  },
  {
    "ques": "What is the output?\n\n```go\nfmt.Println(len(\"Go\"))\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "2"
  },
  {
    "ques": "Which symbol is used for a block comment?",
    "quesType": "mcq",
    "op1": "/* */",
    "op2": "//",
    "op3": "#",
    "op4": "<!-- -->",
    "ans": "/* */"
  },
  {
    "ques": "Which keyword starts a loop?",
    "quesType": "mcq",
    "op1": "for",
    "op2": "loop",
    "op3": "while",
    "op4": "repeat",
    "ans": "for"
  },
  {
    "ques": "Which returns the length of a slice?",
    "quesType": "mcq",
    "op1": "size()",
    "op2": "len()",
    "op3": "length()",
    "op4": "count()",
    "ans": "len()"
  },
  {
    "ques": "Which keyword is used to exit a loop?",
    "quesType": "mcq",
    "op1": "exit",
    "op2": "stop",
    "op3": "break",
    "op4": "end",
    "ans": "break"
  },
  {
    "ques": "What does `defer` do?",
    "quesType": "mcq",
    "op1": "Stops execution",
    "op2": "Executes code later",
    "op3": "Repeats a block",
    "op4": "Runs a goroutine",
    "ans": "Executes code later"
  },
  {
    "ques": "Which type is dynamic in size?",
    "quesType": "mcq",
    "op1": "array",
    "op2": "string",
    "op3": "slice",
    "op4": "int",
    "ans": "slice"
  },
  {
    "ques": "What is true about arrays?",
    "quesType": "mcq",
    "op1": "They are dynamic",
    "op2": "They are fixed-size",
    "op3": "They cannot store ints",
    "op4": "They are maps",
    "ans": "They are fixed-size"
  },
  {
    "ques": "How do you declare a map?",
    "quesType": "mcq",
    "op1": "var m map[string]int",
    "op2": "map m",
    "op3": "dict m",
    "op4": "map[string] int m",
    "ans": "var m map[string]int"
  },
  {
    "ques": "Which loop runs at least once?",
    "quesType": "mcq",
    "op1": "for",
    "op2": "do while",
    "op3": "while",
    "op4": "None",
    "ans": "None"
  },
  {
    "ques": "What is the output?\n\n```go\nfmt.Println(4 * 2)\n```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "8",
    "op3": "2",
    "op4": "4",
    "ans": "8"
  },
  {
    "ques": "Which symbol gets the address?",
    "quesType": "mcq",
    "op1": "&",
    "op2": "*",
    "op3": "^",
    "op4": "%",
    "ans": "&"
  },
  {
    "ques": "Which symbol dereferences a pointer?",
    "quesType": "mcq",
    "op1": "&",
    "op2": "*",
    "op3": "#",
    "op4": "%",
    "ans": "*"
  },
  {
    "ques": "Which is not a Go keyword?",
    "quesType": "mcq",
    "op1": "goto",
    "op2": "var",
    "op3": "package",
    "op4": "class",
    "ans": "class"
  },
  {
    "ques": "Which keyword starts a goroutine?",
    "quesType": "mcq",
    "op1": "thread",
    "op2": "go",
    "op3": "start",
    "op4": "run",
    "ans": "go"
  },
  {
    "ques": "Which type for decimal numbers?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "bool",
    "op3": "string",
    "op4": "float64",
    "ans": "float64"
  },
  {
    "ques": "What is `main`?",
    "quesType": "mcq",
    "op1": "A variable",
    "op2": "A constant",
    "op3": "A function",
    "op4": "A package",
    "ans": "A function"
  },
  {
    "ques": "```go\nfmt.Println(\"Go\" + \"Lang\")\n```",
    "quesType": "fill",
    "ans": "GoLang"
  },
  {
    "ques": "```go\nfmt.Println(20 + 30)\n```",
    "quesType": "fill",
    "ans": "50"
  },
  {
    "ques": "```go\nfmt.Println(100 - 40)\n```",
    "quesType": "fill",
    "ans": "60"
  },
  {
    "ques": "```go\nfmt.Println(2 * 10)\n```",
    "quesType": "fill",
    "ans": "20"
  },
  {
    "ques": "```go\nfmt.Println(15 / 3)\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```go\nfmt.Println(true && true)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(false || true)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(!false)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(5 << 1)\n```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "```go\nfmt.Println(8 >> 1)\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```go\nfmt.Println(len(\"Hi\"))\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```go\nfmt.Println(\"Golang\"[2])\n```",
    "quesType": "fill",
    "ans": "108"
  },
  {
    "ques": "```go\nfmt.Println(3 == 3)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(3 != 3)\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```go\nfmt.Println(4 >= 2)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(2 <= 1)\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```go\nfmt.Println(7 % 3)\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```go\nfmt.Println(\"abc\" + \"def\")\n```",
    "quesType": "fill",
    "ans": "abcdef"
  },
  {
    "ques": "```go\nfmt.Println(\"go\" == \"Go\")\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```go\nfmt.Println(\"Go\" == \"Go\")\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(\"Gopher\"[0])\n```",
    "quesType": "fill",
    "ans": "71"
  },
  {
    "ques": "```go\nfmt.Println(1 << 2)\n```",
    "quesType": "fill",
    "ans": "4"
  },
  {
    "ques": "```go\nfmt.Println(4 >> 2)\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```go\nfmt.Println(\"test\"[1])\n```",
    "quesType": "fill",
    "ans": "101"
  },
  {
    "ques": "```go\nfmt.Println(10 + 5 * 2)\n```",
    "quesType": "fill",
    "ans": "20"
  },
  {
    "ques": "```go\nfmt.Println(5 * (2 + 2))\n```",
    "quesType": "fill",
    "ans": "20"
  },
  {
    "ques": "```go\nfmt.Println(9 / 4)\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```go\nfmt.Println(5 * 5)\n```",
    "quesType": "fill",
    "ans": "25"
  },
  {
    "ques": "```go\nfmt.Println(\"Go \" + \"lang\")\n```",
    "quesType": "fill",
    "ans": "Go lang"
  },
  {
    "ques": "```go\nfmt.Println(len(\"Golang\"))\n```",
    "quesType": "fill",
    "ans": "6"
  }
]
let codinggo2Arr=[
  {
    "ques": "What does `panic()` do in Go?",
    "quesType": "mcq",
    "op1": "Ends the program immediately",
    "op2": "Continues silently",
    "op3": "Starts a new goroutine",
    "op4": "Logs a warning only",
    "ans": "Ends the program immediately"
  },
  {
    "ques": "What is the use of `recover()`?",
    "quesType": "mcq",
    "op1": "Starts panic",
    "op2": "Handles panic and resumes execution",
    "op3": "Declares a variable",
    "op4": "Stops a loop",
    "ans": "Handles panic and resumes execution"
  },
  {
    "ques": "Which keyword skips current iteration in a loop?",
    "quesType": "mcq",
    "op1": "break",
    "op2": "stop",
    "op3": "continue",
    "op4": "exit",
    "ans": "continue"
  },
  {
    "ques": "What is true about slices?",
    "quesType": "mcq",
    "op1": "Fixed size",
    "op2": "Dynamic size",
    "op3": "Immutable",
    "op4": "Cannot be nil",
    "ans": "Dynamic size"
  },
  {
    "ques": "What is the output?\n\n```go\ns := []int{1,2,3}\nfmt.Println(len(s))\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "0",
    "op4": "nil",
    "ans": "3"
  },
  {
    "ques": "What is the output?\n\n```go\nm := map[string]int{\"a\":1, \"b\":2}\nfmt.Println(m[\"a\"])\n```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "2",
    "op4": "nil",
    "ans": "1"
  },
  {
    "ques": "Which syntax declares a pointer to an int?",
    "quesType": "mcq",
    "op1": "ptr int",
    "op2": "*int",
    "op3": "int*",
    "op4": "pointer int",
    "ans": "*int"
  },
  {
    "ques": "What does `new(int)` return?",
    "quesType": "mcq",
    "op1": "Value 0",
    "op2": "An int variable",
    "op3": "A pointer to int",
    "op4": "A slice",
    "ans": "A pointer to int"
  },
  {
    "ques": "What is printed?\n\n```go\nfmt.Println(cap([]int{1,2,3}))\n```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "3",
    "op3": "1",
    "op4": "Error",
    "ans": "3"
  },
  {
    "ques": "Which keyword is used to define an interface?",
    "quesType": "mcq",
    "op1": "type",
    "op2": "interface",
    "op3": "struct",
    "op4": "class",
    "ans": "type"
  },
  {
    "ques": "Which of these defines an empty interface?",
    "quesType": "mcq",
    "op1": "interface{}",
    "op2": "any",
    "op3": "interface()",
    "op4": "{}interface",
    "ans": "interface{}"
  },
  {
    "ques": "How do you run a goroutine?",
    "quesType": "mcq",
    "op1": "start f()",
    "op2": "go f()",
    "op3": "thread f()",
    "op4": "routine f()",
    "ans": "go f()"
  },
  {
    "ques": "What is a channel for?",
    "quesType": "mcq",
    "op1": "Loop control",
    "op2": "Memory allocation",
    "op3": "Passing data between goroutines",
    "op4": "Type assertion",
    "ans": "Passing data between goroutines"
  },
  {
    "ques": "What does `select` do?",
    "quesType": "mcq",
    "op1": "Chooses from multiple channel operations",
    "op2": "Switches a map key",
    "op3": "Chooses a slice",
    "op4": "Defines an interface",
    "ans": "Chooses from multiple channel operations"
  },
  {
    "ques": "What is the output?\n\n```go\ns := []int{1,2,3}\ns = append(s, 4)\nfmt.Println(s)\n```",
    "quesType": "mcq",
    "op1": "[1 2 3]",
    "op2": "[1 2 3 4]",
    "op3": "[4]",
    "op4": "[1 4]",
    "ans": "[1 2 3 4]"
  },
  {
    "ques": "What is true about methods in Go?",
    "quesType": "mcq",
    "op1": "They only work on structs",
    "op2": "They can't have a receiver",
    "op3": "They need a receiver",
    "op4": "They return nothing",
    "ans": "They need a receiver"
  },
  {
    "ques": "What is the output?\n\n```go\nx := 5\nfmt.Println(&x)\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "Address of x",
    "op3": "nil",
    "op4": "Error",
    "ans": "Address of x"
  },
  {
    "ques": "How to check if a key exists in a map?",
    "quesType": "mcq",
    "op1": "m.key",
    "op2": "m[\"key\"]",
    "op3": "value, ok := m[\"key\"]",
    "op4": "m.get(\"key\")",
    "ans": "value, ok := m[\"key\"]"
  },
  {
    "ques": "What is the zero value of a channel?",
    "quesType": "mcq",
    "op1": "nil",
    "op2": "0",
    "op3": "\"\"",
    "op4": "[]",
    "ans": "nil"
  },
  {
    "ques": "Which runs only once?",
    "quesType": "mcq",
    "op1": "init()",
    "op2": "main()",
    "op3": "defer()",
    "op4": "go()",
    "ans": "init()"
  },
  {
    "ques": "Which keyword combines multiple errors?",
    "quesType": "mcq",
    "op1": "group",
    "op2": "join",
    "op3": "errors",
    "op4": "fmt",
    "ans": "errors"
  },
  {
    "ques": "Which operator is used for type assertion?",
    "quesType": "mcq",
    "op1": "==",
    "op2": ":=",
    "op3": ".()",
    "op4": "::",
    "ans": ".()"
  },
  {
    "ques": "Which function formats a string?",
    "quesType": "mcq",
    "op1": "fmt.Printf",
    "op2": "fmt.Sprintf",
    "op3": "fmt.Println",
    "op4": "fmt.Scanf",
    "ans": "fmt.Sprintf"
  },
  {
    "ques": "How to handle an error?",
    "quesType": "mcq",
    "op1": "If err != nil",
    "op2": "Try..Catch",
    "op3": "panic always",
    "op4": "errors.join",
    "ans": "If err != nil"
  },
  {
    "ques": "Which can hold any type?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "string",
    "op3": "interface{}",
    "op4": "float64",
    "ans": "interface{}"
  },
  {
    "ques": "Which is NOT a concurrency primitive?",
    "quesType": "mcq",
    "op1": "channel",
    "op2": "goroutine",
    "op3": "mutex",
    "op4": "array",
    "ans": "array"
  },
  {
    "ques": "Which statement is true?",
    "quesType": "mcq",
    "op1": "Go has classes",
    "op2": "Go uses inheritance",
    "op3": "Go uses composition",
    "op4": "Go has generics only",
    "ans": "Go uses composition"
  },
  {
    "ques": "What is the output?\n\n```go\nfmt.Println(true && false)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "error",
    "ans": "false"
  },
  {
    "ques": "Which operator creates a buffered channel?",
    "quesType": "mcq",
    "op1": "make(chan int)",
    "op2": "make(chan int, 0)",
    "op3": "make(chan int, 5)",
    "op4": "new(chan int)",
    "ans": "make(chan int, 5)"
  },
  {
    "ques": "```go\nfmt.Println(5 * 2)\n```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "```go\nx := []int{1, 2, 3}\nfmt.Println(len(x))\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```go\nm := map[string]int{\"key\": 7}\nfmt.Println(m[\"key\"])\n```",
    "quesType": "fill",
    "ans": "7"
  },
  {
    "ques": "A function in Go starts with keyword _____.",
    "quesType": "fill",
    "ans": "func"
  },
  {
    "ques": "The zero value of a pointer is _____.",
    "quesType": "fill",
    "ans": "nil"
  },
  {
    "ques": "The keyword used to skip current loop iteration is _____.",
    "quesType": "fill",
    "ans": "continue"
  },
  {
    "ques": "```go\nfmt.Println(true && false)\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "```go\nfmt.Println(\"Go\" + \"lang\")\n```",
    "quesType": "fill",
    "ans": "Golang"
  },
  {
    "ques": "```go\nfmt.Println(cap([]int{1,2,3}))\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "An empty interface is written as _____.",
    "quesType": "fill",
    "ans": "interface{}"
  },
  {
    "ques": "Keyword to run a function as goroutine is _____.",
    "quesType": "fill",
    "ans": "go"
  },
  {
    "ques": "The function used to format a string is _____.",
    "quesType": "fill",
    "ans": "fmt.Sprintf"
  },
  {
    "ques": "A channel with buffer size 5: make(chan int, ____)",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```go\nfmt.Println(10 / 2)\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```go\nfmt.Println(len(\"Hello\"))\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "```go\ns := []int{1,2}\ns = append(s, 3)\nfmt.Println(len(s))\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```go\nvar x *int\nfmt.Println(x == nil)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "A method must have a _____ receiver.",
    "quesType": "fill",
    "ans": "receiver"
  },
  {
    "ques": "The built-in function that stops program immediately: _____.",
    "quesType": "fill",
    "ans": "panic"
  },
  {
    "ques": "```go\nfmt.Println(\"Go\" == \"Go\")\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "Type assertion uses syntax: value.(____)",
    "quesType": "fill",
    "ans": "Type"
  },
  {
    "ques": "```go\nfmt.Println(5 == 5.0)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "Keyword to handle panic gracefully is _____.",
    "quesType": "fill",
    "ans": "recover"
  },
  {
    "ques": "```go\nfmt.Println(\"Hi\" + \" \" + \"Go\")\n```",
    "quesType": "fill",
    "ans": "Hi Go"
  },
  {
    "ques": "To check if a map key exists: _, ____ := m[\"key\"]",
    "quesType": "fill",
    "ans": "ok"
  },
  {
    "ques": "Go supports concurrency with _____.",
    "quesType": "fill",
    "ans": "goroutines"
  },
  {
    "ques": "```go\nfmt.Println(2 << 2)\n```",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "The keyword to import packages is _____.",
    "quesType": "fill",
    "ans": "import"
  },
  {
    "ques": "A slice is a ____ size array.",
    "quesType": "fill",
    "ans": "dynamic"
  },
  {
    "ques": "```go\nfmt.Println(4 % 2 == 0)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(2 + 3 * 2)\n```",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "The keyword to exit a loop immediately is _____.",
    "quesType": "fill",
    "ans": "break"
  },
  {
    "ques": "```go\nfmt.Println(strings.ToUpper(\"golang\"))\n```",
    "quesType": "fill",
    "ans": "GOLANG"
  },
  {
    "ques": "A struct in Go is similar to a ____ in other languages.",
    "quesType": "fill",
    "ans": "class"
  },
  {
    "ques": "```go\nfmt.Println(len([]int{}))\n```",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "```go\nvar a [3]int\nfmt.Println(len(a))\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "```go\nfmt.Println(7 % 4)\n```",
    "quesType": "fill",
    "ans": "3"
  },
  {
    "ques": "A slice is created with make([]int, 5). Its length is _____.",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "The default value of int is _____.",
    "quesType": "fill",
    "ans": "0"
  },
  {
    "ques": "Keyword to define constant in Go is _____.",
    "quesType": "fill",
    "ans": "const"
  },
  {
    "ques": "```go\nfmt.Println(\"abc\"[0])\n```",
    "quesType": "fill",
    "ans": "97"
  },
  {
    "ques": "Keyword to define package name is _____.",
    "quesType": "fill",
    "ans": "package"
  },
  {
    "ques": "```go\nfmt.Println(5 << 1)\n```",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "The keyword to import fmt is _____.",
    "quesType": "fill",
    "ans": "import"
  },
  {
    "ques": "```go\nfmt.Println(5 & 3)\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "```go\nfmt.Println(5 | 2)\n```",
    "quesType": "fill",
    "ans": "7"
  },
  {
    "ques": "A Go program starts with package _____.",
    "quesType": "fill",
    "ans": "main"
  },
  {
    "ques": "```go\nfmt.Println(\"Go\"[1:]) // invalid\n```",
    "quesType": "fill",
    "ans": "compile error"
  },
  {
    "ques": "The type for true or false is _____.",
    "quesType": "fill",
    "ans": "bool"
  },
  {
    "ques": "To format a string we use _____.",
    "quesType": "fill",
    "ans": "fmt.Sprintf"
  },
  {
    "ques": "```go\nfmt.Println(10 >= 5)\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(strings.Contains(\"GoLang\", \"Lang\"))\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "To import multiple packages use _____.",
    "quesType": "fill",
    "ans": "()"
  },
  {
    "ques": "The method to remove panic effect is _____.",
    "quesType": "fill",
    "ans": "recover"
  },
  {
    "ques": "```go\nfmt.Println(strings.TrimSpace(\" Go \"))\n```",
    "quesType": "fill",
    "ans": "Go"
  },
  {
    "ques": "```go\nfmt.Println(math.Pow(2, 3))\n```",
    "quesType": "fill",
    "ans": "8"
  },
  {
    "ques": "```go\nfmt.Println(len(\" \"))\n```",
    "quesType": "fill",
    "ans": "1"
  },
  {
    "ques": "A rune is an _____.",
    "quesType": "fill",
    "ans": "int32"
  },
  {
    "ques": "Go file extension is _____.",
    "quesType": "fill",
    "ans": ".go"
  },
  {
    "ques": "The keyword for conditional logic is _____.",
    "quesType": "fill",
    "ans": "if"
  },
  {
    "ques": "What is the output?\n```go\nfmt.Println(strings.HasPrefix(\"golang\", \"go\"))\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "error",
    "op4": "0",
    "ans": "true"
  },
  {
    "ques": "Which operator is used for bitwise OR in Go?",
    "quesType": "mcq",
    "op1": "|",
    "op2": "&",
    "op3": "^",
    "op4": "~",
    "ans": "|"
  },
  {
    "ques": "What does defer do?",
    "quesType": "mcq",
    "op1": "Immediately stops program",
    "op2": "Delays execution until surrounding function returns",
    "op3": "Skips line",
    "op4": "None",
    "ans": "Delays execution until surrounding function returns"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(4 << 1)\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "4",
    "op3": "8",
    "op4": "1",
    "ans": "8"
  },
  {
    "ques": "What is the zero value of float64?",
    "quesType": "mcq",
    "op1": "0",
    "op2": "0.0",
    "op3": "null",
    "op4": "None",
    "ans": "0.0"
  },
  {
    "ques": "Which function panics in Go?",
    "quesType": "mcq",
    "op1": "panic()",
    "op2": "defer()",
    "op3": "recover()",
    "op4": "error()",
    "ans": "panic()"
  },
  {
    "ques": "What is true about slices?",
    "quesType": "mcq",
    "op1": "Fixed size",
    "op2": "Dynamic size",
    "op3": "Cannot be resized",
    "op4": "None",
    "ans": "Dynamic size"
  },
  {
    "ques": "What is printed?\n```go\nfmt.Println(len(\"go\"))\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "3",
    "op4": "0",
    "ans": "2"
  },
  {
    "ques": "Which keyword defines a block scope?",
    "quesType": "mcq",
    "op1": "begin",
    "op2": "scope",
    "op3": "{}",
    "op4": "package",
    "ans": "{}"
  },
  {
    "ques": "What does `strings.Join` do?",
    "quesType": "mcq",
    "op1": "Splits a string",
    "op2": "Joins slices of strings",
    "op3": "Converts int to string",
    "op4": "None",
    "ans": "Joins slices of strings"
  },
  {
    "ques": "Which package is used for I/O?",
    "quesType": "mcq",
    "op1": "io",
    "op2": "fmt",
    "op3": "strings",
    "op4": "time",
    "ans": "io"
  },
  {
    "ques": "Which symbol is used for comments?",
    "quesType": "mcq",
    "op1": "//",
    "op2": "/* */",
    "op3": "#",
    "op4": "--",
    "ans": "//"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(true && false)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "error",
    "op4": "1",
    "ans": "false"
  },
  {
    "ques": "Which is valid rune type?",
    "quesType": "mcq",
    "op1": "byte",
    "op2": "char",
    "op3": "rune",
    "op4": "int16",
    "ans": "rune"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(10 / 3)\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "3.33",
    "op3": "3.0",
    "op4": "error",
    "ans": "3"
  },
  {
    "ques": "Which operator is used for equality?",
    "quesType": "mcq",
    "op1": "=",
    "op2": "==",
    "op3": "===",
    "op4": "!=",
    "ans": "=="
  },
  {
    "ques": "What does `make` create?",
    "quesType": "mcq",
    "op1": "Struct",
    "op2": "Slice, map, channel",
    "op3": "Array",
    "op4": "Package",
    "ans": "Slice, map, channel"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(strings.Index(\"hello\", \"l\"))\n```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "2",
    "op4": "error",
    "ans": "2"
  },
  {
    "ques": "Which keyword is used for loops?",
    "quesType": "mcq",
    "op1": "while",
    "op2": "loop",
    "op3": "for",
    "op4": "iterate",
    "ans": "for"
  },
  {
    "ques": "Which is correct?",
    "quesType": "mcq",
    "op1": "Go supports inheritance",
    "op2": "Go uses interfaces",
    "op3": "Go has classes",
    "op4": "None",
    "ans": "Go uses interfaces"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(math.Sqrt(16))\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "4",
    "op3": "8",
    "op4": "16",
    "ans": "4"
  },
  {
    "ques": "Which is used for error handling?",
    "quesType": "mcq",
    "op1": "exception",
    "op2": "panic",
    "op3": "try",
    "op4": "throw",
    "ans": "panic"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(strings.Replace(\"foo\", \"o\", \"a\", 1))\n```",
    "quesType": "mcq",
    "op1": "fao",
    "op2": "foa",
    "op3": "faa",
    "op4": "foo",
    "ans": "fao"
  },
  {
    "ques": "Which type supports concurrency?",
    "quesType": "mcq",
    "op1": "goroutine",
    "op2": "thread",
    "op3": "process",
    "op4": "task",
    "ans": "goroutine"
  },
  {
    "ques": "Which package provides time functions?",
    "quesType": "mcq",
    "op1": "os",
    "op2": "time",
    "op3": "io",
    "op4": "math",
    "ans": "time"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(cap(make([]int, 2, 5)))\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "5",
    "op3": "0",
    "op4": "error",
    "ans": "5"
  },
  {
    "ques": "Which statement is true about Go?",
    "quesType": "mcq",
    "op1": "No garbage collector",
    "op2": "Manual memory",
    "op3": "Garbage collected",
    "op4": "Uses JVM",
    "ans": "Garbage collected"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(strings.Count(\"banana\", \"a\"))\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "4",
    "op4": "5",
    "ans": "3"
  },
  {
    "ques": "Which is correct for variable declaration?",
    "quesType": "mcq",
    "op1": "var x int = 5",
    "op2": "x := 5",
    "op3": "Both",
    "op4": "None",
    "ans": "Both"
  },
  {
    "ques": "Keyword to recover from panic is _____.",
    "quesType": "fill",
    "ans": "recover"
  },
  {
    "ques": "Default zero value for bool is _____.",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "fmt is short for _____.",
    "quesType": "fill",
    "ans": "format"
  },
  {
    "ques": "Go does not support ____ inheritance.",
    "quesType": "fill",
    "ans": "classical"
  },
  {
    "ques": "Goroutines communicate through _____.",
    "quesType": "fill",
    "ans": "channels"
  },
  {
    "ques": "Defer keyword is used for _____.",
    "quesType": "fill",
    "ans": "cleanup"
  },
  {
    "ques": "```go\nfmt.Println(strings.Repeat(\"ha\", 2))\n```",
    "quesType": "fill",
    "ans": "haha"
  },
  {
    "ques": "Function returns multiple values using _____.",
    "quesType": "fill",
    "ans": "tuple"
  },
  {
    "ques": "The blank identifier is _____.",
    "quesType": "fill",
    "ans": "_"
  },
  {
    "ques": "```go\nfmt.Println(len([]string{\"a\", \"b\"}))\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "Keyword for infinite loop is _____.",
    "quesType": "fill",
    "ans": "for"
  },
  {
    "ques": "```go\nfmt.Println(10 >> 1)\n```",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "The logical NOT operator is _____.",
    "quesType": "fill",
    "ans": "!"
  },
  {
    "ques": "To declare a pointer use _____.",
    "quesType": "fill",
    "ans": "*"
  },
  {
    "ques": "```go\nfmt.Println(math.Round(2.5))\n```",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "```go\nfmt.Println(strings.HasSuffix(\"hello.go\", \".go\"))\n```",
    "quesType": "fill",
    "ans": "true"
  },
  {
    "ques": "```go\nfmt.Println(5 != 5)\n```",
    "quesType": "fill",
    "ans": "false"
  },
  {
    "ques": "A rune literal is enclosed in _____.",
    "quesType": "fill",
    "ans": "' '"
  },
  {
    "ques": "Keyword for defining interface is _____.",
    "quesType": "fill",
    "ans": "interface"
  },
  {
    "ques": "```go\nfmt.Println(\"Go\" + \"lang\")\n```",
    "quesType": "fill",
    "ans": "Golang"
  },
  {
    "ques": "Keyword to handle errors is _____.",
    "quesType": "fill",
    "ans": "error"
  },
  {
    "ques": "```go\nfmt.Println(strings.Split(\"a,b,c\", \",\")[1])\n```",
    "quesType": "fill",
    "ans": "b"
  },
  {
    "ques": "```go\nfmt.Println(7 * 6)\n```",
    "quesType": "fill",
    "ans": "42"
  },
  {
    "ques": "The `range` keyword is used in _____.",
    "quesType": "fill",
    "ans": "loops"
  },
  {
    "ques": "Go dependency manager is _____.",
    "quesType": "fill",
    "ans": "go mod"
  },
  {
    "ques": "Default return type for main is _____.",
    "quesType": "fill",
    "ans": "none"
  },
  {
    "ques": "A method is a function with _____.",
    "quesType": "fill",
    "ans": "receiver"
  },
  {
    "ques": "The panic function stops the _____.",
    "quesType": "fill",
    "ans": "program"
  },
  {
    "ques": "To convert string to int, use _____.",
    "quesType": "fill",
    "ans": "strconv.Atoi"
  },
  {
    "ques": "The type of `nil` is _____.",
    "quesType": "fill",
    "ans": "zero value"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(len([]int{1,2,3,4}))\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "4",
    "op3": "5",
    "op4": "0",
    "ans": "4"
  },
  {
    "ques": "Which package for string conversion?",
    "quesType": "mcq",
    "op1": "strconv",
    "op2": "string",
    "op3": "fmt",
    "op4": "conv",
    "ans": "strconv"
  },
  {
    "ques": "How do you comment multiline?",
    "quesType": "mcq",
    "op1": "//",
    "op2": "#",
    "op3": "/* */",
    "op4": "--",
    "ans": "/* */"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(5 % 2)\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "1",
    "op3": "0",
    "op4": "5",
    "ans": "1"
  },
  {
    "ques": "Which operator is bitwise AND?",
    "quesType": "mcq",
    "op1": "|",
    "op2": "&",
    "op3": "^",
    "op4": "~",
    "ans": "&"
  },
  {
    "ques": "Which is not a valid type?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "float64",
    "op3": "char",
    "op4": "bool",
    "ans": "char"
  },
  {
    "ques": "Which keyword is not in Go?",
    "quesType": "mcq",
    "op1": "switch",
    "op2": "select",
    "op3": "class",
    "op4": "default",
    "ans": "class"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(1 << 2)\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "4",
    "op3": "8",
    "op4": "1",
    "ans": "4"
  },
  {
    "ques": "Which type for UTF-8 code points?",
    "quesType": "mcq",
    "op1": "byte",
    "op2": "rune",
    "op3": "char",
    "op4": "string",
    "ans": "rune"
  },
  {
    "ques": "Which package formats text?",
    "quesType": "mcq",
    "op1": "fmt",
    "op2": "math",
    "op3": "os",
    "op4": "text",
    "ans": "fmt"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(2*3 + 4)\n```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "12",
    "op3": "8",
    "op4": "14",
    "ans": "10"
  },
  {
    "ques": "What is `panic` used for?",
    "quesType": "mcq",
    "op1": "Loop",
    "op2": "Error",
    "op3": "Stop program",
    "op4": "Continue",
    "ans": "Stop program"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(strings.ToUpper(\"go\"))\n```",
    "quesType": "mcq",
    "op1": "Go",
    "op2": "GO",
    "op3": "go",
    "op4": "error",
    "ans": "GO"
  },
  {
    "ques": "Which is a valid map?",
    "quesType": "mcq",
    "op1": "make(map[string]int)",
    "op2": "make(slice[int])",
    "op3": "make(arr[int])",
    "op4": "make(chan int)",
    "ans": "make(map[string]int)"
  },
  {
    "ques": "What is `len` used for?",
    "quesType": "mcq",
    "op1": "Length",
    "op2": "Capacity",
    "op3": "Value",
    "op4": "Nil",
    "ans": "Length"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(strings.TrimSpace(\" go \"))\n```",
    "quesType": "mcq",
    "op1": " go ",
    "op2": "go",
    "op3": " error ",
    "op4": "g o",
    "ans": "go"
  },
  {
    "ques": "Which is true about channels?",
    "quesType": "mcq",
    "op1": "Used for file I/O",
    "op2": "For concurrency",
    "op3": "Create slices",
    "op4": "None",
    "ans": "For concurrency"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(strings.Contains(\"go\", \"o\"))\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "error",
    "ans": "true"
  },
  {
    "ques": "What is the base type for bool?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "bool",
    "op3": "string",
    "op4": "byte",
    "ans": "bool"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(7 >> 1)\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "2",
    "op3": "4",
    "op4": "5",
    "ans": "3"
  },
  {
    "ques": "Which method is for rounding?",
    "quesType": "mcq",
    "op1": "math.Round",
    "op2": "math.Ceil",
    "op3": "math.Floor",
    "op4": "math.Sqrt",
    "ans": "math.Round"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(\"go\"[1])\n```",
    "quesType": "mcq",
    "op1": "g",
    "op2": "o",
    "op3": "111",
    "op4": "98",
    "ans": "111"
  },
  {
    "ques": "What is `select` used for?",
    "quesType": "mcq",
    "op1": "Switching",
    "op2": "Channels",
    "op3": "Math",
    "op4": "Loops",
    "ans": "Channels"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(len(\"golang\"))\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "6",
    "op3": "7",
    "op4": "error",
    "ans": "6"
  },
  {
    "ques": "How to define constant?",
    "quesType": "mcq",
    "op1": "var",
    "op2": "const",
    "op3": "let",
    "op4": "def",
    "ans": "const"
  },
  {
    "ques": "Which is Go’s build tool?",
    "quesType": "mcq",
    "op1": "go run",
    "op2": "go build",
    "op3": "go make",
    "op4": "go install",
    "ans": "go build"
  },
  {
    "ques": "What is used for imports?",
    "quesType": "mcq",
    "op1": "import",
    "op2": "include",
    "op3": "require",
    "op4": "use",
    "ans": "import"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(strings.ToLower(\"GO\"))\n```",
    "quesType": "mcq",
    "op1": "GO",
    "op2": "go",
    "op3": "Go",
    "op4": "Error",
    "ans": "go"
  },
  {
    "ques": "What is the use of `interface`?",
    "quesType": "mcq",
    "op1": "Struct",
    "op2": "Abstraction",
    "op3": "Map",
    "op4": "Function",
    "ans": "Abstraction"
  },
  { "ques": "Zero value for int is _____.", "quesType": "fill", "ans": "0" },
  { "ques": "The default boolean value is _____.", "quesType": "fill", "ans": "false" },
  { "ques": "```go\nfmt.Println(strings.HasPrefix(\"hello\", \"he\"))\n```", "quesType": "fill", "ans": "true" },
  { "ques": "The keyword for a package is _____.", "quesType": "fill", "ans": "package" },
  { "ques": "The loop keyword is _____.", "quesType": "fill", "ans": "for" },
  { "ques": "To declare variable with type inference use _____.", "quesType": "fill", "ans": ":=" },
  { "ques": "```go\nfmt.Println(9 / 2)\n```", "quesType": "fill", "ans": "4" },
  { "ques": "Defer works in ____ order.", "quesType": "fill", "ans": "LIFO" },
  { "ques": "Keyword for panic handling is _____.", "quesType": "fill", "ans": "recover" },
  { "ques": "```go\nfmt.Println(strings.Contains(\"abc\", \"b\"))\n```", "quesType": "fill", "ans": "true" },
  { "ques": "```go\nfmt.Println(math.Floor(2.9))\n```", "quesType": "fill", "ans": "2" },
  { "ques": "The symbol for channel is _____.", "quesType": "fill", "ans": "<-" },
  { "ques": "Keyword for switch-like select is _____.", "quesType": "fill", "ans": "select" },
  { "ques": "```go\nfmt.Println(strings.Replace(\"aba\", \"a\", \"x\", 2))\n```", "quesType": "fill", "ans": "xbx" },
  { "ques": "To exit a program use _____.", "quesType": "fill", "ans": "os.Exit" },
  { "ques": "```go\nfmt.Println(len([]byte(\"go\")))\n```", "quesType": "fill", "ans": "2" },
  { "ques": "A slice can be created with _____.", "quesType": "fill", "ans": "make" },
  { "ques": "A variable can be reassigned if declared with _____.", "quesType": "fill", "ans": "var" },
  { "ques": "To convert int to string use _____.", "quesType": "fill", "ans": "strconv.Itoa" },
  { "ques": "To import multiple packages use _____.", "quesType": "fill", "ans": "()" },
  { "ques": "The type for byte is _____.", "quesType": "fill", "ans": "uint8" },
  { "ques": "The size of bool is _____.", "quesType": "fill", "ans": "1 bit" },
  { "ques": "Main package must have function _____.", "quesType": "fill", "ans": "main" },
  { "ques": "To format output use _____.", "quesType": "fill", "ans": "fmt" },
  { "ques": "Keyword for constant is _____.", "quesType": "fill", "ans": "const" },
  { "ques": "```go\nfmt.Println(3*3)\n```", "quesType": "fill", "ans": "9" },
  { "ques": "To import \"fmt\" write _____.", "quesType": "fill", "ans": "import \"fmt\"" },
  { "ques": "```go\nfmt.Println(strings.Count(\"mississippi\", \"s\"))\n```", "quesType": "fill", "ans": "4" },
  { "ques": "A map key must be _____.", "quesType": "fill", "ans": "comparable" },
  { "ques": "A method receiver binds the _____.", "quesType": "fill", "ans": "method" },
   {
    "ques": "What is the zero value of a slice?",
    "quesType": "mcq",
    "op1": "[]",
    "op2": "nil",
    "op3": "0",
    "op4": "empty",
    "ans": "nil"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(10 >> 2)\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "2",
    "op3": "4",
    "op4": "2.5",
    "ans": "2"
  },
  {
    "ques": "Which is used for concurrency?",
    "quesType": "mcq",
    "op1": "slice",
    "op2": "map",
    "op3": "goroutine",
    "op4": "array",
    "ans": "goroutine"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(4 & 2)\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "0",
    "op3": "4",
    "op4": "6",
    "ans": "0"
  },
  {
    "ques": "Which function creates a new channel?",
    "quesType": "mcq",
    "op1": "new",
    "op2": "make",
    "op3": "create",
    "op4": "chan",
    "ans": "make"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(true && false)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "1",
    "op4": "0",
    "ans": "false"
  },
  {
    "ques": "Which is valid rune literal?",
    "quesType": "mcq",
    "op1": "\"A\"",
    "op2": "'A'",
    "op3": "`A`",
    "op4": "\"\\u0041\"",
    "ans": "'A'"
  },
  {
    "ques": "Which keyword to skip loop iteration?",
    "quesType": "mcq",
    "op1": "skip",
    "op2": "continue",
    "op3": "pass",
    "op4": "next",
    "ans": "continue"
  },
  {
    "ques": "Which function stops the program?",
    "quesType": "mcq",
    "op1": "panic",
    "op2": "stop",
    "op3": "quit",
    "op4": "break",
    "ans": "panic"
  },
  {
    "ques": "Which type is immutable?",
    "quesType": "mcq",
    "op1": "slice",
    "op2": "map",
    "op3": "array",
    "op4": "string",
    "ans": "string"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(5 | 2)\n```",
    "quesType": "mcq",
    "op1": "7",
    "op2": "3",
    "op3": "2",
    "op4": "5",
    "ans": "7"
  },
  {
    "ques": "Which operator flips bits?",
    "quesType": "mcq",
    "op1": "~",
    "op2": "^",
    "op3": "&",
    "op4": "|",
    "ans": "^"
  },
  {
    "ques": "What does `recover` return if no panic?",
    "quesType": "mcq",
    "op1": "nil",
    "op2": "0",
    "op3": "true",
    "op4": "false",
    "ans": "nil"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(3 * (2 + 1))\n```",
    "quesType": "mcq",
    "op1": "6",
    "op2": "9",
    "op3": "5",
    "op4": "8",
    "ans": "9"
  },
  {
    "ques": "Which type is used for decimal numbers?",
    "quesType": "mcq",
    "op1": "float32",
    "op2": "float64",
    "op3": "int",
    "op4": "rune",
    "ans": "float64"
  },
  {
    "ques": "Which import path for math?",
    "quesType": "mcq",
    "op1": "\"math\"",
    "op2": "\"maths\"",
    "op3": "\"mathlib\"",
    "op4": "\"math64\"",
    "ans": "\"math\""
  },
  {
    "ques": "Output?\n```go\nfmt.Println(len(\"Go Lang\"))\n```",
    "quesType": "mcq",
    "op1": "7",
    "op2": "6",
    "op3": "8",
    "op4": "9",
    "ans": "7"
  },
  {
    "ques": "What keyword for fallback in switch?",
    "quesType": "mcq",
    "op1": "default",
    "op2": "else",
    "op3": "case",
    "op4": "other",
    "ans": "default"
  },
  {
    "ques": "Which is true for maps?",
    "quesType": "mcq",
    "op1": "Ordered",
    "op2": "Unordered",
    "op3": "Sorted",
    "op4": "Immutable",
    "ans": "Unordered"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(strings.HasSuffix(\"golang\", \"ang\"))\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "error",
    "op4": "nil",
    "ans": "true"
  },
  {
    "ques": "Which is zero value of bool?",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "0",
    "op4": "nil",
    "ans": "false"
  },
  {
    "ques": "Which operator is OR?",
    "quesType": "mcq",
    "op1": "&",
    "op2": "|",
    "op3": "^",
    "op4": "~",
    "ans": "|"
  },
  {
    "ques": "Which method joins slices?",
    "quesType": "mcq",
    "op1": "Join",
    "op2": "Split",
    "op3": "Merge",
    "op4": "Concat",
    "ans": "Join"
  },
  {
    "ques": "What is range used for?",
    "quesType": "mcq",
    "op1": "loop",
    "op2": "condition",
    "op3": "import",
    "op4": "package",
    "ans": "loop"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(5 != 5)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "1",
    "op4": "0",
    "ans": "false"
  },
  {
    "ques": "Which creates slice?",
    "quesType": "mcq",
    "op1": "array",
    "op2": "make",
    "op3": "new",
    "op4": "create",
    "ans": "make"
  },
  {
    "ques": "What does `append` do?",
    "quesType": "mcq",
    "op1": "adds elements",
    "op2": "removes",
    "op3": "copies",
    "op4": "trims",
    "ans": "adds elements"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(strings.Count(\"banana\", \"a\"))\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "2",
    "op3": "4",
    "op4": "5",
    "ans": "3"
  },
  {
    "ques": "Which package for OS operations?",
    "quesType": "mcq",
    "op1": "fmt",
    "op2": "os",
    "op3": "math",
    "op4": "net",
    "ans": "os"
  },
  {
    "ques": "Which keyword for multiple returns?",
    "quesType": "mcq",
    "op1": "multi",
    "op2": "return",
    "op3": "returns",
    "op4": "ret",
    "ans": "return"
  },
  {"ques":"Output?\n```go\nfmt.Println(len(\"\"))\n```","quesType":"fill","ans":"0"},
  {"ques":"Keyword to break loop is _____.","quesType":"fill","ans":"break"},
  {"ques":"The standard Go compiler is _____.","quesType":"fill","ans":"gc"},
  {"ques":"```go\nfmt.Println(math.Sqrt(16))\n```","quesType":"fill","ans":"4"},
  {"ques":"Keyword for anonymous function is _____.","quesType":"fill","ans":"func"},
  {"ques":"Zero value for string is _____.","quesType":"fill","ans":"\"\""},
  {"ques":"```go\nfmt.Println(10 * 2)\n```","quesType":"fill","ans":"20"},
  {"ques":"Go dependency manager is _____.","quesType":"fill","ans":"go mod"},
  {"ques":"```go\nfmt.Println(\"Go\" + \"Lang\")\n```","quesType":"fill","ans":"GoLang"},
  {"ques":"To format float use _____.","quesType":"fill","ans":"fmt.Sprintf"},
  {"ques":"Keyword for error type is _____.","quesType":"fill","ans":"error"},
  {"ques":"Zero value for pointer is _____.","quesType":"fill","ans":"nil"},
  {"ques":"Output?\n```go\nfmt.Println(10 / 3)\n```","quesType":"fill","ans":"3"},
  {"ques":"To get remainder use _____.","quesType":"fill","ans":"%"},
  {"ques":"Zero value for channel is _____.","quesType":"fill","ans":"nil"},
  {"ques":"A struct groups _____.","quesType":"fill","ans":"fields"},
  {"ques":"To declare method use _____.","quesType":"fill","ans":"func"},
  {"ques":"A slice does not own its _____.","quesType":"fill","ans":"data"},
  {"ques":"Go doc generator is _____.","quesType":"fill","ans":"godoc"},
  {"ques":"To read input use _____.","quesType":"fill","ans":"fmt.Scan"},
  {"ques":"Output?\n```go\nfmt.Println(2 << 2)\n```","quesType":"fill","ans":"8"},
  {"ques":"Main file must be in _____.","quesType":"fill","ans":"package main"},
  {"ques":"Zero value for int64 is _____.","quesType":"fill","ans":"0"},
  {"ques":"A rune is an alias for _____.","quesType":"fill","ans":"int32"},
  {"ques":"Keyword to skip test is _____.","quesType":"fill","ans":"t.Skip"},
  {"ques":"To print without newline use _____.","quesType":"fill","ans":"fmt.Print"},
  {"ques":"To print with newline use _____.","quesType":"fill","ans":"fmt.Println"},
  {"ques":"The `recover` stops _____.","quesType":"fill","ans":"panic"},
  {"ques":"To declare constant use _____.","quesType":"fill","ans":"const"},
  {"ques":"A function that calls itself is _____.","quesType":"fill","ans":"recursive"},
  {
    "ques": "What is the output?\n```go\nfmt.Println(2 + 3 * 4)\n```",
    "quesType": "mcq",
    "op1": "14",
    "op2": "20",
    "op3": "24",
    "op4": "10",
    "ans": "14"
  },
  {
    "ques": "What does `:=` do in Go?",
    "quesType": "mcq",
    "op1": "Assign",
    "op2": "Declare & assign",
    "op3": "Compare",
    "op4": "Loop",
    "ans": "Declare & assign"
  },
  {
    "ques": "Which type represents an empty interface?",
    "quesType": "mcq",
    "op1": "nil",
    "op2": "empty",
    "op3": "interface{}",
    "op4": "void",
    "ans": "interface{}"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(5 % 2)\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "0",
    "op4": "5",
    "ans": "1"
  },
  {
    "ques": "Which package is used for HTTP servers?",
    "quesType": "mcq",
    "op1": "os",
    "op2": "http",
    "op3": "net/http",
    "op4": "server",
    "ans": "net/http"
  },
  {
    "ques": "Which keyword to define a constant?",
    "quesType": "mcq",
    "op1": "const",
    "op2": "var",
    "op3": "static",
    "op4": "fixed",
    "ans": "const"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(7 & 3)\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "7",
    "op3": "0",
    "op4": "5",
    "ans": "3"
  },
  {
    "ques": "Which function converts string to int?",
    "quesType": "mcq",
    "op1": "strconv.Atoi",
    "op2": "strconv.ParseInt",
    "op3": "strconv.Convert",
    "op4": "string.ToInt",
    "ans": "strconv.Atoi"
  },
  {
    "ques": "Which method removes all white spaces?",
    "quesType": "mcq",
    "op1": "Trim",
    "op2": "TrimSpace",
    "op3": "RemoveSpace",
    "op4": "Clean",
    "ans": "TrimSpace"
  },
  {
    "ques": "Which operator checks equality?",
    "quesType": "mcq",
    "op1": "=",
    "op2": "==",
    "op3": "===",
    "op4": "!=",
    "ans": "=="
  },
  {
    "ques": "What does `defer` do?",
    "quesType": "mcq",
    "op1": "Skips function",
    "op2": "Executes immediately",
    "op3": "Executes last",
    "op4": "Loops forever",
    "ans": "Executes last"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(8 >> 1)\n```",
    "quesType": "mcq",
    "op1": "8",
    "op2": "4",
    "op3": "2",
    "op4": "1",
    "ans": "4"
  },
  {
    "ques": "Which type is used for Unicode characters?",
    "quesType": "mcq",
    "op1": "byte",
    "op2": "int",
    "op3": "string",
    "op4": "rune",
    "ans": "rune"
  },
  {
    "ques": "Which function repeats a string?",
    "quesType": "mcq",
    "op1": "strings.Repeat",
    "op2": "strings.Clone",
    "op3": "strings.Copy",
    "op4": "strings.Append",
    "ans": "strings.Repeat"
  },
  {
    "ques": "Which keyword is used for interface implementation?",
    "quesType": "mcq",
    "op1": "implements",
    "op2": "extends",
    "op3": "use",
    "op4": "none",
    "ans": "none"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(len([]int{1,2,3,4}))\n```",
    "quesType": "mcq",
    "op1": "3",
    "op2": "4",
    "op3": "2",
    "op4": "0",
    "ans": "4"
  },
  {
    "ques": "What does `panic` do?",
    "quesType": "mcq",
    "op1": "Pauses execution",
    "op2": "Logs error",
    "op3": "Stops execution",
    "op4": "Returns value",
    "ans": "Stops execution"
  },
  {
    "ques": "Which operator is AND?",
    "quesType": "mcq",
    "op1": "|",
    "op2": "&",
    "op3": "^",
    "op4": "!",
    "ans": "&"
  },
  {
    "ques": "What is the zero value for `error`?",
    "quesType": "mcq",
    "op1": "\"\"",
    "op2": "0",
    "op3": "nil",
    "op4": "false",
    "ans": "nil"
  },
  {
    "ques": "Which statement stops a goroutine?",
    "quesType": "mcq",
    "op1": "exit",
    "op2": "panic",
    "op3": "return",
    "op4": "stop",
    "ans": "return"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(\"Hello\"[1])\n```",
    "quesType": "mcq",
    "op1": "e",
    "op2": "101",
    "op3": "72",
    "op4": "l",
    "ans": "101"
  },
  {
    "ques": "Which built-in supports sorting?",
    "quesType": "mcq",
    "op1": "sort",
    "op2": "order",
    "op3": "arrange",
    "op4": "list",
    "ans": "sort"
  },
  {
    "ques": "Which package for time operations?",
    "quesType": "mcq",
    "op1": "clock",
    "op2": "time",
    "op3": "chrono",
    "op4": "date",
    "ans": "time"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(5 << 1)\n```",
    "quesType": "mcq",
    "op1": "5",
    "op2": "10",
    "op3": "2",
    "op4": "1",
    "ans": "10"
  },
  {
    "ques": "Which loop keyword supports range?",
    "quesType": "mcq",
    "op1": "loop",
    "op2": "while",
    "op3": "for",
    "op4": "do",
    "ans": "for"
  },
  {
    "ques": "What is used for formatted output?",
    "quesType": "mcq",
    "op1": "fmt.Printf",
    "op2": "fmt.Print",
    "op3": "fmt.Scan",
    "op4": "fmt.Scanf",
    "ans": "fmt.Printf"
  },
  {
    "ques": "Which type can hold `nil`?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "string",
    "op3": "pointer",
    "op4": "array",
    "ans": "pointer"
  },
  {
    "ques": "Which function closes a channel?",
    "quesType": "mcq",
    "op1": "close",
    "op2": "stop",
    "op3": "done",
    "op4": "end",
    "ans": "close"
  },
  {
    "ques": "Which checks if map key exists?",
    "quesType": "mcq",
    "op1": "check",
    "op2": "exist",
    "op3": "ok",
    "op4": "valid",
    "ans": "ok"
  },
  {
    "ques": "Which function splits string?",
    "quesType": "mcq",
    "op1": "strings.Split",
    "op2": "strings.Cut",
    "op3": "strings.Join",
    "op4": "strings.Clean",
    "ans": "strings.Split"
  },
  {"ques":"Keyword for main package is _____.","quesType":"fill","ans":"main"},
  {"ques":"Output?\n```go\nfmt.Println(3 << 2)\n```","quesType":"fill","ans":"12"},
  {"ques":"Zero value for bool is _____.","quesType":"fill","ans":"false"},
  {"ques":"Keyword to import package is _____.","quesType":"fill","ans":"import"},
  {"ques":"Output?\n```go\nfmt.Println(len(\"abc\"))\n```","quesType":"fill","ans":"3"},
  {"ques":"Keyword for struct is _____.","quesType":"fill","ans":"struct"},
  {"ques":"To create a pointer use _____.","quesType":"fill","ans":"&"},
  {"ques":"Keyword to allocate memory is _____.","quesType":"fill","ans":"new"},
  {"ques":"Go compiler command is _____.","quesType":"fill","ans":"go build"},
  {"ques":"Output?\n```go\nfmt.Println(9/2)\n```","quesType":"fill","ans":"4"},
  {"ques":"Keyword for loop is _____.","quesType":"fill","ans":"for"},
  {"ques":"Output?\n```go\nfmt.Println(15%4)\n```","quesType":"fill","ans":"3"},
  {"ques":"Output?\n```go\nfmt.Println(2*3+1)\n```","quesType":"fill","ans":"7"},
  {"ques":"To format strings use _____.","quesType":"fill","ans":"fmt.Sprintf"},
  {"ques":"Zero value for slice is _____.","quesType":"fill","ans":"nil"},
  {"ques":"To catch panic use _____.","quesType":"fill","ans":"recover"},
  {"ques":"Output?\n```go\nfmt.Println(100/10)\n```","quesType":"fill","ans":"10"},
  {"ques":"To define an interface use _____.","quesType":"fill","ans":"interface"},
  {"ques":"Output?\n```go\nfmt.Println(\"Hi\" + \" \" + \"Go\")\n```","quesType":"fill","ans":"Hi Go"},
  {"ques":"Zero value for map is _____.","quesType":"fill","ans":"nil"},
  {"ques":"To stop goroutine use _____.","quesType":"fill","ans":"return"},
  {"ques":"Output?\n```go\nfmt.Println(1+2*3)\n```","quesType":"fill","ans":"7"},
  {"ques":"Go standard test tool is _____.","quesType":"fill","ans":"go test"},
  {"ques":"To read env variable use _____.","quesType":"fill","ans":"os.Getenv"},
  {"ques":"Output?\n```go\nfmt.Println(20/5)\n```","quesType":"fill","ans":"4"},
  {"ques":"To close file use _____.","quesType":"fill","ans":"Close"},
  {"ques":"Output?\n```go\nfmt.Println(strings.ToUpper(\"go\"))\n```","quesType":"fill","ans":"GO"},
  {"ques":"Output?\n```go\nfmt.Println(strings.ToLower(\"GO\"))\n```","quesType":"fill","ans":"go"},
  {"ques":"Output?\n```go\nfmt.Println(2<<3)\n```","quesType":"fill","ans":"16"},
  {"ques":"Keyword for package is _____.","quesType":"fill","ans":"package"}

]
let codinggo3Arr=[
  {
    "ques": "What is printed?\n```go\nfmt.Println(5 / 2.0)\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "2.5",
    "op3": "2.0",
    "op4": "Error",
    "ans": "2.5"
  },
  {
    "ques": "Which statement about slices is true?",
    "quesType": "mcq",
    "op1": "They have fixed size",
    "op2": "They are arrays",
    "op3": "They reference arrays underneath",
    "op4": "They can’t grow",
    "ans": "They reference arrays underneath"
  },
  {
    "ques": "What is the output?\n```go\nvar a []int\nfmt.Println(a == nil)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "0",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "What happens if you close a closed channel?",
    "quesType": "mcq",
    "op1": "Nothing",
    "op2": "Deadlock",
    "op3": "Panic",
    "op4": "Silent ignore",
    "ans": "Panic"
  },
  {
    "ques": "Which built-in function copies slices?",
    "quesType": "mcq",
    "op1": "append",
    "op2": "copy",
    "op3": "make",
    "op4": "new",
    "ans": "copy"
  },
  {
    "ques": "Which channel operation blocks forever?",
    "quesType": "mcq",
    "op1": "Sending to closed channel",
    "op2": "Closing nil channel",
    "op3": "Receiving from nil channel",
    "op4": "Receiving from closed channel",
    "ans": "Receiving from nil channel"
  },
  {
    "ques": "What does `recover()` return if there’s no panic?",
    "quesType": "mcq",
    "op1": "nil",
    "op2": "false",
    "op3": "\"\"",
    "op4": "error",
    "ans": "nil"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(1 << 33)\n```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "Overflow",
    "op3": "8589934592",
    "op4": "Error",
    "ans": "8589934592"
  },
  {
    "ques": "Which statement about maps is true?",
    "quesType": "mcq",
    "op1": "Maps keep insertion order",
    "op2": "Maps are ordered",
    "op3": "Maps are unordered",
    "op4": "Maps need explicit free",
    "ans": "Maps are unordered"
  },
  {
    "ques": "What is true about select statement?",
    "quesType": "mcq",
    "op1": "Select works only with slices",
    "op2": "Select works only with maps",
    "op3": "Select works with channels",
    "op4": "Select works with interfaces",
    "ans": "Select works with channels"
  },
  {
    "ques": "What is the output?\n```go\nfmt.Println(len(\"世界\"))\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "4",
    "op3": "6",
    "op4": "Error",
    "ans": "6"
  },
  {
    "ques": "Which function converts int to string?",
    "quesType": "mcq",
    "op1": "strconv.FormatInt",
    "op2": "strconv.Itoa",
    "op3": "strconv.ToString",
    "op4": "fmt.Sprintf",
    "ans": "strconv.Itoa"
  },
  {
    "ques": "What is the output?\n```go\ns := \"Go\"\ns[0] = 'g'\n```",
    "quesType": "mcq",
    "op1": "go",
    "op2": "Go",
    "op3": "error",
    "op4": "gO",
    "ans": "error"
  },
  {
    "ques": "Which built-in keyword implements polymorphism?",
    "quesType": "mcq",
    "op1": "struct",
    "op2": "interface",
    "op3": "map",
    "op4": "slice",
    "ans": "interface"
  },
  {
    "ques": "Which file suffix is for test files?",
    "quesType": "mcq",
    "op1": ".go",
    "op2": "_go",
    "op3": "_test.go",
    "op4": "test.go",
    "ans": "_test.go"
  },
  {
    "ques": "What is true about Go routines?",
    "quesType": "mcq",
    "op1": "They block main thread",
    "op2": "They run in kernel space",
    "op3": "They are lightweight",
    "op4": "They must return values",
    "ans": "They are lightweight"
  },
  {
    "ques": "Which returns multiple values?",
    "quesType": "mcq",
    "op1": "function",
    "op2": "method",
    "op3": "both",
    "op4": "neither",
    "ans": "both"
  },
  {
    "ques": "Which package handles JSON?",
    "quesType": "mcq",
    "op1": "strings",
    "op2": "json",
    "op3": "encoding/json",
    "op4": "fmt",
    "ans": "encoding/json"
  },
  {
    "ques": "What is the output?\n```go\nfmt.Println(true && false || true)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Error",
    "op4": "nil",
    "ans": "true"
  },
  {
    "ques": "Which is not a valid channel direction?",
    "quesType": "mcq",
    "op1": "<-chan",
    "op2": "chan<-",
    "op3": "chan",
    "op4": "chan<->",
    "ans": "chan<->"
  },
  {
    "ques": "Which built-in handles randomness?",
    "quesType": "mcq",
    "op1": "rand",
    "op2": "math",
    "op3": "math/rand",
    "op4": "random",
    "ans": "math/rand"
  },
  {
    "ques": "What happens if you iterate nil slice?",
    "quesType": "mcq",
    "op1": "panic",
    "op2": "loop forever",
    "op3": "no output",
    "op4": "error",
    "ans": "no output"
  },
  {
    "ques": "What is the default capacity of new slice with `make([]int, 5)`?",
    "quesType": "mcq",
    "op1": "5",
    "op2": "0",
    "op3": "1",
    "op4": "10",
    "ans": "5"
  },
  {
    "ques": "Which is not valid about Go map keys?",
    "quesType": "mcq",
    "op1": "Slices can be keys",
    "op2": "Ints can be keys",
    "op3": "Strings can be keys",
    "op4": "Structs can be keys",
    "ans": "Slices can be keys"
  },
  {
    "ques": "Which does NOT implement concurrency?",
    "quesType": "mcq",
    "op1": "go routine",
    "op2": "mutex",
    "op3": "channel",
    "op4": "for loop",
    "ans": "for loop"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(true || false && false)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "error",
    "ans": "true"
  },
  {
    "ques": "Which operation is invalid?\n```go\nappend(map[int]int{}, 1)\n```",
    "quesType": "mcq",
    "op1": "Valid",
    "op2": "Invalid",
    "op3": "Nil",
    "op4": "Empty",
    "ans": "Invalid"
  },
  {
    "ques": "What happens with range over closed channel?",
    "quesType": "mcq",
    "op1": "Deadlock",
    "op2": "Infinite loop",
    "op3": "Receives remaining then stops",
    "op4": "Panic",
    "ans": "Receives remaining then stops"
  },
  {
    "ques": "Which tool formats Go code?",
    "quesType": "mcq",
    "op1": "go fix",
    "op2": "go fmt",
    "op3": "go run",
    "op4": "go tidy",
    "ans": "go fmt"
  },
   {"ques":"Output?\n```go\nfmt.Println(1.0/2)\n```","quesType":"fill","ans":"0.5"},
  {"ques":"Keyword for concurrency is _____.","quesType":"fill","ans":"go"},
  {"ques":"Keyword to stop panic is _____.","quesType":"fill","ans":"recover"},
  {"ques":"Output?\n```go\nfmt.Println(len(\"ç\"))\n```","quesType":"fill","ans":"2"},
  {"ques":"Output?\n```go\nfmt.Println(cap([]int{1,2,3}))\n```","quesType":"fill","ans":"3"},
  {"ques":"Default value for pointer is _____.","quesType":"fill","ans":"nil"},
  {"ques":"Package for hashing is _____.","quesType":"fill","ans":"crypto/sha256"},
  {"ques":"Output?\n```go\nfmt.Println(^uint(0))\n```","quesType":"fill","ans":"18446744073709551615"},
  {"ques":"Method to encode JSON is _____.","quesType":"fill","ans":"json.Marshal"},
  {"ques":"Output?\n```go\nfmt.Println(strings.Count(\"hello\", \"l\"))\n```","quesType":"fill","ans":"2"},
  {"ques":"Method to decode JSON is _____.","quesType":"fill","ans":"json.Unmarshal"},
  {"ques":"Zero value for channel is _____.","quesType":"fill","ans":"nil"},
  {"ques":"Output?\n```go\nfmt.Println(runtime.NumCPU())\n```","quesType":"fill","ans":"(depends)"},
  {"ques":"Tool to install packages is _____.","quesType":"fill","ans":"go get"},
  {"ques":"Output?\n```go\nfmt.Println(len(make([]int,0,5)))\n```","quesType":"fill","ans":"0"},
  {"ques":"Method to sort slice is _____.","quesType":"fill","ans":"sort.Sort"},
  {"ques":"Output?\n```go\nfmt.Println(1 << 4)\n```","quesType":"fill","ans":"16"},
  {"ques":"Output?\n```go\nfmt.Println(5 &^ 2)\n```","quesType":"fill","ans":"4"},
  {"ques":"Method to read file is _____.","quesType":"fill","ans":"os.ReadFile"},
  {"ques":"Zero value for interface is _____.","quesType":"fill","ans":"nil"},
  {"ques":"Output?\n```go\nfmt.Println('A' + 1)\n```","quesType":"fill","ans":"66"},
  {"ques":"Output?\n```go\nfmt.Println(3 * 1 << 2)\n```","quesType":"fill","ans":"12"},
  {"ques":"Keyword to lock threads is _____.","quesType":"fill","ans":"sync.Mutex"},
  {"ques":"Tool to benchmark is _____.","quesType":"fill","ans":"go test -bench"},
  {"ques":"Keyword for constants is _____.","quesType":"fill","ans":"const"},
  {"ques":"Output?\n```go\nfmt.Println(\"Go\" + \"lang\")\n```","quesType":"fill","ans":"Golang"},
  {"ques":"Output?\n```go\nfmt.Println(len(map[string]int{\"a\":1}))\n```","quesType":"fill","ans":"1"},
  {"ques":"Output?\n```go\nfmt.Println(4>>1)\n```","quesType":"fill","ans":"2"},
  {"ques":"Tool to check imports is _____.","quesType":"fill","ans":"go mod tidy"},
  {"ques":"Method to close file is _____.","quesType":"fill","ans":"Close"},
   {
    "ques": "What is the output?\n```go\nfmt.Println(2 << 3)\n```",
    "quesType": "mcq",
    "op1": "8",
    "op2": "16",
    "op3": "2",
    "op4": "6",
    "ans": "16"
  },
  {
    "ques": "Which is true about panic?",
    "quesType": "mcq",
    "op1": "It stops only current function",
    "op2": "It stops current goroutine",
    "op3": "It stops entire program",
    "op4": "It logs but continues",
    "ans": "It stops current goroutine"
  },
  {
    "ques": "Which operator clears bits?",
    "quesType": "mcq",
    "op1": "&",
    "op2": "|",
    "op3": "^",
    "op4": "&^",
    "ans": "&^"
  },
  {
    "ques": "Output?\n```go\nfmt.Println('a' + 'b')\n```",
    "quesType": "mcq",
    "op1": "195",
    "op2": "ab",
    "op3": "Error",
    "op4": "97",
    "ans": "195"
  },
  {
    "ques": "Which is not a valid rune literal?",
    "quesType": "mcq",
    "op1": "'A'",
    "op2": "'\\n'",
    "op3": "'abc'",
    "op4": "'1'",
    "ans": "'abc'"
  },
  {
    "ques": "Which will panic?\n```go\nvar m map[string]int\nfmt.Println(m[\"x\"])\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Panic",
    "op4": "Nil",
    "ans": "false"
  },
  {
    "ques": "Output?\n```go\nvar p *int\nfmt.Println(p == nil)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "0",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Which package handles time?",
    "quesType": "mcq",
    "op1": "fmt",
    "op2": "time",
    "op3": "os",
    "op4": "runtime",
    "ans": "time"
  },
  {
    "ques": "Which does not implement io.Reader?",
    "quesType": "mcq",
    "op1": "*os.File",
    "op2": "bytes.Buffer",
    "op3": "strings.Reader",
    "op4": "fmt.Println",
    "ans": "fmt.Println"
  },
  {
    "ques": "What is true about `defer`?",
    "quesType": "mcq",
    "op1": "Runs first",
    "op2": "Runs after panic",
    "op3": "Runs after return",
    "op4": "Runs only once",
    "ans": "Runs after return"
  },
  {
    "ques": "What is printed?\n```go\nvar i interface{} = nil\nfmt.Println(i == nil)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "Panic",
    "op4": "Error",
    "ans": "true"
  },
  {
    "ques": "Which is true about Go interface?",
    "quesType": "mcq",
    "op1": "Can store any type",
    "op2": "Stores only int",
    "op3": "Stores only struct",
    "op4": "Has no methods",
    "ans": "Can store any type"
  },
  {
    "ques": "Which disables data race?",
    "quesType": "mcq",
    "op1": "Mutex",
    "op2": "Select",
    "op3": "Defer",
    "op4": "Printf",
    "ans": "Mutex"
  },
  {
    "ques": "Which does not compile?\n```go\nx := []int{1}\ny := x\ny[0] = 2\n```",
    "quesType": "mcq",
    "op1": "Compiles",
    "op2": "Does not compile",
    "op3": "Runtime error",
    "op4": "Panic",
    "ans": "Compiles"
  },
  {
    "ques": "Which is a pointer receiver?",
    "quesType": "mcq",
    "op1": "func (t T) M()",
    "op2": "func M(t T)",
    "op3": "func (t *T) M()",
    "op4": "func M()",
    "ans": "func (t *T) M()"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(float64(1) / 2)\n```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "0.5",
    "op3": "1",
    "op4": "2",
    "ans": "0.5"
  },
  {
    "ques": "Which is a valid rune type?",
    "quesType": "mcq",
    "op1": "int",
    "op2": "int32",
    "op3": "float64",
    "op4": "byte",
    "ans": "int32"
  },
  {
    "ques": "Which package shows reflection?",
    "quesType": "mcq",
    "op1": "runtime",
    "op2": "reflect",
    "op3": "fmt",
    "op4": "os",
    "ans": "reflect"
  },
  {
    "ques": "Which is a zero value for string?",
    "quesType": "mcq",
    "op1": "\"nil\"",
    "op2": "\"\"",
    "op3": "nil",
    "op4": "0",
    "ans": "\"\""
  },
  {
    "ques": "What is printed?\n```go\nfmt.Println(make(chan int) == nil)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "nil",
    "op4": "error",
    "ans": "false"
  },
  {
    "ques": "Which blocks forever?",
    "quesType": "mcq",
    "op1": "close(nil)",
    "op2": "receive from nil chan",
    "op3": "send to nil chan",
    "op4": "both 2 & 3",
    "ans": "both 2 & 3"
  },
  {
    "ques": "Which is true about blank identifier `_`?",
    "quesType": "mcq",
    "op1": "It saves values",
    "op2": "It discards values",
    "op3": "It returns values",
    "op4": "It panics",
    "ans": "It discards values"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(cap([]int{}))\n```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "nil",
    "op4": "error",
    "ans": "0"
  },
  {
    "ques": "Which cannot be nil?",
    "quesType": "mcq",
    "op1": "slice",
    "op2": "map",
    "op3": "chan",
    "op4": "array",
    "ans": "array"
  },
  {
    "ques": "Which disables compiler error?",
    "quesType": "mcq",
    "op1": "empty interface",
    "op2": "mutex",
    "op3": "recover",
    "op4": "select",
    "ans": "recover"
  },
  {
    "ques": "Which is valid import?",
    "quesType": "mcq",
    "op1": "import \"fmt\"",
    "op2": "include \"fmt\"",
    "op3": "using \"fmt\"",
    "op4": "package fmt",
    "ans": "import \"fmt\""
  },
  {
    "ques": "Which is valid?",
    "quesType": "mcq",
    "op1": "len(nil)",
    "op2": "cap(nil)",
    "op3": "len(make([]int,0))",
    "op4": "len(make(chan int))",
    "ans": "len(make([]int,0))"
  },
  {
    "ques": "Which keyword creates custom error?",
    "quesType": "mcq",
    "op1": "panic",
    "op2": "recover",
    "op3": "errors.New",
    "op4": "fmt.Println",
    "ans": "errors.New"
  },
  {
    "ques": "Which does not return error?",
    "quesType": "mcq",
    "op1": "os.Open",
    "op2": "os.ReadFile",
    "op3": "fmt.Println",
    "op4": "json.Unmarshal",
    "ans": "fmt.Println"
  },
  {"ques":"Output?\n```go\nfmt.Println(^0)\n```","quesType":"fill","ans":"-1"},
  {"ques":"Method to create buffer is _____.","quesType":"fill","ans":"bytes.Buffer"},
  {"ques":"Output?\n```go\nfmt.Println(1<<2 + 1<<1)\n```","quesType":"fill","ans":"6"},
  {"ques":"Keyword for loop is _____.","quesType":"fill","ans":"for"},
  {"ques":"Output?\n```go\nfmt.Println(strings.Repeat(\"a\", 3))\n```","quesType":"fill","ans":"aaa"},
  {"ques":"Zero value for int is _____.","quesType":"fill","ans":"0"},
  {"ques":"Output?\n```go\nfmt.Println(\"abc\"[0])\n```","quesType":"fill","ans":"97"},
  {"ques":"Method to write file is _____.","quesType":"fill","ans":"os.WriteFile"},
  {"ques":"Output?\n```go\nfmt.Println(len(\"😀\"))\n```","quesType":"fill","ans":"4"},
  {"ques":"Method to convert string to int is _____.","quesType":"fill","ans":"strconv.Atoi"},
  {"ques":"Output?\n```go\nfmt.Println(3 << 1)\n```","quesType":"fill","ans":"6"},
  {"ques":"Keyword to call method is _____.","quesType":"fill","ans":"."},
  {"ques":"Output?\n```go\nfmt.Println(math.Sqrt(4))\n```","quesType":"fill","ans":"2"},
  {"ques":"Output?\n```go\nfmt.Println(strings.HasPrefix(\"Go\", \"G\"))\n```","quesType":"fill","ans":"true"},
  {"ques":"Output?\n```go\nfmt.Println(strings.HasSuffix(\"Go\", \"o\"))\n```","quesType":"fill","ans":"true"},
  {"ques":"Output?\n```go\nfmt.Println(strings.Title(\"go\"))\n```","quesType":"fill","ans":"Go"},
  {"ques":"Output?\n```go\nfmt.Println(int64(1<<32))\n```","quesType":"fill","ans":"4294967296"},
  {"ques":"Output?\n```go\nfmt.Println(1 | 2)\n```","quesType":"fill","ans":"3"},
  {"ques":"Output?\n```go\nfmt.Println(1 ^ 1)\n```","quesType":"fill","ans":"0"},
  {"ques":"Keyword for package doc is _____.","quesType":"fill","ans":"godoc"},
  {"ques":"Output?\n```go\nfmt.Println(strings.Index(\"abc\",\"b\"))\n```","quesType":"fill","ans":"1"},
  {"ques":"Output?\n```go\nfmt.Println(time.Now().Year() > 2000)\n```","quesType":"fill","ans":"true"},
  {"ques":"Output?\n```go\nfmt.Println(bytes.Contains([]byte(\"hi\"), []byte(\"h\")))\n```","quesType":"fill","ans":"true"},
  {"ques":"Output?\n```go\nfmt.Println(strings.ToUpper(\"golang\"))\n```","quesType":"fill","ans":"GOLANG"},
  {"ques":"Output?\n```go\nfmt.Println(math.Max(1,2))\n```","quesType":"fill","ans":"2"},
  {"ques":"Output?\n```go\nfmt.Println(5>>2)\n```","quesType":"fill","ans":"1"},
  {"ques":"Output?\n```go\nfmt.Println(cap(make([]int, 3, 5)))\n```","quesType":"fill","ans":"5"},
  {"ques":"Output?\n```go\nfmt.Println(strings.TrimSpace(\"  hi  \"))\n```","quesType":"fill","ans":"hi"},
  {"ques":"Output?\n```go\nfmt.Println(reflect.TypeOf(5).Kind())\n```","quesType":"fill","ans":"int"},
  {"ques":"Output?\n```go\nfmt.Println(len(make(chan int, 3)))\n```","quesType":"fill","ans":"0"},
   {
    "ques": "What is printed?\n```go\nfmt.Println(len(map[string]int{}))\n```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "nil",
    "op3": "1",
    "op4": "panic",
    "ans": "0"
  },
  {
    "ques": "Which will deadlock?",
    "quesType": "mcq",
    "op1": "close(nil)",
    "op2": "select{}",
    "op3": "reading from nil chan",
    "op4": "all",
    "ans": "reading from nil chan"
  },
  {
    "ques": "What does `recover` do?",
    "quesType": "mcq",
    "op1": "Raises panic",
    "op2": "Handles panic",
    "op3": "Ignores panic",
    "op4": "Stops defer",
    "ans": "Handles panic"
  },
  {
    "ques": "Which can embed?",
    "quesType": "mcq",
    "op1": "interface{}",
    "op2": "struct",
    "op3": "slice",
    "op4": "map",
    "ans": "struct"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(nil == nil)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "compile error",
    "op4": "runtime panic",
    "ans": "true"
  },
  {
    "ques": "Which converts int to string?",
    "quesType": "mcq",
    "op1": "strconv.Itoa",
    "op2": "fmt.Sprint",
    "op3": "string()",
    "op4": "all",
    "ans": "all"
  },
  {
    "ques": "Which creates goroutine?",
    "quesType": "mcq",
    "op1": "go func(){}",
    "op2": "defer",
    "op3": "select",
    "op4": "recover",
    "ans": "go func(){}"
  },
  {
    "ques": "Which is valid rune literal?",
    "quesType": "mcq",
    "op1": "'\\u1234'",
    "op2": "'\\n'",
    "op3": "'A'",
    "op4": "all",
    "ans": "all"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(\"Go\"[0])\n```",
    "quesType": "mcq",
    "op1": "71",
    "op2": "G",
    "op3": "0",
    "op4": "error",
    "ans": "71"
  },
  {
    "ques": "Which is true about maps?",
    "quesType": "mcq",
    "op1": "Ordered",
    "op2": "Unordered",
    "op3": "Thread-safe",
    "op4": "Immutable",
    "ans": "Unordered"
  },
  {
    "ques": "Which is valid map literal?",
    "quesType": "mcq",
    "op1": "map[int]string{}",
    "op2": "make(map[int]string)",
    "op3": "var m map[int]string",
    "op4": "all",
    "ans": "all"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(0.1 + 0.2 == 0.3)\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "error",
    "op4": "panic",
    "ans": "false"
  },
  {
    "ques": "Which checks capacity?",
    "quesType": "mcq",
    "op1": "len",
    "op2": "cap",
    "op3": "make",
    "op4": "new",
    "ans": "cap"
  },
  {
    "ques": "Which is nil-able?",
    "quesType": "mcq",
    "op1": "interface",
    "op2": "pointer",
    "op3": "slice",
    "op4": "all",
    "ans": "all"
  },
  {
    "ques": "Which stops panic?",
    "quesType": "mcq",
    "op1": "defer",
    "op2": "recover",
    "op3": "panic",
    "op4": "fmt.Println",
    "ans": "recover"
  },
  {
    "ques": "Which is true about slices?",
    "quesType": "mcq",
    "op1": "Fixed length",
    "op2": "Dynamic length",
    "op3": "Cannot grow",
    "op4": "Immutable",
    "ans": "Dynamic length"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(strings.Contains(\"Go\", \"o\"))\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "error",
    "op4": "nil",
    "ans": "true"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(5%2)\n```",
    "quesType": "mcq",
    "op1": "1",
    "op2": "2",
    "op3": "0",
    "op4": "error",
    "ans": "1"
  },
  {
    "ques": "Which is for JSON?",
    "quesType": "mcq",
    "op1": "os",
    "op2": "encoding/json",
    "op3": "fmt",
    "op4": "bufio",
    "ans": "encoding/json"
  },
  {
    "ques": "Which is true?\n```go\nx := new(int)\n```",
    "quesType": "mcq",
    "op1": "x is int",
    "op2": "x is *int",
    "op3": "x is nil",
    "op4": "x is float",
    "ans": "x is *int"
  },
  {
    "ques": "Which is not allowed?",
    "quesType": "mcq",
    "op1": "var x int",
    "op2": "x := 5",
    "op3": "var",
    "op4": "func(){}",
    "ans": "var"
  },
  {
    "ques": "Which is valid for blank import?",
    "quesType": "mcq",
    "op1": "_ \"fmt\"",
    "op2": "import \"fmt\"",
    "op3": "include \"fmt\"",
    "op4": "using \"fmt\"",
    "ans": "_ \"fmt\""
  },
  {
    "ques": "Which returns multiple?",
    "quesType": "mcq",
    "op1": "fmt.Println",
    "op2": "os.Open",
    "op3": "len",
    "op4": "cap",
    "ans": "os.Open"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(1<<3)\n```",
    "quesType": "mcq",
    "op1": "8",
    "op2": "3",
    "op3": "1",
    "op4": "0",
    "ans": "8"
  },
  {
    "ques": "Which is variadic?",
    "quesType": "mcq",
    "op1": "len",
    "op2": "fmt.Println",
    "op3": "cap",
    "op4": "make",
    "ans": "fmt.Println"
  },
  {
    "ques": "Which is true about make?",
    "quesType": "mcq",
    "op1": "allocates memory",
    "op2": "initializes struct",
    "op3": "makes pointer",
    "op4": "calls new",
    "ans": "allocates memory"
  },
  {
    "ques": "Which is a built-in function?",
    "quesType": "mcq",
    "op1": "copy",
    "op2": "cap",
    "op3": "append",
    "op4": "all",
    "ans": "all"
  },
  {
    "ques": "Which cannot grow?",
    "quesType": "mcq",
    "op1": "slice",
    "op2": "array",
    "op3": "map",
    "op4": "chan",
    "ans": "array"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(1 &^ 1)\n```",
    "quesType": "mcq",
    "op1": "0",
    "op2": "1",
    "op3": "true",
    "op4": "false",
    "ans": "0"
  },
  {"ques":"Output?\n```go\nfmt.Println(1<<5)\n```","quesType":"fill","ans":"32"},
  {"ques":"Zero value of bool is _____.","quesType":"fill","ans":"false"},
  {"ques":"Output?\n```go\nfmt.Println(\"abc\"[1])\n```","quesType":"fill","ans":"98"},
  {"ques":"Method to parse float is _____.","quesType":"fill","ans":"strconv.ParseFloat"},
  {"ques":"Output?\n```go\nfmt.Println(strings.Count(\"go go\", \"go\"))\n```","quesType":"fill","ans":"2"},
  {"ques":"Output?\n```go\nfmt.Println(strings.ReplaceAll(\"go go\", \"go\", \"run\"))\n```","quesType":"fill","ans":"run run"},
  {"ques":"Output?\n```go\nfmt.Println(len([]int{1,2,3}))\n```","quesType":"fill","ans":"3"},
  {"ques":"Output?\n```go\nfmt.Println(\"Hello\" + \"World\")\n```","quesType":"fill","ans":"HelloWorld"},
  {"ques":"Output?\n```go\nfmt.Println(10 >> 2)\n```","quesType":"fill","ans":"2"},
  {"ques":"Output?\n```go\nfmt.Println(2*2 + 2)\n```","quesType":"fill","ans":"6"},
  {"ques":"Output?\n```go\nfmt.Println(reflect.TypeOf(3.14).Kind())\n```","quesType":"fill","ans":"float64"},
  {"ques":"Output?\n```go\nfmt.Println(reflect.TypeOf(true).Kind())\n```","quesType":"fill","ans":"bool"},
  {"ques":"Output?\n```go\nfmt.Println(len(make(chan int,5)))\n```","quesType":"fill","ans":"0"},
  {"ques":"Output?\n```go\nfmt.Println(cap(make(chan int,5)))\n```","quesType":"fill","ans":"5"},
  {"ques":"Output?\n```go\nfmt.Println(1 | 4)\n```","quesType":"fill","ans":"5"},
  {"ques":"Output?\n```go\nfmt.Println(7 & 3)\n```","quesType":"fill","ans":"3"},
  {"ques":"Output?\n```go\nfmt.Println(7 ^ 3)\n```","quesType":"fill","ans":"4"},
  {"ques":"Output?\n```go\nfmt.Println(7 &^ 3)\n```","quesType":"fill","ans":"4"},
  {"ques":"Output?\n```go\nfmt.Println(time.Now().Weekday() >= 0)\n```","quesType":"fill","ans":"true"},
  {"ques":"Output?\n```go\nfmt.Println(len(\"🐶\"))\n```","quesType":"fill","ans":"4"},
  {"ques":"Output?\n```go\nfmt.Println(strings.Trim(\"!!!hi!!!\",\"!\"))\n```","quesType":"fill","ans":"hi"},
  {"ques":"Output?\n```go\nfmt.Println(strings.ContainsAny(\"golang\",\"xyz\"))\n```","quesType":"fill","ans":"false"},
  {"ques":"Output?\n```go\nfmt.Println(\"Hello\" == \"hello\")\n```","quesType":"fill","ans":"false"},
  {"ques":"Output?\n```go\nfmt.Println(5*5)\n```","quesType":"fill","ans":"25"},
  {"ques":"Output?\n```go\nfmt.Println(strings.Join([]string{\"a\",\"b\"},\"-\"))\n```","quesType":"fill","ans":"a-b"},
  {"ques":"Output?\n```go\nfmt.Println(len(\"\"))\n```","quesType":"fill","ans":"0"},
  {"ques":"Output?\n```go\nfmt.Println([]byte(\"Hi\"))\n```","quesType":"fill","ans":"[72 105]"},
  {"ques":"Output?\n```go\nfmt.Println(1<<2 | 1)\n```","quesType":"fill","ans":"5"},
  {"ques":"Output?\n```go\nfmt.Println(1<<1 & 3)\n```","quesType":"fill","ans":"2"},
  {"ques":"Output?\n```go\nfmt.Println(1<<1 &^ 1)\n```","quesType":"fill","ans":"2"},
  {
    "ques": "Which statement about slices is true?",
    "quesType": "mcq",
    "op1": "Slices own the array",
    "op2": "Slices copy the array",
    "op3": "Slices reference an array",
    "op4": "Slices are arrays",
    "ans": "Slices reference an array"
  },
  {
    "ques": "Which triggers panic?",
    "quesType": "mcq",
    "op1": "Index out of range",
    "op2": "Nil map write",
    "op3": "Divide by zero",
    "op4": "All",
    "ans": "All"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(strings.Repeat(\"go\", 2))\n```",
    "quesType": "mcq",
    "op1": "gogo",
    "op2": "go",
    "op3": "gogogo",
    "op4": "error",
    "ans": "gogo"
  },
  {
    "ques": "Which package is used for HTTP?",
    "quesType": "mcq",
    "op1": "os",
    "op2": "net/http",
    "op3": "fmt",
    "op4": "time",
    "ans": "net/http"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(\"a\" + \"b\" + \"c\")\n```",
    "quesType": "mcq",
    "op1": "abc",
    "op2": "ab",
    "op3": "bc",
    "op4": "a b c",
    "ans": "abc"
  },
  {
    "ques": "Which type implements io.Reader?",
    "quesType": "mcq",
    "op1": "*bytes.Buffer",
    "op2": "*os.File",
    "op3": "strings.Reader",
    "op4": "all",
    "ans": "all"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(len(map[int]int{1:1,2:2}))\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "1",
    "op3": "0",
    "op4": "panic",
    "ans": "2"
  },
  {
    "ques": "Which is thread-safe?",
    "quesType": "mcq",
    "op1": "map",
    "op2": "slice",
    "op3": "channel",
    "op4": "pointer",
    "ans": "channel"
  },
  {
    "ques": "Which triggers deadlock?",
    "quesType": "mcq",
    "op1": "Reading from closed channel",
    "op2": "Sending to nil channel",
    "op3": "Closing closed channel",
    "op4": "None",
    "ans": "Sending to nil channel"
  },
  {
    "ques": "Which is true about interface{}?",
    "quesType": "mcq",
    "op1": "Empty interface",
    "op2": "Holds any type",
    "op3": "Zero value nil",
    "op4": "All",
    "ans": "All"
  },
  {
    "ques": "Which has method set?",
    "quesType": "mcq",
    "op1": "struct",
    "op2": "pointer receiver",
    "op3": "interface",
    "op4": "all",
    "ans": "all"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(5 << 1)\n```",
    "quesType": "mcq",
    "op1": "10",
    "op2": "5",
    "op3": "2",
    "op4": "1",
    "ans": "10"
  },
  {
    "ques": "Which operator is bitwise AND?",
    "quesType": "mcq",
    "op1": "|",
    "op2": "&",
    "op3": "^",
    "op4": "&^",
    "ans": "&"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(strings.HasPrefix(\"golang\", \"go\"))\n```",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "error",
    "op4": "nil",
    "ans": "true"
  },
  {
    "ques": "Which is true for defer?",
    "quesType": "mcq",
    "op1": "Executes immediately",
    "op2": "Executes last in LIFO",
    "op3": "Executes before panic",
    "op4": "Never runs",
    "ans": "Executes last in LIFO"
  },
  {
    "ques": "Which can have nil value?",
    "quesType": "mcq",
    "op1": "map",
    "op2": "slice",
    "op3": "chan",
    "op4": "all",
    "ans": "all"
  },
  {
    "ques": "Which is used for sorting?",
    "quesType": "mcq",
    "op1": "fmt",
    "op2": "strings",
    "op3": "sort",
    "op4": "strconv",
    "ans": "sort"
  },
  {
    "ques": "Which is not keyword?",
    "quesType": "mcq",
    "op1": "func",
    "op2": "chan",
    "op3": "map",
    "op4": "append",
    "ans": "append"
  },
  {
    "ques": "Which stops goroutine?",
    "quesType": "mcq",
    "op1": "return",
    "op2": "break",
    "op3": "panic",
    "op4": "all",
    "ans": "all"
  },
  {
    "ques": "Which is true about make?",
    "quesType": "mcq",
    "op1": "Returns pointer",
    "op2": "Allocates slice/map/chan",
    "op3": "Calls new",
    "op4": "Runs runtime.GC",
    "ans": "Allocates slice/map/chan"
  },
  {
    "ques": "Which is immutable?",
    "quesType": "mcq",
    "op1": "string",
    "op2": "slice",
    "op3": "map",
    "op4": "chan",
    "ans": "string"
  },
  {
    "ques": "Which is true about rune?",
    "quesType": "mcq",
    "op1": "alias for int32",
    "op2": "represents Unicode",
    "op3": "single char",
    "op4": "all",
    "ans": "all"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(3 & 2)\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "3",
    "op3": "1",
    "op4": "0",
    "ans": "2"
  },
  {
    "ques": "Which is built-in constant?",
    "quesType": "mcq",
    "op1": "true",
    "op2": "false",
    "op3": "iota",
    "op4": "all",
    "ans": "all"
  },
  {
    "ques": "Which controls concurrency?",
    "quesType": "mcq",
    "op1": "goroutine",
    "op2": "channel",
    "op3": "select",
    "op4": "all",
    "ans": "all"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(5 / 2)\n```",
    "quesType": "mcq",
    "op1": "2",
    "op2": "2.5",
    "op3": "2.0",
    "op4": "3",
    "ans": "2"
  },
  {
    "ques": "Which is true for constants?",
    "quesType": "mcq",
    "op1": "Cannot change",
    "op2": "Must be initialized",
    "op3": "Typed or untyped",
    "op4": "all",
    "ans": "all"
  },
  {
    "ques": "Output?\n```go\nfmt.Println(\"go\" + \"lang\")\n```",
    "quesType": "mcq",
    "op1": "golang",
    "op2": "go lang",
    "op3": "g o l a n g",
    "op4": "error",
    "ans": "golang"
  },
  {
    "ques": "Which causes data race?",
    "quesType": "mcq",
    "op1": "Map writes without lock",
    "op2": "Shared var no sync",
    "op3": "Unsynchronized slices",
    "op4": "all",
    "ans": "all"
  },
  {
    "ques": "Which package for SHA256?",
    "quesType": "mcq",
    "op1": "crypto/sha256",
    "op2": "crypto/md5",
    "op3": "crypto/rand",
    "op4": "hash/fnv",
    "ans": "crypto/sha256"
  },
   {"ques":"Output?\n```go\nfmt.Println(2 << 2)\n```","quesType":"fill","ans":"8"},
  {"ques":"Zero value of int is _____.","quesType":"fill","ans":"0"},
  {"ques":"Output?\n```go\nfmt.Println(\"abc\"[0])\n```","quesType":"fill","ans":"97"},
  {"ques":"Function to parse int: _____.","quesType":"fill","ans":"strconv.Atoi"},
  {"ques":"Output?\n```go\nfmt.Println(strings.TrimSpace(\" go \"))\n```","quesType":"fill","ans":"go"},
  {"ques":"Output?\n```go\nfmt.Println(strings.ToTitle(\"go\"))\n```","quesType":"fill","ans":"GO"},
  {"ques":"Output?\n```go\nfmt.Println(1.0/2)\n```","quesType":"fill","ans":"0.5"},
  {"ques":"Output?\n```go\nfmt.Println(float64(1)/2)\n```","quesType":"fill","ans":"0.5"},
  {"ques":"Output?\n```go\nfmt.Println(reflect.TypeOf([]int{}).Kind())\n```","quesType":"fill","ans":"slice"},
  {"ques":"Output?\n```go\nfmt.Println(cap([]int{1,2,3}))\n```","quesType":"fill","ans":"3"},
  {"ques":"Output?\n```go\nfmt.Println(2 | 1)\n```","quesType":"fill","ans":"3"},
  {"ques":"Output?\n```go\nfmt.Println(4 & 1)\n```","quesType":"fill","ans":"0"},
  {"ques":"Output?\n```go\nfmt.Println(5 ^ 2)\n```","quesType":"fill","ans":"7"},
  {"ques":"Output?\n```go\nfmt.Println(6 &^ 2)\n```","quesType":"fill","ans":"4"},
  {"ques":"Output?\n```go\nfmt.Println(time.Now().Year() > 2000)\n```","quesType":"fill","ans":"true"},
  {"ques":"Output?\n```go\nfmt.Println(len(\"🧡\"))\n```","quesType":"fill","ans":"4"},
  {"ques":"Output?\n```go\nfmt.Println(strings.HasSuffix(\"golang\",\"lang\"))\n```","quesType":"fill","ans":"true"},
  {"ques":"Output?\n```go\nfmt.Println(\"hi\" == \"Hi\")\n```","quesType":"fill","ans":"false"},
  {"ques":"Output?\n```go\nfmt.Println(4*4)\n```","quesType":"fill","ans":"16"},
  {"ques":"Output?\n```go\nfmt.Println(strings.Join([]string{\"x\",\"y\"},\":\"))\n```","quesType":"fill","ans":"x:y"},
  {"ques":"Output?\n```go\nfmt.Println(len(\"abc\"))\n```","quesType":"fill","ans":"3"},
  {"ques":"Output?\n```go\nfmt.Println([]byte(\"Go\"))\n```","quesType":"fill","ans":"[71 111]"},
  {"ques":"Output?\n```go\nfmt.Println(2<<1 | 1)\n```","quesType":"fill","ans":"5"},
  {"ques":"Output?\n```go\nfmt.Println(2<<1 & 3)\n```","quesType":"fill","ans":"2"},
  {"ques":"Output?\n```go\nfmt.Println(2<<1 &^ 1)\n```","quesType":"fill","ans":"2"},
  {"ques":"Output?\n```go\nfmt.Println(runtime.NumCPU() > 0)\n```","quesType":"fill","ans":"true"},
  {"ques":"Output?\n```go\nfmt.Println(len(make([]int, 0, 5)))\n```","quesType":"fill","ans":"0"},
  {"ques":"Output?\n```go\nfmt.Println(cap(make([]int, 0, 5)))\n```","quesType":"fill","ans":"5"},
  {"ques":"Output?\n```go\nfmt.Println(10 % 3)\n```","quesType":"fill","ans":"1"},
  {"ques":"Output?\n```go\nfmt.Println(10 * 2)\n```","quesType":"fill","ans":"20"},
  

]

let goIncorrectAnswers = [];

let goTimerId = "";
let goSkip = document.getElementById("goSkip");
let codinggoQues = document.getElementById("codinggoQues");
let mcqgo = document.getElementById("mcqgo");
let goQuestionNumber = document.getElementById("goQuestionNumber");
let goQuestionCount = 2;
let goScore = 0;
let goScoreDisplay = document.getElementById("goScoreDisplay");
let goScoreShow = document.getElementById("goScoreShow");
let goSkip2 = document.getElementById("goSkip2");

let goFillAns = document.getElementById("goFillAns");
let goStatus1 = document.getElementById("goStatus1");
let goStatus2 = document.getElementById("goStatus2");
let goStatus3 = document.getElementById("goStatus3");
let goCheckFill = document.getElementById("goCheckFill");

let codingResultgo = document.getElementById("codingResultgo");

let goIncorrectAnswersDisplay = document.getElementById("goIncorrectAnswersDisplay");
let goScoreBelow70 = document.getElementById("goScoreBelow70");
let goScore100 = document.getElementById("goScore100");

let goResult1 = document.getElementById("goResult1");
let goResult2 = document.getElementById("goResult2");
let goResult3 = document.getElementById("goResult3");
let goResult4 = document.getElementById("goResult4");
let goResult5 = document.getElementById("goResult5");
let goBg1 = document.getElementById("goBg1");

function codinggoStart(){
codinggoHide.classList.add("d-none");
codinggoShow.classList.remove("d-none");

let fillBlankgo = document.getElementById("fillBlankgo");
let op1go = document.getElementById("op1go");
let op2go = document.getElementById("op2go");
let op3go = document.getElementById("op3go");
let op4go = document.getElementById("op4go");

let goFillAns = document.getElementById("goFillAns");
let goStatus1 = document.getElementById("goStatus1");
let goStatus2 = document.getElementById("goStatus2");
let goStatus3 = document.getElementById("goStatus3");
let goCheckFill = document.getElementById("goCheckFill");

goFillAns.disabled = false;
goStatus1.classList.remove("d-none");
goStatus2.classList.add("d-none");
goStatus3.classList.add("d-none");
goFillAns.value = "";
goSkip2.textContent = "Skip";
goSkip2.style.backgroundColor = "orange";
goSkip2.style.borderColor = "orange";

goSkip.textContent = "Skip";
goSkip.style.backgroundColor = "orange";
goSkip.style.borderColor = "orange";
goScoreShow.textContent = "";
goTimer.style.color = "black";

if (goLevel === 1) {
  let goRandom = Math.floor(Math.random() * codinggo1Arr.length);
  let y = codinggo1Arr[goRandom];
  goTimer.textContent = "20";
  goTime = 20;

  goTimerId = setInterval(function () {
    goTime = goTime - 1;
    if (goTime == 0) {
      clearInterval(goTimerId);
      goQuestionNumber.textContent = "Question:" + goQuestionCount + "/10";
      goQuestionCount = goQuestionCount + 1;
      goTime = 20;
      codinggoStart();
    }
    if (goTime <= 5) {
      goTimer.style.color = "red";
      goTimer.textContent = goTime;
    } else {
      goTimer.textContent = goTime;
    }
  }, 1000);

  if (goQuestionCount == 12) {
    clearInterval(goTimerId);
    mcqgo.classList.add("d-none");
    document.getElementById("goScoreEnd").textContent = goScoreDisplay.textContent;
    fillBlankgo.classList.add("d-none");
    codinggoShow.classList.add("d-none");
    codingResultgo.classList.remove("d-none");

    if (goScore < 70) {
      goScoreBelow70.classList.remove("d-none");
      goScore100.classList.add("d-none");
      sectionCodinggo.classList.add("back15");

      goResult1.textContent = "Test finished!!";
      goResult2.textContent = "😓 Oops! Not quite right.";
      goResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      goResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      goIncorrectAnswersDisplay.appendChild(h2);

      for (let z of goIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        goIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (goScore < 100) {
      goScoreBelow70.classList.remove("d-none");
      goScore100.classList.add("d-none");
      sectionCodinggo.classList.add("back15");

      goResult1.textContent = "Test finished!!";
      goResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      goResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      goResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      goIncorrectAnswersDisplay.appendChild(h2);

      for (let z of goIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        goIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (goScore === 100) {
      document.getElementById("sectionCodinggo").classList.add("back14");
      goScore100.classList.remove("d-none");
      goScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqgo.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinggoQues.innerHTML = formattedQuestion;

    fillBlankgo.classList.add("d-none");
    op1go.textContent = y.op1;
    op2go.textContent = y.op2;
    op3go.textContent = y.op3;
    op4go.textContent = y.op4;

    const allOps = [op1go, op2go, op3go, op4go];
    allOps.forEach((op, i) => {
      op.onclick = function () {
        allOps.forEach(o => (o.disabled = true));
        clearInterval(goTimerId);
        goTime = 20;

        if (op.textContent === y.ans) {
          op.style.backgroundColor = "green";
          goScore += 10;
          goScoreShow.textContent = "+10";
          goScoreShow.style.color = "green";
        } else {
          op.style.backgroundColor = "red";
          goScore -= 5;
          goScoreShow.textContent = "-5";
          goScoreShow.style.color = "red";
          let wrong_answer = { ques: y.ques, correct: y.ans, wrong: op.textContent };
          goIncorrectAnswers.push(wrong_answer);
        }

        goScoreDisplay.textContent = "Score: " + goScore + "/100";

        goSkip.textContent = "Next";
        goSkip.style.backgroundColor = "#23ebdd";
        goSkip.style.borderColor = "#23ebdd";

        goSkip.onclick = function () {
          goQuestionNumber.textContent = "Question:" + goQuestionCount + "/10";
          goQuestionCount += 1;
          allOps.forEach(o => {
            o.disabled = false;
            o.style.backgroundColor = "white";
          });
          codinggoStart();
        };
      };
    });

    goSkip.onclick = function () {
      clearInterval(goTimerId);
      goTime = 20;
      goQuestionNumber.textContent = "Question:" + goQuestionCount + "/10";
      goQuestionCount += 1;
      allOps.forEach(o => {
        o.disabled = false;
        o.style.backgroundColor = "white";
      });
      let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
      goIncorrectAnswers.push(wrong_answer);
      codinggoStart();
    };
  } 
  else {
    mcqgo.classList.add("d-none");
    fillBlankgo.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinggoQues.innerHTML = formattedQuestion;

    goCheckFill.onclick = function () {
      clearInterval(goTimerId);
      goCheckFill.disabled = false;
      goSkip2.textContent = "Next";
      goSkip2.style.backgroundColor = "#23ebdd";
      goSkip2.style.borderColor = "#23ebdd";
      goFillAns.disabled = true;

      if (goFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        goStatus1.classList.add("d-none");
        goStatus2.classList.remove("d-none");

        goScore += 10;
        goScoreShow.textContent = "+10";
        goScoreShow.style.color = "green";
      } else {
        goStatus1.classList.add("d-none");
        goStatus3.classList.remove("d-none");

        goScore -= 5;
        goScoreShow.textContent = "-5";
        goScoreShow.style.color = "red";

        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: goFillAns.value };
        goIncorrectAnswers.push(wrong_answer);
      }

      goScoreDisplay.textContent = "Score: " + goScore + "/100";
    };

    goSkip2.onclick = function () {
      if (goFillAns.value === "") {
        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
        goIncorrectAnswers.push(wrong_answer);
      }
      clearInterval(goTimerId);
      goTime = 20;
      goQuestionNumber.textContent = "Question:" + goQuestionCount + "/10";
      goQuestionCount += 1;
      codinggoStart();
    };
  }
}
else if (goLevel === 2) {
  let goRandom = Math.floor(Math.random() * codinggo2Arr.length);
  let y = codinggo2Arr[goRandom];
  goTimer.textContent = "25";
  goTime = 25;

  goTimerId = setInterval(function () {
    goTime = goTime - 1;
    if (goTime == 0) {
      clearInterval(goTimerId);
      goQuestionNumber.textContent = "Question:" + goQuestionCount + "/10";
      goQuestionCount = goQuestionCount + 1;
      goTime = 25;
      codinggoStart();
    }
    if (goTime <= 5) {
      goTimer.style.color = "red";
      goTimer.textContent = goTime;
    } else {
      goTimer.textContent = goTime;
    }
  }, 1000);

  if (goQuestionCount == 12) {
    clearInterval(goTimerId);
    mcqgo.classList.add("d-none");
    document.getElementById("goScoreEnd").textContent = goScoreDisplay.textContent;
    fillBlankgo.classList.add("d-none");
    codinggoShow.classList.add("d-none");
    codingResultgo.classList.remove("d-none");

    if (goScore < 70) {
      goScoreBelow70.classList.remove("d-none");
      goScore100.classList.add("d-none");
      sectionCodinggo.classList.add("back15");

      goResult1.textContent = "Test finished!!";
      goResult2.textContent = "😓 Oops! Not quite right.";
      goResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      goResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      goIncorrectAnswersDisplay.appendChild(h2);

      for (let z of goIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        goIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (goScore < 100) {
      goScoreBelow70.classList.remove("d-none");
      goScore100.classList.add("d-none");
      sectionCodinggo.classList.add("back15");

      goResult1.textContent = "Test finished!!";
      goResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      goResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      goResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      goIncorrectAnswersDisplay.appendChild(h2);

      for (let z of goIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        goIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (goScore === 100) {
      document.getElementById("sectionCodinggo").classList.add("back14");
      goScore100.classList.remove("d-none");
      goScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqgo.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinggoQues.innerHTML = formattedQuestion;
    fillBlankgo.classList.add("d-none");
    op1go.textContent = y.op1;
    op2go.textContent = y.op2;
    op3go.textContent = y.op3;
    op4go.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(goTimerId);
      goTime = 25;
      goSkip.textContent = "Next";
      goSkip.style.backgroundColor = "#23ebdd";
      goSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        goScore += 10;
        goScoreShow.textContent = "+10";
        goScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        goScore -= 5;
        goScoreShow.textContent = "-5";
        goScoreShow.style.color = "red";
        goIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      goScoreDisplay.textContent = "Score: " + goScore + "/100";
    }

    op1go.onclick = () => handleOptionClick(op1go, [op2go, op3go, op4go]);
    op2go.onclick = () => handleOptionClick(op2go, [op1go, op3go, op4go]);
    op3go.onclick = () => handleOptionClick(op3go, [op1go, op2go, op4go]);
    op4go.onclick = () => handleOptionClick(op4go, [op1go, op2go, op3go]);

    goSkip.onclick = function () {
      clearInterval(goTimerId);
      goTime = 25;
      goQuestionNumber.textContent = "Question:" + goQuestionCount + "/10";
      goQuestionCount++;
      [op1go, op2go, op3go, op4go].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      goIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codinggoStart();
    };
  }
  else {
    mcqgo.classList.add("d-none");
    fillBlankgo.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinggoQues.innerHTML = formattedQuestion;

    goCheckFill.disabled = false;
    goFillAns.disabled = false;
    goFillAns.value = "";
    goStatus1.classList.remove("d-none");
    goStatus2.classList.add("d-none");
    goStatus3.classList.add("d-none");
    goScoreShow.textContent = "";

    goCheckFill.onclick = function () {
      clearInterval(goTimerId);
      goCheckFill.disabled = true;
      goSkip2.textContent = "Next";
      goSkip2.style.backgroundColor = "#23ebdd";
      goSkip2.style.borderColor = "#23ebdd";
      goFillAns.disabled = true;

      if (goFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        goStatus1.classList.add("d-none");
        goStatus2.classList.remove("d-none");
        goScore += 10;
        goScoreShow.textContent = "+10";
        goScoreShow.style.color = "green";
      } else {
        goStatus1.classList.add("d-none");
        goStatus3.classList.remove("d-none");
        goScore -= 5;
        goScoreShow.textContent = "-5";
        goScoreShow.style.color = "red";
        goIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: goFillAns.value });
      }
      goScoreDisplay.textContent = "Score: " + goScore + "/100";
    };

    goSkip2.onclick = function () {
      if (goFillAns.value === "") {
        goIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      }
      clearInterval(goTimerId);
      goTime = 25;
      goQuestionNumber.textContent = "Question:" + goQuestionCount + "/10";
      goQuestionCount++;
      codinggoStart();
    };
  }
}
else if (goLevel === 3) {
  let goRandom = Math.floor(Math.random() * codinggo3Arr.length);
  let y = codinggo3Arr[goRandom];
  goTimer.textContent = "30";
  goTime = 30;

  goTimerId = setInterval(function () {
    goTime = goTime - 1;
    if (goTime == 0) {
      clearInterval(goTimerId);
      goQuestionNumber.textContent = "Question:" + goQuestionCount + "/10";
      goQuestionCount = goQuestionCount + 1;
      goTime = 30;
      codinggoStart();
    }
    if (goTime <= 5) {
      goTimer.style.color = "red";
      goTimer.textContent = goTime;
    } else {
      goTimer.textContent = goTime;
    }
  }, 1000);

  if (goQuestionCount == 12) {
    clearInterval(goTimerId);
    mcqgo.classList.add("d-none");
    document.getElementById("goScoreEnd").textContent = goScoreDisplay.textContent;
    fillBlankgo.classList.add("d-none");
    codinggoShow.classList.add("d-none");
    codingResultgo.classList.remove("d-none");

    if (goScore < 70) {
      goScoreBelow70.classList.remove("d-none");
      goScore100.classList.add("d-none");
      sectionCodinggo.classList.add("back15");

      goResult1.textContent = "Test finished!!";
      goResult2.textContent = "😓 Oops! Not quite right.";
      goResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      goResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      goIncorrectAnswersDisplay.appendChild(h2);

      for (let z of goIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        goIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (goScore < 100) {
      goScoreBelow70.classList.remove("d-none");
      goScore100.classList.add("d-none");
      sectionCodinggo.classList.add("back15");

      goResult1.textContent = "Test finished!!";
      goResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      goResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      goResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      goIncorrectAnswersDisplay.appendChild(h2);

      for (let z of goIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        goIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (goScore === 100) {
      document.getElementById("sectionCodinggo").classList.add("back14");
      goScore100.classList.remove("d-none");
      goScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqgo.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinggoQues.innerHTML = formattedQuestion;
    fillBlankgo.classList.add("d-none");
    op1go.textContent = y.op1;
    op2go.textContent = y.op2;
    op3go.textContent = y.op3;
    op4go.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(goTimerId);
      goTime = 30;
      goSkip.textContent = "Next";
      goSkip.style.backgroundColor = "#23ebdd";
      goSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        goScore += 10;
        goScoreShow.textContent = "+10";
        goScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        goScore -= 5;
        goScoreShow.textContent = "-5";
        goScoreShow.style.color = "red";
        goIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      goScoreDisplay.textContent = "Score: " + goScore + "/100";
    }

    op1go.onclick = () => handleOptionClick(op1go, [op2go, op3go, op4go]);
    op2go.onclick = () => handleOptionClick(op2go, [op1go, op3go, op4go]);
    op3go.onclick = () => handleOptionClick(op3go, [op1go, op2go, op4go]);
    op4go.onclick = () => handleOptionClick(op4go, [op1go, op2go, op3go]);

    goSkip.onclick = function () {
      clearInterval(goTimerId);
      goTime = 30;
      goQuestionNumber.textContent = "Question:" + goQuestionCount + "/10";
      goQuestionCount++;
      [op1go, op2go, op3go, op4go].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      goIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codinggoStart();
    };
  }
  else {
    mcqgo.classList.add("d-none");
    fillBlankgo.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinggoQues.innerHTML = formattedQuestion;

    goCheckFill.disabled = false;
    goFillAns.disabled = false;
    goFillAns.value = "";
    goStatus1.classList.remove("d-none");
    goStatus2.classList.add("d-none");
    goStatus3.classList.add("d-none");
    goScoreShow.textContent = "";

    goCheckFill.onclick = function () {
      clearInterval(goTimerId);
      goCheckFill.disabled = true;
      goSkip2.textContent = "Next";
      goSkip2.style.backgroundColor = "#23ebdd";
      goSkip2.style.borderColor = "#23ebdd";
      goFillAns.disabled = true;

      if (goFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        goStatus1.classList.add("d-none");
        goStatus2.classList.remove("d-none");
        goScore += 10;
        goScoreShow.textContent = "+10";
        goScoreShow.style.color = "green";
      } else {
        goStatus1.classList.add("d-none");
        goStatus3.classList.remove("d-none");
        goScore -= 5;
        goScoreShow.textContent = "-5";
        goScoreShow.style.color = "red";
        goIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: goFillAns.value });
      }
      goScoreDisplay.textContent = "Score: " + goScore + "/100";
    };

    goSkip2.onclick = function () {
      if (goFillAns.value === "") {
        goIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      }
      clearInterval(goTimerId);
      goTime = 30;
      goQuestionNumber.textContent = "Question:" + goQuestionCount + "/10";
      goQuestionCount++;
      codinggoStart();
    };
  }
}


}
function resetCodinggo() {
  document.getElementById("codinggoShow").classList.add("d-none");
  document.getElementById("codingResultgo").classList.add("d-none");
  document.getElementById("codinggoHide").classList.remove("d-none");

  document.getElementById("goQuestionNumber").innerText = "Question: 1/10";
  document.getElementById("goScoreDisplay").innerText = "Score: 0/100";
  document.getElementById("goScoreShow").innerText = "";
  document.getElementById("goTimer").innerText = "00";
  document.getElementById("codinggoQues").innerText = "";

  document.getElementById("op1go").innerText = "option1";
  document.getElementById("op2go").innerText = "option2";
  document.getElementById("op3go").innerText = "option3";
  document.getElementById("op4go").innerText = "option4";

  goIncorrectAnswers = [];
  document.getElementById("goIncorrectAnswersDisplay").innerHTML = "";

  goScore100.classList.add("d-none");
  goScoreBelow70.classList.add("d-none");

  goResult1.textContent = "";
  goResult2.textContent = "";
  goResult3.src = "";
  goResult4.textContent = "";

  sectionCodinggo.classList.remove("back14");
  sectionCodinggo.classList.remove("back15");

  document.getElementById("goFillAns").value = "";
  document.getElementById("fillBlankgo").style.display = "none";
  document.getElementById("mcqgo").style.display = "block";

  document.getElementById("goStatus1").classList.remove("d-none");
  document.getElementById("goStatus2").classList.add("d-none");
  document.getElementById("goStatus3").classList.add("d-none");

  if (typeof goTimerId !== "undefined") {
    clearInterval(goTimerId);
  }
  goTime = 20;
  goQuestionCount = 2;
  goScore = 0;
}

function goResetLevel() {
  goButton1.disabled = false;
  goButton2.disabled = false;
  goButton3.disabled = false;
  goButton.classList.add("d-none");
  goIncorrectAnswers = [];
}


// html 

let htmlButton = document.getElementById("htmlButton");
let htmlButton1 = document.getElementById("htmlButton1");
let htmlButton2 = document.getElementById("htmlButton2");
let htmlButton3 = document.getElementById("htmlButton3");
let htmlLevel = 0;
let htmlCodingTest = document.getElementById("htmlCodingTest");
let htmlTimer = document.getElementById("htmlTimer");

htmlButton1.onclick = function () {
  htmlButton2.disabled = true;
  htmlButton3.disabled = true;
  htmlLevel = 1;

  htmlButton.classList.remove("d-none");
  htmlButton.classList.add("d-block");
};

htmlButton2.onclick = function () {
  htmlButton1.disabled = true;
  htmlButton3.disabled = true;
  htmlLevel = 2;

  htmlButton.classList.remove("d-none");
  htmlButton.classList.add("d-block");
};

htmlButton3.onclick = function () {
  htmlButton2.disabled = true;
  htmlButton1.disabled = true;
  htmlLevel = 3;

  htmlButton.classList.remove("d-none");
  htmlButton.classList.add("d-block");
};

let htmlTime = 0;

let codinghtmlShow = document.getElementById("codinghtmlShow");
let codinghtmlHide = document.getElementById("codinghtmlHide");
let codinghtmlBack = document.getElementById("codinghtmlBack");

codinghtmlBack.onclick = function () {
  codinghtmlShow.classList.add("d-none");
  codinghtmlHide.classList.remove("d-none");
};


let codinghtml1Arr=[
 
  {
    "ques": "What will be displayed?<br><br>&lt;blockquote&gt;Quote Here&lt;/blockquote&gt;",
    "quesType": "fill",
    "ans": "Quote Here"
  },
  {
    "ques": "How does this render in the browser?<br><br>&lt;h4&gt;Subheading&lt;/h4&gt;",
    "quesType": "fill",
    "ans": "Subheading"
  },
  {
    "ques": "What text will appear?<br><br>&lt;p&gt;Hello &amp; Welcome&lt;/p&gt;",
    "quesType": "fill",
    "ans": "Hello & Welcome"
  },
  {
    "ques": "Shown output?<br><br>&lt;abbr title='World Health Organization'&gt;WHO&lt;/abbr&gt;",
    "quesType": "fill",
    "ans": "WHO"
  },
  {
    "ques": "Visible result?<br><br>&lt;address&gt;123 Main St&lt;/address&gt;",
    "quesType": "fill",
    "ans": "123 Main St"
  },
  {
    "ques": "What do you see on screen?<br><br>&lt;cite&gt;Book Title&lt;/cite&gt;",
    "quesType": "fill",
    "ans": "Book Title"
  },
  {
    "ques": "Rendered text?<br><br>&lt;code&gt;print('Hi')&lt;/code&gt;",
    "quesType": "fill",
    "ans": "print('Hi')"
  },
  {
    "ques": "Result when loaded?<br><br>&lt;del&gt;Old Text&lt;/del&gt;",
    "quesType": "fill",
    "ans": "Old Text"
  },
  {
    "ques": "How will this appear?<br><br>&lt;ins&gt;New Text&lt;/ins&gt;",
    "quesType": "fill",
    "ans": "New Text"
  },
  {
    "ques": "What does this show?<br><br>&lt;q&gt;Short Quote&lt;/q&gt;",
    "quesType": "fill",
    "ans": "Short Quote"
  }
  ,
  
  {
    "ques": "What is displayed?<br><br>&lt;p&gt;Hello World&lt;/p&gt;",
    "quesType": "fill",
    "ans": "Hello World"
  },
  {
    "ques": "What appears on screen?<br><br>&lt;h1&gt;Heading One&lt;/h1&gt;",
    "quesType": "fill",
    "ans": "Heading One"
  },
  {
    "ques": "What will you see?<br><br>&lt;h2&gt;Subheading&lt;/h2&gt;",
    "quesType": "fill",
    "ans": "Subheading"
  },
  {
    "ques": "What does this output?<br><br>&lt;b&gt;Bold Text&lt;/b&gt;",
    "quesType": "fill",
    "ans": "Bold Text"
  },
  {
    "ques": "What is shown?<br><br>&lt;i&gt;Italic Text&lt;/i&gt;",
    "quesType": "fill",
    "ans": "Italic Text"
  },
  {
    "ques": "What appears?<br><br>&lt;u&gt;Underlined&lt;/u&gt;",
    "quesType": "fill",
    "ans": "Underlined"
  },
  {
    "ques": "What text shows?<br><br>&lt;small&gt;Small Text&lt;/small&gt;",
    "quesType": "fill",
    "ans": "Small Text"
  },
  {
    "ques": "What do you see?<br><br>&lt;mark&gt;Highlighted&lt;/mark&gt;",
    "quesType": "fill",
    "ans": "Highlighted"
  },
  {
    "ques": "Output on page?<br><br>&lt;strong&gt;Important&lt;/strong&gt;",
    "quesType": "fill",
    "ans": "Important"
  },
  {
    "ques": "What is rendered?<br><br>&lt;em&gt;Emphasized&lt;/em&gt;",
    "quesType": "fill",
    "ans": "Emphasized"
  },
  {
    "ques": "What will display?<br><br>&lt;code&gt;print('Hello')&lt;/code&gt;",
    "quesType": "fill",
    "ans": "print('Hello')"
  },
  {
    "ques": "What do you get?<br><br>&lt;pre&gt;Line 1\nLine 2&lt;/pre&gt;",
    "quesType": "fill",
    "ans": "Line 1\nLine 2"
  },
  {
    "ques": "What text appears?<br><br>&lt;abbr title='HyperText Markup Language'&gt;HTML&lt;/abbr&gt;",
    "quesType": "fill",
    "ans": "HTML"
  },
  {
    "ques": "What is shown?<br><br>&lt;cite&gt;A Book&lt;/cite&gt;",
    "quesType": "fill",
    "ans": "A Book"
  },
  {
    "ques": "Visible content?<br><br>&lt;blockquote&gt;A Quote&lt;/blockquote&gt;",
    "quesType": "fill",
    "ans": "A Quote"
  },
  {
    "ques": "What shows up?<br><br>&lt;q&gt;Inline Quote&lt;/q&gt;",
    "quesType": "fill",
    "ans": "Inline Quote"
  },
  {
    "ques": "What is displayed?<br><br>&lt;del&gt;Deleted&lt;/del&gt;",
    "quesType": "fill",
    "ans": "Deleted"
  },
  {
    "ques": "What will appear?<br><br>&lt;ins&gt;Inserted&lt;/ins&gt;",
    "quesType": "fill",
    "ans": "Inserted"
  },
  {
    "ques": "What do you see?<br><br>&lt;sup&gt;2&lt;/sup&gt;",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "What is printed?<br><br>&lt;sub&gt;2&lt;/sub&gt;",
    "quesType": "fill",
    "ans": "2"
  }
  ,
  {
    "ques": "Which tag is used for the largest heading?",
    "quesType": "fill",
    "ans": "<h1>"
  },
  {
    "ques": "Which tag creates a paragraph?",
    "quesType": "fill",
    "ans": "<p>"
  },
  {
    "ques": "Which tag inserts a line break?",
    "quesType": "fill",
    "ans": "<br>"
  },
  {
    "ques": "Which tag adds an image?",
    "quesType": "fill",
    "ans": "<img>"
  },
  {
    "ques": "Which tag creates a link?",
    "quesType": "fill",
    "ans": "<a>"
  },
  {
    "ques": "Which tag creates an ordered list?",
    "quesType": "fill",
    "ans": "<ol>"
  },
  {
    "ques": "Which tag creates a list item?",
    "quesType": "fill",
    "ans": "<li>"
  },
  {
    "ques": "Which tag creates a table?",
    "quesType": "fill",
    "ans": "<table>"
  },
  {
    "ques": "Which tag creates a table row?",
    "quesType": "fill",
    "ans": "<tr>"
  },
  {
    "ques": "Which tag creates a table data cell?",
    "quesType": "fill",
    "ans": "<td>"
  },
  {
    "ques": "Which tag defines the document's title?",
    "quesType": "fill",
    "ans": "<title>"
  },
  {
    "ques": "Which tag contains metadata?",
    "quesType": "fill",
    "ans": "<head>"
  },
  {
    "ques": "Which tag defines the main content?",
    "quesType": "fill",
    "ans": "<body>"
  },
  {
    "ques": "Which tag is used for bold text?",
    "quesType": "fill",
    "ans": "<b>"
  },
  {
    "ques": "Which tag is used for italic text?",
    "quesType": "fill",
    "ans": "<i>"
  },
  {
    "ques": "Which tag is used for underlined text?",
    "quesType": "fill",
    "ans": "<u>"
  },
  {
    "ques": "Which tag creates a division or section?",
    "quesType": "fill",
    "ans": "<div>"
  },
  {
    "ques": "Which tag is for a span of inline content?",
    "quesType": "fill",
    "ans": "<span>"
  },
  {
    "ques": "Which tag adds a comment?",
    "quesType": "fill",
    "ans": "<!-- -->"
  },
  {
    "ques": "Which tag links an external stylesheet?",
    "quesType": "fill",
    "ans": "<link>"
  },
  {
    "ques": "Which tag defines a paragraph?",
    "quesType": "mcq",
    "op1": "<h1>",
    "op2": "<p>",
    "op3": "<br>",
    "op4": "<div>",
    "ans": "<p>"
  },
  {
    "ques": "Which tag is used for inserting an image?",
    "quesType": "mcq",
    "op1": "<link>",
    "op2": "<img>",
    "op3": "<a>",
    "op4": "<src>",
    "ans": "<img>"
  },
  {
    "ques": "Which tag creates a hyperlink?",
    "quesType": "mcq",
    "op1": "<p>",
    "op2": "<a>",
    "op3": "<link>",
    "op4": "<href>",
    "ans": "<a>"
  },
  {
    "ques": "Which tag is used for largest heading?",
    "quesType": "mcq",
    "op1": "<h6>",
    "op2": "<h3>",
    "op3": "<h1>",
    "op4": "<head>",
    "ans": "<h1>"
  },
  {
    "ques": "Which tag adds a line break?",
    "quesType": "mcq",
    "op1": "<lb>",
    "op2": "<break>",
    "op3": "<br>",
    "op4": "<hr>",
    "ans": "<br>"
  },
  {
    "ques": "Which tag inserts a horizontal line?",
    "quesType": "mcq",
    "op1": "<hr>",
    "op2": "<hl>",
    "op3": "<line>",
    "op4": "<br>",
    "ans": "<hr>"
  },
  {
    "ques": "Which is correct syntax for comments?",
    "quesType": "mcq",
    "op1": "// comment",
    "op2": "/* comment */",
    "op3": "<!-- comment -->",
    "op4": "# comment",
    "ans": "<!-- comment -->"
  },
  {
    "ques": "Which tag is used for bold text?",
    "quesType": "mcq",
    "op1": "<strong>",
    "op2": "<b>",
    "op3": "<em>",
    "op4": "<bold>",
    "ans": "<b>"
  },
  {
    "ques": "Which tag is used for italic text?",
    "quesType": "mcq",
    "op1": "<i>",
    "op2": "<em>",
    "op3": "<italic>",
    "op4": "<it>",
    "ans": "<i>"
  },
  {
    "ques": "Which tag shows underlined text?",
    "quesType": "mcq",
    "op1": "<mark>",
    "op2": "<ins>",
    "op3": "<u>",
    "op4": "<ul>",
    "ans": "<u>"
  },
  {
    "ques": "Which tag creates an unordered list?",
    "quesType": "mcq",
    "op1": "<ul>",
    "op2": "<ol>",
    "op3": "<li>",
    "op4": "<list>",
    "ans": "<ul>"
  },
  {
    "ques": "Which tag creates a list item?",
    "quesType": "mcq",
    "op1": "<li>",
    "op2": "<ul>",
    "op3": "<ol>",
    "op4": "<item>",
    "ans": "<li>"
  },
  {
    "ques": "Which tag defines the main document structure?",
    "quesType": "mcq",
    "op1": "<main>",
    "op2": "<body>",
    "op3": "<head>",
    "op4": "<html>",
    "ans": "<html>"
  },
  {
    "ques": "Which tag holds metadata?",
    "quesType": "mcq",
    "op1": "<meta>",
    "op2": "<head>",
    "op3": "<title>",
    "op4": "<body>",
    "ans": "<head>"
  },
  {
    "ques": "Which tag specifies the page title?",
    "quesType": "mcq",
    "op1": "<head>",
    "op2": "<title>",
    "op3": "<header>",
    "op4": "<h1>",
    "ans": "<title>"
  },
  {
    "ques": "Which tag makes bold text?<br><br>&lt;b&gt;Bold&lt;/b&gt;",
    "quesType": "mcq",
    "op1": "&lt;strong&gt;",
    "op2": "&lt;b&gt;",
    "op3": "&lt;em&gt;",
    "op4": "&lt;u&gt;",
    "ans": "<b>"
  },
  {
    "ques": "What is the output?<br><br>&lt;h2&gt;Heading 2&lt;/h2&gt;",
    "quesType": "mcq",
    "op1": "Heading2",
    "op2": "Heading 2",
    "op3": "&lt;h2&gt;",
    "op4": "H2",
    "ans": "Heading 2"
  },
  {
    "ques": "Which tag inserts a line break?<br><br>Example: Text1&lt;br&gt;Text2",
    "quesType": "mcq",
    "op1": "&lt;lb&gt;",
    "op2": "&lt;br&gt;",
    "op3": "&lt;line&gt;",
    "op4": "&lt;break&gt;",
    "ans": "<br>"
  },
  {
    "ques": "What is the output?<br><br>&lt;hr&gt; creates?",
    "quesType": "mcq",
    "op1": "Heading",
    "op2": "Horizontal line",
    "op3": "New paragraph",
    "op4": "Bold text",
    "ans": "Horizontal line"
  },
  {
    "ques": "Which tag is used for paragraph?<br><br>&lt;p&gt;Hello&lt;/p&gt;",
    "quesType": "mcq",
    "op1": "&lt;div&gt;",
    "op2": "&lt;span&gt;",
    "op3": "&lt;p&gt;",
    "op4": "&lt;h1&gt;",
    "ans": "<p>"
  },
  {
    "ques": "What does this display?<br><br>&lt;em&gt;Note&lt;/em&gt;",
    "quesType": "mcq",
    "op1": "Emphasized Note",
    "op2": "Note",
    "op3": "&lt;em&gt;",
    "op4": "None",
    "ans": "Note"
  },
  {
    "ques": "Which tag makes text italic?<br><br>&lt;i&gt;Italic&lt;/i&gt;",
    "quesType": "mcq",
    "op1": "&lt;em&gt;",
    "op2": "&lt;i&gt;",
    "op3": "&lt;strong&gt;",
    "op4": "&lt;u&gt;",
    "ans": "<i>"
  },
  {
    "ques": "What is the output?<br><br>&lt;u&gt;Underlined&lt;/u&gt;",
    "quesType": "mcq",
    "op1": "Underlined",
    "op2": "U",
    "op3": "Underline",
    "op4": "&lt;u&gt;",
    "ans": "Underlined"
  },
  {
    "ques": "Which tag adds a link?<br><br>&lt;a href='URL'&gt;Click&lt;/a&gt;",
    "quesType": "mcq",
    "op1": "&lt;link&gt;",
    "op2": "&lt;a&gt;",
    "op3": "&lt;url&gt;",
    "op4": "&lt;href&gt;",
    "ans": "<a>"
  },
  {
    "ques": "What is shown?<br><br>&lt;mark&gt;Highlight&lt;/mark&gt;",
    "quesType": "mcq",
    "op1": "Mark",
    "op2": "Highlight",
    "op3": "&lt;mark&gt;",
    "op4": "None",
    "ans": "Highlight"
  },
  {
    "ques": "Which creates an ordered list?<br><br>&lt;ol&gt;&lt;li&gt;One&lt;/li&gt;&lt;/ol&gt;",
    "quesType": "mcq",
    "op1": "&lt;ul&gt;",
    "op2": "&lt;ol&gt;",
    "op3": "&lt;li&gt;",
    "op4": "&lt;list&gt;",
    "ans": "<ol>"
  },
  {
    "ques": "What does this show?<br><br>&lt;abbr title='HyperText Markup Language'&gt;HTML&lt;/abbr&gt;",
    "quesType": "mcq",
    "op1": "HyperText Markup Language",
    "op2": "HTML",
    "op3": "abbr",
    "op4": "None",
    "ans": "HTML"
  },
  {
    "ques": "Which tag shows computer code?<br><br>&lt;code&gt;x=10&lt;/code&gt;",
    "quesType": "mcq",
    "op1": "&lt;var&gt;",
    "op2": "&lt;code&gt;",
    "op3": "&lt;kbd&gt;",
    "op4": "&lt;samp&gt;",
    "ans": "<code>"
  },
  {
    "ques": "What does this display?<br><br>&lt;samp&gt;Result&lt;/samp&gt;",
    "quesType": "mcq",
    "op1": "Result",
    "op2": "Samp",
    "op3": "&lt;samp&gt;",
    "op4": "None",
    "ans": "Result"
  },
  {
    "ques": "Visible text?<br><br>&lt;cite&gt;Book Name&lt;/cite&gt;",
    "quesType": "mcq",
    "op1": "Book Name",
    "op2": "Cite",
    "op3": "&lt;cite&gt;",
    "op4": "None",
    "ans": "Book Name"
  },
  {
    "ques": "Output for this?<br><br>&lt;del&gt;Wrong&lt;/del&gt;",
    "quesType": "mcq",
    "op1": "Wrong",
    "op2": "Del",
    "op3": "&lt;del&gt;",
    "op4": "None",
    "ans": "Wrong"
  },
  {
    "ques": "Which tag shows inserted text?<br><br>&lt;ins&gt;New&lt;/ins&gt;",
    "quesType": "mcq",
    "op1": "&lt;ins&gt;",
    "op2": "&lt;mark&gt;",
    "op3": "&lt;add&gt;",
    "op4": "&lt;new&gt;",
    "ans": "<ins>"
  },
  {
    "ques": "Which tag makes superscript?<br><br>&lt;sup&gt;2&lt;/sup&gt;",
    "quesType": "mcq",
    "op1": "&lt;sub&gt;",
    "op2": "&lt;super&gt;",
    "op3": "&lt;sup&gt;",
    "op4": "&lt;up&gt;",
    "ans": "<sup>"
  },
  {
    "ques": "What is the output?<br><br>&lt;sub&gt;2&lt;/sub&gt;",
    "quesType": "mcq",
    "op1": "2",
    "op2": "Sub",
    "op3": "&lt;sub&gt;",
    "op4": "None",
    "ans": "2"
  },
  {
    "ques": "What does this show?<br><br>&lt;var&gt;x&lt;/var&gt;",
    "quesType": "mcq",
    "op1": "Variable",
    "op2": "x",
    "op3": "Var",
    "op4": "None",
    "ans": "x"
  },
  {
    "ques": "What is displayed?<br><br>&lt;h1&gt;Hello&lt;/h1&gt;",
    "quesType": "fill",
    "ans": "Hello"
  },
  {
    "ques": "Visible output?<br><br>&lt;p&gt;Paragraph&lt;/p&gt;",
    "quesType": "fill",
    "ans": "Paragraph"
  },
  {
    "ques": "Which tag makes bold?<br><br>&lt;b&gt;Bold&lt;/b&gt;",
    "quesType": "fill",
    "ans": "<b>"
  },
  {
    "ques": "Output here?<br><br>&lt;i&gt;Italic&lt;/i&gt;",
    "quesType": "fill",
    "ans": "Italic"
  },
  {
    "ques": "Visible text?<br><br>&lt;u&gt;Underline&lt;/u&gt;",
    "quesType": "fill",
    "ans": "Underline"
  },
  {
    "ques": "What is displayed?<br><br>&lt;br&gt; breaks?",
    "quesType": "fill",
    "ans": "line"
  },
  {
    "ques": "Which tag highlights text?<br><br>&lt;mark&gt;Important&lt;/mark&gt;",
    "quesType": "fill",
    "ans": "<mark>"
  },
  {
    "ques": "Output?<br><br>&lt;abbr title='World Wide Web'&gt;WWW&lt;/abbr&gt;",
    "quesType": "fill",
    "ans": "WWW"
  },
  {
    "ques": "What shows here?<br><br>&lt;strong&gt;Strong&lt;/strong&gt;",
    "quesType": "fill",
    "ans": "Strong"
  },
  {
    "ques": "Visible output?<br><br>&lt;code&gt;print()&lt;/code&gt;",
    "quesType": "fill",
    "ans": "print()"
  },
  {
    "ques": "Output?<br><br>&lt;blockquote&gt;Quote&lt;/blockquote&gt;",
    "quesType": "fill",
    "ans": "Quote"
  },
  {
    "ques": "What does &lt;cite&gt; do?<br><br>&lt;cite&gt;Source&lt;/cite&gt;",
    "quesType": "fill",
    "ans": "Source"
  },
  {
    "ques": "Visible?<br><br>&lt;ins&gt;Added&lt;/ins&gt;",
    "quesType": "fill",
    "ans": "Added"
  },
  {
    "ques": "Output?<br><br>&lt;del&gt;Deleted&lt;/del&gt;",
    "quesType": "fill",
    "ans": "Deleted"
  },
  {
    "ques": "What is shown?<br><br>&lt;sup&gt;5&lt;/sup&gt;",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "What is shown?<br><br>&lt;sub&gt;2&lt;/sub&gt;",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "Visible text?<br><br>&lt;var&gt;y&lt;/var&gt;",
    "quesType": "fill",
    "ans": "y"
  },
  {
    "ques": "Output?<br><br>&lt;samp&gt;Done&lt;/samp&gt;",
    "quesType": "fill",
    "ans": "Done"
  },
  {
    "ques": "What is shown?<br><br>&lt;kbd&gt;Ctrl&lt;/kbd&gt;",
    "quesType": "fill",
    "ans": "Ctrl"
  },
  {
    "ques": "Output?<br><br>&lt;pre&gt;Keep Space&lt;/pre&gt;",
    "quesType": "fill",
    "ans": "Keep Space"
  },
  {
    "ques": "Which tag is used to create a main heading?<br>Example: &lt;h1&gt;Title&lt;/h1&gt;",
    "quesType": "mcq",
    "op1": "<head>",
    "op2": "<h1>",
    "op3": "<title>",
    "op4": "<p>",
    "ans": "<h1>"
  },
  {
    "ques": "What is displayed?<br><br>&lt;b&gt;Bold Text&lt;/b&gt;",
    "quesType": "mcq",
    "op1": "Bold Text",
    "op2": "b",
    "op3": "<b>",
    "op4": "None",
    "ans": "Bold Text"
  },
  {
    "ques": "Which tag creates a clickable link?<br>Example: &lt;a href='URL'&gt;Click&lt;/a&gt;",
    "quesType": "mcq",
    "op1": "<link>",
    "op2": "<url>",
    "op3": "<a>",
    "op4": "<href>",
    "ans": "<a>"
  },
  {
    "ques": "What does the &lt;br&gt; tag do?<br><br>",
    "quesType": "mcq",
    "op1": "Bold text",
    "op2": "Breaks line",
    "op3": "Creates list",
    "op4": "Adds image",
    "ans": "Breaks line"
  },
  {
    "ques": "What appears?<br><br>&lt;i&gt;Italic&lt;/i&gt;",
    "quesType": "mcq",
    "op1": "Italic",
    "op2": "<i>",
    "op3": "i",
    "op4": "None",
    "ans": "Italic"
  },
  {
    "ques": "Which tag inserts an image?<br>Example: &lt;img src='pic.jpg'&gt;",
    "quesType": "mcq",
    "op1": "<image>",
    "op2": "<pic>",
    "op3": "<src>",
    "op4": "<img>",
    "ans": "<img>"
  },
  {
    "ques": "What does &lt;hr&gt; create in HTML?<br><br>",
    "quesType": "mcq",
    "op1": "New heading",
    "op2": "Line break",
    "op3": "Horizontal line",
    "op4": "Bold text",
    "ans": "Horizontal line"
  },
  {
    "ques": "Which tag adds a comment?<br>Example: &lt;!-- Note --&gt;",
    "quesType": "mcq",
    "op1": "<cmt>",
    "op2": "<comment>",
    "op3": "<note>",
    "op4": "HTML comment",
    "ans": "HTML comment"
  },
  {
    "ques": "What is displayed?<br><br>&lt;u&gt;Underline&lt;/u&gt;",
    "quesType": "mcq",
    "op1": "Underline",
    "op2": "<u>",
    "op3": "u",
    "op4": "None",
    "ans": "Underline"
  },
  {
    "ques": "Which tag creates a list item?<br>Example: &lt;li&gt;One&lt;/li&gt;",
    "quesType": "mcq",
    "op1": "<list>",
    "op2": "<ul>",
    "op3": "<ol>",
    "op4": "<li>",
    "ans": "<li>"
  },
  {
    "ques": "Which tag defines a paragraph?<br><br>",
    "quesType": "mcq",
    "op1": "<p>",
    "op2": "<para>",
    "op3": "<h1>",
    "op4": "<br>",
    "ans": "<p>"
  },
  {
    "ques": "What is shown?<br><br>&lt;mark&gt;Highlight&lt;/mark&gt;",
    "quesType": "mcq",
    "op1": "Mark",
    "op2": "Highlight",
    "op3": "<mark>",
    "op4": "None",
    "ans": "Highlight"
  },
  {
    "ques": "Which tag makes emphasized text?<br><br>",
    "quesType": "mcq",
    "op1": "<i>",
    "op2": "<b>",
    "op3": "<em>",
    "op4": "<mark>",
    "ans": "<em>"
  },
  {
    "ques": "Output of this?<br><br>&lt;strong&gt;Note&lt;/strong&gt;",
    "quesType": "mcq",
    "op1": "Note",
    "op2": "<strong>",
    "op3": "Strong",
    "op4": "None",
    "ans": "Note"
  },
  {
    "ques": "What does &lt;title&gt; set?<br><br>",
    "quesType": "mcq",
    "op1": "Body content",
    "op2": "Meta tag",
    "op3": "Page title",
    "op4": "Paragraph",
    "ans": "Page title"
  },
  {
    "ques": "Which tag shows computer code?<br><br>&lt;code&gt;print()&lt;/code&gt;",
    "quesType": "mcq",
    "op1": "<var>",
    "op2": "<code>",
    "op3": "<kbd>",
    "op4": "<samp>",
    "ans": "<code>"
  },
  {
    "ques": "What is the output?<br><br>&lt;samp&gt;Sample&lt;/samp&gt;",
    "quesType": "mcq",
    "op1": "Sample",
    "op2": "<samp>",
    "op3": "Samp",
    "op4": "None",
    "ans": "Sample"
  },
  {
    "ques": "What is &lt;sup&gt; used for?<br><br>",
    "quesType": "mcq",
    "op1": "Subscript",
    "op2": "Underline",
    "op3": "Superscript",
    "op4": "Italic",
    "ans": "Superscript"
  },
  {
    "ques": "Which tag makes subscript text?<br><br>",
    "quesType": "mcq",
    "op1": "<sup>",
    "op2": "<sub>",
    "op3": "<var>",
    "op4": "<mark>",
    "ans": "<sub>"
  },
  {
    "ques": "Output?<br><br>&lt;var&gt;x&lt;/var&gt;",
    "quesType": "mcq",
    "op1": "x",
    "op2": "Var",
    "op3": "<var>",
    "op4": "None",
    "ans": "x"
  },
  {
    "ques": "What shows?<br><br>&lt;h2&gt;Subheading&lt;/h2&gt;",
    "quesType": "fill",
    "ans": "Subheading"
  },
  {
    "ques": "What tag is used for bold?<br><br>&lt;b&gt;Bold&lt;/b&gt;",
    "quesType": "fill",
    "ans": "<b>"
  },
  {
    "ques": "Visible output?<br><br>&lt;em&gt;Emphasis&lt;/em&gt;",
    "quesType": "fill",
    "ans": "Emphasis"
  },
  {
    "ques": "Which tag makes text italic?<br><br>&lt;i&gt;Word&lt;/i&gt;",
    "quesType": "fill",
    "ans": "<i>"
  },
  {
    "ques": "What is displayed?<br><br>&lt;u&gt;Under&lt;/u&gt;",
    "quesType": "fill",
    "ans": "Under"
  },
  {
    "ques": "Which tag for links?<br><br>&lt;a href='URL'&gt;Link&lt;/a&gt;",
    "quesType": "fill",
    "ans": "<a>"
  },
  {
    "ques": "Output?<br><br>&lt;mark&gt;Marked&lt;/mark&gt;",
    "quesType": "fill",
    "ans": "Marked"
  },
  {
    "ques": "What does this show?<br><br>&lt;strong&gt;Alert&lt;/strong&gt;",
    "quesType": "fill",
    "ans": "Alert"
  },
  {
    "ques": "Which tag adds meta info?<br><br>",
    "quesType": "fill",
    "ans": "<meta>"
  },
  {
    "ques": "Output here?<br><br>&lt;code&gt;print()&lt;/code&gt;",
    "quesType": "fill",
    "ans": "print()"
  },
  {
    "ques": "What appears?<br><br>&lt;samp&gt;Data&lt;/samp&gt;",
    "quesType": "fill",
    "ans": "Data"
  },
  {
    "ques": "Tag for keyboard input?<br><br>&lt;kbd&gt;Ctrl&lt;/kbd&gt;",
    "quesType": "fill",
    "ans": "<kbd>"
  },
  {
    "ques": "Output?<br><br>&lt;cite&gt;Title&lt;/cite&gt;",
    "quesType": "fill",
    "ans": "Title"
  },
  {
    "ques": "What shows?<br><br>&lt;del&gt;Old&lt;/del&gt;",
    "quesType": "fill",
    "ans": "Old"
  },
  {
    "ques": "What appears?<br><br>&lt;ins&gt;New&lt;/ins&gt;",
    "quesType": "fill",
    "ans": "New"
  },
  {
    "ques": "Which tag creates blockquote?<br><br>&lt;blockquote&gt;Line&lt;/blockquote&gt;",
    "quesType": "fill",
    "ans": "<blockquote>"
  },
  {
    "ques": "Visible text?<br><br>&lt;sup&gt;5&lt;/sup&gt;",
    "quesType": "fill",
    "ans": "5"
  },
  {
    "ques": "What is shown?<br><br>&lt;sub&gt;2&lt;/sub&gt;",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "Output?<br><br>&lt;var&gt;y&lt;/var&gt;",
    "quesType": "fill",
    "ans": "y"
  },
  {
    "ques": "Which tag sets page title?<br><br>&lt;title&gt;My Site&lt;/title&gt;",
    "quesType": "fill",
    "ans": "<title>"
  },
  {
    "ques": "Which tag creates the largest heading?<br><br>",
    "quesType": "mcq",
    "op1": "<h1>",
    "op2": "<h6>",
    "op3": "<head>",
    "op4": "<p>",
    "ans": "<h1>"
  },
  {
    "ques": "What will appear?<br><br>&lt;h3&gt;Title Here&lt;/h3&gt;",
    "quesType": "mcq",
    "op1": "Title",
    "op2": "Title Here",
    "op3": "<h3>",
    "op4": "h3",
    "ans": "Title Here"
  },
  {
    "ques": "Which tag shows emphasized text?<br><br>",
    "quesType": "mcq",
    "op1": "<i>",
    "op2": "<b>",
    "op3": "<em>",
    "op4": "<mark>",
    "ans": "<em>"
  },
  {
    "ques": "Output?<br><br>&lt;strong&gt;Important&lt;/strong&gt;",
    "quesType": "mcq",
    "op1": "Important",
    "op2": "<strong>",
    "op3": "strong",
    "op4": "None",
    "ans": "Important"
  },
  {
    "ques": "Which element breaks the line?<br><br>",
    "quesType": "mcq",
    "op1": "<hr>",
    "op2": "<br>",
    "op3": "<p>",
    "op4": "<div>",
    "ans": "<br>"
  },
  {
    "ques": "Which tag shows deleted text?<br><br>",
    "quesType": "mcq",
    "op1": "<ins>",
    "op2": "<mark>",
    "op3": "<del>",
    "op4": "<em>",
    "ans": "<del>"
  },
  {
    "ques": "Visible text?<br><br>&lt;ins&gt;Updated&lt;/ins&gt;",
    "quesType": "mcq",
    "op1": "Updated",
    "op2": "<ins>",
    "op3": "ins",
    "op4": "None",
    "ans": "Updated"
  },
  {
    "ques": "Which tag is used for keyboard input text?<br><br>",
    "quesType": "mcq",
    "op1": "<kbd>",
    "op2": "<code>",
    "op3": "<var>",
    "op4": "<samp>",
    "ans": "<kbd>"
  },
  {
    "ques": "What is shown?<br><br>&lt;var&gt;total&lt;/var&gt;",
    "quesType": "mcq",
    "op1": "var",
    "op2": "total",
    "op3": "<var>",
    "op4": "None",
    "ans": "total"
  },
  {
    "ques": "Which tag for block quotations?<br><br>",
    "quesType": "mcq",
    "op1": "<q>",
    "op2": "<blockquote>",
    "op3": "<quote>",
    "op4": "<cite>",
    "ans": "<blockquote>"
  },
  {
    "ques": "Output here?<br><br>&lt;abbr title='Cascading Style Sheets'&gt;CSS&lt;/abbr&gt;",
    "quesType": "mcq",
    "op1": "CSS",
    "op2": "Cascading",
    "op3": "abbr",
    "op4": "Sheets",
    "ans": "CSS"
  },
  {
    "ques": "Which tag keeps formatting as it is?<br><br>",
    "quesType": "mcq",
    "op1": "<pre>",
    "op2": "<code>",
    "op3": "<samp>",
    "op4": "<kbd>",
    "ans": "<pre>"
  },
  {
    "ques": "Output?<br><br>&lt;sup&gt;3&lt;/sup&gt;",
    "quesType": "mcq",
    "op1": "3",
    "op2": "<sup>",
    "op3": "Sup",
    "op4": "None",
    "ans": "3"
  },
  {
    "ques": "What does &lt;sub&gt; do?<br><br>",
    "quesType": "mcq",
    "op1": "Superscript",
    "op2": "Subscript",
    "op3": "Underline",
    "op4": "Italics",
    "ans": "Subscript"
  },
  {
    "ques": "Which tag defines metadata?<br><br>",
    "quesType": "mcq",
    "op1": "<meta>",
    "op2": "<head>",
    "op3": "<body>",
    "op4": "<title>",
    "ans": "<meta>"
  },
  {
    "ques": "What will show?<br><br>&lt;cite&gt;Book Title&lt;/cite&gt;",
    "quesType": "mcq",
    "op1": "Book Title",
    "op2": "Cite",
    "op3": "<cite>",
    "op4": "None",
    "ans": "Book Title"
  },
  {
    "ques": "Which tag is for short quotations?<br><br>",
    "quesType": "mcq",
    "op1": "<blockquote>",
    "op2": "<quote>",
    "op3": "<q>",
    "op4": "<cite>",
    "ans": "<q>"
  },
  {
    "ques": "Output?<br><br>&lt;samp&gt;Output Sample&lt;/samp&gt;",
    "quesType": "mcq",
    "op1": "Sample",
    "op2": "Output Sample",
    "op3": "Samp",
    "op4": "None",
    "ans": "Output Sample"
  },
  {
    "ques": "What is &lt;hr&gt; used for?<br><br>",
    "quesType": "mcq",
    "op1": "Paragraph",
    "op2": "Line break",
    "op3": "Horizontal line",
    "op4": "Heading",
    "ans": "Horizontal line"
  },
  {
    "ques": "Which tag makes highlighted text?<br><br>",
    "quesType": "mcq",
    "op1": "<ins>",
    "op2": "<mark>",
    "op3": "<em>",
    "op4": "<b>",
    "ans": "<mark>"
  },
  {
    "ques": "What appears?<br><br>&lt;h4&gt;Heading Four&lt;/h4&gt;",
    "quesType": "fill",
    "ans": "Heading Four"
  },
  {
    "ques": "What tag adds emphasis?<br><br>&lt;em&gt;Note&lt;/em&gt;",
    "quesType": "fill",
    "ans": "<em>"
  },
  {
    "ques": "Output?<br><br>&lt;strong&gt;Bold Strong&lt;/strong&gt;",
    "quesType": "fill",
    "ans": "Bold Strong"
  },
  {
    "ques": "Tag for inserted text?<br><br>&lt;ins&gt;Added&lt;/ins&gt;",
    "quesType": "fill",
    "ans": "<ins>"
  },
  {
    "ques": "Output visible?<br><br>&lt;del&gt;Removed&lt;/del&gt;",
    "quesType": "fill",
    "ans": "Removed"
  },
  {
    "ques": "What shows here?<br><br>&lt;mark&gt;Spotlight&lt;/mark&gt;",
    "quesType": "fill",
    "ans": "Spotlight"
  },
  {
    "ques": "Tag for keyboard keys?<br><br>&lt;kbd&gt;Shift&lt;/kbd&gt;",
    "quesType": "fill",
    "ans": "<kbd>"
  },
  {
    "ques": "What is visible?<br><br>&lt;var&gt;z&lt;/var&gt;",
    "quesType": "fill",
    "ans": "z"
  },
  {
    "ques": "Which tag for output sample?<br><br>&lt;samp&gt;Result&lt;/samp&gt;",
    "quesType": "fill",
    "ans": "<samp>"
  },
  {
    "ques": "Output here?<br><br>&lt;pre&gt;Keep Format&lt;/pre&gt;",
    "quesType": "fill",
    "ans": "Keep Format"
  },
  {
    "ques": "What is visible?<br><br>&lt;sup&gt;10&lt;/sup&gt;",
    "quesType": "fill",
    "ans": "10"
  },
  {
    "ques": "Subscript shows?<br><br>&lt;sub&gt;x&lt;/sub&gt;",
    "quesType": "fill",
    "ans": "x"
  },
  {
    "ques": "What does blockquote do?<br><br>&lt;blockquote&gt;Long Quote&lt;/blockquote&gt;",
    "quesType": "fill",
    "ans": "Long Quote"
  },
  {
    "ques": "Which tag for short quote?<br><br>&lt;q&gt;Quote&lt;/q&gt;",
    "quesType": "fill",
    "ans": "<q>"
  },
  {
    "ques": "Visible output?<br><br>&lt;cite&gt;Article&lt;/cite&gt;",
    "quesType": "fill",
    "ans": "Article"
  },
  {
    "ques": "Which tag shows abbreviation?<br><br>&lt;abbr title='Hyper Text Markup Language'&gt;HTML&lt;/abbr&gt;",
    "quesType": "fill",
    "ans": "HTML"
  },
  {
    "ques": "Output text?<br><br>&lt;title&gt;Webpage&lt;/title&gt;",
    "quesType": "fill",
    "ans": "Webpage"
  },
  {
    "ques": "Visible here?<br><br>&lt;h5&gt;Small Heading&lt;/h5&gt;",
    "quesType": "fill",
    "ans": "Small Heading"
  },
  {
    "ques": "Output?<br><br>&lt;h6&gt;Tiny Heading&lt;/h6&gt;",
    "quesType": "fill",
    "ans": "Tiny Heading"
  },
  {
    "ques": "Which tag for meta info?<br><br>",
    "quesType": "fill",
    "ans": "<meta>"
  },
   {
    "ques": "Which tag defines the start of an HTML document?<br><br>",
    "quesType": "mcq",
    "op1": "<html>",
    "op2": "<head>",
    "op3": "<body>",
    "op4": "<title>",
    "ans": "<html>"
  },
  {
    "ques": "What is displayed?<br><br>&lt;h1&gt;Main Heading&lt;/h1&gt;",
    "quesType": "mcq",
    "op1": "Main Heading",
    "op2": "<h1>",
    "op3": "Heading",
    "op4": "None",
    "ans": "Main Heading"
  },
  {
    "ques": "Which tag is used for paragraph?<br><br>",
    "quesType": "mcq",
    "op1": "<para>",
    "op2": "<p>",
    "op3": "<pr>",
    "op4": "<pg>",
    "ans": "<p>"
  },
  {
    "ques": "Output?<br><br>&lt;p&gt;Hello World&lt;/p&gt;",
    "quesType": "mcq",
    "op1": "Hello World",
    "op2": "<p>",
    "op3": "World",
    "op4": "None",
    "ans": "Hello World"
  },
  {
    "ques": "Which tag adds a line break?<br><br>",
    "quesType": "mcq",
    "op1": "<lb>",
    "op2": "<line>",
    "op3": "<br>",
    "op4": "<break>",
    "ans": "<br>"
  },
  {
    "ques": "Which tag inserts horizontal line?<br><br>",
    "quesType": "mcq",
    "op1": "<line>",
    "op2": "<hr>",
    "op3": "<br>",
    "op4": "<hl>",
    "ans": "<hr>"
  },
  {
    "ques": "Output?<br><br>&lt;b&gt;Bolded&lt;/b&gt;",
    "quesType": "mcq",
    "op1": "Bolded",
    "op2": "<b>",
    "op3": "B",
    "op4": "None",
    "ans": "Bolded"
  },
  {
    "ques": "Which tag makes text italic?<br><br>",
    "quesType": "mcq",
    "op1": "<em>",
    "op2": "<i>",
    "op3": "<it>",
    "op4": "<mark>",
    "ans": "<i>"
  },
  {
    "ques": "Output here?<br><br>&lt;i&gt;Italic Text&lt;/i&gt;",
    "quesType": "mcq",
    "op1": "Italic Text",
    "op2": "<i>",
    "op3": "Italic",
    "op4": "None",
    "ans": "Italic Text"
  },
  {
    "ques": "Which tag shows marked text?<br><br>",
    "quesType": "mcq",
    "op1": "<highlight>",
    "op2": "<mark>",
    "op3": "<em>",
    "op4": "<b>",
    "ans": "<mark>"
  },
  {
    "ques": "What appears?<br><br>&lt;mark&gt;Special&lt;/mark&gt;",
    "quesType": "mcq",
    "op1": "Special",
    "op2": "<mark>",
    "op3": "Mark",
    "op4": "None",
    "ans": "Special"
  },
  {
    "ques": "Which tag creates a link?<br><br>",
    "quesType": "mcq",
    "op1": "<url>",
    "op2": "<a>",
    "op3": "<link>",
    "op4": "<href>",
    "ans": "<a>"
  },
  {
    "ques": "Output of link?<br><br>&lt;a href='#'&gt;Click Here&lt;/a&gt;",
    "quesType": "mcq",
    "op1": "Click",
    "op2": "Here",
    "op3": "Click Here",
    "op4": "<a>",
    "ans": "Click Here"
  },
  {
    "ques": "Which tag defines an image?<br><br>",
    "quesType": "mcq",
    "op1": "<image>",
    "op2": "<pic>",
    "op3": "<img>",
    "op4": "<src>",
    "ans": "<img>"
  },
  {
    "ques": "Which tag creates an unordered list?<br><br>",
    "quesType": "mcq",
    "op1": "<li>",
    "op2": "<ul>",
    "op3": "<ol>",
    "op4": "<dl>",
    "ans": "<ul>"
  },
  {
    "ques": "Which tag makes ordered list?<br><br>",
    "quesType": "mcq",
    "op1": "<ol>",
    "op2": "<ul>",
    "op3": "<li>",
    "op4": "<dl>",
    "ans": "<ol>"
  },
  {
    "ques": "Output?<br><br>&lt;li&gt;Item 1&lt;/li&gt;",
    "quesType": "mcq",
    "op1": "Item",
    "op2": "1",
    "op3": "Item 1",
    "op4": "<li>",
    "ans": "Item 1"
  },
  {
    "ques": "Which tag adds title to the tab?<br><br>",
    "quesType": "mcq",
    "op1": "<tab>",
    "op2": "<title>",
    "op3": "<head>",
    "op4": "<meta>",
    "ans": "<title>"
  },
  {
    "ques": "What appears?<br><br>&lt;title&gt;My Webpage&lt;/title&gt;",
    "quesType": "mcq",
    "op1": "My Webpage",
    "op2": "<title>",
    "op3": "Webpage",
    "op4": "None",
    "ans": "My Webpage"
  },
  {
    "ques": "Which tag is for meta data?<br><br>",
    "quesType": "mcq",
    "op1": "<meta>",
    "op2": "<head>",
    "op3": "<body>",
    "op4": "<info>",
    "ans": "<meta>"
  },
  {
    "ques": "Which tag for blockquote?<br><br>",
    "quesType": "mcq",
    "op1": "<q>",
    "op2": "<blockquote>",
    "op3": "<quote>",
    "op4": "<cite>",
    "ans": "<blockquote>"
  },
  {
    "ques": "Output?<br><br>&lt;blockquote&gt;This is a quote.&lt;/blockquote&gt;",
    "quesType": "mcq",
    "op1": "This",
    "op2": "quote",
    "op3": "This is a quote.",
    "op4": "<blockquote>",
    "ans": "This is a quote."
  },
  {
    "ques": "Which tag for short quote?<br><br>",
    "quesType": "mcq",
    "op1": "<quote>",
    "op2": "<q>",
    "op3": "<blockquote>",
    "op4": "<cite>",
    "ans": "<q>"
  },
  {
    "ques": "What is displayed?<br><br>&lt;q&gt;Short quote&lt;/q&gt;",
    "quesType": "mcq",
    "op1": "Short",
    "op2": "quote",
    "op3": "Short quote",
    "op4": "<q>",
    "ans": "Short quote"
  },
  {
    "ques": "Which tag for citation?<br><br>",
    "quesType": "mcq",
    "op1": "<cite>",
    "op2": "<code>",
    "op3": "<samp>",
    "op4": "<q>",
    "ans": "<cite>"
  },
  {
    "ques": "Output?<br><br>&lt;cite&gt;Book Name&lt;/cite&gt;",
    "quesType": "mcq",
    "op1": "Book",
    "op2": "Book Name",
    "op3": "<cite>",
    "op4": "Name",
    "ans": "Book Name"
  },
  {
    "ques": "Which tag shows sample output?<br><br>",
    "quesType": "mcq",
    "op1": "<samp>",
    "op2": "<code>",
    "op3": "<var>",
    "op4": "<kbd>",
    "ans": "<samp>"
  },
  {
    "ques": "Visible output?<br><br>&lt;samp&gt;Sample&lt;/samp&gt;",
    "quesType": "mcq",
    "op1": "Sample",
    "op2": "<samp>",
    "op3": "Samp",
    "op4": "None",
    "ans": "Sample"
  },
  {
    "ques": "Which tag shows code snippet?<br><br>",
    "quesType": "mcq",
    "op1": "<samp>",
    "op2": "<code>",
    "op3": "<var>",
    "op4": "<kbd>",
    "ans": "<code>"
  },
  {
    "ques": "What appears?<br><br>&lt;code&gt;printf()&lt;/code&gt;",
    "quesType": "mcq",
    "op1": "printf()",
    "op2": "<code>",
    "op3": "code",
    "op4": "None",
    "ans": "printf()"
  },
  {
    "ques": "What appears?<br><br>&lt;h2&gt;Sub Heading&lt;/h2&gt;",
    "quesType": "fill",
    "ans": "Sub Heading"
  },
  {
    "ques": "Visible text?<br><br>&lt;p&gt;Paragraph Text&lt;/p&gt;",
    "quesType": "fill",
    "ans": "Paragraph Text"
  },
  {
    "ques": "Which tag creates a new line?<br><br>",
    "quesType": "fill",
    "ans": "<br>"
  },
  {
    "ques": "What tag adds horizontal rule?<br><br>",
    "quesType": "fill",
    "ans": "<hr>"
  },
  {
    "ques": "What appears?<br><br>&lt;b&gt;Bold Text&lt;/b&gt;",
    "quesType": "fill",
    "ans": "Bold Text"
  },
  {
    "ques": "Visible output?<br><br>&lt;i&gt;Italic Words&lt;/i&gt;",
    "quesType": "fill",
    "ans": "Italic Words"
  },
  {
    "ques": "Which tag highlights text?<br><br>",
    "quesType": "fill",
    "ans": "<mark>"
  },
  {
    "ques": "What appears?<br><br>&lt;mark&gt;Highlighted&lt;/mark&gt;",
    "quesType": "fill",
    "ans": "Highlighted"
  },
  {
    "ques": "Which tag defines link?<br><br>",
    "quesType": "fill",
    "ans": "<a>"
  },
  {
    "ques": "Visible link text?<br><br>&lt;a href='#'&gt;Learn More&lt;/a&gt;",
    "quesType": "fill",
    "ans": "Learn More"
  },
  {
    "ques": "Which tag shows image?<br><br>",
    "quesType": "fill",
    "ans": "<img>"
  },
  {
    "ques": "Which tag starts unordered list?<br><br>",
    "quesType": "fill",
    "ans": "<ul>"
  },
  {
    "ques": "Which tag starts ordered list?<br><br>",
    "quesType": "fill",
    "ans": "<ol>"
  },
  {
    "ques": "Visible list item?<br><br>&lt;li&gt;First Item&lt;/li&gt;",
    "quesType": "fill",
    "ans": "First Item"
  },
  {
    "ques": "Which tag adds tab title?<br><br>",
    "quesType": "fill",
    "ans": "<title>"
  },
  {
    "ques": "Visible page title?<br><br>&lt;title&gt;Home Page&lt;/title&gt;",
    "quesType": "fill",
    "ans": "Home Page"
  },
  {
    "ques": "Which tag defines meta info?<br><br>",
    "quesType": "fill",
    "ans": "<meta>"
  },
  {
    "ques": "Output seen?<br><br>&lt;blockquote&gt;Famous Quote&lt;/blockquote&gt;",
    "quesType": "fill",
    "ans": "Famous Quote"
  },
  {
    "ques": "Which tag for short quote?<br><br>",
    "quesType": "fill",
    "ans": "<q>"
  },
  {
    "ques": "Visible text?<br><br>&lt;q&gt;Short Line&lt;/q&gt;",
    "quesType": "fill",
    "ans": "Short Line"
  },
  {
    "ques": "Which tag shows citation?<br><br>",
    "quesType": "fill",
    "ans": "<cite>"
  },
  {
    "ques": "Output text?<br><br>&lt;cite&gt;Book Title&lt;/cite&gt;",
    "quesType": "fill",
    "ans": "Book Title"
  },
  {
    "ques": "Which tag shows sample output?<br><br>",
    "quesType": "fill",
    "ans": "<samp>"
  },
  {
    "ques": "Output seen?<br><br>&lt;samp&gt;Example&lt;/samp&gt;",
    "quesType": "fill",
    "ans": "Example"
  },
  {
    "ques": "Which tag displays code?<br><br>",
    "quesType": "fill",
    "ans": "<code>"
  },
  {
    "ques": "Output here?<br><br>&lt;code&gt;alert()&lt;/code&gt;",
    "quesType": "fill",
    "ans": "alert()"
  },
  {
    "ques": "Which tag shows variable?<br><br>",
    "quesType": "fill",
    "ans": "<var>"
  },
  {
    "ques": "Visible output?<br><br>&lt;var&gt;y&lt;/var&gt;",
    "quesType": "fill",
    "ans": "y"
  },
  {
    "ques": "Which tag for keyboard input?<br><br>",
    "quesType": "fill",
    "ans": "<kbd>"
  },
  {
    "ques": "Output seen?<br><br>&lt;kbd&gt;Ctrl&lt;/kbd&gt;",
    "quesType": "fill",
    "ans": "Ctrl"
  },
  {
    "ques": "Which tag sets the document type?<br><br>",
    "quesType": "mcq",
    "op1": "<html>",
    "op2": "<doctype>",
    "op3": "<!DOCTYPE>",
    "op4": "<body>",
    "ans": "<!DOCTYPE>"
  },
  {
    "ques": "Output?<br><br>&lt;h5&gt;Small Heading&lt;/h5&gt;",
    "quesType": "mcq",
    "op1": "Small",
    "op2": "Heading",
    "op3": "Small Heading",
    "op4": "<h5>",
    "ans": "Small Heading"
  },
  {
    "ques": "Which tag groups header content?<br><br>",
    "quesType": "mcq",
    "op1": "<head>",
    "op2": "<header>",
    "op3": "<hgroup>",
    "op4": "<heading>",
    "ans": "<header>"
  },
  {
    "ques": "What is shown?<br><br>&lt;header&gt;Site Header&lt;/header&gt;",
    "quesType": "mcq",
    "op1": "Header",
    "op2": "Site Header",
    "op3": "<header>",
    "op4": "None",
    "ans": "Site Header"
  },
  {
    "ques": "Which tag makes main section?<br><br>",
    "quesType": "mcq",
    "op1": "<main>",
    "op2": "<body>",
    "op3": "<section>",
    "op4": "<article>",
    "ans": "<main>"
  },
  {
    "ques": "Output?<br><br>&lt;main&gt;Content&lt;/main&gt;",
    "quesType": "mcq",
    "op1": "Main",
    "op2": "Content",
    "op3": "<main>",
    "op4": "None",
    "ans": "Content"
  },
  {
    "ques": "Which tag makes article content?<br><br>",
    "quesType": "mcq",
    "op1": "<content>",
    "op2": "<section>",
    "op3": "<article>",
    "op4": "<main>",
    "ans": "<article>"
  },
  {
    "ques": "Visible here?<br><br>&lt;article&gt;News Post&lt;/article&gt;",
    "quesType": "mcq",
    "op1": "Post",
    "op2": "News",
    "op3": "News Post",
    "op4": "<article>",
    "ans": "News Post"
  },
  {
    "ques": "Which tag makes nav links?<br><br>",
    "quesType": "mcq",
    "op1": "<navigate>",
    "op2": "<nav>",
    "op3": "<menu>",
    "op4": "<ul>",
    "ans": "<nav>"
  },
  {
    "ques": "What will display?<br><br>&lt;nav&gt;Links Here&lt;/nav&gt;",
    "quesType": "mcq",
    "op1": "Links",
    "op2": "Here",
    "op3": "Links Here",
    "op4": "<nav>",
    "ans": "Links Here"
  },
  {
    "ques": "Which tag is for footer?<br><br>",
    "quesType": "mcq",
    "op1": "<foot>",
    "op2": "<footer>",
    "op3": "<end>",
    "op4": "<bottom>",
    "ans": "<footer>"
  },
  {
    "ques": "Output?<br><br>&lt;footer&gt;Copyright&lt;/footer&gt;",
    "quesType": "mcq",
    "op1": "Copyright",
    "op2": "Footer",
    "op3": "<footer>",
    "op4": "None",
    "ans": "Copyright"
  },
  {
    "ques": "Which tag creates section?<br><br>",
    "quesType": "mcq",
    "op1": "<section>",
    "op2": "<div>",
    "op3": "<main>",
    "op4": "<article>",
    "ans": "<section>"
  },
  {
    "ques": "Visible output?<br><br>&lt;section&gt;Section Content&lt;/section&gt;",
    "quesType": "mcq",
    "op1": "Content",
    "op2": "Section",
    "op3": "Section Content",
    "op4": "<section>",
    "ans": "Section Content"
  },
  {
    "ques": "Which tag is generic container?<br><br>",
    "quesType": "mcq",
    "op1": "<span>",
    "op2": "<container>",
    "op3": "<div>",
    "op4": "<body>",
    "ans": "<div>"
  },
  {
    "ques": "Output?<br><br>&lt;div&gt;Box&lt;/div&gt;",
    "quesType": "mcq",
    "op1": "Box",
    "op2": "Div",
    "op3": "<div>",
    "op4": "None",
    "ans": "Box"
  },
  {
    "ques": "Which tag is inline container?<br><br>",
    "quesType": "mcq",
    "op1": "<inline>",
    "op2": "<span>",
    "op3": "<div>",
    "op4": "<container>",
    "ans": "<span>"
  },
  {
    "ques": "What appears?<br><br>&lt;span&gt;Inline Text&lt;/span&gt;",
    "quesType": "mcq",
    "op1": "Inline",
    "op2": "Text",
    "op3": "Inline Text",
    "op4": "<span>",
    "ans": "Inline Text"
  },
  {
    "ques": "Which tag shows abbreviation?<br><br>",
    "quesType": "mcq",
    "op1": "<abbr>",
    "op2": "<acronym>",
    "op3": "<short>",
    "op4": "<meta>",
    "ans": "<abbr>"
  },
  {
    "ques": "Output here?<br><br>&lt;abbr title='World Wide Web'&gt;WWW&lt;/abbr&gt;",
    "quesType": "mcq",
    "op1": "World",
    "op2": "WWW",
    "op3": "<abbr>",
    "op4": "Web",
    "ans": "WWW"
  },
  {
    "ques": "Which tag displays computer output?<br><br>",
    "quesType": "mcq",
    "op1": "<output>",
    "op2": "<code>",
    "op3": "<samp>",
    "op4": "<kbd>",
    "ans": "<samp>"
  },
  {
    "ques": "Visible text?<br><br>&lt;samp&gt;Output&lt;/samp&gt;",
    "quesType": "mcq",
    "op1": "Output",
    "op2": "<samp>",
    "op3": "Samp",
    "op4": "None",
    "ans": "Output"
  },
  {
    "ques": "Which tag is for variable?<br><br>",
    "quesType": "mcq",
    "op1": "<code>",
    "op2": "<var>",
    "op3": "<samp>",
    "op4": "<kbd>",
    "ans": "<var>"
  },
  {
    "ques": "What appears?<br><br>&lt;var&gt;x&lt;/var&gt;",
    "quesType": "mcq",
    "op1": "var",
    "op2": "x",
    "op3": "<var>",
    "op4": "None",
    "ans": "x"
  },
  {
    "ques": "Which tag shows keyboard input?<br><br>",
    "quesType": "mcq",
    "op1": "<kbd>",
    "op2": "<key>",
    "op3": "<input>",
    "op4": "<code>",
    "ans": "<kbd>"
  },
  {
    "ques": "Visible text?<br><br>&lt;kbd&gt;Esc&lt;/kbd&gt;",
    "quesType": "mcq",
    "op1": "Esc",
    "op2": "<kbd>",
    "op3": "Kbd",
    "op4": "None",
    "ans": "Esc"
  },
  {
    "ques": "Which tag displays code block?<br><br>",
    "quesType": "mcq",
    "op1": "<code>",
    "op2": "<pre>",
    "op3": "<samp>",
    "op4": "<kbd>",
    "ans": "<code>"
  },
  {
    "ques": "What appears?<br><br>&lt;code&gt;console.log&lt;/code&gt;",
    "quesType": "mcq",
    "op1": "console",
    "op2": "log",
    "op3": "console.log",
    "op4": "<code>",
    "ans": "console.log"
  },
  {
    "ques": "Which tag shows preformatted text?<br><br>",
    "quesType": "mcq",
    "op1": "<format>",
    "op2": "<pre>",
    "op3": "<code>",
    "op4": "<samp>",
    "ans": "<pre>"
  },
  {
    "ques": "Output?<br><br>&lt;pre&gt;Line 1&lt;br&gt;Line 2&lt;/pre&gt;",
    "quesType": "mcq",
    "op1": "Line 1 Line 2",
    "op2": "Line1",
    "op3": "Line 1<br>Line 2",
    "op4": "None",
    "ans": "Line 1<br>Line 2"
  },
   {
    "ques": "What is the doctype tag for HTML5?<br><br>",
    "quesType": "fill",
    "ans": "<!DOCTYPE html>"
  },
  {
    "ques": "Output text?<br><br>&lt;h6&gt;Smallest Heading&lt;/h6&gt;",
    "quesType": "fill",
    "ans": "Smallest Heading"
  },
  {
    "ques": "Which tag defines page metadata?<br><br>",
    "quesType": "fill",
    "ans": "<head>"
  },
  {
    "ques": "Visible content?<br><br>&lt;header&gt;My Header&lt;/header&gt;",
    "quesType": "fill",
    "ans": "My Header"
  },
  {
    "ques": "Which tag groups main content?<br><br>",
    "quesType": "fill",
    "ans": "<main>"
  },
  {
    "ques": "Output seen?<br><br>&lt;main&gt;Body Content&lt;/main&gt;",
    "quesType": "fill",
    "ans": "Body Content"
  },
  {
    "ques": "Which tag marks independent content?<br><br>",
    "quesType": "fill",
    "ans": "<article>"
  },
  {
    "ques": "What appears?<br><br>&lt;article&gt;Blog Post&lt;/article&gt;",
    "quesType": "fill",
    "ans": "Blog Post"
  },
  {
    "ques": "Which tag defines nav links?<br><br>",
    "quesType": "fill",
    "ans": "<nav>"
  },
  {
    "ques": "Output text?<br><br>&lt;nav&gt;Navigation&lt;/nav&gt;",
    "quesType": "fill",
    "ans": "Navigation"
  },
  {
    "ques": "Which tag for footer info?<br><br>",
    "quesType": "fill",
    "ans": "<footer>"
  },
  {
    "ques": "Visible output?<br><br>&lt;footer&gt;Contact Info&lt;/footer&gt;",
    "quesType": "fill",
    "ans": "Contact Info"
  },
  {
    "ques": "Which tag defines a section?<br><br>",
    "quesType": "fill",
    "ans": "<section>"
  },
  {
    "ques": "What appears?<br><br>&lt;section&gt;Intro Section&lt;/section&gt;",
    "quesType": "fill",
    "ans": "Intro Section"
  },
  {
    "ques": "Which tag is generic block container?<br><br>",
    "quesType": "fill",
    "ans": "<div>"
  },
  {
    "ques": "Output seen?<br><br>&lt;div&gt;Wrapper&lt;/div&gt;",
    "quesType": "fill",
    "ans": "Wrapper"
  },
  {
    "ques": "Which tag is generic inline container?<br><br>",
    "quesType": "fill",
    "ans": "<span>"
  },
  {
    "ques": "Visible output?<br><br>&lt;span&gt;Label&lt;/span&gt;",
    "quesType": "fill",
    "ans": "Label"
  },
  {
    "ques": "Which tag marks abbreviation?<br><br>",
    "quesType": "fill",
    "ans": "<abbr>"
  },
  {
    "ques": "Output text?<br><br>&lt;abbr title='HyperText Markup Language'&gt;HTML&lt;/abbr&gt;",
    "quesType": "fill",
    "ans": "HTML"
  },
  {
    "ques": "Which tag shows computer output?<br><br>",
    "quesType": "fill",
    "ans": "<samp>"
  },
  {
    "ques": "What appears?<br><br>&lt;samp&gt;Result&lt;/samp&gt;",
    "quesType": "fill",
    "ans": "Result"
  },
  {
    "ques": "Which tag shows a variable?<br><br>",
    "quesType": "fill",
    "ans": "<var>"
  },
  {
    "ques": "Visible variable?<br><br>&lt;var&gt;total&lt;/var&gt;",
    "quesType": "fill",
    "ans": "total"
  },
  {
    "ques": "Which tag for keyboard input?<br><br>",
    "quesType": "fill",
    "ans": "<kbd>"
  },
  {
    "ques": "Output seen?<br><br>&lt;kbd&gt;Shift&lt;/kbd&gt;",
    "quesType": "fill",
    "ans": "Shift"
  },
  {
    "ques": "Which tag displays code?<br><br>",
    "quesType": "fill",
    "ans": "<code>"
  },
  {
    "ques": "Output text?<br><br>&lt;code&gt;function()&lt;/code&gt;",
    "quesType": "fill",
    "ans": "function()"
  },
  {
    "ques": "Which tag keeps spacing?<br><br>",
    "quesType": "fill",
    "ans": "<pre>"
  },
  {
    "ques": "Visible output?<br><br>&lt;pre&gt;Line A&lt;br&gt;Line B&lt;/pre&gt;",
    "quesType": "fill",
    "ans": "Line A<br>Line B"
  },
  {
    "ques": "Which tag defines the HTML root?<br><br>",
    "quesType": "mcq",
    "op1": "<head>",
    "op2": "<html>",
    "op3": "<body>",
    "op4": "<root>",
    "ans": "<html>"
  },
  {
    "ques": "What is shown?<br><br>&lt;h1&gt;Home&lt;/h1&gt;",
    "quesType": "mcq",
    "op1": "h1",
    "op2": "Home",
    "op3": "<h1>",
    "op4": "None",
    "ans": "Home"
  },
  {
    "ques": "Which tag closes the HTML document?<br><br>",
    "quesType": "mcq",
    "op1": "</html>",
    "op2": "</body>",
    "op3": "</head>",
    "op4": "</div>",
    "ans": "</html>"
  },
  {
    "ques": "Visible content?<br><br>&lt;body&gt;Site Body&lt;/body&gt;",
    "quesType": "mcq",
    "op1": "Site",
    "op2": "Body",
    "op3": "Site Body",
    "op4": "<body>",
    "ans": "Site Body"
  },
  {
    "ques": "Which tag describes metadata?<br><br>",
    "quesType": "mcq",
    "op1": "<meta>",
    "op2": "<link>",
    "op3": "<style>",
    "op4": "<title>",
    "ans": "<meta>"
  },
  {
    "ques": "Output here?<br><br>&lt;title&gt;My Site&lt;/title&gt;",
    "quesType": "mcq",
    "op1": "My",
    "op2": "Site",
    "op3": "My Site",
    "op4": "<title>",
    "ans": "My Site"
  },
  {
    "ques": "Which tag links external CSS?<br><br>",
    "quesType": "mcq",
    "op1": "<style>",
    "op2": "<link>",
    "op3": "<css>",
    "op4": "<head>",
    "ans": "<link>"
  },
  {
    "ques": "What is shown?<br><br>&lt;style&gt;body { }&lt;/style&gt;",
    "quesType": "mcq",
    "op1": "CSS",
    "op2": "body",
    "op3": "style",
    "op4": "Nothing visible",
    "ans": "Nothing visible"
  },
  {
    "ques": "Which tag shows image?<br><br>",
    "quesType": "mcq",
    "op1": "<src>",
    "op2": "<image>",
    "op3": "<img>",
    "op4": "<media>",
    "ans": "<img>"
  },
  {
    "ques": "Which tag makes text bold?<br><br>",
    "quesType": "mcq",
    "op1": "<bold>",
    "op2": "<b>",
    "op3": "<strong>",
    "op4": "<i>",
    "ans": "<b>"
  },
  {
    "ques": "Which tag makes text italic?<br><br>",
    "quesType": "mcq",
    "op1": "<em>",
    "op2": "<italic>",
    "op3": "<i>",
    "op4": "<strong>",
    "ans": "<i>"
  },
  {
    "ques": "Which tag breaks line?<br><br>",
    "quesType": "mcq",
    "op1": "<lb>",
    "op2": "<br>",
    "op3": "<line>",
    "op4": "<break>",
    "ans": "<br>"
  },
  {
    "ques": "Visible output?<br><br>&lt;br&gt;",
    "quesType": "mcq",
    "op1": "br",
    "op2": "line",
    "op3": "new line",
    "op4": "Nothing",
    "ans": "Nothing"
  },
  {
    "ques": "Which tag draws horizontal line?<br><br>",
    "quesType": "mcq",
    "op1": "<line>",
    "op2": "<hr>",
    "op3": "<hl>",
    "op4": "<div>",
    "ans": "<hr>"
  },
  {
    "ques": "What appears?<br><br>&lt;hr&gt;",
    "quesType": "mcq",
    "op1": "Text",
    "op2": "Image",
    "op3": "Horizontal line",
    "op4": "Nothing",
    "ans": "Horizontal line"
  },
  {
    "ques": "Which tag displays list item?<br><br>",
    "quesType": "mcq",
    "op1": "<li>",
    "op2": "<item>",
    "op3": "<ul>",
    "op4": "<ol>",
    "ans": "<li>"
  },
  {
    "ques": "Which tag for description list?<br><br>",
    "quesType": "mcq",
    "op1": "<ul>",
    "op2": "<ol>",
    "op3": "<dl>",
    "op4": "<li>",
    "ans": "<dl>"
  },
  {
    "ques": "Which tag shows table row?<br><br>",
    "quesType": "mcq",
    "op1": "<th>",
    "op2": "<td>",
    "op3": "<tr>",
    "op4": "<table>",
    "ans": "<tr>"
  },
  {
    "ques": "Which tag is table head?<br><br>",
    "quesType": "mcq",
    "op1": "<thead>",
    "op2": "<th>",
    "op3": "<head>",
    "op4": "<h>",
    "ans": "<thead>"
  },
  {
    "ques": "Which tag defines table cell?<br><br>",
    "quesType": "mcq",
    "op1": "<tc>",
    "op2": "<cell>",
    "op3": "<td>",
    "op4": "<tr>",
    "ans": "<td>"
  },
  {
    "ques": "Output seen?<br><br>&lt;td&gt;Data&lt;/td&gt;",
    "quesType": "mcq",
    "op1": "Data",
    "op2": "td",
    "op3": "<td>",
    "op4": "None",
    "ans": "Data"
  },
  {
    "ques": "Which tag makes form?<br><br>",
    "quesType": "mcq",
    "op1": "<input>",
    "op2": "<button>",
    "op3": "<form>",
    "op4": "<label>",
    "ans": "<form>"
  },
  {
    "ques": "Which tag creates input field?<br><br>",
    "quesType": "mcq",
    "op1": "<input>",
    "op2": "<text>",
    "op3": "<form>",
    "op4": "<field>",
    "ans": "<input>"
  },
  {
    "ques": "Which tag makes dropdown?<br><br>",
    "quesType": "mcq",
    "op1": "<select>",
    "op2": "<option>",
    "op3": "<input>",
    "op4": "<dropdown>",
    "ans": "<select>"
  },
  {
    "ques": "Which tag makes option in select?<br><br>",
    "quesType": "mcq",
    "op1": "<select>",
    "op2": "<option>",
    "op3": "<input>",
    "op4": "<choice>",
    "ans": "<option>"
  },
  {
    "ques": "Which tag adds label?<br><br>",
    "quesType": "mcq",
    "op1": "<label>",
    "op2": "<input>",
    "op3": "<text>",
    "op4": "<form>",
    "ans": "<label>"
  },
  {
    "ques": "Which tag creates button?<br><br>",
    "quesType": "mcq",
    "op1": "<button>",
    "op2": "<input>",
    "op3": "<submit>",
    "op4": "<form>",
    "ans": "<button>"
  },
  {
    "ques": "Which tag shows progress?<br><br>",
    "quesType": "mcq",
    "op1": "<progress>",
    "op2": "<meter>",
    "op3": "<bar>",
    "op4": "<span>",
    "ans": "<progress>"
  },
  {
    "ques": "Which tag shows meter?<br><br>",
    "quesType": "mcq",
    "op1": "<progress>",
    "op2": "<meter>",
    "op3": "<bar>",
    "op4": "<span>",
    "ans": "<meter>"
  },
  {
    "ques": "Which tag starts every HTML page?<br><br>",
    "quesType": "fill",
    "ans": "<!DOCTYPE html>"
  },
  {
    "ques": "Visible output?<br><br>&lt;h2&gt;About&lt;/h2&gt;",
    "quesType": "fill",
    "ans": "About"
  },
  {
    "ques": "Which tag defines document head?<br><br>",
    "quesType": "fill",
    "ans": "<head>"
  },
  {
    "ques": "What is output?<br><br>&lt;body&gt;Hello!&lt;/body&gt;",
    "quesType": "fill",
    "ans": "Hello!"
  },
  {
    "ques": "Which tag defines document title?<br><br>",
    "quesType": "fill",
    "ans": "<title>"
  },
  {
    "ques": "Output shown?<br><br>&lt;title&gt;Site&lt;/title&gt;",
    "quesType": "fill",
    "ans": "Site"
  },
  {
    "ques": "Which tag links CSS?<br><br>",
    "quesType": "fill",
    "ans": "<link>"
  },
  {
    "ques": "Which tag embeds CSS?<br><br>",
    "quesType": "fill",
    "ans": "<style>"
  },
  {
    "ques": "Which tag displays an image?<br><br>",
    "quesType": "fill",
    "ans": "<img>"
  },
  {
    "ques": "Which tag makes bold text?<br><br>",
    "quesType": "fill",
    "ans": "<b>"
  },
  {
    "ques": "Which tag italicizes text?<br><br>",
    "quesType": "fill",
    "ans": "<i>"
  },
  {
    "ques": "Which tag breaks line?<br><br>",
    "quesType": "fill",
    "ans": "<br>"
  },
  {
    "ques": "Which tag creates horizontal line?<br><br>",
    "quesType": "fill",
    "ans": "<hr>"
  },
  {
    "ques": "Output visible?<br><br>&lt;li&gt;Item&lt;/li&gt;",
    "quesType": "fill",
    "ans": "Item"
  },
  {
    "ques": "Which tag creates unordered list?<br><br>",
    "quesType": "fill",
    "ans": "<ul>"
  },
  {
    "ques": "Which tag creates ordered list?<br><br>",
    "quesType": "fill",
    "ans": "<ol>"
  },
  {
    "ques": "Which tag makes table?<br><br>",
    "quesType": "fill",
    "ans": "<table>"
  },
  {
    "ques": "Which tag shows table row?<br><br>",
    "quesType": "fill",
    "ans": "<tr>"
  },
  {
    "ques": "Which tag defines table header cell?<br><br>",
    "quesType": "fill",
    "ans": "<th>"
  },
  {
    "ques": "Output here?<br><br>&lt;td&gt;Cell&lt;/td&gt;",
    "quesType": "fill",
    "ans": "Cell"
  },
  {
    "ques": "Which tag creates form?<br><br>",
    "quesType": "fill",
    "ans": "<form>"
  },
  {
    "ques": "Which tag creates input field?<br><br>",
    "quesType": "fill",
    "ans": "<input>"
  },
  {
    "ques": "Which tag makes dropdown?<br><br>",
    "quesType": "fill",
    "ans": "<select>"
  },
  {
    "ques": "Which tag defines option in select?<br><br>",
    "quesType": "fill",
    "ans": "<option>"
  },
  {
    "ques": "Which tag labels input?<br><br>",
    "quesType": "fill",
    "ans": "<label>"
  },
  {
    "ques": "Which tag creates clickable button?<br><br>",
    "quesType": "fill",
    "ans": "<button>"
  },
  {
    "ques": "Which tag shows progress bar?<br><br>",
    "quesType": "fill",
    "ans": "<progress>"
  },
  {
    "ques": "Which tag shows measurement?<br><br>",
    "quesType": "fill",
    "ans": "<meter>"
  },
  {
    "ques": "Which tag shows line break visible output?<br><br>&lt;br&gt;",
    "quesType": "fill",
    "ans": ""
  },
  {
    "ques": "Which tag ends document structure?<br><br>",
    "quesType": "fill",
    "ans": "</html>"
  }

]

let codinghtml2Arr=[
  {
    "ques": "Which attribute sets an image description?<br><br>",
    "quesType": "mcq",
    "op1": "title",
    "op2": "href",
    "op3": "alt",
    "op4": "src",
    "ans": "alt"
  },
  {
    "ques": "What is the output?<br><br>&lt;img src='pic.jpg' alt='Logo'&gt;",
    "quesType": "mcq",
    "op1": "pic.jpg",
    "op2": "Logo",
    "op3": "img",
    "op4": "Nothing",
    "ans": "Logo"
  },
  {
    "ques": "Which tag creates an email link?<br><br>",
    "quesType": "mcq",
    "op1": "<a>",
    "op2": "<link>",
    "op3": "<email>",
    "op4": "<mail>",
    "ans": "<a>"
  },
  {
    "ques": "Which attribute makes link open new tab?<br><br>",
    "quesType": "mcq",
    "op1": "href",
    "op2": "src",
    "op3": "target",
    "op4": "action",
    "ans": "target"
  },
  {
    "ques": "Visible output?<br><br>&lt;a href='#'&gt;Click&lt;/a&gt;",
    "quesType": "mcq",
    "op1": "#",
    "op2": "Click",
    "op3": "<a>",
    "op4": "href",
    "ans": "Click"
  },
  {
    "ques": "Which attribute disables input?<br><br>",
    "quesType": "mcq",
    "op1": "readonly",
    "op2": "disabled",
    "op3": "required",
    "op4": "type",
    "ans": "disabled"
  },
  {
    "ques": "Which tag groups radio buttons?<br><br>",
    "quesType": "mcq",
    "op1": "<select>",
    "op2": "<input>",
    "op3": "<fieldset>",
    "op4": "<group>",
    "ans": "<fieldset>"
  },
  {
    "ques": "What does &lt;legend&gt; tag do?<br><br>",
    "quesType": "mcq",
    "op1": "Adds caption",
    "op2": "Adds image",
    "op3": "Creates link",
    "op4": "Nothing",
    "ans": "Adds caption"
  },
  {
    "ques": "Which tag groups form elements?<br><br>",
    "quesType": "mcq",
    "op1": "<form>",
    "op2": "<group>",
    "op3": "<fieldset>",
    "op4": "<section>",
    "ans": "<fieldset>"
  },
  {
    "ques": "What does checked attribute mean?<br><br>",
    "quesType": "mcq",
    "op1": "Image loaded",
    "op2": "Field is disabled",
    "op3": "Option is selected",
    "op4": "Button is pressed",
    "ans": "Option is selected"
  },
  {
    "ques": "Which tag embeds video?<br><br>",
    "quesType": "mcq",
    "op1": "<embed>",
    "op2": "<video>",
    "op3": "<media>",
    "op4": "<movie>",
    "ans": "<video>"
  },
  {
    "ques": "Output seen?<br><br>&lt;video controls&gt;&lt;/video&gt;",
    "quesType": "mcq",
    "op1": "Video",
    "op2": "Controls",
    "op3": "Play bar",
    "op4": "Nothing visible",
    "ans": "Play bar"
  },
  {
    "ques": "Which tag for audio embed?<br><br>",
    "quesType": "mcq",
    "op1": "<audio>",
    "op2": "<sound>",
    "op3": "<media>",
    "op4": "<voice>",
    "ans": "<audio>"
  },
  {
    "ques": "Which tag embeds external content?<br><br>",
    "quesType": "mcq",
    "op1": "<iframe>",
    "op2": "<frame>",
    "op3": "<embed>",
    "op4": "<object>",
    "ans": "<iframe>"
  },
  {
    "ques": "Which tag defines clickable map area?<br><br>",
    "quesType": "mcq",
    "op1": "<area>",
    "op2": "<map>",
    "op3": "<link>",
    "op4": "<imgmap>",
    "ans": "<area>"
  },
  {
    "ques": "Which tag links image map?<br><br>",
    "quesType": "mcq",
    "op1": "<map>",
    "op2": "<area>",
    "op3": "<img>",
    "op4": "<link>",
    "ans": "<map>"
  },
  {
    "ques": "What is output?<br><br>&lt;mark&gt;Highlight&lt;/mark&gt;",
    "quesType": "mcq",
    "op1": "mark",
    "op2": "Highlight",
    "op3": "Marked",
    "op4": "Nothing",
    "ans": "Highlight"
  },
  {
    "ques": "Which tag for side comments?<br><br>",
    "quesType": "mcq",
    "op1": "<aside>",
    "op2": "<comment>",
    "op3": "<note>",
    "op4": "<section>",
    "ans": "<aside>"
  },
  {
    "ques": "Which tag for special text?<br><br>",
    "quesType": "mcq",
    "op1": "<em>",
    "op2": "<strong>",
    "op3": "<bdi>",
    "op4": "<big>",
    "ans": "<bdi>"
  },
  {
    "ques": "Which tag shows bidirectional isolate?<br><br>",
    "quesType": "mcq",
    "op1": "<bdi>",
    "op2": "<bdo>",
    "op3": "<dir>",
    "op4": "<em>",
    "ans": "<bdi>"
  },
  {
    "ques": "Which attribute makes a link open in new tab?<br><br>",
    "quesType": "fill",
    "ans": "target"
  },
  {
    "ques": "What is the output?<br><br>&lt;mark&gt;New&lt;/mark&gt;",
    "quesType": "fill",
    "ans": "New"
  },
  {
    "ques": "Which tag displays external webpage?<br><br>",
    "quesType": "fill",
    "ans": "<iframe>"
  },
  {
    "ques": "Which tag for multi-line text input?<br><br>",
    "quesType": "fill",
    "ans": "<textarea>"
  },
  {
    "ques": "What is output?<br><br>&lt;abbr title='World Health Organization'&gt;WHO&lt;/abbr&gt;",
    "quesType": "fill",
    "ans": "WHO"
  },
  {
    "ques": "Which tag for bidirectional override?<br><br>",
    "quesType": "fill",
    "ans": "<bdo>"
  },
  {
    "ques": "Which tag for ruby annotations?<br><br>",
    "quesType": "fill",
    "ans": "<ruby>"
  },
  {
    "ques": "Visible output?<br><br>&lt;summary&gt;Details&lt;/summary&gt;",
    "quesType": "fill",
    "ans": "Details"
  },
  {
    "ques": "Which tag defines toggle details?<br><br>",
    "quesType": "fill",
    "ans": "<details>"
  },
  {
    "ques": "Which tag defines sample output?<br><br>",
    "quesType": "fill",
    "ans": "<samp>"
  },
  {
    "ques": "Which tag for figure caption?<br><br>",
    "quesType": "fill",
    "ans": "<figcaption>"
  },
  {
    "ques": "Which tag groups figure content?<br><br>",
    "quesType": "fill",
    "ans": "<figure>"
  },
  {
    "ques": "Which tag adds line break output?<br><br>",
    "quesType": "fill",
    "ans": "<br>"
  },
  {
    "ques": "Which tag for progress indicator?<br><br>",
    "quesType": "fill",
    "ans": "<progress>"
  },
  {
    "ques": "Visible text?<br><br>&lt;kbd&gt;Ctrl&lt;/kbd&gt;",
    "quesType": "fill",
    "ans": "Ctrl"
  },
  {
    "ques": "Which tag for code output?<br><br>",
    "quesType": "fill",
    "ans": "<code>"
  },
  {
    "ques": "Output shown?<br><br>&lt;time&gt;2025-07-06&lt;/time&gt;",
    "quesType": "fill",
    "ans": "2025-07-06"
  },
  {
    "ques": "Which tag for script source?<br><br>",
    "quesType": "fill",
    "ans": "<script>"
  },
  {
    "ques": "Which tag for style block?<br><br>",
    "quesType": "fill",
    "ans": "<style>"
  },
  {
    "ques": "Which tag for base URL?<br><br>",
    "quesType": "fill",
    "ans": "<base>"
  },
  {
    "ques": "Which tag shows contact info?<br><br>",
    "quesType": "mcq",
    "op1": "<footer>",
    "op2": "<address>",
    "op3": "<header>",
    "op4": "<section>",
    "ans": "<address>"
  },
  {
    "ques": "What is output?<br><br>&lt;address&gt;123 Street&lt;/address&gt;",
    "quesType": "mcq",
    "op1": "Street",
    "op2": "123",
    "op3": "123 Street",
    "op4": "<address>",
    "ans": "123 Street"
  },
  {
    "ques": "Which tag shows emphasized text?<br><br>",
    "quesType": "mcq",
    "op1": "<i>",
    "op2": "<em>",
    "op3": "<mark>",
    "op4": "<b>",
    "ans": "<em>"
  },
  {
    "ques": "Output?<br><br>&lt;em&gt;Note&lt;/em&gt;",
    "quesType": "mcq",
    "op1": "Note",
    "op2": "em",
    "op3": "<em>",
    "op4": "Nothing",
    "ans": "Note"
  },
  {
    "ques": "Which tag for citations?<br><br>",
    "quesType": "mcq",
    "op1": "<cite>",
    "op2": "<quote>",
    "op3": "<q>",
    "op4": "<blockquote>",
    "ans": "<cite>"
  },
  {
    "ques": "Visible output?<br><br>&lt;cite&gt;Book&lt;/cite&gt;",
    "quesType": "mcq",
    "op1": "Book",
    "op2": "cite",
    "op3": "<cite>",
    "op4": "Nothing",
    "ans": "Book"
  },
  {
    "ques": "Which tag for short quote?<br><br>",
    "quesType": "mcq",
    "op1": "<quote>",
    "op2": "<q>",
    "op3": "<cite>",
    "op4": "<blockquote>",
    "ans": "<q>"
  },
  {
    "ques": "Which tag shows long quote?<br><br>",
    "quesType": "mcq",
    "op1": "<quote>",
    "op2": "<q>",
    "op3": "<cite>",
    "op4": "<blockquote>",
    "ans": "<blockquote>"
  },
  {
    "ques": "Which tag makes strikethrough text?<br><br>",
    "quesType": "mcq",
    "op1": "<del>",
    "op2": "<strike>",
    "op3": "<s>",
    "op4": "<sub>",
    "ans": "<del>"
  },
  {
    "ques": "Output?<br><br>&lt;del&gt;Old&lt;/del&gt;",
    "quesType": "mcq",
    "op1": "Old",
    "op2": "del",
    "op3": "<del>",
    "op4": "None",
    "ans": "Old"
  },
  {
    "ques": "Which tag for inserted text?<br><br>",
    "quesType": "mcq",
    "op1": "<ins>",
    "op2": "<add>",
    "op3": "<insert>",
    "op4": "<include>",
    "ans": "<ins>"
  },
  {
    "ques": "Which tag for superscript?<br><br>",
    "quesType": "mcq",
    "op1": "<sub>",
    "op2": "<sup>",
    "op3": "<high>",
    "op4": "<upper>",
    "ans": "<sup>"
  },
  {
    "ques": "Which tag for subscript?<br><br>",
    "quesType": "mcq",
    "op1": "<sub>",
    "op2": "<sup>",
    "op3": "<low>",
    "op4": "<under>",
    "ans": "<sub>"
  },
  {
    "ques": "Output?<br><br>&lt;sup&gt;2&lt;/sup&gt;",
    "quesType": "mcq",
    "op1": "2",
    "op2": "sup",
    "op3": "<sup>",
    "op4": "None",
    "ans": "2"
  },
  {
    "ques": "Which tag for computer output?<br><br>",
    "quesType": "mcq",
    "op1": "<output>",
    "op2": "<samp>",
    "op3": "<kbd>",
    "op4": "<code>",
    "ans": "<samp>"
  },
  {
    "ques": "Which tag for keyboard input?<br><br>",
    "quesType": "mcq",
    "op1": "<kbd>",
    "op2": "<code>",
    "op3": "<samp>",
    "op4": "<input>",
    "ans": "<kbd>"
  },
  {
    "ques": "Which tag for program code?<br><br>",
    "quesType": "mcq",
    "op1": "<pre>",
    "op2": "<kbd>",
    "op3": "<code>",
    "op4": "<samp>",
    "ans": "<code>"
  },
  {
    "ques": "What tag preserves formatting?<br><br>",
    "quesType": "mcq",
    "op1": "<code>",
    "op2": "<pre>",
    "op3": "<samp>",
    "op4": "<kbd>",
    "ans": "<pre>"
  },
  {
    "ques": "Which tag for time value?<br><br>",
    "quesType": "mcq",
    "op1": "<date>",
    "op2": "<time>",
    "op3": "<day>",
    "op4": "<datetime>",
    "ans": "<time>"
  },
  {
    "ques": "Which tag for template content?<br><br>",
    "quesType": "mcq",
    "op1": "<temp>",
    "op2": "<script>",
    "op3": "<template>",
    "op4": "<content>",
    "ans": "<template>"
  },
  {
    "ques": "Which tag for variable name?<br><br>",
    "quesType": "mcq",
    "op1": "<var>",
    "op2": "<code>",
    "op3": "<samp>",
    "op4": "<kbd>",
    "ans": "<var>"
  },
  {
    "ques": "Which tag for bold importance?<br><br>",
    "quesType": "mcq",
    "op1": "<b>",
    "op2": "<strong>",
    "op3": "<em>",
    "op4": "<mark>",
    "ans": "<strong>"
  },
  {
    "ques": "Which tag defines document nav?<br><br>",
    "quesType": "mcq",
    "op1": "<nav>",
    "op2": "<aside>",
    "op3": "<header>",
    "op4": "<footer>",
    "ans": "<nav>"
  },
  {
    "ques": "Which tag wraps main content?<br><br>",
    "quesType": "mcq",
    "op1": "<body>",
    "op2": "<article>",
    "op3": "<main>",
    "op4": "<section>",
    "ans": "<main>"
  },
  {
    "ques": "Which tag creates section?<br><br>",
    "quesType": "mcq",
    "op1": "<div>",
    "op2": "<section>",
    "op3": "<aside>",
    "op4": "<header>",
    "ans": "<section>"
  },
  {
    "ques": "Which tag adds header content?<br><br>",
    "quesType": "mcq",
    "op1": "<head>",
    "op2": "<header>",
    "op3": "<title>",
    "op4": "<section>",
    "ans": "<header>"
  },
  {
    "ques": "Which tag groups footer info?<br><br>",
    "quesType": "mcq",
    "op1": "<footer>",
    "op2": "<aside>",
    "op3": "<bottom>",
    "op4": "<tail>",
    "ans": "<footer>"
  },
  {
    "ques": "Which tag creates hidden input?<br><br>",
    "quesType": "mcq",
    "op1": "<hidden>",
    "op2": "<input type='hidden'>",
    "op3": "<secret>",
    "op4": "<hide>",
    "ans": "<input type='hidden'>"
  },
  {
    "ques": "Which tag adds metadata?<br><br>",
    "quesType": "mcq",
    "op1": "<meta>",
    "op2": "<link>",
    "op3": "<head>",
    "op4": "<title>",
    "ans": "<meta>"
  },
  {
    "ques": "Which tag defines emphasized text?<br><br>",
    "quesType": "fill",
    "ans": "<em>"
  },
  {
    "ques": "Which tag adds strong importance?<br><br>",
    "quesType": "fill",
    "ans": "<strong>"
  },
  {
    "ques": "Which tag shows citation?<br><br>",
    "quesType": "fill",
    "ans": "<cite>"
  },
  {
    "ques": "Which tag creates short quote?<br><br>",
    "quesType": "fill",
    "ans": "<q>"
  },
  {
    "ques": "Which tag makes long quote?<br><br>",
    "quesType": "fill",
    "ans": "<blockquote>"
  },
  {
    "ques": "What is output?<br><br>&lt;q&gt;Hello&lt;/q&gt;",
    "quesType": "fill",
    "ans": "Hello"
  },
  {
    "ques": "Which tag for deleted text?<br><br>",
    "quesType": "fill",
    "ans": "<del>"
  },
  {
    "ques": "Which tag for inserted text?<br><br>",
    "quesType": "fill",
    "ans": "<ins>"
  },
  {
    "ques": "Which tag for subscript?<br><br>",
    "quesType": "fill",
    "ans": "<sub>"
  },
  {
    "ques": "Which tag for superscript?<br><br>",
    "quesType": "fill",
    "ans": "<sup>"
  },
  {
    "ques": "What is output?<br><br>&lt;sub&gt;2&lt;/sub&gt;",
    "quesType": "fill",
    "ans": "2"
  },
  {
    "ques": "Which tag for sample output?<br><br>",
    "quesType": "fill",
    "ans": "<samp>"
  },
  {
    "ques": "Which tag for keyboard input?<br><br>",
    "quesType": "fill",
    "ans": "<kbd>"
  },
  {
    "ques": "Which tag for program code?<br><br>",
    "quesType": "fill",
    "ans": "<code>"
  },
  {
    "ques": "Which tag keeps spacing?<br><br>",
    "quesType": "fill",
    "ans": "<pre>"
  },
  {
    "ques": "Output?<br><br>&lt;code&gt;var x&lt;/code&gt;",
    "quesType": "fill",
    "ans": "var x"
  },
  {
    "ques": "Which tag for time/date?<br><br>",
    "quesType": "fill",
    "ans": "<time>"
  },
  {
    "ques": "Which tag for hidden content template?<br><br>",
    "quesType": "fill",
    "ans": "<template>"
  },
  {
    "ques": "Which tag defines variable?<br><br>",
    "quesType": "fill",
    "ans": "<var>"
  },
  {
    "ques": "Output visible?<br><br>&lt;var&gt;x&lt;/var&gt;",
    "quesType": "fill",
    "ans": "x"
  },
  {
    "ques": "Which tag for navigation links?<br><br>",
    "quesType": "fill",
    "ans": "<nav>"
  },
  {
    "ques": "Which tag for main section?<br><br>",
    "quesType": "fill",
    "ans": "<main>"
  },
  {
    "ques": "Which tag for side content?<br><br>",
    "quesType": "fill",
    "ans": "<aside>"
  },
  {
    "ques": "Which tag for section of doc?<br><br>",
    "quesType": "fill",
    "ans": "<section>"
  },
  {
    "ques": "Which tag for footer?<br><br>",
    "quesType": "fill",
    "ans": "<footer>"
  },
  {
    "ques": "Which tag for page head?<br><br>",
    "quesType": "fill",
    "ans": "<header>"
  },
  {
    "ques": "Which tag for metadata?<br><br>",
    "quesType": "fill",
    "ans": "<meta>"
  },
  {
    "ques": "Which tag for base URL?<br><br>",
    "quesType": "fill",
    "ans": "<base>"
  },
  {
    "ques": "Which tag for script content?<br><br>",
    "quesType": "fill",
    "ans": "<script>"
  },
  {
    "ques": "Which tag for hidden input?<br><br>",
    "quesType": "fill",
    "ans": "<input type='hidden'>"
  },
  {
    "ques": "Which tag is used for meta keywords?<br><br>",
    "quesType": "mcq",
    "op1": "<link>",
    "op2": "<meta>",
    "op3": "<head>",
    "op4": "<script>",
    "ans": "<meta>"
  },
  {
    "ques": "Output of:<br><br>&lt;title&gt;My Page&lt;/title&gt;",
    "quesType": "mcq",
    "op1": "Page heading",
    "op2": "Browser title bar",
    "op3": "Page footer",
    "op4": "Hidden",
    "ans": "Browser title bar"
  },
  {
    "ques": "Which tag links external CSS?<br><br>",
    "quesType": "mcq",
    "op1": "<meta>",
    "op2": "<script>",
    "op3": "<link>",
    "op4": "<style>",
    "ans": "<link>"
  },
  {
    "ques": "Which tag writes inline CSS?<br><br>",
    "quesType": "mcq",
    "op1": "<style>",
    "op2": "<link>",
    "op3": "<css>",
    "op4": "<meta>",
    "ans": "<style>"
  },
  {
    "ques": "Visible result:<br><br>&lt;style&gt;h1 {color:red;}&lt;/style&gt;",
    "quesType": "mcq",
    "op1": "No change",
    "op2": "H1 red",
    "op3": "H1 hidden",
    "op4": "H1 bold",
    "ans": "H1 red"
  },
  {
    "ques": "Which tag starts HTML doc?<br><br>",
    "quesType": "mcq",
    "op1": "<html>",
    "op2": "<head>",
    "op3": "<body>",
    "op4": "<!DOCTYPE>",
    "ans": "<html>"
  },
  {
    "ques": "Which is used for document declaration?<br><br>",
    "quesType": "mcq",
    "op1": "<meta>",
    "op2": "<html>",
    "op3": "<!DOCTYPE>",
    "op4": "<title>",
    "ans": "<!DOCTYPE>"
  },
  {
    "ques": "Which tag for table header cell?<br><br>",
    "quesType": "mcq",
    "op1": "<td>",
    "op2": "<th>",
    "op3": "<tr>",
    "op4": "<thead>",
    "ans": "<th>"
  },
  {
    "ques": "Which tag for table row?<br><br>",
    "quesType": "mcq",
    "op1": "<th>",
    "op2": "<td>",
    "op3": "<tr>",
    "op4": "<table>",
    "ans": "<tr>"
  },
  {
    "ques": "Output:<br><br>&lt;td&gt;Data&lt;/td&gt;",
    "quesType": "mcq",
    "op1": "th",
    "op2": "row",
    "op3": "Data",
    "op4": "<td>",
    "ans": "Data"
  },
  {
    "ques": "Which tag for table head section?<br><br>",
    "quesType": "mcq",
    "op1": "<thead>",
    "op2": "<tbody>",
    "op3": "<tfoot>",
    "op4": "<th>",
    "ans": "<thead>"
  },
  {
    "ques": "Which tag for table foot section?<br><br>",
    "quesType": "mcq",
    "op1": "<tfoot>",
    "op2": "<thead>",
    "op3": "<tbody>",
    "op4": "<tr>",
    "ans": "<tfoot>"
  },
  {
    "ques": "Which attribute merges cells horizontally?<br><br>",
    "quesType": "mcq",
    "op1": "rowspan",
    "op2": "colspan",
    "op3": "cellspan",
    "op4": "merge",
    "ans": "colspan"
  },
  {
    "ques": "Which tag creates form?<br><br>",
    "quesType": "mcq",
    "op1": "<form>",
    "op2": "<input>",
    "op3": "<fieldset>",
    "op4": "<section>",
    "ans": "<form>"
  },
  {
    "ques": "Which input type for password?<br><br>",
    "quesType": "mcq",
    "op1": "text",
    "op2": "hidden",
    "op3": "password",
    "op4": "button",
    "ans": "password"
  },
  {
    "ques": "Which input type for radio button?<br><br>",
    "quesType": "mcq",
    "op1": "radio",
    "op2": "checkbox",
    "op3": "button",
    "op4": "submit",
    "ans": "radio"
  },
  {
    "ques": "Which input type for multiple options?<br><br>",
    "quesType": "mcq",
    "op1": "radio",
    "op2": "checkbox",
    "op3": "button",
    "op4": "text",
    "ans": "checkbox"
  },
  {
    "ques": "Which tag creates dropdown?<br><br>",
    "quesType": "mcq",
    "op1": "<select>",
    "op2": "<option>",
    "op3": "<input>",
    "op4": "<label>",
    "ans": "<select>"
  },
  {
    "ques": "Which tag defines dropdown option?<br><br>",
    "quesType": "mcq",
    "op1": "<option>",
    "op2": "<select>",
    "op3": "<input>",
    "op4": "<label>",
    "ans": "<option>"
  },
  {
    "ques": "Which tag defines label text?<br><br>",
    "quesType": "mcq",
    "op1": "<label>",
    "op2": "<input>",
    "op3": "<form>",
    "op4": "<fieldset>",
    "ans": "<label>"
  },
  {
    "ques": "Output?<br><br>&lt;label&gt;Name:&lt;/label&gt;",
    "quesType": "mcq",
    "op1": "label",
    "op2": "Name:",
    "op3": "<label>",
    "op4": "Form",
    "ans": "Name:"
  },
  {
    "ques": "Which tag creates line break?<br><br>",
    "quesType": "mcq",
    "op1": "<hr>",
    "op2": "<br>",
    "op3": "<p>",
    "op4": "<div>",
    "ans": "<br>"
  },
  {
    "ques": "Which tag creates horizontal line?<br><br>",
    "quesType": "mcq",
    "op1": "<line>",
    "op2": "<br>",
    "op3": "<hr>",
    "op4": "<div>",
    "ans": "<hr>"
  },
  {
    "ques": "Which tag wraps block content?<br><br>",
    "quesType": "mcq",
    "op1": "<div>",
    "op2": "<span>",
    "op3": "<p>",
    "op4": "<section>",
    "ans": "<div>"
  },
  {
    "ques": "Which tag wraps inline content?<br><br>",
    "quesType": "mcq",
    "op1": "<div>",
    "op2": "<span>",
    "op3": "<p>",
    "op4": "<header>",
    "ans": "<span>"
  },
  {
    "ques": "Which tag for small print?<br><br>",
    "quesType": "mcq",
    "op1": "<small>",
    "op2": "<tiny>",
    "op3": "<span>",
    "op4": "<sup>",
    "ans": "<small>"
  },
  {
    "ques": "Output?<br><br>&lt;small&gt;Note&lt;/small&gt;",
    "quesType": "mcq",
    "op1": "Note",
    "op2": "small",
    "op3": "<small>",
    "op4": "None",
    "ans": "Note"
  },
  {
    "ques": "Which tag defines figure container?<br><br>",
    "quesType": "mcq",
    "op1": "<figure>",
    "op2": "<figcaption>",
    "op3": "<img>",
    "op4": "<caption>",
    "ans": "<figure>"
  },
  {
    "ques": "Which tag gives figure caption?<br><br>",
    "quesType": "mcq",
    "op1": "<figure>",
    "op2": "<caption>",
    "op3": "<figcaption>",
    "op4": "<summary>",
    "ans": "<figcaption>"
  },
  {
    "ques": "Which tag links an external CSS file?<br><br>",
    "quesType": "fill",
    "ans": "<link>"
  },
  {
    "ques": "Which tag puts CSS directly inside HTML?<br><br>",
    "quesType": "fill",
    "ans": "<style>"
  },
  {
    "ques": "Where does &lt;title&gt; appear?<br><br>",
    "quesType": "fill",
    "ans": "Browser title bar"
  },
  {
    "ques": "What does &lt;!DOCTYPE&gt; declare?<br><br>",
    "quesType": "fill",
    "ans": "Document type"
  },
  {
    "ques": "What is output?<br><br>&lt;title&gt;Site&lt;/title&gt;",
    "quesType": "fill",
    "ans": "Site"
  },
  {
    "ques": "Which tag starts a table?<br><br>",
    "quesType": "fill",
    "ans": "<table>"
  },
  {
    "ques": "Which tag for table row?<br><br>",
    "quesType": "fill",
    "ans": "<tr>"
  },
  {
    "ques": "Which tag for table header cell?<br><br>",
    "quesType": "fill",
    "ans": "<th>"
  },
  {
    "ques": "Which tag for table data cell?<br><br>",
    "quesType": "fill",
    "ans": "<td>"
  },
  {
    "ques": "What is output?<br><br>&lt;td&gt;Cell&lt;/td&gt;",
    "quesType": "fill",
    "ans": "Cell"
  },
  {
    "ques": "Which attribute merges table columns?<br><br>",
    "quesType": "fill",
    "ans": "colspan"
  },
  {
    "ques": "Which tag creates a form?<br><br>",
    "quesType": "fill",
    "ans": "<form>"
  },
  {
    "ques": "Which input type hides value?<br><br>",
    "quesType": "fill",
    "ans": "hidden"
  },
  {
    "ques": "Which input type for secret text?<br><br>",
    "quesType": "fill",
    "ans": "password"
  },
  {
    "ques": "Which input type for single choice?<br><br>",
    "quesType": "fill",
    "ans": "radio"
  },
  {
    "ques": "Which input type for multiple select?<br><br>",
    "quesType": "fill",
    "ans": "checkbox"
  },
  {
    "ques": "Which tag makes dropdown?<br><br>",
    "quesType": "fill",
    "ans": "<select>"
  },
  {
    "ques": "Which tag for dropdown option?<br><br>",
    "quesType": "fill",
    "ans": "<option>"
  },
  {
    "ques": "Which tag for label text?<br><br>",
    "quesType": "fill",
    "ans": "<label>"
  },
  {
    "ques": "What is output?<br><br>&lt;label&gt;Email&lt;/label&gt;",
    "quesType": "fill",
    "ans": "Email"
  },
  {
    "ques": "Which tag inserts line break?<br><br>",
    "quesType": "fill",
    "ans": "<br>"
  },
  {
    "ques": "Which tag draws a line?<br><br>",
    "quesType": "fill",
    "ans": "<hr>"
  },
  {
    "ques": "Which tag wraps block area?<br><br>",
    "quesType": "fill",
    "ans": "<div>"
  },
  {
    "ques": "Which tag wraps inline area?<br><br>",
    "quesType": "fill",
    "ans": "<span>"
  },
  {
    "ques": "Which tag makes small print?<br><br>",
    "quesType": "fill",
    "ans": "<small>"
  },
  {
    "ques": "Output?<br><br>&lt;small&gt;Fine print&lt;/small&gt;",
    "quesType": "fill",
    "ans": "Fine print"
  },
  {
    "ques": "Which tag wraps figure content?<br><br>",
    "quesType": "fill",
    "ans": "<figure>"
  },
  {
    "ques": "Which tag adds caption to figure?<br><br>",
    "quesType": "fill",
    "ans": "<figcaption>"
  },
  {
    "ques": "Which tag links to script file?<br><br>",
    "quesType": "fill",
    "ans": "<script>"
  },
  {
    "ques": "Which tag puts meta description?<br><br>",
    "quesType": "fill",
    "ans": "<meta>"
  },
  {
    "ques": "Which tag defines an unordered list?<br><br>",
    "quesType": "mcq",
    "op1": "<ol>",
    "op2": "<ul>",
    "op3": "<li>",
    "op4": "<dl>",
    "ans": "<ul>"
  },
  {
    "ques": "Which tag defines an ordered list?<br><br>",
    "quesType": "mcq",
    "op1": "<ul>",
    "op2": "<li>",
    "op3": "<ol>",
    "op4": "<dl>",
    "ans": "<ol>"
  },
  {
    "ques": "Which tag defines a list item?<br><br>",
    "quesType": "mcq",
    "op1": "<ul>",
    "op2": "<li>",
    "op3": "<ol>",
    "op4": "<dl>",
    "ans": "<li>"
  },
  {
    "ques": "Output?<br><br>&lt;li&gt;One&lt;/li&gt;",
    "quesType": "mcq",
    "op1": "1",
    "op2": "One",
    "op3": "li",
    "op4": "None",
    "ans": "One"
  },
  {
    "ques": "Which tag creates hyperlink?<br><br>",
    "quesType": "mcq",
    "op1": "<a>",
    "op2": "<link>",
    "op3": "<href>",
    "op4": "<url>",
    "ans": "<a>"
  },
  {
    "ques": "Which attribute sets link destination?<br><br>",
    "quesType": "mcq",
    "op1": "src",
    "op2": "href",
    "op3": "link",
    "op4": "path",
    "ans": "href"
  },
  {
    "ques": "Output?<br><br>&lt;a href='#'&gt;Click&lt;/a&gt;",
    "quesType": "mcq",
    "op1": "href",
    "op2": "Click",
    "op3": "#",
    "op4": "None",
    "ans": "Click"
  },
  {
    "ques": "Which tag embeds image?<br><br>",
    "quesType": "mcq",
    "op1": "<img>",
    "op2": "<image>",
    "op3": "<pic>",
    "op4": "<photo>",
    "ans": "<img>"
  },
  {
    "ques": "Which attribute sets image source?<br><br>",
    "quesType": "mcq",
    "op1": "href",
    "op2": "src",
    "op3": "path",
    "op4": "file",
    "ans": "src"
  },
  {
    "ques": "Which attribute adds alternate text?<br><br>",
    "quesType": "mcq",
    "op1": "title",
    "op2": "alt",
    "op3": "desc",
    "op4": "label",
    "ans": "alt"
  },
  {
    "ques": "Which tag adds audio?<br><br>",
    "quesType": "mcq",
    "op1": "<sound>",
    "op2": "<audio>",
    "op3": "<media>",
    "op4": "<video>",
    "ans": "<audio>"
  },
  {
    "ques": "Which tag adds video?<br><br>",
    "quesType": "mcq",
    "op1": "<media>",
    "op2": "<movie>",
    "op3": "<video>",
    "op4": "<audio>",
    "ans": "<video>"
  },
  {
    "ques": "Output?<br><br>&lt;video controls&gt;&lt;/video&gt;",
    "quesType": "mcq",
    "op1": "Video with controls",
    "op2": "Audio only",
    "op3": "Image",
    "op4": "Error",
    "ans": "Video with controls"
  },
  {
    "ques": "Which attribute autoplay media?<br><br>",
    "quesType": "mcq",
    "op1": "autoplay",
    "op2": "play",
    "op3": "start",
    "op4": "loop",
    "ans": "autoplay"
  },
  {
    "ques": "Which tag defines inline style?<br><br>",
    "quesType": "mcq",
    "op1": "<css>",
    "op2": "<style>",
    "op3": "<span>",
    "op4": "<div>",
    "ans": "<style>"
  },
  {
    "ques": "Which tag for inline container?<br><br>",
    "quesType": "mcq",
    "op1": "<div>",
    "op2": "<p>",
    "op3": "<span>",
    "op4": "<section>",
    "ans": "<span>"
  },
  {
    "ques": "Which tag is block element?<br><br>",
    "quesType": "mcq",
    "op1": "<div>",
    "op2": "<span>",
    "op3": "<em>",
    "op4": "<b>",
    "ans": "<div>"
  },
  {
    "ques": "Output?<br><br>&lt;p&gt;Para&lt;/p&gt;",
    "quesType": "mcq",
    "op1": "Paragraph",
    "op2": "Para",
    "op3": "<p>",
    "op4": "None",
    "ans": "Para"
  },
  {
    "ques": "Which tag for paragraph?<br><br>",
    "quesType": "mcq",
    "op1": "<div>",
    "op2": "<p>",
    "op3": "<span>",
    "op4": "<section>",
    "ans": "<p>"
  },
  {
    "ques": "Which tag for header 1?<br><br>",
    "quesType": "mcq",
    "op1": "<h1>",
    "op2": "<h2>",
    "op3": "<header>",
    "op4": "<head>",
    "ans": "<h1>"
  },
  {
    "ques": "Which tag for footer?<br><br>",
    "quesType": "mcq",
    "op1": "<foot>",
    "op2": "<footer>",
    "op3": "<bottom>",
    "op4": "<end>",
    "ans": "<footer>"
  },
  {
    "ques": "Output?<br><br>&lt;h3&gt;Heading&lt;/h3&gt;",
    "quesType": "mcq",
    "op1": "H3",
    "op2": "Heading",
    "op3": "<h3>",
    "op4": "None",
    "ans": "Heading"
  },
  {
    "ques": "Which tag for emphasis?<br><br>",
    "quesType": "mcq",
    "op1": "<em>",
    "op2": "<i>",
    "op3": "<strong>",
    "op4": "<b>",
    "ans": "<em>"
  },
  {
    "ques": "Which tag for strong importance?<br><br>",
    "quesType": "mcq",
    "op1": "<em>",
    "op2": "<strong>",
    "op3": "<i>",
    "op4": "<b>",
    "ans": "<strong>"
  },
  {
    "ques": "Output?<br><br>&lt;em&gt;Text&lt;/em&gt;",
    "quesType": "mcq",
    "op1": "<em>",
    "op2": "Text",
    "op3": "em",
    "op4": "None",
    "ans": "Text"
  },
  {
    "ques": "Which tag adds line break?<br><br>",
    "quesType": "mcq",
    "op1": "<br>",
    "op2": "<hr>",
    "op3": "<p>",
    "op4": "<span>",
    "ans": "<br>"
  },
  {
    "ques": "Which tag creates horizontal rule?<br><br>",
    "quesType": "mcq",
    "op1": "<hr>",
    "op2": "<br>",
    "op3": "<line>",
    "op4": "<div>",
    "ans": "<hr>"
  },
  {
    "ques": "Which tag makes inline code?<br><br>",
    "quesType": "mcq",
    "op1": "<pre>",
    "op2": "<code>",
    "op3": "<kbd>",
    "op4": "<samp>",
    "ans": "<code>"
  },
  {
    "ques": "Output?<br><br>&lt;code&gt;x = 10&lt;/code&gt;",
    "quesType": "mcq",
    "op1": "x = 10",
    "op2": "code",
    "op3": "<code>",
    "op4": "None",
    "ans": "x = 10"
  },
  {
    "ques": "Which tag defines an unordered list?<br><br>",
    "quesType": "fill",
    "ans": "<ul>"
  },
  {
    "ques": "Which tag defines an ordered list?<br><br>",
    "quesType": "fill",
    "ans": "<ol>"
  },
  {
    "ques": "Which tag defines a list item?<br><br>",
    "quesType": "fill",
    "ans": "<li>"
  },
  {
    "ques": "What is output?<br><br>&lt;li&gt;First&lt;/li&gt;",
    "quesType": "fill",
    "ans": "First"
  },
  {
    "ques": "Which tag creates a hyperlink?<br><br>",
    "quesType": "fill",
    "ans": "<a>"
  },
  {
    "ques": "Which attribute sets link address?<br><br>",
    "quesType": "fill",
    "ans": "href"
  },
  {
    "ques": "What is output?<br><br>&lt;a href='url'&gt;Go&lt;/a&gt;",
    "quesType": "fill",
    "ans": "Go"
  },
  {
    "ques": "Which tag adds image?<br><br>",
    "quesType": "fill",
    "ans": "<img>"
  },
  {
    "ques": "Which attribute defines image source?<br><br>",
    "quesType": "fill",
    "ans": "src"
  },
  {
    "ques": "Which attribute gives alt text for image?<br><br>",
    "quesType": "fill",
    "ans": "alt"
  },
  {
    "ques": "Which tag for audio content?<br><br>",
    "quesType": "fill",
    "ans": "<audio>"
  },
  {
    "ques": "Which tag for video content?<br><br>",
    "quesType": "fill",
    "ans": "<video>"
  },
  {
    "ques": "Which attribute starts playback automatically?<br><br>",
    "quesType": "fill",
    "ans": "autoplay"
  },
  {
    "ques": "Which tag adds inline container?<br><br>",
    "quesType": "fill",
    "ans": "<span>"
  },
  {
    "ques": "Which tag adds block container?<br><br>",
    "quesType": "fill",
    "ans": "<div>"
  },
  {
    "ques": "What is output?<br><br>&lt;p&gt;Hello&lt;/p&gt;",
    "quesType": "fill",
    "ans": "Hello"
  },
  {
    "ques": "Which tag defines paragraph?<br><br>",
    "quesType": "fill",
    "ans": "<p>"
  },
  {
    "ques": "Which tag defines main heading?<br><br>",
    "quesType": "fill",
    "ans": "<h1>"
  },
  {
    "ques": "Which tag for page footer?<br><br>",
    "quesType": "fill",
    "ans": "<footer>"
  },
  {
    "ques": "Output?<br><br>&lt;h2&gt;Title&lt;/h2&gt;",
    "quesType": "fill",
    "ans": "Title"
  },
  {
    "ques": "Which tag for emphasis text?<br><br>",
    "quesType": "fill",
    "ans": "<em>"
  },
  {
    "ques": "Which tag for strong text?<br><br>",
    "quesType": "fill",
    "ans": "<strong>"
  },
  {
    "ques": "Output?<br><br>&lt;strong&gt;Bold&lt;/strong&gt;",
    "quesType": "fill",
    "ans": "Bold"
  },
  {
    "ques": "Which tag creates line break?<br><br>",
    "quesType": "fill",
    "ans": "<br>"
  },
  {
    "ques": "Which tag adds horizontal line?<br><br>",
    "quesType": "fill",
    "ans": "<hr>"
  },
  {
    "ques": "Which tag defines inline code?<br><br>",
    "quesType": "fill",
    "ans": "<code>"
  },
  {
    "ques": "Output?<br><br>&lt;code&gt;print&lt;/code&gt;",
    "quesType": "fill",
    "ans": "print"
  },
  {
    "ques": "Which tag for keyboard input?<br><br>",
    "quesType": "fill",
    "ans": "<kbd>"
  },
  {
    "ques": "Which tag for sample output?<br><br>",
    "quesType": "fill",
    "ans": "<samp>"
  },
  {
    "ques": "Which tag for preformatted text?<br><br>",
    "quesType": "fill",
    "ans": "<pre>"
  },
  {
    "ques": "Which tag makes text italic?<br><br>",
    "quesType": "mcq",
    "op1": "<i>",
    "op2": "<em>",
    "op3": "<strong>",
    "op4": "<b>",
    "ans": "<i>"
  },
  {
    "ques": "Which tag makes text bold?<br><br>",
    "quesType": "mcq",
    "op1": "<strong>",
    "op2": "<b>",
    "op3": "<i>",
    "op4": "<em>",
    "ans": "<b>"
  },
  {
    "ques": "Output?<br><br>&lt;i&gt;Italic&lt;/i&gt;",
    "quesType": "mcq",
    "op1": "<i>",
    "op2": "Italic",
    "op3": "i",
    "op4": "None",
    "ans": "Italic"
  },
  {
    "ques": "Which tag creates a description list?<br><br>",
    "quesType": "mcq",
    "op1": "<ul>",
    "op2": "<ol>",
    "op3": "<dl>",
    "op4": "<li>",
    "ans": "<dl>"
  },
  {
    "ques": "Which tag defines a term in a description list?<br><br>",
    "quesType": "mcq",
    "op1": "<dt>",
    "op2": "<dd>",
    "op3": "<dl>",
    "op4": "<li>",
    "ans": "<dt>"
  },
  {
    "ques": "Which tag describes the term?<br><br>",
    "quesType": "mcq",
    "op1": "<dl>",
    "op2": "<dt>",
    "op3": "<dd>",
    "op4": "<li>",
    "ans": "<dd>"
  },
  {
    "ques": "Output?<br><br>&lt;dt&gt;HTML&lt;/dt&gt;",
    "quesType": "mcq",
    "op1": "HTML",
    "op2": "<dt>",
    "op3": "dt",
    "op4": "None",
    "ans": "HTML"
  },
  {
    "ques": "Which tag is used for metadata?<br><br>",
    "quesType": "mcq",
    "op1": "<head>",
    "op2": "<meta>",
    "op3": "<header>",
    "op4": "<title>",
    "ans": "<meta>"
  },
  {
    "ques": "Which tag sets page title?<br><br>",
    "quesType": "mcq",
    "op1": "<title>",
    "op2": "<head>",
    "op3": "<meta>",
    "op4": "<header>",
    "ans": "<title>"
  },
  {
    "ques": "Output?<br><br>&lt;title&gt;Webpage&lt;/title&gt;",
    "quesType": "mcq",
    "op1": "Webpage",
    "op2": "<title>",
    "op3": "title",
    "op4": "None",
    "ans": "Webpage"
  },
  {
    "ques": "Which tag adds navigation links?<br><br>",
    "quesType": "mcq",
    "op1": "<nav>",
    "op2": "<menu>",
    "op3": "<header>",
    "op4": "<ul>",
    "ans": "<nav>"
  },
  {
    "ques": "Which tag defines main content?<br><br>",
    "quesType": "mcq",
    "op1": "<main>",
    "op2": "<body>",
    "op3": "<section>",
    "op4": "<div>",
    "ans": "<main>"
  },
  {
    "ques": "Which tag groups content?<br><br>",
    "quesType": "mcq",
    "op1": "<div>",
    "op2": "<section>",
    "op3": "<article>",
    "op4": "<aside>",
    "ans": "<section>"
  },
  {
    "ques": "Which tag for independent content?<br><br>",
    "quesType": "mcq",
    "op1": "<article>",
    "op2": "<section>",
    "op3": "<aside>",
    "op4": "<nav>",
    "ans": "<article>"
  },
  {
    "ques": "Which tag for sidebar?<br><br>",
    "quesType": "mcq",
    "op1": "<aside>",
    "op2": "<section>",
    "op3": "<article>",
    "op4": "<div>",
    "ans": "<aside>"
  },
  {
    "ques": "Output?<br><br>&lt;aside&gt;Note&lt;/aside&gt;",
    "quesType": "mcq",
    "op1": "Note",
    "op2": "<aside>",
    "op3": "aside",
    "op4": "None",
    "ans": "Note"
  },
  {
    "ques": "Which tag adds comment?<br><br>",
    "quesType": "mcq",
    "op1": "&lt;!-- --&gt;",
    "op2": "<comment>",
    "op3": "<note>",
    "op4": "<meta>",
    "ans": "&lt;!-- --&gt;"
  },
  {
    "ques": "Which tag defines style inside HTML?<br><br>",
    "quesType": "mcq",
    "op1": "<css>",
    "op2": "<style>",
    "op3": "<link>",
    "op4": "<span>",
    "ans": "<style>"
  },
  {
    "ques": "Which tag links JS file?<br><br>",
    "quesType": "mcq",
    "op1": "<script>",
    "op2": "<link>",
    "op3": "<style>",
    "op4": "<meta>",
    "ans": "<script>"
  },
  {
    "ques": "Output?<br><br>&lt;script&gt;console.log('Hi');&lt;/script&gt;",
    "quesType": "mcq",
    "op1": "Hi",
    "op2": "Console log",
    "op3": "<script>",
    "op4": "Error",
    "ans": "Hi"
  },
  {
    "ques": "Which tag for input field?<br><br>",
    "quesType": "mcq",
    "op1": "<input>",
    "op2": "<form>",
    "op3": "<label>",
    "op4": "<select>",
    "ans": "<input>"
  },
  {
    "ques": "Which tag for label text?<br><br>",
    "quesType": "mcq",
    "op1": "<label>",
    "op2": "<input>",
    "op3": "<span>",
    "op4": "<div>",
    "ans": "<label>"
  },
  {
    "ques": "Which tag for button?<br><br>",
    "quesType": "mcq",
    "op1": "<input>",
    "op2": "<button>",
    "op3": "<submit>",
    "op4": "<click>",
    "ans": "<button>"
  },
  {
    "ques": "Which tag defines drop-down menu?<br><br>",
    "quesType": "mcq",
    "op1": "<input>",
    "op2": "<select>",
    "op3": "<option>",
    "op4": "<list>",
    "ans": "<select>"
  },
  {
    "ques": "Which tag defines choice inside select?<br><br>",
    "quesType": "mcq",
    "op1": "<select>",
    "op2": "<option>",
    "op3": "<list>",
    "op4": "<item>",
    "ans": "<option>"
  },
  {
    "ques": "Output?<br><br>&lt;option&gt;One&lt;/option&gt;",
    "quesType": "mcq",
    "op1": "One",
    "op2": "option",
    "op3": "<option>",
    "op4": "None",
    "ans": "One"
  },
  {
    "ques": "Which tag defines image map?<br><br>",
    "quesType": "mcq",
    "op1": "<map>",
    "op2": "<imgmap>",
    "op3": "<area>",
    "op4": "<image>",
    "ans": "<map>"
  },
  {
    "ques": "Which tag defines clickable area in image map?<br><br>",
    "quesType": "mcq",
    "op1": "<map>",
    "op2": "<area>",
    "op3": "<section>",
    "op4": "<div>",
    "ans": "<area>"
  },
  {
    "ques": "Output?<br><br>&lt;area&gt; no visible content",
    "quesType": "mcq",
    "op1": "Nothing",
    "op2": "area",
    "op3": "<area>",
    "op4": "Error",
    "ans": "Nothing"
  },
  {
    "ques": "Which tag makes text italic?<br><br>",
    "quesType": "fill",
    "ans": "<i>"
  },
  {
    "ques": "Which tag makes text bold?<br><br>",
    "quesType": "fill",
    "ans": "<b>"
  },
  {
    "ques": "What is output?<br><br>&lt;i&gt;Italic&lt;/i&gt;",
    "quesType": "fill",
    "ans": "Italic"
  },
  {
    "ques": "Which tag defines a description list?<br><br>",
    "quesType": "fill",
    "ans": "<dl>"
  },
  {
    "ques": "Which tag defines a term in description list?<br><br>",
    "quesType": "fill",
    "ans": "<dt>"
  },
  {
    "ques": "Which tag describes the term?<br><br>",
    "quesType": "fill",
    "ans": "<dd>"
  },
  {
    "ques": "Output?<br><br>&lt;dt&gt;Term&lt;/dt&gt;",
    "quesType": "fill",
    "ans": "Term"
  },
  {
    "ques": "Which tag holds metadata?<br><br>",
    "quesType": "fill",
    "ans": "<meta>"
  },
  {
    "ques": "Which tag sets page title?<br><br>",
    "quesType": "fill",
    "ans": "<title>"
  },
  {
    "ques": "Output?<br><br>&lt;title&gt;Site&lt;/title&gt;",
    "quesType": "fill",
    "ans": "Site"
  },
  {
    "ques": "Which tag adds site navigation?<br><br>",
    "quesType": "fill",
    "ans": "<nav>"
  },
  {
    "ques": "Which tag defines main content?<br><br>",
    "quesType": "fill",
    "ans": "<main>"
  },
  {
    "ques": "Which tag groups sections?<br><br>",
    "quesType": "fill",
    "ans": "<section>"
  },
  {
    "ques": "Which tag defines independent article?<br><br>",
    "quesType": "fill",
    "ans": "<article>"
  },
  {
    "ques": "Which tag defines a sidebar?<br><br>",
    "quesType": "fill",
    "ans": "<aside>"
  },
  {
    "ques": "Output?<br><br>&lt;aside&gt;Info&lt;/aside&gt;",
    "quesType": "fill",
    "ans": "Info"
  },
  {
    "ques": "What is HTML comment syntax?<br><br>",
    "quesType": "fill",
    "ans": "&lt;!-- --&gt;"
  },
  {
    "ques": "Which tag adds internal CSS?<br><br>",
    "quesType": "fill",
    "ans": "<style>"
  },
  {
    "ques": "Which tag links JavaScript?<br><br>",
    "quesType": "fill",
    "ans": "<script>"
  },
  {
    "ques": "What will print?<br><br>&lt;script&gt;console.log('OK');&lt;/script&gt;",
    "quesType": "fill",
    "ans": "OK"
  },
  {
    "ques": "Which tag for text input?<br><br>",
    "quesType": "fill",
    "ans": "<input>"
  },
  {
    "ques": "Which tag for label?<br><br>",
    "quesType": "fill",
    "ans": "<label>"
  },
  {
    "ques": "Which tag for button?<br><br>",
    "quesType": "fill",
    "ans": "<button>"
  },
  {
    "ques": "Which tag for drop-down?<br><br>",
    "quesType": "fill",
    "ans": "<select>"
  },
  {
    "ques": "Which tag for option choice?<br><br>",
    "quesType": "fill",
    "ans": "<option>"
  },
  {
    "ques": "Output?<br><br>&lt;option&gt;Two&lt;/option&gt;",
    "quesType": "fill",
    "ans": "Two"
  },
  {
    "ques": "Which tag makes image map?<br><br>",
    "quesType": "fill",
    "ans": "<map>"
  },
  {
    "ques": "Which tag defines clickable area?<br><br>",
    "quesType": "fill",
    "ans": "<area>"
  },
  {
    "ques": "Does &lt;area&gt; show text by default?<br><br>",
    "quesType": "fill",
    "ans": "No"
  },
  {
    "ques": "Which tag for doc type declaration?<br><br>",
    "quesType": "fill",
    "ans": "<!DOCTYPE>"
  }

]

let codinghtml3Arr=[
  {
    "ques": "Which tag declares the document type for HTML5?<br><br>",
    "quesType": "mcq",
    "op1": "<html>",
    "op2": "<!DOCTYPE html>",
    "op3": "<doctype>",
    "op4": "<meta>",
    "ans": "<!DOCTYPE html>"
  },
  {
    "ques": "Which tag defines a container for external application or interactive content?<br><br>",
    "quesType": "mcq",
    "op1": "<embed>",
    "op2": "<iframe>",
    "op3": "<object>",
    "op4": "<applet>",
    "ans": "<object>"
  },
  {
    "ques": "Output?<br><br>&lt;pre&gt;Line 1\nLine 2&lt;/pre&gt;",
    "quesType": "mcq",
    "op1": "Line 1 Line 2",
    "op2": "Line 1\nLine 2",
    "op3": "Line 1 Line2",
    "op4": "Line 1<br>Line 2",
    "ans": "Line 1\nLine 2"
  },
  {
    "ques": "Which attribute is used for accessibility to describe an image?<br><br>",
    "quesType": "mcq",
    "op1": "href",
    "op2": "alt",
    "op3": "src",
    "op4": "title",
    "ans": "alt"
  },
  {
    "ques": "Which tag is used to embed scalable vector graphics?<br><br>",
    "quesType": "mcq",
    "op1": "<canvas>",
    "op2": "<svg>",
    "op3": "<object>",
    "op4": "<img>",
    "ans": "<svg>"
  },
  {
    "ques": "Which tag represents self-contained content?<br><br>",
    "quesType": "mcq",
    "op1": "<section>",
    "op2": "<article>",
    "op3": "<aside>",
    "op4": "<main>",
    "ans": "<article>"
  },
  {
    "ques": "Which tag defines a caption for a figure element?<br><br>",
    "quesType": "mcq",
    "op1": "<legend>",
    "op2": "<caption>",
    "op3": "<figcaption>",
    "op4": "<summary>",
    "ans": "<figcaption>"
  },
  {
    "ques": "Output?<br><br>&lt;mark&gt;Highlight&lt;/mark&gt;",
    "quesType": "mcq",
    "op1": "mark",
    "op2": "<mark>",
    "op3": "Highlight",
    "op4": "None",
    "ans": "Highlight"
  },
  {
    "ques": "Which element shows a contact info?<br><br>",
    "quesType": "mcq",
    "op1": "<footer>",
    "op2": "<header>",
    "op3": "<address>",
    "op4": "<contact>",
    "ans": "<address>"
  },
  {
    "ques": "Which tag is used for grouped headings and related content?<br><br>",
    "quesType": "mcq",
    "op1": "<header>",
    "op2": "<nav>",
    "op3": "<aside>",
    "op4": "<figure>",
    "ans": "<header>"
  },
  {
    "ques": "Which tag indicates important text?<br><br>",
    "quesType": "mcq",
    "op1": "<b>",
    "op2": "<em>",
    "op3": "<strong>",
    "op4": "<mark>",
    "ans": "<strong>"
  },
  {
    "ques": "Output?<br><br>&lt;abbr title='World Health Organization'&gt;WHO&lt;/abbr&gt;",
    "quesType": "mcq",
    "op1": "WHO",
    "op2": "abbr",
    "op3": "<abbr>",
    "op4": "None",
    "ans": "WHO"
  },
  {
    "ques": "Which tag creates collapsible content?<br><br>",
    "quesType": "mcq",
    "op1": "<details>",
    "op2": "<summary>",
    "op3": "<dialog>",
    "op4": "<mark>",
    "ans": "<details>"
  },
  {
    "ques": "Which tag specifies visible heading for details?<br><br>",
    "quesType": "mcq",
    "op1": "<caption>",
    "op2": "<summary>",
    "op3": "<title>",
    "op4": "<header>",
    "ans": "<summary>"
  },
  {
    "ques": "Which tag defines an output for a calculation?<br><br>",
    "quesType": "mcq",
    "op1": "<output>",
    "op2": "<meter>",
    "op3": "<progress>",
    "op4": "<var>",
    "ans": "<output>"
  },
  {
    "ques": "Which tag represents a variable?<br><br>",
    "quesType": "mcq",
    "op1": "<var>",
    "op2": "<samp>",
    "op3": "<kbd>",
    "op4": "<code>",
    "ans": "<var>"
  },
  {
    "ques": "Which tag is used for user keyboard input?<br><br>",
    "quesType": "mcq",
    "op1": "<kbd>",
    "op2": "<var>",
    "op3": "<samp>",
    "op4": "<code>",
    "ans": "<kbd>"
  },
  {
    "ques": "Output?<br><br>&lt;progress value='70' max='100'&gt;&lt;/progress&gt;",
    "quesType": "mcq",
    "op1": "Progress bar",
    "op2": "Text only",
    "op3": "No output",
    "op4": "Error",
    "ans": "Progress bar"
  },
  {
    "ques": "Which tag represents measurement within range?<br><br>",
    "quesType": "mcq",
    "op1": "<meter>",
    "op2": "<progress>",
    "op3": "<output>",
    "op4": "<input>",
    "ans": "<meter>"
  },
  {
    "ques": "Which tag defines a dialog box?<br><br>",
    "quesType": "mcq",
    "op1": "<dialog>",
    "op2": "<details>",
    "op3": "<summary>",
    "op4": "<mark>",
    "ans": "<dialog>"
  },
  {
    "ques": "What is HTML5 doctype declaration?<br><br>",
    "quesType": "fill",
    "ans": "<!DOCTYPE html>"
  },
  {
    "ques": "Which tag embeds vector graphics?<br><br>",
    "quesType": "fill",
    "ans": "<svg>"
  },
  {
    "ques": "Which tag embeds bitmap drawing?<br><br>",
    "quesType": "fill",
    "ans": "<canvas>"
  },
  {
    "ques": "Output?<br><br>&lt;mark&gt;New&lt;/mark&gt;",
    "quesType": "fill",
    "ans": "New"
  },
  {
    "ques": "Which tag defines caption for a figure?<br><br>",
    "quesType": "fill",
    "ans": "<figcaption>"
  },
  {
    "ques": "Which tag for contact information?<br><br>",
    "quesType": "fill",
    "ans": "<address>"
  },
  {
    "ques": "Which tag for keyboard input?<br><br>",
    "quesType": "fill",
    "ans": "<kbd>"
  },
  {
    "ques": "Which tag for variable name?<br><br>",
    "quesType": "fill",
    "ans": "<var>"
  },
  {
    "ques": "Which tag for computer output?<br><br>",
    "quesType": "fill",
    "ans": "<samp>"
  },
  {
    "ques": "Output?<br><br>&lt;abbr title='Cascading Style Sheets'&gt;CSS&lt;/abbr&gt;",
    "quesType": "fill",
    "ans": "CSS"
  },
  {
    "ques": "Which tag defines collapsible content?<br><br>",
    "quesType": "fill",
    "ans": "<details>"
  },
  {
    "ques": "Which tag shows summary of details?<br><br>",
    "quesType": "fill",
    "ans": "<summary>"
  },
  {
    "ques": "Which tag is used for progress bar?<br><br>",
    "quesType": "fill",
    "ans": "<progress>"
  },
  {
    "ques": "Which tag measures a value within range?<br><br>",
    "quesType": "fill",
    "ans": "<meter>"
  },
  {
    "ques": "Output?<br><br>&lt;progress value='50' max='100'&gt;&lt;/progress&gt;",
    "quesType": "fill",
    "ans": "Progress bar"
  },
  {
    "ques": "Which tag defines output result?<br><br>",
    "quesType": "fill",
    "ans": "<output>"
  },
  {
    "ques": "Which tag defines a dialog box?<br><br>",
    "quesType": "fill",
    "ans": "<dialog>"
  },
  {
    "ques": "Which tag for sample output?<br><br>",
    "quesType": "fill",
    "ans": "<samp>"
  },
  {
    "ques": "Which tag defines user keyboard input?<br><br>",
    "quesType": "fill",
    "ans": "<kbd>"
  },
  {
    "ques": "Which tag wraps code snippets?<br><br>",
    "quesType": "fill",
    "ans": "<code>"
  },
  {
    "ques": "Which attribute defines keyboard shortcut for an element?<br><br>",
    "quesType": "mcq",
    "op1": "accesskey",
    "op2": "tabindex",
    "op3": "shortcut",
    "op4": "role",
    "ans": "accesskey"
  },
  {
    "ques": "Which global attribute specifies text direction?<br><br>",
    "quesType": "mcq",
    "op1": "lang",
    "op2": "dir",
    "op3": "role",
    "op4": "aria-dir",
    "ans": "dir"
  },
  {
    "ques": "Which tag is used for machine-readable data?<br><br>",
    "quesType": "mcq",
    "op1": "<data>",
    "op2": "<var>",
    "op3": "<output>",
    "op4": "<samp>",
    "ans": "<data>"
  },
  {
    "ques": "Output?<br><br>&lt;time datetime='2025-12-31'&gt;Dec 31&lt;/time&gt;",
    "quesType": "mcq",
    "op1": "Dec 31",
    "op2": "2025-12-31",
    "op3": "<time>",
    "op4": "Error",
    "ans": "Dec 31"
  },
  {
    "ques": "Which tag specifies contact for document author?<br><br>",
    "quesType": "mcq",
    "op1": "<footer>",
    "op2": "<address>",
    "op3": "<contact>",
    "op4": "<header>",
    "ans": "<address>"
  },
  {
    "ques": "Which tag represents side comments not part of main flow?<br><br>",
    "quesType": "mcq",
    "op1": "<aside>",
    "op2": "<nav>",
    "op3": "<header>",
    "op4": "<footer>",
    "ans": "<aside>"
  },
  {
    "ques": "Which element is for media resources like video streams?<br><br>",
    "quesType": "mcq",
    "op1": "<source>",
    "op2": "<track>",
    "op3": "<video>",
    "op4": "<embed>",
    "ans": "<source>"
  },
  {
    "ques": "Which tag adds subtitles to video?<br><br>",
    "quesType": "mcq",
    "op1": "<track>",
    "op2": "<source>",
    "op3": "<script>",
    "op4": "<sub>",
    "ans": "<track>"
  },
  {
    "ques": "Output?<br><br>&lt;wbr&gt; inside text?",
    "quesType": "mcq",
    "op1": "Word break",
    "op2": "No output",
    "op3": "Error",
    "op4": "None",
    "ans": "Word break"
  },
  {
    "ques": "Which attribute provides advisory info for an element?<br><br>",
    "quesType": "mcq",
    "op1": "title",
    "op2": "alt",
    "op3": "label",
    "op4": "aria-label",
    "ans": "title"
  },
  {
    "ques": "Which tag creates a placeholder for JavaScript?<br><br>",
    "quesType": "mcq",
    "op1": "<noscript>",
    "op2": "<script>",
    "op3": "<style>",
    "op4": "<meta>",
    "ans": "<noscript>"
  },
  {
    "ques": "Which element provides fallback text for older browsers?<br><br>",
    "quesType": "mcq",
    "op1": "<noscript>",
    "op2": "<script>",
    "op3": "<fallback>",
    "op4": "<meta>",
    "ans": "<noscript>"
  },
  {
    "ques": "Output?<br><br>&lt;code&gt;let x = 5;&lt;/code&gt;",
    "quesType": "mcq",
    "op1": "let x = 5;",
    "op2": "code",
    "op3": "<code>",
    "op4": "None",
    "ans": "let x = 5;"
  },
  {
    "ques": "Which tag groups related form elements?<br><br>",
    "quesType": "mcq",
    "op1": "<fieldset>",
    "op2": "<legend>",
    "op3": "<form>",
    "op4": "<section>",
    "ans": "<fieldset>"
  },
  {
    "ques": "Which tag defines a caption for fieldset?<br><br>",
    "quesType": "mcq",
    "op1": "<legend>",
    "op2": "<label>",
    "op3": "<caption>",
    "op4": "<figcaption>",
    "ans": "<legend>"
  },
  {
    "ques": "Which ARIA role makes custom div behave as a button?<br><br>",
    "quesType": "mcq",
    "op1": "aria-role='button'",
    "op2": "role='button'",
    "op3": "button='aria'",
    "op4": "tabindex='button'",
    "ans": "role='button'"
  },
  {
    "ques": "Which tag links to external feeds?<br><br>",
    "quesType": "mcq",
    "op1": "<feed>",
    "op2": "<link>",
    "op3": "<meta>",
    "op4": "<style>",
    "ans": "<link>"
  },
  {
    "ques": "Which attribute prevents user input in form field?<br><br>",
    "quesType": "mcq",
    "op1": "disabled",
    "op2": "readonly",
    "op3": "noinput",
    "op4": "block",
    "ans": "disabled"
  },
  {
    "ques": "Which tag defines machine-readable date/time?<br><br>",
    "quesType": "mcq",
    "op1": "<time>",
    "op2": "<data>",
    "op3": "<output>",
    "op4": "<var>",
    "ans": "<time>"
  },
  {
    "ques": "Output?<br><br>&lt;data value='42'&gt;Answer&lt;/data&gt;",
    "quesType": "mcq",
    "op1": "Answer",
    "op2": "42",
    "op3": "<data>",
    "op4": "None",
    "ans": "Answer"
  },
   {
    "ques": "Which attribute sets keyboard shortcut?<br><br>",
    "quesType": "fill",
    "ans": "accesskey"
  },
  {
    "ques": "Which global attribute sets text direction?<br><br>",
    "quesType": "fill",
    "ans": "dir"
  },
  {
    "ques": "Which tag represents machine-readable value?<br><br>",
    "quesType": "fill",
    "ans": "<data>"
  },
  {
    "ques": "Output?<br><br>&lt;time datetime='2025-01-01'&gt;New Year&lt;/time&gt;",
    "quesType": "fill",
    "ans": "New Year"
  },
  {
    "ques": "Which tag defines contact info?<br><br>",
    "quesType": "fill",
    "ans": "<address>"
  },
  {
    "ques": "Which tag adds external media source?<br><br>",
    "quesType": "fill",
    "ans": "<source>"
  },
  {
    "ques": "Which tag adds video captions?<br><br>",
    "quesType": "fill",
    "ans": "<track>"
  },
  {
    "ques": "Which tag breaks word automatically?<br><br>",
    "quesType": "fill",
    "ans": "<wbr>"
  },
  {
    "ques": "Which attribute gives tooltip text?<br><br>",
    "quesType": "fill",
    "ans": "title"
  },
  {
    "ques": "Which tag shows JS fallback?<br><br>",
    "quesType": "fill",
    "ans": "<noscript>"
  },
  {
    "ques": "Output?<br><br>&lt;code&gt;print('Hello')&lt;/code&gt;",
    "quesType": "fill",
    "ans": "print('Hello')"
  },
  {
    "ques": "Which tag groups form inputs?<br><br>",
    "quesType": "fill",
    "ans": "<fieldset>"
  },
  {
    "ques": "Which tag captions fieldset?<br><br>",
    "quesType": "fill",
    "ans": "<legend>"
  },
  {
    "ques": "Which ARIA role makes div a button?<br><br>",
    "quesType": "fill",
    "ans": "role='button'"
  },
  {
    "ques": "Which tag for external feed link?<br><br>",
    "quesType": "fill",
    "ans": "<link>"
  },
  {
    "ques": "Which attribute disables form input?<br><br>",
    "quesType": "fill",
    "ans": "disabled"
  },
  {
    "ques": "Which tag for date/time?<br><br>",
    "quesType": "fill",
    "ans": "<time>"
  },
  {
    "ques": "Output?<br><br>&lt;data value='99'&gt;Score&lt;/data&gt;",
    "quesType": "fill",
    "ans": "Score"
  },
  {
    "ques": "Which tag breaks text without new line?<br><br>",
    "quesType": "fill",
    "ans": "<wbr>"
  },
  {
    "ques": "Which tag for fallback text if JS disabled?<br><br>",
    "quesType": "fill",
    "ans": "<noscript>"
  },
  {
    "ques": "Which tag specifies alternative content for browsers that do not support frames?<br><br>",
    "quesType": "mcq",
    "op1": "<noframes>",
    "op2": "<noscript>",
    "op3": "<noembed>",
    "op4": "<fallback>",
    "ans": "<noframes>"
  },
  {
    "ques": "Which tag is used to define variables in mathematical expressions?<br><br>",
    "quesType": "mcq",
    "op1": "<var>",
    "op2": "<samp>",
    "op3": "<kbd>",
    "op4": "<code>",
    "ans": "<var>"
  },
  {
    "ques": "What does the <kbd> tag represent?<br><br>",
    "quesType": "mcq",
    "op1": "User keyboard input",
    "op2": "Code snippet",
    "op3": "Sample output",
    "op4": "Variable",
    "ans": "User keyboard input"
  },
  {
    "ques": "Output?<br><br>&lt;samp&gt;404 Not Found&lt;/samp&gt;",
    "quesType": "mcq",
    "op1": "404 Not Found",
    "op2": "samp",
    "op3": "Error",
    "op4": "None",
    "ans": "404 Not Found"
  },
  {
    "ques": "Which tag is used for bidirectional override?<br><br>",
    "quesType": "mcq",
    "op1": "<bdo>",
    "op2": "<bdi>",
    "op3": "<dir>",
    "op4": "<bdi-override>",
    "ans": "<bdo>"
  },
  {
    "ques": "Which tag isolates text direction?<br><br>",
    "quesType": "mcq",
    "op1": "<bdi>",
    "op2": "<bdo>",
    "op3": "<dir>",
    "op4": "<mark>",
    "ans": "<bdi>"
  },
  {
    "ques": "Which attribute specifies that an input field must be filled?<br><br>",
    "quesType": "mcq",
    "op1": "required",
    "op2": "readonly",
    "op3": "disabled",
    "op4": "novalidate",
    "ans": "required"
  },
  {
    "ques": "Which tag is used for script fallback for no JS?<br><br>",
    "quesType": "mcq",
    "op1": "<noscript>",
    "op2": "<noframes>",
    "op3": "<fallback>",
    "op4": "<noembed>",
    "ans": "<noscript>"
  },
  {
    "ques": "Which tag groups related options in dropdown?<br><br>",
    "quesType": "mcq",
    "op1": "<optgroup>",
    "op2": "<select>",
    "op3": "<option>",
    "op4": "<datalist>",
    "ans": "<optgroup>"
  },
  {
    "ques": "Which tag defines list item?<br><br>",
    "quesType": "mcq",
    "op1": "<li>",
    "op2": "<ul>",
    "op3": "<ol>",
    "op4": "<dl>",
    "ans": "<li>"
  },
  {
    "ques": "Output?<br><br>&lt;abbr title='HyperText Markup Language'&gt;HTML&lt;/abbr&gt;",
    "quesType": "mcq",
    "op1": "HTML",
    "op2": "abbr",
    "op3": "<abbr>",
    "op4": "None",
    "ans": "HTML"
  },
  {
    "ques": "Which tag defines metadata about an HTML document?<br><br>",
    "quesType": "mcq",
    "op1": "<meta>",
    "op2": "<link>",
    "op3": "<head>",
    "op4": "<base>",
    "ans": "<meta>"
  },
  {
    "ques": "Which attribute gives advisory info about an element?<br><br>",
    "quesType": "mcq",
    "op1": "title",
    "op2": "alt",
    "op3": "href",
    "op4": "src",
    "ans": "title"
  },
  {
    "ques": "Which tag is used to define base URL?<br><br>",
    "quesType": "mcq",
    "op1": "<base>",
    "op2": "<link>",
    "op3": "<meta>",
    "op4": "<url>",
    "ans": "<base>"
  },
  {
    "ques": "Which tag defines an inline frame?<br><br>",
    "quesType": "mcq",
    "op1": "<iframe>",
    "op2": "<frame>",
    "op3": "<frameset>",
    "op4": "<embed>",
    "ans": "<iframe>"
  },
  {
    "ques": "Output?<br><br>&lt;bdo dir='rtl'&gt;HTML&lt;/bdo&gt;",
    "quesType": "mcq",
    "op1": "LTMH",
    "op2": "HTML",
    "op3": "rtl",
    "op4": "None",
    "ans": "LTMH"
  },
  {
    "ques": "Which element is used for plugins like Flash?<br><br>",
    "quesType": "mcq",
    "op1": "<embed>",
    "op2": "<object>",
    "op3": "<applet>",
    "op4": "<iframe>",
    "ans": "<embed>"
  },
  {
    "ques": "Which tag is for fallback text for old browsers with no video support?<br><br>",
    "quesType": "mcq",
    "op1": "<video>",
    "op2": "<object>",
    "op3": "<embed>",
    "op4": "<noframes>",
    "ans": "<video>"
  },
  {
    "ques": "Which tag represents progress of a task?<br><br>",
    "quesType": "mcq",
    "op1": "<progress>",
    "op2": "<meter>",
    "op3": "<output>",
    "op4": "<data>",
    "ans": "<progress>"
  },
  {
    "ques": "Which tag represents a scalar measurement?<br><br>",
    "quesType": "mcq",
    "op1": "<meter>",
    "op2": "<progress>",
    "op3": "<output>",
    "op4": "<time>",
    "ans": "<meter>"
  },
  {
    "ques": "Which tag disables script for no JS support?<br><br>",
    "quesType": "fill",
    "ans": "<noscript>"
  },
  {
    "ques": "Which tag disables frames for no frame support?<br><br>",
    "quesType": "fill",
    "ans": "<noframes>"
  },
  {
    "ques": "Which tag groups related options in dropdown?<br><br>",
    "quesType": "fill",
    "ans": "<optgroup>"
  },
  {
    "ques": "Which tag defines a list item?<br><br>",
    "quesType": "fill",
    "ans": "<li>"
  },
  {
    "ques": "Which tag is used for bidirectional override?<br><br>",
    "quesType": "fill",
    "ans": "<bdo>"
  },
  {
    "ques": "Which tag isolates text direction?<br><br>",
    "quesType": "fill",
    "ans": "<bdi>"
  },
  {
    "ques": "Which tag defines a scalar measurement?<br><br>",
    "quesType": "fill",
    "ans": "<meter>"
  },
  {
    "ques": "Which tag represents task progress?<br><br>",
    "quesType": "fill",
    "ans": "<progress>"
  },
  {
    "ques": "Which tag is used for an inline frame?<br><br>",
    "quesType": "fill",
    "ans": "<iframe>"
  },
  {
    "ques": "Which tag defines base URL?<br><br>",
    "quesType": "fill",
    "ans": "<base>"
  },
  {
    "ques": "Which tag is for metadata?<br><br>",
    "quesType": "fill",
    "ans": "<meta>"
  },
  {
    "ques": "Which tag represents variable in equations?<br><br>",
    "quesType": "fill",
    "ans": "<var>"
  },
  {
    "ques": "Which tag represents user keyboard input?<br><br>",
    "quesType": "fill",
    "ans": "<kbd>"
  },
  {
    "ques": "Which tag shows sample output?<br><br>",
    "quesType": "fill",
    "ans": "<samp>"
  },
  {
    "ques": "Which tag shows code snippets?<br><br>",
    "quesType": "fill",
    "ans": "<code>"
  },
  {
    "ques": "Which tag embeds plugin like Flash?<br><br>",
    "quesType": "fill",
    "ans": "<embed>"
  },
  {
    "ques": "Which tag is used for bidirectional text override?<br><br>",
    "quesType": "fill",
    "ans": "<bdo>"
  },
  {
    "ques": "Which tag allows fallback text for video?<br><br>",
    "quesType": "fill",
    "ans": "<video>"
  },
  {
    "ques": "Which attribute makes an input required?<br><br>",
    "quesType": "fill",
    "ans": "required"
  },
  {
    "ques": "Which tag is for base URL for relative links?<br><br>",
    "quesType": "fill",
    "ans": "<base>"
  },
  {
    "ques": "Which tag defines a section that is self-contained?<br><br>",
    "quesType": "mcq",
    "op1": "<section>",
    "op2": "<article>",
    "op3": "<aside>",
    "op4": "<main>",
    "ans": "<article>"
  },
  {
    "ques": "Which tag indicates the main content of the document?<br><br>",
    "quesType": "mcq",
    "op1": "<main>",
    "op2": "<body>",
    "op3": "<section>",
    "op4": "<header>",
    "ans": "<main>"
  },
  {
    "ques": "Which tag represents a term in a description list?<br><br>",
    "quesType": "mcq",
    "op1": "<dt>",
    "op2": "<dd>",
    "op3": "<dl>",
    "op4": "<li>",
    "ans": "<dt>"
  },
  {
    "ques": "Which tag describes the value of a term in a description list?<br><br>",
    "quesType": "mcq",
    "op1": "<dd>",
    "op2": "<dt>",
    "op3": "<dl>",
    "op4": "<li>",
    "ans": "<dd>"
  },
  {
    "ques": "Which tag defines a list of terms?<br><br>",
    "quesType": "mcq",
    "op1": "<dl>",
    "op2": "<ul>",
    "op3": "<ol>",
    "op4": "<li>",
    "ans": "<dl>"
  },
  {
    "ques": "Which element represents side content?<br><br>",
    "quesType": "mcq",
    "op1": "<aside>",
    "op2": "<article>",
    "op3": "<section>",
    "op4": "<header>",
    "ans": "<aside>"
  },
  {
    "ques": "Output?<br><br>&lt;mark&gt;Important&lt;/mark&gt;",
    "quesType": "mcq",
    "op1": "Important",
    "op2": "<mark>",
    "op3": "Error",
    "op4": "None",
    "ans": "Important"
  },
  {
    "ques": "Which tag indicates emphasized text?<br><br>",
    "quesType": "mcq",
    "op1": "<em>",
    "op2": "<strong>",
    "op3": "<mark>",
    "op4": "<small>",
    "ans": "<em>"
  },
  {
    "ques": "Which tag indicates strong importance?<br><br>",
    "quesType": "mcq",
    "op1": "<strong>",
    "op2": "<em>",
    "op3": "<b>",
    "op4": "<mark>",
    "ans": "<strong>"
  },
  {
    "ques": "Which tag defines contact information?<br><br>",
    "quesType": "mcq",
    "op1": "<address>",
    "op2": "<footer>",
    "op3": "<header>",
    "op4": "<article>",
    "ans": "<address>"
  },
  {
    "ques": "Output?<br><br>&lt;small&gt;Note&lt;/small&gt;",
    "quesType": "mcq",
    "op1": "Note",
    "op2": "small",
    "op3": "Error",
    "op4": "None",
    "ans": "Note"
  },
  {
    "ques": "Which element represents computer output?<br><br>",
    "quesType": "mcq",
    "op1": "<samp>",
    "op2": "<code>",
    "op3": "<var>",
    "op4": "<kbd>",
    "ans": "<samp>"
  },
  {
    "ques": "Which tag shows user input?<br><br>",
    "quesType": "mcq",
    "op1": "<kbd>",
    "op2": "<samp>",
    "op3": "<code>",
    "op4": "<output>",
    "ans": "<kbd>"
  },
  {
    "ques": "Which tag renders program code?<br><br>",
    "quesType": "mcq",
    "op1": "<code>",
    "op2": "<samp>",
    "op3": "<kbd>",
    "op4": "<var>",
    "ans": "<code>"
  },
  {
    "ques": "Which tag is for embedded plugins?<br><br>",
    "quesType": "mcq",
    "op1": "<object>",
    "op2": "<embed>",
    "op3": "<iframe>",
    "op4": "<applet>",
    "ans": "<object>"
  },
  {
    "ques": "Which element represents inline quote?<br><br>",
    "quesType": "mcq",
    "op1": "<q>",
    "op2": "<blockquote>",
    "op3": "<cite>",
    "op4": "<code>",
    "ans": "<q>"
  },
  {
    "ques": "Output?<br><br>&lt;q&gt;Hello&lt;/q&gt;",
    "quesType": "mcq",
    "op1": "Hello",
    "op2": "\"Hello\"",
    "op3": "q",
    "op4": "None",
    "ans": "Hello"
  },
  {
    "ques": "Which tag defines longer quoted sections?<br><br>",
    "quesType": "mcq",
    "op1": "<blockquote>",
    "op2": "<q>",
    "op3": "<cite>",
    "op4": "<code>",
    "ans": "<blockquote>"
  },
  {
    "ques": "Which tag indicates citation?<br><br>",
    "quesType": "mcq",
    "op1": "<cite>",
    "op2": "<q>",
    "op3": "<blockquote>",
    "op4": "<abbr>",
    "ans": "<cite>"
  },
  {
    "ques": "Which tag for abbreviation?<br><br>",
    "quesType": "mcq",
    "op1": "<abbr>",
    "op2": "<cite>",
    "op3": "<q>",
    "op4": "<dfn>",
    "ans": "<abbr>"
  },
  {
    "ques": "Which tag for definition term?<br><br>",
    "quesType": "mcq",
    "op1": "<dfn>",
    "op2": "<abbr>",
    "op3": "<cite>",
    "op4": "<q>",
    "ans": "<dfn>"
  },
  {
    "ques": "Which tag defines measurement within a range?<br><br>",
    "quesType": "mcq",
    "op1": "<meter>",
    "op2": "<progress>",
    "op3": "<output>",
    "op4": "<data>",
    "ans": "<meter>"
  },
  {
    "ques": "Which tag is for self-contained content?<br><br>",
    "quesType": "mcq",
    "op1": "<article>",
    "op2": "<aside>",
    "op3": "<section>",
    "op4": "<main>",
    "ans": "<article>"
  },
  {
    "ques": "Which tag defines output of calculation?<br><br>",
    "quesType": "mcq",
    "op1": "<output>",
    "op2": "<code>",
    "op3": "<samp>",
    "op4": "<kbd>",
    "ans": "<output>"
  },
  {
    "ques": "Which attribute disables an element?<br><br>",
    "quesType": "mcq",
    "op1": "disabled",
    "op2": "readonly",
    "op3": "required",
    "op4": "hidden",
    "ans": "disabled"
  },
  {
    "ques": "Which attribute specifies placeholder text?<br><br>",
    "quesType": "mcq",
    "op1": "placeholder",
    "op2": "alt",
    "op3": "title",
    "op4": "value",
    "ans": "placeholder"
  },
  {
    "ques": "Output?<br><br>&lt;cite&gt;Shakespeare&lt;/cite&gt;",
    "quesType": "mcq",
    "op1": "Shakespeare",
    "op2": "cite",
    "op3": "<cite>",
    "op4": "None",
    "ans": "Shakespeare"
  },
  {
    "ques": "Which tag defines fallback content for unsupported media?<br><br>",
    "quesType": "mcq",
    "op1": "<object>",
    "op2": "<embed>",
    "op3": "<applet>",
    "op4": "<noframes>",
    "ans": "<object>"
  },
  {
    "ques": "Which tag represents editable content?<br><br>",
    "quesType": "mcq",
    "op1": "contenteditable",
    "op2": "<input>",
    "op3": "<textarea>",
    "op4": "<div>",
    "ans": "contenteditable"
  },
  {
    "ques": "Which tag defines a term in description list?<br><br>",
    "quesType": "fill",
    "ans": "<dt>"
  },
  {
    "ques": "Which tag describes the term's value in description list?<br><br>",
    "quesType": "fill",
    "ans": "<dd>"
  },
  {
    "ques": "Which tag defines a list of terms?<br><br>",
    "quesType": "fill",
    "ans": "<dl>"
  },
  {
    "ques": "Which tag marks highlighted text?<br><br>",
    "quesType": "fill",
    "ans": "<mark>"
  },
  {
    "ques": "Which tag means emphasized text?<br><br>",
    "quesType": "fill",
    "ans": "<em>"
  },
  {
    "ques": "Which tag indicates strong importance?<br><br>",
    "quesType": "fill",
    "ans": "<strong>"
  },
  {
    "ques": "Which tag provides contact info?<br><br>",
    "quesType": "fill",
    "ans": "<address>"
  },
  {
    "ques": "Which tag shows sample output?<br><br>",
    "quesType": "fill",
    "ans": "<samp>"
  },
  {
    "ques": "Which tag shows keyboard input?<br><br>",
    "quesType": "fill",
    "ans": "<kbd>"
  },
  {
    "ques": "Which tag shows program code?<br><br>",
    "quesType": "fill",
    "ans": "<code>"
  },
  {
    "ques": "Which tag for inline quote?<br><br>",
    "quesType": "fill",
    "ans": "<q>"
  },
  {
    "ques": "Which tag for block quote?<br><br>",
    "quesType": "fill",
    "ans": "<blockquote>"
  },
  {
    "ques": "Which tag for citation?<br><br>",
    "quesType": "fill",
    "ans": "<cite>"
  },
  {
    "ques": "Which tag for abbreviation?<br><br>",
    "quesType": "fill",
    "ans": "<abbr>"
  },
  {
    "ques": "Which tag for defining term?<br><br>",
    "quesType": "fill",
    "ans": "<dfn>"
  },
  {
    "ques": "Which tag for measurement?<br><br>",
    "quesType": "fill",
    "ans": "<meter>"
  },
  {
    "ques": "Which tag for task progress?<br><br>",
    "quesType": "fill",
    "ans": "<progress>"
  },
  {
    "ques": "Which tag shows calculation result?<br><br>",
    "quesType": "fill",
    "ans": "<output>"
  },
  {
    "ques": "Which attribute disables element?<br><br>",
    "quesType": "fill",
    "ans": "disabled"
  },
  {
    "ques": "Which attribute gives placeholder?<br><br>",
    "quesType": "fill",
    "ans": "placeholder"
  },
  {
    "ques": "Which tag for fallback content in object?<br><br>",
    "quesType": "fill",
    "ans": "<object>"
  },
  {
    "ques": "Which tag means content editable?<br><br>",
    "quesType": "fill",
    "ans": "contenteditable"
  },
  {
    "ques": "Which tag means main document content?<br><br>",
    "quesType": "fill",
    "ans": "<main>"
  },
  {
    "ques": "Which tag means separate content?<br><br>",
    "quesType": "fill",
    "ans": "<article>"
  },
  {
    "ques": "Which tag means side content?<br><br>",
    "quesType": "fill",
    "ans": "<aside>"
  },
  {
    "ques": "Which tag means section?<br><br>",
    "quesType": "fill",
    "ans": "<section>"
  },
  {
    "ques": "Which tag means heading?<br><br>",
    "quesType": "fill",
    "ans": "<header>"
  },
  {
    "ques": "Which tag means footer?<br><br>",
    "quesType": "fill",
    "ans": "<footer>"
  },
  {
    "ques": "Which tag means navigation links?<br><br>",
    "quesType": "fill",
    "ans": "<nav>"
  },
  {
    "ques": "Which tag means figure caption?<br><br>",
    "quesType": "fill",
    "ans": "<figcaption>"
  },
  {
    "ques": "Which element defines time or date?<br><br>",
    "quesType": "mcq",
    "op1": "<time>",
    "op2": "<data>",
    "op3": "<meter>",
    "op4": "<progress>",
    "ans": "<time>"
  },
  {
    "ques": "Which tag specifies a caption for a table?<br><br>",
    "quesType": "mcq",
    "op1": "<caption>",
    "op2": "<thead>",
    "op3": "<th>",
    "op4": "<summary>",
    "ans": "<caption>"
  },
  {
    "ques": "Output?<br><br>&lt;time datetime='2025-07-06'&gt;July 6&lt;/time&gt;",
    "quesType": "mcq",
    "op1": "July 6",
    "op2": "2025-07-06",
    "op3": "time",
    "op4": "None",
    "ans": "July 6"
  },
  {
    "ques": "Which tag represents a figure or illustration?<br><br>",
    "quesType": "mcq",
    "op1": "<figure>",
    "op2": "<figcaption>",
    "op3": "<img>",
    "op4": "<object>",
    "ans": "<figure>"
  },
  {
    "ques": "Which tag represents a caption for a figure?<br><br>",
    "quesType": "mcq",
    "op1": "<figcaption>",
    "op2": "<caption>",
    "op3": "<legend>",
    "op4": "<summary>",
    "ans": "<figcaption>"
  },
  {
    "ques": "Which tag defines a scalar measurement within a range?<br><br>",
    "quesType": "mcq",
    "op1": "<meter>",
    "op2": "<progress>",
    "op3": "<data>",
    "op4": "<output>",
    "ans": "<meter>"
  },
  {
    "ques": "Which attribute gives a hint to the browser for autocomplete?<br><br>",
    "quesType": "mcq",
    "op1": "autocomplete",
    "op2": "autofocus",
    "op3": "placeholder",
    "op4": "pattern",
    "ans": "autocomplete"
  },
  {
    "ques": "Output?<br><br>&lt;dfn&gt;HTML&lt;/dfn&gt;",
    "quesType": "mcq",
    "op1": "HTML",
    "op2": "<dfn>",
    "op3": "dfn",
    "op4": "None",
    "ans": "HTML"
  },
  {
    "ques": "Which tag is used for additional details that can be shown or hidden?<br><br>",
    "quesType": "mcq",
    "op1": "<details>",
    "op2": "<summary>",
    "op3": "<dialog>",
    "op4": "<aside>",
    "ans": "<details>"
  },
  {
    "ques": "Which tag is used to define a visible heading for the <details> element?<br><br>",
    "quesType": "mcq",
    "op1": "<summary>",
    "op2": "<details>",
    "op3": "<header>",
    "op4": "<caption>",
    "ans": "<summary>"
  },
  {
    "ques": "Which tag is used to represent a dialog box or interactive window?<br><br>",
    "quesType": "mcq",
    "op1": "<dialog>",
    "op2": "<details>",
    "op3": "<summary>",
    "op4": "<aside>",
    "ans": "<dialog>"
  },
  {
    "ques": "Which tag specifies the source for multiple media resources?<br><br>",
    "quesType": "mcq",
    "op1": "<source>",
    "op2": "<track>",
    "op3": "<embed>",
    "op4": "<object>",
    "ans": "<source>"
  },
  {
    "ques": "Which tag specifies text tracks for media elements?<br><br>",
    "quesType": "mcq",
    "op1": "<track>",
    "op2": "<source>",
    "op3": "<script>",
    "op4": "<noscript>",
    "ans": "<track>"
  },
  {
    "ques": "Which attribute sets that the input should automatically get focus?<br><br>",
    "quesType": "mcq",
    "op1": "autofocus",
    "op2": "required",
    "op3": "readonly",
    "op4": "checked",
    "ans": "autofocus"
  },
  {
    "ques": "Output?<br><br>&lt;wbr&gt;",
    "quesType": "mcq",
    "op1": "Word break opportunity",
    "op2": "Error",
    "op3": "Nothing visible",
    "op4": "wbr",
    "ans": "Nothing visible"
  },
  {
    "ques": "Which element specifies a possible line break?<br><br>",
    "quesType": "mcq",
    "op1": "<wbr>",
    "op2": "<br>",
    "op3": "<hr>",
    "op4": "<bdo>",
    "ans": "<wbr>"
  },
  {
    "ques": "Which tag defines ruby annotation?<br><br>",
    "quesType": "mcq",
    "op1": "<ruby>",
    "op2": "<rt>",
    "op3": "<rp>",
    "op4": "<span>",
    "ans": "<ruby>"
  },
  {
    "ques": "Which tag provides pronunciation for ruby text?<br><br>",
    "quesType": "mcq",
    "op1": "<rt>",
    "op2": "<ruby>",
    "op3": "<rp>",
    "op4": "<span>",
    "ans": "<rt>"
  },
  {
    "ques": "Which tag provides fallback parentheses for ruby text?<br><br>",
    "quesType": "mcq",
    "op1": "<rp>",
    "op2": "<rt>",
    "op3": "<ruby>",
    "op4": "<span>",
    "ans": "<rp>"
  },
  {
    "ques": "Which attribute restricts input with a pattern?<br><br>",
    "quesType": "mcq",
    "op1": "pattern",
    "op2": "placeholder",
    "op3": "required",
    "op4": "checked",
    "ans": "pattern"
  },
  {
    "ques": "Which tag is used for an embedded SVG graphic?<br><br>",
    "quesType": "mcq",
    "op1": "<svg>",
    "op2": "<canvas>",
    "op3": "<object>",
    "op4": "<embed>",
    "ans": "<svg>"
  },
  {
    "ques": "Which tag is used for drawing graphics via scripting?<br><br>",
    "quesType": "mcq",
    "op1": "<canvas>",
    "op2": "<svg>",
    "op3": "<embed>",
    "op4": "<object>",
    "ans": "<canvas>"
  },
  {
    "ques": "Which attribute disables autocomplete?<br><br>",
    "quesType": "mcq",
    "op1": "autocomplete=\"off\"",
    "op2": "autofocus",
    "op3": "disabled",
    "op4": "required",
    "ans": "autocomplete=\"off\""
  },
  {
    "ques": "Which tag defines grouped form fields?<br><br>",
    "quesType": "mcq",
    "op1": "<fieldset>",
    "op2": "<legend>",
    "op3": "<form>",
    "op4": "<section>",
    "ans": "<fieldset>"
  },
  {
    "ques": "Which tag provides caption for <fieldset>?<br><br>",
    "quesType": "mcq",
    "op1": "<legend>",
    "op2": "<caption>",
    "op3": "<summary>",
    "op4": "<details>",
    "ans": "<legend>"
  },
  {
    "ques": "Which attribute specifies that input must be unique?<br><br>",
    "quesType": "mcq",
    "op1": "pattern",
    "op2": "name",
    "op3": "id",
    "op4": "unique",
    "ans": "id"
  },
  {
    "ques": "Output?<br><br>&lt;canvas&gt;&lt;/canvas&gt;",
    "quesType": "mcq",
    "op1": "Nothing visible",
    "op2": "canvas",
    "op3": "Error",
    "op4": "<canvas>",
    "ans": "Nothing visible"
  },
  {
    "ques": "Which tag is used to embed an external web page?<br><br>",
    "quesType": "mcq",
    "op1": "<iframe>",
    "op2": "<embed>",
    "op3": "<object>",
    "op4": "<applet>",
    "ans": "<iframe>"
  },
  {
    "ques": "Which attribute defines the relationship between a document and linked resource?<br><br>",
    "quesType": "mcq",
    "op1": "rel",
    "op2": "href",
    "op3": "src",
    "op4": "alt",
    "ans": "rel"
  },
  {
    "ques": "Which tag links a resource to a document?<br><br>",
    "quesType": "mcq",
    "op1": "<link>",
    "op2": "<meta>",
    "op3": "<base>",
    "op4": "<style>",
    "ans": "<link>"
  },
  {"ques": "Tag for time or date?<br><br>", "quesType": "fill", "ans": "<time>"},
  {"ques": "Tag for table caption?<br><br>", "quesType": "fill", "ans": "<caption>"},
  {"ques": "Tag for figure container?<br><br>", "quesType": "fill", "ans": "<figure>"},
  {"ques": "Tag for figure caption?<br><br>", "quesType": "fill", "ans": "<figcaption>"},
  {"ques": "Tag for grouped form fields?<br><br>", "quesType": "fill", "ans": "<fieldset>"},
  {"ques": "Tag for caption inside fieldset?<br><br>", "quesType": "fill", "ans": "<legend>"},
  {"ques": "Tag for additional hidden info?<br><br>", "quesType": "fill", "ans": "<details>"},
  {"ques": "Tag for summary inside details?<br><br>", "quesType": "fill", "ans": "<summary>"},
  {"ques": "Tag for dialog box?<br><br>", "quesType": "fill", "ans": "<dialog>"},
  {"ques": "Tag for multiple media source?<br><br>", "quesType": "fill", "ans": "<source>"},
  {"ques": "Tag for text tracks?<br><br>", "quesType": "fill", "ans": "<track>"},
  {"ques": "Tag for word break opportunity?<br><br>", "quesType": "fill", "ans": "<wbr>"},
  {"ques": "Tag for ruby annotation?<br><br>", "quesType": "fill", "ans": "<ruby>"},
  {"ques": "Tag for ruby pronunciation?<br><br>", "quesType": "fill", "ans": "<rt>"},
  {"ques": "Tag for ruby fallback?<br><br>", "quesType": "fill", "ans": "<rp>"},
  {"ques": "Tag for SVG container?<br><br>", "quesType": "fill", "ans": "<svg>"},
  {"ques": "Tag for graphics via scripting?<br><br>", "quesType": "fill", "ans": "<canvas>"},
  {"ques": "Tag for embedded page?<br><br>", "quesType": "fill", "ans": "<iframe>"},
  {"ques": "Attribute for pattern restriction?<br><br>", "quesType": "fill", "ans": "pattern"},
  {"ques": "Attribute for autocomplete?<br><br>", "quesType": "fill", "ans": "autocomplete"},
  {"ques": "Attribute to disable autocomplete?<br><br>", "quesType": "fill", "ans": "autocomplete=\"off\""},
  {"ques": "Attribute for autofocus?<br><br>", "quesType": "fill", "ans": "autofocus"},
  {"ques": "Attribute for rel link?<br><br>", "quesType": "fill", "ans": "rel"},
  {"ques": "Tag for external resource link?<br><br>", "quesType": "fill", "ans": "<link>"},
  {"ques": "Tag for fallback media?<br><br>", "quesType": "fill", "ans": "<object>"},
  {"ques": "Tag for term definition?<br><br>", "quesType": "fill", "ans": "<dfn>"},
  {"ques": "Tag for abbreviation?<br><br>", "quesType": "fill", "ans": "<abbr>"},
  {"ques": "Tag for measurement?<br><br>", "quesType": "fill", "ans": "<meter>"},
  {"ques": "Tag for progress bar?<br><br>", "quesType": "fill", "ans": "<progress>"},
  {"ques": "Tag for output calculation?<br><br>", "quesType": "fill", "ans": "<output>"},
  {
    "ques": "Which element defines navigation links section?<br><br>",
    "quesType": "mcq",
    "op1": "<nav>",
    "op2": "<section>",
    "op3": "<aside>",
    "op4": "<header>",
    "ans": "<nav>"
  },
  {
    "ques": "Which element is used for footer content?<br><br>",
    "quesType": "mcq",
    "op1": "<footer>",
    "op2": "<section>",
    "op3": "<aside>",
    "op4": "<main>",
    "ans": "<footer>"
  },
  {
    "ques": "Which tag defines main content of page?<br><br>",
    "quesType": "mcq",
    "op1": "<main>",
    "op2": "<article>",
    "op3": "<body>",
    "op4": "<section>",
    "ans": "<main>"
  },
  {
    "ques": "Output?<br><br>&lt;mark&gt;Important&lt;/mark&gt;",
    "quesType": "mcq",
    "op1": "Important",
    "op2": "mark",
    "op3": "<mark>",
    "op4": "None",
    "ans": "Important"
  },
  {
    "ques": "Which tag highlights text?<br><br>",
    "quesType": "mcq",
    "op1": "<mark>",
    "op2": "<b>",
    "op3": "<strong>",
    "op4": "<em>",
    "ans": "<mark>"
  },
  {
    "ques": "Which element defines a contact address?<br><br>",
    "quesType": "mcq",
    "op1": "<address>",
    "op2": "<footer>",
    "op3": "<aside>",
    "op4": "<header>",
    "ans": "<address>"
  },
  {
    "ques": "Which tag defines user input?<br><br>",
    "quesType": "mcq",
    "op1": "<kbd>",
    "op2": "<samp>",
    "op3": "<code>",
    "op4": "<var>",
    "ans": "<kbd>"
  },
  {
    "ques": "Which tag represents variable?<br><br>",
    "quesType": "mcq",
    "op1": "<var>",
    "op2": "<samp>",
    "op3": "<kbd>",
    "op4": "<code>",
    "ans": "<var>"
  },
  {
    "ques": "Which tag shows computer output?<br><br>",
    "quesType": "mcq",
    "op1": "<samp>",
    "op2": "<kbd>",
    "op3": "<code>",
    "op4": "<var>",
    "ans": "<samp>"
  },
  {
    "ques": "Output?<br><br>&lt;progress value='60' max='100'&gt;&lt;/progress&gt;",
    "quesType": "mcq",
    "op1": "Progress bar",
    "op2": "Number",
    "op3": "Nothing",
    "op4": "Error",
    "ans": "Progress bar"
  },
  {
    "ques": "Which tag specifies data list of options?<br><br>",
    "quesType": "mcq",
    "op1": "<datalist>",
    "op2": "<select>",
    "op3": "<option>",
    "op4": "<input>",
    "ans": "<datalist>"
  },
  {
    "ques": "Which element groups related options?<br><br>",
    "quesType": "mcq",
    "op1": "<optgroup>",
    "op2": "<option>",
    "op3": "<select>",
    "op4": "<input>",
    "ans": "<optgroup>"
  },
  {
    "ques": "Which tag defines inline code?<br><br>",
    "quesType": "mcq",
    "op1": "<code>",
    "op2": "<samp>",
    "op3": "<kbd>",
    "op4": "<var>",
    "ans": "<code>"
  },
  {
    "ques": "Which attribute disables input?<br><br>",
    "quesType": "mcq",
    "op1": "disabled",
    "op2": "readonly",
    "op3": "hidden",
    "op4": "required",
    "ans": "disabled"
  },
  {
    "ques": "Output?<br><br>&lt;abbr title='World Health Organization'&gt;WHO&lt;/abbr&gt;",
    "quesType": "mcq",
    "op1": "WHO",
    "op2": "abbr",
    "op3": "<abbr>",
    "op4": "None",
    "ans": "WHO"
  },
  {
    "ques": "Which attribute gives abbreviation meaning?<br><br>",
    "quesType": "mcq",
    "op1": "title",
    "op2": "alt",
    "op3": "rel",
    "op4": "href",
    "ans": "title"
  },
  {
    "ques": "Which tag represents contact information?<br><br>",
    "quesType": "mcq",
    "op1": "<address>",
    "op2": "<footer>",
    "op3": "<header>",
    "op4": "<nav>",
    "ans": "<address>"
  },
  {
    "ques": "Which tag shows deleted text?<br><br>",
    "quesType": "mcq",
    "op1": "<del>",
    "op2": "<ins>",
    "op3": "<s>",
    "op4": "<strike>",
    "ans": "<del>"
  },
  {
    "ques": "Which tag shows inserted text?<br><br>",
    "quesType": "mcq",
    "op1": "<ins>",
    "op2": "<del>",
    "op3": "<u>",
    "op4": "<b>",
    "ans": "<ins>"
  },
  {
    "ques": "Output?<br><br>&lt;ins&gt;Added&lt;/ins&gt;",
    "quesType": "mcq",
    "op1": "Added",
    "op2": "ins",
    "op3": "<ins>",
    "op4": "None",
    "ans": "Added"
  },
  {
    "ques": "Which tag defines bidirectional override?<br><br>",
    "quesType": "mcq",
    "op1": "<bdo>",
    "op2": "<bdi>",
    "op3": "<dir>",
    "op4": "<cite>",
    "ans": "<bdo>"
  },
  {
    "ques": "Which tag isolates part for formatting direction?<br><br>",
    "quesType": "mcq",
    "op1": "<bdi>",
    "op2": "<bdo>",
    "op3": "<dir>",
    "op4": "<cite>",
    "ans": "<bdi>"
  },
  {
    "ques": "Which tag defines citation?<br><br>",
    "quesType": "mcq",
    "op1": "<cite>",
    "op2": "<q>",
    "op3": "<blockquote>",
    "op4": "<abbr>",
    "ans": "<cite>"
  },
  {
    "ques": "Which tag is used for short quotation?<br><br>",
    "quesType": "mcq",
    "op1": "<q>",
    "op2": "<blockquote>",
    "op3": "<cite>",
    "op4": "<abbr>",
    "ans": "<q>"
  },
  {
    "ques": "Which tag is for long quotation?<br><br>",
    "quesType": "mcq",
    "op1": "<blockquote>",
    "op2": "<q>",
    "op3": "<cite>",
    "op4": "<abbr>",
    "ans": "<blockquote>"
  },
  {
    "ques": "Output?<br><br>&lt;blockquote&gt;Quote&lt;/blockquote&gt;",
    "quesType": "mcq",
    "op1": "Quote",
    "op2": "blockquote",
    "op3": "<blockquote>",
    "op4": "None",
    "ans": "Quote"
  },
  {
    "ques": "Which tag groups footer info?<br><br>",
    "quesType": "mcq",
    "op1": "<footer>",
    "op2": "<address>",
    "op3": "<nav>",
    "op4": "<main>",
    "ans": "<footer>"
  },
  {
    "ques": "Which tag is for metadata?<br><br>",
    "quesType": "mcq",
    "op1": "<meta>",
    "op2": "<link>",
    "op3": "<base>",
    "op4": "<head>",
    "ans": "<meta>"
  },
  {
    "ques": "Which tag sets base URL for links?<br><br>",
    "quesType": "mcq",
    "op1": "<base>",
    "op2": "<head>",
    "op3": "<link>",
    "op4": "<meta>",
    "ans": "<base>"
  },
   {"ques": "Tag for page navigation links?<br><br>", "quesType": "fill", "ans": "<nav>"},
  {"ques": "Tag for page footer?<br><br>", "quesType": "fill", "ans": "<footer>"},
  {"ques": "Tag for main content?<br><br>", "quesType": "fill", "ans": "<main>"},
  {"ques": "Tag for highlighted text?<br><br>", "quesType": "fill", "ans": "<mark>"},
  {"ques": "Tag for contact info?<br><br>", "quesType": "fill", "ans": "<address>"},
  {"ques": "Tag for user input?<br><br>", "quesType": "fill", "ans": "<kbd>"},
  {"ques": "Tag for variable?<br><br>", "quesType": "fill", "ans": "<var>"},
  {"ques": "Tag for computer output?<br><br>", "quesType": "fill", "ans": "<samp>"},
  {"ques": "Tag for abbreviation?<br><br>", "quesType": "fill", "ans": "<abbr>"},
  {"ques": "Tag for deleted text?<br><br>", "quesType": "fill", "ans": "<del>"},
  {"ques": "Tag for inserted text?<br><br>", "quesType": "fill", "ans": "<ins>"},
  {"ques": "Tag for citation?<br><br>", "quesType": "fill", "ans": "<cite>"},
  {"ques": "Tag for short quote?<br><br>", "quesType": "fill", "ans": "<q>"},
  {"ques": "Tag for long quote?<br><br>", "quesType": "fill", "ans": "<blockquote>"},
  {"ques": "Tag for inline code?<br><br>", "quesType": "fill", "ans": "<code>"},
  {"ques": "Tag for datalist?<br><br>", "quesType": "fill", "ans": "<datalist>"},
  {"ques": "Tag for grouped options?<br><br>", "quesType": "fill", "ans": "<optgroup>"},
  {"ques": "Tag for base URL?<br><br>", "quesType": "fill", "ans": "<base>"},
  {"ques": "Tag for metadata?<br><br>", "quesType": "fill", "ans": "<meta>"},
  {"ques": "Tag for rel link?<br><br>", "quesType": "fill", "ans": "<link>"},
  {"ques": "Tag for bdo direction?<br><br>", "quesType": "fill", "ans": "<bdo>"},
  {"ques": "Tag for bdi isolate?<br><br>", "quesType": "fill", "ans": "<bdi>"},
  {"ques": "Output for blockquote with text?<br><br>", "quesType": "fill", "ans": "Quote"},
  {"ques": "Output for mark Important?<br><br>", "quesType": "fill", "ans": "Important"},
  {"ques": "Output for ins Added?<br><br>", "quesType": "fill", "ans": "Added"},
  {"ques": "Output for abbr WHO?<br><br>", "quesType": "fill", "ans": "WHO"},
  {"ques": "Output for progress bar value?<br><br>", "quesType": "fill", "ans": "Progress bar"},
  {"ques": "Output for address tag?<br><br>", "quesType": "fill", "ans": "Contact info"},
  {"ques": "Output for q tag?<br><br>", "quesType": "fill", "ans": "Quote"},
  {"ques": "Output for cite tag?<br><br>", "quesType": "fill", "ans": "Citation"}


]

let htmlIncorrectAnswers = [];

let htmlTimerId = "";
let htmlSkip = document.getElementById("htmlSkip");
let codinghtmlQues = document.getElementById("codinghtmlQues");
let mcqhtml = document.getElementById("mcqhtml");
let htmlQuestionNumber = document.getElementById("htmlQuestionNumber");
let htmlQuestionCount = 2;
let htmlScore = 0;
let htmlScoreDisplay = document.getElementById("htmlScoreDisplay");
let htmlScoreShow = document.getElementById("htmlScoreShow");
let htmlSkip2 = document.getElementById("htmlSkip2");

let htmlFillAns = document.getElementById("htmlFillAns");
let htmlStatus1 = document.getElementById("htmlStatus1");
let htmlStatus2 = document.getElementById("htmlStatus2");
let htmlStatus3 = document.getElementById("htmlStatus3");
let htmlCheckFill = document.getElementById("htmlCheckFill");

let codingResulthtml = document.getElementById("codingResulthtml");

let htmlIncorrectAnswersDisplay = document.getElementById("htmlIncorrectAnswersDisplay");
let htmlScoreBelow70 = document.getElementById("htmlScoreBelow70");
let htmlScore100 = document.getElementById("htmlScore100");

let htmlResult1 = document.getElementById("htmlResult1");
let htmlResult2 = document.getElementById("htmlResult2");
let htmlResult3 = document.getElementById("htmlResult3");
let htmlResult4 = document.getElementById("htmlResult4");
let htmlResult5 = document.getElementById("htmlResult5");
let htmlBg1 = document.getElementById("htmlBg1");


function codinghtmlStart(){
     codinghtmlHide.classList.add("d-none");
codinghtmlShow.classList.remove("d-none");

let fillBlankhtml = document.getElementById("fillBlankhtml");
let op1html = document.getElementById("op1html");
let op2html = document.getElementById("op2html");
let op3html = document.getElementById("op3html");
let op4html = document.getElementById("op4html");

let htmlFillAns = document.getElementById("htmlFillAns");
let htmlStatus1 = document.getElementById("htmlStatus1");
let htmlStatus2 = document.getElementById("htmlStatus2");
let htmlStatus3 = document.getElementById("htmlStatus3");
let htmlCheckFill = document.getElementById("htmlCheckFill");

htmlFillAns.disabled = false;
htmlStatus1.classList.remove("d-none");
htmlStatus2.classList.add("d-none");
htmlStatus3.classList.add("d-none");
htmlFillAns.value = "";
htmlSkip2.textContent = "Skip";
htmlSkip2.style.backgroundColor = "orange";
htmlSkip2.style.borderColor = "orange";

htmlSkip.textContent = "Skip";
htmlSkip.style.backgroundColor = "orange";
htmlSkip.style.borderColor = "orange";
htmlScoreShow.textContent = "";
htmlTimer.style.color = "black";

if (htmlLevel === 1) {
  let htmlRandom = Math.floor(Math.random() * codinghtml1Arr.length);
  let y = codinghtml1Arr[htmlRandom];
  htmlTimer.textContent = "20";
  htmlTime = 20;

  htmlTimerId = setInterval(function () {
    htmlTime = htmlTime - 1;
    if (htmlTime == 0) {
      clearInterval(htmlTimerId);
      htmlQuestionNumber.textContent = "Question:" + htmlQuestionCount + "/10";
      htmlQuestionCount = htmlQuestionCount + 1;
      htmlTime = 20;
      codinghtmlStart();
    }
    if (htmlTime <= 5) {
      htmlTimer.style.color = "red";
      htmlTimer.textContent = htmlTime;
    } else {
      htmlTimer.textContent = htmlTime;
    }
  }, 1000);

  if (htmlQuestionCount == 12) {
    clearInterval(htmlTimerId);
    mcqhtml.classList.add("d-none");
    document.getElementById("htmlScoreEnd").textContent = htmlScoreDisplay.textContent;
    fillBlankhtml.classList.add("d-none");
    codinghtmlShow.classList.add("d-none");
    codingResulthtml.classList.remove("d-none");

    if (htmlScore < 70) {
      htmlScoreBelow70.classList.remove("d-none");
      htmlScore100.classList.add("d-none");
      sectionCodinghtml.classList.add("back15");

      htmlResult1.textContent = "Test finished!!";
      htmlResult2.textContent = "😓 Oops! Not quite right.";
      htmlResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      htmlResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      htmlIncorrectAnswersDisplay.appendChild(h2);

      for (let z of htmlIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        htmlIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (htmlScore < 100) {
      htmlScoreBelow70.classList.remove("d-none");
      htmlScore100.classList.add("d-none");
      sectionCodinghtml.classList.add("back15");

      htmlResult1.textContent = "Test finished!!";
      htmlResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      htmlResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      htmlResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      htmlIncorrectAnswersDisplay.appendChild(h2);

      for (let z of htmlIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        htmlIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (htmlScore === 100) {
      document.getElementById("sectionCodinghtml").classList.add("back14");
      htmlScore100.classList.remove("d-none");
      htmlScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqhtml.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinghtmlQues.innerHTML = formattedQuestion;

    fillBlankhtml.classList.add("d-none");
    op1html.textContent = y.op1;
    op2html.textContent = y.op2;
    op3html.textContent = y.op3;
    op4html.textContent = y.op4;

    const allOps = [op1html, op2html, op3html, op4html];
    allOps.forEach((op, i) => {
      op.onclick = function () {
        allOps.forEach(o => (o.disabled = true));
        clearInterval(htmlTimerId);
        htmlTime = 20;

        if (op.textContent === y.ans) {
          op.style.backgroundColor = "green";
          htmlScore += 10;
          htmlScoreShow.textContent = "+10";
          htmlScoreShow.style.color = "green";
        } else {
          op.style.backgroundColor = "red";
          htmlScore -= 5;
          htmlScoreShow.textContent = "-5";
          htmlScoreShow.style.color = "red";
          let wrong_answer = { ques: y.ques, correct: y.ans, wrong: op.textContent };
          htmlIncorrectAnswers.push(wrong_answer);
        }

        htmlScoreDisplay.textContent = "Score: " + htmlScore + "/100";

        htmlSkip.textContent = "Next";
        htmlSkip.style.backgroundColor = "#23ebdd";
        htmlSkip.style.borderColor = "#23ebdd";

        htmlSkip.onclick = function () {
          htmlQuestionNumber.textContent = "Question:" + htmlQuestionCount + "/10";
          htmlQuestionCount += 1;
          allOps.forEach(o => {
            o.disabled = false;
            o.style.backgroundColor = "white";
          });
          codinghtmlStart();
        };
      };
    });

    htmlSkip.onclick = function () {
      clearInterval(htmlTimerId);
      htmlTime = 20;
      htmlQuestionNumber.textContent = "Question:" + htmlQuestionCount + "/10";
      htmlQuestionCount += 1;
      allOps.forEach(o => {
        o.disabled = false;
        o.style.backgroundColor = "white";
      });
      let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
      htmlIncorrectAnswers.push(wrong_answer);
      codinghtmlStart();
    };
  } else {
    mcqhtml.classList.add("d-none");
    fillBlankhtml.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinghtmlQues.innerHTML = formattedQuestion;

    htmlCheckFill.onclick = function () {
      clearInterval(htmlTimerId);
      htmlCheckFill.disabled = false;
      htmlSkip2.textContent = "Next";
      htmlSkip2.style.backgroundColor = "#23ebdd";
      htmlSkip2.style.borderColor = "#23ebdd";
      htmlFillAns.disabled = true;

      if (htmlFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        htmlStatus1.classList.add("d-none");
        htmlStatus2.classList.remove("d-none");

        htmlScore += 10;
        htmlScoreShow.textContent = "+10";
        htmlScoreShow.style.color = "green";
      } else {
        htmlStatus1.classList.add("d-none");
        htmlStatus3.classList.remove("d-none");

        htmlScore -= 5;
        htmlScoreShow.textContent = "-5";
        htmlScoreShow.style.color = "red";

        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: htmlFillAns.value };
        htmlIncorrectAnswers.push(wrong_answer);
      }

      htmlScoreDisplay.textContent = "Score: " + htmlScore + "/100";
    };

    htmlSkip2.onclick = function () {
      if (htmlFillAns.value === "") {
        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
        htmlIncorrectAnswers.push(wrong_answer);
      }
      clearInterval(htmlTimerId);
      htmlTime = 20;
      htmlQuestionNumber.textContent = "Question:" + htmlQuestionCount + "/10";
      htmlQuestionCount += 1;
      codinghtmlStart();
    };
  }
}

else if (htmlLevel === 2) {
  let htmlRandom = Math.floor(Math.random() * codinghtml2Arr.length);
  let y = codinghtml2Arr[htmlRandom];
  htmlTimer.textContent = "25";
  htmlTime = 25;

  htmlTimerId = setInterval(function () {
    htmlTime = htmlTime - 1;
    if (htmlTime == 0) {
      clearInterval(htmlTimerId);
      htmlQuestionNumber.textContent = "Question:" + htmlQuestionCount + "/10";
      htmlQuestionCount = htmlQuestionCount + 1;
      htmlTime = 25;
      codinghtmlStart();
    }
    if (htmlTime <= 5) {
      htmlTimer.style.color = "red";
      htmlTimer.textContent = htmlTime;
    } else {
      htmlTimer.textContent = htmlTime;
    }
  }, 1000);

  if (htmlQuestionCount == 12) {
    clearInterval(htmlTimerId);
    mcqhtml.classList.add("d-none");
    document.getElementById("htmlScoreEnd").textContent = htmlScoreDisplay.textContent;
    fillBlankhtml.classList.add("d-none");
    codinghtmlShow.classList.add("d-none");
    codingResulthtml.classList.remove("d-none");

    if (htmlScore < 70) {
      htmlScoreBelow70.classList.remove("d-none");
      htmlScore100.classList.add("d-none");
      sectionCodinghtml.classList.add("back15");

      htmlResult1.textContent = "Test finished!!";
      htmlResult2.textContent = "😓 Oops! Not quite right.";
      htmlResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      htmlResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      htmlIncorrectAnswersDisplay.appendChild(h2);

      for (let z of htmlIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        htmlIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (htmlScore < 100) {
      htmlScoreBelow70.classList.remove("d-none");
      htmlScore100.classList.add("d-none");
      sectionCodinghtml.classList.add("back15");

      htmlResult1.textContent = "Test finished!!";
      htmlResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      htmlResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      htmlResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      htmlIncorrectAnswersDisplay.appendChild(h2);

      for (let z of htmlIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        htmlIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (htmlScore === 100) {
      document.getElementById("sectionCodinghtml").classList.add("back14");
      htmlScore100.classList.remove("d-none");
      htmlScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqhtml.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinghtmlQues.innerHTML = formattedQuestion;
    fillBlankhtml.classList.add("d-none");
    op1html.textContent = y.op1;
    op2html.textContent = y.op2;
    op3html.textContent = y.op3;
    op4html.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(htmlTimerId);
      htmlTime = 25;
      htmlSkip.textContent = "Next";
      htmlSkip.style.backgroundColor = "#23ebdd";
      htmlSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        htmlScore += 10;
        htmlScoreShow.textContent = "+10";
        htmlScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        htmlScore -= 5;
        htmlScoreShow.textContent = "-5";
        htmlScoreShow.style.color = "red";
        htmlIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      htmlScoreDisplay.textContent = "Score: " + htmlScore + "/100";
    }

    op1html.onclick = () => handleOptionClick(op1html, [op2html, op3html, op4html]);
    op2html.onclick = () => handleOptionClick(op2html, [op1html, op3html, op4html]);
    op3html.onclick = () => handleOptionClick(op3html, [op1html, op2html, op4html]);
    op4html.onclick = () => handleOptionClick(op4html, [op1html, op2html, op3html]);

    htmlSkip.onclick = function () {
      clearInterval(htmlTimerId);
      htmlTime = 25;
      htmlQuestionNumber.textContent = "Question:" + htmlQuestionCount + "/10";
      htmlQuestionCount++;
      [op1html, op2html, op3html, op4html].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      htmlIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codinghtmlStart();
    };
  }
  else {
    mcqhtml.classList.add("d-none");
    fillBlankhtml.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinghtmlQues.innerHTML = formattedQuestion;

    htmlCheckFill.disabled = false;
    htmlFillAns.disabled = false;
    htmlFillAns.value = "";
    htmlStatus1.classList.remove("d-none");
    htmlStatus2.classList.add("d-none");
    htmlStatus3.classList.add("d-none");
    htmlScoreShow.textContent = "";

    htmlCheckFill.onclick = function () {
      clearInterval(htmlTimerId);
      htmlCheckFill.disabled = true;
      htmlSkip2.textContent = "Next";
      htmlSkip2.style.backgroundColor = "#23ebdd";
      htmlSkip2.style.borderColor = "#23ebdd";
      htmlFillAns.disabled = true;

      if (htmlFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        htmlStatus1.classList.add("d-none");
        htmlStatus2.classList.remove("d-none");
        htmlScore += 10;
        htmlScoreShow.textContent = "+10";
        htmlScoreShow.style.color = "green";
      } else {
        htmlStatus1.classList.add("d-none");
        htmlStatus3.classList.remove("d-none");
        htmlScore -= 5;
        htmlScoreShow.textContent = "-5";
        htmlScoreShow.style.color = "red";
        htmlIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: htmlFillAns.value });
      }
      htmlScoreDisplay.textContent = "Score: " + htmlScore + "/100";
    };

    htmlSkip2.onclick = function () {
      if (htmlFillAns.value === "") {
        htmlIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      }
      clearInterval(htmlTimerId);
      htmlTime = 25;
      htmlQuestionNumber.textContent = "Question:" + htmlQuestionCount + "/10";
      htmlQuestionCount++;
      codinghtmlStart();
    };
  }
}
else if (htmlLevel === 3) {
  let htmlRandom = Math.floor(Math.random() * codinghtml3Arr.length);
  let y = codinghtml3Arr[htmlRandom];
  htmlTimer.textContent = "30";
  htmlTime = 30;

  htmlTimerId = setInterval(function () {
    htmlTime = htmlTime - 1;
    if (htmlTime == 0) {
      clearInterval(htmlTimerId);
      htmlQuestionNumber.textContent = "Question:" + htmlQuestionCount + "/10";
      htmlQuestionCount = htmlQuestionCount + 1;
      htmlTime = 30;
      codinghtmlStart();
    }
    if (htmlTime <= 5) {
      htmlTimer.style.color = "red";
      htmlTimer.textContent = htmlTime;
    } else {
      htmlTimer.textContent = htmlTime;
    }
  }, 1000);

  if (htmlQuestionCount == 12) {
    clearInterval(htmlTimerId);
    mcqhtml.classList.add("d-none");
    document.getElementById("htmlScoreEnd").textContent = htmlScoreDisplay.textContent;
    fillBlankhtml.classList.add("d-none");
    codinghtmlShow.classList.add("d-none");
    codingResulthtml.classList.remove("d-none");

    if (htmlScore < 70) {
      htmlScoreBelow70.classList.remove("d-none");
      htmlScore100.classList.add("d-none");
      sectionCodinghtml.classList.add("back15");

      htmlResult1.textContent = "Test finished!!";
      htmlResult2.textContent = "😓 Oops! Not quite right.";
      htmlResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      htmlResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      htmlIncorrectAnswersDisplay.appendChild(h2);

      for (let z of htmlIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        htmlIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (htmlScore < 100) {
      htmlScoreBelow70.classList.remove("d-none");
      htmlScore100.classList.add("d-none");
      sectionCodinghtml.classList.add("back15");

      htmlResult1.textContent = "Test finished!!";
      htmlResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      htmlResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      htmlResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      htmlIncorrectAnswersDisplay.appendChild(h2);

      for (let z of htmlIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        htmlIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (htmlScore === 100) {
      document.getElementById("sectionCodinghtml").classList.add("back14");
      htmlScore100.classList.remove("d-none");
      htmlScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqhtml.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinghtmlQues.innerHTML = formattedQuestion;
    fillBlankhtml.classList.add("d-none");
    op1html.textContent = y.op1;
    op2html.textContent = y.op2;
    op3html.textContent = y.op3;
    op4html.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(htmlTimerId);
      htmlTime = 30;
      htmlSkip.textContent = "Next";
      htmlSkip.style.backgroundColor = "#23ebdd";
      htmlSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        htmlScore += 10;
        htmlScoreShow.textContent = "+10";
        htmlScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        htmlScore -= 5;
        htmlScoreShow.textContent = "-5";
        htmlScoreShow.style.color = "red";
        htmlIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      htmlScoreDisplay.textContent = "Score: " + htmlScore + "/100";
    }

    op1html.onclick = () => handleOptionClick(op1html, [op2html, op3html, op4html]);
    op2html.onclick = () => handleOptionClick(op2html, [op1html, op3html, op4html]);
    op3html.onclick = () => handleOptionClick(op3html, [op1html, op2html, op4html]);
    op4html.onclick = () => handleOptionClick(op4html, [op1html, op2html, op3html]);

    htmlSkip.onclick = function () {
      clearInterval(htmlTimerId);
      htmlTime = 30;
      htmlQuestionNumber.textContent = "Question:" + htmlQuestionCount + "/10";
      htmlQuestionCount++;
      [op1html, op2html, op3html, op4html].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      htmlIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codinghtmlStart();
    };
  }
  else {
    mcqhtml.classList.add("d-none");
    fillBlankhtml.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinghtmlQues.innerHTML = formattedQuestion;

    htmlCheckFill.disabled = false;
    htmlFillAns.disabled = false;
    htmlFillAns.value = "";
    htmlStatus1.classList.remove("d-none");
    htmlStatus2.classList.add("d-none");
    htmlStatus3.classList.add("d-none");
    htmlScoreShow.textContent = "";

    htmlCheckFill.onclick = function () {
      clearInterval(htmlTimerId);
      htmlCheckFill.disabled = true;
      htmlSkip2.textContent = "Next";
      htmlSkip2.style.backgroundColor = "#23ebdd";
      htmlSkip2.style.borderColor = "#23ebdd";
      htmlFillAns.disabled = true;

      if (htmlFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        htmlStatus1.classList.add("d-none");
        htmlStatus2.classList.remove("d-none");
        htmlScore += 10;
        htmlScoreShow.textContent = "+10";
        htmlScoreShow.style.color = "green";
      } else {
        htmlStatus1.classList.add("d-none");
        htmlStatus3.classList.remove("d-none");
        htmlScore -= 5;
        htmlScoreShow.textContent = "-5";
        htmlScoreShow.style.color = "red";
        htmlIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: htmlFillAns.value });
      }
      htmlScoreDisplay.textContent = "Score: " + htmlScore + "/100";
    };

    htmlSkip2.onclick = function () {
      if (htmlFillAns.value === "") {
        htmlIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      }
      clearInterval(htmlTimerId);
      htmlTime = 30;
      htmlQuestionNumber.textContent = "Question:" + htmlQuestionCount + "/10";
      htmlQuestionCount++;
      codinghtmlStart();
    };
  }
}



 

}


function resetCodinghtml() {
  document.getElementById("codinghtmlShow").classList.add("d-none");
  document.getElementById("codingResulthtml").classList.add("d-none");
  document.getElementById("codinghtmlHide").classList.remove("d-none");

  document.getElementById("htmlQuestionNumber").innerText = "Question: 1/10";
  document.getElementById("htmlScoreDisplay").innerText = "Score: 0/100";
  document.getElementById("htmlScoreShow").innerText = "";
  document.getElementById("htmlTimer").innerText = "00";
  document.getElementById("codinghtmlQues").innerText = "";

  document.getElementById("op1html").innerText = "option1";
  document.getElementById("op2html").innerText = "option2";
  document.getElementById("op3html").innerText = "option3";
  document.getElementById("op4html").innerText = "option4";

  htmlIncorrectAnswers = [];
  document.getElementById("htmlIncorrectAnswersDisplay").innerHTML = "";

  htmlScore100.classList.add("d-none");
  htmlScoreBelow70.classList.add("d-none");

  htmlResult1.textContent = "";
  htmlResult2.textContent = "";
  htmlResult3.src = "";
  htmlResult4.textContent = "";

  sectionCodinghtml.classList.remove("back14");
  sectionCodinghtml.classList.remove("back15");

  document.getElementById("htmlFillAns").value = "";
  document.getElementById("fillBlankhtml").style.display = "none";
  document.getElementById("mcqhtml").style.display = "block";

  document.getElementById("htmlStatus1").classList.remove("d-none");
  document.getElementById("htmlStatus2").classList.add("d-none");
  document.getElementById("htmlStatus3").classList.add("d-none");

  if (typeof htmlTimerId !== "undefined") {
    clearInterval(htmlTimerId);
  }
  htmlTime = 20;
  htmlQuestionCount = 2;
  htmlScore = 0;
}

function htmlResetLevel() {
  htmlButton1.disabled = false;
  htmlButton2.disabled = false;
  htmlButton3.disabled = false;
  htmlButton.classList.add("d-none");
  htmlIncorrectAnswers = [];
}

// css 

let cssButton = document.getElementById("cssButton");
let cssButton1 = document.getElementById("cssButton1");
let cssButton2 = document.getElementById("cssButton2");
let cssButton3 = document.getElementById("cssButton3");
let cssLevel = 0;
let cssCodingTest = document.getElementById("cssCodingTest");
let cssTimer = document.getElementById("cssTimer");

cssButton1.onclick = function () {
  cssButton2.disabled = true;
  cssButton3.disabled = true;
  cssLevel = 1;

  cssButton.classList.remove("d-none");
  cssButton.classList.add("d-block");
};

cssButton2.onclick = function () {
  cssButton1.disabled = true;
  cssButton3.disabled = true;
  cssLevel = 2;

  cssButton.classList.remove("d-none");
  cssButton.classList.add("d-block");
};

cssButton3.onclick = function () {
  cssButton2.disabled = true;
  cssButton1.disabled = true;
  cssLevel = 3;

  cssButton.classList.remove("d-none");
  cssButton.classList.add("d-block");
};

let cssTime = 0;

let codingcssShow = document.getElementById("codingcssShow");
let codingcssHide = document.getElementById("codingcssHide");
let codingcssBack = document.getElementById("codingcssBack");

codingcssBack.onclick = function () {
  codingcssShow.classList.add("d-none");
  codingcssHide.classList.remove("d-none");
};

let codingcss1Arr=[
  {
    "ques": "Which property sets text color?<br><br>",
    "quesType": "mcq",
    "op1": "color",
    "op2": "background-color",
    "op3": "font-color",
    "op4": "text-color",
    "ans": "color"
  },
  {
    "ques": "Which property sets background color?<br><br>",
    "quesType": "mcq",
    "op1": "background-color",
    "op2": "color",
    "op3": "bg-color",
    "op4": "background",
    "ans": "background-color"
  },
  {
    "ques": "Which unit is relative to font size?<br><br>",
    "quesType": "mcq",
    "op1": "em",
    "op2": "px",
    "op3": "%",
    "op4": "pt",
    "ans": "em"
  },
  {
    "ques": "Which property sets font size?<br><br>",
    "quesType": "mcq",
    "op1": "font-size",
    "op2": "text-size",
    "op3": "size",
    "op4": "font",
    "ans": "font-size"
  },
  {
    "ques": "Which selector selects all elements?<br><br>",
    "quesType": "mcq",
    "op1": "*",
    "op2": ".",
    "op3": "#",
    "op4": "~",
    "ans": "*"
  },
  {
    "ques": "What is output?<br><br>h1 { color: red; }",
    "quesType": "mcq",
    "op1": "h1 text is red",
    "op2": "h1 has red background",
    "op3": "h1 is bold",
    "op4": "h1 is centered",
    "ans": "h1 text is red"
  },
  {
    "ques": "Which property adds space inside border?<br><br>",
    "quesType": "mcq",
    "op1": "padding",
    "op2": "margin",
    "op3": "border",
    "op4": "outline",
    "ans": "padding"
  },
  {
    "ques": "Which adds space outside border?<br><br>",
    "quesType": "mcq",
    "op1": "margin",
    "op2": "padding",
    "op3": "border",
    "op4": "outline",
    "ans": "margin"
  },
  {
    "ques": "Which displays element as block?<br><br>",
    "quesType": "mcq",
    "op1": "display: block",
    "op2": "position: block",
    "op3": "float: block",
    "op4": "block: true",
    "ans": "display: block"
  },
  {
    "ques": "Which makes text bold?<br><br>",
    "quesType": "mcq",
    "op1": "font-weight: bold",
    "op2": "font: bold",
    "op3": "text-bold",
    "op4": "weight: bold",
    "ans": "font-weight: bold"
  },
  {
    "ques": "Which makes text italic?<br><br>",
    "quesType": "mcq",
    "op1": "font-style: italic",
    "op2": "text-italic",
    "op3": "style: italic",
    "op4": "font-weight: italic",
    "ans": "font-style: italic"
  },
  {
    "ques": "Which sets text alignment?<br><br>",
    "quesType": "mcq",
    "op1": "text-align",
    "op2": "align",
    "op3": "text-style",
    "op4": "align-text",
    "ans": "text-align"
  },
  {
    "ques": "What is output?<br><br>body { background-color: yellow; }",
    "quesType": "mcq",
    "op1": "Body bg is yellow",
    "op2": "Text is yellow",
    "op3": "Border is yellow",
    "op4": "Nothing changes",
    "ans": "Body bg is yellow"
  },
  {
    "ques": "Which sets border style?<br><br>",
    "quesType": "mcq",
    "op1": "border-style",
    "op2": "border",
    "op3": "outline",
    "op4": "border-color",
    "ans": "border-style"
  },
  {
    "ques": "Which sets border width?<br><br>",
    "quesType": "mcq",
    "op1": "border-width",
    "op2": "border-size",
    "op3": "outline-width",
    "op4": "width",
    "ans": "border-width"
  },
  {
    "ques": "Which sets background image?<br><br>",
    "quesType": "mcq",
    "op1": "background-image",
    "op2": "background",
    "op3": "image",
    "op4": "bg-img",
    "ans": "background-image"
  },
  {
    "ques": "Which sets element height?<br><br>",
    "quesType": "mcq",
    "op1": "height",
    "op2": "size",
    "op3": "box-height",
    "op4": "block-height",
    "ans": "height"
  },
  {
    "ques": "Which makes element float left?<br><br>",
    "quesType": "mcq",
    "op1": "float: left",
    "op2": "position: left",
    "op3": "align: left",
    "op4": "display: left",
    "ans": "float: left"
  },
  {
    "ques": "Which is not a valid unit?<br><br>",
    "quesType": "mcq",
    "op1": "px",
    "op2": "em",
    "op3": "abc",
    "op4": "%",
    "ans": "abc"
  },
  {
    "ques": "Which tag links external CSS?<br><br>",
    "quesType": "mcq",
    "op1": "<link>",
    "op2": "<style>",
    "op3": "<css>",
    "op4": "<script>",
    "ans": "<link>"
  },
  {"ques": "Property for text color?<br><br>", "quesType": "fill", "ans": "color"},
  {"ques": "Property for background color?<br><br>", "quesType": "fill", "ans": "background-color"},
  {"ques": "Unit relative to font size?<br><br>", "quesType": "fill", "ans": "em"},
  {"ques": "Property for font size?<br><br>", "quesType": "fill", "ans": "font-size"},
  {"ques": "Selector for all elements?<br><br>", "quesType": "fill", "ans": "*"},
  {"ques": "Property for padding?<br><br>", "quesType": "fill", "ans": "padding"},
  {"ques": "Property for margin?<br><br>", "quesType": "fill", "ans": "margin"},
  {"ques": "Property for display?<br><br>", "quesType": "fill", "ans": "display"},
  {"ques": "Property for font weight?<br><br>", "quesType": "fill", "ans": "font-weight"},
  {"ques": "Property for font style?<br><br>", "quesType": "fill", "ans": "font-style"},
  {"ques": "Property for text align?<br><br>", "quesType": "fill", "ans": "text-align"},
  {"ques": "CSS unit for pixels?<br><br>", "quesType": "fill", "ans": "px"},
  {"ques": "Property for border style?<br><br>", "quesType": "fill", "ans": "border-style"},
  {"ques": "Property for border width?<br><br>", "quesType": "fill", "ans": "border-width"},
  {"ques": "Property for background image?<br><br>", "quesType": "fill", "ans": "background-image"},
  {"ques": "Property for height?<br><br>", "quesType": "fill", "ans": "height"},
  {"ques": "Property for float?<br><br>", "quesType": "fill", "ans": "float"},
  {"ques": "Selector for class?<br><br>", "quesType": "fill", "ans": "."},
  {"ques": "Selector for ID?<br><br>", "quesType": "fill", "ans": "#"},
  {"ques": "Tag for linking CSS?<br><br>", "quesType": "fill", "ans": "<link>"},
   {
    "ques": "Which property changes text decoration?<br><br>",
    "quesType": "mcq",
    "op1": "text-decoration",
    "op2": "font-decoration",
    "op3": "decoration",
    "op4": "text-style",
    "ans": "text-decoration"
  },
  {
    "ques": "Which property sets letter spacing?<br><br>",
    "quesType": "mcq",
    "op1": "letter-spacing",
    "op2": "word-spacing",
    "op3": "text-spacing",
    "op4": "font-spacing",
    "ans": "letter-spacing"
  },
  {
    "ques": "Which sets line height?<br><br>",
    "quesType": "mcq",
    "op1": "line-height",
    "op2": "height-line",
    "op3": "text-line",
    "op4": "font-line",
    "ans": "line-height"
  },
  {
    "ques": "Which sets font family?<br><br>",
    "quesType": "mcq",
    "op1": "font-family",
    "op2": "font",
    "op3": "font-type",
    "op4": "text-family",
    "ans": "font-family"
  },
  {
    "ques": "Which sets word spacing?<br><br>",
    "quesType": "mcq",
    "op1": "word-spacing",
    "op2": "letter-spacing",
    "op3": "text-spacing",
    "op4": "spacing-word",
    "ans": "word-spacing"
  },
  {
    "ques": "Which sets text transform?<br><br>",
    "quesType": "mcq",
    "op1": "text-transform",
    "op2": "transform-text",
    "op3": "text-style",
    "op4": "text-format",
    "ans": "text-transform"
  },
  {
    "ques": "Which removes list bullets?<br><br>",
    "quesType": "mcq",
    "op1": "list-style: none",
    "op2": "list-type: none",
    "op3": "text-style: none",
    "op4": "bullet: none",
    "ans": "list-style: none"
  },
  {
    "ques": "Which sets position?<br><br>",
    "quesType": "mcq",
    "op1": "position",
    "op2": "display",
    "op3": "float",
    "op4": "align",
    "ans": "position"
  },
  {
    "ques": "Which positions an element relative?<br><br>",
    "quesType": "mcq",
    "op1": "position: relative",
    "op2": "float: relative",
    "op3": "align: relative",
    "op4": "display: relative",
    "ans": "position: relative"
  },
  {
    "ques": "Which makes element hidden?<br><br>",
    "quesType": "mcq",
    "op1": "display: none",
    "op2": "visibility: off",
    "op3": "opacity: 0",
    "op4": "hidden: true",
    "ans": "display: none"
  },
  {
    "ques": "Which sets minimum width?<br><br>",
    "quesType": "mcq",
    "op1": "min-width",
    "op2": "minimum-width",
    "op3": "width-min",
    "op4": "minsize",
    "ans": "min-width"
  },
  {
    "ques": "Which sets maximum width?<br><br>",
    "quesType": "mcq",
    "op1": "max-width",
    "op2": "maximum-width",
    "op3": "width-max",
    "op4": "maxsize",
    "ans": "max-width"
  },
  {
    "ques": "Which sets overflow?<br><br>",
    "quesType": "mcq",
    "op1": "overflow",
    "op2": "scroll",
    "op3": "hidden",
    "op4": "display",
    "ans": "overflow"
  },
  {
    "ques": "Which makes text uppercase?<br><br>",
    "quesType": "mcq",
    "op1": "text-transform: uppercase",
    "op2": "text-uppercase",
    "op3": "font-uppercase",
    "op4": "transform: uppercase",
    "ans": "text-transform: uppercase"
  },
  {
    "ques": "Which makes text lowercase?<br><br>",
    "quesType": "mcq",
    "op1": "text-transform: lowercase",
    "op2": "text-lowercase",
    "op3": "font-lowercase",
    "op4": "transform: lowercase",
    "ans": "text-transform: lowercase"
  },
  {
    "ques": "Which sets z-index?<br><br>",
    "quesType": "mcq",
    "op1": "z-index",
    "op2": "index",
    "op3": "zlayer",
    "op4": "layer-index",
    "ans": "z-index"
  },
  {
    "ques": "Which sets opacity?<br><br>",
    "quesType": "mcq",
    "op1": "opacity",
    "op2": "transparent",
    "op3": "visibility",
    "op4": "display",
    "ans": "opacity"
  },
  {
    "ques": "Which sets cursor style?<br><br>",
    "quesType": "mcq",
    "op1": "cursor",
    "op2": "pointer",
    "op3": "mouse",
    "op4": "hover",
    "ans": "cursor"
  },
  {
    "ques": "Which sets box shadow?<br><br>",
    "quesType": "mcq",
    "op1": "box-shadow",
    "op2": "shadow",
    "op3": "shadow-box",
    "op4": "boxstyle",
    "ans": "box-shadow"
  },
  {
    "ques": "Which sets border radius?<br><br>",
    "quesType": "mcq",
    "op1": "border-radius",
    "op2": "border-round",
    "op3": "round-border",
    "op4": "radius",
    "ans": "border-radius"
  },
  {"ques": "Property for text decoration?<br><br>", "quesType": "fill", "ans": "text-decoration"},
  {"ques": "Property for letter spacing?<br><br>", "quesType": "fill", "ans": "letter-spacing"},
  {"ques": "Property for line height?<br><br>", "quesType": "fill", "ans": "line-height"},
  {"ques": "Property for font family?<br><br>", "quesType": "fill", "ans": "font-family"},
  {"ques": "Property for word spacing?<br><br>", "quesType": "fill", "ans": "word-spacing"},
  {"ques": "Property for text transform?<br><br>", "quesType": "fill", "ans": "text-transform"},
  {"ques": "Property for list style?<br><br>", "quesType": "fill", "ans": "list-style"},
  {"ques": "Property for position?<br><br>", "quesType": "fill", "ans": "position"},
  {"ques": "Value for relative position?<br><br>", "quesType": "fill", "ans": "relative"},
  {"ques": "Property for minimum width?<br><br>", "quesType": "fill", "ans": "min-width"},
  {"ques": "Property for maximum width?<br><br>", "quesType": "fill", "ans": "max-width"},
  {"ques": "Property for overflow?<br><br>", "quesType": "fill", "ans": "overflow"},
  {"ques": "Property for z-index?<br><br>", "quesType": "fill", "ans": "z-index"},
  {"ques": "Property for opacity?<br><br>", "quesType": "fill", "ans": "opacity"},
  {"ques": "Property for cursor?<br><br>", "quesType": "fill", "ans": "cursor"},
  {"ques": "Property for box shadow?<br><br>", "quesType": "fill", "ans": "box-shadow"},
  {"ques": "Property for border radius?<br><br>", "quesType": "fill", "ans": "border-radius"},
  {"ques": "Value to hide element?<br><br>", "quesType": "fill", "ans": "none"},
  {"ques": "Property for visibility?<br><br>", "quesType": "fill", "ans": "visibility"},
  {"ques": "Property for background position?<br><br>", "quesType": "fill", "ans": "background-position"},
  {
    "ques": "Which property changes font family?<br><br>",
    "quesType": "mcq",
    "op1": "font-family",
    "op2": "font",
    "op3": "text-family",
    "op4": "family",
    "ans": "font-family"
  },
  {
    "ques": "Which property sets letter spacing?<br><br>",
    "quesType": "mcq",
    "op1": "letter-spacing",
    "op2": "word-spacing",
    "op3": "text-spacing",
    "op4": "spacing",
    "ans": "letter-spacing"
  },
  {
    "ques": "Which sets line height?<br><br>",
    "quesType": "mcq",
    "op1": "line-height",
    "op2": "height",
    "op3": "text-height",
    "op4": "font-height",
    "ans": "line-height"
  },
  {
    "ques": "Which property sets text decoration?<br><br>",
    "quesType": "mcq",
    "op1": "text-decoration",
    "op2": "decoration",
    "op3": "font-decoration",
    "op4": "text-style",
    "ans": "text-decoration"
  },
  {
    "ques": "Which pseudo-class selects a hovered link?<br><br>",
    "quesType": "mcq",
    "op1": ":hover",
    "op2": ":link",
    "op3": ":active",
    "op4": ":visited",
    "ans": ":hover"
  },
  {
    "ques": "Which property sets width?<br><br>",
    "quesType": "mcq",
    "op1": "width",
    "op2": "size",
    "op3": "block-width",
    "op4": "box-width",
    "ans": "width"
  },
  {
    "ques": "Which makes text uppercase?<br><br>",
    "quesType": "mcq",
    "op1": "text-transform: uppercase",
    "op2": "text-uppercase",
    "op3": "transform: uppercase",
    "op4": "font-transform: uppercase",
    "ans": "text-transform: uppercase"
  },
  {
    "ques": "Which sets minimum width?<br><br>",
    "quesType": "mcq",
    "op1": "min-width",
    "op2": "width",
    "op3": "min-size",
    "op4": "minimum-width",
    "ans": "min-width"
  },
  {
    "ques": "Which sets maximum height?<br><br>",
    "quesType": "mcq",
    "op1": "max-height",
    "op2": "height",
    "op3": "max-size",
    "op4": "maximum-height",
    "ans": "max-height"
  },
  {
    "ques": "Which sets list item marker?<br><br>",
    "quesType": "mcq",
    "op1": "list-style-type",
    "op2": "list-marker",
    "op3": "list-type",
    "op4": "marker-type",
    "ans": "list-style-type"
  },
  {
    "ques": "Which sets element position?<br><br>",
    "quesType": "mcq",
    "op1": "position",
    "op2": "display",
    "op3": "float",
    "op4": "align",
    "ans": "position"
  },
  {
    "ques": "Which sets top margin?<br><br>",
    "quesType": "mcq",
    "op1": "margin-top",
    "op2": "padding-top",
    "op3": "border-top",
    "op4": "top-margin",
    "ans": "margin-top"
  },
  {
    "ques": "Which sets overflow behavior?<br><br>",
    "quesType": "mcq",
    "op1": "overflow",
    "op2": "hidden",
    "op3": "scroll",
    "op4": "display",
    "ans": "overflow"
  },
  {
    "ques": "Which pseudo-class selects first child?<br><br>",
    "quesType": "mcq",
    "op1": ":first-child",
    "op2": ":first",
    "op3": ":firstElement",
    "op4": ":first-node",
    "ans": ":first-child"
  },
  {
    "ques": "Which sets background repeat?<br><br>",
    "quesType": "mcq",
    "op1": "background-repeat",
    "op2": "repeat",
    "op3": "bg-repeat",
    "op4": "background-loop",
    "ans": "background-repeat"
  },
  {
    "ques": "Which sets background position?<br><br>",
    "quesType": "mcq",
    "op1": "background-position",
    "op2": "position",
    "op3": "bg-position",
    "op4": "background-align",
    "ans": "background-position"
  },
  {
    "ques": "Which sets cursor style?<br><br>",
    "quesType": "mcq",
    "op1": "cursor",
    "op2": "pointer",
    "op3": "mouse",
    "op4": "hover",
    "ans": "cursor"
  },
  {
    "ques": "Which sets z-index?<br><br>",
    "quesType": "mcq",
    "op1": "z-index",
    "op2": "index",
    "op3": "layer",
    "op4": "stack",
    "ans": "z-index"
  },
  {
    "ques": "Which sets opacity?<br><br>",
    "quesType": "mcq",
    "op1": "opacity",
    "op2": "transparent",
    "op3": "alpha",
    "op4": "visibility",
    "ans": "opacity"
  },
  {
    "ques": "Which property sets box shadow?<br><br>",
    "quesType": "mcq",
    "op1": "box-shadow",
    "op2": "shadow",
    "op3": "border-shadow",
    "op4": "outline-shadow",
    "ans": "box-shadow"
  },
  {"ques": "Property for font family?<br><br>", "quesType": "fill", "ans": "font-family"},
  {"ques": "Property for letter spacing?<br><br>", "quesType": "fill", "ans": "letter-spacing"},
  {"ques": "Property for line height?<br><br>", "quesType": "fill", "ans": "line-height"},
  {"ques": "Property for text decoration?<br><br>", "quesType": "fill", "ans": "text-decoration"},
  {"ques": "Pseudo-class for hover?<br><br>", "quesType": "fill", "ans": ":hover"},
  {"ques": "Property for width?<br><br>", "quesType": "fill", "ans": "width"},
  {"ques": "Property for text transform?<br><br>", "quesType": "fill", "ans": "text-transform"},
  {"ques": "Property for min width?<br><br>", "quesType": "fill", "ans": "min-width"},
  {"ques": "Property for max height?<br><br>", "quesType": "fill", "ans": "max-height"},
  {"ques": "Property for list style?<br><br>", "quesType": "fill", "ans": "list-style-type"},
  {"ques": "Property for position?<br><br>", "quesType": "fill", "ans": "position"},
  {"ques": "Property for margin top?<br><br>", "quesType": "fill", "ans": "margin-top"},
  {"ques": "Property for overflow?<br><br>", "quesType": "fill", "ans": "overflow"},
  {"ques": "Pseudo-class for first child?<br><br>", "quesType": "fill", "ans": ":first-child"},
  {"ques": "Property for background repeat?<br><br>", "quesType": "fill", "ans": "background-repeat"},
  {"ques": "Property for background position?<br><br>", "quesType": "fill", "ans": "background-position"},
  {"ques": "Property for cursor?<br><br>", "quesType": "fill", "ans": "cursor"},
  {"ques": "Property for z-index?<br><br>", "quesType": "fill", "ans": "z-index"},
  {"ques": "Property for opacity?<br><br>", "quesType": "fill", "ans": "opacity"},
  {"ques": "Property for box shadow?<br><br>", "quesType": "fill", "ans": "box-shadow"},
  {
    "ques": "Which property changes text decoration?<br><br>",
    "quesType": "mcq",
    "op1": "text-decoration",
    "op2": "text-style",
    "op3": "font-decoration",
    "op4": "text-effect",
    "ans": "text-decoration"
  },
  {
    "ques": "Which value removes underline?<br><br>",
    "quesType": "mcq",
    "op1": "none",
    "op2": "hide",
    "op3": "block",
    "op4": "remove",
    "ans": "none"
  },
  {
    "ques": "Which property sets font family?<br><br>",
    "quesType": "mcq",
    "op1": "font-family",
    "op2": "font-style",
    "op3": "text-font",
    "op4": "font-type",
    "ans": "font-family"
  },
  {
    "ques": "What is output?<br><br>p { color: green; }",
    "quesType": "mcq",
    "op1": "Paragraph is green",
    "op2": "Background green",
    "op3": "Border green",
    "op4": "No change",
    "ans": "Paragraph is green"
  },
  {
    "ques": "Which selector selects all p inside div?<br><br>",
    "quesType": "mcq",
    "op1": "div p",
    "op2": "p div",
    "op3": "div > p",
    "op4": "p > div",
    "ans": "div p"
  },
  {
    "ques": "Which pseudo-class selects hovered element?<br><br>",
    "quesType": "mcq",
    "op1": ":hover",
    "op2": ":active",
    "op3": ":visited",
    "op4": ":link",
    "ans": ":hover"
  },
  {
    "ques": "Which pseudo-class for first child?<br><br>",
    "quesType": "mcq",
    "op1": ":first-child",
    "op2": ":first",
    "op3": ":start",
    "op4": ":begin",
    "ans": ":first-child"
  },
  {
    "ques": "Which sets overflow hidden?<br><br>",
    "quesType": "mcq",
    "op1": "overflow: hidden",
    "op2": "display: hidden",
    "op3": "visibility: hidden",
    "op4": "hidden: overflow",
    "ans": "overflow: hidden"
  },
  {
    "ques": "Which property sets element width?<br><br>",
    "quesType": "mcq",
    "op1": "width",
    "op2": "size",
    "op3": "height",
    "op4": "box-width",
    "ans": "width"
  },
  {
    "ques": "Which is not a display value?<br><br>",
    "quesType": "mcq",
    "op1": "flex",
    "op2": "block",
    "op3": "inline",
    "op4": "wrap",
    "ans": "wrap"
  },
  {
    "ques": "Which property for position?<br><br>",
    "quesType": "mcq",
    "op1": "position",
    "op2": "display",
    "op3": "float",
    "op4": "align",
    "ans": "position"
  },
  {
    "ques": "What is output?<br><br>div { border: 1px solid black; }",
    "quesType": "mcq",
    "op1": "Div has black border",
    "op2": "Background black",
    "op3": "Text black",
    "op4": "Nothing",
    "ans": "Div has black border"
  },
  {
    "ques": "Which positions element relative?<br><br>",
    "quesType": "mcq",
    "op1": "position: relative",
    "op2": "display: relative",
    "op3": "float: relative",
    "op4": "align: relative",
    "ans": "position: relative"
  },
  {
    "ques": "Which aligns text center?<br><br>",
    "quesType": "mcq",
    "op1": "text-align: center",
    "op2": "align: center",
    "op3": "center-text",
    "op4": "text-style: center",
    "ans": "text-align: center"
  },
  {
    "ques": "Which is valid CSS comment?<br><br>",
    "quesType": "mcq",
    "op1": "/* comment */",
    "op2": "// comment",
    "op3": "<!-- comment -->",
    "op4": "# comment",
    "ans": "/* comment */"
  },
  {
    "ques": "Which sets flexible layout?<br><br>",
    "quesType": "mcq",
    "op1": "display: flex",
    "op2": "position: flex",
    "op3": "float: flex",
    "op4": "flex: display",
    "ans": "display: flex"
  },
  {
    "ques": "Which unit is percentage?<br><br>",
    "quesType": "mcq",
    "op1": "%",
    "op2": "px",
    "op3": "em",
    "op4": "pt",
    "ans": "%"
  },
  {
    "ques": "Which color format uses #code?<br><br>",
    "quesType": "mcq",
    "op1": "HEX",
    "op2": "RGB",
    "op3": "HSL",
    "op4": "RGBA",
    "ans": "HEX"
  },
  {
    "ques": "Which sets opacity?<br><br>",
    "quesType": "mcq",
    "op1": "opacity",
    "op2": "transparent",
    "op3": "visibility",
    "op4": "alpha",
    "ans": "opacity"
  },
  {
    "ques": "Which applies shadow?<br><br>",
    "quesType": "mcq",
    "op1": "box-shadow",
    "op2": "text-shadow",
    "op3": "shadow",
    "op4": "outline",
    "ans": "box-shadow"
  },
   {"ques": "Property for text decoration?<br><br>", "quesType": "fill", "ans": "text-decoration"},
  {"ques": "Value to remove underline?<br><br>", "quesType": "fill", "ans": "none"},
  {"ques": "Property for font family?<br><br>", "quesType": "fill", "ans": "font-family"},
  {"ques": "Pseudo-class for hover?<br><br>", "quesType": "fill", "ans": ":hover"},
  {"ques": "Pseudo-class for first child?<br><br>", "quesType": "fill", "ans": ":first-child"},
  {"ques": "Property for overflow hidden?<br><br>", "quesType": "fill", "ans": "overflow"},
  {"ques": "Property for width?<br><br>", "quesType": "fill", "ans": "width"},
  {"ques": "Property for position?<br><br>", "quesType": "fill", "ans": "position"},
  {"ques": "Selector for child?<br><br>", "quesType": "fill", "ans": ">"},
  {"ques": "Valid CSS comment?<br><br>", "quesType": "fill", "ans": "/* comment */"},
  {"ques": "Property for flex layout?<br><br>", "quesType": "fill", "ans": "display: flex"},
  {"ques": "Color format for #code?<br><br>", "quesType": "fill", "ans": "HEX"},
  {"ques": "Property for opacity?<br><br>", "quesType": "fill", "ans": "opacity"},
  {"ques": "Property for box shadow?<br><br>", "quesType": "fill", "ans": "box-shadow"},
  {"ques": "Selector for descendant?<br><br>", "quesType": "fill", "ans": " "},
  {"ques": "Property for text align?<br><br>", "quesType": "fill", "ans": "text-align"},
  {"ques": "Property for float?<br><br>", "quesType": "fill", "ans": "float"},
  {"ques": "Value for position relative?<br><br>", "quesType": "fill", "ans": "relative"},
  {"ques": "Property for border?<br><br>", "quesType": "fill", "ans": "border"},
  {"ques": "Unit for percent?<br><br>", "quesType": "fill", "ans": "%"},
  {
  "ques": "Which property sets the background image?<br><br>",
  "quesType": "mcq",
  "op1": "background-image",
  "op2": "background",
  "op3": "bg-image",
  "op4": "image",
  "ans": "background-image"
},
{
  "ques": "What is the default display value for <div>?<br><br>",
  "quesType": "mcq",
  "op1": "block",
  "op2": "inline",
  "op3": "flex",
  "op4": "none",
  "ans": "block"
},
{
  "ques": "Which property makes text uppercase?<br><br>",
  "quesType": "mcq",
  "op1": "text-transform",
  "op2": "text-uppercase",
  "op3": "text-style",
  "op4": "font-case",
  "ans": "text-transform"
},
{
  "ques": "Which CSS value repeats a background image?<br><br>",
  "quesType": "mcq",
  "op1": "repeat",
  "op2": "loop",
  "op3": "circle",
  "op4": "none",
  "ans": "repeat"
},
{
  "ques": "What does z-index control?<br><br>",
  "quesType": "mcq",
  "op1": "stacking order",
  "op2": "text color",
  "op3": "font size",
  "op4": "background",
  "ans": "stacking order"
},
{
  "ques": "Which property rounds corners?<br><br>",
  "quesType": "mcq",
  "op1": "border-radius",
  "op2": "border-round",
  "op3": "corner",
  "op4": "outline",
  "ans": "border-radius"
},
{
  "ques": "Which value is valid for position?<br><br>",
  "quesType": "mcq",
  "op1": "absolute",
  "op2": "flex",
  "op3": "float",
  "op4": "inline",
  "ans": "absolute"
},
{
  "ques": "What is output?<br><br>p { text-align: right; }",
  "quesType": "mcq",
  "op1": "Text aligns right",
  "op2": "Text bold",
  "op3": "Text italic",
  "op4": "Nothing",
  "ans": "Text aligns right"
},
{
  "ques": "Which property changes list bullet type?<br><br>",
  "quesType": "mcq",
  "op1": "list-style-type",
  "op2": "list-type",
  "op3": "bullet-type",
  "op4": "list-style",
  "ans": "list-style-type"
},
{
  "ques": "Which pseudo-class selects visited links?<br><br>",
  "quesType": "mcq",
  "op1": ":visited",
  "op2": ":hover",
  "op3": ":active",
  "op4": ":link",
  "ans": ":visited"
},
{
  "ques": "Which property controls element visibility?<br><br>",
  "quesType": "mcq",
  "op1": "visibility",
  "op2": "display",
  "op3": "opacity",
  "op4": "hidden",
  "ans": "visibility"
},
{
  "ques": "Which is valid CSS syntax?<br><br>",
  "quesType": "mcq",
  "op1": "color: red;",
  "op2": "color = red;",
  "op3": "color: red",
  "op4": "color red;",
  "ans": "color: red;"
},
{
  "ques": "Which sets a shadow on text?<br><br>",
  "quesType": "mcq",
  "op1": "text-shadow",
  "op2": "shadow-text",
  "op3": "box-shadow",
  "op4": "font-shadow",
  "ans": "text-shadow"
},
{
  "ques": "Which CSS property changes cursor style?<br><br>",
  "quesType": "mcq",
  "op1": "cursor",
  "op2": "pointer",
  "op3": "mouse",
  "op4": "hover",
  "ans": "cursor"
},
{
  "ques": "What is output?<br><br>div { display: none; }",
  "quesType": "mcq",
  "op1": "Div hidden",
  "op2": "Div visible",
  "op3": "Div floats",
  "op4": "Div moves",
  "ans": "Div hidden"
},
{
  "ques": "Which unit is absolute?<br><br>",
  "quesType": "mcq",
  "op1": "px",
  "op2": "%",
  "op3": "em",
  "op4": "rem",
  "ans": "px"
},
{
  "ques": "Which sets element transparency?<br><br>",
  "quesType": "mcq",
  "op1": "opacity",
  "op2": "visibility",
  "op3": "display",
  "op4": "alpha",
  "ans": "opacity"
},
{
  "ques": "Which sets maximum width?<br><br>",
  "quesType": "mcq",
  "op1": "max-width",
  "op2": "min-width",
  "op3": "width",
  "op4": "fit-width",
  "ans": "max-width"
},
{
  "ques": "Which property repeats a background vertically?<br><br>",
  "quesType": "mcq",
  "op1": "repeat-y",
  "op2": "repeat-x",
  "op3": "repeat",
  "op4": "no-repeat",
  "ans": "repeat-y"
},
{
  "ques": "Which sets border color?<br><br>",
  "quesType": "mcq",
  "op1": "border-color",
  "op2": "border-style",
  "op3": "outline-color",
  "op4": "border-bg",
  "ans": "border-color"
}
,
{
  "ques": "Property for uppercase text?<br><br>",
  "quesType": "fill",
  "ans": "text-transform"
},
{
  "ques": "Property for background repeat?<br><br>",
  "quesType": "fill",
  "ans": "background-repeat"
},
{
  "ques": "Property for z-index?<br><br>",
  "quesType": "fill",
  "ans": "z-index"
},
{
  "ques": "Property for rounded corners?<br><br>",
  "quesType": "fill",
  "ans": "border-radius"
},
{
  "ques": "Property for list bullets?<br><br>",
  "quesType": "fill",
  "ans": "list-style-type"
},
{
  "ques": "Pseudo-class for hover?<br><br>",
  "quesType": "fill",
  "ans": ":hover"
},
{
  "ques": "Pseudo-class for visited?<br><br>",
  "quesType": "fill",
  "ans": ":visited"
},
{
  "ques": "Property for visibility?<br><br>",
  "quesType": "fill",
  "ans": "visibility"
},
{
  "ques": "Property for max width?<br><br>",
  "quesType": "fill",
  "ans": "max-width"
},
{
  "ques": "CSS comment syntax?<br><br>",
  "quesType": "fill",
  "ans": "/* comment */"
},
{
  "ques": "Property for cursor style?<br><br>",
  "quesType": "fill",
  "ans": "cursor"
},
{
  "ques": "Property for text shadow?<br><br>",
  "quesType": "fill",
  "ans": "text-shadow"
},
{
  "ques": "Value to hide display?<br><br>",
  "quesType": "fill",
  "ans": "none"
},
{
  "ques": "Absolute unit example?<br><br>",
  "quesType": "fill",
  "ans": "px"
},
{
  "ques": "Property for element opacity?<br><br>",
  "quesType": "fill",
  "ans": "opacity"
},
{
  "ques": "Property for border color?<br><br>",
  "quesType": "fill",
  "ans": "border-color"
},
{
  "ques": "Value for repeat vertically?<br><br>",
  "quesType": "fill",
  "ans": "repeat-y"
},
{
  "ques": "Property for background image?<br><br>",
  "quesType": "fill",
  "ans": "background-image"
},
{
  "ques": "Property for box model?<br><br>",
  "quesType": "fill",
  "ans": "box-sizing"
},
{
  "ques": "Property for stacking elements?<br><br>",
  "quesType": "fill",
  "ans": "z-index"
}
,
{
  "ques": "Which property sets background repeat?<br><br>",
  "quesType": "mcq",
  "op1": "background-repeat",
  "op2": "repeat",
  "op3": "repeat-bg",
  "op4": "bg-repeat",
  "ans": "background-repeat"
},
{
  "ques": "Which sets background position?<br><br>",
  "quesType": "mcq",
  "op1": "background-position",
  "op2": "bg-position",
  "op3": "position-bg",
  "op4": "bg-pos",
  "ans": "background-position"
},
{
  "ques": "Which sets background size?<br><br>",
  "quesType": "mcq",
  "op1": "background-size",
  "op2": "bg-size",
  "op3": "size-bg",
  "op4": "bg-dimension",
  "ans": "background-size"
},
{
  "ques": "Which sets outline style?<br><br>",
  "quesType": "mcq",
  "op1": "outline-style",
  "op2": "border-style",
  "op3": "outline",
  "op4": "style-outline",
  "ans": "outline-style"
},
{
  "ques": "Which sets outline width?<br><br>",
  "quesType": "mcq",
  "op1": "outline-width",
  "op2": "border-width",
  "op3": "width-outline",
  "op4": "outline-size",
  "ans": "outline-width"
},
{
  "ques": "Which sets outline color?<br><br>",
  "quesType": "mcq",
  "op1": "outline-color",
  "op2": "border-color",
  "op3": "color-outline",
  "op4": "outline-bg",
  "ans": "outline-color"
},
{
  "ques": "Which sets list style type?<br><br>",
  "quesType": "mcq",
  "op1": "list-style-type",
  "op2": "list-type",
  "op3": "style-type",
  "op4": "type-list",
  "ans": "list-style-type"
},
{
  "ques": "Which sets list style position?<br><br>",
  "quesType": "mcq",
  "op1": "list-style-position",
  "op2": "list-position",
  "op3": "position-list",
  "op4": "style-position",
  "ans": "list-style-position"
},
{
  "ques": "Which sets table border collapse?<br><br>",
  "quesType": "mcq",
  "op1": "border-collapse",
  "op2": "collapse",
  "op3": "table-border",
  "op4": "border-style",
  "ans": "border-collapse"
},
{
  "ques": "Which sets table border spacing?<br><br>",
  "quesType": "mcq",
  "op1": "border-spacing",
  "op2": "spacing",
  "op3": "table-spacing",
  "op4": "border-gap",
  "ans": "border-spacing"
},
{
  "ques": "Which sets vertical alignment?<br><br>",
  "quesType": "mcq",
  "op1": "vertical-align",
  "op2": "align-vertical",
  "op3": "text-align",
  "op4": "v-align",
  "ans": "vertical-align"
},
{
  "ques": "Which sets white space?<br><br>",
  "quesType": "mcq",
  "op1": "white-space",
  "op2": "space-white",
  "op3": "text-space",
  "op4": "whitespace",
  "ans": "white-space"
},
{
  "ques": "Which sets content overflow-x?<br><br>",
  "quesType": "mcq",
  "op1": "overflow-x",
  "op2": "x-overflow",
  "op3": "overflow",
  "op4": "overflow-horizontal",
  "ans": "overflow-x"
},
{
  "ques": "Which sets content overflow-y?<br><br>",
  "quesType": "mcq",
  "op1": "overflow-y",
  "op2": "y-overflow",
  "op3": "overflow",
  "op4": "overflow-vertical",
  "ans": "overflow-y"
},
{
  "ques": "Which sets maximum height?<br><br>",
  "quesType": "mcq",
  "op1": "max-height",
  "op2": "maximum-height",
  "op3": "height-max",
  "op4": "maxsize-height",
  "ans": "max-height"
},
{
  "ques": "Which sets minimum height?<br><br>",
  "quesType": "mcq",
  "op1": "min-height",
  "op2": "minimum-height",
  "op3": "height-min",
  "op4": "minsize-height",
  "ans": "min-height"
},
{
  "ques": "Which sets clear floats?<br><br>",
  "quesType": "mcq",
  "op1": "clear",
  "op2": "float-clear",
  "op3": "overflow",
  "op4": "block",
  "ans": "clear"
},
{
  "ques": "Which sets flex display?<br><br>",
  "quesType": "mcq",
  "op1": "display: flex",
  "op2": "flex: display",
  "op3": "flexbox",
  "op4": "box-flex",
  "ans": "display: flex"
},
{
  "ques": "Which sets grid display?<br><br>",
  "quesType": "mcq",
  "op1": "display: grid",
  "op2": "grid: display",
  "op3": "gridbox",
  "op4": "box-grid",
  "ans": "display: grid"
},
{
  "ques": "Which sets flex direction?<br><br>",
  "quesType": "mcq",
  "op1": "flex-direction",
  "op2": "direction-flex",
  "op3": "flex-align",
  "op4": "align-flex",
  "ans": "flex-direction"
}
,
{
  "ques": "Property for background repeat?<br><br>",
  "quesType": "fill",
  "ans": "background-repeat"
},
{
  "ques": "Property for background position?<br><br>",
  "quesType": "fill",
  "ans": "background-position"
},
{
  "ques": "Property for background size?<br><br>",
  "quesType": "fill",
  "ans": "background-size"
},
{
  "ques": "Property for outline style?<br><br>",
  "quesType": "fill",
  "ans": "outline-style"
},
{
  "ques": "Property for outline width?<br><br>",
  "quesType": "fill",
  "ans": "outline-width"
},
{
  "ques": "Property for outline color?<br><br>",
  "quesType": "fill",
  "ans": "outline-color"
},
{
  "ques": "Property for list style type?<br><br>",
  "quesType": "fill",
  "ans": "list-style-type"
},
{
  "ques": "Property for list style position?<br><br>",
  "quesType": "fill",
  "ans": "list-style-position"
},
{
  "ques": "Property for border collapse?<br><br>",
  "quesType": "fill",
  "ans": "border-collapse"
},
{
  "ques": "Property for border spacing?<br><br>",
  "quesType": "fill",
  "ans": "border-spacing"
},
{
  "ques": "Property for vertical align?<br><br>",
  "quesType": "fill",
  "ans": "vertical-align"
},
{
  "ques": "Property for white space?<br><br>",
  "quesType": "fill",
  "ans": "white-space"
},
{
  "ques": "Property for overflow-x?<br><br>",
  "quesType": "fill",
  "ans": "overflow-x"
},
{
  "ques": "Property for overflow-y?<br><br>",
  "quesType": "fill",
  "ans": "overflow-y"
},
{
  "ques": "Property for max-height?<br><br>",
  "quesType": "fill",
  "ans": "max-height"
},
{
  "ques": "Property for min-height?<br><br>",
  "quesType": "fill",
  "ans": "min-height"
},
{
  "ques": "Property for clear floats?<br><br>",
  "quesType": "fill",
  "ans": "clear"
},
{
  "ques": "Value for flex display?<br><br>",
  "quesType": "fill",
  "ans": "flex"
},
{
  "ques": "Value for grid display?<br><br>",
  "quesType": "fill",
  "ans": "grid"
},
{
  "ques": "Property for flex direction?<br><br>",
  "quesType": "fill",
  "ans": "flex-direction"
}
,
{
  "ques": "Which property sets the border color?<br><br>",
  "quesType": "mcq",
  "op1": "border-color",
  "op2": "color",
  "op3": "border-style",
  "op4": "outline-color",
  "ans": "border-color"
},
{
  "ques": "Which sets the border radius?<br><br>",
  "quesType": "mcq",
  "op1": "border-radius",
  "op2": "radius",
  "op3": "border-curve",
  "op4": "round-border",
  "ans": "border-radius"
},
{
  "ques": "Which sets text shadow?<br><br>",
  "quesType": "mcq",
  "op1": "text-shadow",
  "op2": "box-shadow",
  "op3": "shadow",
  "op4": "font-shadow",
  "ans": "text-shadow"
},
{
  "ques": "Which pseudo-class selects last child?<br><br>",
  "quesType": "mcq",
  "op1": ":last-child",
  "op2": ":end-child",
  "op3": ":last",
  "op4": ":lastElement",
  "ans": ":last-child"
},
{
  "ques": "Which sets element visibility?<br><br>",
  "quesType": "mcq",
  "op1": "visibility",
  "op2": "opacity",
  "op3": "display",
  "op4": "show",
  "ans": "visibility"
},
{
  "ques": "Which sets background attachment?<br><br>",
  "quesType": "mcq",
  "op1": "background-attachment",
  "op2": "background-position",
  "op3": "background-link",
  "op4": "bg-attachment",
  "ans": "background-attachment"
},
{
  "ques": "Which sets overflow X axis?<br><br>",
  "quesType": "mcq",
  "op1": "overflow-x",
  "op2": "overflow",
  "op3": "x-overflow",
  "op4": "scroll-x",
  "ans": "overflow-x"
},
{
  "ques": "Which sets overflow Y axis?<br><br>",
  "quesType": "mcq",
  "op1": "overflow-y",
  "op2": "overflow",
  "op3": "y-overflow",
  "op4": "scroll-y",
  "ans": "overflow-y"
},
{
  "ques": "Which property aligns items flex?<br><br>",
  "quesType": "mcq",
  "op1": "align-items",
  "op2": "justify-items",
  "op3": "flex-align",
  "op4": "align-flex",
  "ans": "align-items"
},
{
  "ques": "Which property sets content justification?<br><br>",
  "quesType": "mcq",
  "op1": "justify-content",
  "op2": "align-content",
  "op3": "content-align",
  "op4": "justify-items",
  "ans": "justify-content"
},
{
  "ques": "Which unit means viewport width?<br><br>",
  "quesType": "mcq",
  "op1": "vw",
  "op2": "vh",
  "op3": "%",
  "op4": "px",
  "ans": "vw"
},
{
  "ques": "Which unit means viewport height?<br><br>",
  "quesType": "mcq",
  "op1": "vh",
  "op2": "vw",
  "op3": "%",
  "op4": "px",
  "ans": "vh"
},
{
  "ques": "Which property floats right?<br><br>",
  "quesType": "mcq",
  "op1": "float: right",
  "op2": "align: right",
  "op3": "position: right",
  "op4": "right-float",
  "ans": "float: right"
},
{
  "ques": "Which pseudo-element styles first line?<br><br>",
  "quesType": "mcq",
  "op1": "::first-line",
  "op2": ":first-line",
  "op3": ":line-first",
  "op4": "::line-first",
  "ans": "::first-line"
},
{
  "ques": "Which pseudo-element styles first letter?<br><br>",
  "quesType": "mcq",
  "op1": "::first-letter",
  "op2": ":first-letter",
  "op3": ":letter-first",
  "op4": "::letter-first",
  "ans": "::first-letter"
},
{
  "ques": "Which property sets outline?<br><br>",
  "quesType": "mcq",
  "op1": "outline",
  "op2": "border",
  "op3": "frame",
  "op4": "border-outline",
  "ans": "outline"
},
{
  "ques": "Which property sets outline color?<br><br>",
  "quesType": "mcq",
  "op1": "outline-color",
  "op2": "border-color",
  "op3": "color",
  "op4": "frame-color",
  "ans": "outline-color"
},
{
  "ques": "Which removes bullet points?<br><br>",
  "quesType": "mcq",
  "op1": "list-style: none",
  "op2": "text-decoration: none",
  "op3": "list-type: none",
  "op4": "marker: none",
  "ans": "list-style: none"
},
{
  "ques": "Which property sets flex direction?<br><br>",
  "quesType": "mcq",
  "op1": "flex-direction",
  "op2": "flex-flow",
  "op3": "direction",
  "op4": "flow-direction",
  "ans": "flex-direction"
},
{
  "ques": "Which sets flex wrap?<br><br>",
  "quesType": "mcq",
  "op1": "flex-wrap",
  "op2": "flex-flow",
  "op3": "wrap",
  "op4": "flex-box",
  "ans": "flex-wrap"
}
,
{
  "ques": "Property for border color?<br><br>",
  "quesType": "fill",
  "ans": "border-color"
},
{
  "ques": "Property for border radius?<br><br>",
  "quesType": "fill",
  "ans": "border-radius"
},
{
  "ques": "Property for text shadow?<br><br>",
  "quesType": "fill",
  "ans": "text-shadow"
},
{
  "ques": "Pseudo-class for last child?<br><br>",
  "quesType": "fill",
  "ans": ":last-child"
},
{
  "ques": "Property for visibility?<br><br>",
  "quesType": "fill",
  "ans": "visibility"
},
{
  "ques": "Property for background attachment?<br><br>",
  "quesType": "fill",
  "ans": "background-attachment"
},
{
  "ques": "Property for overflow-x?<br><br>",
  "quesType": "fill",
  "ans": "overflow-x"
},
{
  "ques": "Property for overflow-y?<br><br>",
  "quesType": "fill",
  "ans": "overflow-y"
},
{
  "ques": "Property for align items?<br><br>",
  "quesType": "fill",
  "ans": "align-items"
},
{
  "ques": "Property for justify content?<br><br>",
  "quesType": "fill",
  "ans": "justify-content"
},
{
  "ques": "Unit for viewport width?<br><br>",
  "quesType": "fill",
  "ans": "vw"
},
{
  "ques": "Unit for viewport height?<br><br>",
  "quesType": "fill",
  "ans": "vh"
},
{
  "ques": "Property for float right?<br><br>",
  "quesType": "fill",
  "ans": "float: right"
},
{
  "ques": "Pseudo-element for first line?<br><br>",
  "quesType": "fill",
  "ans": "::first-line"
},
{
  "ques": "Pseudo-element for first letter?<br><br>",
  "quesType": "fill",
  "ans": "::first-letter"
},
{
  "ques": "Property for outline?<br><br>",
  "quesType": "fill",
  "ans": "outline"
},
{
  "ques": "Property for outline color?<br><br>",
  "quesType": "fill",
  "ans": "outline-color"
},
{
  "ques": "Property to remove list bullets?<br><br>",
  "quesType": "fill",
  "ans": "list-style: none"
},
{
  "ques": "Property for flex direction?<br><br>",
  "quesType": "fill",
  "ans": "flex-direction"
},
{
  "ques": "Property for flex wrap?<br><br>",
  "quesType": "fill",
  "ans": "flex-wrap"
}

]

let codingcss2Arr=[
  {
  "ques": "Which property sets flexible growth of a flex item?<br><br>",
  "quesType": "mcq",
  "op1": "flex-grow",
  "op2": "flex-size",
  "op3": "flex",
  "op4": "flex-flow",
  "ans": "flex-grow"
},
{
  "ques": "Which value makes an element stick to top on scroll?<br><br>",
  "quesType": "mcq",
  "op1": "position: sticky",
  "op2": "position: fixed",
  "op3": "position: absolute",
  "op4": "position: float",
  "ans": "position: sticky"
},
{
  "ques": "What does transition-duration control?<br><br>",
  "quesType": "mcq",
  "op1": "Speed of transition",
  "op2": "Color",
  "op3": "Opacity",
  "op4": "Border",
  "ans": "Speed of transition"
},
{
  "ques": "Which is a pseudo-element?<br><br>",
  "quesType": "mcq",
  "op1": "::before",
  "op2": ":before",
  "op3": ":hover",
  "op4": ":visited",
  "ans": "::before"
},
{
  "ques": "Which makes text shadow blurred?<br><br>",
  "quesType": "mcq",
  "op1": "blur-radius",
  "op2": "text-blur",
  "op3": "shadow-blur",
  "op4": "blur-shadow",
  "ans": "blur-radius"
},
{
  "ques": "Which is valid CSS gradient syntax?<br><br>",
  "quesType": "mcq",
  "op1": "linear-gradient()",
  "op2": "gradient-linear()",
  "op3": "gradient()",
  "op4": "line-gradient()",
  "ans": "linear-gradient()"
},
{
  "ques": "What happens if z-index is negative?<br><br>",
  "quesType": "mcq",
  "op1": "Element goes behind",
  "op2": "Error",
  "op3": "Element hides",
  "op4": "Element floats",
  "ans": "Element goes behind"
},
{
  "ques": "What does position: absolute need?<br><br>",
  "quesType": "mcq",
  "op1": "Positioned parent",
  "op2": "Flex parent",
  "op3": "Grid parent",
  "op4": "Inline parent",
  "ans": "Positioned parent"
},
{
  "ques": "What is output?<br><br>p::first-letter { color: blue; }",
  "quesType": "mcq",
  "op1": "First letter blue",
  "op2": "All blue",
  "op3": "Last letter blue",
  "op4": "Nothing",
  "ans": "First letter blue"
},
{
  "ques": "Which selector matches every 2nd child?<br><br>",
  "quesType": "mcq",
  "op1": ":nth-child(2n)",
  "op2": ":nth-child(2)",
  "op3": ":first-child",
  "op4": ":last-child",
  "ans": ":nth-child(2n)"
},
{
  "ques": "Which sets transform origin?<br><br>",
  "quesType": "mcq",
  "op1": "transform-origin",
  "op2": "origin",
  "op3": "rotate-origin",
  "op4": "pivot",
  "ans": "transform-origin"
},
{
  "ques": "Which value makes text italic?<br><br>",
  "quesType": "mcq",
  "op1": "font-style: italic",
  "op2": "font-italic",
  "op3": "text-style: italic",
  "op4": "italic-text",
  "ans": "font-style: italic"
},
{
  "ques": "Which value hides overflow content?<br><br>",
  "quesType": "mcq",
  "op1": "hidden",
  "op2": "block",
  "op3": "collapse",
  "op4": "scroll",
  "ans": "hidden"
},
{
  "ques": "Which sets flex direction row?<br><br>",
  "quesType": "mcq",
  "op1": "flex-direction: row",
  "op2": "display: row",
  "op3": "flex-flow: row",
  "op4": "row-flex",
  "ans": "flex-direction: row"
},
{
  "ques": "Which aligns items center in flex?<br><br>",
  "quesType": "mcq",
  "op1": "align-items: center",
  "op2": "justify-items: center",
  "op3": "center-items",
  "op4": "item-align: center",
  "ans": "align-items: center"
},
{
  "ques": "Which unit is relative to font size?<br><br>",
  "quesType": "mcq",
  "op1": "em",
  "op2": "px",
  "op3": "%",
  "op4": "vh",
  "ans": "em"
},
{
  "ques": "What is output?<br><br>div:hover { background: red; }",
  "quesType": "mcq",
  "op1": "Red on hover",
  "op2": "Always red",
  "op3": "Red text",
  "op4": "No change",
  "ans": "Red on hover"
},
{
  "ques": "Which aligns content in grid?<br><br>",
  "quesType": "mcq",
  "op1": "justify-content",
  "op2": "align-items",
  "op3": "flex-content",
  "op4": "grid-align",
  "ans": "justify-content"
},
{
  "ques": "What makes animation smooth?<br><br>",
  "quesType": "mcq",
  "op1": "transition",
  "op2": "transform",
  "op3": "opacity",
  "op4": "box-shadow",
  "ans": "transition"
},
{
  "ques": "Which is correct syntax for media query?<br><br>",
  "quesType": "mcq",
  "op1": "@media",
  "op2": "@query",
  "op3": "@style",
  "op4": "@css",
  "ans": "@media"
}
,
{
  "ques": "Property to grow flex item?<br><br>",
  "quesType": "fill",
  "ans": "flex-grow"
},
{
  "ques": "Position that sticks on scroll?<br><br>",
  "quesType": "fill",
  "ans": "sticky"
},
{
  "ques": "Property for transition speed?<br><br>",
  "quesType": "fill",
  "ans": "transition-duration"
},
{
  "ques": "Pseudo-element for content before?<br><br>",
  "quesType": "fill",
  "ans": "::before"
},
{
  "ques": "Property for text shadow blur?<br><br>",
  "quesType": "fill",
  "ans": "blur-radius"
},
{
  "ques": "CSS function for gradient?<br><br>",
  "quesType": "fill",
  "ans": "linear-gradient()"
},
{
  "ques": "What happens with z-index -1?<br><br>",
  "quesType": "fill",
  "ans": "Element behind"
},
{
  "ques": "Property to set transform pivot?<br><br>",
  "quesType": "fill",
  "ans": "transform-origin"
},
{
  "ques": "Selector for every even child?<br><br>",
  "quesType": "fill",
  "ans": ":nth-child(2n)"
},
{
  "ques": "Syntax to make italic?<br><br>",
  "quesType": "fill",
  "ans": "font-style: italic"
},
{
  "ques": "Value to hide overflow?<br><br>",
  "quesType": "fill",
  "ans": "hidden"
},
{
  "ques": "Flex direction for row?<br><br>",
  "quesType": "fill",
  "ans": "flex-direction: row"
},
{
  "ques": "Align items center in flex?<br><br>",
  "quesType": "fill",
  "ans": "align-items: center"
},
{
  "ques": "Unit relative to font size?<br><br>",
  "quesType": "fill",
  "ans": "em"
},
{
  "ques": "Selector for hover effect?<br><br>",
  "quesType": "fill",
  "ans": ":hover"
},
{
  "ques": "Grid property for content align?<br><br>",
  "quesType": "fill",
  "ans": "justify-content"
},
{
  "ques": "Keyword for smooth effect?<br><br>",
  "quesType": "fill",
  "ans": "transition"
},
{
  "ques": "Keyword for responsive CSS?<br><br>",
  "quesType": "fill",
  "ans": "@media"
},
{
  "ques": "Selector for first letter?<br><br>",
  "quesType": "fill",
  "ans": "::first-letter"
},
{
  "ques": "Property for element absolute?<br><br>",
  "quesType": "fill",
  "ans": "position: absolute"
}
,
{
  "ques": "Which CSS property sets the z-axis stacking order?<br><br>",
  "quesType": "mcq",
  "op1": "z-index",
  "op2": "stack-order",
  "op3": "position-z",
  "op4": "z-order",
  "ans": "z-index"
},
{
  "ques": "Which property hides an element without removing space?<br><br>",
  "quesType": "mcq",
  "op1": "visibility",
  "op2": "display",
  "op3": "opacity",
  "op4": "hidden",
  "ans": "visibility"
},
{
  "ques": "Which property makes text uppercase?<br><br>",
  "quesType": "mcq",
  "op1": "text-transform",
  "op2": "text-uppercase",
  "op3": "font-transform",
  "op4": "transform-text",
  "ans": "text-transform"
},
{
  "ques": "Which pseudo-class targets the first child?<br><br>",
  "quesType": "mcq",
  "op1": ":first-child",
  "op2": ":first",
  "op3": ":child-first",
  "op4": ":nth-child(1)",
  "ans": ":first-child"
},
{
  "ques": "Which pseudo-class targets even rows?<br><br>",
  "quesType": "mcq",
  "op1": ":nth-child(even)",
  "op2": ":even",
  "op3": ":row-even",
  "op4": ":even-child",
  "ans": ":nth-child(even)"
},
{
  "ques": "Which property sets shadow for text?<br><br>",
  "quesType": "mcq",
  "op1": "text-shadow",
  "op2": "box-shadow",
  "op3": "shadow-text",
  "op4": "shadow",
  "ans": "text-shadow"
},
{
  "ques": "Which sets multiple background images?<br><br>",
  "quesType": "mcq",
  "op1": "background-image",
  "op2": "multiple-background",
  "op3": "backgrounds",
  "op4": "bg-image",
  "ans": "background-image"
},
{
  "ques": "Which sets rounded corners?<br><br>",
  "quesType": "mcq",
  "op1": "border-radius",
  "op2": "border-curve",
  "op3": "corner-radius",
  "op4": "radius-border",
  "ans": "border-radius"
},
{
  "ques": "Which unit is relative to root font size?<br><br>",
  "quesType": "mcq",
  "op1": "rem",
  "op2": "em",
  "op3": "px",
  "op4": "%",
  "ans": "rem"
},
{
  "ques": "Which is used for custom properties?<br><br>",
  "quesType": "mcq",
  "op1": "var()",
  "op2": "custom()",
  "op3": "--var",
  "op4": "--custom",
  "ans": "var()"
},
{
  "ques": "Which defines flexible items order?<br><br>",
  "quesType": "mcq",
  "op1": "order",
  "op2": "flex-order",
  "op3": "item-order",
  "op4": "flex-item-order",
  "ans": "order"
},
{
  "ques": "Which property sets element opacity?<br><br>",
  "quesType": "mcq",
  "op1": "opacity",
  "op2": "visibility",
  "op3": "alpha",
  "op4": "transparent",
  "ans": "opacity"
},
{
  "ques": "Which sets box shadow?<br><br>",
  "quesType": "mcq",
  "op1": "box-shadow",
  "op2": "shadow-box",
  "op3": "shadow",
  "op4": "text-shadow",
  "ans": "box-shadow"
},
{
  "ques": "Which sets transform rotation?<br><br>",
  "quesType": "mcq",
  "op1": "transform: rotate",
  "op2": "rotate",
  "op3": "transform-rotate",
  "op4": "rotation",
  "ans": "transform: rotate"
},
{
  "ques": "Which sets transition effect?<br><br>",
  "quesType": "mcq",
  "op1": "transition",
  "op2": "animation",
  "op3": "transform",
  "op4": "effect",
  "ans": "transition"
},
{
  "ques": "Which sets animation duration?<br><br>",
  "quesType": "mcq",
  "op1": "animation-duration",
  "op2": "animation-time",
  "op3": "duration",
  "op4": "time",
  "ans": "animation-duration"
},
{
  "ques": "Which makes an element fixed?<br><br>",
  "quesType": "mcq",
  "op1": "position: fixed",
  "op2": "position: absolute",
  "op3": "position: relative",
  "op4": "position: static",
  "ans": "position: fixed"
},
{
  "ques": "Which property sets cursor style?<br><br>",
  "quesType": "mcq",
  "op1": "cursor",
  "op2": "pointer",
  "op3": "mouse",
  "op4": "style-cursor",
  "ans": "cursor"
},
{
  "ques": "Which pseudo-class targets links?<br><br>",
  "quesType": "mcq",
  "op1": ":link",
  "op2": ":visited",
  "op3": ":hover",
  "op4": ":active",
  "ans": ":link"
},
{
  "ques": "Which property sets clip path?<br><br>",
  "quesType": "mcq",
  "op1": "clip-path",
  "op2": "clip",
  "op3": "path-clip",
  "op4": "mask",
  "ans": "clip-path"
}
,
{
  "ques": "Property for stacking order?<br><br>",
  "quesType": "fill",
  "ans": "z-index"
},
{
  "ques": "Property to hide element but keep space?<br><br>",
  "quesType": "fill",
  "ans": "visibility"
},
{
  "ques": "Property to transform text?<br><br>",
  "quesType": "fill",
  "ans": "text-transform"
},
{
  "ques": "Pseudo-class for first child?<br><br>",
  "quesType": "fill",
  "ans": ":first-child"
},
{
  "ques": "Pseudo-class for even child?<br><br>",
  "quesType": "fill",
  "ans": ":nth-child(even)"
},
{
  "ques": "Property for text shadow?<br><br>",
  "quesType": "fill",
  "ans": "text-shadow"
},
{
  "ques": "Property for rounded corners?<br><br>",
  "quesType": "fill",
  "ans": "border-radius"
},
{
  "ques": "Unit relative to root font size?<br><br>",
  "quesType": "fill",
  "ans": "rem"
},
{
  "ques": "Function for custom property?<br><br>",
  "quesType": "fill",
  "ans": "var()"
},
{
  "ques": "Property for flex item order?<br><br>",
  "quesType": "fill",
  "ans": "order"
},
{
  "ques": "Property for opacity?<br><br>",
  "quesType": "fill",
  "ans": "opacity"
},
{
  "ques": "Property for box shadow?<br><br>",
  "quesType": "fill",
  "ans": "box-shadow"
},
{
  "ques": "Function for rotation?<br><br>",
  "quesType": "fill",
  "ans": "rotate"
},
{
  "ques": "Property for transition?<br><br>",
  "quesType": "fill",
  "ans": "transition"
},
{
  "ques": "Property for animation duration?<br><br>",
  "quesType": "fill",
  "ans": "animation-duration"
},
{
  "ques": "Position value for fixed?<br><br>",
  "quesType": "fill",
  "ans": "fixed"
},
{
  "ques": "Property for cursor?<br><br>",
  "quesType": "fill",
  "ans": "cursor"
},
{
  "ques": "Pseudo-class for link?<br><br>",
  "quesType": "fill",
  "ans": ":link"
},
{
  "ques": "Pseudo-class for visited?<br><br>",
  "quesType": "fill",
  "ans": ":visited"
},
{
  "ques": "Property for clip path?<br><br>",
  "quesType": "fill",
  "ans": "clip-path"
}
,
{
  "ques": "Property for border color?<br><br>",
  "quesType": "fill",
  "ans": "border-color"
},
{
  "ques": "Property for border radius?<br><br>",
  "quesType": "fill",
  "ans": "border-radius"
},
{
  "ques": "Property for text shadow?<br><br>",
  "quesType": "fill",
  "ans": "text-shadow"
},
{
  "ques": "Pseudo-class for last child?<br><br>",
  "quesType": "fill",
  "ans": ":last-child"
},
{
  "ques": "Property for visibility?<br><br>",
  "quesType": "fill",
  "ans": "visibility"
},
{
  "ques": "Property for background attachment?<br><br>",
  "quesType": "fill",
  "ans": "background-attachment"
},
{
  "ques": "Property for overflow-x?<br><br>",
  "quesType": "fill",
  "ans": "overflow-x"
},
{
  "ques": "Property for overflow-y?<br><br>",
  "quesType": "fill",
  "ans": "overflow-y"
},
{
  "ques": "Property for align items?<br><br>",
  "quesType": "fill",
  "ans": "align-items"
},
{
  "ques": "Property for justify content?<br><br>",
  "quesType": "fill",
  "ans": "justify-content"
},
{
  "ques": "Unit for viewport width?<br><br>",
  "quesType": "fill",
  "ans": "vw"
},
{
  "ques": "Unit for viewport height?<br><br>",
  "quesType": "fill",
  "ans": "vh"
},
{
  "ques": "Property for float right?<br><br>",
  "quesType": "fill",
  "ans": "float: right"
},
{
  "ques": "Pseudo-element for first line?<br><br>",
  "quesType": "fill",
  "ans": "::first-line"
},
{
  "ques": "Pseudo-element for first letter?<br><br>",
  "quesType": "fill",
  "ans": "::first-letter"
},
{
  "ques": "Property for outline?<br><br>",
  "quesType": "fill",
  "ans": "outline"
},
{
  "ques": "Property for outline color?<br><br>",
  "quesType": "fill",
  "ans": "outline-color"
},
{
  "ques": "Property to remove list bullets?<br><br>",
  "quesType": "fill",
  "ans": "list-style: none"
},
{
  "ques": "Property for flex direction?<br><br>",
  "quesType": "fill",
  "ans": "flex-direction"
},
{
  "ques": "Property for flex wrap?<br><br>",
  "quesType": "fill",
  "ans": "flex-wrap"
}
,
{
  "ques": "Which property sets the border color?<br><br>",
  "quesType": "mcq",
  "op1": "border-color",
  "op2": "color",
  "op3": "border-style",
  "op4": "outline-color",
  "ans": "border-color"
},
{
  "ques": "Which sets the border radius?<br><br>",
  "quesType": "mcq",
  "op1": "border-radius",
  "op2": "radius",
  "op3": "border-curve",
  "op4": "round-border",
  "ans": "border-radius"
},
{
  "ques": "Which sets text shadow?<br><br>",
  "quesType": "mcq",
  "op1": "text-shadow",
  "op2": "box-shadow",
  "op3": "shadow",
  "op4": "font-shadow",
  "ans": "text-shadow"
},
{
  "ques": "Which pseudo-class selects last child?<br><br>",
  "quesType": "mcq",
  "op1": ":last-child",
  "op2": ":end-child",
  "op3": ":last",
  "op4": ":lastElement",
  "ans": ":last-child"
},
{
  "ques": "Which sets element visibility?<br><br>",
  "quesType": "mcq",
  "op1": "visibility",
  "op2": "opacity",
  "op3": "display",
  "op4": "show",
  "ans": "visibility"
},
{
  "ques": "Which sets background attachment?<br><br>",
  "quesType": "mcq",
  "op1": "background-attachment",
  "op2": "background-position",
  "op3": "background-link",
  "op4": "bg-attachment",
  "ans": "background-attachment"
},
{
  "ques": "Which sets overflow X axis?<br><br>",
  "quesType": "mcq",
  "op1": "overflow-x",
  "op2": "overflow",
  "op3": "x-overflow",
  "op4": "scroll-x",
  "ans": "overflow-x"
},
{
  "ques": "Which sets overflow Y axis?<br><br>",
  "quesType": "mcq",
  "op1": "overflow-y",
  "op2": "overflow",
  "op3": "y-overflow",
  "op4": "scroll-y",
  "ans": "overflow-y"
},
{
  "ques": "Which property aligns items flex?<br><br>",
  "quesType": "mcq",
  "op1": "align-items",
  "op2": "justify-items",
  "op3": "flex-align",
  "op4": "align-flex",
  "ans": "align-items"
},
{
  "ques": "Which property sets content justification?<br><br>",
  "quesType": "mcq",
  "op1": "justify-content",
  "op2": "align-content",
  "op3": "content-align",
  "op4": "justify-items",
  "ans": "justify-content"
},
{
  "ques": "Which unit means viewport width?<br><br>",
  "quesType": "mcq",
  "op1": "vw",
  "op2": "vh",
  "op3": "%",
  "op4": "px",
  "ans": "vw"
},
{
  "ques": "Which unit means viewport height?<br><br>",
  "quesType": "mcq",
  "op1": "vh",
  "op2": "vw",
  "op3": "%",
  "op4": "px",
  "ans": "vh"
},
{
  "ques": "Which property floats right?<br><br>",
  "quesType": "mcq",
  "op1": "float: right",
  "op2": "align: right",
  "op3": "position: right",
  "op4": "right-float",
  "ans": "float: right"
},
{
  "ques": "Which pseudo-element styles first line?<br><br>",
  "quesType": "mcq",
  "op1": "::first-line",
  "op2": ":first-line",
  "op3": ":line-first",
  "op4": "::line-first",
  "ans": "::first-line"
},
{
  "ques": "Which pseudo-element styles first letter?<br><br>",
  "quesType": "mcq",
  "op1": "::first-letter",
  "op2": ":first-letter",
  "op3": ":letter-first",
  "op4": "::letter-first",
  "ans": "::first-letter"
},
{
  "ques": "Which property sets outline?<br><br>",
  "quesType": "mcq",
  "op1": "outline",
  "op2": "border",
  "op3": "frame",
  "op4": "border-outline",
  "ans": "outline"
},
{
  "ques": "Which property sets outline color?<br><br>",
  "quesType": "mcq",
  "op1": "outline-color",
  "op2": "border-color",
  "op3": "color",
  "op4": "frame-color",
  "ans": "outline-color"
},
{
  "ques": "Which removes bullet points?<br><br>",
  "quesType": "mcq",
  "op1": "list-style: none",
  "op2": "text-decoration: none",
  "op3": "list-type: none",
  "op4": "marker: none",
  "ans": "list-style: none"
},
{
  "ques": "Which property sets flex direction?<br><br>",
  "quesType": "mcq",
  "op1": "flex-direction",
  "op2": "flex-flow",
  "op3": "direction",
  "op4": "flow-direction",
  "ans": "flex-direction"
},
{
  "ques": "Which sets flex wrap?<br><br>",
  "quesType": "mcq",
  "op1": "flex-wrap",
  "op2": "flex-flow",
  "op3": "wrap",
  "op4": "flex-box",
  "ans": "flex-wrap"
}
,
{
  "ques": "Which property sets space between flex items?<br><br>",
  "quesType": "mcq",
  "op1": "justify-content",
  "op2": "align-items",
  "op3": "flex-direction",
  "op4": "order",
  "ans": "justify-content"
},
{
  "ques": "Which makes grid items auto-fit?<br><br>",
  "quesType": "mcq",
  "op1": "auto-fit",
  "op2": "flex-fit",
  "op3": "grid-fit",
  "op4": "auto-fill",
  "ans": "auto-fit"
},
{
  "ques": "Which is the correct order: margin or padding?<br><br>",
  "quesType": "mcq",
  "op1": "Padding inside, margin outside",
  "op2": "Margin inside, padding outside",
  "op3": "Same",
  "op4": "Depends",
  "ans": "Padding inside, margin outside"
},
{
  "ques": "What does display: inline-block do?<br><br>",
  "quesType": "mcq",
  "op1": "Inline element with block features",
  "op2": "Block element",
  "op3": "Inline only",
  "op4": "Floats right",
  "ans": "Inline element with block features"
},
{
  "ques": "Which value disables pointer events?<br><br>",
  "quesType": "mcq",
  "op1": "pointer-events: none",
  "op2": "cursor: none",
  "op3": "disabled",
  "op4": "block-pointer",
  "ans": "pointer-events: none"
},
{
  "ques": "Which property sets animation timing?<br><br>",
  "quesType": "mcq",
  "op1": "animation-timing-function",
  "op2": "animation-delay",
  "op3": "animation-iteration",
  "op4": "animation-fill-mode",
  "ans": "animation-timing-function"
},
{
  "ques": "Which pseudo-class selects empty elements?<br><br>",
  "quesType": "mcq",
  "op1": ":empty",
  "op2": ":blank",
  "op3": ":null",
  "op4": ":void",
  "ans": ":empty"
},
{
  "ques": "Which sets multiple backgrounds?<br><br>",
  "quesType": "mcq",
  "op1": "background-image",
  "op2": "backgrounds",
  "op3": "multi-background",
  "op4": "image-stack",
  "ans": "background-image"
},
{
  "ques": "What happens with overflow: scroll?<br><br>",
  "quesType": "mcq",
  "op1": "Always shows scrollbar",
  "op2": "No scroll",
  "op3": "Scroll only if needed",
  "op4": "Hidden content",
  "ans": "Always shows scrollbar"
},
{
  "ques": "Which is output?<br><br>a:hover { color: orange; }",
  "quesType": "mcq",
  "op1": "Orange on hover",
  "op2": "Always orange",
  "op3": "Orange when clicked",
  "op4": "Orange background",
  "ans": "Orange on hover"
},
{
  "ques": "Which sets box shadow inward?<br><br>",
  "quesType": "mcq",
  "op1": "inset",
  "op2": "inside",
  "op3": "inner-shadow",
  "op4": "shadow-in",
  "ans": "inset"
},
{
  "ques": "Which property reverses flex order?<br><br>",
  "quesType": "mcq",
  "op1": "flex-direction: row-reverse",
  "op2": "flex-flow: reverse",
  "op3": "order: reverse",
  "op4": "reverse-flex",
  "ans": "flex-direction: row-reverse"
},
{
  "ques": "Which sets min height?<br><br>",
  "quesType": "mcq",
  "op1": "min-height",
  "op2": "max-height",
  "op3": "height",
  "op4": "flex-height",
  "ans": "min-height"
},
{
  "ques": "What does rem stand for?<br><br>",
  "quesType": "mcq",
  "op1": "Root em",
  "op2": "Relative em",
  "op3": "Responsive em",
  "op4": "Resize em",
  "ans": "Root em"
},
{
  "ques": "Which sets text spacing?<br><br>",
  "quesType": "mcq",
  "op1": "letter-spacing",
  "op2": "word-spacing",
  "op3": "line-height",
  "op4": "text-align",
  "ans": "letter-spacing"
},
{
  "ques": "Which is output?<br><br>span::after { content: '!'; }",
  "quesType": "mcq",
  "op1": "Adds '!' after",
  "op2": "Adds '!' before",
  "op3": "Removes text",
  "op4": "Changes font",
  "ans": "Adds '!' after"
},
{
  "ques": "Which selector applies to all elements?<br><br>",
  "quesType": "mcq",
  "op1": "*",
  "op2": "#",
  "op3": ".",
  "op4": ":",
  "ans": "*"
},
{
  "ques": "Which sets outline color?<br><br>",
  "quesType": "mcq",
  "op1": "outline-color",
  "op2": "border-color",
  "op3": "box-color",
  "op4": "line-color",
  "ans": "outline-color"
},
{
  "ques": "What is output?<br><br>div:first-child { color: green; }",
  "quesType": "mcq",
  "op1": "First child green",
  "op2": "Last child green",
  "op3": "All green",
  "op4": "Nothing",
  "ans": "First child green"
},
{
  "ques": "Which sets element resize?<br><br>",
  "quesType": "mcq",
  "op1": "resize",
  "op2": "scale",
  "op3": "transform",
  "op4": "size",
  "ans": "resize"
}
,
{
  "ques": "Property for spacing flex items?<br><br>",
  "quesType": "fill",
  "ans": "justify-content"
},
{
  "ques": "Grid auto-fit keyword?<br><br>",
  "quesType": "fill",
  "ans": "auto-fit"
},
{
  "ques": "Inside is padding, outside is ____?<br><br>",
  "quesType": "fill",
  "ans": "margin"
},
{
  "ques": "Keyword for inline-block?<br><br>",
  "quesType": "fill",
  "ans": "inline-block"
},
{
  "ques": "Disable pointer events?<br><br>",
  "quesType": "fill",
  "ans": "pointer-events: none"
},
{
  "ques": "Timing for animation?<br><br>",
  "quesType": "fill",
  "ans": "animation-timing-function"
},
{
  "ques": "Pseudo-class for empty?<br><br>",
  "quesType": "fill",
  "ans": ":empty"
},
{
  "ques": "Property for multiple backgrounds?<br><br>",
  "quesType": "fill",
  "ans": "background-image"
},
{
  "ques": "Overflow that always shows scroll?<br><br>",
  "quesType": "fill",
  "ans": "scroll"
},
{
  "ques": "Hover link turns orange?<br><br>",
  "quesType": "fill",
  "ans": "a:hover"
},
{
  "ques": "Value for inner box shadow?<br><br>",
  "quesType": "fill",
  "ans": "inset"
},
{
  "ques": "Reverse flex row?<br><br>",
  "quesType": "fill",
  "ans": "row-reverse"
},
{
  "ques": "Minimum height property?<br><br>",
  "quesType": "fill",
  "ans": "min-height"
},
{
  "ques": "Root based unit?<br><br>",
  "quesType": "fill",
  "ans": "rem"
},
{
  "ques": "Spacing between letters?<br><br>",
  "quesType": "fill",
  "ans": "letter-spacing"
},
{
  "ques": "Pseudo-element for after?<br><br>",
  "quesType": "fill",
  "ans": "::after"
},
{
  "ques": "Selector for all elements?<br><br>",
  "quesType": "fill",
  "ans": "*"
},
{
  "ques": "Property for outline color?<br><br>",
  "quesType": "fill",
  "ans": "outline-color"
},
{
  "ques": "Selector for first child?<br><br>",
  "quesType": "fill",
  "ans": ":first-child"
},
{
  "ques": "Property to make element resizable?<br><br>",
  "quesType": "fill",
  "ans": "resize"
}
,
{
  "ques": "Which unit is relative to viewport width?<br><br>",
  "quesType": "mcq",
  "op1": "vw",
  "op2": "vh",
  "op3": "rem",
  "op4": "em",
  "ans": "vw"
},
{
  "ques": "Which unit is relative to viewport height?<br><br>",
  "quesType": "mcq",
  "op1": "vh",
  "op2": "vw",
  "op3": "rem",
  "op4": "px",
  "ans": "vh"
},
{
  "ques": "Which defines grid rows and columns?<br><br>",
  "quesType": "mcq",
  "op1": "grid-template",
  "op2": "grid",
  "op3": "grid-rows",
  "op4": "grid-columns",
  "ans": "grid-template"
},
{
  "ques": "Which sets flexible box container?<br><br>",
  "quesType": "mcq",
  "op1": "display: flex",
  "op2": "flex-container",
  "op3": "flex: display",
  "op4": "flex-wrap",
  "ans": "display: flex"
},
{
  "ques": "Which property aligns flex items?<br><br>",
  "quesType": "mcq",
  "op1": "align-items",
  "op2": "flex-align",
  "op3": "items-align",
  "op4": "justify-items",
  "ans": "align-items"
},
{
  "ques": "Which aligns items horizontally in flex?<br><br>",
  "quesType": "mcq",
  "op1": "justify-content",
  "op2": "align-items",
  "op3": "content-justify",
  "op4": "flex-direction",
  "ans": "justify-content"
},
{
  "ques": "Which sets background repeat?<br><br>",
  "quesType": "mcq",
  "op1": "background-repeat",
  "op2": "repeat-background",
  "op3": "repeat",
  "op4": "background-loop",
  "ans": "background-repeat"
},
{
  "ques": "Which sets background position?<br><br>",
  "quesType": "mcq",
  "op1": "background-position",
  "op2": "position-background",
  "op3": "bg-position",
  "op4": "position",
  "ans": "background-position"
},
{
  "ques": "Which makes text underline?<br><br>",
  "quesType": "mcq",
  "op1": "text-decoration",
  "op2": "text-underline",
  "op3": "decoration-text",
  "op4": "underline",
  "ans": "text-decoration"
},
{
  "ques": "Which sets element overflow?<br><br>",
  "quesType": "mcq",
  "op1": "overflow",
  "op2": "scroll",
  "op3": "hidden",
  "op4": "visible",
  "ans": "overflow"
},
{
  "ques": "Which makes list bullets style?<br><br>",
  "quesType": "mcq",
  "op1": "list-style",
  "op2": "bullet-style",
  "op3": "list-type",
  "op4": "style-list",
  "ans": "list-style"
},
{
  "ques": "Which sets maximum width?<br><br>",
  "quesType": "mcq",
  "op1": "max-width",
  "op2": "width-max",
  "op3": "maximum-width",
  "op4": "width-limit",
  "ans": "max-width"
},
{
  "ques": "Which sets minimum height?<br><br>",
  "quesType": "mcq",
  "op1": "min-height",
  "op2": "height-min",
  "op3": "minimum-height",
  "op4": "height-limit",
  "ans": "min-height"
},
{
  "ques": "Which pseudo-class selects checked inputs?<br><br>",
  "quesType": "mcq",
  "op1": ":checked",
  "op2": ":selected",
  "op3": ":active",
  "op4": ":input-checked",
  "ans": ":checked"
},
{
  "ques": "Which sets image fit inside box?<br><br>",
  "quesType": "mcq",
  "op1": "object-fit",
  "op2": "image-fit",
  "op3": "fit",
  "op4": "box-fit",
  "ans": "object-fit"
},
{
  "ques": "Which sets writing direction?<br><br>",
  "quesType": "mcq",
  "op1": "direction",
  "op2": "writing-mode",
  "op3": "text-direction",
  "op4": "flow-direction",
  "ans": "direction"
},
{
  "ques": "Which property floats element right?<br><br>",
  "quesType": "mcq",
  "op1": "float: right",
  "op2": "position: right",
  "op3": "align: right",
  "op4": "display: right",
  "ans": "float: right"
},
{
  "ques": "Which pseudo-class targets input focus?<br><br>",
  "quesType": "mcq",
  "op1": ":focus",
  "op2": ":hover",
  "op3": ":active",
  "op4": ":checked",
  "ans": ":focus"
},
{
  "ques": "Which sets table border collapse?<br><br>",
  "quesType": "mcq",
  "op1": "border-collapse",
  "op2": "table-collapse",
  "op3": "collapse-border",
  "op4": "table-border",
  "ans": "border-collapse"
},
{
  "ques": "Which sets letter spacing?<br><br>",
  "quesType": "mcq",
  "op1": "letter-spacing",
  "op2": "text-spacing",
  "op3": "font-spacing",
  "op4": "spacing-letters",
  "ans": "letter-spacing"
}
,
{
  "ques": "Unit relative to viewport width?<br><br>",
  "quesType": "fill",
  "ans": "vw"
},
{
  "ques": "Unit relative to viewport height?<br><br>",
  "quesType": "fill",
  "ans": "vh"
},
{
  "ques": "Property for grid layout?<br><br>",
  "quesType": "fill",
  "ans": "grid-template"
},
{
  "ques": "Property for flex container?<br><br>",
  "quesType": "fill",
  "ans": "display: flex"
},
{
  "ques": "Property to align flex items?<br><br>",
  "quesType": "fill",
  "ans": "align-items"
},
{
  "ques": "Property to justify flex items?<br><br>",
  "quesType": "fill",
  "ans": "justify-content"
},
{
  "ques": "Property for background repeat?<br><br>",
  "quesType": "fill",
  "ans": "background-repeat"
},
{
  "ques": "Property for background position?<br><br>",
  "quesType": "fill",
  "ans": "background-position"
},
{
  "ques": "Property for text decoration?<br><br>",
  "quesType": "fill",
  "ans": "text-decoration"
},
{
  "ques": "Property for overflow?<br><br>",
  "quesType": "fill",
  "ans": "overflow"
},
{
  "ques": "Property for list style?<br><br>",
  "quesType": "fill",
  "ans": "list-style"
},
{
  "ques": "Property for max width?<br><br>",
  "quesType": "fill",
  "ans": "max-width"
},
{
  "ques": "Property for min height?<br><br>",
  "quesType": "fill",
  "ans": "min-height"
},
{
  "ques": "Pseudo-class for checked input?<br><br>",
  "quesType": "fill",
  "ans": ":checked"
},
{
  "ques": "Property for object fit?<br><br>",
  "quesType": "fill",
  "ans": "object-fit"
},
{
  "ques": "Property for writing direction?<br><br>",
  "quesType": "fill",
  "ans": "direction"
},
{
  "ques": "Property for floating right?<br><br>",
  "quesType": "fill",
  "ans": "float: right"
},
{
  "ques": "Pseudo-class for focus?<br><br>",
  "quesType": "fill",
  "ans": ":focus"
},
{
  "ques": "Property for border collapse?<br><br>",
  "quesType": "fill",
  "ans": "border-collapse"
},
{
  "ques": "Property for letter spacing?<br><br>",
  "quesType": "fill",
  "ans": "letter-spacing"
}
,
{
  "ques": "Which pseudo-class selects every even child?<br><br>",
  "quesType": "mcq",
  "op1": ":nth-child(even)",
  "op2": ":even-child",
  "op3": ":nth-even",
  "op4": ":child-even",
  "ans": ":nth-child(even)"
},
{
  "ques": "Which pseudo-class selects when hovering?<br><br>",
  "quesType": "mcq",
  "op1": ":hover",
  "op2": ":active",
  "op3": ":focus",
  "op4": ":visited",
  "ans": ":hover"
},
{
  "ques": "Which pseudo-class selects focused input?<br><br>",
  "quesType": "mcq",
  "op1": ":focus",
  "op2": ":hover",
  "op3": ":active",
  "op4": ":checked",
  "ans": ":focus"
},
{
  "ques": "Which pseudo-class selects checked input?<br><br>",
  "quesType": "mcq",
  "op1": ":checked",
  "op2": ":selected",
  "op3": ":focus",
  "op4": ":enabled",
  "ans": ":checked"
},
{
  "ques": "Which makes text uppercase?<br><br>",
  "quesType": "mcq",
  "op1": "text-transform: uppercase",
  "op2": "font-case: upper",
  "op3": "text-case: upper",
  "op4": "transform: uppercase",
  "ans": "text-transform: uppercase"
},
{
  "ques": "Which sets z-index?<br><br>",
  "quesType": "mcq",
  "op1": "z-index",
  "op2": "index",
  "op3": "stack-index",
  "op4": "z-layer",
  "ans": "z-index"
},
{
  "ques": "Which sets cursor style?<br><br>",
  "quesType": "mcq",
  "op1": "cursor",
  "op2": "pointer",
  "op3": "mouse",
  "op4": "hover",
  "ans": "cursor"
},
{
  "ques": "Which sets box shadow?<br><br>",
  "quesType": "mcq",
  "op1": "box-shadow",
  "op2": "text-shadow",
  "op3": "shadow",
  "op4": "outline-shadow",
  "ans": "box-shadow"
},
{
  "ques": "Which makes element inline-block?<br><br>",
  "quesType": "mcq",
  "op1": "display: inline-block",
  "op2": "position: inline-block",
  "op3": "float: inline-block",
  "op4": "inline-block: true",
  "ans": "display: inline-block"
},
{
  "ques": "Which sets transition duration?<br><br>",
  "quesType": "mcq",
  "op1": "transition-duration",
  "op2": "animation-duration",
  "op3": "duration",
  "op4": "transition-time",
  "ans": "transition-duration"
},
{
  "ques": "Which sets transition timing?<br><br>",
  "quesType": "mcq",
  "op1": "transition-timing-function",
  "op2": "transition-function",
  "op3": "timing-function",
  "op4": "ease-function",
  "ans": "transition-timing-function"
},
{
  "ques": "Which makes element sticky?<br><br>",
  "quesType": "mcq",
  "op1": "position: sticky",
  "op2": "position: fixed",
  "op3": "position: static",
  "op4": "float: sticky",
  "ans": "position: sticky"
},
{
  "ques": "Which sets grid display?<br><br>",
  "quesType": "mcq",
  "op1": "display: grid",
  "op2": "grid: true",
  "op3": "display: flex-grid",
  "op4": "flex: grid",
  "ans": "display: grid"
},
{
  "ques": "Which sets grid gap?<br><br>",
  "quesType": "mcq",
  "op1": "grid-gap",
  "op2": "gap",
  "op3": "grid-spacing",
  "op4": "grid-space",
  "ans": "grid-gap"
},
{
  "ques": "Which sets max width?<br><br>",
  "quesType": "mcq",
  "op1": "max-width",
  "op2": "width-max",
  "op3": "width-limit",
  "op4": "limit-width",
  "ans": "max-width"
},
{
  "ques": "Which sets min height?<br><br>",
  "quesType": "mcq",
  "op1": "min-height",
  "op2": "height-min",
  "op3": "height-limit",
  "op4": "limit-height",
  "ans": "min-height"
},
{
  "ques": "Which property hides overflow?<br><br>",
  "quesType": "mcq",
  "op1": "overflow: hidden",
  "op2": "display: none",
  "op3": "visibility: hidden",
  "op4": "opacity: 0",
  "ans": "overflow: hidden"
},
{
  "ques": "Which sets transform scale?<br><br>",
  "quesType": "mcq",
  "op1": "transform: scale()",
  "op2": "scale()",
  "op3": "transform-scale",
  "op4": "scale-transform",
  "ans": "transform: scale()"
},
{
  "ques": "Which sets transform rotate?<br><br>",
  "quesType": "mcq",
  "op1": "transform: rotate()",
  "op2": "rotate()",
  "op3": "rotate-transform",
  "op4": "transform-rotate",
  "ans": "transform: rotate()"
},
{
  "ques": "Which is used for media queries?<br><br>",
  "quesType": "mcq",
  "op1": "@media",
  "op2": "@query",
  "op3": "@if",
  "op4": "@responsive",
  "ans": "@media"
}
,
{
  "ques": "Pseudo-class for even child?<br><br>",
  "quesType": "fill",
  "ans": ":nth-child(even)"
},
{
  "ques": "Pseudo-class for hover?<br><br>",
  "quesType": "fill",
  "ans": ":hover"
},
{
  "ques": "Pseudo-class for focus?<br><br>",
  "quesType": "fill",
  "ans": ":focus"
},
{
  "ques": "Pseudo-class for checked?<br><br>",
  "quesType": "fill",
  "ans": ":checked"
},
{
  "ques": "Property to make text uppercase?<br><br>",
  "quesType": "fill",
  "ans": "text-transform: uppercase"
},
{
  "ques": "Property for z-index?<br><br>",
  "quesType": "fill",
  "ans": "z-index"
},
{
  "ques": "Property for cursor?<br><br>",
  "quesType": "fill",
  "ans": "cursor"
},
{
  "ques": "Property for box shadow?<br><br>",
  "quesType": "fill",
  "ans": "box-shadow"
},
{
  "ques": "Property for inline-block?<br><br>",
  "quesType": "fill",
  "ans": "display: inline-block"
},
{
  "ques": "Property for transition duration?<br><br>",
  "quesType": "fill",
  "ans": "transition-duration"
},
{
  "ques": "Property for transition timing?<br><br>",
  "quesType": "fill",
  "ans": "transition-timing-function"
},
{
  "ques": "Position for sticky element?<br><br>",
  "quesType": "fill",
  "ans": "position: sticky"
},
{
  "ques": "Display type for grid?<br><br>",
  "quesType": "fill",
  "ans": "display: grid"
},
{
  "ques": "Property for grid gap?<br><br>",
  "quesType": "fill",
  "ans": "grid-gap"
},
{
  "ques": "Property for max width?<br><br>",
  "quesType": "fill",
  "ans": "max-width"
},
{
  "ques": "Property for min height?<br><br>",
  "quesType": "fill",
  "ans": "min-height"
},
{
  "ques": "Property to hide overflow?<br><br>",
  "quesType": "fill",
  "ans": "overflow: hidden"
},
{
  "ques": "Property to scale element?<br><br>",
  "quesType": "fill",
  "ans": "transform: scale()"
},
{
  "ques": "Property to rotate element?<br><br>",
  "quesType": "fill",
  "ans": "transform: rotate()"
},
{
  "ques": "At-rule for media queries?<br><br>",
  "quesType": "fill",
  "ans": "@media"
}
,
{
  "ques": "Which property sets how an element floats?<br><br>",
  "quesType": "mcq",
  "op1": "float",
  "op2": "position",
  "op3": "align",
  "op4": "display",
  "ans": "float"
},
{
  "ques": "What clears floated elements?<br><br>",
  "quesType": "mcq",
  "op1": "clear",
  "op2": "overflow",
  "op3": "fix-float",
  "op4": "reset",
  "ans": "clear"
},
{
  "ques": "Which value makes element relative to parent?<br><br>",
  "quesType": "mcq",
  "op1": "position: relative",
  "op2": "position: absolute",
  "op3": "position: fixed",
  "op4": "position: static",
  "ans": "position: absolute"
},
{
  "ques": "What sets a fixed background image?<br><br>",
  "quesType": "mcq",
  "op1": "background-attachment: fixed",
  "op2": "background-position: fixed",
  "op3": "background-repeat: fixed",
  "op4": "background-size: fixed",
  "ans": "background-attachment: fixed"
},
{
  "ques": "Which pseudo-class selects the first type?<br><br>",
  "quesType": "mcq",
  "op1": ":first-of-type",
  "op2": ":first-child",
  "op3": ":first",
  "op4": ":type-first",
  "ans": ":first-of-type"
},
{
  "ques": "Which sets column count?<br><br>",
  "quesType": "mcq",
  "op1": "column-count",
  "op2": "columns",
  "op3": "col-count",
  "op4": "grid-columns",
  "ans": "column-count"
},
{
  "ques": "What sets gradient at an angle?<br><br>",
  "quesType": "mcq",
  "op1": "linear-gradient(angle, ...)",
  "op2": "angle-gradient()",
  "op3": "gradient-angle()",
  "op4": "linear-angle()",
  "ans": "linear-gradient(angle, ...)"
},
{
  "ques": "Which sets list marker style?<br><br>",
  "quesType": "mcq",
  "op1": "list-style",
  "op2": "bullet-type",
  "op3": "marker",
  "op4": "list-bullet",
  "ans": "list-style"
},
{
  "ques": "What sets all transition properties?<br><br>",
  "quesType": "mcq",
  "op1": "transition",
  "op2": "animation",
  "op3": "transform",
  "op4": "effect",
  "ans": "transition"
},
{
  "ques": "What is output?<br><br>h2:hover { font-size: 2em; }",
  "quesType": "mcq",
  "op1": "Enlarges on hover",
  "op2": "Always large",
  "op3": "Shrinks on hover",
  "op4": "Hides text",
  "ans": "Enlarges on hover"
},
{
  "ques": "Which sets gap in grid?<br><br>",
  "quesType": "mcq",
  "op1": "grid-gap",
  "op2": "gap-size",
  "op3": "grid-spacing",
  "op4": "spacing",
  "ans": "grid-gap"
},
{
  "ques": "Which pseudo-class selects focused input?<br><br>",
  "quesType": "mcq",
  "op1": ":focus",
  "op2": ":active",
  "op3": ":checked",
  "op4": ":target",
  "ans": ":focus"
},
{
  "ques": "Which unit is viewport height?<br><br>",
  "quesType": "mcq",
  "op1": "vh",
  "op2": "vw",
  "op3": "em",
  "op4": "rem",
  "ans": "vh"
},
{
  "ques": "Which combines multiple transitions?<br><br>",
  "quesType": "mcq",
  "op1": "comma-separated",
  "op2": "pipe-separated",
  "op3": "space-separated",
  "op4": "semi-colon",
  "ans": "comma-separated"
},
{
  "ques": "What is output?<br><br>div::before { content: '$'; }",
  "quesType": "mcq",
  "op1": "Adds $ before",
  "op2": "Adds $ after",
  "op3": "Hides text",
  "op4": "Changes font",
  "ans": "Adds $ before"
},
{
  "ques": "Which sets shadow on box?<br><br>",
  "quesType": "mcq",
  "op1": "box-shadow",
  "op2": "text-shadow",
  "op3": "shadow",
  "op4": "shadow-box",
  "ans": "box-shadow"
},
{
  "ques": "Which sets transparency?<br><br>",
  "quesType": "mcq",
  "op1": "opacity",
  "op2": "alpha",
  "op3": "transparent",
  "op4": "fade",
  "ans": "opacity"
},
{
  "ques": "Which pseudo-class targets visited links?<br><br>",
  "quesType": "mcq",
  "op1": ":visited",
  "op2": ":link",
  "op3": ":active",
  "op4": ":hover",
  "ans": ":visited"
},
{
  "ques": "What is output?<br><br>input:checked { background: pink; }",
  "quesType": "mcq",
  "op1": "Checked input pink",
  "op2": "Unchecked input pink",
  "op3": "Always pink",
  "op4": "No effect",
  "ans": "Checked input pink"
},
{
  "ques": "Which unit is relative to parent?<br><br>",
  "quesType": "mcq",
  "op1": "%",
  "op2": "px",
  "op3": "em",
  "op4": "vh",
  "ans": "%"
}
,
{
  "ques": "Property for floating element?<br><br>",
  "quesType": "fill",
  "ans": "float"
},
{
  "ques": "Clear floated elements?<br><br>",
  "quesType": "fill",
  "ans": "clear"
},
{
  "ques": "Position child relative to parent?<br><br>",
  "quesType": "fill",
  "ans": "absolute"
},
{
  "ques": "Fix background image?<br><br>",
  "quesType": "fill",
  "ans": "background-attachment: fixed"
},
{
  "ques": "Pseudo-class for first type?<br><br>",
  "quesType": "fill",
  "ans": ":first-of-type"
},
{
  "ques": "Set number of columns?<br><br>",
  "quesType": "fill",
  "ans": "column-count"
},
{
  "ques": "Gradient with angle?<br><br>",
  "quesType": "fill",
  "ans": "linear-gradient"
},
{
  "ques": "Set bullet style?<br><br>",
  "quesType": "fill",
  "ans": "list-style"
},
{
  "ques": "All transition properties?<br><br>",
  "quesType": "fill",
  "ans": "transition"
},
{
  "ques": "Change font on hover?<br><br>",
  "quesType": "fill",
  "ans": "h2:hover"
},
{
  "ques": "Gap in grid layout?<br><br>",
  "quesType": "fill",
  "ans": "grid-gap"
},
{
  "ques": "Pseudo for input focus?<br><br>",
  "quesType": "fill",
  "ans": ":focus"
},
{
  "ques": "Unit for viewport height?<br><br>",
  "quesType": "fill",
  "ans": "vh"
},
{
  "ques": "Separate multiple transitions?<br><br>",
  "quesType": "fill",
  "ans": "comma"
},
{
  "ques": "Pseudo-element for content before?<br><br>",
  "quesType": "fill",
  "ans": "::before"
},
{
  "ques": "Add shadow to box?<br><br>",
  "quesType": "fill",
  "ans": "box-shadow"
},
{
  "ques": "Property for transparency?<br><br>",
  "quesType": "fill",
  "ans": "opacity"
},
{
  "ques": "Pseudo-class for visited link?<br><br>",
  "quesType": "fill",
  "ans": ":visited"
},
{
  "ques": "Pseudo-class for checked input?<br><br>",
  "quesType": "fill",
  "ans": ":checked"
},
{
  "ques": "Unit relative to parent?<br><br>",
  "quesType": "fill",
  "ans": "%"
}

]

let codingcss3Arr=[
  {
  "ques": "Which pseudo-element inserts content before an element?<br><br>",
  "quesType": "mcq",
  "op1": "::before",
  "op2": "::after",
  "op3": ":before",
  "op4": ":first",
  "ans": "::before"
},
{
  "ques": "Which pseudo-element inserts content after an element?<br><br>",
  "quesType": "mcq",
  "op1": "::after",
  "op2": "::before",
  "op3": ":after",
  "op4": ":last",
  "ans": "::after"
},
{
  "ques": "Which property sets an animation duration?<br><br>",
  "quesType": "mcq",
  "op1": "animation-duration",
  "op2": "transition-duration",
  "op3": "animation-time",
  "op4": "duration",
  "ans": "animation-duration"
},
{
  "ques": "Which property sets the animation name?<br><br>",
  "quesType": "mcq",
  "op1": "animation-name",
  "op2": "name-animation",
  "op3": "keyframes-name",
  "op4": "anim-name",
  "ans": "animation-name"
},
{
  "ques": "Which property sets transition timing?<br><br>",
  "quesType": "mcq",
  "op1": "transition-timing-function",
  "op2": "animation-timing",
  "op3": "timing-function",
  "op4": "timing-transition",
  "ans": "transition-timing-function"
},
{
  "ques": "Which selector selects direct child?<br><br>",
  "quesType": "mcq",
  "op1": ">",
  "op2": "+",
  "op3": "~",
  "op4": " ",
  "ans": ">"
},
{
  "ques": "Which selector selects next sibling?<br><br>",
  "quesType": "mcq",
  "op1": "+",
  "op2": ">",
  "op3": "~",
  "op4": "*",
  "ans": "+"
},
{
  "ques": "Which selector selects all siblings?<br><br>",
  "quesType": "mcq",
  "op1": "~",
  "op2": "+",
  "op3": ">",
  "op4": "*",
  "ans": "~"
},
{
  "ques": "Which pseudo-class targets nth child?<br><br>",
  "quesType": "mcq",
  "op1": ":nth-child()",
  "op2": ":nth()",
  "op3": ":nth-of-type()",
  "op4": ":nth-last-child()",
  "ans": ":nth-child()"
},
{
  "ques": "Which pseudo-class selects first child?<br><br>",
  "quesType": "mcq",
  "op1": ":first-child",
  "op2": ":first",
  "op3": ":first-of-type",
  "op4": ":nth-child(1)",
  "ans": ":first-child"
},
{
  "ques": "Which property sets Z index?<br><br>",
  "quesType": "mcq",
  "op1": "z-index",
  "op2": "z",
  "op3": "index",
  "op4": "layer-index",
  "ans": "z-index"
},
{
  "ques": "Which property makes sticky positioning?<br><br>",
  "quesType": "mcq",
  "op1": "position: sticky",
  "op2": "position: fixed",
  "op3": "sticky",
  "op4": "fixed-position",
  "ans": "position: sticky"
},
{
  "ques": "Which sets perspective for 3D?<br><br>",
  "quesType": "mcq",
  "op1": "perspective",
  "op2": "transform-perspective",
  "op3": "transform: perspective",
  "op4": "3d-perspective",
  "ans": "perspective"
},
{
  "ques": "Which property transforms element?<br><br>",
  "quesType": "mcq",
  "op1": "transform",
  "op2": "transition",
  "op3": "translate",
  "op4": "rotate",
  "ans": "transform"
},
{
  "ques": "Which property delays transition?<br><br>",
  "quesType": "mcq",
  "op1": "transition-delay",
  "op2": "animation-delay",
  "op3": "delay",
  "op4": "delay-transition",
  "ans": "transition-delay"
},
{
  "ques": "Which sets box shadow?<br><br>",
  "quesType": "mcq",
  "op1": "box-shadow",
  "op2": "shadow-box",
  "op3": "shadow",
  "op4": "outline-shadow",
  "ans": "box-shadow"
},
{
  "ques": "Which property sets text shadow?<br><br>",
  "quesType": "mcq",
  "op1": "text-shadow",
  "op2": "shadow-text",
  "op3": "font-shadow",
  "op4": "box-shadow",
  "ans": "text-shadow"
},
{
  "ques": "Which property sets clip path?<br><br>",
  "quesType": "mcq",
  "op1": "clip-path",
  "op2": "path-clip",
  "op3": "clip",
  "op4": "shape-clip",
  "ans": "clip-path"
},
{
  "ques": "Which makes custom properties?<br><br>",
  "quesType": "mcq",
  "op1": "var()",
  "op2": "--custom",
  "op3": "custom-var",
  "op4": "define-var",
  "ans": "var()"
},
{
  "ques": "Which sets backface visibility?<br><br>",
  "quesType": "mcq",
  "op1": "backface-visibility",
  "op2": "visibility-backface",
  "op3": "back-visibility",
  "op4": "face-visibility",
  "ans": "backface-visibility"
}
,
{
  "ques": "Pseudo-element to insert content before?<br><br>",
  "quesType": "fill",
  "ans": "::before"
},
{
  "ques": "Pseudo-element to insert content after?<br><br>",
  "quesType": "fill",
  "ans": "::after"
},
{
  "ques": "Property for animation duration?<br><br>",
  "quesType": "fill",
  "ans": "animation-duration"
},
{
  "ques": "Property for animation name?<br><br>",
  "quesType": "fill",
  "ans": "animation-name"
},
{
  "ques": "Property for transition timing?<br><br>",
  "quesType": "fill",
  "ans": "transition-timing-function"
},
{
  "ques": "Selector for direct child?<br><br>",
  "quesType": "fill",
  "ans": ">"
},
{
  "ques": "Selector for next sibling?<br><br>",
  "quesType": "fill",
  "ans": "+"
},
{
  "ques": "Selector for all siblings?<br><br>",
  "quesType": "fill",
  "ans": "~"
},
{
  "ques": "Pseudo-class for nth child?<br><br>",
  "quesType": "fill",
  "ans": ":nth-child()"
},
{
  "ques": "Pseudo-class for first child?<br><br>",
  "quesType": "fill",
  "ans": ":first-child"
},
{
  "ques": "Property for z-index?<br><br>",
  "quesType": "fill",
  "ans": "z-index"
},
{
  "ques": "Property for sticky position?<br><br>",
  "quesType": "fill",
  "ans": "position: sticky"
},
{
  "ques": "Property for 3D perspective?<br><br>",
  "quesType": "fill",
  "ans": "perspective"
},
{
  "ques": "Property for transform?<br><br>",
  "quesType": "fill",
  "ans": "transform"
},
{
  "ques": "Property for transition delay?<br><br>",
  "quesType": "fill",
  "ans": "transition-delay"
},
{
  "ques": "Property for box shadow?<br><br>",
  "quesType": "fill",
  "ans": "box-shadow"
},
{
  "ques": "Property for text shadow?<br><br>",
  "quesType": "fill",
  "ans": "text-shadow"
},
{
  "ques": "Property for clip path?<br><br>",
  "quesType": "fill",
  "ans": "clip-path"
},
{
  "ques": "Function to use custom var?<br><br>",
  "quesType": "fill",
  "ans": "var()"
},
{
  "ques": "Property for backface visibility?<br><br>",
  "quesType": "fill",
  "ans": "backface-visibility"
}
,
{
  "ques": "Which selects an element that is a direct child?<br><br>",
  "quesType": "mcq",
  "op1": "parent > child",
  "op2": "parent child",
  "op3": "parent + child",
  "op4": "parent ~ child",
  "ans": "parent > child"
},
{
  "ques": "Which combinator selects next sibling?<br><br>",
  "quesType": "mcq",
  "op1": "A + B",
  "op2": "A ~ B",
  "op3": "A > B",
  "op4": "A B",
  "ans": "A + B"
},
{
  "ques": "Which combinator selects all next siblings?<br><br>",
  "quesType": "mcq",
  "op1": "A ~ B",
  "op2": "A + B",
  "op3": "A > B",
  "op4": "A B",
  "ans": "A ~ B"
},
{
  "ques": "Which pseudo-element selects first line?<br><br>",
  "quesType": "mcq",
  "op1": "::first-line",
  "op2": "::line-first",
  "op3": ":first-line",
  "op4": ":line-first",
  "ans": "::first-line"
},
{
  "ques": "Which pseudo-element inserts content before?<br><br>",
  "quesType": "mcq",
  "op1": "::before",
  "op2": "::after",
  "op3": ":before",
  "op4": ":insert-before",
  "ans": "::before"
},
{
  "ques": "Which pseudo-element inserts content after?<br><br>",
  "quesType": "mcq",
  "op1": "::after",
  "op2": "::before",
  "op3": ":after",
  "op4": ":insert-after",
  "ans": "::after"
},
{
  "ques": "Which sets custom property?<br><br>",
  "quesType": "mcq",
  "op1": "--var-name: value;",
  "op2": "$var-name: value;",
  "op3": "@var-name: value;",
  "op4": "var-name: value;",
  "ans": "--var-name: value;"
},
{
  "ques": "How to use custom property?<br><br>",
  "quesType": "mcq",
  "op1": "var(--name)",
  "op2": "use(--name)",
  "op3": "$name",
  "op4": "@name",
  "ans": "var(--name)"
},
{
  "ques": "Which sets flex grow factor?<br><br>",
  "quesType": "mcq",
  "op1": "flex-grow",
  "op2": "flex-basis",
  "op3": "flex-shrink",
  "op4": "flex-direction",
  "ans": "flex-grow"
},
{
  "ques": "Which sets flex shrink factor?<br><br>",
  "quesType": "mcq",
  "op1": "flex-shrink",
  "op2": "flex-grow",
  "op3": "flex-basis",
  "op4": "flex-direction",
  "ans": "flex-shrink"
},
{
  "ques": "Which sets flex basis?<br><br>",
  "quesType": "mcq",
  "op1": "flex-basis",
  "op2": "flex-grow",
  "op3": "flex-shrink",
  "op4": "basis-flex",
  "ans": "flex-basis"
},
{
  "ques": "Which property sets order in flex?<br><br>",
  "quesType": "mcq",
  "op1": "order",
  "op2": "flex-order",
  "op3": "flex-sequence",
  "op4": "position",
  "ans": "order"
},
{
  "ques": "Which sets grid template columns?<br><br>",
  "quesType": "mcq",
  "op1": "grid-template-columns",
  "op2": "grid-columns",
  "op3": "grid-cols",
  "op4": "template-columns",
  "ans": "grid-template-columns"
},
{
  "ques": "Which sets grid template rows?<br><br>",
  "quesType": "mcq",
  "op1": "grid-template-rows",
  "op2": "grid-rows",
  "op3": "grid-rows-template",
  "op4": "template-rows",
  "ans": "grid-template-rows"
},
{
  "ques": "Which sets animation name?<br><br>",
  "quesType": "mcq",
  "op1": "animation-name",
  "op2": "keyframes",
  "op3": "@keyframes",
  "op4": "animation",
  "ans": "animation-name"
},
{
  "ques": "Which sets animation duration?<br><br>",
  "quesType": "mcq",
  "op1": "animation-duration",
  "op2": "transition-duration",
  "op3": "duration",
  "op4": "animation-time",
  "ans": "animation-duration"
},
{
  "ques": "Which sets animation delay?<br><br>",
  "quesType": "mcq",
  "op1": "animation-delay",
  "op2": "animation-wait",
  "op3": "delay",
  "op4": "transition-delay",
  "ans": "animation-delay"
},
{
  "ques": "Which BEM element syntax is correct?<br><br>",
  "quesType": "mcq",
  "op1": "block__element",
  "op2": "block-element",
  "op3": "block:element",
  "op4": "block--element",
  "ans": "block__element"
},
{
  "ques": "Which BEM modifier syntax is correct?<br><br>",
  "quesType": "mcq",
  "op1": "block__element--modifier",
  "op2": "block--modifier__element",
  "op3": "block:modifier:element",
  "op4": "block-element--modifier",
  "ans": "block__element--modifier"
},
{
  "ques": "Which at-rule imports CSS?<br><br>",
  "quesType": "mcq",
  "op1": "@import",
  "op2": "@use",
  "op3": "@media",
  "op4": "@require",
  "ans": "@import"
}
,
{
  "ques": "Combinator for direct child?<br><br>",
  "quesType": "fill",
  "ans": ">"
},
{
  "ques": "Combinator for next sibling?<br><br>",
  "quesType": "fill",
  "ans": "+"
},
{
  "ques": "Combinator for all siblings?<br><br>",
  "quesType": "fill",
  "ans": "~"
},
{
  "ques": "Pseudo-element for first line?<br><br>",
  "quesType": "fill",
  "ans": "::first-line"
},
{
  "ques": "Pseudo-element for content before?<br><br>",
  "quesType": "fill",
  "ans": "::before"
},
{
  "ques": "Pseudo-element for content after?<br><br>",
  "quesType": "fill",
  "ans": "::after"
},
{
  "ques": "Syntax for custom property?<br><br>",
  "quesType": "fill",
  "ans": "--name: value;"
},
{
  "ques": "Use custom property?<br><br>",
  "quesType": "fill",
  "ans": "var(--name)"
},
{
  "ques": "Flex grow property?<br><br>",
  "quesType": "fill",
  "ans": "flex-grow"
},
{
  "ques": "Flex shrink property?<br><br>",
  "quesType": "fill",
  "ans": "flex-shrink"
},
{
  "ques": "Flex basis property?<br><br>",
  "quesType": "fill",
  "ans": "flex-basis"
},
{
  "ques": "Property for flex order?<br><br>",
  "quesType": "fill",
  "ans": "order"
},
{
  "ques": "Grid template columns?<br><br>",
  "quesType": "fill",
  "ans": "grid-template-columns"
},
{
  "ques": "Grid template rows?<br><br>",
  "quesType": "fill",
  "ans": "grid-template-rows"
},
{
  "ques": "Animation name property?<br><br>",
  "quesType": "fill",
  "ans": "animation-name"
},
{
  "ques": "Animation duration property?<br><br>",
  "quesType": "fill",
  "ans": "animation-duration"
},
{
  "ques": "Animation delay property?<br><br>",
  "quesType": "fill",
  "ans": "animation-delay"
},
{
  "ques": "Correct BEM element syntax?<br><br>",
  "quesType": "fill",
  "ans": "block__element"
},
{
  "ques": "Correct BEM modifier syntax?<br><br>",
  "quesType": "fill",
  "ans": "block__element--modifier"
},
{
  "ques": "At-rule to import CSS?<br><br>",
  "quesType": "fill",
  "ans": "@import"
}
,
{
  "ques": "Which selector matches every element that is the only child?<br><br>",
  "quesType": "mcq",
  "op1": ":only-child",
  "op2": ":first-child",
  "op3": ":last-child",
  "op4": ":nth-child(1)",
  "ans": ":only-child"
},
{
  "ques": "Which pseudo-class selects checked and disabled inputs?<br><br>",
  "quesType": "mcq",
  "op1": ":checked:disabled",
  "op2": ":checked-disabled",
  "op3": ":disabled-checked",
  "op4": ":input-checked-disabled",
  "ans": ":checked:disabled"
},
{
  "ques": "What is output?<br><br>div:not(.active) { display: none; }",
  "quesType": "mcq",
  "op1": "Hides all divs except .active",
  "op2": "Hides .active",
  "op3": "Shows all",
  "op4": "Throws error",
  "ans": "Hides all divs except .active"
},
{
  "ques": "What does position: sticky do?<br><br>",
  "quesType": "mcq",
  "op1": "Fixes when scrolling",
  "op2": "Floats right",
  "op3": "Floats left",
  "op4": "Relative always",
  "ans": "Fixes when scrolling"
},
{
  "ques": "How to transition transform and opacity together?<br><br>",
  "quesType": "mcq",
  "op1": "transition: transform, opacity",
  "op2": "transition: transform opacity",
  "op3": "transition: transform-opacity",
  "op4": "transition: all",
  "ans": "transition: transform, opacity"
},
{
  "ques": "Which sets custom CSS variable?<br><br>",
  "quesType": "mcq",
  "op1": "--main-color",
  "op2": "$main-color",
  "op3": "@main-color",
  "op4": "#main-color",
  "ans": "--main-color"
},
{
  "ques": "What is output?<br><br>body > p { color: red; }",
  "quesType": "mcq",
  "op1": "Direct p children red",
  "op2": "All p red",
  "op3": "First p red",
  "op4": "Last p red",
  "ans": "Direct p children red"
},
{
  "ques": "Which sets grid rows to auto size?<br><br>",
  "quesType": "mcq",
  "op1": "grid-auto-rows",
  "op2": "grid-auto-cols",
  "op3": "auto-rows",
  "op4": "row-auto",
  "ans": "grid-auto-rows"
},
{
  "ques": "What sets backface visibility in 3D transform?<br><br>",
  "quesType": "mcq",
  "op1": "backface-visibility",
  "op2": "transform-origin",
  "op3": "perspective",
  "op4": "transform-style",
  "ans": "backface-visibility"
},
{
  "ques": "What is output?<br><br>div ~ p { color: blue; }",
  "quesType": "mcq",
  "op1": "All p after div blue",
  "op2": "First p after div blue",
  "op3": "All p inside div blue",
  "op4": "No effect",
  "ans": "All p after div blue"
},
{
  "ques": "Which makes z-index work?<br><br>",
  "quesType": "mcq",
  "op1": "position: relative",
  "op2": "float",
  "op3": "overflow",
  "op4": "display: block",
  "ans": "position: relative"
},
{
  "ques": "Which is valid transform function?<br><br>",
  "quesType": "mcq",
  "op1": "rotate(45deg)",
  "op2": "rotate(45px)",
  "op3": "rotate(45%)",
  "op4": "rotate(45em)",
  "ans": "rotate(45deg)"
},
{
  "ques": "What is output?<br><br>li:nth-child(2n) { background: gray; }",
  "quesType": "mcq",
  "op1": "Every even li gray",
  "op2": "Every odd li gray",
  "op3": "First li gray",
  "op4": "All gray",
  "ans": "Every even li gray"
},
{
  "ques": "Which disables pointer events?<br><br>",
  "quesType": "mcq",
  "op1": "pointer-events: none",
  "op2": "user-select: none",
  "op3": "visibility: hidden",
  "op4": "opacity: 0",
  "ans": "pointer-events: none"
},
{
  "ques": "Which sets transform origin?<br><br>",
  "quesType": "mcq",
  "op1": "transform-origin",
  "op2": "transform-base",
  "op3": "origin-transform",
  "op4": "transform-start",
  "ans": "transform-origin"
},
{
  "ques": "Which sets max content width?<br><br>",
  "quesType": "mcq",
  "op1": "max-content",
  "op2": "min-content",
  "op3": "fit-content",
  "op4": "auto",
  "ans": "max-content"
},
{
  "ques": "Which uses variable?<br><br>",
  "quesType": "mcq",
  "op1": "var(--main-color)",
  "op2": "use(--main-color)",
  "op3": "get(--main-color)",
  "op4": "css(--main-color)",
  "ans": "var(--main-color)"
},
{
  "ques": "Which sets element to transform in 3D?<br><br>",
  "quesType": "mcq",
  "op1": "transform-style: preserve-3d",
  "op2": "transform: 3d",
  "op3": "preserve-3d",
  "op4": "style-transform: 3d",
  "ans": "transform-style: preserve-3d"
},
{
  "ques": "Which pseudo-class selects target element?<br><br>",
  "quesType": "mcq",
  "op1": ":target",
  "op2": ":focus",
  "op3": ":visited",
  "op4": ":active",
  "ans": ":target"
},
{
  "ques": "Which sets animation iteration infinite?<br><br>",
  "quesType": "mcq",
  "op1": "animation-iteration-count: infinite",
  "op2": "animation-loop: infinite",
  "op3": "loop: infinite",
  "op4": "animation-repeat: infinite",
  "ans": "animation-iteration-count: infinite"
}
,
{
  "ques": "Selector for only child?<br><br>",
  "quesType": "fill",
  "ans": ":only-child"
},
{
  "ques": "Pseudo for checked input?<br><br>",
  "quesType": "fill",
  "ans": ":checked"
},
{
  "ques": "Property for sticky position?<br><br>",
  "quesType": "fill",
  "ans": "position: sticky"
},
{
  "ques": "Write transform and opacity transition together?<br><br>",
  "quesType": "fill",
  "ans": "transform, opacity"
},
{
  "ques": "Syntax for CSS custom variable?<br><br>",
  "quesType": "fill",
  "ans": "--main-color"
},
{
  "ques": "Select direct p child of body?<br><br>",
  "quesType": "fill",
  "ans": "body > p"
},
{
  "ques": "Property for auto grid rows?<br><br>",
  "quesType": "fill",
  "ans": "grid-auto-rows"
},
{
  "ques": "Hide backface in 3D?<br><br>",
  "quesType": "fill",
  "ans": "backface-visibility"
},
{
  "ques": "Select all p after div?<br><br>",
  "quesType": "fill",
  "ans": "div ~ p"
},
{
  "ques": "What makes z-index work?<br><br>",
  "quesType": "fill",
  "ans": "position"
},
{
  "ques": "Valid transform function?<br><br>",
  "quesType": "fill",
  "ans": "rotate(45deg)"
},
{
  "ques": "Even li selector?<br><br>",
  "quesType": "fill",
  "ans": ":nth-child(2n)"
},
{
  "ques": "Block pointer events?<br><br>",
  "quesType": "fill",
  "ans": "pointer-events: none"
},
{
  "ques": "Property for transform center?<br><br>",
  "quesType": "fill",
  "ans": "transform-origin"
},
{
  "ques": "Max content width keyword?<br><br>",
  "quesType": "fill",
  "ans": "max-content"
},
{
  "ques": "Syntax to use variable?<br><br>",
  "quesType": "fill",
  "ans": "var(--main-color)"
},
{
  "ques": "3D transform style?<br><br>",
  "quesType": "fill",
  "ans": "transform-style: preserve-3d"
},
{
  "ques": "Pseudo for link target?<br><br>",
  "quesType": "fill",
  "ans": ":target"
},
{
  "ques": "Infinite animation iteration?<br><br>",
  "quesType": "fill",
  "ans": "animation-iteration-count: infinite"
},
{
  "ques": "Selector for not active class?<br><br>",
  "quesType": "fill",
  "ans": ":not(.active)"
}
,
{
  "ques": "Which property sets flexible container?<br><br>",
  "quesType": "mcq",
  "op1": "display: flex",
  "op2": "flex-container",
  "op3": "flexbox",
  "op4": "display: box",
  "ans": "display: flex"
},
{
  "ques": "Which property sets flexible direction?<br><br>",
  "quesType": "mcq",
  "op1": "flex-direction",
  "op2": "direction-flex",
  "op3": "flex-flow",
  "op4": "flow-direction",
  "ans": "flex-direction"
},
{
  "ques": "Which property aligns items in flex?<br><br>",
  "quesType": "mcq",
  "op1": "align-items",
  "op2": "items-align",
  "op3": "flex-align",
  "op4": "align",
  "ans": "align-items"
},
{
  "ques": "Which sets space around flex items?<br><br>",
  "quesType": "mcq",
  "op1": "justify-content",
  "op2": "align-content",
  "op3": "space-items",
  "op4": "flex-gap",
  "ans": "justify-content"
},
{
  "ques": "Which property orders flex items?<br><br>",
  "quesType": "mcq",
  "op1": "order",
  "op2": "flex-order",
  "op3": "item-order",
  "op4": "flex-index",
  "ans": "order"
},
{
  "ques": "Which enables CSS Grid?<br><br>",
  "quesType": "mcq",
  "op1": "display: grid",
  "op2": "grid: true",
  "op3": "enable-grid",
  "op4": "display: flex",
  "ans": "display: grid"
},
{
  "ques": "Which sets number of grid columns?<br><br>",
  "quesType": "mcq",
  "op1": "grid-template-columns",
  "op2": "grid-columns",
  "op3": "columns-grid",
  "op4": "grid-columns-template",
  "ans": "grid-template-columns"
},
{
  "ques": "Which sets number of grid rows?<br><br>",
  "quesType": "mcq",
  "op1": "grid-template-rows",
  "op2": "grid-rows",
  "op3": "rows-grid",
  "op4": "grid-rows-template",
  "ans": "grid-template-rows"
},
{
  "ques": "Which aligns grid items horizontally?<br><br>",
  "quesType": "mcq",
  "op1": "justify-items",
  "op2": "align-items",
  "op3": "justify-content",
  "op4": "grid-align",
  "ans": "justify-items"
},
{
  "ques": "Which aligns grid items vertically?<br><br>",
  "quesType": "mcq",
  "op1": "align-items",
  "op2": "justify-items",
  "op3": "grid-align",
  "op4": "align-grid",
  "ans": "align-items"
},
{
  "ques": "Which sets custom CSS variable?<br><br>",
  "quesType": "mcq",
  "op1": "--var",
  "op2": "var()",
  "op3": "define",
  "op4": "css-var",
  "ans": "--var"
},
{
  "ques": "Which function uses custom variable?<br><br>",
  "quesType": "mcq",
  "op1": "var()",
  "op2": "use()",
  "op3": "css()",
  "op4": "--var",
  "ans": "var()"
},
{
  "ques": "Which property uses calculation?<br><br>",
  "quesType": "mcq",
  "op1": "calc()",
  "op2": "calculate",
  "op3": "math()",
  "op4": "compute()",
  "ans": "calc()"
},
{
  "ques": "Which pseudo-class selects empty elements?<br><br>",
  "quesType": "mcq",
  "op1": ":empty",
  "op2": ":blank",
  "op3": ":null",
  "op4": ":void",
  "ans": ":empty"
},
{
  "ques": "Which pseudo-class selects checked inputs?<br><br>",
  "quesType": "mcq",
  "op1": ":checked",
  "op2": ":selected",
  "op3": ":active",
  "op4": ":focus",
  "ans": ":checked"
},
{
  "ques": "Which pseudo-class selects disabled inputs?<br><br>",
  "quesType": "mcq",
  "op1": ":disabled",
  "op2": ":enabled",
  "op3": ":inactive",
  "op4": ":readonly",
  "ans": ":disabled"
},
{
  "ques": "Which sets cursor style?<br><br>",
  "quesType": "mcq",
  "op1": "cursor",
  "op2": "pointer",
  "op3": "cursor-style",
  "op4": "mouse-cursor",
  "ans": "cursor"
},
{
  "ques": "Which sets minimum width?<br><br>",
  "quesType": "mcq",
  "op1": "min-width",
  "op2": "width-min",
  "op3": "minimum-width",
  "op4": "width: min",
  "ans": "min-width"
},
{
  "ques": "Which sets maximum height?<br><br>",
  "quesType": "mcq",
  "op1": "max-height",
  "op2": "height-max",
  "op3": "maximum-height",
  "op4": "height: max",
  "ans": "max-height"
},
{
  "ques": "Which pseudo-class matches invalid input?<br><br>",
  "quesType": "mcq",
  "op1": ":invalid",
  "op2": ":error",
  "op3": ":not-valid",
  "op4": ":wrong",
  "ans": ":invalid"
}
,
{
  "ques": "Property for flex container?<br><br>",
  "quesType": "fill",
  "ans": "display: flex"
},
{
  "ques": "Property for flex direction?<br><br>",
  "quesType": "fill",
  "ans": "flex-direction"
},
{
  "ques": "Property to align flex items?<br><br>",
  "quesType": "fill",
  "ans": "align-items"
},
{
  "ques": "Property to justify flex items?<br><br>",
  "quesType": "fill",
  "ans": "justify-content"
},
{
  "ques": "Property for flex order?<br><br>",
  "quesType": "fill",
  "ans": "order"
},
{
  "ques": "Property for grid container?<br><br>",
  "quesType": "fill",
  "ans": "display: grid"
},
{
  "ques": "Property for grid columns?<br><br>",
  "quesType": "fill",
  "ans": "grid-template-columns"
},
{
  "ques": "Property for grid rows?<br><br>",
  "quesType": "fill",
  "ans": "grid-template-rows"
},
{
  "ques": "Property to justify grid items?<br><br>",
  "quesType": "fill",
  "ans": "justify-items"
},
{
  "ques": "Property to align grid items?<br><br>",
  "quesType": "fill",
  "ans": "align-items"
},
{
  "ques": "Prefix for custom variable?<br><br>",
  "quesType": "fill",
  "ans": "--"
},
{
  "ques": "Function to use CSS variable?<br><br>",
  "quesType": "fill",
  "ans": "var()"
},
{
  "ques": "Function to calculate value?<br><br>",
  "quesType": "fill",
  "ans": "calc()"
},
{
  "ques": "Pseudo-class for empty element?<br><br>",
  "quesType": "fill",
  "ans": ":empty"
},
{
  "ques": "Pseudo-class for checked input?<br><br>",
  "quesType": "fill",
  "ans": ":checked"
},
{
  "ques": "Pseudo-class for disabled input?<br><br>",
  "quesType": "fill",
  "ans": ":disabled"
},
{
  "ques": "Property for cursor?<br><br>",
  "quesType": "fill",
  "ans": "cursor"
},
{
  "ques": "Property for minimum width?<br><br>",
  "quesType": "fill",
  "ans": "min-width"
},
{
  "ques": "Property for maximum height?<br><br>",
  "quesType": "fill",
  "ans": "max-height"
},
{
  "ques": "Pseudo-class for invalid input?<br><br>",
  "quesType": "fill",
  "ans": ":invalid"
}
,
{
  "ques": "Which property makes smooth state change?<br><br>",
  "quesType": "mcq",
  "op1": "transition",
  "op2": "animation",
  "op3": "transform",
  "op4": "keyframes",
  "ans": "transition"
},
{
  "ques": "Which property rotates an element?<br><br>",
  "quesType": "mcq",
  "op1": "transform: rotate()",
  "op2": "transition: rotate()",
  "op3": "animation: rotate()",
  "op4": "rotate: transform()",
  "ans": "transform: rotate()"
},
{
  "ques": "Which property scales an element?<br><br>",
  "quesType": "mcq",
  "op1": "transform: scale()",
  "op2": "scale: transform()",
  "op3": "animation: scale()",
  "op4": "resize: scale()",
  "ans": "transform: scale()"
},
{
  "ques": "Which function combines units?<br><br>",
  "quesType": "mcq",
  "op1": "calc()",
  "op2": "mix()",
  "op3": "combine()",
  "op4": "sum()",
  "ans": "calc()"
},
{
  "ques": "Which sets a min, pref, max value?<br><br>",
  "quesType": "mcq",
  "op1": "clamp()",
  "op2": "minmax()",
  "op3": "calc()",
  "op4": "fit()",
  "ans": "clamp()"
},
{
  "ques": "Which blends element with background?<br><br>",
  "quesType": "mcq",
  "op1": "mix-blend-mode",
  "op2": "background-blend-mode",
  "op3": "blend-mode",
  "op4": "mix-mode",
  "ans": "mix-blend-mode"
},
{
  "ques": "Which adds visual effects like blur?<br><br>",
  "quesType": "mcq",
  "op1": "filter",
  "op2": "mix-blend-mode",
  "op3": "backdrop-filter",
  "op4": "opacity",
  "ans": "filter"
},
{
  "ques": "Which clips element to shape?<br><br>",
  "quesType": "mcq",
  "op1": "clip-path",
  "op2": "shape-path",
  "op3": "mask",
  "op4": "clip-shape",
  "ans": "clip-path"
},
{
  "ques": "Which sets responsive design rules?<br><br>",
  "quesType": "mcq",
  "op1": "@media",
  "op2": "@import",
  "op3": "@keyframes",
  "op4": "@supports",
  "ans": "@media"
},
{
  "ques": "Which checks feature support?<br><br>",
  "quesType": "mcq",
  "op1": "@supports",
  "op2": "@media",
  "op3": "@import",
  "op4": "@feature",
  "ans": "@supports"
},
{
  "ques": "Which sets aspect ratio?<br><br>",
  "quesType": "mcq",
  "op1": "aspect-ratio",
  "op2": "ratio",
  "op3": "box-ratio",
  "op4": "ratio-aspect",
  "ans": "aspect-ratio"
},
{
  "ques": "Which defines grid areas?<br><br>",
  "quesType": "mcq",
  "op1": "grid-template-areas",
  "op2": "grid-areas",
  "op3": "grid-area",
  "op4": "grid-map",
  "ans": "grid-template-areas"
},
{
  "ques": "Which assigns element to grid area?<br><br>",
  "quesType": "mcq",
  "op1": "grid-area",
  "op2": "grid-template-area",
  "op3": "grid-template-areas",
  "op4": "grid-position",
  "ans": "grid-area"
},
{
  "ques": "Which syntax uses nesting?<br><br>",
  "quesType": "mcq",
  "op1": "& selector",
  "op2": "> selector",
  "op3": "~ selector",
  "op4": "+ selector",
  "ans": "& selector"
},
{
  "ques": "Which unit is viewport width?<br><br>",
  "quesType": "mcq",
  "op1": "vw",
  "op2": "vh",
  "op3": "%",
  "op4": "em",
  "ans": "vw"
},
{
  "ques": "Which unit is viewport height?<br><br>",
  "quesType": "mcq",
  "op1": "vh",
  "op2": "vw",
  "op3": "%",
  "op4": "em",
  "ans": "vh"
},
{
  "ques": "Which property rounds corners?<br><br>",
  "quesType": "mcq",
  "op1": "border-radius",
  "op2": "border-curve",
  "op3": "radius-border",
  "op4": "corner-radius",
  "ans": "border-radius"
},
{
  "ques": "Which queries container size?<br><br>",
  "quesType": "mcq",
  "op1": "@container",
  "op2": "@media",
  "op3": "@supports",
  "op4": "@query",
  "ans": "@container"
},
{
  "ques": "Which sets cursor style?<br><br>",
  "quesType": "mcq",
  "op1": "cursor",
  "op2": "pointer",
  "op3": "hover",
  "op4": "click",
  "ans": "cursor"
},
{
  "ques": "Which disables user selection?<br><br>",
  "quesType": "mcq",
  "op1": "user-select: none",
  "op2": "disable-select",
  "op3": "select: none",
  "op4": "pointer-events: none",
  "ans": "user-select: none"
}
,
{
  "ques": "Property for smooth change?<br><br>",
  "quesType": "fill",
  "ans": "transition"
},
{
  "ques": "Property for rotation?<br><br>",
  "quesType": "fill",
  "ans": "transform: rotate()"
},
{
  "ques": "Property for scale?<br><br>",
  "quesType": "fill",
  "ans": "transform: scale()"
},
{
  "ques": "Function to calculate value?<br><br>",
  "quesType": "fill",
  "ans": "calc()"
},
{
  "ques": "Function to clamp value?<br><br>",
  "quesType": "fill",
  "ans": "clamp()"
},
{
  "ques": "Property for blending?<br><br>",
  "quesType": "fill",
  "ans": "mix-blend-mode"
},
{
  "ques": "Property for effects like blur?<br><br>",
  "quesType": "fill",
  "ans": "filter"
},
{
  "ques": "Property to clip shape?<br><br>",
  "quesType": "fill",
  "ans": "clip-path"
},
{
  "ques": "At-rule for responsive?<br><br>",
  "quesType": "fill",
  "ans": "@media"
},
{
  "ques": "At-rule for feature check?<br><br>",
  "quesType": "fill",
  "ans": "@supports"
},
{
  "ques": "Property for aspect ratio?<br><br>",
  "quesType": "fill",
  "ans": "aspect-ratio"
},
{
  "ques": "Property for grid areas?<br><br>",
  "quesType": "fill",
  "ans": "grid-template-areas"
},
{
  "ques": "Property to assign grid area?<br><br>",
  "quesType": "fill",
  "ans": "grid-area"
},
{
  "ques": "Symbol for nesting?<br><br>",
  "quesType": "fill",
  "ans": "&"
},
{
  "ques": "Unit for viewport width?<br><br>",
  "quesType": "fill",
  "ans": "vw"
},
{
  "ques": "Unit for viewport height?<br><br>",
  "quesType": "fill",
  "ans": "vh"
},
{
  "ques": "Property for rounded corners?<br><br>",
  "quesType": "fill",
  "ans": "border-radius"
},
{
  "ques": "At-rule for container query?<br><br>",
  "quesType": "fill",
  "ans": "@container"
},
{
  "ques": "Property for pointer style?<br><br>",
  "quesType": "fill",
  "ans": "cursor"
},
{
  "ques": "Property to disable select?<br><br>",
  "quesType": "fill",
  "ans": "user-select: none"
}
,
{
  "ques": "Which pseudo-class selects the last child?<br><br>",
  "quesType": "mcq",
  "op1": ":last-child",
  "op2": ":first-child",
  "op3": ":only-child",
  "op4": ":nth-last-child",
  "ans": ":last-child"
},
{
  "ques": "Which pseudo-class selects the first letter?<br><br>",
  "quesType": "mcq",
  "op1": "::first-letter",
  "op2": ":first-letter",
  "op3": "::letter",
  "op4": ":letter",
  "ans": "::first-letter"
},
{
  "ques": "What is output?<br><br>div + p { color: green; }",
  "quesType": "mcq",
  "op1": "First p after div green",
  "op2": "All p green",
  "op3": "All div green",
  "op4": "No effect",
  "ans": "First p after div green"
},
{
  "ques": "What does `clamp()` do?<br><br>",
  "quesType": "mcq",
  "op1": "Sets min, ideal, max",
  "op2": "Combines colors",
  "op3": "Hides content",
  "op4": "Loops animations",
  "ans": "Sets min, ideal, max"
},
{
  "ques": "Which property sets 3D perspective?<br><br>",
  "quesType": "mcq",
  "op1": "perspective",
  "op2": "transform",
  "op3": "backface-visibility",
  "op4": "transform-style",
  "ans": "perspective"
},
{
  "ques": "Which pseudo-class targets invalid form fields?<br><br>",
  "quesType": "mcq",
  "op1": ":invalid",
  "op2": ":valid",
  "op3": ":checked",
  "op4": ":optional",
  "ans": ":invalid"
},
{
  "ques": "What is output?<br><br>body:has(nav) { background: #eee; }",
  "quesType": "mcq",
  "op1": "Background gray if nav exists",
  "op2": "Background always gray",
  "op3": "No effect",
  "op4": "Error",
  "ans": "Background gray if nav exists"
},
{
  "ques": "What sets image filter grayscale?<br><br>",
  "quesType": "mcq",
  "op1": "filter: grayscale(100%)",
  "op2": "image-filter: grayscale",
  "op3": "grayscale: filter",
  "op4": "opacity: 0",
  "ans": "filter: grayscale(100%)"
},
{
  "ques": "Which sets blend mode for elements?<br><br>",
  "quesType": "mcq",
  "op1": "mix-blend-mode",
  "op2": "blend-mode",
  "op3": "background-blend",
  "op4": "mix-mode",
  "ans": "mix-blend-mode"
},
{
  "ques": "What is output?<br><br>div::after { content: '✔'; }",
  "quesType": "mcq",
  "op1": "Adds ✔ after div",
  "op2": "Adds ✔ before div",
  "op3": "Hides div",
  "op4": "No effect",
  "ans": "Adds ✔ after div"
},
{
  "ques": "Which allows relative sizing?<br><br>",
  "quesType": "mcq",
  "op1": "calc()",
  "op2": "fit()",
  "op3": "size()",
  "op4": "scale()",
  "ans": "calc()"
},
{
  "ques": "What is output?<br><br>div:empty { display: none; }",
  "quesType": "mcq",
  "op1": "Hides empty div",
  "op2": "Shows empty div",
  "op3": "Hides all divs",
  "op4": "No effect",
  "ans": "Hides empty div"
},
{
  "ques": "Which pseudo-class targets optional input?<br><br>",
  "quesType": "mcq",
  "op1": ":optional",
  "op2": ":required",
  "op3": ":valid",
  "op4": ":focus",
  "ans": ":optional"
},
{
  "ques": "What sets transform with matrix?<br><br>",
  "quesType": "mcq",
  "op1": "transform: matrix()",
  "op2": "transform: calc()",
  "op3": "matrix-transform()",
  "op4": "matrix-style",
  "ans": "transform: matrix()"
},
{
  "ques": "Which sets element order in Flexbox?<br><br>",
  "quesType": "mcq",
  "op1": "order",
  "op2": "z-index",
  "op3": "layer",
  "op4": "sequence",
  "ans": "order"
},
{
  "ques": "What sets z-index stacking context?<br><br>",
  "quesType": "mcq",
  "op1": "position other than static",
  "op2": "float",
  "op3": "opacity",
  "op4": "overflow",
  "ans": "position other than static"
},


]

let cssIncorrectAnswers = [];

let cssTimerId = "";
let cssSkip = document.getElementById("cssSkip");
let codingcssQues = document.getElementById("codingcssQues");
let mcqcss = document.getElementById("mcqcss");
let cssQuestionNumber = document.getElementById("cssQuestionNumber");
let cssQuestionCount = 2;
let cssScore = 0;
let cssScoreDisplay = document.getElementById("cssScoreDisplay");
let cssScoreShow = document.getElementById("cssScoreShow");
let cssSkip2 = document.getElementById("cssSkip2");

let cssFillAns = document.getElementById("cssFillAns");
let cssStatus1 = document.getElementById("cssStatus1");
let cssStatus2 = document.getElementById("cssStatus2");
let cssStatus3 = document.getElementById("cssStatus3");
let cssCheckFill = document.getElementById("cssCheckFill");

let codingResultcss = document.getElementById("codingResultcss");

let cssIncorrectAnswersDisplay = document.getElementById("cssIncorrectAnswersDisplay");
let cssScoreBelow70 = document.getElementById("cssScoreBelow70");
let cssScore100 = document.getElementById("cssScore100");

let cssResult1 = document.getElementById("cssResult1");
let cssResult2 = document.getElementById("cssResult2");
let cssResult3 = document.getElementById("cssResult3");
let cssResult4 = document.getElementById("cssResult4");
let cssResult5 = document.getElementById("cssResult5");
let cssBg1 = document.getElementById("cssBg1");


function codingcssStart(){
  codingcssHide.classList.add("d-none");
codingcssShow.classList.remove("d-none");

let fillBlankcss = document.getElementById("fillBlankcss");
let op1css = document.getElementById("op1css");
let op2css = document.getElementById("op2css");
let op3css = document.getElementById("op3css");
let op4css = document.getElementById("op4css");

let cssFillAns = document.getElementById("cssFillAns");
let cssStatus1 = document.getElementById("cssStatus1");
let cssStatus2 = document.getElementById("cssStatus2");
let cssStatus3 = document.getElementById("cssStatus3");
let cssCheckFill = document.getElementById("cssCheckFill");

cssFillAns.disabled = false;
cssStatus1.classList.remove("d-none");
cssStatus2.classList.add("d-none");
cssStatus3.classList.add("d-none");
cssFillAns.value = "";
cssSkip2.textContent = "Skip";
cssSkip2.style.backgroundColor = "orange";
cssSkip2.style.borderColor = "orange";

cssSkip.textContent = "Skip";
cssSkip.style.backgroundColor = "orange";
cssSkip.style.borderColor = "orange";
cssScoreShow.textContent = "";
cssTimer.style.color = "black";

if (cssLevel === 1) {
  let cssRandom = Math.floor(Math.random() * codingcss1Arr.length);
  let y = codingcss1Arr[cssRandom];
  cssTimer.textContent = "20";
  cssTime = 20;

  cssTimerId = setInterval(function () {
    cssTime = cssTime - 1;
    if (cssTime == 0) {
      clearInterval(cssTimerId);
      cssQuestionNumber.textContent = "Question:" + cssQuestionCount + "/10";
      cssQuestionCount = cssQuestionCount + 1;
      cssTime = 20;
      codingcssStart();
    }
    if (cssTime <= 5) {
      cssTimer.style.color = "red";
      cssTimer.textContent = cssTime;
    } else {
      cssTimer.textContent = cssTime;
    }
  }, 1000);

  if (cssQuestionCount == 12) {
    clearInterval(cssTimerId);
    mcqcss.classList.add("d-none");
    document.getElementById("cssScoreEnd").textContent = cssScoreDisplay.textContent;
    fillBlankcss.classList.add("d-none");
    codingcssShow.classList.add("d-none");
    codingResultcss.classList.remove("d-none");

    if (cssScore < 70) {
      cssScoreBelow70.classList.remove("d-none");
      cssScore100.classList.add("d-none");
      sectionCodingcss.classList.add("back15");

      cssResult1.textContent = "Test finished!!";
      cssResult2.textContent = "😓 Oops! Not quite right.";
      cssResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      cssResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      cssIncorrectAnswersDisplay.appendChild(h2);

      for (let z of cssIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        cssIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (cssScore < 100) {
      cssScoreBelow70.classList.remove("d-none");
      cssScore100.classList.add("d-none");
      sectionCodingcss.classList.add("back15");

      cssResult1.textContent = "Test finished!!";
      cssResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      cssResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      cssResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      cssIncorrectAnswersDisplay.appendChild(h2);

      for (let z of cssIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        cssIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (cssScore === 100) {
      document.getElementById("sectionCodingcss").classList.add("back14");
      cssScore100.classList.remove("d-none");
      cssScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqcss.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingcssQues.innerHTML = formattedQuestion;

    fillBlankcss.classList.add("d-none");
    op1css.textContent = y.op1;
    op2css.textContent = y.op2;
    op3css.textContent = y.op3;
    op4css.textContent = y.op4;

    const allOps = [op1css, op2css, op3css, op4css];
    allOps.forEach((op, i) => {
      op.onclick = function () {
        allOps.forEach(o => (o.disabled = true));
        clearInterval(cssTimerId);
        cssTime = 20;

        if (op.textContent === y.ans) {
          op.style.backgroundColor = "green";
          cssScore += 10;
          cssScoreShow.textContent = "+10";
          cssScoreShow.style.color = "green";
        } else {
          op.style.backgroundColor = "red";
          cssScore -= 5;
          cssScoreShow.textContent = "-5";
          cssScoreShow.style.color = "red";
          let wrong_answer = { ques: y.ques, correct: y.ans, wrong: op.textContent };
          cssIncorrectAnswers.push(wrong_answer);
        }

        cssScoreDisplay.textContent = "Score: " + cssScore + "/100";

        cssSkip.textContent = "Next";
        cssSkip.style.backgroundColor = "#23ebdd";
        cssSkip.style.borderColor = "#23ebdd";

        cssSkip.onclick = function () {
          cssQuestionNumber.textContent = "Question:" + cssQuestionCount + "/10";
          cssQuestionCount += 1;
          allOps.forEach(o => {
            o.disabled = false;
            o.style.backgroundColor = "white";
          });
          codingcssStart();
        };
      };
    });

    cssSkip.onclick = function () {
      clearInterval(cssTimerId);
      cssTime = 20;
      cssQuestionNumber.textContent = "Question:" + cssQuestionCount + "/10";
      cssQuestionCount += 1;
      allOps.forEach(o => {
        o.disabled = false;
        o.style.backgroundColor = "white";
      });
      let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
      cssIncorrectAnswers.push(wrong_answer);
      codingcssStart();
    };
  } 
  else {
    mcqcss.classList.add("d-none");
    fillBlankcss.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingcssQues.innerHTML = formattedQuestion;

    cssCheckFill.onclick = function () {
      clearInterval(cssTimerId);
      cssCheckFill.disabled = false;
      cssSkip2.textContent = "Next";
      cssSkip2.style.backgroundColor = "#23ebdd";
      cssSkip2.style.borderColor = "#23ebdd";
      cssFillAns.disabled = true;

      if (cssFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        cssStatus1.classList.add("d-none");
        cssStatus2.classList.remove("d-none");

        cssScore += 10;
        cssScoreShow.textContent = "+10";
        cssScoreShow.style.color = "green";
      } else {
        cssStatus1.classList.add("d-none");
        cssStatus3.classList.remove("d-none");

        cssScore -= 5;
        cssScoreShow.textContent = "-5";
        cssScoreShow.style.color = "red";

        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: cssFillAns.value };
        cssIncorrectAnswers.push(wrong_answer);
      }

      cssScoreDisplay.textContent = "Score: " + cssScore + "/100";
    };

    cssSkip2.onclick = function () {
      if (cssFillAns.value === "") {
        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
        cssIncorrectAnswers.push(wrong_answer);
      }
      clearInterval(cssTimerId);
      cssTime = 20;
      cssQuestionNumber.textContent = "Question:" + cssQuestionCount + "/10";
      cssQuestionCount += 1;
      codingcssStart();
    };
  }
}
else if (cssLevel === 2) {
  let cssRandom = Math.floor(Math.random() * codingcss2Arr.length);
  let y = codingcss2Arr[cssRandom];
  cssTimer.textContent = "25";
  cssTime = 25;

  cssTimerId = setInterval(function () {
    cssTime = cssTime - 1;
    if (cssTime == 0) {
      clearInterval(cssTimerId);
      cssQuestionNumber.textContent = "Question:" + cssQuestionCount + "/10";
      cssQuestionCount = cssQuestionCount + 1;
      cssTime = 25;
      codingcssStart();
    }
    if (cssTime <= 5) {
      cssTimer.style.color = "red";
      cssTimer.textContent = cssTime;
    } else {
      cssTimer.textContent = cssTime;
    }
  }, 1000);

  if (cssQuestionCount == 12) {
    clearInterval(cssTimerId);
    mcqcss.classList.add("d-none");
    document.getElementById("cssScoreEnd").textContent = cssScoreDisplay.textContent;
    fillBlankcss.classList.add("d-none");
    codingcssShow.classList.add("d-none");
    codingResultcss.classList.remove("d-none");

    if (cssScore < 70) {
      cssScoreBelow70.classList.remove("d-none");
      cssScore100.classList.add("d-none");
      sectionCodingcss.classList.add("back15");

      cssResult1.textContent = "Test finished!!";
      cssResult2.textContent = "😓 Oops! Not quite right.";
      cssResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      cssResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      cssIncorrectAnswersDisplay.appendChild(h2);

      for (let z of cssIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        cssIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (cssScore < 100) {
      cssScoreBelow70.classList.remove("d-none");
      cssScore100.classList.add("d-none");
      sectionCodingcss.classList.add("back15");

      cssResult1.textContent = "Test finished!!";
      cssResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      cssResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      cssResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      cssIncorrectAnswersDisplay.appendChild(h2);

      for (let z of cssIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        cssIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (cssScore === 100) {
      document.getElementById("sectionCodingcss").classList.add("back14");
      cssScore100.classList.remove("d-none");
      cssScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqcss.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingcssQues.innerHTML = formattedQuestion;
    fillBlankcss.classList.add("d-none");
    op1css.textContent = y.op1;
    op2css.textContent = y.op2;
    op3css.textContent = y.op3;
    op4css.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(cssTimerId);
      cssTime = 25;
      cssSkip.textContent = "Next";
      cssSkip.style.backgroundColor = "#23ebdd";
      cssSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        cssScore += 10;
        cssScoreShow.textContent = "+10";
        cssScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        cssScore -= 5;
        cssScoreShow.textContent = "-5";
        cssScoreShow.style.color = "red";
        cssIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      cssScoreDisplay.textContent = "Score: " + cssScore + "/100";
    }

    op1css.onclick = () => handleOptionClick(op1css, [op2css, op3css, op4css]);
    op2css.onclick = () => handleOptionClick(op2css, [op1css, op3css, op4css]);
    op3css.onclick = () => handleOptionClick(op3css, [op1css, op2css, op4css]);
    op4css.onclick = () => handleOptionClick(op4css, [op1css, op2css, op3css]);

    cssSkip.onclick = function () {
      clearInterval(cssTimerId);
      cssTime = 25;
      cssQuestionNumber.textContent = "Question:" + cssQuestionCount + "/10";
      cssQuestionCount++;
      [op1css, op2css, op3css, op4css].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      cssIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingcssStart();
    };
  }
  else {
    mcqcss.classList.add("d-none");
    fillBlankcss.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingcssQues.innerHTML = formattedQuestion;

    cssCheckFill.disabled = false;
    cssFillAns.disabled = false;
    cssFillAns.value = "";
    cssStatus1.classList.remove("d-none");
    cssStatus2.classList.add("d-none");
    cssStatus3.classList.add("d-none");
    cssScoreShow.textContent = "";

    cssCheckFill.onclick = function () {
      clearInterval(cssTimerId);
      cssCheckFill.disabled = true;
      cssSkip2.textContent = "Next";
      cssSkip2.style.backgroundColor = "#23ebdd";
      cssSkip2.style.borderColor = "#23ebdd";
      cssFillAns.disabled = true;

      if (cssFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        cssStatus1.classList.add("d-none");
        cssStatus2.classList.remove("d-none");
        cssScore += 10;
        cssScoreShow.textContent = "+10";
        cssScoreShow.style.color = "green";
      } else {
        cssStatus1.classList.add("d-none");
        cssStatus3.classList.remove("d-none");
        cssScore -= 5;
        cssScoreShow.textContent = "-5";
        cssScoreShow.style.color = "red";
        cssIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: cssFillAns.value });
      }
      cssScoreDisplay.textContent = "Score: " + cssScore + "/100";
    };

    cssSkip2.onclick = function () {
      if (cssFillAns.value === "") {
        cssIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      }
      clearInterval(cssTimerId);
      cssTime = 25;
      cssQuestionNumber.textContent = "Question:" + cssQuestionCount + "/10";
      cssQuestionCount++;
      codingcssStart();
    };
  }
}
else if (cssLevel === 3) {
  let cssRandom = Math.floor(Math.random() * codingcss3Arr.length);
  let y = codingcss3Arr[cssRandom];
  cssTimer.textContent = "30";
  cssTime = 30;

  cssTimerId = setInterval(function () {
    cssTime = cssTime - 1;
    if (cssTime == 0) {
      clearInterval(cssTimerId);
      cssQuestionNumber.textContent = "Question:" + cssQuestionCount + "/10";
      cssQuestionCount = cssQuestionCount + 1;
      cssTime = 30;
      codingcssStart();
    }
    if (cssTime <= 5) {
      cssTimer.style.color = "red";
      cssTimer.textContent = cssTime;
    } else {
      cssTimer.textContent = cssTime;
    }
  }, 1000);

  if (cssQuestionCount == 12) {
    clearInterval(cssTimerId);
    mcqcss.classList.add("d-none");
    document.getElementById("cssScoreEnd").textContent = cssScoreDisplay.textContent;
    fillBlankcss.classList.add("d-none");
    codingcssShow.classList.add("d-none");
    codingResultcss.classList.remove("d-none");

    if (cssScore < 70) {
      cssScoreBelow70.classList.remove("d-none");
      cssScore100.classList.add("d-none");
      sectionCodingcss.classList.add("back15");

      cssResult1.textContent = "Test finished!!";
      cssResult2.textContent = "😓 Oops! Not quite right.";
      cssResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      cssResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      cssIncorrectAnswersDisplay.appendChild(h2);

      for (let z of cssIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        cssIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (cssScore < 100) {
      cssScoreBelow70.classList.remove("d-none");
      cssScore100.classList.add("d-none");
      sectionCodingcss.classList.add("back15");

      cssResult1.textContent = "Test finished!!";
      cssResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      cssResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      cssResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      cssIncorrectAnswersDisplay.appendChild(h2);

      for (let z of cssIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        cssIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (cssScore === 100) {
      document.getElementById("sectionCodingcss").classList.add("back14");
      cssScore100.classList.remove("d-none");
      cssScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqcss.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingcssQues.innerHTML = formattedQuestion;
    fillBlankcss.classList.add("d-none");
    op1css.textContent = y.op1;
    op2css.textContent = y.op2;
    op3css.textContent = y.op3;
    op4css.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(cssTimerId);
      cssTime = 30;
      cssSkip.textContent = "Next";
      cssSkip.style.backgroundColor = "#23ebdd";
      cssSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        cssScore += 10;
        cssScoreShow.textContent = "+10";
        cssScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        cssScore -= 5;
        cssScoreShow.textContent = "-5";
        cssScoreShow.style.color = "red";
        cssIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      cssScoreDisplay.textContent = "Score: " + cssScore + "/100";
    }

    op1css.onclick = () => handleOptionClick(op1css, [op2css, op3css, op4css]);
    op2css.onclick = () => handleOptionClick(op2css, [op1css, op3css, op4css]);
    op3css.onclick = () => handleOptionClick(op3css, [op1css, op2css, op4css]);
    op4css.onclick = () => handleOptionClick(op4css, [op1css, op2css, op3css]);

    cssSkip.onclick = function () {
      clearInterval(cssTimerId);
      cssTime = 30;
      cssQuestionNumber.textContent = "Question:" + cssQuestionCount + "/10";
      cssQuestionCount++;
      [op1css, op2css, op3css, op4css].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      cssIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingcssStart();
    };
  }
  else {
    mcqcss.classList.add("d-none");
    fillBlankcss.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingcssQues.innerHTML = formattedQuestion;

    cssCheckFill.disabled = false;
    cssFillAns.disabled = false;
    cssFillAns.value = "";
    cssStatus1.classList.remove("d-none");
    cssStatus2.classList.add("d-none");
    cssStatus3.classList.add("d-none");
    cssScoreShow.textContent = "";

    cssCheckFill.onclick = function () {
      clearInterval(cssTimerId);
      cssCheckFill.disabled = true;
      cssSkip2.textContent = "Next";
      cssSkip2.style.backgroundColor = "#23ebdd";
      cssSkip2.style.borderColor = "#23ebdd";
      cssFillAns.disabled = true;

      if (cssFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        cssStatus1.classList.add("d-none");
        cssStatus2.classList.remove("d-none");
        cssScore += 10;
        cssScoreShow.textContent = "+10";
        cssScoreShow.style.color = "green";
      } else {
        cssStatus1.classList.add("d-none");
        cssStatus3.classList.remove("d-none");
        cssScore -= 5;
        cssScoreShow.textContent = "-5";
        cssScoreShow.style.color = "red";
        cssIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: cssFillAns.value });
      }
      cssScoreDisplay.textContent = "Score: " + cssScore + "/100";
    };

    cssSkip2.onclick = function () {
      if (cssFillAns.value === "") {
        cssIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      }
      clearInterval(cssTimerId);
      cssTime = 30;
      cssQuestionNumber.textContent = "Question:" + cssQuestionCount + "/10";
      cssQuestionCount++;
      codingcssStart();
    };
  }
}



}

function resetCodingcss() {
  document.getElementById("codingcssShow").classList.add("d-none");
  document.getElementById("codingResultcss").classList.add("d-none");
  document.getElementById("codingcssHide").classList.remove("d-none");

  document.getElementById("cssQuestionNumber").innerText = "Question: 1/10";
  document.getElementById("cssScoreDisplay").innerText = "Score: 0/100";
  document.getElementById("cssScoreShow").innerText = "";
  document.getElementById("cssTimer").innerText = "00";
  document.getElementById("codingcssQues").innerText = "";

  document.getElementById("op1css").innerText = "option1";
  document.getElementById("op2css").innerText = "option2";
  document.getElementById("op3css").innerText = "option3";
  document.getElementById("op4css").innerText = "option4";

  cssIncorrectAnswers = [];
  document.getElementById("cssIncorrectAnswersDisplay").innerHTML = "";

  cssScore100.classList.add("d-none");
  cssScoreBelow70.classList.add("d-none");

  cssResult1.textContent = "";
  cssResult2.textContent = "";
  cssResult3.src = "";
  cssResult4.textContent = "";

  sectionCodingcss.classList.remove("back14");
  sectionCodingcss.classList.remove("back15");

  document.getElementById("cssFillAns").value = "";
  document.getElementById("fillBlankcss").style.display = "none";
  document.getElementById("mcqcss").style.display = "block";

  document.getElementById("cssStatus1").classList.remove("d-none");
  document.getElementById("cssStatus2").classList.add("d-none");
  document.getElementById("cssStatus3").classList.add("d-none");

  if (typeof cssTimerId !== "undefined") {
    clearInterval(cssTimerId);
  }
  cssTime = 20;
  cssQuestionCount = 2;
  cssScore = 0;
}

function cssResetLevel() {
  cssButton1.disabled = false;
  cssButton2.disabled = false;
  cssButton3.disabled = false;
  cssButton.classList.add("d-none");
  cssIncorrectAnswers = [];
}

//  js

let jsButton = document.getElementById("jsButton");
let jsButton1 = document.getElementById("jsButton1");
let jsButton2 = document.getElementById("jsButton2");
let jsButton3 = document.getElementById("jsButton3");
let jsLevel = 0;
let jsCodingTest = document.getElementById("jsCodingTest");
let jsTimer = document.getElementById("jsTimer");

jsButton1.onclick = function () {
  jsButton2.disabled = true;
  jsButton3.disabled = true;
  jsLevel = 1;

  jsButton.classList.remove("d-none");
  jsButton.classList.add("d-block");
};

jsButton2.onclick = function () {
  jsButton1.disabled = true;
  jsButton3.disabled = true;
  jsLevel = 2;

  jsButton.classList.remove("d-none");
  jsButton.classList.add("d-block");
};

jsButton3.onclick = function () {
  jsButton2.disabled = true;
  jsButton1.disabled = true;
  jsLevel = 3;

  jsButton.classList.remove("d-none");
  jsButton.classList.add("d-block");
};

let jsTime = 0;

let codingjsShow = document.getElementById("codingjsShow");
let codingjsHide = document.getElementById("codingjsHide");
let codingjsBack = document.getElementById("codingjsBack");

codingjsBack.onclick = function () {
  codingjsShow.classList.add("d-none");
  codingjsHide.classList.remove("d-none");
};


let codingjs1Arr=[
  {
  "ques": "Which keyword declares a variable?<br><br>",
  "quesType": "mcq",
  "op1": "var",
  "op2": "int",
  "op3": "define",
  "op4": "letvar",
  "ans": "var"
},
{
  "ques": "Which symbol ends a statement?<br><br>",
  "quesType": "mcq",
  "op1": ";",
  "op2": ":",
  "op3": ".",
  "op4": ",",
  "ans": ";"
},
{
  "ques": "How to write a comment?<br><br>",
  "quesType": "mcq",
  "op1": "// comment",
  "op2": "## comment",
  "op3": "<!-- comment -->",
  "op4": "** comment **",
  "ans": "// comment"
},
{
  "ques": "Which is a correct variable name?<br><br>",
  "quesType": "mcq",
  "op1": "1name",
  "op2": "_name",
  "op3": "-name",
  "op4": ".name",
  "ans": "_name"
},
{
  "ques": "Which operator is for strict equality?<br><br>",
  "quesType": "mcq",
  "op1": "==",
  "op2": "===",
  "op3": "!=",
  "op4": "=",
  "ans": "==="
},
{
  "ques": "Which is a JavaScript data type?<br><br>",
  "quesType": "mcq",
  "op1": "Number",
  "op2": "Digit",
  "op3": "Char",
  "op4": "Decimal",
  "ans": "Number"
},
{
  "ques": "How to declare a function?<br><br>",
  "quesType": "mcq",
  "op1": "function myFunc()",
  "op2": "func myFunc()",
  "op3": "def myFunc()",
  "op4": "fun myFunc()",
  "ans": "function myFunc()"
},
{
  "ques": "Which executes code repeatedly?<br><br>",
  "quesType": "mcq",
  "op1": "loop",
  "op2": "if",
  "op3": "for",
  "op4": "switch",
  "ans": "for"
},
{
  "ques": "Which shows output in console?<br><br>",
  "quesType": "mcq",
  "op1": "print()",
  "op2": "echo()",
  "op3": "console.log()",
  "op4": "write()",
  "ans": "console.log()"
},
{
  "ques": "How to get user input?<br><br>",
  "quesType": "mcq",
  "op1": "input()",
  "op2": "prompt()",
  "op3": "scanf()",
  "op4": "get()",
  "ans": "prompt()"
},
{
  "ques": "Which is boolean value?<br><br>",
  "quesType": "mcq",
  "op1": "yes",
  "op2": "on",
  "op3": "true",
  "op4": "ok",
  "ans": "true"
},
{
  "ques": "How to write an array?<br><br>",
  "quesType": "mcq",
  "op1": "{1,2,3}",
  "op2": "(1,2,3)",
  "op3": "[1,2,3]",
  "op4": "<1,2,3>",
  "ans": "[1,2,3]"
},
{
  "ques": "Which joins strings?<br><br>",
  "quesType": "mcq",
  "op1": "+",
  "op2": "*",
  "op3": "&",
  "op4": "#",
  "ans": "+"
},
{
  "ques": "Which starts conditional block?<br><br>",
  "quesType": "mcq",
  "op1": "switch",
  "op2": "loop",
  "op3": "if",
  "op4": "for",
  "ans": "if"
},
{
  "ques": "Which is a loop?<br><br>",
  "quesType": "mcq",
  "op1": "while",
  "op2": "if",
  "op3": "switch",
  "op4": "case",
  "ans": "while"
},
{
  "ques": "Which stops loop?<br><br>",
  "quesType": "mcq",
  "op1": "stop",
  "op2": "return",
  "op3": "break",
  "op4": "exit",
  "ans": "break"
},
{
  "ques": "Which checks condition?<br><br>",
  "quesType": "mcq",
  "op1": "when",
  "op2": "where",
  "op3": "if",
  "op4": "how",
  "ans": "if"
},
{
  "ques": "How to make alert box?<br><br>",
  "quesType": "mcq",
  "op1": "show()",
  "op2": "alert()",
  "op3": "display()",
  "op4": "popup()",
  "ans": "alert()"
},
{
  "ques": "Which checks type?<br><br>",
  "quesType": "mcq",
  "op1": "typeof",
  "op2": "typeis",
  "op3": "istype",
  "op4": "gettype",
  "ans": "typeof"
},
{
  "ques": "Which returns length?<br><br>",
  "quesType": "mcq",
  "op1": "size",
  "op2": "len",
  "op3": "length",
  "op4": "count",
  "ans": "length"
}
,
{
  "ques": "Keyword for variable?<br><br>",
  "quesType": "fill",
  "ans": "var"
},
{
  "ques": "Ends statement symbol?<br><br>",
  "quesType": "fill",
  "ans": ";"
},
{
  "ques": "Single line comment?<br><br>",
  "quesType": "fill",
  "ans": "//"
},
{
  "ques": "Strict equality operator?<br><br>",
  "quesType": "fill",
  "ans": "==="
},
{
  "ques": "Declare function keyword?<br><br>",
  "quesType": "fill",
  "ans": "function"
},
{
  "ques": "Loop keyword?<br><br>",
  "quesType": "fill",
  "ans": "for"
},
{
  "ques": "Output to console?<br><br>",
  "quesType": "fill",
  "ans": "console.log"
},
{
  "ques": "User input method?<br><br>",
  "quesType": "fill",
  "ans": "prompt"
},
{
  "ques": "True/false type?<br><br>",
  "quesType": "fill",
  "ans": "boolean"
},
{
  "ques": "Array brackets?<br><br>",
  "quesType": "fill",
  "ans": "[]"
},
{
  "ques": "String join operator?<br><br>",
  "quesType": "fill",
  "ans": "+"
},
{
  "ques": "Condition keyword?<br><br>",
  "quesType": "fill",
  "ans": "if"
},
{
  "ques": "Loop keyword?<br><br>",
  "quesType": "fill",
  "ans": "while"
},
{
  "ques": "Stop loop keyword?<br><br>",
  "quesType": "fill",
  "ans": "break"
},
{
  "ques": "Show alert?<br><br>",
  "quesType": "fill",
  "ans": "alert"
},
{
  "ques": "Check type keyword?<br><br>",
  "quesType": "fill",
  "ans": "typeof"
},
{
  "ques": "Length property?<br><br>",
  "quesType": "fill",
  "ans": "length"
},
{
  "ques": "Else keyword?<br><br>",
  "quesType": "fill",
  "ans": "else"
},
{
  "ques": "Logical AND?<br><br>",
  "quesType": "fill",
  "ans": "&&"
},
{
  "ques": "Logical OR?<br><br>",
  "quesType": "fill",
  "ans": "||"
}
,
{
  "ques": "Keyword to declare constant?<br><br>",
  "quesType": "fill",
  "ans": "const"
},
{
  "ques": "Keyword to declare block scope variable?<br><br>",
  "quesType": "fill",
  "ans": "let"
},
{
  "ques": "Global object in browser?<br><br>",
  "quesType": "fill",
  "ans": "window"
},
{
  "ques": "Convert string to number?<br><br>",
  "quesType": "fill",
  "ans": "parseInt()"
},
{
  "ques": "Convert to JSON string?<br><br>",
  "quesType": "fill",
  "ans": "JSON.stringify()"
},
{
  "ques": "Parse JSON string?<br><br>",
  "quesType": "fill",
  "ans": "JSON.parse()"
},
{
  "ques": "Print to console?<br><br>",
  "quesType": "fill",
  "ans": "console.log()"
},
{
  "ques": "Keyword to exit loop?<br><br>",
  "quesType": "fill",
  "ans": "break"
},
{
  "ques": "Default function return?<br><br>",
  "quesType": "fill",
  "ans": "undefined"
},
{
  "ques": "Check equality & type?<br><br>",
  "quesType": "fill",
  "ans": "==="
},
{
  "ques": "Array first index?<br><br>",
  "quesType": "fill",
  "ans": "0"
},
{
  "ques": "Loop type for array?<br><br>",
  "quesType": "fill",
  "ans": "for"
},
{
  "ques": "Convert number to string?<br><br>",
  "quesType": "fill",
  "ans": "toString()"
},
{
  "ques": "Function with no name?<br><br>",
  "quesType": "fill",
  "ans": "anonymous function"
},
{
  "ques": "Combine arrays?<br><br>",
  "quesType": "fill",
  "ans": "concat()"
},
{
  "ques": "Method to add to end?<br><br>",
  "quesType": "fill",
  "ans": "push()"
},
{
  "ques": "Method to remove last item?<br><br>",
  "quesType": "fill",
  "ans": "pop()"
},
{
  "ques": "Checks if value is NaN?<br><br>",
  "quesType": "fill",
  "ans": "isNaN()"
},
{
  "ques": "Calls a function after delay?<br><br>",
  "quesType": "fill",
  "ans": "setTimeout()"
},
{
  "ques": "Keyword for false branch?<br><br>",
  "quesType": "fill",
  "ans": "else"
}

,
{
  "ques": "Which declares block scope variable?<br><br>",
  "quesType": "mcq",
  "op1": "let",
  "op2": "var",
  "op3": "global",
  "op4": "static",
  "ans": "let"
},
{
  "ques": "Which is JSON method?<br><br>",
  "quesType": "mcq",
  "op1": "JSON.stringify()",
  "op2": "JSON.create()",
  "op3": "JSON.make()",
  "op4": "JSON.toString()",
  "ans": "JSON.stringify()"
},
{
  "ques": "What is output?<br><br>console.log(typeof true);",
  "quesType": "mcq",
  "op1": "boolean",
  "op2": "string",
  "op3": "object",
  "op4": "number",
  "ans": "boolean"
},
{
  "ques": "Which stops loop?<br><br>",
  "quesType": "mcq",
  "op1": "break",
  "op2": "stop",
  "op3": "exit",
  "op4": "end",
  "ans": "break"
},
{
  "ques": "What is output?<br><br>console.log(1 == '1');",
  "quesType": "mcq",
  "op1": "true",
  "op2": "false",
  "op3": "NaN",
  "op4": "undefined",
  "ans": "true"
},
{
  "ques": "Which method joins arrays?<br><br>",
  "quesType": "mcq",
  "op1": "concat()",
  "op2": "merge()",
  "op3": "join()",
  "op4": "combine()",
  "ans": "concat()"
},
{
  "ques": "Which method adds item at end?<br><br>",
  "quesType": "mcq",
  "op1": "push()",
  "op2": "append()",
  "op3": "insert()",
  "op4": "add()",
  "ans": "push()"
},
{
  "ques": "Which method removes last item?<br><br>",
  "quesType": "mcq",
  "op1": "pop()",
  "op2": "shift()",
  "op3": "splice()",
  "op4": "delete()",
  "ans": "pop()"
},
{
  "ques": "What is output?<br><br>console.log(5 + '5');",
  "quesType": "mcq",
  "op1": "'55'",
  "op2": "10",
  "op3": "NaN",
  "op4": "undefined",
  "ans": "'55'"
},
{
  "ques": "Which converts string to number?<br><br>",
  "quesType": "mcq",
  "op1": "parseInt()",
  "op2": "toNumber()",
  "op3": "convert()",
  "op4": "stringToNumber()",
  "ans": "parseInt()"
},
{
  "ques": "Which converts number to string?<br><br>",
  "quesType": "mcq",
  "op1": "toString()",
  "op2": "string()",
  "op3": "String()",
  "op4": "numString()",
  "ans": "toString()"
},
{
  "ques": "Which method checks NaN?<br><br>",
  "quesType": "mcq",
  "op1": "isNaN()",
  "op2": "NaN()",
  "op3": "checkNaN()",
  "op4": "NaNcheck()",
  "ans": "isNaN()"
},
{
  "ques": "Which sets timer?<br><br>",
  "quesType": "mcq",
  "op1": "setTimeout()",
  "op2": "setTimer()",
  "op3": "delay()",
  "op4": "pause()",
  "ans": "setTimeout()"
},
{
  "ques": "Which is keyword for constant?<br><br>",
  "quesType": "mcq",
  "op1": "const",
  "op2": "let",
  "op3": "var",
  "op4": "fix",
  "ans": "const"
},
{
  "ques": "What is output?<br><br>typeof undefined",
  "quesType": "mcq",
  "op1": "undefined",
  "op2": "null",
  "op3": "NaN",
  "op4": "object",
  "ans": "undefined"
},
{
  "ques": "Which is correct for else?<br><br>",
  "quesType": "mcq",
  "op1": "else",
  "op2": "elseif",
  "op3": "or",
  "op4": "otherwise",
  "ans": "else"
},
{
  "ques": "What is output?<br><br>console.log([] == false);",
  "quesType": "mcq",
  "op1": "true",
  "op2": "false",
  "op3": "undefined",
  "op4": "NaN",
  "ans": "true"
},
{
  "ques": "Which is type for 0?<br><br>",
  "quesType": "mcq",
  "op1": "number",
  "op2": "string",
  "op3": "boolean",
  "op4": "object",
  "ans": "number"
},
{
  "ques": "Which outputs Hello?<br><br>console.log('Hello')",
  "quesType": "mcq",
  "op1": "console.log('Hello')",
  "op2": "print('Hello')",
  "op3": "msg('Hello')",
  "op4": "output('Hello')",
  "ans": "console.log('Hello')"
},
{
  "ques": "Which is true about JS arrays?<br><br>",
  "quesType": "mcq",
  "op1": "They are zero-indexed",
  "op2": "They are one-indexed",
  "op3": "No index",
  "op4": "Use letters",
  "ans": "They are zero-indexed"
}
,
{
  "ques": "Who invented JavaScript?<br><br>",
  "quesType": "fill",
  "ans": "Brendan Eich"
},
{
  "ques": "Keyword to declare a constant?<br><br>",
  "quesType": "fill",
  "ans": "const"
},
{
  "ques": "Method to parse JSON string?<br><br>",
  "quesType": "fill",
  "ans": "JSON.parse"
},
{
  "ques": "Global object in browsers?<br><br>",
  "quesType": "fill",
  "ans": "window"
},
{
  "ques": "Type for an array?<br><br>",
  "quesType": "fill",
  "ans": "object"
},
{
  "ques": "Strict equality operator?<br><br>",
  "quesType": "fill",
  "ans": "==="
},
{
  "ques": "Convert to string method?<br><br>",
  "quesType": "fill",
  "ans": "toString()"
},
{
  "ques": "Set a timer once?<br><br>",
  "quesType": "fill",
  "ans": "setTimeout"
},
{
  "ques": "Stop a timer?<br><br>",
  "quesType": "fill",
  "ans": "clearTimeout"
},
{
  "ques": "Check variable type?<br><br>",
  "quesType": "fill",
  "ans": "typeof"
},
{
  "ques": "Which keyword declares a variable?<br><br>",
  "quesType": "mcq",
  "op1": "var",
  "op2": "func",
  "op3": "int",
  "op4": "define",
  "ans": "var"
},
{
  "ques": "What is output?<br><br>typeof []",
  "quesType": "mcq",
  "op1": "array",
  "op2": "object",
  "op3": "list",
  "op4": "undefined",
  "ans": "object"
},
{
  "ques": "Which runs code repeatedly?<br><br>",
  "quesType": "mcq",
  "op1": "setInterval",
  "op2": "setTimeout",
  "op3": "clearTimeout",
  "op4": "parseInt",
  "ans": "setInterval"
},
{
  "ques": "What is output?<br><br>console.log('5' + 5)",
  "quesType": "mcq",
  "op1": "55",
  "op2": "10",
  "op3": "Error",
  "op4": "5",
  "ans": "55"
},
{
  "ques": "Which function converts string to number?<br><br>",
  "quesType": "mcq",
  "op1": "parseInt",
  "op2": "JSON.parse",
  "op3": "stringify",
  "op4": "Number.toString",
  "ans": "parseInt"
},
{
  "ques": "Which compares value and type?<br><br>",
  "quesType": "mcq",
  "op1": "==",
  "op2": "=",
  "op3": "===",
  "op4": "!==",
  "ans": "==="
},
{
  "ques": "What is output?<br><br>typeof null",
  "quesType": "mcq",
  "op1": "null",
  "op2": "object",
  "op3": "undefined",
  "op4": "NaN",
  "ans": "object"
},
{
  "ques": "Which loops through array items?<br><br>",
  "quesType": "mcq",
  "op1": "for",
  "op2": "while",
  "op3": "do-while",
  "op4": "forEach",
  "ans": "forEach"
},
{
  "ques": "What is output?<br><br>NaN === NaN",
  "quesType": "mcq",
  "op1": "true",
  "op2": "false",
  "op3": "NaN",
  "op4": "undefined",
  "ans": "false"
},
{
  "ques": "Which method merges arrays?<br><br>",
  "quesType": "mcq",
  "op1": "concat",
  "op2": "push",
  "op3": "pop",
  "op4": "merge",
  "ans": "concat"
}
,
{
  "ques": "Which keyword defines a constant?<br><br>",
  "quesType": "mcq",
  "op1": "var",
  "op2": "const",
  "op3": "static",
  "op4": "define",
  "ans": "const"
},
{
  "ques": "Which method rounds a number?<br><br>",
  "quesType": "mcq",
  "op1": "round()",
  "op2": "Math.floor()",
  "op3": "Math.round()",
  "op4": "toRound()",
  "ans": "Math.round()"
},
{
  "ques": "Which converts string to integer?<br><br>",
  "quesType": "mcq",
  "op1": "parseInt()",
  "op2": "int()",
  "op3": "Number()",
  "op4": "String()",
  "ans": "parseInt()"
},
{
  "ques": "Which finds array length?<br><br>",
  "quesType": "mcq",
  "op1": ".size",
  "op2": ".length",
  "op3": ".count",
  "op4": ".total",
  "ans": ".length"
},
{
  "ques": "How to access first array item?<br><br>",
  "quesType": "mcq",
  "op1": "arr.first()",
  "op2": "arr[1]",
  "op3": "arr[0]",
  "op4": "arr.get(0)",
  "ans": "arr[0]"
},
{
  "ques": "Which keyword stops function?<br><br>",
  "quesType": "mcq",
  "op1": "break",
  "op2": "stop",
  "op3": "exit",
  "op4": "return",
  "ans": "return"
},
{
  "ques": "Which shows confirm box?<br><br>",
  "quesType": "mcq",
  "op1": "confirm()",
  "op2": "prompt()",
  "op3": "alert()",
  "op4": "ask()",
  "ans": "confirm()"
},
{
  "ques": "Which executes after delay?<br><br>",
  "quesType": "mcq",
  "op1": "setInterval()",
  "op2": "setTimeout()",
  "op3": "delay()",
  "op4": "wait()",
  "ans": "setTimeout()"
},
{
  "ques": "Which repeats code every time?<br><br>",
  "quesType": "mcq",
  "op1": "setInterval()",
  "op2": "setTimeout()",
  "op3": "repeat()",
  "op4": "loop()",
  "ans": "setInterval()"
},
{
  "ques": "Which method adds to array end?<br><br>",
  "quesType": "mcq",
  "op1": "add()",
  "op2": "push()",
  "op3": "insert()",
  "op4": "append()",
  "ans": "push()"
},
{
  "ques": "Which removes last array item?<br><br>",
  "quesType": "mcq",
  "op1": "pop()",
  "op2": "shift()",
  "op3": "remove()",
  "op4": "cut()",
  "ans": "pop()"
},
{
  "ques": "Which removes first array item?<br><br>",
  "quesType": "mcq",
  "op1": "shift()",
  "op2": "pop()",
  "op3": "splice()",
  "op4": "cut()",
  "ans": "shift()"
},
{
  "ques": "Which combines arrays?<br><br>",
  "quesType": "mcq",
  "op1": "join()",
  "op2": "merge()",
  "op3": "concat()",
  "op4": "combine()",
  "ans": "concat()"
},
{
  "ques": "Which converts to string?<br><br>",
  "quesType": "mcq",
  "op1": "toString()",
  "op2": "parseInt()",
  "op3": "Number()",
  "op4": "Stringify()",
  "ans": "toString()"
},
{
  "ques": "Which method slices array?<br><br>",
  "quesType": "mcq",
  "op1": "splice()",
  "op2": "split()",
  "op3": "slice()",
  "op4": "cut()",
  "ans": "slice()"
},
{
  "ques": "Which returns index in array?<br><br>",
  "quesType": "mcq",
  "op1": "find()",
  "op2": "indexOf()",
  "op3": "search()",
  "op4": "getIndex()",
  "ans": "indexOf()"
},
{
  "ques": "Which compares values only?<br><br>",
  "quesType": "mcq",
  "op1": "===",
  "op2": "!=",
  "op3": "==",
  "op4": "=",
  "ans": "=="
},
{
  "ques": "Which operator means not equal?<br><br>",
  "quesType": "mcq",
  "op1": "!=",
  "op2": "==",
  "op3": "!==",
  "op4": "=",
  "ans": "!="
},
{
  "ques": "Which means strict not equal?<br><br>",
  "quesType": "mcq",
  "op1": "!=",
  "op2": "!==",
  "op3": "not",
  "op4": "~=",
  "ans": "!=="
},
{
  "ques": "Which calls function repeatedly?<br><br>",
  "quesType": "mcq",
  "op1": "setTimeout()",
  "op2": "interval()",
  "op3": "repeat()",
  "op4": "setInterval()",
  "ans": "setInterval()"
}
,
{
  "ques": "Keyword for constant?<br><br>",
  "quesType": "fill",
  "ans": "const"
},
{
  "ques": "Round number method?<br><br>",
  "quesType": "fill",
  "ans": "Math.round"
},
{
  "ques": "String to int method?<br><br>",
  "quesType": "fill",
  "ans": "parseInt"
},
{
  "ques": "Property for array length?<br><br>",
  "quesType": "fill",
  "ans": "length"
},
{
  "ques": "First array index?<br><br>",
  "quesType": "fill",
  "ans": "0"
},
{
  "ques": "Keyword to exit function?<br><br>",
  "quesType": "fill",
  "ans": "return"
},
{
  "ques": "Confirm box method?<br><br>",
  "quesType": "fill",
  "ans": "confirm"
},
{
  "ques": "Delay code method?<br><br>",
  "quesType": "fill",
  "ans": "setTimeout"
},
{
  "ques": "Repeat code method?<br><br>",
  "quesType": "fill",
  "ans": "setInterval"
},
{
  "ques": "Add item to array end?<br><br>",
  "quesType": "fill",
  "ans": "push"
},
{
  "ques": "Remove last array item?<br><br>",
  "quesType": "fill",
  "ans": "pop"
},
{
  "ques": "Remove first array item?<br><br>",
  "quesType": "fill",
  "ans": "shift"
},
{
  "ques": "Combine arrays method?<br><br>",
  "quesType": "fill",
  "ans": "concat"
},
{
  "ques": "To string method?<br><br>",
  "quesType": "fill",
  "ans": "toString"
},
{
  "ques": "Slice array method?<br><br>",
  "quesType": "fill",
  "ans": "slice"
},
{
  "ques": "Find index method?<br><br>",
  "quesType": "fill",
  "ans": "indexOf"
},
{
  "ques": "Loose equal operator?<br><br>",
  "quesType": "fill",
  "ans": "=="
},
{
  "ques": "Not equal operator?<br><br>",
  "quesType": "fill",
  "ans": "!="
},
{
  "ques": "Strict not equal operator?<br><br>",
  "quesType": "fill",
  "ans": "!=="
},
{
  "ques": "Loop delay method?<br><br>",
  "quesType": "fill",
  "ans": "setInterval"
}
,
{
  "ques": "How to declare a variable that cannot be reassigned?<br><br>",
  "quesType": "fill",
  "ans": "const"
},
{
  "ques": "How do you write a single-line comment in JS?<br><br>",
  "quesType": "fill",
  "ans": "//"
},
{
  "ques": "Which keyword declares a function?<br><br>",
  "quesType": "fill",
  "ans": "function"
},
{
  "ques": "How to declare a variable with block scope?<br><br>",
  "quesType": "fill",
  "ans": "let"
},
{
  "ques": "Which object provides timers like setTimeout?<br><br>",
  "quesType": "fill",
  "ans": "window"
},
{
  "ques": "Which operator is used for addition?<br><br>",
  "quesType": "fill",
  "ans": "+"
},
{
  "ques": "How to convert a string '123' to a number?<br><br>",
  "quesType": "fill",
  "ans": "parseInt()"
},
{
  "ques": "How to convert a number to string?<br><br>",
  "quesType": "fill",
  "ans": "toString()"
},
{
  "ques": "What keyword is used to create a new object?<br><br>",
  "quesType": "fill",
  "ans": "new"
},
{
  "ques": "How to check strict equality?<br><br>",
  "quesType": "fill",
  "ans": "==="
},
{
  "ques": "What keyword is used to stop a loop?<br><br>",
  "quesType": "fill",
  "ans": "break"
},
{
  "ques": "Default return value of a function with no return?<br><br>",
  "quesType": "fill",
  "ans": "undefined"
},
{
  "ques": "Keyword to write an else branch?<br><br>",
  "quesType": "fill",
  "ans": "else"
},
{
  "ques": "Method to add an element at the end of an array?<br><br>",
  "quesType": "fill",
  "ans": "push()"
},
{
  "ques": "Method to remove last element from array?<br><br>",
  "quesType": "fill",
  "ans": "pop()"
},
{
  "ques": "Which method converts an object to JSON string?<br><br>",
  "quesType": "fill",
  "ans": "JSON.stringify()"
},
{
  "ques": "Which method parses JSON string to object?<br><br>",
  "quesType": "fill",
  "ans": "JSON.parse()"
},
{
  "ques": "Which keyword declares a variable that can be reassigned?<br><br>",
  "quesType": "fill",
  "ans": "var"
},
{
  "ques": "How to declare an anonymous function?<br><br>",
  "quesType": "fill",
  "ans": "function() {}"
},
{
  "ques": "Method to schedule repeated code execution?<br><br>",
  "quesType": "fill",
  "ans": "setInterval()"
}
,
{
  "ques": "How do you declare a variable that can be changed?<br><br>",
  "quesType": "mcq",
  "op1": "var",
  "op2": "const",
  "op3": "static",
  "op4": "final",
  "ans": "var"
},
{
  "ques": "What is output?<br><br>console.log(typeof undefined);",
  "quesType": "mcq",
  "op1": "undefined",
  "op2": "null",
  "op3": "object",
  "op4": "NaN",
  "ans": "undefined"
},
{
  "ques": "Which operator is used for string concatenation?<br><br>",
  "quesType": "mcq",
  "op1": "+",
  "op2": "&",
  "op3": "*",
  "op4": "#",
  "ans": "+"
},
{
  "ques": "Which keyword is used to define a constant?<br><br>",
  "quesType": "mcq",
  "op1": "const",
  "op2": "let",
  "op3": "var",
  "op4": "final",
  "ans": "const"
},
{
  "ques": "What does NaN stand for?<br><br>",
  "quesType": "mcq",
  "op1": "Not a Number",
  "op2": "Null and Null",
  "op3": "No any Number",
  "op4": "Number and Number",
  "ans": "Not a Number"
},
{
  "ques": "What is the output?<br><br>console.log(3 + '4');",
  "quesType": "mcq",
  "op1": "'34'",
  "op2": "7",
  "op3": "NaN",
  "op4": "undefined",
  "ans": "'34'"
},
{
  "ques": "Which method removes the last element from an array?<br><br>",
  "quesType": "mcq",
  "op1": "pop()",
  "op2": "push()",
  "op3": "shift()",
  "op4": "unshift()",
  "ans": "pop()"
},
{
  "ques": "Which method adds an element to the end of an array?<br><br>",
  "quesType": "mcq",
  "op1": "push()",
  "op2": "pop()",
  "op3": "shift()",
  "op4": "unshift()",
  "ans": "push()"
},
{
  "ques": "How do you write a multi-line comment?<br><br>",
  "quesType": "mcq",
  "op1": "/* comment */",
  "op2": "// comment",
  "op3": "# comment",
  "op4": "<!-- comment -->",
  "ans": "/* comment */"
},
{
  "ques": "What will this print?<br><br>console.log(2 === '2');",
  "quesType": "mcq",
  "op1": "false",
  "op2": "true",
  "op3": "NaN",
  "op4": "undefined",
  "ans": "false"
},
{
  "ques": "Which keyword creates a new object?<br><br>",
  "quesType": "mcq",
  "op1": "new",
  "op2": "create",
  "op3": "object",
  "op4": "class",
  "ans": "new"
},
{
  "ques": "What is output?<br><br>console.log(true && false);",
  "quesType": "mcq",
  "op1": "false",
  "op2": "true",
  "op3": "undefined",
  "op4": "NaN",
  "ans": "false"
},
{
  "ques": "Which method converts JSON to JS object?<br><br>",
  "quesType": "mcq",
  "op1": "JSON.parse()",
  "op2": "JSON.stringify()",
  "op3": "JSON.convert()",
  "op4": "JSON.toObject()",
  "ans": "JSON.parse()"
},
{
  "ques": "What is output?<br><br>console.log(!!0);",
  "quesType": "mcq",
  "op1": "false",
  "op2": "true",
  "op3": "0",
  "op4": "1",
  "ans": "false"
},
{
  "ques": "Which of these is falsy?<br><br>",
  "quesType": "mcq",
  "op1": "null",
  "op2": "'false'",
  "op3": "1",
  "op4": "true",
  "ans": "null"
},
{
  "ques": "Which keyword declares a variable globally?<br><br>",
  "quesType": "mcq",
  "op1": "var",
  "op2": "let",
  "op3": "const",
  "op4": "static",
  "ans": "var"
},
{
  "ques": "How to declare an arrow function?<br><br>",
  "quesType": "mcq",
  "op1": "() => {}",
  "op2": "function => {}",
  "op3": "func() => {}",
  "op4": "arrow function() {}",
  "ans": "() => {}"
},
{
  "ques": "What is the value of NaN?<br><br>",
  "quesType": "mcq",
  "op1": "Not a Number",
  "op2": "Null",
  "op3": "Zero",
  "op4": "Undefined",
  "ans": "Not a Number"
},
{
  "ques": "Which keyword defines a class?<br><br>",
  "quesType": "mcq",
  "op1": "class",
  "op2": "object",
  "op3": "new",
  "op4": "struct",
  "ans": "class"
},
{
  "ques": "What is output?<br><br>console.log(typeof null);",
  "quesType": "mcq",
  "op1": "object",
  "op2": "null",
  "op3": "undefined",
  "op4": "boolean",
  "ans": "object"
}
,
{
  "ques": "Who created JavaScript?<br><br>",
  "quesType": "fill",
  "ans": "Brendan Eich"
},
{
  "ques": "Keyword to declare a block-scoped variable?<br><br>",
  "quesType": "fill",
  "ans": "let"
},
{
  "ques": "Function to convert JSON string to object?<br><br>",
  "quesType": "fill",
  "ans": "JSON.parse"
},
{
  "ques": "Global object in browser environment?<br><br>",
  "quesType": "fill",
  "ans": "window"
},
{
  "ques": "JavaScript data type for true or false?<br><br>",
  "quesType": "fill",
  "ans": "boolean"
},
{
  "ques": "Operator for strict equality?<br><br>",
  "quesType": "fill",
  "ans": "==="
},
{
  "ques": "Method to convert value to string?<br><br>",
  "quesType": "fill",
  "ans": "toString()"
},
{
  "ques": "Function to execute code after delay?<br><br>",
  "quesType": "fill",
  "ans": "setTimeout"
},
{
  "ques": "Function to stop a timer?<br><br>",
  "quesType": "fill",
  "ans": "clearTimeout"
},
{
  "ques": "Operator to find type of a variable?<br><br>",
  "quesType": "fill",
  "ans": "typeof"
},
{
  "ques": "Method to add item at the end of array?<br><br>",
  "quesType": "fill",
  "ans": "push()"
},
{
  "ques": "Keyword to declare a constant?<br><br>",
  "quesType": "fill",
  "ans": "const"
},
{
  "ques": "Method to convert object to JSON string?<br><br>",
  "quesType": "fill",
  "ans": "JSON.stringify"
},
{
  "ques": "Method to remove last item from array?<br><br>",
  "quesType": "fill",
  "ans": "pop()"
},
{
  "ques": "Loop that runs as long as condition is true?<br><br>",
  "quesType": "fill",
  "ans": "while"
},
{
  "ques": "Function that runs repeatedly at interval?<br><br>",
  "quesType": "fill",
  "ans": "setInterval"
},
{
  "ques": "Method to join array elements into string?<br><br>",
  "quesType": "fill",
  "ans": "join()"
},
{
  "ques": "Keyword to define a function?<br><br>",
  "quesType": "fill",
  "ans": "function"
},
{
  "ques": "Method to remove whitespace from start/end of string?<br><br>",
  "quesType": "fill",
  "ans": "trim()"
},
{
  "ques": "Operator to concatenate strings?<br><br>",
  "quesType": "fill",
  "ans": "+"
}
,
{
  "ques": "Which keyword declares a variable?<br><br>",
  "quesType": "mcq",
  "op1": "var",
  "op2": "function",
  "op3": "int",
  "op4": "let",
  "ans": "let"
},
{
  "ques": "What is typeof []?<br><br>",
  "quesType": "mcq",
  "op1": "array",
  "op2": "object",
  "op3": "list",
  "op4": "undefined",
  "ans": "object"
},
{
  "ques": "Which method parses a JSON string?<br><br>",
  "quesType": "mcq",
  "op1": "JSON.parse",
  "op2": "JSON.stringify",
  "op3": "parseInt",
  "op4": "parseFloat",
  "ans": "JSON.parse"
},
{
  "ques": "How to write an arrow function?<br><br>",
  "quesType": "mcq",
  "op1": "() => {}",
  "op2": "function() {}",
  "op3": "=> {}",
  "op4": "() =>",
  "ans": "() => {}"
},
{
  "ques": "What does === compare?<br><br>",
  "quesType": "mcq",
  "op1": "Value only",
  "op2": "Type only",
  "op3": "Value and type",
  "op4": "Reference only",
  "ans": "Value and type"
},
{
  "ques": "What is output? console.log('5' + 5)<br><br>",
  "quesType": "mcq",
  "op1": "55",
  "op2": "10",
  "op3": "Error",
  "op4": "NaN",
  "ans": "55"
},
{
  "ques": "Which method adds item at array end?<br><br>",
  "quesType": "mcq",
  "op1": "push()",
  "op2": "pop()",
  "op3": "shift()",
  "op4": "unshift()",
  "ans": "push()"
},
{
  "ques": "What does setTimeout do?<br><br>",
  "quesType": "mcq",
  "op1": "Run code once after delay",
  "op2": "Run code repeatedly",
  "op3": "Stop timer",
  "op4": "Parse JSON",
  "ans": "Run code once after delay"
},
{
  "ques": "How to stop a timer?<br><br>",
  "quesType": "mcq",
  "op1": "clearTimeout()",
  "op2": "setTimeout()",
  "op3": "clearInterval()",
  "op4": "stopTimer()",
  "ans": "clearTimeout()"
},
{
  "ques": "Which method converts object to JSON?<br><br>",
  "quesType": "mcq",
  "op1": "JSON.stringify",
  "op2": "JSON.parse",
  "op3": "toString()",
  "op4": "parseInt()",
  "ans": "JSON.stringify"
},
{
  "ques": "What is output? typeof null<br><br>",
  "quesType": "mcq",
  "op1": "null",
  "op2": "object",
  "op3": "undefined",
  "op4": "boolean",
  "ans": "object"
},
{
  "ques": "Which loop runs at least once?<br><br>",
  "quesType": "mcq",
  "op1": "do-while",
  "op2": "while",
  "op3": "for",
  "op4": "foreach",
  "ans": "do-while"
},
{
  "ques": "What does parseInt do?<br><br>",
  "quesType": "mcq",
  "op1": "Convert string to integer",
  "op2": "Parse JSON",
  "op3": "Convert integer to string",
  "op4": "Round number",
  "ans": "Convert string to integer"
},
{
  "ques": "Which method removes last array item?<br><br>",
  "quesType": "mcq",
  "op1": "pop()",
  "op2": "push()",
  "op3": "shift()",
  "op4": "unshift()",
  "ans": "pop()"
},
{
  "ques": "What is output? '5' == 5<br><br>",
  "quesType": "mcq",
  "op1": "true",
  "op2": "false",
  "op3": "Error",
  "op4": "NaN",
  "ans": "true"
},
{
  "ques": "Which keyword creates a constant?<br><br>",
  "quesType": "mcq",
  "op1": "const",
  "op2": "var",
  "op3": "let",
  "op4": "constant",
  "ans": "const"
},
{
  "ques": "Which function runs repeatedly?<br><br>",
  "quesType": "mcq",
  "op1": "setInterval()",
  "op2": "setTimeout()",
  "op3": "clearTimeout()",
  "op4": "runLoop()",
  "ans": "setInterval()"
},
{
  "ques": "What does toString() do?<br><br>",
  "quesType": "mcq",
  "op1": "Converts value to string",
  "op2": "Parses string",
  "op3": "Converts string to number",
  "op4": "Returns number",
  "ans": "Converts value to string"
},
{
  "ques": "How to check variable type?<br><br>",
  "quesType": "mcq",
  "op1": "typeof",
  "op2": "instanceof",
  "op3": "isType()",
  "op4": "getType()",
  "ans": "typeof"
},
{
  "ques": "What is output? NaN === NaN<br><br>",
  "quesType": "mcq",
  "op1": "false",
  "op2": "true",
  "op3": "NaN",
  "op4": "undefined",
  "ans": "false"
}
,
{
  "ques": "Which keyword declares a variable?<br><br>",
  "quesType": "mcq",
  "op1": "let",
  "op2": "var",
  "op3": "const",
  "op4": "all of these",
  "ans": "all of these"
},
{
  "ques": "Which operator is used for assignment?<br><br>",
  "quesType": "mcq",
  "op1": "=",
  "op2": "==",
  "op3": "===",
  "op4": "!=",
  "ans": "="
},
{
  "ques": "How to write a single-line comment?<br><br>",
  "quesType": "mcq",
  "op1": "// comment",
  "op2": "/* comment */",
  "op3": "<!-- comment -->",
  "op4": "# comment",
  "ans": "// comment"
},
{
  "ques": "Which method outputs to console?<br><br>",
  "quesType": "mcq",
  "op1": "console.print()",
  "op2": "console.log()",
  "op3": "print()",
  "op4": "log.console()",
  "ans": "console.log()"
},
{
  "ques": "How to create a function?<br><br>",
  "quesType": "mcq",
  "op1": "function myFunc() {}",
  "op2": "func myFunc() {}",
  "op3": "create function myFunc() {}",
  "op4": "def myFunc() {}",
  "ans": "function myFunc() {}"
},
{
  "ques": "Which keyword checks a condition?<br><br>",
  "quesType": "mcq",
  "op1": "if",
  "op2": "switch",
  "op3": "while",
  "op4": "for",
  "ans": "if"
},
{
  "ques": "Which keyword creates a loop?<br><br>",
  "quesType": "mcq",
  "op1": "loop",
  "op2": "for",
  "op3": "repeat",
  "op4": "iterate",
  "ans": "for"
},
{
  "ques": "Which data type stores true/false?<br><br>",
  "quesType": "mcq",
  "op1": "string",
  "op2": "boolean",
  "op3": "number",
  "op4": "object",
  "ans": "boolean"
},
{
  "ques": "How to declare an array?<br><br>",
  "quesType": "mcq",
  "op1": "let arr = []",
  "op2": "let arr = {}",
  "op3": "let arr = ()",
  "op4": "let arr = <>",
  "ans": "let arr = []"
},
{
  "ques": "Which method adds item at start of array?<br><br>",
  "quesType": "mcq",
  "op1": "push()",
  "op2": "unshift()",
  "op3": "pop()",
  "op4": "shift()",
  "ans": "unshift()"
},
{
  "ques": "Which keyword throws an error?<br><br>",
  "quesType": "mcq",
  "op1": "throw",
  "op2": "error",
  "op3": "catch",
  "op4": "try",
  "ans": "throw"
},
{
  "ques": "Which object stores key-value pairs?<br><br>",
  "quesType": "mcq",
  "op1": "Map",
  "op2": "Set",
  "op3": "Array",
  "op4": "Object",
  "ans": "Object"
},
{
  "ques": "Which keyword declares block scope variable?<br><br>",
  "quesType": "mcq",
  "op1": "var",
  "op2": "let",
  "op3": "const",
  "op4": "function",
  "ans": "let"
},
{
  "ques": "Which method parses JSON string?<br><br>",
  "quesType": "mcq",
  "op1": "JSON.stringify()",
  "op2": "JSON.parse()",
  "op3": "JSON.convert()",
  "op4": "JSON.object()",
  "ans": "JSON.parse()"
},
{
  "ques": "Which event triggers on click?<br><br>",
  "quesType": "mcq",
  "op1": "onhover",
  "op2": "onclick",
  "op3": "onchange",
  "op4": "oninput",
  "ans": "onclick"
},
{
  "ques": "Which keyword defines a class?<br><br>",
  "quesType": "mcq",
  "op1": "class",
  "op2": "function",
  "op3": "object",
  "op4": "constructor",
  "ans": "class"
},
{
  "ques": "Which method stops loop?<br><br>",
  "quesType": "mcq",
  "op1": "break",
  "op2": "stop",
  "op3": "exit",
  "op4": "continue",
  "ans": "break"
},
{
  "ques": "Which keyword skips current iteration?<br><br>",
  "quesType": "mcq",
  "op1": "skip",
  "op2": "continue",
  "op3": "break",
  "op4": "pass",
  "ans": "continue"
},
{
  "ques": "Which method finds element in array?<br><br>",
  "quesType": "mcq",
  "op1": "find()",
  "op2": "search()",
  "op3": "indexOf()",
  "op4": "filter()",
  "ans": "find()"
},
{
  "ques": "Which returns true for all elements?<br><br>",
  "quesType": "mcq",
  "op1": "every()",
  "op2": "some()",
  "op3": "filter()",
  "op4": "map()",
  "ans": "every()"
}
,
{
  "ques": "Keyword to declare variable?<br><br>",
  "quesType": "fill",
  "ans": "var"
},
{
  "ques": "Assignment operator?<br><br>",
  "quesType": "fill",
  "ans": "="
},
{
  "ques": "Single line comment syntax?<br><br>",
  "quesType": "fill",
  "ans": "//"
},
{
  "ques": "Console output method?<br><br>",
  "quesType": "fill",
  "ans": "console.log"
},
{
  "ques": "Keyword to define function?<br><br>",
  "quesType": "fill",
  "ans": "function"
},
{
  "ques": "Keyword for condition?<br><br>",
  "quesType": "fill",
  "ans": "if"
},
{
  "ques": "Keyword for loop?<br><br>",
  "quesType": "fill",
  "ans": "for"
},
{
  "ques": "Boolean data type?<br><br>",
  "quesType": "fill",
  "ans": "boolean"
},
{
  "ques": "Array declaration?<br><br>",
  "quesType": "fill",
  "ans": "[]"
},
{
  "ques": "Add item at array start?<br><br>",
  "quesType": "fill",
  "ans": "unshift"
},
{
  "ques": "Keyword to throw error?<br><br>",
  "quesType": "fill",
  "ans": "throw"
},
{
  "ques": "Key-value object?<br><br>",
  "quesType": "fill",
  "ans": "Object"
},
{
  "ques": "Block scoped variable?<br><br>",
  "quesType": "fill",
  "ans": "let"
},
{
  "ques": "Parse JSON method?<br><br>",
  "quesType": "fill",
  "ans": "JSON.parse"
},
{
  "ques": "Click event attribute?<br><br>",
  "quesType": "fill",
  "ans": "onclick"
},
{
  "ques": "Keyword to define class?<br><br>",
  "quesType": "fill",
  "ans": "class"
},
{
  "ques": "Keyword to stop loop?<br><br>",
  "quesType": "fill",
  "ans": "break"
},
{
  "ques": "Skip current loop iteration?<br><br>",
  "quesType": "fill",
  "ans": "continue"
},
{
  "ques": "Method to find array element?<br><br>",
  "quesType": "fill",
  "ans": "find"
},
{
  "ques": "Method to test all elements?<br><br>",
  "quesType": "fill",
  "ans": "every"
}
,

]
let codingjs2Arr=[
  {
  "ques": "Which method is used to add elements at the beginning of an array?<br><br>",
  "quesType": "fill",
  "ans": "unshift()"
},
{
  "ques": "What keyword is used to handle errors in try-catch blocks?<br><br>",
  "quesType": "fill",
  "ans": "catch"
},
{
  "ques": "How do you create a Promise object in JavaScript?<br><br>",
  "quesType": "fill",
  "ans": "new Promise()"
},
{
  "ques": "What keyword is used to declare a class in ES6?<br><br>",
  "quesType": "fill",
  "ans": "class"
},
{
  "ques": "Which method creates a new array with results of calling a function on every element?<br><br>",
  "quesType": "fill",
  "ans": "map()"
},
{
  "ques": "What does the 'this' keyword refer to inside a regular function?<br><br>",
  "quesType": "fill",
  "ans": "the calling object"
},
{
  "ques": "How do you convert a JSON string to a JavaScript object?<br><br>",
  "quesType": "fill",
  "ans": "JSON.parse()"
},
{
  "ques": "What operator is used to assign default values if a variable is undefined?<br><br>",
  "quesType": "fill",
  "ans": "||"
},
{
  "ques": "Which method removes the first element from an array?<br><br>",
  "quesType": "fill",
  "ans": "shift()"
},
{
  "ques": "What keyword declares an asynchronous function?<br><br>",
  "quesType": "fill",
  "ans": "async"
},
{
  "ques": "Which method can you use to join all elements of an array into a string?<br><br>",
  "quesType": "fill",
  "ans": "join()"
},
{
  "ques": "What is the output of `typeof NaN`?<br><br>",
  "quesType": "fill",
  "ans": "number"
},
{
  "ques": "How do you stop the execution of a function early?<br><br>",
  "quesType": "fill",
  "ans": "return"
},
{
  "ques": "Which method filters an array based on a test function?<br><br>",
  "quesType": "fill",
  "ans": "filter()"
},
{
  "ques": "What is the term for a function passed as an argument to another function?<br><br>",
  "quesType": "fill",
  "ans": "callback"
},
{
  "ques": "How to declare a generator function?<br><br>",
  "quesType": "fill",
  "ans": "function*"
},
{
  "ques": "Which method adds one or more elements at a specified index in an array?<br><br>",
  "quesType": "fill",
  "ans": "splice()"
},
{
  "ques": "What will `Boolean('')` return?<br><br>",
  "quesType": "fill",
  "ans": "false"
},
{
  "ques": "How to create a shallow copy of an array?<br><br>",
  "quesType": "fill",
  "ans": "slice()"
},
{
  "ques": "Which keyword is used to export modules in ES6?<br><br>",
  "quesType": "fill",
  "ans": "export"
}
,
{
  "ques": "What will `console.log(0 == '0');` output?<br><br>",
  "quesType": "mcq",
  "op1": "true",
  "op2": "false",
  "op3": "TypeError",
  "op4": "undefined",
  "ans": "true"
},
{
  "ques": "Which array method returns a new array with elements that pass a test?<br><br>",
  "quesType": "mcq",
  "op1": "filter()",
  "op2": "map()",
  "op3": "reduce()",
  "op4": "sort()",
  "ans": "filter()"
},
{
  "ques": "What is the output?<br><br>console.log(typeof null);",
  "quesType": "mcq",
  "op1": "object",
  "op2": "null",
  "op3": "undefined",
  "op4": "boolean",
  "ans": "object"
},
{
  "ques": "Which keyword creates a block-scoped variable?<br><br>",
  "quesType": "mcq",
  "op1": "let",
  "op2": "var",
  "op3": "const",
  "op4": "static",
  "ans": "let"
},
{
  "ques": "What does the `===` operator do?<br><br>",
  "quesType": "mcq",
  "op1": "strict equality",
  "op2": "assignment",
  "op3": "addition",
  "op4": "concatenation",
  "ans": "strict equality"
},
{
  "ques": "What is the output?<br><br>console.log([1, 2, 3].indexOf(2));",
  "quesType": "mcq",
  "op1": "1",
  "op2": "2",
  "op3": "-1",
  "op4": "0",
  "ans": "1"
},
{
  "ques": "Which method adds elements to the end of an array?<br><br>",
  "quesType": "mcq",
  "op1": "push()",
  "op2": "pop()",
  "op3": "shift()",
  "op4": "unshift()",
  "ans": "push()"
},
{
  "ques": "What is the output?<br><br>console.log(typeof NaN);",
  "quesType": "mcq",
  "op1": "number",
  "op2": "NaN",
  "op3": "undefined",
  "op4": "object",
  "ans": "number"
},
{
  "ques": "Which function is used to execute code after a delay?<br><br>",
  "quesType": "mcq",
  "op1": "setTimeout()",
  "op2": "setInterval()",
  "op3": "clearTimeout()",
  "op4": "delay()",
  "ans": "setTimeout()"
},
{
  "ques": "What does `typeof []` return?<br><br>",
  "quesType": "mcq",
  "op1": "object",
  "op2": "array",
  "op3": "undefined",
  "op4": "function",
  "ans": "object"
},
{
  "ques": "How do you declare an asynchronous function?<br><br>",
  "quesType": "mcq",
  "op1": "async function",
  "op2": "await function",
  "op3": "promise function",
  "op4": "defer function",
  "ans": "async function"
},
{
  "ques": "What is the output?<br><br>console.log(Boolean('false'));",
  "quesType": "mcq",
  "op1": "true",
  "op2": "false",
  "op3": "NaN",
  "op4": "undefined",
  "ans": "true"
},
{
  "ques": "Which method joins array elements into a string?<br><br>",
  "quesType": "mcq",
  "op1": "join()",
  "op2": "split()",
  "op3": "concat()",
  "op4": "replace()",
  "ans": "join()"
},
{
  "ques": "Which operator is used for logical AND?<br><br>",
  "quesType": "mcq",
  "op1": "&&",
  "op2": "||",
  "op3": "&",
  "op4": "|",
  "ans": "&&"
},
{
  "ques": "Which of the following is NOT a primitive type?<br><br>",
  "quesType": "mcq",
  "op1": "object",
  "op2": "string",
  "op3": "number",
  "op4": "boolean",
  "ans": "object"
},
{
  "ques": "What will `console.log(5 + '5');` output?<br><br>",
  "quesType": "mcq",
  "op1": "'55'",
  "op2": "10",
  "op3": "NaN",
  "op4": "undefined",
  "ans": "'55'"
},
{
  "ques": "What keyword is used to declare a block-scoped constant?<br><br>",
  "quesType": "mcq",
  "op1": "const",
  "op2": "var",
  "op3": "let",
  "op4": "static",
  "ans": "const"
},
{
  "ques": "Which method removes the first element of an array?<br><br>",
  "quesType": "mcq",
  "op1": "shift()",
  "op2": "pop()",
  "op3": "push()",
  "op4": "unshift()",
  "ans": "shift()"
},
{
  "ques": "What does `JSON.stringify()` do?<br><br>",
  "quesType": "mcq",
  "op1": "Converts JS object to JSON string",
  "op2": "Parses JSON string",
  "op3": "Executes JSON code",
  "op4": "Creates a JSON object",
  "ans": "Converts JS object to JSON string"
},
{
  "ques": "Which method calls a function for each array element?<br><br>",
  "quesType": "mcq",
  "op1": "forEach()",
  "op2": "map()",
  "op3": "filter()",
  "op4": "reduce()",
  "ans": "forEach()"
}
,
{
  "ques": "What does '===' operator check?<br><br>",
  "quesType": "mcq",
  "op1": "Equality with type coercion",
  "op2": "Strict equality without type coercion",
  "op3": "Assignment",
  "op4": "Inequality",
  "ans": "Strict equality without type coercion"
},
{
  "ques": "Which method converts a string to integer?<br><br>",
  "quesType": "mcq",
  "op1": "parseInt()",
  "op2": "toInteger()",
  "op3": "convertInt()",
  "op4": "int()",
  "ans": "parseInt()"
},
{
  "ques": "What is closure in JavaScript?<br><br>",
  "quesType": "mcq",
  "op1": "Function inside a function",
  "op2": "Function with private variables",
  "op3": "Function accessing outer scope variables",
  "op4": "All of the above",
  "ans": "All of the above"
},
{
  "ques": "How to create a promise?<br><br>",
  "quesType": "mcq",
  "op1": "new Promise()",
  "op2": "Promise.create()",
  "op3": "create Promise()",
  "op4": "Promise.new()",
  "ans": "new Promise()"
},
{
  "ques": "Which method delays function execution?<br><br>",
  "quesType": "mcq",
  "op1": "setTimeout()",
  "op2": "delay()",
  "op3": "wait()",
  "op4": "sleep()",
  "ans": "setTimeout()"
},
{
  "ques": "What is 'this' keyword in JavaScript?<br><br>",
  "quesType": "mcq",
  "op1": "Global object",
  "op2": "Current function",
  "op3": "Context object of current execution",
  "op4": "Undefined",
  "ans": "Context object of current execution"
},
{
  "ques": "How to copy an object?<br><br>",
  "quesType": "mcq",
  "op1": "Object.assign()",
  "op2": "copy()",
  "op3": "clone()",
  "op4": "copyObject()",
  "ans": "Object.assign()"
},
{
  "ques": "Which keyword defines constant?<br><br>",
  "quesType": "mcq",
  "op1": "const",
  "op2": "let",
  "op3": "var",
  "op4": "constant",
  "ans": "const"
},
{
  "ques": "Which method merges two arrays?<br><br>",
  "quesType": "mcq",
  "op1": "concat()",
  "op2": "merge()",
  "op3": "combine()",
  "op4": "append()",
  "ans": "concat()"
},
{
  "ques": "What does 'NaN' represent?<br><br>",
  "quesType": "mcq",
  "op1": "Not a Number",
  "op2": "Null value",
  "op3": "Undefined",
  "op4": "Zero",
  "ans": "Not a Number"
},
{
  "ques": "How to check array type?<br><br>",
  "quesType": "mcq",
  "op1": "typeof array",
  "op2": "Array.isArray()",
  "op3": "instanceof Array",
  "op4": "array.isArray()",
  "ans": "Array.isArray()"
},
{
  "ques": "Which event fires when page is loaded?<br><br>",
  "quesType": "mcq",
  "op1": "onload",
  "op2": "onstart",
  "op3": "onready",
  "op4": "DOMContentLoaded",
  "ans": "onload"
},
{
  "ques": "Which method removes last item from array?<br><br>",
  "quesType": "mcq",
  "op1": "pop()",
  "op2": "push()",
  "op3": "shift()",
  "op4": "unshift()",
  "ans": "pop()"
},
{
  "ques": "What is event bubbling?<br><br>",
  "quesType": "mcq",
  "op1": "Event propagates from parent to child",
  "op2": "Event propagates from child to parent",
  "op3": "Event stops propagation",
  "op4": "Event triggers once",
  "ans": "Event propagates from child to parent"
},
{
  "ques": "Which method schedules recurring execution?<br><br>",
  "quesType": "mcq",
  "op1": "setInterval()",
  "op2": "setTimeout()",
  "op3": "setRepeat()",
  "op4": "repeat()",
  "ans": "setInterval()"
},
{
  "ques": "How to convert string to lowercase?<br><br>",
  "quesType": "mcq",
  "op1": "toLowerCase()",
  "op2": "lowercase()",
  "op3": "toLower()",
  "op4": "lowerCase()",
  "ans": "toLowerCase()"
},
{
  "ques": "Which keyword creates an async function?<br><br>",
  "quesType": "mcq",
  "op1": "async",
  "op2": "await",
  "op3": "defer",
  "op4": "promise",
  "ans": "async"
},
{
  "ques": "What is a callback function?<br><br>",
  "quesType": "mcq",
  "op1": "Function passed as argument",
  "op2": "Function returns another function",
  "op3": "Function called immediately",
  "op4": "Function without parameters",
  "ans": "Function passed as argument"
},
{
  "ques": "Which method creates new array from elements that pass test?<br><br>",
  "quesType": "mcq",
  "op1": "filter()",
  "op2": "map()",
  "op3": "reduce()",
  "op4": "find()",
  "ans": "filter()"
},
{
  "ques": "Which method reduces array to single value?<br><br>",
  "quesType": "mcq",
  "op1": "reduce()",
  "op2": "map()",
  "op3": "filter()",
  "op4": "concat()",
  "ans": "reduce()"
}
,
{
  "ques": "Strict equality operator?<br><br>",
  "quesType": "fill",
  "ans": "==="
},
{
  "ques": "Convert string to integer?<br><br>",
  "quesType": "fill",
  "ans": "parseInt"
},
{
  "ques": "Closure means?<br><br>",
  "quesType": "fill",
  "ans": "function accessing outer scope variables"
},
{
  "ques": "Create a promise?<br><br>",
  "quesType": "fill",
  "ans": "new Promise"
},
{
  "ques": "Delay function execution?<br><br>",
  "quesType": "fill",
  "ans": "setTimeout"
},
{
  "ques": "'this' keyword means?<br><br>",
  "quesType": "fill",
  "ans": "context object of current execution"
},
{
  "ques": "Copy object method?<br><br>",
  "quesType": "fill",
  "ans": "Object.assign"
},
{
  "ques": "Define constant?<br><br>",
  "quesType": "fill",
  "ans": "const"
},
{
  "ques": "Merge two arrays?<br><br>",
  "quesType": "fill",
  "ans": "concat"
},
{
  "ques": "Not a Number abbreviation?<br><br>",
  "quesType": "fill",
  "ans": "NaN"
},
{
  "ques": "Check array type?<br><br>",
  "quesType": "fill",
  "ans": "Array.isArray"
},
{
  "ques": "Page load event?<br><br>",
  "quesType": "fill",
  "ans": "onload"
},
{
  "ques": "Remove last array item?<br><br>",
  "quesType": "fill",
  "ans": "pop"
},
{
  "ques": "Event bubbling means?<br><br>",
  "quesType": "fill",
  "ans": "event propagates from child to parent"
},
{
  "ques": "Schedule recurring execution?<br><br>",
  "quesType": "fill",
  "ans": "setInterval"
},
{
  "ques": "Convert string to lowercase?<br><br>",
  "quesType": "fill",
  "ans": "toLowerCase"
},
{
  "ques": "Keyword for async function?<br><br>",
  "quesType": "fill",
  "ans": "async"
},
{
  "ques": "Callback function is?<br><br>",
  "quesType": "fill",
  "ans": "function passed as argument"
},
{
  "ques": "Filter array method?<br><br>",
  "quesType": "fill",
  "ans": "filter"
},
{
  "ques": "Reduce array method?<br><br>",
  "quesType": "fill",
  "ans": "reduce"
}
,
{
  "ques": "How do you create a Promise?<br><br>",
  "quesType": "fill",
  "ans": "new Promise()"
},
{
  "ques": "Keyword to declare an asynchronous function?<br><br>",
  "quesType": "fill",
  "ans": "async"
},
{
  "ques": "Method to parse a URL string?<br><br>",
  "quesType": "fill",
  "ans": "URL()"
},
{
  "ques": "Method to add event listener to an element?<br><br>",
  "quesType": "fill",
  "ans": "addEventListener()"
},
{
  "ques": "Method to create a shallow copy of an object?<br><br>",
  "quesType": "fill",
  "ans": "Object.assign()"
},
{
  "ques": "Operator for optional chaining?<br><br>",
  "quesType": "fill",
  "ans": "?."
},
{
  "ques": "How to create a new array from an existing one by transforming each element?<br><br>",
  "quesType": "fill",
  "ans": "map()"
},
{
  "ques": "Method to check if an array includes a value?<br><br>",
  "quesType": "fill",
  "ans": "includes()"
},
{
  "ques": "Function that executes after all Promises resolve?<br><br>",
  "quesType": "fill",
  "ans": "Promise.all()"
},
{
  "ques": "What keyword declares a generator function?<br><br>",
  "quesType": "fill",
  "ans": "function*"
},
{
  "ques": "Method to remove duplicate values from an array?<br><br>",
  "quesType": "fill",
  "ans": "new Set()"
},
{
  "ques": "What method schedules code to run immediately after current call stack?<br><br>",
  "quesType": "fill",
  "ans": "setImmediate()"
},
{
  "ques": "Which method returns the index of the first matching element in array?<br><br>",
  "quesType": "fill",
  "ans": "findIndex()"
},
{
  "ques": "How do you convert a function argument list into an array?<br><br>",
  "quesType": "fill",
  "ans": "Array.from(arguments)"
},
{
  "ques": "How to create a copy of an array?<br><br>",
  "quesType": "fill",
  "ans": "slice()"
},
{
  "ques": "Which method removes whitespace from both ends of a string?<br><br>",
  "quesType": "fill",
  "ans": "trim()"
},
{
  "ques": "Operator to spread elements in an array or object?<br><br>",
  "quesType": "fill",
  "ans": "..."
},
{
  "ques": "Method to wait for a Promise to resolve in async functions?<br><br>",
  "quesType": "fill",
  "ans": "await"
},
{
  "ques": "How to define a default parameter in a function?<br><br>",
  "quesType": "fill",
  "ans": "function(a = defaultValue)"
},
{
  "ques": "Method to flatten nested arrays?<br><br>",
  "quesType": "fill",
  "ans": "flat()"
}
,
{
  "ques": "What does async keyword do?<br><br>",
  "quesType": "mcq",
  "op1": "Defines asynchronous function",
  "op2": "Makes function synchronous",
  "op3": "Creates promise",
  "op4": "Throws error",
  "ans": "Defines asynchronous function"
},
{
  "ques": "What is the output of typeof null?<br><br>",
  "quesType": "mcq",
  "op1": "object",
  "op2": "null",
  "op3": "undefined",
  "op4": "boolean",
  "ans": "object"
},
{
  "ques": "How to stop propagation of an event?<br><br>",
  "quesType": "mcq",
  "op1": "event.stopPropagation()",
  "op2": "event.preventDefault()",
  "op3": "event.stop()",
  "op4": "event.cancel()",
  "ans": "event.stopPropagation()"
},
{
  "ques": "What does Promise.all() do?<br><br>",
  "quesType": "mcq",
  "op1": "Waits for all promises to resolve",
  "op2": "Returns first resolved promise",
  "op3": "Rejects all promises",
  "op4": "Runs promises sequentially",
  "ans": "Waits for all promises to resolve"
},
{
  "ques": "Which method copies properties from source to target object?<br><br>",
  "quesType": "mcq",
  "op1": "Object.assign()",
  "op2": "Object.copy()",
  "op3": "Object.create()",
  "op4": "Object.clone()",
  "ans": "Object.assign()"
},
{
  "ques": "What is the optional chaining operator?<br><br>",
  "quesType": "mcq",
  "op1": "?.",
  "op2": "??",
  "op3": "||",
  "op4": "?",
  "ans": "?."
},
{
  "ques": "What is output? [1, 2, 3].map(x => x * 2)<br><br>",
  "quesType": "mcq",
  "op1": "[2, 4, 6]",
  "op2": "[1, 2, 3]",
  "op3": "[3, 4, 5]",
  "op4": "[0, 2, 4]",
  "ans": "[2, 4, 6]"
},
{
  "ques": "Which method returns index of first element matching condition?<br><br>",
  "quesType": "mcq",
  "op1": "findIndex()",
  "op2": "indexOf()",
  "op3": "find()",
  "op4": "filter()",
  "ans": "findIndex()"
},
{
  "ques": "How to create generator function?<br><br>",
  "quesType": "mcq",
  "op1": "function* name() {}",
  "op2": "async function() {}",
  "op3": "function name() {}",
  "op4": "function? name() {}",
  "ans": "function* name() {}"
},
{
  "ques": "What does '...' operator do?<br><br>",
  "quesType": "mcq",
  "op1": "Spread elements",
  "op2": "Multiply",
  "op3": "Exponentiation",
  "op4": "Comment",
  "ans": "Spread elements"
},
{
  "ques": "What is output? Promise.resolve(5).then(x => x * 2)<br><br>",
  "quesType": "mcq",
  "op1": "Promise with value 10",
  "op2": "10",
  "op3": "Error",
  "op4": "5",
  "ans": "Promise with value 10"
},
{
  "ques": "What is output? [1,2,[3,4]].flat()<br><br>",
  "quesType": "mcq",
  "op1": "[1,2,3,4]",
  "op2": "[1,2,[3,4]]",
  "op3": "[[1,2],3,4]",
  "op4": "Error",
  "ans": "[1,2,3,4]"
},
{
  "ques": "Which method converts array-like objects to arrays?<br><br>",
  "quesType": "mcq",
  "op1": "Array.from()",
  "op2": "Array.copy()",
  "op3": "Array.toArray()",
  "op4": "Array.of()",
  "ans": "Array.from()"
},
{
  "ques": "How to declare default function parameters?<br><br>",
  "quesType": "mcq",
  "op1": "function f(a = 10) {}",
  "op2": "function f(a?) {}",
  "op3": "function f(a:10) {}",
  "op4": "function f(default a) {}",
  "ans": "function f(a = 10) {}"
},
{
  "ques": "Which method adds event listener?<br><br>",
  "quesType": "mcq",
  "op1": "addEventListener()",
  "op2": "attachEvent()",
  "op3": "on()",
  "op4": "listen()",
  "ans": "addEventListener()"
},
{
  "ques": "What does trim() do?<br><br>",
  "quesType": "mcq",
  "op1": "Removes whitespace from start/end",
  "op2": "Converts to uppercase",
  "op3": "Adds whitespace",
  "op4": "Removes middle spaces",
  "ans": "Removes whitespace from start/end"
},
{
  "ques": "How to flatten array one level?<br><br>",
  "quesType": "mcq",
  "op1": "flat()",
  "op2": "flatten()",
  "op3": "concat()",
  "op4": "merge()",
  "ans": "flat()"
},
{
  "ques": "Which method creates shallow copy of object?<br><br>",
  "quesType": "mcq",
  "op1": "Object.assign()",
  "op2": "Object.copy()",
  "op3": "Object.clone()",
  "op4": "Object.create()",
  "ans": "Object.assign()"
},
{
  "ques": "How to wait for Promise resolution in async function?<br><br>",
  "quesType": "mcq",
  "op1": "await",
  "op2": "yield",
  "op3": "then",
  "op4": "async",
  "ans": "await"
}
,
{
  "ques": "How do you declare a variable that cannot be reassigned?<br><br>",
  "quesType": "fill",
  "ans": "const"
},
{
  "ques": "Which method returns the length of a string?<br><br>",
  "quesType": "fill",
  "ans": "length"
},
{
  "ques": "How do you write a single-line comment in JavaScript?<br><br>",
  "quesType": "fill",
  "ans": "//"
},
{
  "ques": "What is the output of `Boolean(0)`?<br><br>",
  "quesType": "fill",
  "ans": "false"
},
{
  "ques": "How to parse a string into an integer?<br><br>",
  "quesType": "fill",
  "ans": "parseInt()"
},
{
  "ques": "What method converts all characters in a string to lowercase?<br><br>",
  "quesType": "fill",
  "ans": "toLowerCase()"
},
{
  "ques": "Which method removes whitespace from both ends of a string?<br><br>",
  "quesType": "fill",
  "ans": "trim()"
},
{
  "ques": "What keyword defines a function expression?<br><br>",
  "quesType": "fill",
  "ans": "function"
},
{
  "ques": "How to concatenate two strings?<br><br>",
  "quesType": "fill",
  "ans": "concat()"
},
{
  "ques": "Which operator is used to assign a value?<br><br>",
  "quesType": "fill",
  "ans": "="
},
{
  "ques": "Which method removes the last element from an array?<br><br>",
  "quesType": "fill",
  "ans": "pop()"
},
{
  "ques": "How to convert a number to a string?<br><br>",
  "quesType": "fill",
  "ans": "toString()"
},
{
  "ques": "Which symbol is used for strict inequality?<br><br>",
  "quesType": "fill",
  "ans": "!=="
},
{
  "ques": "Which loop executes at least once, regardless of condition?<br><br>",
  "quesType": "fill",
  "ans": "do...while"
},
{
  "ques": "What keyword is used to import modules?<br><br>",
  "quesType": "fill",
  "ans": "import"
},
{
  "ques": "Which method adds elements at the end of an array?<br><br>",
  "quesType": "fill",
  "ans": "push()"
},
{
  "ques": "How do you access the first element of an array named 'arr'?<br><br>",
  "quesType": "fill",
  "ans": "arr[0]"
},
{
  "ques": "Which event triggers when a user clicks on an element?<br><br>",
  "quesType": "fill",
  "ans": "click"
},
{
  "ques": "How to declare an arrow function?<br><br>",
  "quesType": "fill",
  "ans": "() => {}"
},
{
  "ques": "What does `NaN` stand for?<br><br>",
  "quesType": "fill",
  "ans": "Not a Number"
}
,
{
  "ques": "What will `typeof []` output?<br><br>",
  "quesType": "mcq",
  "op1": "object",
  "op2": "array",
  "op3": "undefined",
  "op4": "null",
  "ans": "object"
},
{
  "ques": "Which of these keywords is used to create a constant variable?<br><br>",
  "quesType": "mcq",
  "op1": "const",
  "op2": "let",
  "op3": "var",
  "op4": "static",
  "ans": "const"
},
{
  "ques": "What does `parseInt('10abc')` return?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "NaN",
  "op3": "'10abc'",
  "op4": "undefined",
  "ans": "10"
},
{
  "ques": "What is the output?<br><br>console.log('5' + 3);",
  "quesType": "mcq",
  "op1": "'53'",
  "op2": "8",
  "op3": "'8'",
  "op4": "NaN",
  "ans": "'53'"
},
{
  "ques": "Which of the following is NOT a JavaScript data type?<br><br>",
  "quesType": "mcq",
  "op1": "integer",
  "op2": "string",
  "op3": "boolean",
  "op4": "object",
  "ans": "integer"
},
{
  "ques": "Which method is used to add one or more elements to the beginning of an array?<br><br>",
  "quesType": "mcq",
  "op1": "unshift()",
  "op2": "push()",
  "op3": "shift()",
  "op4": "pop()",
  "ans": "unshift()"
},
{
  "ques": "How do you declare a function in JavaScript?<br><br>",
  "quesType": "mcq",
  "op1": "function myFunc() {}",
  "op2": "func myFunc() {}",
  "op3": "function: myFunc() {}",
  "op4": "declare function myFunc() {}",
  "ans": "function myFunc() {}"
},
{
  "ques": "What is the output?<br><br>console.log(Boolean('0'));",
  "quesType": "mcq",
  "op1": "true",
  "op2": "false",
  "op3": "NaN",
  "op4": "undefined",
  "ans": "true"
},
{
  "ques": "Which operator is used for logical OR?<br><br>",
  "quesType": "mcq",
  "op1": "||",
  "op2": "&&",
  "op3": "|",
  "op4": "&",
  "ans": "||"
},
{
  "ques": "What will `console.log(1 + '1' - 0);` output?<br><br>",
  "quesType": "mcq",
  "op1": "11",
  "op2": "2",
  "op3": "NaN",
  "op4": "undefined",
  "ans": "2"
},
{
  "ques": "Which method creates a new array with all elements that pass a test?<br><br>",
  "quesType": "mcq",
  "op1": "filter()",
  "op2": "map()",
  "op3": "reduce()",
  "op4": "forEach()",
  "ans": "filter()"
},
{
  "ques": "How to stop a loop early?<br><br>",
  "quesType": "mcq",
  "op1": "break",
  "op2": "continue",
  "op3": "stop",
  "op4": "exit",
  "ans": "break"
},
{
  "ques": "What is the output?<br><br>console.log('foo' === 'foo');",
  "quesType": "mcq",
  "op1": "true",
  "op2": "false",
  "op3": "undefined",
  "op4": "NaN",
  "ans": "true"
},
{
  "ques": "Which method converts a JSON string into an object?<br><br>",
  "quesType": "mcq",
  "op1": "JSON.parse()",
  "op2": "JSON.stringify()",
  "op3": "parse()",
  "op4": "stringify()",
  "ans": "JSON.parse()"
},
{
  "ques": "Which method executes a function repeatedly at specified intervals?<br><br>",
  "quesType": "mcq",
  "op1": "setInterval()",
  "op2": "setTimeout()",
  "op3": "clearInterval()",
  "op4": "repeat()",
  "ans": "setInterval()"
},
{
  "ques": "What will `console.log(typeof undefined);` output?<br><br>",
  "quesType": "mcq",
  "op1": "undefined",
  "op2": "null",
  "op3": "object",
  "op4": "boolean",
  "ans": "undefined"
},
{
  "ques": "What will `console.log(!!0);` output?<br><br>",
  "quesType": "mcq",
  "op1": "false",
  "op2": "true",
  "op3": "0",
  "op4": "NaN",
  "ans": "false"
},
{
  "ques": "How to create a copy of an array?<br><br>",
  "quesType": "mcq",
  "op1": "slice()",
  "op2": "splice()",
  "op3": "copy()",
  "op4": "clone()",
  "ans": "slice()"
},
{
  "ques": "Which keyword is used to declare variables that are limited to block scope?<br><br>",
  "quesType": "mcq",
  "op1": "let",
  "op2": "var",
  "op3": "const",
  "op4": "static",
  "ans": "let"
}
,
{
  "ques": "Which method adds an element to the end of an array?<br><br>",
  "quesType": "mcq",
  "op1": "push()",
  "op2": "pop()",
  "op3": "shift()",
  "op4": "unshift()",
  "ans": "push()"
},
{
  "ques": "How to create an array with 5 empty elements?<br><br>",
  "quesType": "mcq",
  "op1": "new Array(5)",
  "op2": "Array(5).fill()",
  "op3": "[5]",
  "op4": "Array.create(5)",
  "ans": "new Array(5)"
},
{
  "ques": "Which method returns the first element in array that satisfies a condition?<br><br>",
  "quesType": "mcq",
  "op1": "find()",
  "op2": "filter()",
  "op3": "map()",
  "op4": "reduce()",
  "ans": "find()"
},
{
  "ques": "What does 'typeof null' return?<br><br>",
  "quesType": "mcq",
  "op1": "'null'",
  "op2": "'object'",
  "op3": "'undefined'",
  "op4": "'boolean'",
  "ans": "'object'"
},
{
  "ques": "How to convert JSON string to JavaScript object?<br><br>",
  "quesType": "mcq",
  "op1": "JSON.parse()",
  "op2": "JSON.stringify()",
  "op3": "parseJSON()",
  "op4": "toObject()",
  "ans": "JSON.parse()"
},
{
  "ques": "How to stop event propagation?<br><br>",
  "quesType": "mcq",
  "op1": "event.stopPropagation()",
  "op2": "event.preventDefault()",
  "op3": "event.stop()",
  "op4": "event.cancel()",
  "ans": "event.stopPropagation()"
},
{
  "ques": "What will '0 == false' evaluate to?<br><br>",
  "quesType": "mcq",
  "op1": "true",
  "op2": "false",
  "op3": "undefined",
  "op4": "null",
  "ans": "true"
},
{
  "ques": "What is NaN isNaN() used for?<br><br>",
  "quesType": "mcq",
  "op1": "Checks if value is Not a Number",
  "op2": "Checks if value is a Number",
  "op3": "Converts value to Number",
  "op4": "Returns NaN",
  "ans": "Checks if value is Not a Number"
},
{
  "ques": "Which method returns new array with elements modified?<br><br>",
  "quesType": "mcq",
  "op1": "map()",
  "op2": "forEach()",
  "op3": "filter()",
  "op4": "reduce()",
  "ans": "map()"
},
{
  "ques": "What keyword declares a variable with block scope?<br><br>",
  "quesType": "mcq",
  "op1": "let",
  "op2": "var",
  "op3": "const",
  "op4": "static",
  "ans": "let"
},
{
  "ques": "Which operator is used to assign default value?<br><br>",
  "quesType": "mcq",
  "op1": "||",
  "op2": "&&",
  "op3": "??",
  "op4": "?",
  "ans": "||"
},
{
  "ques": "Which method flattens nested arrays?<br><br>",
  "quesType": "mcq",
  "op1": "flat()",
  "op2": "flatten()",
  "op3": "reduce()",
  "op4": "concat()",
  "ans": "flat()"
},
{
  "ques": "Which method removes first element of array?<br><br>",
  "quesType": "mcq",
  "op1": "shift()",
  "op2": "pop()",
  "op3": "splice()",
  "op4": "slice()",
  "ans": "shift()"
},
{
  "ques": "What does 'async' keyword indicate?<br><br>",
  "quesType": "mcq",
  "op1": "Function returns a promise",
  "op2": "Function runs synchronously",
  "op3": "Function is deprecated",
  "op4": "Function throws error",
  "ans": "Function returns a promise"
},
{
  "ques": "How to declare a generator function?<br><br>",
  "quesType": "mcq",
  "op1": "function* name(){}",
  "op2": "function name*(){}",
  "op3": "generator function name(){}",
  "op4": "function name(){}*",
  "ans": "function* name(){}"
},
{
  "ques": "Which symbol is used for template literals?<br><br>",
  "quesType": "mcq",
  "op1": "`backticks`",
  "op2": "'single quotes'",
  "op3": "\"double quotes\"",
  "op4": "~tilde~",
  "ans": "`backticks`"
},
{
  "ques": "Which method checks if string contains substring?<br><br>",
  "quesType": "mcq",
  "op1": "includes()",
  "op2": "contains()",
  "op3": "has()",
  "op4": "indexOf()",
  "ans": "includes()"
},
{
  "ques": "Which function is used to parse URL parameters?<br><br>",
  "quesType": "mcq",
  "op1": "URLSearchParams",
  "op2": "URL.parse()",
  "op3": "parseURL()",
  "op4": "getParams()",
  "ans": "URLSearchParams"
},
{
  "ques": "What does 'void 0' return?<br><br>",
  "quesType": "mcq",
  "op1": "undefined",
  "op2": "null",
  "op3": "0",
  "op4": "false",
  "ans": "undefined"
},
{
  "ques": "Which method merges properties of objects?<br><br>",
  "quesType": "mcq",
  "op1": "Object.assign()",
  "op2": "Object.merge()",
  "op3": "Object.extend()",
  "op4": "Object.copy()",
  "ans": "Object.assign()"
}
,
{
  "ques": "Add element to end of array?<br><br>",
  "quesType": "fill",
  "ans": "push"
},
{
  "ques": "Create array with 5 empty elements?<br><br>",
  "quesType": "fill",
  "ans": "new Array(5)"
},
{
  "ques": "Return first element matching condition?<br><br>",
  "quesType": "fill",
  "ans": "find"
},
{
  "ques": "typeof null returns?<br><br>",
  "quesType": "fill",
  "ans": "object"
},
{
  "ques": "Convert JSON string to object?<br><br>",
  "quesType": "fill",
  "ans": "JSON.parse"
},
{
  "ques": "Stop event propagation?<br><br>",
  "quesType": "fill",
  "ans": "event.stopPropagation"
},
{
  "ques": "0 == false evaluates to?<br><br>",
  "quesType": "fill",
  "ans": "true"
},
{
  "ques": "Check if value is NaN?<br><br>",
  "quesType": "fill",
  "ans": "isNaN"
},
{
  "ques": "Return new array with modified elements?<br><br>",
  "quesType": "fill",
  "ans": "map"
},
{
  "ques": "Declare block scoped variable?<br><br>",
  "quesType": "fill",
  "ans": "let"
},
{
  "ques": "Assign default value operator?<br><br>",
  "quesType": "fill",
  "ans": "||"
},
{
  "ques": "Flatten nested arrays?<br><br>",
  "quesType": "fill",
  "ans": "flat"
},
{
  "ques": "Remove first element from array?<br><br>",
  "quesType": "fill",
  "ans": "shift"
},
{
  "ques": "Async function keyword?<br><br>",
  "quesType": "fill",
  "ans": "async"
},
{
  "ques": "Declare generator function?<br><br>",
  "quesType": "fill",
  "ans": "function*"
},
{
  "ques": "Template literals use?<br><br>",
  "quesType": "fill",
  "ans": "backticks"
},
{
  "ques": "Check substring in string?<br><br>",
  "quesType": "fill",
  "ans": "includes"
},
{
  "ques": "Parse URL parameters?<br><br>",
  "quesType": "fill",
  "ans": "URLSearchParams"
},
{
  "ques": "'void 0' returns?<br><br>",
  "quesType": "fill",
  "ans": "undefined"
},
{
  "ques": "Merge object properties?<br><br>",
  "quesType": "fill",
  "ans": "Object.assign"
}
,
{
  "ques": "How do you create an arrow function?<br><br>",
  "quesType": "fill",
  "ans": "() => {}"
},
{
  "ques": "Method to convert JSON string to JavaScript object?<br><br>",
  "quesType": "fill",
  "ans": "JSON.parse()"
},
{
  "ques": "Method to convert JavaScript object to JSON string?<br><br>",
  "quesType": "fill",
  "ans": "JSON.stringify()"
},
{
  "ques": "Keyword to declare block-scoped variable?<br><br>",
  "quesType": "fill",
  "ans": "let"
},
{
  "ques": "How to freeze an object to prevent modifications?<br><br>",
  "quesType": "fill",
  "ans": "Object.freeze()"
},
{
  "ques": "Method to add element at the end of an array?<br><br>",
  "quesType": "fill",
  "ans": "push()"
},
{
  "ques": "Method to remove element from the end of an array?<br><br>",
  "quesType": "fill",
  "ans": "pop()"
},
{
  "ques": "How to get keys of an object?<br><br>",
  "quesType": "fill",
  "ans": "Object.keys()"
},
{
  "ques": "Method to test whether a string matches a regex?<br><br>",
  "quesType": "fill",
  "ans": "test()"
},
{
  "ques": "Method to replace substring in a string?<br><br>",
  "quesType": "fill",
  "ans": "replace()"
},
{
  "ques": "Method to convert string to lowercase?<br><br>",
  "quesType": "fill",
  "ans": "toLowerCase()"
},
{
  "ques": "Method to convert string to uppercase?<br><br>",
  "quesType": "fill",
  "ans": "toUpperCase()"
},
{
  "ques": "How to create a deep copy of an object?<br><br>",
  "quesType": "fill",
  "ans": "JSON.parse(JSON.stringify())"
},
{
  "ques": "Method to remove the first element from an array?<br><br>",
  "quesType": "fill",
  "ans": "shift()"
},
{
  "ques": "Method to add element at the start of an array?<br><br>",
  "quesType": "fill",
  "ans": "unshift()"
},
{
  "ques": "Method to find substring in a string?<br><br>",
  "quesType": "fill",
  "ans": "indexOf()"
},
{
  "ques": "How to check if a variable is an array?<br><br>",
  "quesType": "fill",
  "ans": "Array.isArray()"
},
{
  "ques": "Keyword to declare constant?<br><br>",
  "quesType": "fill",
  "ans": "const"
},
{
  "ques": "Method to delay execution of code?<br><br>",
  "quesType": "fill",
  "ans": "setTimeout()"
},
{
  "ques": "Method to execute code repeatedly at intervals?<br><br>",
  "quesType": "fill",
  "ans": "setInterval()"
}
,
{
  "ques": "What is the output of 0 == '0'?<br><br>",
  "quesType": "mcq",
  "op1": "true",
  "op2": "false",
  "op3": "TypeError",
  "op4": "undefined",
  "ans": "true"
},
{
  "ques": "Which method removes the first element from an array?<br><br>",
  "quesType": "mcq",
  "op1": "shift()",
  "op2": "pop()",
  "op3": "slice()",
  "op4": "splice()",
  "ans": "shift()"
},
{
  "ques": "What will typeof NaN return?<br><br>",
  "quesType": "mcq",
  "op1": "number",
  "op2": "NaN",
  "op3": "undefined",
  "op4": "object",
  "ans": "number"
},
{
  "ques": "How to check if a value is strictly equal?<br><br>",
  "quesType": "mcq",
  "op1": "===",
  "op2": "==",
  "op3": "=",
  "op4": "!=",
  "ans": "==="
},
{
  "ques": "Which method serializes an object into JSON?<br><br>",
  "quesType": "mcq",
  "op1": "JSON.stringify()",
  "op2": "JSON.parse()",
  "op3": "toString()",
  "op4": "Object.toJSON()",
  "ans": "JSON.stringify()"
},
{
  "ques": "What does push() method do?<br><br>",
  "quesType": "mcq",
  "op1": "Adds element to end of array",
  "op2": "Removes last element",
  "op3": "Adds element to start",
  "op4": "Removes first element",
  "ans": "Adds element to end of array"
},
{
  "ques": "Which keyword declares a variable scoped to the block?<br><br>",
  "quesType": "mcq",
  "op1": "let",
  "op2": "var",
  "op3": "const",
  "op4": "static",
  "ans": "let"
},
{
  "ques": "What does unshift() method do?<br><br>",
  "quesType": "mcq",
  "op1": "Adds element at start of array",
  "op2": "Removes last element",
  "op3": "Removes first element",
  "op4": "Adds element at end",
  "ans": "Adds element at start of array"
},
{
  "ques": "What is the output of '5' + 3?<br><br>",
  "quesType": "mcq",
  "op1": "'53'",
  "op2": "8",
  "op3": "'8'",
  "op4": "TypeError",
  "ans": "'53'"
},
{
  "ques": "What is output of Boolean('')?<br><br>",
  "quesType": "mcq",
  "op1": "false",
  "op2": "true",
  "op3": "undefined",
  "op4": "null",
  "ans": "false"
},
{
  "ques": "Which method converts a string to lowercase?<br><br>",
  "quesType": "mcq",
  "op1": "toLowerCase()",
  "op2": "toUpperCase()",
  "op3": "lowerCase()",
  "op4": "lower()",
  "ans": "toLowerCase()"
},
{
  "ques": "What will be the result of 'hello'.replace('l', 'r')?<br><br>",
  "quesType": "mcq",
  "op1": "'herlo'",
  "op2": "'herro'",
  "op3": "'hello'",
  "op4": "'rerro'",
  "ans": "'herlo'"
},
{
  "ques": "Which method freezes an object?<br><br>",
  "quesType": "mcq",
  "op1": "Object.freeze()",
  "op2": "Object.lock()",
  "op3": "Object.prevent()",
  "op4": "Object.seal()",
  "ans": "Object.freeze()"
},
{
  "ques": "What does JSON.parse() do?<br><br>",
  "quesType": "mcq",
  "op1": "Converts JSON string to object",
  "op2": "Converts object to JSON string",
  "op3": "Parses XML",
  "op4": "Serializes object",
  "ans": "Converts JSON string to object"
},
{
  "ques": "Which method adds event handler to DOM element?<br><br>",
  "quesType": "mcq",
  "op1": "addEventListener()",
  "op2": "attachEvent()",
  "op3": "on()",
  "op4": "bind()",
  "ans": "addEventListener()"
},
{
  "ques": "What does trim() do on a string?<br><br>",
  "quesType": "mcq",
  "op1": "Removes whitespace from both ends",
  "op2": "Removes all whitespace",
  "op3": "Converts to uppercase",
  "op4": "Converts to lowercase",
  "ans": "Removes whitespace from both ends"
},
{
  "ques": "What is the output of [1,2,3].slice(1,2)?<br><br>",
  "quesType": "mcq",
  "op1": "[2]",
  "op2": "[1,2]",
  "op3": "[1,2,3]",
  "op4": "[3]",
  "ans": "[2]"
},
{
  "ques": "Which keyword declares a constant variable?<br><br>",
  "quesType": "mcq",
  "op1": "const",
  "op2": "let",
  "op3": "var",
  "op4": "constant",
  "ans": "const"
}
,
{
  "ques": "Which method merges two or more arrays?<br><br>",
  "quesType": "fill",
  "ans": "concat()"
},
{
  "ques": "How do you create an object literal?<br><br>",
  "quesType": "fill",
  "ans": "{}"
},
{
  "ques": "Which keyword declares a variable with function scope?<br><br>",
  "quesType": "fill",
  "ans": "var"
},
{
  "ques": "How do you convert a string to a floating-point number?<br><br>",
  "quesType": "fill",
  "ans": "parseFloat()"
},
{
  "ques": "What does `Array.isArray()` return?<br><br>",
  "quesType": "fill",
  "ans": "true or false"
},
{
  "ques": "Which method transforms each array element according to a function?<br><br>",
  "quesType": "fill",
  "ans": "map()"
},
{
  "ques": "Which operator is used to check equality without type coercion?<br><br>",
  "quesType": "fill",
  "ans": "==="
},
{
  "ques": "How do you add a new property to an object?<br><br>",
  "quesType": "fill",
  "ans": "object.property = value"
},
{
  "ques": "Which method converts a string to uppercase?<br><br>",
  "quesType": "fill",
  "ans": "toUpperCase()"
},
{
  "ques": "How do you remove the first element from an array?<br><br>",
  "quesType": "fill",
  "ans": "shift()"
},
{
  "ques": "Which keyword is used to define a class?<br><br>",
  "quesType": "fill",
  "ans": "class"
},
{
  "ques": "How do you write an anonymous function?<br><br>",
  "quesType": "fill",
  "ans": "function() {}"
},
{
  "ques": "What symbol is used to access a property of an object?<br><br>",
  "quesType": "fill",
  "ans": "."
},
{
  "ques": "How do you check if a value is NaN?<br><br>",
  "quesType": "fill",
  "ans": "isNaN()"
},
{
  "ques": "Which method removes elements from an array and optionally inserts new elements?<br><br>",
  "quesType": "fill",
  "ans": "splice()"
},
{
  "ques": "What does the `typeof null` return?<br><br>",
  "quesType": "fill",
  "ans": "object"
},
{
  "ques": "How do you declare a template literal?<br><br>",
  "quesType": "fill",
  "ans": "``"
},
{
  "ques": "What is the output of `typeof function() {}`?<br><br>",
  "quesType": "fill",
  "ans": "function"
},
{
  "ques": "Which method adds an element at the beginning of an array?<br><br>",
  "quesType": "fill",
  "ans": "unshift()"
},
{
  "ques": "How do you write a multi-line comment?<br><br>",
  "quesType": "fill",
  "ans": "/* comment */"
}
,
{
  "ques": "What will `console.log(0 == false);` output?<br><br>",
  "quesType": "mcq",
  "op1": "true",
  "op2": "false",
  "op3": "undefined",
  "op4": "NaN",
  "ans": "true"
},
{
  "ques": "Which of these will create an empty array?<br><br>",
  "quesType": "mcq",
  "op1": "[]",
  "op2": "{}",
  "op3": "array()",
  "op4": "new Array[]",
  "ans": "[]"
},
{
  "ques": "What does `JSON.stringify()` do?<br><br>",
  "quesType": "mcq",
  "op1": "Converts an object to a JSON string",
  "op2": "Parses a JSON string to object",
  "op3": "Serializes a string",
  "op4": "None of the above",
  "ans": "Converts an object to a JSON string"
},
{
  "ques": "Which of the following is NOT a valid variable name?<br><br>",
  "quesType": "mcq",
  "op1": "2variable",
  "op2": "_variable",
  "op3": "$variable",
  "op4": "variable2",
  "ans": "2variable"
},
{
  "ques": "What is the output?<br><br>console.log(typeof NaN);",
  "quesType": "mcq",
  "op1": "number",
  "op2": "NaN",
  "op3": "undefined",
  "op4": "object",
  "ans": "number"
},
{
  "ques": "How to write an async function?<br><br>",
  "quesType": "mcq",
  "op1": "async function myFunc() {}",
  "op2": "function async myFunc() {}",
  "op3": "function myFunc() async {}",
  "op4": "async: function myFunc() {}",
  "ans": "async function myFunc() {}"
},
{
  "ques": "What will `console.log(3 && 0);` output?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "3",
  "op3": "true",
  "op4": "false",
  "ans": "0"
},
{
  "ques": "Which method adds elements to an array?<br><br>",
  "quesType": "mcq",
  "op1": "push()",
  "op2": "pop()",
  "op3": "shift()",
  "op4": "slice()",
  "ans": "push()"
},
{
  "ques": "What is the value of `x` after `let x = 5; x += 3;`?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "53",
  "op3": "5",
  "op4": "3",
  "ans": "8"
},
{
  "ques": "Which operator is used to check if two variables are NOT equal?<br><br>",
  "quesType": "mcq",
  "op1": "!=",
  "op2": "==",
  "op3": "=",
  "op4": "!==",
  "ans": "!="
},
{
  "ques": "What is the output?<br><br>console.log('Hello' === 'hello');",
  "quesType": "mcq",
  "op1": "false",
  "op2": "true",
  "op3": "undefined",
  "op4": "NaN",
  "ans": "false"
},
{
  "ques": "Which of these is the correct way to declare a function?<br><br>",
  "quesType": "mcq",
  "op1": "function myFunc() {}",
  "op2": "func myFunc() {}",
  "op3": "function: myFunc() {}",
  "op4": "declare function myFunc() {}",
  "ans": "function myFunc() {}"
},
{
  "ques": "How do you check if a value is an array?<br><br>",
  "quesType": "mcq",
  "op1": "Array.isArray()",
  "op2": "isArray()",
  "op3": "typeof",
  "op4": "instanceof",
  "ans": "Array.isArray()"
},
{
  "ques": "What will `console.log(undefined == null);` output?<br><br>",
  "quesType": "mcq",
  "op1": "true",
  "op2": "false",
  "op3": "undefined",
  "op4": "null",
  "ans": "true"
},
{
  "ques": "Which method removes whitespace from both ends of a string?<br><br>",
  "quesType": "mcq",
  "op1": "trim()",
  "op2": "slice()",
  "op3": "split()",
  "op4": "replace()",
  "ans": "trim()"
},
{
  "ques": "What is the output?<br><br>console.log('5' - 3);",
  "quesType": "mcq",
  "op1": "2",
  "op2": "'53'",
  "op3": "NaN",
  "op4": "undefined",
  "ans": "2"
},
{
  "ques": "Which keyword is used to declare a variable that can be reassigned?<br><br>",
  "quesType": "mcq",
  "op1": "let",
  "op2": "const",
  "op3": "var",
  "op4": "static",
  "ans": "let"
},
{
  "ques": "What is the output?<br><br>console.log(typeof null);",
  "quesType": "mcq",
  "op1": "object",
  "op2": "null",
  "op3": "undefined",
  "op4": "boolean",
  "ans": "object"
},
{
  "ques": "Which statement is used to stop a loop?<br><br>",
  "quesType": "mcq",
  "op1": "break",
  "op2": "continue",
  "op3": "exit",
  "op4": "stop",
  "ans": "break"
},
{
  "ques": "What is the value of `Boolean('')`?<br><br>",
  "quesType": "mcq",
  "op1": "false",
  "op2": "true",
  "op3": "undefined",
  "op4": "null",
  "ans": "false"
}

]

let codingjs3Arr=[
  {
  "ques": "What keyword is used to create a generator function?<br><br>",
  "quesType": "fill",
  "ans": "function*"
},
{
  "ques": "Which method creates a shallow copy of an array?<br><br>",
  "quesType": "fill",
  "ans": "slice()"
},
{
  "ques": "How to create a Promise that resolves after 2 seconds?<br><br>",
  "quesType": "fill",
  "ans": "new Promise(resolve => setTimeout(resolve, 2000))"
},
{
  "ques": "How to extract values from an object using syntax?<br><br>",
  "quesType": "fill",
  "ans": "destructuring"
},
{
  "ques": "Which method merges two or more objects?<br><br>",
  "quesType": "fill",
  "ans": "Object.assign()"
},
{
  "ques": "How to check if a variable is undefined?<br><br>",
  "quesType": "fill",
  "ans": "typeof variable === 'undefined'"
},
{
  "ques": "How to create a class in JavaScript?<br><br>",
  "quesType": "fill",
  "ans": "class ClassName {}"
},
{
  "ques": "What is the default value of an uninitialized variable?<br><br>",
  "quesType": "fill",
  "ans": "undefined"
},
{
  "ques": "Which method removes duplicates from an array?<br><br>",
  "quesType": "fill",
  "ans": "new Set()"
},
{
  "ques": "How to define an async function?<br><br>",
  "quesType": "fill",
  "ans": "async function() {}"
},
{
  "ques": "How to handle errors in async/await?<br><br>",
  "quesType": "fill",
  "ans": "try...catch"
},
{
  "ques": "How to convert a string to a number?<br><br>",
  "quesType": "fill",
  "ans": "Number()"
},
{
  "ques": "Which operator is used to spread elements?<br><br>",
  "quesType": "fill",
  "ans": "..."
},
{
  "ques": "How to call a function with a given this value?<br><br>",
  "quesType": "fill",
  "ans": "call()"
},
{
  "ques": "How to create a private variable inside a class?<br><br>",
  "quesType": "fill",
  "ans": "#variableName"
},
{
  "ques": "How to create a Proxy object?<br><br>",
  "quesType": "fill",
  "ans": "new Proxy(target, handler)"
},
{
  "ques": "How to test if an array contains an element?<br><br>",
  "quesType": "fill",
  "ans": "includes()"
},
{
  "ques": "What does the 'void' operator return?<br><br>",
  "quesType": "fill",
  "ans": "undefined"
},
{
  "ques": "How to memoize a function?<br><br>",
  "quesType": "fill",
  "ans": "cache results and return from cache"
},
{
  "ques": "What is the difference between == and ===?<br><br>",
  "quesType": "fill",
  "ans": "== compares values, === compares values and types"
}
,
{
  "ques": "What is a generator function?<br><br>",
  "quesType": "mcq",
  "op1": "A function that can pause and resume",
  "op2": "A function that returns a promise",
  "op3": "A function that executes asynchronously",
  "op4": "A function that throws errors",
  "ans": "A function that can pause and resume"
},
{
  "ques": "How do you create an instance of a class?<br><br>",
  "quesType": "mcq",
  "op1": "new ClassName()",
  "op2": "ClassName()",
  "op3": "class ClassName {}",
  "op4": "instance ClassName()",
  "ans": "new ClassName()"
},
{
  "ques": "What does 'this' refer to in an arrow function?<br><br>",
  "quesType": "mcq",
  "op1": "Lexical this (parent scope)",
  "op2": "Global object",
  "op3": "Undefined",
  "op4": "Function itself",
  "ans": "Lexical this (parent scope)"
},
{
  "ques": "Which is NOT a way to copy objects?<br><br>",
  "quesType": "mcq",
  "op1": "Object.clone()",
  "op2": "Object.assign()",
  "op3": "Spread operator",
  "op4": "JSON.parse(JSON.stringify())",
  "ans": "Object.clone()"
},
{
  "ques": "How to handle rejected Promises?<br><br>",
  "quesType": "mcq",
  "op1": "catch()",
  "op2": "then()",
  "op3": "finally()",
  "op4": "resolve()",
  "ans": "catch()"
},
{
  "ques": "Which of the following creates a private class field?<br><br>",
  "quesType": "mcq",
  "op1": "#privateField",
  "op2": "private privateField",
  "op3": "_privateField",
  "op4": "var privateField",
  "ans": "#privateField"
},
{
  "ques": "What is the output of `typeof null`?<br><br>",
  "quesType": "mcq",
  "op1": "object",
  "op2": "null",
  "op3": "undefined",
  "op4": "boolean",
  "ans": "object"
},
{
  "ques": "Which method creates a shallow copy of an array?<br><br>",
  "quesType": "mcq",
  "op1": "slice()",
  "op2": "splice()",
  "op3": "map()",
  "op4": "filter()",
  "ans": "slice()"
},
{
  "ques": "What will `Promise.resolve(5)` return?<br><br>",
  "quesType": "mcq",
  "op1": "A Promise resolved with 5",
  "op2": "Number 5",
  "op3": "Undefined",
  "op4": "Error",
  "ans": "A Promise resolved with 5"
},
{
  "ques": "How to check if a variable is NaN?<br><br>",
  "quesType": "mcq",
  "op1": "isNaN()",
  "op2": "Number.isNaN()",
  "op3": "typeof NaN",
  "op4": "NaN === NaN",
  "ans": "Number.isNaN()"
},
{
  "ques": "What does the spread operator do?<br><br>",
  "quesType": "mcq",
  "op1": "Expands iterable into individual elements",
  "op2": "Concatenates arrays",
  "op3": "Clones objects deeply",
  "op4": "Converts array to string",
  "ans": "Expands iterable into individual elements"
},
{
  "ques": "Which statement is true about async functions?<br><br>",
  "quesType": "mcq",
  "op1": "They always return a Promise",
  "op2": "They return undefined",
  "op3": "They block the main thread",
  "op4": "They execute synchronously",
  "ans": "They always return a Promise"
},
{
  "ques": "How to memoize a function?<br><br>",
  "quesType": "mcq",
  "op1": "Cache results and return from cache",
  "op2": "Rewrite function body",
  "op3": "Call function recursively",
  "op4": "Use setTimeout",
  "ans": "Cache results and return from cache"
},
{
  "ques": "What is the output of `[...new Set([1,2,2,3])]`?<br><br>",
  "quesType": "mcq",
  "op1": "[1, 2, 3]",
  "op2": "[1, 2, 2, 3]",
  "op3": "[3]",
  "op4": "[1, 3]",
  "ans": "[1, 2, 3]"
},
{
  "ques": "Which keyword creates a block-scoped constant?<br><br>",
  "quesType": "mcq",
  "op1": "const",
  "op2": "let",
  "op3": "var",
  "op4": "constant",
  "ans": "const"
},
{
  "ques": "How to check if an object has a property?<br><br>",
  "quesType": "mcq",
  "op1": "hasOwnProperty()",
  "op2": "in operator",
  "op3": "propertyExists()",
  "op4": "exists()",
  "ans": "hasOwnProperty()"
},
{
  "ques": "What does the 'void' operator return?<br><br>",
  "quesType": "mcq",
  "op1": "undefined",
  "op2": "null",
  "op3": "NaN",
  "op4": "0",
  "ans": "undefined"
},
{
  "ques": "How to stop event propagation?<br><br>",
  "quesType": "mcq",
  "op1": "event.stopPropagation()",
  "op2": "event.preventDefault()",
  "op3": "event.cancel()",
  "op4": "event.stop()",
  "ans": "event.stopPropagation()"
},
{
  "ques": "What is the output of `typeof async function() {}`?<br><br>",
  "quesType": "mcq",
  "op1": "function",
  "op2": "asyncfunction",
  "op3": "object",
  "op4": "promise",
  "ans": "function"
}
,
{
  "ques": "What is the output of 'typeof NaN'?<br><br>",
  "quesType": "mcq",
  "op1": "'number'",
  "op2": "'NaN'",
  "op3": "'undefined'",
  "op4": "'object'",
  "ans": "'number'"
},
{
  "ques": "Which method prevents an object from being extended?<br><br>",
  "quesType": "mcq",
  "op1": "Object.preventExtensions()",
  "op2": "Object.freeze()",
  "op3": "Object.seal()",
  "op4": "Object.lock()",
  "ans": "Object.preventExtensions()"
},
{
  "ques": "What does the 'void' operator do?<br><br>",
  "quesType": "mcq",
  "op1": "Evaluates expression and returns undefined",
  "op2": "Stops function execution",
  "op3": "Converts value to boolean",
  "op4": "Throws an error",
  "ans": "Evaluates expression and returns undefined"
},
{
  "ques": "Which symbol is used for private class fields in modern JavaScript?<br><br>",
  "quesType": "mcq",
  "op1": "#",
  "op2": "@",
  "op3": "$",
  "op4": "_",
  "ans": "#"
},
{
  "ques": "What will this code output?<br><br>console.log([] + []);",
  "quesType": "mcq",
  "op1": "Empty string ''",
  "op2": "[]",
  "op3": "undefined",
  "op4": "Error",
  "ans": "Empty string ''"
},
{
  "ques": "How to deep clone an object in JavaScript?<br><br>",
  "quesType": "mcq",
  "op1": "JSON.parse(JSON.stringify(obj))",
  "op2": "Object.assign({}, obj)",
  "op3": "Spread operator {...obj}",
  "op4": "Object.create(obj)",
  "ans": "JSON.parse(JSON.stringify(obj))"
},
{
  "ques": "Which method is used to schedule a function to run after the current event loop tick?<br><br>",
  "quesType": "mcq",
  "op1": "setImmediate()",
  "op2": "setTimeout(fn, 0)",
  "op3": "process.nextTick()",
  "op4": "requestAnimationFrame()",
  "ans": "process.nextTick()"
},
{
  "ques": "What is the result of '0.1 + 0.2 === 0.3'?<br><br>",
  "quesType": "mcq",
  "op1": "false",
  "op2": "true",
  "op3": "undefined",
  "op4": "Throws error",
  "ans": "false"
},
{
  "ques": "Which of the following is true about JavaScript event loop?<br><br>",
  "quesType": "mcq",
  "op1": "Microtasks run before macrotasks",
  "op2": "Macrotasks run before microtasks",
  "op3": "Microtasks and macrotasks run in parallel",
  "op4": "No such thing as microtasks in JS",
  "ans": "Microtasks run before macrotasks"
},
{
  "ques": "How can you create a Symbol with a description?<br><br>",
  "quesType": "mcq",
  "op1": "Symbol('description')",
  "op2": "new Symbol('description')",
  "op3": "Symbol.create('description')",
  "op4": "Symbol.description('desc')",
  "ans": "Symbol('description')"
},
{
  "ques": "What will this print?<br><br>console.log(typeof null);",
  "quesType": "mcq",
  "op1": "'object'",
  "op2": "'null'",
  "op3": "'undefined'",
  "op4": "'boolean'",
  "ans": "'object'"
},
{
  "ques": "What will be output?<br><br>console.log(+'42');",
  "quesType": "mcq",
  "op1": "42 (number)",
  "op2": "'42' (string)",
  "op3": "NaN",
  "op4": "undefined",
  "ans": "42 (number)"
},
{
  "ques": "How do you create a private method inside a JavaScript class?<br><br>",
  "quesType": "mcq",
  "op1": "Prefix method name with #",
  "op2": "Prefix method name with _",
  "op3": "Use function keyword inside class",
  "op4": "Declare method as private keyword",
  "ans": "Prefix method name with #"
},
{
  "ques": "Which of the following will create an iterator?<br><br>",
  "quesType": "mcq",
  "op1": "A generator function",
  "op2": "A normal function",
  "op3": "An async function",
  "op4": "An arrow function",
  "ans": "A generator function"
},
{
  "ques": "What does the 'in' operator check?<br><br>",
  "quesType": "mcq",
  "op1": "Property existence in object",
  "op2": "Array length",
  "op3": "Variable type",
  "op4": "Function presence",
  "ans": "Property existence in object"
},
{
  "ques": "How to create a promise that rejects after 1 second?<br><br>",
  "quesType": "mcq",
  "op1": "new Promise((_, reject) => setTimeout(() => reject('Error'), 1000))",
  "op2": "Promise.reject('Error')",
  "op3": "setTimeout(Promise.reject, 1000)",
  "op4": "new Promise.reject('Error')",
  "ans": "new Promise((_, reject) => setTimeout(() => reject('Error'), 1000))"
},
{
  "ques": "What will this output?<br><br>console.log(typeof (function(){}));",
  "quesType": "mcq",
  "op1": "'function'",
  "op2": "'object'",
  "op3": "'undefined'",
  "op4": "'class'",
  "ans": "'function'"
},
{
  "ques": "Which method converts a Map to an array?<br><br>",
  "quesType": "mcq",
  "op1": "Array.from(map)",
  "op2": "map.toArray()",
  "op3": "map.entries()",
  "op4": "map.values()",
  "ans": "Array.from(map)"
},
{
  "ques": "Which statement is true about WeakMap?<br><br>",
  "quesType": "mcq",
  "op1": "WeakMap keys must be objects",
  "op2": "WeakMap can use primitives as keys",
  "op3": "WeakMap stores strong references",
  "op4": "WeakMap is iterable",
  "ans": "WeakMap keys must be objects"
}
,
{
  "ques": "Output type of NaN?<br><br>",
  "quesType": "fill",
  "ans": "number"
},
{
  "ques": "Prevent object extension method?<br><br>",
  "quesType": "fill",
  "ans": "Object.preventExtensions"
},
{
  "ques": "'void' operator returns?<br><br>",
  "quesType": "fill",
  "ans": "undefined"
},
{
  "ques": "Private class field prefix?<br><br>",
  "quesType": "fill",
  "ans": "#"
},
{
  "ques": "Output of [] + []?<br><br>",
  "quesType": "fill",
  "ans": ""
},
{
  "ques": "Deep clone object method?<br><br>",
  "quesType": "fill",
  "ans": "JSON.parse(JSON.stringify(obj))"
},
{
  "ques": "Schedule after current tick?<br><br>",
  "quesType": "fill",
  "ans": "process.nextTick"
},
{
  "ques": "Result of 0.1 + 0.2 === 0.3?<br><br>",
  "quesType": "fill",
  "ans": "false"
},
{
  "ques": "Which runs before macrotasks?<br><br>",
  "quesType": "fill",
  "ans": "microtasks"
},
{
  "ques": "Create symbol with description?<br><br>",
  "quesType": "fill",
  "ans": "Symbol('description')"
},
{
  "ques": "typeof null returns?<br><br>",
  "quesType": "fill",
  "ans": "object"
},
{
  "ques": "Convert string to number using unary plus?<br><br>",
  "quesType": "fill",
  "ans": "+"
},
{
  "ques": "Private method prefix in class?<br><br>",
  "quesType": "fill",
  "ans": "#"
},
{
  "ques": "Create iterator using?<br><br>",
  "quesType": "fill",
  "ans": "generator function"
},
{
  "ques": "'in' operator checks?<br><br>",
  "quesType": "fill",
  "ans": "property existence"
},
{
  "ques": "Create promise rejecting in 1 second?<br><br>",
  "quesType": "fill",
  "ans": "new Promise((_, reject) => setTimeout(() => reject('Error'), 1000))"
},
{
  "ques": "typeof function returns?<br><br>",
  "quesType": "fill",
  "ans": "function"
},
{
  "ques": "Convert Map to array?<br><br>",
  "quesType": "fill",
  "ans": "Array.from"
},
{
  "ques": "WeakMap keys must be?<br><br>",
  "quesType": "fill",
  "ans": "objects"
}
,
{
  "ques": "What is the output of this code?<br><br>console.log(typeof NaN);",
  "quesType": "fill",
  "ans": "number"
},
{
  "ques": "Which method is used to create a shallow copy of an array?<br><br>",
  "quesType": "fill",
  "ans": "slice()"
},
{
  "ques": "How do you declare a generator function?<br><br>",
  "quesType": "fill",
  "ans": "function*"
},
{
  "ques": "Which method is used to deep clone an object (commonly)?<br><br>",
  "quesType": "fill",
  "ans": "JSON.parse(JSON.stringify())"
},
{
  "ques": "What is the value of `typeof Symbol()`?<br><br>",
  "quesType": "fill",
  "ans": "symbol"
},
{
  "ques": "How do you create a private field in a class?<br><br>",
  "quesType": "fill",
  "ans": "#fieldName"
},
{
  "ques": "What does the `bind()` method do?<br><br>",
  "quesType": "fill",
  "ans": "Creates a new function with a fixed this value"
},
{
  "ques": "How do you write a Promise that immediately resolves with value 42?<br><br>",
  "quesType": "fill",
  "ans": "Promise.resolve(42)"
},
{
  "ques": "What keyword is used to pause and resume generator functions?<br><br>",
  "quesType": "fill",
  "ans": "yield"
},
{
  "ques": "What is the output of `typeof null`?<br><br>",
  "quesType": "fill",
  "ans": "object"
},
{
  "ques": "How do you check if an object has a property 'foo'?<br><br>",
  "quesType": "fill",
  "ans": "object.hasOwnProperty('foo')"
},
{
  "ques": "What is the output of this?<br><br>console.log(0.1 + 0.2 === 0.3);",
  "quesType": "fill",
  "ans": "false"
},
{
  "ques": "What keyword declares a constant variable?<br><br>",
  "quesType": "fill",
  "ans": "const"
},
{
  "ques": "How to create a new Set?<br><br>",
  "quesType": "fill",
  "ans": "new Set()"
},
{
  "ques": "What does `async` before a function mean?<br><br>",
  "quesType": "fill",
  "ans": "Function returns a Promise"
},
{
  "ques": "What is the result of `typeof undefined`?<br><br>",
  "quesType": "fill",
  "ans": "undefined"
},
{
  "ques": "Which operator is used to spread elements?<br><br>",
  "quesType": "fill",
  "ans": "..."
},
{
  "ques": "How to write an immediately invoked function expression (IIFE)?<br><br>",
  "quesType": "fill",
  "ans": "(function() {})()"
},
{
  "ques": "What is the output of `console.log(+'42')`?<br><br>",
  "quesType": "fill",
  "ans": "42"
},
{
  "ques": "What method is used to add properties to an object's prototype?<br><br>",
  "quesType": "fill",
  "ans": "Object.prototype.methodName = function() {}"
}
,
{
  "ques": "What will `console.log(typeof NaN);` output?<br><br>",
  "quesType": "mcq",
  "op1": "number",
  "op2": "NaN",
  "op3": "undefined",
  "op4": "object",
  "ans": "number"
},
{
  "ques": "Which of the following is NOT a primitive data type in JavaScript?<br><br>",
  "quesType": "mcq",
  "op1": "object",
  "op2": "symbol",
  "op3": "string",
  "op4": "boolean",
  "ans": "object"
},
{
  "ques": "What does the `call()` method do?<br><br>",
  "quesType": "mcq",
  "op1": "Calls a function with a given this value and arguments",
  "op2": "Creates a new function",
  "op3": "Returns a Promise",
  "op4": "Binds this permanently",
  "ans": "Calls a function with a given this value and arguments"
},
{
  "ques": "What will this print?<br><br>console.log([...'abc']);",
  "quesType": "mcq",
  "op1": "['a','b','c']",
  "op2": "['abc']",
  "op3": "['a b c']",
  "op4": "Error",
  "ans": "['a','b','c']"
},
{
  "ques": "Which of these is used to create a Promise?<br><br>",
  "quesType": "mcq",
  "op1": "new Promise()",
  "op2": "Promise()",
  "op3": "promise.create()",
  "op4": "Promise.resolve()",
  "ans": "new Promise()"
},
{
  "ques": "What does the spread operator `...` do?<br><br>",
  "quesType": "mcq",
  "op1": "Expands elements of an iterable",
  "op2": "Creates a new array",
  "op3": "Clones an object",
  "op4": "Deletes properties",
  "ans": "Expands elements of an iterable"
},
{
  "ques": "What will `console.log(0.1 + 0.2 === 0.3);` output?<br><br>",
  "quesType": "mcq",
  "op1": "false",
  "op2": "true",
  "op3": "undefined",
  "op4": "NaN",
  "ans": "false"
},
{
  "ques": "How do you declare a private field in a JavaScript class?<br><br>",
  "quesType": "mcq",
  "op1": "#fieldName",
  "op2": "private fieldName",
  "op3": "_fieldName",
  "op4": "fieldName",
  "ans": "#fieldName"
},
{
  "ques": "Which method pauses and resumes a generator function?<br><br>",
  "quesType": "mcq",
  "op1": "yield",
  "op2": "return",
  "op3": "pause",
  "op4": "await",
  "ans": "yield"
},
{
  "ques": "What will `typeof Symbol()` return?<br><br>",
  "quesType": "mcq",
  "op1": "symbol",
  "op2": "string",
  "op3": "object",
  "op4": "undefined",
  "ans": "symbol"
},
{
  "ques": "What is the output of this code?<br><br>console.log(typeof null);",
  "quesType": "mcq",
  "op1": "object",
  "op2": "null",
  "op3": "undefined",
  "op4": "boolean",
  "ans": "object"
},
{
  "ques": "Which method is used to add a new property to an object's prototype?<br><br>",
  "quesType": "mcq",
  "op1": "Object.prototype.methodName = function() {}",
  "op2": "Object.create()",
  "op3": "Object.assign()",
  "op4": "Object.defineProperty()",
  "ans": "Object.prototype.methodName = function() {}"
},
{
  "ques": "How can you create an immediately invoked function expression (IIFE)?<br><br>",
  "quesType": "mcq",
  "op1": "(function() {})()",
  "op2": "function() {}()",
  "op3": "(() => {})()",
  "op4": "function() {}",
  "ans": "(function() {})()"
},
{
  "ques": "What will `console.log(typeof undefined);` output?<br><br>",
  "quesType": "mcq",
  "op1": "undefined",
  "op2": "object",
  "op3": "null",
  "op4": "NaN",
  "ans": "undefined"
},
{
  "ques": "Which keyword is used to declare a constant variable?<br><br>",
  "quesType": "mcq",
  "op1": "const",
  "op2": "let",
  "op3": "var",
  "op4": "static",
  "ans": "const"
},
{
  "ques": "How do you create a new Set?<br><br>",
  "quesType": "mcq",
  "op1": "new Set()",
  "op2": "Set()",
  "op3": "{}",
  "op4": "[]",
  "ans": "new Set()"
},
{
  "ques": "What will `console.log(+'42');` output?<br><br>",
  "quesType": "mcq",
  "op1": "42",
  "op2": "'42'",
  "op3": "NaN",
  "op4": "undefined",
  "ans": "42"
},
{
  "ques": "What is the result of `object.hasOwnProperty('prop')`?<br><br>",
  "quesType": "mcq",
  "op1": "true or false",
  "op2": "undefined",
  "op3": "null",
  "op4": "Error",
  "ans": "true or false"
},
{
  "ques": "Which statement stops a loop immediately?<br><br>",
  "quesType": "mcq",
  "op1": "break",
  "op2": "continue",
  "op3": "exit",
  "op4": "stop",
  "ans": "break"
}
,
{
  "ques": "Which method freezes an object preventing modifications?<br><br>",
  "quesType": "fill",
  "ans": "Object.freeze()"
},
{
  "ques": "How to check if an object is iterable?<br><br>",
  "quesType": "fill",
  "ans": "Symbol.iterator"
},
{
  "ques": "What keyword is used to import modules?<br><br>",
  "quesType": "fill",
  "ans": "import"
},
{
  "ques": "Which function delays execution of another function?<br><br>",
  "quesType": "fill",
  "ans": "setTimeout()"
},
{
  "ques": "How to create a shallow copy of an array with spread?<br><br>",
  "quesType": "fill",
  "ans": "[...array]"
},
{
  "ques": "How to define a default parameter in function?<br><br>",
  "quesType": "fill",
  "ans": "function fn(param = defaultValue) {}"
},
{
  "ques": "Which method converts a JSON string to an object?<br><br>",
  "quesType": "fill",
  "ans": "JSON.parse()"
},
{
  "ques": "How to check if an object has a property (own)?<br><br>",
  "quesType": "fill",
  "ans": "obj.hasOwnProperty(prop)"
},
{
  "ques": "How to create an object with a prototype?<br><br>",
  "quesType": "fill",
  "ans": "Object.create(proto)"
},
{
  "ques": "Which operator merges objects?<br><br>",
  "quesType": "fill",
  "ans": "Object.assign()"
},
{
  "ques": "How to create an immediately invoked function expression?<br><br>",
  "quesType": "fill",
  "ans": "(function() {})()"
},
{
  "ques": "Which keyword throws an error?<br><br>",
  "quesType": "fill",
  "ans": "throw"
},
{
  "ques": "How to pause a generator function?<br><br>",
  "quesType": "fill",
  "ans": "yield"
},
{
  "ques": "How to make a property enumerable?<br><br>",
  "quesType": "fill",
  "ans": "Object.defineProperty(obj, prop, { enumerable: true })"
},
{
  "ques": "Which method returns the keys of an object?<br><br>",
  "quesType": "fill",
  "ans": "Object.keys()"
},
{
  "ques": "How to check if a variable is an array?<br><br>",
  "quesType": "fill",
  "ans": "Array.isArray()"
},
{
  "ques": "Which method removes the last element of an array?<br><br>",
  "quesType": "fill",
  "ans": "pop()"
},
{
  "ques": "How to convert a number to a string?<br><br>",
  "quesType": "fill",
  "ans": "toString()"
},
{
  "ques": "Which operator can check for null or undefined?<br><br>",
  "quesType": "fill",
  "ans": "??"
},
{
  "ques": "How to chain promises?<br><br>",
  "quesType": "fill",
  "ans": "then()"
}
,
{
  "ques": "What does `Object.freeze()` do?<br><br>",
  "quesType": "mcq",
  "op1": "Prevents any modification to an object",
  "op2": "Deletes the object",
  "op3": "Clones the object",
  "op4": "Makes object writable",
  "ans": "Prevents any modification to an object"
},
{
  "ques": "How to check if an object is iterable?<br><br>",
  "quesType": "mcq",
  "op1": "Check Symbol.iterator in object",
  "op2": "Check typeof object",
  "op3": "Check constructor property",
  "op4": "Use instanceof Array",
  "ans": "Check Symbol.iterator in object"
},
{
  "ques": "What keyword is used to import a module?<br><br>",
  "quesType": "mcq",
  "op1": "import",
  "op2": "require",
  "op3": "include",
  "op4": "module",
  "ans": "import"
},
{
  "ques": "What does `setTimeout()` do?<br><br>",
  "quesType": "mcq",
  "op1": "Delays execution of a function",
  "op2": "Repeats function call",
  "op3": "Executes immediately",
  "op4": "Cancels execution",
  "ans": "Delays execution of a function"
},
{
  "ques": "How to create a shallow copy of an array?<br><br>",
  "quesType": "mcq",
  "op1": "Using spread operator",
  "op2": "Using push()",
  "op3": "Using pop()",
  "op4": "Using map()",
  "ans": "Using spread operator"
},
{
  "ques": "What is the syntax for default parameters?<br><br>",
  "quesType": "mcq",
  "op1": "function fn(param = defaultValue) {}",
  "op2": "function fn(default param) {}",
  "op3": "function fn(param?) {}",
  "op4": "function fn(param := defaultValue) {}",
  "ans": "function fn(param = defaultValue) {}"
},
{
  "ques": "Which method parses JSON to an object?<br><br>",
  "quesType": "mcq",
  "op1": "JSON.parse()",
  "op2": "JSON.stringify()",
  "op3": "Object.parse()",
  "op4": "Object.toJSON()",
  "ans": "JSON.parse()"
},
{
  "ques": "How to check if an object has an own property?<br><br>",
  "quesType": "mcq",
  "op1": "hasOwnProperty()",
  "op2": "in operator",
  "op3": "propertyExists()",
  "op4": "exists()",
  "ans": "hasOwnProperty()"
},
{
  "ques": "What does `Object.create(proto)` do?<br><br>",
  "quesType": "mcq",
  "op1": "Creates new object with proto as prototype",
  "op2": "Creates empty object",
  "op3": "Clones object",
  "op4": "Creates array",
  "ans": "Creates new object with proto as prototype"
},
{
  "ques": "Which method merges objects?<br><br>",
  "quesType": "mcq",
  "op1": "Object.assign()",
  "op2": "Object.merge()",
  "op3": "Array.concat()",
  "op4": "Object.copy()",
  "ans": "Object.assign()"
},
{
  "ques": "What is an IIFE?<br><br>",
  "quesType": "mcq",
  "op1": "Immediately Invoked Function Expression",
  "op2": "Internal Iteration Function Execution",
  "op3": "Infinite Iteration Function Expression",
  "op4": "Instance of Function Expression",
  "ans": "Immediately Invoked Function Expression"
},
{
  "ques": "Which keyword throws an exception?<br><br>",
  "quesType": "mcq",
  "op1": "throw",
  "op2": "catch",
  "op3": "try",
  "op4": "finally",
  "ans": "throw"
},
{
  "ques": "What does `yield` do in a generator?<br><br>",
  "quesType": "mcq",
  "op1": "Pauses and resumes generator execution",
  "op2": "Throws an error",
  "op3": "Returns a Promise",
  "op4": "Ends function execution",
  "ans": "Pauses and resumes generator execution"
},
{
  "ques": "How to make a property enumerable?<br><br>",
  "quesType": "mcq",
  "op1": "Using Object.defineProperty with enumerable:true",
  "op2": "Setting property writable",
  "op3": "Using Object.freeze",
  "op4": "Using Object.seal",
  "ans": "Using Object.defineProperty with enumerable:true"
},
{
  "ques": "Which method returns keys of an object?<br><br>",
  "quesType": "mcq",
  "op1": "Object.keys()",
  "op2": "Object.values()",
  "op3": "Object.entries()",
  "op4": "Object.getOwnPropertyNames()",
  "ans": "Object.keys()"
},
{
  "ques": "How to check if a variable is an array?<br><br>",
  "quesType": "mcq",
  "op1": "Array.isArray()",
  "op2": "typeof",
  "op3": "instanceof Object",
  "op4": "Object.isArray()",
  "ans": "Array.isArray()"
},
{
  "ques": "Which method removes the last element of an array?<br><br>",
  "quesType": "mcq",
  "op1": "pop()",
  "op2": "push()",
  "op3": "shift()",
  "op4": "unshift()",
  "ans": "pop()"
},
{
  "ques": "How to convert a number to string?<br><br>",
  "quesType": "mcq",
  "op1": "toString()",
  "op2": "String()",
  "op3": "parseInt()",
  "op4": "toNumber()",
  "ans": "toString()"
},
{
  "ques": "What does the '??' operator do?<br><br>",
  "quesType": "mcq",
  "op1": "Returns right operand if left is null or undefined",
  "op2": "Nullifies variable",
  "op3": "Checks equality",
  "op4": "Assigns default value always",
  "ans": "Returns right operand if left is null or undefined"
}
,
{
  "ques": "What will this output?<br><br>console.log(typeof NaN === 'number');",
  "quesType": "mcq",
  "op1": "true",
  "op2": "false",
  "op3": "undefined",
  "op4": "error",
  "ans": "true"
},
{
  "ques": "Which method freezes an object preventing modifications?<br><br>",
  "quesType": "mcq",
  "op1": "Object.freeze()",
  "op2": "Object.preventExtensions()",
  "op3": "Object.seal()",
  "op4": "Object.lock()",
  "ans": "Object.freeze()"
},
{
  "ques": "What is a closure in JavaScript?<br><br>",
  "quesType": "mcq",
  "op1": "Function with preserved lexical scope",
  "op2": "A type of callback",
  "op3": "A promise that resolves automatically",
  "op4": "An error handler",
  "ans": "Function with preserved lexical scope"
},
{
  "ques": "Which operator returns the value of the first truthy operand?<br><br>",
  "quesType": "mcq",
  "op1": "|| (logical OR)",
  "op2": "&& (logical AND)",
  "op3": "?? (nullish coalescing)",
  "op4": "? : (ternary)",
  "ans": "|| (logical OR)"
},
{
  "ques": "How do you declare a generator function?<br><br>",
  "quesType": "mcq",
  "op1": "function* gen() {}",
  "op2": "function gen() {}",
  "op3": "async function gen() {}",
  "op4": "generator function gen() {}",
  "ans": "function* gen() {}"
},
{
  "ques": "What does the 'this' keyword refer to in a regular function?<br><br>",
  "quesType": "mcq",
  "op1": "The object that called the function",
  "op2": "The window/global object",
  "op3": "The function itself",
  "op4": "undefined",
  "ans": "The object that called the function"
},
{
  "ques": "Which method returns the keys of an object?<br><br>",
  "quesType": "mcq",
  "op1": "Object.keys()",
  "op2": "Object.values()",
  "op3": "Object.entries()",
  "op4": "Object.getKeys()",
  "ans": "Object.keys()"
},
{
  "ques": "What is the difference between '==' and '==='?<br><br>",
  "quesType": "mcq",
  "op1": "'==' allows type coercion, '===' does not",
  "op2": "'===' allows type coercion, '==' does not",
  "op3": "Both are identical",
  "op4": "'==' is strict equality",
  "ans": "'==' allows type coercion, '===' does not"
},
{
  "ques": "Which keyword declares a block-scoped variable?<br><br>",
  "quesType": "mcq",
  "op1": "let",
  "op2": "var",
  "op3": "const",
  "op4": "static",
  "ans": "let"
},
{
  "ques": "What will be the output?<br><br>console.log(typeof Symbol('id'));",
  "quesType": "mcq",
  "op1": "'symbol'",
  "op2": "'string'",
  "op3": "'object'",
  "op4": "'function'",
  "ans": "'symbol'"
},
{
  "ques": "Which function converts JSON text to JavaScript object?<br><br>",
  "quesType": "mcq",
  "op1": "JSON.parse()",
  "op2": "JSON.stringify()",
  "op3": "JSON.convert()",
  "op4": "JSON.toObject()",
  "ans": "JSON.parse()"
},
{
  "ques": "How to make an asynchronous function in JavaScript?<br><br>",
  "quesType": "mcq",
  "op1": "Use async keyword before function",
  "op2": "Use defer attribute",
  "op3": "Use setTimeout",
  "op4": "Use Promise.all()",
  "ans": "Use async keyword before function"
},
{
  "ques": "Which of the following throws a syntax error?<br><br>const a = 5; a = 6;",
  "quesType": "mcq",
  "op1": "Yes, const cannot be reassigned",
  "op2": "No, it reassigns the value",
  "op3": "No error",
  "op4": "Only in strict mode",
  "ans": "Yes, const cannot be reassigned"
},
{
  "ques": "What does 'use strict' do in JavaScript?<br><br>",
  "quesType": "mcq",
  "op1": "Enforces stricter parsing and error handling",
  "op2": "Enables backward compatibility",
  "op3": "Disables errors",
  "op4": "Automatically declares variables",
  "ans": "Enforces stricter parsing and error handling"
},
{
  "ques": "What will this output?<br><br>console.log(typeof null === 'object');",
  "quesType": "mcq",
  "op1": "true",
  "op2": "false",
  "op3": "null",
  "op4": "error",
  "ans": "true"
},
{
  "ques": "Which method is used to schedule a task after a delay?<br><br>",
  "quesType": "mcq",
  "op1": "setTimeout()",
  "op2": "setInterval()",
  "op3": "clearTimeout()",
  "op4": "setImmediate()",
  "ans": "setTimeout()"
},
{
  "ques": "Which statement about JavaScript hoisting is true?<br><br>",
  "quesType": "mcq",
  "op1": "Declarations are moved to the top of their scope",
  "op2": "Initialization is hoisted",
  "op3": "Only var variables are hoisted",
  "op4": "Functions are not hoisted",
  "ans": "Declarations are moved to the top of their scope"
},
{
  "ques": "Which method creates a shallow copy of an object?<br><br>",
  "quesType": "mcq",
  "op1": "Object.assign()",
  "op2": "JSON.parse(JSON.stringify())",
  "op3": "Object.create()",
  "op4": "Spread operator",
  "ans": "Object.assign()"
},
{
  "ques": "What is event delegation?<br><br>",
  "quesType": "mcq",
  "op1": "Attaching event listener to a parent instead of each child",
  "op2": "Listening for events on each child individually",
  "op3": "Using setTimeout with events",
  "op4": "Delegating events to web workers",
  "ans": "Attaching event listener to a parent instead of each child"
}
,
{
  "ques": "typeof NaN === 'number' is?",
  "quesType": "fill",
  "ans": "true"
},
{
  "ques": "Freeze object method?",
  "quesType": "fill",
  "ans": "Object.freeze"
},
{
  "ques": "Closure means?",
  "quesType": "fill",
  "ans": "function with preserved lexical scope"
},
{
  "ques": "Operator that returns first truthy value?",
  "quesType": "fill",
  "ans": "||"
},
{
  "ques": "Syntax for generator function?",
  "quesType": "fill",
  "ans": "function*"
},
{
  "ques": "'this' in regular function refers to?",
  "quesType": "fill",
  "ans": "caller object"
},
{
  "ques": "Get object keys method?",
  "quesType": "fill",
  "ans": "Object.keys"
},
{
  "ques": "Difference between '==' and '==='?",
  "quesType": "fill",
  "ans": "'==' allows type coercion, '===' does not"
},
{
  "ques": "Block scoped variable keyword?",
  "quesType": "fill",
  "ans": "let"
},
{
  "ques": "typeof Symbol('id')?",
  "quesType": "fill",
  "ans": "symbol"
},
{
  "ques": "Convert JSON text to object?",
  "quesType": "fill",
  "ans": "JSON.parse"
},
{
  "ques": "Make asynchronous function keyword?",
  "quesType": "fill",
  "ans": "async"
},
{
  "ques": "Reassigning const variable error?",
  "quesType": "fill",
  "ans": "true"
},
{
  "ques": "'use strict' does what?",
  "quesType": "fill",
  "ans": "enforces stricter parsing and error handling"
},
{
  "ques": "typeof null equals?",
  "quesType": "fill",
  "ans": "object"
},
{
  "ques": "Schedule delayed task method?",
  "quesType": "fill",
  "ans": "setTimeout"
},
{
  "ques": "Hoisting means?",
  "quesType": "fill",
  "ans": "declarations moved to top of scope"
},
{
  "ques": "Shallow copy method?",
  "quesType": "fill",
  "ans": "Object.assign"
},
{
  "ques": "Event delegation means?",
  "quesType": "fill",
  "ans": "attach listener to parent"
}
,
{
  "ques": "What will be the output?<br><br>console.log(typeof (function() {}));",
  "quesType": "fill",
  "ans": "function"
},
{
  "ques": "How do you create a shallow copy of an object?<br><br>",
  "quesType": "fill",
  "ans": "Object.assign()"
},
{
  "ques": "What keyword defines a generator function?<br><br>",
  "quesType": "fill",
  "ans": "function*"
},
{
  "ques": "What does `async` keyword before a function indicate?<br><br>",
  "quesType": "fill",
  "ans": "Returns a Promise"
},
{
  "ques": "How do you stop propagation of an event?<br><br>",
  "quesType": "fill",
  "ans": "event.stopPropagation()"
},
{
  "ques": "How do you create a new Map?<br><br>",
  "quesType": "fill",
  "ans": "new Map()"
},
{
  "ques": "What will this output?<br><br>console.log([] == ![]);",
  "quesType": "fill",
  "ans": "true"
},
{
  "ques": "How to declare an arrow function?<br><br>",
  "quesType": "fill",
  "ans": "() => {}"
},
{
  "ques": "How do you create a Symbol?<br><br>",
  "quesType": "fill",
  "ans": "Symbol()"
},
{
  "ques": "What is the output?<br><br>console.log(null == undefined);",
  "quesType": "fill",
  "ans": "true"
},
{
  "ques": "How to declare a class in ES6?<br><br>",
  "quesType": "fill",
  "ans": "class ClassName {}"
},
{
  "ques": "How to get keys of an object?<br><br>",
  "quesType": "fill",
  "ans": "Object.keys(obj)"
},
{
  "ques": "What will `console.log(+'100');` output?<br><br>",
  "quesType": "fill",
  "ans": "100"
},
{
  "ques": "How to add an element at the end of an array?<br><br>",
  "quesType": "fill",
  "ans": "push()"
},
{
  "ques": "What does `this` refer to inside a regular function?<br><br>",
  "quesType": "fill",
  "ans": "Global object or undefined in strict mode"
},
{
  "ques": "What is the difference between `==` and `===`?<br><br>",
  "quesType": "fill",
  "ans": "`==` compares values after type coercion, `===` compares without coercion"
},
{
  "ques": "What does `NaN` stand for?<br><br>",
  "quesType": "fill",
  "ans": "Not a Number"
},
{
  "ques": "What does the `typeof` operator return for arrays?<br><br>",
  "quesType": "fill",
  "ans": "object"
},
{
  "ques": "What will `console.log(Boolean(''));` output?<br><br>",
  "quesType": "fill",
  "ans": "false"
},
{
  "ques": "What is the default scope of a variable declared with `var`?<br><br>",
  "quesType": "fill",
  "ans": "Function scope"
}
,
{
  "ques": "What will be the output of `typeof (function() {});`?<br><br>",
  "quesType": "mcq",
  "op1": "function",
  "op2": "object",
  "op3": "undefined",
  "op4": "null",
  "ans": "function"
},
{
  "ques": "How do you create a shallow copy of an object?<br><br>",
  "quesType": "mcq",
  "op1": "Object.assign()",
  "op2": "Object.create()",
  "op3": "JSON.parse()",
  "op4": "clone()",
  "ans": "Object.assign()"
},
{
  "ques": "Which keyword defines a generator function?<br><br>",
  "quesType": "mcq",
  "op1": "function*",
  "op2": "generator",
  "op3": "yield",
  "op4": "async",
  "ans": "function*"
},
{
  "ques": "What does the `async` keyword before a function mean?<br><br>",
  "quesType": "mcq",
  "op1": "Returns a Promise",
  "op2": "Creates a new thread",
  "op3": "Pauses function",
  "op4": "Blocks execution",
  "ans": "Returns a Promise"
},
{
  "ques": "How to stop event propagation?<br><br>",
  "quesType": "mcq",
  "op1": "event.stopPropagation()",
  "op2": "event.preventDefault()",
  "op3": "event.cancel()",
  "op4": "event.stop()",
  "ans": "event.stopPropagation()"
},
{
  "ques": "How do you create a new Map?<br><br>",
  "quesType": "mcq",
  "op1": "new Map()",
  "op2": "new Object()",
  "op3": "Map()",
  "op4": "Object.map()",
  "ans": "new Map()"
},
{
  "ques": "What will `console.log([] == ![]);` output?<br><br>",
  "quesType": "mcq",
  "op1": "true",
  "op2": "false",
  "op3": "undefined",
  "op4": "Error",
  "ans": "true"
},
{
  "ques": "How do you declare an arrow function?<br><br>",
  "quesType": "mcq",
  "op1": "() => {}",
  "op2": "function() {}",
  "op3": "arrow function() {}",
  "op4": "=> {}",
  "ans": "() => {}"
},
{
  "ques": "How do you create a Symbol?<br><br>",
  "quesType": "mcq",
  "op1": "Symbol()",
  "op2": "new Symbol()",
  "op3": "symbol()",
  "op4": "createSymbol()",
  "ans": "Symbol()"
},
{
  "ques": "What is the output of `console.log(null == undefined);`?<br><br>",
  "quesType": "mcq",
  "op1": "true",
  "op2": "false",
  "op3": "null",
  "op4": "undefined",
  "ans": "true"
},
{
  "ques": "How do you declare a class in ES6?<br><br>",
  "quesType": "mcq",
  "op1": "class ClassName {}",
  "op2": "function ClassName() {}",
  "op3": "new ClassName()",
  "op4": "className {}",
  "ans": "class ClassName {}"
},
{
  "ques": "How do you get all keys of an object?<br><br>",
  "quesType": "mcq",
  "op1": "Object.keys(obj)",
  "op2": "obj.keys()",
  "op3": "Object.getKeys()",
  "op4": "keys(obj)",
  "ans": "Object.keys(obj)"
},
{
  "ques": "What will `console.log(+'100');` output?<br><br>",
  "quesType": "mcq",
  "op1": "100",
  "op2": "'100'",
  "op3": "NaN",
  "op4": "undefined",
  "ans": "100"
},
{
  "ques": "How to add an element at the end of an array?<br><br>",
  "quesType": "mcq",
  "op1": "push()",
  "op2": "pop()",
  "op3": "shift()",
  "op4": "unshift()",
  "ans": "push()"
},
{
  "ques": "What does `this` refer to inside a regular function?<br><br>",
  "quesType": "mcq",
  "op1": "Global object or undefined in strict mode",
  "op2": "The function itself",
  "op3": "The parent object",
  "op4": "window.document",
  "ans": "Global object or undefined in strict mode"
},
{
  "ques": "Difference between `==` and `===`?<br><br>",
  "quesType": "mcq",
  "op1": "`==` does type coercion, `===` does not",
  "op2": "`===` does type coercion, `==` does not",
  "op3": "No difference",
  "op4": "Both compare values and types",
  "ans": "`==` does type coercion, `===` does not"
},
{
  "ques": "What does `NaN` stand for?<br><br>",
  "quesType": "mcq",
  "op1": "Not a Number",
  "op2": "Null and Nothing",
  "op3": "Not Assigned Number",
  "op4": "Never a Number",
  "ans": "Not a Number"
},
{
  "ques": "What is the type returned by `typeof []`?<br><br>",
  "quesType": "mcq",
  "op1": "object",
  "op2": "array",
  "op3": "undefined",
  "op4": "function",
  "ans": "object"
},
{
  "ques": "What will `console.log(Boolean(''));` output?<br><br>",
  "quesType": "mcq",
  "op1": "false",
  "op2": "true",
  "op3": "undefined",
  "op4": "null",
  "ans": "false"
},
{
  "ques": "What is the scope of a variable declared with `var`?<br><br>",
  "quesType": "mcq",
  "op1": "Function scope",
  "op2": "Block scope",
  "op3": "Global scope only",
  "op4": "Module scope",
  "ans": "Function scope"
}
,
{
  "ques": "How to create a Proxy to intercept operations on an object?<br><br>",
  "quesType": "fill",
  "ans": "new Proxy(target, handler)"
},
{
  "ques": "Which method converts a promise to async/await style?<br><br>",
  "quesType": "fill",
  "ans": "await"
},
{
  "ques": "What method converts an object to JSON string?<br><br>",
  "quesType": "fill",
  "ans": "JSON.stringify()"
},
{
  "ques": "How to deep clone an object (one common method)?<br><br>",
  "quesType": "fill",
  "ans": "JSON.parse(JSON.stringify(obj))"
},
{
  "ques": "Which method merges two or more arrays?<br><br>",
  "quesType": "fill",
  "ans": "concat()"
},
{
  "ques": "How to check if a value is NaN?<br><br>",
  "quesType": "fill",
  "ans": "Number.isNaN()"
},
{
  "ques": "Which object contains global functions like setTimeout?<br><br>",
  "quesType": "fill",
  "ans": "window"
},
{
  "ques": "How to schedule repeated execution of a function?<br><br>",
  "quesType": "fill",
  "ans": "setInterval()"
},
{
  "ques": "What does the spread operator do when used in function parameters?<br><br>",
  "quesType": "fill",
  "ans": "Collects multiple arguments into an array"
},
{
  "ques": "Which operator is used for optional chaining?<br><br>",
  "quesType": "fill",
  "ans": "?."
},
{
  "ques": "How to make a method static in a class?<br><br>",
  "quesType": "fill",
  "ans": "Use static keyword"
},
{
  "ques": "Which symbol is used to denote private class fields?<br><br>",
  "quesType": "fill",
  "ans": "#"
},
{
  "ques": "What does 'use strict' enable?<br><br>",
  "quesType": "fill",
  "ans": "Strict mode"
},
{
  "ques": "How to convert a string to a number?<br><br>",
  "quesType": "fill",
  "ans": "Number()"
},
{
  "ques": "Which method flattens nested arrays?<br><br>",
  "quesType": "fill",
  "ans": "flat()"
},
{
  "ques": "What does Symbol() create?<br><br>",
  "quesType": "fill",
  "ans": "A unique identifier"
},
{
  "ques": "How to define a getter in an object?<br><br>",
  "quesType": "fill",
  "ans": "get propertyName() {}"
},
{
  "ques": "Which method returns the prototype of an object?<br><br>",
  "quesType": "fill",
  "ans": "Object.getPrototypeOf()"
},
{
  "ques": "How to make a function asynchronous?<br><br>",
  "quesType": "fill",
  "ans": "Use async keyword"
},
{
  "ques": "Which method returns the type of an object?<br><br>",
  "quesType": "fill",
  "ans": "typeof"
}
,
{
  "ques": "What does `new Proxy(target, handler)` do?<br><br>",
  "quesType": "mcq",
  "op1": "Intercepts and customizes operations on target",
  "op2": "Clones an object",
  "op3": "Creates an array",
  "op4": "Deletes an object",
  "ans": "Intercepts and customizes operations on target"
},
{
  "ques": "What does `await` do in async functions?<br><br>",
  "quesType": "mcq",
  "op1": "Waits for promise resolution",
  "op2": "Pauses execution indefinitely",
  "op3": "Throws an error",
  "op4": "Converts async to sync",
  "ans": "Waits for promise resolution"
},
{
  "ques": "Which method converts object to JSON string?<br><br>",
  "quesType": "mcq",
  "op1": "JSON.stringify()",
  "op2": "JSON.parse()",
  "op3": "Object.toString()",
  "op4": "toJSON()",
  "ans": "JSON.stringify()"
},
{
  "ques": "Which is a simple way to deep clone an object?<br><br>",
  "quesType": "mcq",
  "op1": "JSON.parse(JSON.stringify(obj))",
  "op2": "Object.assign()",
  "op3": "Spread operator",
  "op4": "Array.slice()",
  "ans": "JSON.parse(JSON.stringify(obj))"
},
{
  "ques": "How to merge two arrays?<br><br>",
  "quesType": "mcq",
  "op1": "concat()",
  "op2": "join()",
  "op3": "push()",
  "op4": "splice()",
  "ans": "concat()"
},
{
  "ques": "How to check if a value is NaN?<br><br>",
  "quesType": "mcq",
  "op1": "Number.isNaN()",
  "op2": "isNaN()",
  "op3": "typeof NaN",
  "op4": "NaN()",
  "ans": "Number.isNaN()"
},
{
  "ques": "Where do global functions like setTimeout exist?<br><br>",
  "quesType": "mcq",
  "op1": "window object",
  "op2": "document object",
  "op3": "navigator",
  "op4": "console",
  "ans": "window object"
},
{
  "ques": "Which function repeats execution?<br><br>",
  "quesType": "mcq",
  "op1": "setInterval()",
  "op2": "setTimeout()",
  "op3": "clearTimeout()",
  "op4": "clearInterval()",
  "ans": "setInterval()"
},
{
  "ques": "What does the spread operator do in parameters?<br><br>",
  "quesType": "mcq",
  "op1": "Collects multiple args into array",
  "op2": "Spreads arrays into elements",
  "op3": "Copies objects",
  "op4": "Concatenates arrays",
  "ans": "Collects multiple args into array"
},
{
  "ques": "Which operator is optional chaining?<br><br>",
  "quesType": "mcq",
  "op1": "?.",
  "op2": "||",
  "op3": "?",
  "op4": "&&",
  "ans": "?."
},
{
  "ques": "How to define a static method in class?<br><br>",
  "quesType": "mcq",
  "op1": "Use static keyword",
  "op2": "Use const keyword",
  "op3": "Use let keyword",
  "op4": "Use var keyword",
  "ans": "Use static keyword"
},
{
  "ques": "What symbol denotes private class fields?<br><br>",
  "quesType": "mcq",
  "op1": "#",
  "op2": "@",
  "op3": "$",
  "op4": "_",
  "ans": "#"
},
{
  "ques": "What does 'use strict' do?<br><br>",
  "quesType": "mcq",
  "op1": "Enables strict mode",
  "op2": "Enables loose mode",
  "op3": "Disables errors",
  "op4": "Enables debugging",
  "ans": "Enables strict mode"
},
{
  "ques": "How to convert string to number?<br><br>",
  "quesType": "mcq",
  "op1": "Number()",
  "op2": "String()",
  "op3": "parseInt()",
  "op4": "toString()",
  "ans": "Number()"
},
{
  "ques": "Which method flattens nested arrays?<br><br>",
  "quesType": "mcq",
  "op1": "flat()",
  "op2": "flatten()",
  "op3": "concat()",
  "op4": "reduce()",
  "ans": "flat()"
},
{
  "ques": "What does Symbol() create?<br><br>",
  "quesType": "mcq",
  "op1": "Unique identifier",
  "op2": "String",
  "op3": "Number",
  "op4": "Object",
  "ans": "Unique identifier"
},
{
  "ques": "How to define getter in an object?<br><br>",
  "quesType": "mcq",
  "op1": "get propertyName() {}",
  "op2": "set propertyName() {}",
  "op3": "function propertyName() {}",
  "op4": "propertyName() {}",
  "ans": "get propertyName() {}"
},
{
  "ques": "Which method returns prototype of an object?<br><br>",
  "quesType": "mcq",
  "op1": "Object.getPrototypeOf()",
  "op2": "Object.prototype()",
  "op3": "Object.prototypeOf()",
  "op4": "Object.proto()",
  "ans": "Object.getPrototypeOf()"
},
{
  "ques": "How to make function asynchronous?<br><br>",
  "quesType": "mcq",
  "op1": "Use async keyword",
  "op2": "Use await keyword",
  "op3": "Use promise keyword",
  "op4": "Use defer keyword",
  "ans": "Use async keyword"
},
{
  "ques": "Which operator returns type of variable?<br><br>",
  "quesType": "mcq",
  "op1": "typeof",
  "op2": "instanceof",
  "op3": "constructor",
  "op4": "type",
  "ans": "typeof"
}

]

let jsIncorrectAnswers = [];

let jsTimerId = "";
let jsSkip = document.getElementById("jsSkip");
let codingjsQues = document.getElementById("codingjsQues");
let mcqjs = document.getElementById("mcqjs");
let jsQuestionNumber = document.getElementById("jsQuestionNumber");
let jsQuestionCount = 2;
let jsScore = 0;
let jsScoreDisplay = document.getElementById("jsScoreDisplay");
let jsScoreShow = document.getElementById("jsScoreShow");
let jsSkip2 = document.getElementById("jsSkip2");

let jsFillAns = document.getElementById("jsFillAns");
let jsStatus1 = document.getElementById("jsStatus1");
let jsStatus2 = document.getElementById("jsStatus2");
let jsStatus3 = document.getElementById("jsStatus3");
let jsCheckFill = document.getElementById("jsCheckFill");

let codingResultjs = document.getElementById("codingResultjs");

let jsIncorrectAnswersDisplay = document.getElementById("jsIncorrectAnswersDisplay");
let jsScoreBelow70 = document.getElementById("jsScoreBelow70");
let jsScore100 = document.getElementById("jsScore100");

let jsResult1 = document.getElementById("jsResult1");
let jsResult2 = document.getElementById("jsResult2");
let jsResult3 = document.getElementById("jsResult3");
let jsResult4 = document.getElementById("jsResult4");
let jsResult5 = document.getElementById("jsResult5");
let jsBg1 = document.getElementById("jsBg1");


function codingjsStart(){
  codingjsHide.classList.add("d-none");
codingjsShow.classList.remove("d-none");

let fillBlankjs = document.getElementById("fillBlankjs");
let op1js = document.getElementById("op1js");
let op2js = document.getElementById("op2js");
let op3js = document.getElementById("op3js");
let op4js = document.getElementById("op4js");

let jsFillAns = document.getElementById("jsFillAns");
let jsStatus1 = document.getElementById("jsStatus1");
let jsStatus2 = document.getElementById("jsStatus2");
let jsStatus3 = document.getElementById("jsStatus3");
let jsCheckFill = document.getElementById("jsCheckFill");

jsFillAns.disabled = false;
jsStatus1.classList.remove("d-none");
jsStatus2.classList.add("d-none");
jsStatus3.classList.add("d-none");
jsFillAns.value = "";
jsSkip2.textContent = "Skip";
jsSkip2.style.backgroundColor = "orange";
jsSkip2.style.borderColor = "orange";

jsSkip.textContent = "Skip";
jsSkip.style.backgroundColor = "orange";
jsSkip.style.borderColor = "orange";
jsScoreShow.textContent = "";
jsTimer.style.color = "black";

if (jsLevel === 1) {
  let jsRandom = Math.floor(Math.random() * codingjs1Arr.length);
  let y = codingjs1Arr[jsRandom];
  jsTimer.textContent = "20";
  jsTime = 20;

  jsTimerId = setInterval(function () {
    jsTime = jsTime - 1;
    if (jsTime == 0) {
      clearInterval(jsTimerId);
      jsQuestionNumber.textContent = "Question:" + jsQuestionCount + "/10";
      jsQuestionCount = jsQuestionCount + 1;
      jsTime = 20;
      codingjsStart();
    }
    if (jsTime <= 5) {
      jsTimer.style.color = "red";
      jsTimer.textContent = jsTime;
    } else {
      jsTimer.textContent = jsTime;
    }
  }, 1000);

  if (jsQuestionCount == 12) {
    clearInterval(jsTimerId);
    mcqjs.classList.add("d-none");
    document.getElementById("jsScoreEnd").textContent = jsScoreDisplay.textContent;
    fillBlankjs.classList.add("d-none");
    codingjsShow.classList.add("d-none");
    codingResultjs.classList.remove("d-none");

    if (jsScore < 70) {
      jsScoreBelow70.classList.remove("d-none");
      jsScore100.classList.add("d-none");
      sectionCodingjs.classList.add("back15");

      jsResult1.textContent = "Test finished!!";
      jsResult2.textContent = "😓 Oops! Not quite right.";
      jsResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      jsResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      jsIncorrectAnswersDisplay.appendChild(h2);

      for (let z of jsIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        jsIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (jsScore < 100) {
      jsScoreBelow70.classList.remove("d-none");
      jsScore100.classList.add("d-none");
      sectionCodingjs.classList.add("back15");

      jsResult1.textContent = "Test finished!!";
      jsResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      jsResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      jsResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      jsIncorrectAnswersDisplay.appendChild(h2);

      for (let z of jsIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        jsIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (jsScore === 100) {
      document.getElementById("sectionCodingjs").classList.add("back14");
      jsScore100.classList.remove("d-none");
      jsScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqjs.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingjsQues.innerHTML = formattedQuestion;

    fillBlankjs.classList.add("d-none");
    op1js.textContent = y.op1;
    op2js.textContent = y.op2;
    op3js.textContent = y.op3;
    op4js.textContent = y.op4;

    const allOps = [op1js, op2js, op3js, op4js];
    allOps.forEach((op, i) => {
      op.onclick = function () {
        allOps.forEach(o => (o.disabled = true));
        clearInterval(jsTimerId);
        jsTime = 20;

        if (op.textContent === y.ans) {
          op.style.backgroundColor = "green";
          jsScore += 10;
          jsScoreShow.textContent = "+10";
          jsScoreShow.style.color = "green";
        } else {
          op.style.backgroundColor = "red";
          jsScore -= 5;
          jsScoreShow.textContent = "-5";
          jsScoreShow.style.color = "red";
          let wrong_answer = { ques: y.ques, correct: y.ans, wrong: op.textContent };
          jsIncorrectAnswers.push(wrong_answer);
        }

        jsScoreDisplay.textContent = "Score: " + jsScore + "/100";

        jsSkip.textContent = "Next";
        jsSkip.style.backgroundColor = "#23ebdd";
        jsSkip.style.borderColor = "#23ebdd";

        jsSkip.onclick = function () {
          jsQuestionNumber.textContent = "Question:" + jsQuestionCount + "/10";
          jsQuestionCount += 1;
          allOps.forEach(o => {
            o.disabled = false;
            o.style.backgroundColor = "white";
          });
          codingjsStart();
        };
      };
    });

    jsSkip.onclick = function () {
      clearInterval(jsTimerId);
      jsTime = 20;
      jsQuestionNumber.textContent = "Question:" + jsQuestionCount + "/10";
      jsQuestionCount += 1;
      allOps.forEach(o => {
        o.disabled = false;
        o.style.backgroundColor = "white";
      });
      let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
      jsIncorrectAnswers.push(wrong_answer);
      codingjsStart();
    };
  } else {
    mcqjs.classList.add("d-none");
    fillBlankjs.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingjsQues.innerHTML = formattedQuestion;

    jsCheckFill.onclick = function () {
      clearInterval(jsTimerId);
      jsCheckFill.disabled = false;
      jsSkip2.textContent = "Next";
      jsSkip2.style.backgroundColor = "#23ebdd";
      jsSkip2.style.borderColor = "#23ebdd";
      jsFillAns.disabled = true;

      if (jsFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        jsStatus1.classList.add("d-none");
        jsStatus2.classList.remove("d-none");

        jsScore += 10;
        jsScoreShow.textContent = "+10";
        jsScoreShow.style.color = "green";
      } else {
        jsStatus1.classList.add("d-none");
        jsStatus3.classList.remove("d-none");

        jsScore -= 5;
        jsScoreShow.textContent = "-5";
        jsScoreShow.style.color = "red";

        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: jsFillAns.value };
        jsIncorrectAnswers.push(wrong_answer);
      }

      jsScoreDisplay.textContent = "Score: " + jsScore + "/100";
    };

    jsSkip2.onclick = function () {
      if (jsFillAns.value === "") {
        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
        jsIncorrectAnswers.push(wrong_answer);
      }
      clearInterval(jsTimerId);
      jsTime = 20;
      jsQuestionNumber.textContent = "Question:" + jsQuestionCount + "/10";
      jsQuestionCount += 1;
      codingjsStart();
    };
  }
}
else if (goLevel === 2) {
  let goRandom = Math.floor(Math.random() * codinggo2Arr.length);
  let y = codinggo2Arr[goRandom];
  goTimer.textContent = "25";
  goTime = 25;

  goTimerId = setInterval(function () {
    goTime = goTime - 1;
    if (goTime == 0) {
      clearInterval(goTimerId);
      goQuestionNumber.textContent = "Question:" + goQuestionCount + "/10";
      goQuestionCount = goQuestionCount + 1;
      goTime = 25;
      codinggoStart();
    }
    if (goTime <= 5) {
      goTimer.style.color = "red";
      goTimer.textContent = goTime;
    } else {
      goTimer.textContent = goTime;
    }
  }, 1000);

  if (goQuestionCount == 12) {
    clearInterval(goTimerId);
    mcqgo.classList.add("d-none");
    document.getElementById("goScoreEnd").textContent = goScoreDisplay.textContent;
    fillBlankgo.classList.add("d-none");
    codinggoShow.classList.add("d-none");
    codingResultgo.classList.remove("d-none");

    if (goScore < 70) {
      goScoreBelow70.classList.remove("d-none");
      goScore100.classList.add("d-none");
      sectionCodinggo.classList.add("back15");

      goResult1.textContent = "Test finished!!";
      goResult2.textContent = "😓 Oops! Not quite right.";
      goResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      goResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      goIncorrectAnswersDisplay.appendChild(h2);

      for (let z of goIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        goIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (goScore < 100) {
      goScoreBelow70.classList.remove("d-none");
      goScore100.classList.add("d-none");
      sectionCodinggo.classList.add("back15");

      goResult1.textContent = "Test finished!!";
      goResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      goResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      goResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      goIncorrectAnswersDisplay.appendChild(h2);

      for (let z of goIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        goIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (goScore === 100) {
      document.getElementById("sectionCodinggo").classList.add("back14");
      goScore100.classList.remove("d-none");
      goScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqgo.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinggoQues.innerHTML = formattedQuestion;
    fillBlankgo.classList.add("d-none");
    op1go.textContent = y.op1;
    op2go.textContent = y.op2;
    op3go.textContent = y.op3;
    op4go.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(goTimerId);
      goTime = 25;
      goSkip.textContent = "Next";
      goSkip.style.backgroundColor = "#23ebdd";
      goSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        goScore += 10;
        goScoreShow.textContent = "+10";
        goScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        goScore -= 5;
        goScoreShow.textContent = "-5";
        goScoreShow.style.color = "red";
        goIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      goScoreDisplay.textContent = "Score: " + goScore + "/100";
    }

    op1go.onclick = () => handleOptionClick(op1go, [op2go, op3go, op4go]);
    op2go.onclick = () => handleOptionClick(op2go, [op1go, op3go, op4go]);
    op3go.onclick = () => handleOptionClick(op3go, [op1go, op2go, op4go]);
    op4go.onclick = () => handleOptionClick(op4go, [op1go, op2go, op3go]);

    goSkip.onclick = function () {
      clearInterval(goTimerId);
      goTime = 25;
      goQuestionNumber.textContent = "Question:" + goQuestionCount + "/10";
      goQuestionCount++;
      [op1go, op2go, op3go, op4go].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      goIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codinggoStart();
    };
  }
  else {
    mcqgo.classList.add("d-none");
    fillBlankgo.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinggoQues.innerHTML = formattedQuestion;

    goCheckFill.disabled = false;
    goFillAns.disabled = false;
    goFillAns.value = "";
    goStatus1.classList.remove("d-none");
    goStatus2.classList.add("d-none");
    goStatus3.classList.add("d-none");
    goScoreShow.textContent = "";

    goCheckFill.onclick = function () {
      clearInterval(goTimerId);
      goCheckFill.disabled = true;
      goSkip2.textContent = "Next";
      goSkip2.style.backgroundColor = "#23ebdd";
      goSkip2.style.borderColor = "#23ebdd";
      goFillAns.disabled = true;

      if (goFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        goStatus1.classList.add("d-none");
        goStatus2.classList.remove("d-none");
        goScore += 10;
        goScoreShow.textContent = "+10";
        goScoreShow.style.color = "green";
      } else {
        goStatus1.classList.add("d-none");
        goStatus3.classList.remove("d-none");
        goScore -= 5;
        goScoreShow.textContent = "-5";
        goScoreShow.style.color = "red";
        goIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: goFillAns.value });
      }
      goScoreDisplay.textContent = "Score: " + goScore + "/100";
    };

    goSkip2.onclick = function () {
      if (goFillAns.value === "") {
        goIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      }
      clearInterval(goTimerId);
      goTime = 25;
      goQuestionNumber.textContent = "Question:" + goQuestionCount + "/10";
      goQuestionCount++;
      codinggoStart();
    };
  }
}
else if (jsLevel === 3) {
  let jsRandom = Math.floor(Math.random() * codingjs3Arr.length);
  let y = codingjs3Arr[jsRandom];
  jsTimer.textContent = "30";
  jsTime = 30;

  jsTimerId = setInterval(function () {
    jsTime = jsTime - 1;
    if (jsTime == 0) {
      clearInterval(jsTimerId);
      jsQuestionNumber.textContent = "Question:" + jsQuestionCount + "/10";
      jsQuestionCount = jsQuestionCount + 1;
      jsTime = 30;
      codingjsStart();
    }
    if (jsTime <= 5) {
      jsTimer.style.color = "red";
      jsTimer.textContent = jsTime;
    } else {
      jsTimer.textContent = jsTime;
    }
  }, 1000);

  if (jsQuestionCount == 12) {
    clearInterval(jsTimerId);
    mcqjs.classList.add("d-none");
    document.getElementById("jsScoreEnd").textContent = jsScoreDisplay.textContent;
    fillBlankjs.classList.add("d-none");
    codingjsShow.classList.add("d-none");
    codingResultjs.classList.remove("d-none");

    if (jsScore < 70) {
      jsScoreBelow70.classList.remove("d-none");
      jsScore100.classList.add("d-none");
      sectionCodingjs.classList.add("back15");

      jsResult1.textContent = "Test finished!!";
      jsResult2.textContent = "😓 Oops! Not quite right.";
      jsResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      jsResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      jsIncorrectAnswersDisplay.appendChild(h2);

      for (let z of jsIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        jsIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (jsScore < 100) {
      jsScoreBelow70.classList.remove("d-none");
      jsScore100.classList.add("d-none");
      sectionCodingjs.classList.add("back15");

      jsResult1.textContent = "Test finished!!";
      jsResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      jsResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      jsResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      jsIncorrectAnswersDisplay.appendChild(h2);

      for (let z of jsIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        jsIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (jsScore === 100) {
      document.getElementById("sectionCodingjs").classList.add("back14");
      jsScore100.classList.remove("d-none");
      jsScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqjs.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingjsQues.innerHTML = formattedQuestion;
    fillBlankjs.classList.add("d-none");
    op1js.textContent = y.op1;
    op2js.textContent = y.op2;
    op3js.textContent = y.op3;
    op4js.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(jsTimerId);
      jsTime = 30;
      jsSkip.textContent = "Next";
      jsSkip.style.backgroundColor = "#23ebdd";
      jsSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        jsScore += 10;
        jsScoreShow.textContent = "+10";
        jsScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        jsScore -= 5;
        jsScoreShow.textContent = "-5";
        jsScoreShow.style.color = "red";
        jsIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      jsScoreDisplay.textContent = "Score: " + jsScore + "/100";
    }

    op1js.onclick = () => handleOptionClick(op1js, [op2js, op3js, op4js]);
    op2js.onclick = () => handleOptionClick(op2js, [op1js, op3js, op4js]);
    op3js.onclick = () => handleOptionClick(op3js, [op1js, op2js, op4js]);
    op4js.onclick = () => handleOptionClick(op4js, [op1js, op2js, op3js]);

    jsSkip.onclick = function () {
      clearInterval(jsTimerId);
      jsTime = 30;
      jsQuestionNumber.textContent = "Question:" + jsQuestionCount + "/10";
      jsQuestionCount++;
      [op1js, op2js, op3js, op4js].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      jsIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingjsStart();
    };
  }
  else {
    mcqjs.classList.add("d-none");
    fillBlankjs.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingjsQues.innerHTML = formattedQuestion;

    jsCheckFill.disabled = false;
    jsFillAns.disabled = false;
    jsFillAns.value = "";
    jsStatus1.classList.remove("d-none");
    jsStatus2.classList.add("d-none");
    jsStatus3.classList.add("d-none");
    jsScoreShow.textContent = "";

    jsCheckFill.onclick = function () {
      clearInterval(jsTimerId);
      jsCheckFill.disabled = true;
      jsSkip2.textContent = "Next";
      jsSkip2.style.backgroundColor = "#23ebdd";
      jsSkip2.style.borderColor = "#23ebdd";
      jsFillAns.disabled = true;

      if (jsFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        jsStatus1.classList.add("d-none");
        jsStatus2.classList.remove("d-none");
        jsScore += 10;
        jsScoreShow.textContent = "+10";
        jsScoreShow.style.color = "green";
      } else {
        jsStatus1.classList.add("d-none");
        jsStatus3.classList.remove("d-none");
        jsScore -= 5;
        jsScoreShow.textContent = "-5";
        jsScoreShow.style.color = "red";
        jsIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: jsFillAns.value });
      }
      jsScoreDisplay.textContent = "Score: " + jsScore + "/100";
    };

    jsSkip2.onclick = function () {
      if (jsFillAns.value === "") {
        jsIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      }
      clearInterval(jsTimerId);
      jsTime = 30;
      jsQuestionNumber.textContent = "Question:" + jsQuestionCount + "/10";
      jsQuestionCount++;
      codingjsStart();
    };
  }
}




}
function resetCodingjs() {
  document.getElementById("codingjsShow").classList.add("d-none");
  document.getElementById("codingResultjs").classList.add("d-none");
  document.getElementById("codingjsHide").classList.remove("d-none");

  document.getElementById("jsQuestionNumber").innerText = "Question: 1/10";
  document.getElementById("jsScoreDisplay").innerText = "Score: 0/100";
  document.getElementById("jsScoreShow").innerText = "";
  document.getElementById("jsTimer").innerText = "00";
  document.getElementById("codingjsQues").innerText = "";

  document.getElementById("op1js").innerText = "option1";
  document.getElementById("op2js").innerText = "option2";
  document.getElementById("op3js").innerText = "option3";
  document.getElementById("op4js").innerText = "option4";

  jsIncorrectAnswers = [];
  document.getElementById("jsIncorrectAnswersDisplay").innerHTML = "";

  jsScore100.classList.add("d-none");
  jsScoreBelow70.classList.add("d-none");

  jsResult1.textContent = "";
  jsResult2.textContent = "";
  jsResult3.src = "";
  jsResult4.textContent = "";

  sectionCodingjs.classList.remove("back14");
  sectionCodingjs.classList.remove("back15");

  document.getElementById("jsFillAns").value = "";
  document.getElementById("fillBlankjs").style.display = "none";
  document.getElementById("mcqjs").style.display = "block";

  document.getElementById("jsStatus1").classList.remove("d-none");
  document.getElementById("jsStatus2").classList.add("d-none");
  document.getElementById("jsStatus3").classList.add("d-none");

  if (typeof jsTimerId !== "undefined") {
    clearInterval(jsTimerId);
  }
  jsTime = 20;
  jsQuestionCount = 2;
  jsScore = 0;
}

function jsResetLevel() {
  jsButton1.disabled = false;
  jsButton2.disabled = false;
  jsButton3.disabled = false;
  jsButton.classList.add("d-none");
  jsIncorrectAnswers = [];
}


// sql 

let sqlButton = document.getElementById("sqlButton");
let sqlButton1 = document.getElementById("sqlButton1");
let sqlButton2 = document.getElementById("sqlButton2");
let sqlButton3 = document.getElementById("sqlButton3");
let sqlLevel = 0;
let sqlCodingTest = document.getElementById("sqlCodingTest");
let sqlTimer = document.getElementById("sqlTimer");

sqlButton1.onclick = function () {
  sqlButton2.disabled = true;
  sqlButton3.disabled = true;
  sqlLevel = 1;

  sqlButton.classList.remove("d-none");
  sqlButton.classList.add("d-block");
};

sqlButton2.onclick = function () {
  sqlButton1.disabled = true;
  sqlButton3.disabled = true;
  sqlLevel = 2;

  sqlButton.classList.remove("d-none");
  sqlButton.classList.add("d-block");
};

sqlButton3.onclick = function () {
  sqlButton2.disabled = true;
  sqlButton1.disabled = true;
  sqlLevel = 3;

  sqlButton.classList.remove("d-none");
  sqlButton.classList.add("d-block");
};

let sqlTime = 0;

let codingsqlShow = document.getElementById("codingsqlShow");
let codingsqlHide = document.getElementById("codingsqlHide");
let codingsqlBack = document.getElementById("codingsqlBack");

codingsqlBack.onclick = function () {
  codingsqlShow.classList.add("d-none");
  codingsqlHide.classList.remove("d-none");
};

let codingsql1Arr=[
  {
  "ques": "Which keyword selects data?<br><br>",
  "quesType": "mcq",
  "op1": "SELECT",
  "op2": "GET",
  "op3": "SHOW",
  "op4": "FETCH",
  "ans": "SELECT"
},
{
  "ques": "Which keyword inserts data?<br><br>",
  "quesType": "mcq",
  "op1": "PUT",
  "op2": "ADD",
  "op3": "INSERT",
  "op4": "POST",
  "ans": "INSERT"
},
{
  "ques": "Which deletes rows?<br><br>",
  "quesType": "mcq",
  "op1": "REMOVE",
  "op2": "DROP",
  "op3": "DELETE",
  "op4": "CUT",
  "ans": "DELETE"
},
{
  "ques": "Which updates data?<br><br>",
  "quesType": "mcq",
  "op1": "CHANGE",
  "op2": "UPDATE",
  "op3": "MODIFY",
  "op4": "ALTER",
  "ans": "UPDATE"
},
{
  "ques": "Which keyword creates a table?<br><br>",
  "quesType": "mcq",
  "op1": "MAKE TABLE",
  "op2": "NEW TABLE",
  "op3": "CREATE TABLE",
  "op4": "SET TABLE",
  "ans": "CREATE TABLE"
},
{
  "ques": "Which keyword removes a table?<br><br>",
  "quesType": "mcq",
  "op1": "DELETE TABLE",
  "op2": "REMOVE TABLE",
  "op3": "DROP TABLE",
  "op4": "CUT TABLE",
  "ans": "DROP TABLE"
},
{
  "ques": "Which keyword adds a column?<br><br>",
  "quesType": "mcq",
  "op1": "INSERT COLUMN",
  "op2": "ADD COLUMN",
  "op3": "NEW COLUMN",
  "op4": "APPEND COLUMN",
  "ans": "ADD COLUMN"
},
{
  "ques": "Which keyword changes table structure?<br><br>",
  "quesType": "mcq",
  "op1": "UPDATE TABLE",
  "op2": "CHANGE TABLE",
  "op3": "MODIFY TABLE",
  "op4": "ALTER TABLE",
  "ans": "ALTER TABLE"
},
{
  "ques": "Which returns unique values?<br><br>",
  "quesType": "mcq",
  "op1": "SINGLE",
  "op2": "ONLY",
  "op3": "UNIQUE",
  "op4": "DISTINCT",
  "ans": "DISTINCT"
},
{
  "ques": "Which keyword orders rows?<br><br>",
  "quesType": "mcq",
  "op1": "ARRANGE BY",
  "op2": "ORDER BY",
  "op3": "SORT BY",
  "op4": "GROUP BY",
  "ans": "ORDER BY"
},
{
  "ques": "Which groups rows?<br><br>",
  "quesType": "mcq",
  "op1": "ORDER BY",
  "op2": "GROUP BY",
  "op3": "SORT BY",
  "op4": "CLASSIFY",
  "ans": "GROUP BY"
},
{
  "ques": "Which limits rows?<br><br>",
  "quesType": "mcq",
  "op1": "LIMIT",
  "op2": "STOP",
  "op3": "END",
  "op4": "RESTRICT",
  "ans": "LIMIT"
},
{
  "ques": "Which keyword joins tables?<br><br>",
  "quesType": "mcq",
  "op1": "JOIN",
  "op2": "LINK",
  "op3": "CONNECT",
  "op4": "MERGE",
  "ans": "JOIN"
},
{
  "ques": "Which removes duplicates?<br><br>",
  "quesType": "mcq",
  "op1": "UNIQUE",
  "op2": "ONLY",
  "op3": "SINGLE",
  "op4": "DISTINCT",
  "ans": "DISTINCT"
},
{
  "ques": "Which checks a condition?<br><br>",
  "quesType": "mcq",
  "op1": "IF",
  "op2": "CASE",
  "op3": "WHERE",
  "op4": "WHEN",
  "ans": "WHERE"
},
{
  "ques": "Which sorts ascending by default?<br><br>",
  "quesType": "mcq",
  "op1": "DESC",
  "op2": "ASC",
  "op3": "ORDER",
  "op4": "SORT",
  "ans": "ASC"
},
{
  "ques": "Which keyword gives column alias?<br><br>",
  "quesType": "mcq",
  "op1": "RENAME",
  "op2": "ALIAS",
  "op3": "AS",
  "op4": "LABEL",
  "ans": "AS"
},
{
  "ques": "Which returns number of rows?<br><br>",
  "quesType": "mcq",
  "op1": "COUNT()",
  "op2": "SUM()",
  "op3": "TOTAL()",
  "op4": "LENGTH()",
  "ans": "COUNT()"
},
{
  "ques": "Which finds maximum?<br><br>",
  "quesType": "mcq",
  "op1": "MAX()",
  "op2": "HIGHEST()",
  "op3": "GREATEST()",
  "op4": "TOP()",
  "ans": "MAX()"
},
{
  "ques": "Which finds average?<br><br>",
  "quesType": "mcq",
  "op1": "SUM()",
  "op2": "AVG()",
  "op3": "MEAN()",
  "op4": "AVERAGE()",
  "ans": "AVG()"
},

{
  "ques": "Select rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "SELECT"
},
{
  "ques": "Insert rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "INSERT"
},
{
  "ques": "Remove rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "DELETE"
},
{
  "ques": "Change rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "UPDATE"
},
{
  "ques": "Create table keyword?<br><br>",
  "quesType": "fill",
  "ans": "CREATE TABLE"
},
{
  "ques": "Drop table keyword?<br><br>",
  "quesType": "fill",
  "ans": "DROP TABLE"
},
{
  "ques": "Add column keyword?<br><br>",
  "quesType": "fill",
  "ans": "ADD COLUMN"
},
{
  "ques": "Change table keyword?<br><br>",
  "quesType": "fill",
  "ans": "ALTER TABLE"
},
{
  "ques": "Return unique rows?<br><br>",
  "quesType": "fill",
  "ans": "DISTINCT"
},
{
  "ques": "Order rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "ORDER BY"
},
{
  "ques": "Group rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "GROUP BY"
},
{
  "ques": "Limit rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "LIMIT"
},
{
  "ques": "Combine tables keyword?<br><br>",
  "quesType": "fill",
  "ans": "JOIN"
},
{
  "ques": "Condition keyword?<br><br>",
  "quesType": "fill",
  "ans": "WHERE"
},
{
  "ques": "Sort ascending keyword?<br><br>",
  "quesType": "fill",
  "ans": "ASC"
},
{
  "ques": "Column alias keyword?<br><br>",
  "quesType": "fill",
  "ans": "AS"
},
{
  "ques": "Count rows function?<br><br>",
  "quesType": "fill",
  "ans": "COUNT()"
},
{
  "ques": "Max value function?<br><br>",
  "quesType": "fill",
  "ans": "MAX()"
},
{
  "ques": "Min value function?<br><br>",
  "quesType": "fill",
  "ans": "MIN()"
},
{
  "ques": "Average value function?<br><br>",
  "quesType": "fill",
  "ans": "AVG()"
},
{
  "ques": "Which clause filters rows?<br><br>",
  "quesType": "mcq",
  "op1": "WHERE",
  "op2": "HAVING",
  "op3": "FILTER",
  "op4": "IF",
  "ans": "WHERE"
},
{
  "ques": "Which clause filters groups?<br><br>",
  "quesType": "mcq",
  "op1": "GROUP BY",
  "op2": "WHERE",
  "op3": "HAVING",
  "op4": "FILTER",
  "ans": "HAVING"
},
{
  "ques": "Which combines results of queries?<br><br>",
  "quesType": "mcq",
  "op1": "JOIN",
  "op2": "MERGE",
  "op3": "UNION",
  "op4": "COMBINE",
  "ans": "UNION"
},
{
  "ques": "Which removes duplicate rows?<br><br>",
  "quesType": "mcq",
  "op1": "DISTINCT",
  "op2": "UNIQUE",
  "op3": "FILTER",
  "op4": "ONLY",
  "ans": "DISTINCT"
},
{
  "ques": "Which counts non-null rows?<br><br>",
  "quesType": "mcq",
  "op1": "COUNT()",
  "op2": "SUM()",
  "op3": "LENGTH()",
  "op4": "TOTAL()",
  "ans": "COUNT()"
},
{
  "ques": "Which returns sum of values?<br><br>",
  "quesType": "mcq",
  "op1": "SUM()",
  "op2": "TOTAL()",
  "op3": "ADD()",
  "op4": "COUNT()",
  "ans": "SUM()"
},
{
  "ques": "Which gets minimum value?<br><br>",
  "quesType": "mcq",
  "op1": "MIN()",
  "op2": "LOWEST()",
  "op3": "BOTTOM()",
  "op4": "SMALLEST()",
  "ans": "MIN()"
},
{
  "ques": "Which tests if value exists?<br><br>",
  "quesType": "mcq",
  "op1": "FIND",
  "op2": "MATCH",
  "op3": "EXISTS",
  "op4": "IN",
  "ans": "EXISTS"
},
{
  "ques": "Which tests if value matches any list?<br><br>",
  "quesType": "mcq",
  "op1": "EQUALS",
  "op2": "ANY",
  "op3": "IN",
  "op4": "ONE OF",
  "ans": "IN"
},
{
  "ques": "Which tests pattern match?<br><br>",
  "quesType": "mcq",
  "op1": "EQUALS",
  "op2": "LIKE",
  "op3": "PATTERN",
  "op4": "MATCH",
  "ans": "LIKE"
},
{
  "ques": "Which tests if null?<br><br>",
  "quesType": "mcq",
  "op1": "IS EMPTY",
  "op2": "IS NULL",
  "op3": "IS NONE",
  "op4": "IS ZERO",
  "ans": "IS NULL"
},
{
  "ques": "Which clause changes column name in output?<br><br>",
  "quesType": "mcq",
  "op1": "AS",
  "op2": "RENAME",
  "op3": "ALIAS",
  "op4": "LABEL",
  "ans": "AS"
},
{
  "ques": "Which clause limits number of output rows?<br><br>",
  "quesType": "mcq",
  "op1": "LIMIT",
  "op2": "STOP",
  "op3": "RESTRICT",
  "op4": "ROWLIMIT",
  "ans": "LIMIT"
},
{
  "ques": "Which returns rows matching all conditions?<br><br>",
  "quesType": "mcq",
  "op1": "WHERE",
  "op2": "HAVING",
  "op3": "AND",
  "op4": "OR",
  "ans": "AND"
},
{
  "ques": "Which returns rows matching any condition?<br><br>",
  "quesType": "mcq",
  "op1": "AND",
  "op2": "OR",
  "op3": "XOR",
  "op4": "WHERE",
  "ans": "OR"
},
{
  "ques": "Which is a comment style in SQL?<br><br>",
  "quesType": "mcq",
  "op1": "-- comment",
  "op2": "// comment",
  "op3": "# comment",
  "op4": "/* comment */",
  "ans": "-- comment"
},
{
  "ques": "Which disables foreign key checks?<br><br>",
  "quesType": "mcq",
  "op1": "CHECK OFF",
  "op2": "SET FOREIGN_KEY_CHECKS=0",
  "op3": "FOREIGN OFF",
  "op4": "DISABLE FK",
  "ans": "SET FOREIGN_KEY_CHECKS=0"
},
{
  "ques": "Which keyword changes database?<br><br>",
  "quesType": "mcq",
  "op1": "USE",
  "op2": "SET",
  "op3": "CHANGE",
  "op4": "SWITCH",
  "ans": "USE"
},
{
  "ques": "Which keyword describes table?<br><br>",
  "quesType": "mcq",
  "op1": "INFO",
  "op2": "SHOW",
  "op3": "DESCRIBE",
  "op4": "DETAILS",
  "ans": "DESCRIBE"
},
{
  "ques": "Which keyword shows all tables?<br><br>",
  "quesType": "mcq",
  "op1": "SHOW",
  "op2": "LIST",
  "op3": "TABLES",
  "op4": "SHOW TABLES",
  "ans": "SHOW TABLES"
},

{
  "ques": "Filter rows clause?<br><br>",
  "quesType": "fill",
  "ans": "WHERE"
},
{
  "ques": "Filter groups clause?<br><br>",
  "quesType": "fill",
  "ans": "HAVING"
},
{
  "ques": "Combine queries keyword?<br><br>",
  "quesType": "fill",
  "ans": "UNION"
},
{
  "ques": "Check if exists keyword?<br><br>",
  "quesType": "fill",
  "ans": "EXISTS"
},
{
  "ques": "Pattern match keyword?<br><br>",
  "quesType": "fill",
  "ans": "LIKE"
},
{
  "ques": "Match any list keyword?<br><br>",
  "quesType": "fill",
  "ans": "IN"
},
{
  "ques": "Check null keyword?<br><br>",
  "quesType": "fill",
  "ans": "IS NULL"
},
{
  "ques": "Change output name keyword?<br><br>",
  "quesType": "fill",
  "ans": "AS"
},
{
  "ques": "Switch database keyword?<br><br>",
  "quesType": "fill",
  "ans": "USE"
},
{
  "ques": "Show table structure keyword?<br><br>",
  "quesType": "fill",
  "ans": "DESCRIBE"
}
,
{
  "ques": "Which clause filters rows?<br><br>",
  "quesType": "mcq",
  "op1": "HAVING",
  "op2": "FILTER",
  "op3": "WHERE",
  "op4": "CHECK",
  "ans": "WHERE"
},
{
  "ques": "Which clause filters groups?<br><br>",
  "quesType": "mcq",
  "op1": "GROUP BY",
  "op2": "HAVING",
  "op3": "WHERE",
  "op4": "FILTER",
  "ans": "HAVING"
},
{
  "ques": "Which statement saves changes?<br><br>",
  "quesType": "mcq",
  "op1": "SAVE",
  "op2": "APPLY",
  "op3": "STORE",
  "op4": "COMMIT",
  "ans": "COMMIT"
},
{
  "ques": "Which statement cancels changes?<br><br>",
  "quesType": "mcq",
  "op1": "REMOVE",
  "op2": "ROLLBACK",
  "op3": "UNDO",
  "op4": "DELETE",
  "ans": "ROLLBACK"
},
{
  "ques": "Which sets a condition for rows?<br><br>",
  "quesType": "mcq",
  "op1": "ON",
  "op2": "CASE",
  "op3": "WHERE",
  "op4": "IF",
  "ans": "WHERE"
},
{
  "ques": "Which keyword sets a default value?<br><br>",
  "quesType": "mcq",
  "op1": "SET",
  "op2": "DEFAULT",
  "op3": "VALUE",
  "op4": "ASSIGN",
  "ans": "DEFAULT"
},
{
  "ques": "Which is a primary key?<br><br>",
  "quesType": "mcq",
  "op1": "PRIMARY",
  "op2": "KEY",
  "op3": "PRIMARY KEY",
  "op4": "ID KEY",
  "ans": "PRIMARY KEY"
},
{
  "ques": "Which is a foreign key?<br><br>",
  "quesType": "mcq",
  "op1": "FOREIGN",
  "op2": "LINK KEY",
  "op3": "EXTERNAL KEY",
  "op4": "FOREIGN KEY",
  "ans": "FOREIGN KEY"
},
{
  "ques": "Which keyword creates an index?<br><br>",
  "quesType": "mcq",
  "op1": "NEW INDEX",
  "op2": "INDEX",
  "op3": "CREATE INDEX",
  "op4": "SET INDEX",
  "ans": "CREATE INDEX"
},
{
  "ques": "Which removes an index?<br><br>",
  "quesType": "mcq",
  "op1": "DELETE INDEX",
  "op2": "DROP INDEX",
  "op3": "REMOVE INDEX",
  "op4": "CUT INDEX",
  "ans": "DROP INDEX"
},
{
  "ques": "Which statement backs up data?<br><br>",
  "quesType": "mcq",
  "op1": "SAVE",
  "op2": "EXPORT",
  "op3": "BACKUP",
  "op4": "COPY",
  "ans": "BACKUP"
},
{
  "ques": "Which checks null values?<br><br>",
  "quesType": "mcq",
  "op1": "CHECK NULL",
  "op2": "IS NULL",
  "op3": "NULL",
  "op4": "NULL CHECK",
  "ans": "IS NULL"
},
{
  "ques": "Which keyword combines results?<br><br>",
  "quesType": "mcq",
  "op1": "JOIN",
  "op2": "MERGE",
  "op3": "COMBINE",
  "op4": "UNION",
  "ans": "UNION"
},
{
  "ques": "Which shows current database?<br><br>",
  "quesType": "mcq",
  "op1": "SHOW DATABASE",
  "op2": "SELECT DB",
  "op3": "USE DATABASE",
  "op4": "SELECT DATABASE()",
  "ans": "SELECT DATABASE()"
},
{
  "ques": "Which command switches database?<br><br>",
  "quesType": "mcq",
  "op1": "SWITCH",
  "op2": "USE",
  "op3": "SET",
  "op4": "CHANGE",
  "ans": "USE"
},
{
  "ques": "Which keyword defines a constraint?<br><br>",
  "quesType": "mcq",
  "op1": "RESTRICT",
  "op2": "LIMIT",
  "op3": "RULE",
  "op4": "CONSTRAINT",
  "ans": "CONSTRAINT"
},
{
  "ques": "Which function sums values?<br><br>",
  "quesType": "mcq",
  "op1": "TOTAL()",
  "op2": "ADD()",
  "op3": "SUM()",
  "op4": "PLUS()",
  "ans": "SUM()"
},
{
  "ques": "Which function finds minimum?<br><br>",
  "quesType": "mcq",
  "op1": "LEAST()",
  "op2": "MIN()",
  "op3": "LOWEST()",
  "op4": "BOTTOM()",
  "ans": "MIN()"
},
{
  "ques": "Which shows current user?<br><br>",
  "quesType": "mcq",
  "op1": "USER()",
  "op2": "SHOW USER",
  "op3": "SELECT USER",
  "op4": "CURRENT USER",
  "ans": "USER()"
},
{
  "ques": "Which keyword renames a table?<br><br>",
  "quesType": "mcq",
  "op1": "RENAME",
  "op2": "ALTER",
  "op3": "RENAME TABLE",
  "op4": "CHANGE TABLE",
  "ans": "RENAME TABLE"
},

{
  "ques": "Filter rows clause?<br><br>",
  "quesType": "fill",
  "ans": "WHERE"
},
{
  "ques": "Filter groups clause?<br><br>",
  "quesType": "fill",
  "ans": "HAVING"
},
{
  "ques": "Save changes statement?<br><br>",
  "quesType": "fill",
  "ans": "COMMIT"
},
{
  "ques": "Cancel changes statement?<br><br>",
  "quesType": "fill",
  "ans": "ROLLBACK"
},
{
  "ques": "Set default value keyword?<br><br>",
  "quesType": "fill",
  "ans": "DEFAULT"
},
{
  "ques": "Define constraint keyword?<br><br>",
  "quesType": "fill",
  "ans": "CONSTRAINT"
},
{
  "ques": "Create index keyword?<br><br>",
  "quesType": "fill",
  "ans": "CREATE INDEX"
},
{
  "ques": "Drop index keyword?<br><br>",
  "quesType": "fill",
  "ans": "DROP INDEX"
},
{
  "ques": "Combine results keyword?<br><br>",
  "quesType": "fill",
  "ans": "UNION"
},
{
  "ques": "Show current database?<br><br>",
  "quesType": "fill",
  "ans": "SELECT DATABASE()"
},
{
  "ques": "Switch database command?<br><br>",
  "quesType": "fill",
  "ans": "USE"
},
{
  "ques": "Check NULL keyword?<br><br>",
  "quesType": "fill",
  "ans": "IS NULL"
},
{
  "ques": "Show current user?<br><br>",
  "quesType": "fill",
  "ans": "USER()"
},
{
  "ques": "Rename table keyword?<br><br>",
  "quesType": "fill",
  "ans": "RENAME TABLE"
},
{
  "ques": "Sum values function?<br><br>",
  "quesType": "fill",
  "ans": "SUM()"
}
,
{
  "ques": "Which keyword renames a table?<br><br>",
  "quesType": "mcq",
  "op1": "CHANGE",
  "op2": "RENAME",
  "op3": "ALTER",
  "op4": "SWITCH",
  "ans": "RENAME"
},
{
  "ques": "Which combines result sets?<br><br>",
  "quesType": "mcq",
  "op1": "GROUP",
  "op2": "MERGE",
  "op3": "JOIN",
  "op4": "UNION",
  "ans": "UNION"
},
{
  "ques": "Which operator matches a pattern?<br><br>",
  "quesType": "mcq",
  "op1": "MATCH",
  "op2": "LIKE",
  "op3": "SEARCH",
  "op4": "FIND",
  "ans": "LIKE"
},
{
  "ques": "Which checks NULL value?<br><br>",
  "quesType": "mcq",
  "op1": "IS EMPTY",
  "op2": "EQUAL NULL",
  "op3": "IS NULL",
  "op4": "NULL?",
  "ans": "IS NULL"
},
{
  "ques": "Which function sums values?<br><br>",
  "quesType": "mcq",
  "op1": "COUNT()",
  "op2": "TOTAL()",
  "op3": "ADD()",
  "op4": "SUM()",
  "ans": "SUM()"
},
{
  "ques": "Which restricts query result?<br><br>",
  "quesType": "mcq",
  "op1": "WHERE",
  "op2": "HAVING",
  "op3": "GROUP",
  "op4": "BY",
  "ans": "WHERE"
},
{
  "ques": "Which filter uses aggregates?<br><br>",
  "quesType": "mcq",
  "op1": "WHERE",
  "op2": "ORDER",
  "op3": "HAVING",
  "op4": "GROUP",
  "ans": "HAVING"
},
{
  "ques": "Which creates a new DB?<br><br>",
  "quesType": "mcq",
  "op1": "MAKE DATABASE",
  "op2": "CREATE DATABASE",
  "op3": "NEW DB",
  "op4": "DB CREATE",
  "ans": "CREATE DATABASE"
},
{
  "ques": "Which removes a DB?<br><br>",
  "quesType": "mcq",
  "op1": "DROP DATABASE",
  "op2": "DELETE DATABASE",
  "op3": "REMOVE DB",
  "op4": "CUT DATABASE",
  "ans": "DROP DATABASE"
},
{
  "ques": "Which retrieves top N rows?<br><br>",
  "quesType": "mcq",
  "op1": "FIRST",
  "op2": "HEAD",
  "op3": "TOP",
  "op4": "LIMIT",
  "ans": "LIMIT"
},
{
  "ques": "Which combines rows vertically?<br><br>",
  "quesType": "mcq",
  "op1": "UNION",
  "op2": "JOIN",
  "op3": "MERGE",
  "op4": "LINK",
  "ans": "UNION"
},
{
  "ques": "Which sorts Z to A?<br><br>",
  "quesType": "mcq",
  "op1": "ASC",
  "op2": "ORDER",
  "op3": "BY",
  "op4": "DESC",
  "ans": "DESC"
},
{
  "ques": "Which returns min value?<br><br>",
  "quesType": "mcq",
  "op1": "MIN()",
  "op2": "LOWEST()",
  "op3": "SMALLEST()",
  "op4": "LEAST()",
  "ans": "MIN()"
},
{
  "ques": "Which tests multiple conditions?<br><br>",
  "quesType": "mcq",
  "op1": "AND",
  "op2": "OR",
  "op3": "BETWEEN",
  "op4": "IN",
  "ans": "AND"
},
{
  "ques": "Which matches any value in list?<br><br>",
  "quesType": "mcq",
  "op1": "ALL",
  "op2": "ANY",
  "op3": "IN",
  "op4": "SOME",
  "ans": "IN"
},
{
  "ques": "Which checks range?<br><br>",
  "quesType": "mcq",
  "op1": "BETWEEN",
  "op2": "IN",
  "op3": "AND",
  "op4": "RANGE",
  "ans": "BETWEEN"
},
{
  "ques": "Which shows current date?<br><br>",
  "quesType": "mcq",
  "op1": "DATE()",
  "op2": "NOW()",
  "op3": "CURRENT_DATE",
  "op4": "GETDATE()",
  "ans": "NOW()"
},
{
  "ques": "Which removes all rows?<br><br>",
  "quesType": "mcq",
  "op1": "DELETE",
  "op2": "TRUNCATE",
  "op3": "DROP",
  "op4": "REMOVE",
  "ans": "TRUNCATE"
},
{
  "ques": "Which creates view?<br><br>",
  "quesType": "mcq",
  "op1": "NEW VIEW",
  "op2": "MAKE VIEW",
  "op3": "CREATE VIEW",
  "op4": "VIEW CREATE",
  "ans": "CREATE VIEW"
},
{
  "ques": "Which removes a view?<br><br>",
  "quesType": "mcq",
  "op1": "DELETE VIEW",
  "op2": "DROP VIEW",
  "op3": "REMOVE VIEW",
  "op4": "CUT VIEW",
  "ans": "DROP VIEW"
},

{
  "ques": "Rename table keyword?<br><br>",
  "quesType": "fill",
  "ans": "RENAME"
},
{
  "ques": "Combine result sets keyword?<br><br>",
  "quesType": "fill",
  "ans": "UNION"
},
{
  "ques": "Pattern match keyword?<br><br>",
  "quesType": "fill",
  "ans": "LIKE"
},
{
  "ques": "Check for null keyword?<br><br>",
  "quesType": "fill",
  "ans": "IS NULL"
},
{
  "ques": "Sum values function?<br><br>",
  "quesType": "fill",
  "ans": "SUM()"
},
{
  "ques": "Condition filter keyword?<br><br>",
  "quesType": "fill",
  "ans": "WHERE"
},
{
  "ques": "Filter groups keyword?<br><br>",
  "quesType": "fill",
  "ans": "HAVING"
},
{
  "ques": "New database keyword?<br><br>",
  "quesType": "fill",
  "ans": "CREATE DATABASE"
},
{
  "ques": "Remove database keyword?<br><br>",
  "quesType": "fill",
  "ans": "DROP DATABASE"
},
{
  "ques": "Sort descending keyword?<br><br>",
  "quesType": "fill",
  "ans": "DESC"
},
{
  "ques": "Min value function?<br><br>",
  "quesType": "fill",
  "ans": "MIN()"
},
{
  "ques": "Multiple conditions keyword?<br><br>",
  "quesType": "fill",
  "ans": "AND"
},
{
  "ques": "List match keyword?<br><br>",
  "quesType": "fill",
  "ans": "IN"
},
{
  "ques": "Range match keyword?<br><br>",
  "quesType": "fill",
  "ans": "BETWEEN"
},
{
  "ques": "Current date function?<br><br>",
  "quesType": "fill",
  "ans": "NOW()"
},
{
  "ques": "Remove all rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "TRUNCATE"
},
{
  "ques": "Create view keyword?<br><br>",
  "quesType": "fill",
  "ans": "CREATE VIEW"
},
{
  "ques": "Remove view keyword?<br><br>",
  "quesType": "fill",
  "ans": "DROP VIEW"
},
{
  "ques": "Test condition keyword?<br><br>",
  "quesType": "fill",
  "ans": "CASE"
},
{
  "ques": "Test true or false keyword?<br><br>",
  "quesType": "fill",
  "ans": "EXISTS"
}
,
{
  "ques": "Which keyword retrieves rows?<br><br>",
  "quesType": "mcq",
  "op1": "SELECT",
  "op2": "FETCH",
  "op3": "GET",
  "op4": "SHOW",
  "ans": "SELECT"
},
{
  "ques": "Which keyword inserts new data?<br><br>",
  "quesType": "mcq",
  "op1": "PUT",
  "op2": "ADD",
  "op3": "INSERT",
  "op4": "POST",
  "ans": "INSERT"
},
{
  "ques": "Which removes rows from a table?<br><br>",
  "quesType": "mcq",
  "op1": "REMOVE",
  "op2": "DROP",
  "op3": "DELETE",
  "op4": "CUT",
  "ans": "DELETE"
},
{
  "ques": "Which modifies existing data?<br><br>",
  "quesType": "mcq",
  "op1": "CHANGE",
  "op2": "UPDATE",
  "op3": "MODIFY",
  "op4": "ALTER",
  "ans": "UPDATE"
},
{
  "ques": "Which creates a table?<br><br>",
  "quesType": "mcq",
  "op1": "MAKE TABLE",
  "op2": "NEW TABLE",
  "op3": "CREATE TABLE",
  "op4": "SET TABLE",
  "ans": "CREATE TABLE"
},
{
  "ques": "Which drops a table?<br><br>",
  "quesType": "mcq",
  "op1": "DELETE TABLE",
  "op2": "REMOVE TABLE",
  "op3": "DROP TABLE",
  "op4": "CUT TABLE",
  "ans": "DROP TABLE"
},
{
  "ques": "Which adds a column to a table?<br><br>",
  "quesType": "mcq",
  "op1": "INSERT COLUMN",
  "op2": "ADD COLUMN",
  "op3": "NEW COLUMN",
  "op4": "APPEND COLUMN",
  "ans": "ADD COLUMN"
},
{
  "ques": "Which modifies table structure?<br><br>",
  "quesType": "mcq",
  "op1": "UPDATE TABLE",
  "op2": "CHANGE TABLE",
  "op3": "MODIFY TABLE",
  "op4": "ALTER TABLE",
  "ans": "ALTER TABLE"
},
{
  "ques": "Which returns unique rows?<br><br>",
  "quesType": "mcq",
  "op1": "SINGLE",
  "op2": "ONLY",
  "op3": "UNIQUE",
  "op4": "DISTINCT",
  "ans": "DISTINCT"
},
{
  "ques": "Which orders rows?<br><br>",
  "quesType": "mcq",
  "op1": "ARRANGE BY",
  "op2": "ORDER BY",
  "op3": "SORT BY",
  "op4": "GROUP BY",
  "ans": "ORDER BY"
},
{
  "ques": "Which groups rows?<br><br>",
  "quesType": "mcq",
  "op1": "ORDER BY",
  "op2": "GROUP BY",
  "op3": "SORT BY",
  "op4": "CLASSIFY",
  "ans": "GROUP BY"
},
{
  "ques": "Which limits result rows?<br><br>",
  "quesType": "mcq",
  "op1": "LIMIT",
  "op2": "STOP",
  "op3": "END",
  "op4": "RESTRICT",
  "ans": "LIMIT"
},
{
  "ques": "Which keyword joins tables?<br><br>",
  "quesType": "mcq",
  "op1": "JOIN",
  "op2": "LINK",
  "op3": "CONNECT",
  "op4": "MERGE",
  "ans": "JOIN"
},
{
  "ques": "Which filters rows?<br><br>",
  "quesType": "mcq",
  "op1": "IF",
  "op2": "CASE",
  "op3": "WHERE",
  "op4": "WHEN",
  "ans": "WHERE"
},
{
  "ques": "Which filters groups?<br><br>",
  "quesType": "mcq",
  "op1": "HAVING",
  "op2": "WHERE",
  "op3": "FILTER",
  "op4": "GROUP BY",
  "ans": "HAVING"
},
{
  "ques": "Which checks for pattern?<br><br>",
  "quesType": "mcq",
  "op1": "LIKE",
  "op2": "IN",
  "op3": "MATCH",
  "op4": "FIND",
  "ans": "LIKE"
},
{
  "ques": "Which checks list match?<br><br>",
  "quesType": "mcq",
  "op1": "ANY",
  "op2": "IN",
  "op3": "ALL",
  "op4": "MATCH",
  "ans": "IN"
},
{
  "ques": "Which tests if exists?<br><br>",
  "quesType": "mcq",
  "op1": "FIND",
  "op2": "HAS",
  "op3": "EXISTS",
  "op4": "CHECK",
  "ans": "EXISTS"
},
{
  "ques": "Which gives column alias?<br><br>",
  "quesType": "mcq",
  "op1": "RENAME",
  "op2": "ALIAS",
  "op3": "AS",
  "op4": "LABEL",
  "ans": "AS"
},
{
  "ques": "Which returns total rows?<br><br>",
  "quesType": "mcq",
  "op1": "TOTAL()",
  "op2": "COUNT()",
  "op3": "SUM()",
  "op4": "ROWS()",
  "ans": "COUNT()"
}
,
{
  "ques": "Which keyword selects data?<br><br>",
  "quesType": "mcq",
  "op1": "SELECT",
  "op2": "GET",
  "op3": "FETCH",
  "op4": "SHOW",
  "ans": "SELECT"
},
{
  "ques": "Which keyword inserts data?<br><br>",
  "quesType": "mcq",
  "op1": "PUT",
  "op2": "ADD",
  "op3": "INSERT",
  "op4": "POST",
  "ans": "INSERT"
},
{
  "ques": "Which deletes rows?<br><br>",
  "quesType": "mcq",
  "op1": "REMOVE",
  "op2": "DROP",
  "op3": "DELETE",
  "op4": "CUT",
  "ans": "DELETE"
},
{
  "ques": "Which updates data?<br><br>",
  "quesType": "mcq",
  "op1": "CHANGE",
  "op2": "UPDATE",
  "op3": "MODIFY",
  "op4": "ALTER",
  "ans": "UPDATE"
},
{
  "ques": "Which creates table?<br><br>",
  "quesType": "mcq",
  "op1": "MAKE TABLE",
  "op2": "NEW TABLE",
  "op3": "CREATE TABLE",
  "op4": "SET TABLE",
  "ans": "CREATE TABLE"
},
{
  "ques": "Which drops table?<br><br>",
  "quesType": "mcq",
  "op1": "DELETE TABLE",
  "op2": "REMOVE TABLE",
  "op3": "DROP TABLE",
  "op4": "CUT TABLE",
  "ans": "DROP TABLE"
},
{
  "ques": "Which adds column?<br><br>",
  "quesType": "mcq",
  "op1": "INSERT COLUMN",
  "op2": "ADD COLUMN",
  "op3": "NEW COLUMN",
  "op4": "APPEND COLUMN",
  "ans": "ADD COLUMN"
},
{
  "ques": "Which alters table?<br><br>",
  "quesType": "mcq",
  "op1": "CHANGE TABLE",
  "op2": "UPDATE TABLE",
  "op3": "MODIFY TABLE",
  "op4": "ALTER TABLE",
  "ans": "ALTER TABLE"
},
{
  "ques": "Which returns unique rows?<br><br>",
  "quesType": "mcq",
  "op1": "SINGLE",
  "op2": "ONLY",
  "op3": "UNIQUE",
  "op4": "DISTINCT",
  "ans": "DISTINCT"
},
{
  "ques": "Which orders rows?<br><br>",
  "quesType": "mcq",
  "op1": "ARRANGE BY",
  "op2": "ORDER BY",
  "op3": "SORT BY",
  "op4": "GROUP BY",
  "ans": "ORDER BY"
},
{
  "ques": "Which groups rows?<br><br>",
  "quesType": "mcq",
  "op1": "ORDER BY",
  "op2": "GROUP BY",
  "op3": "SORT BY",
  "op4": "CLASSIFY",
  "ans": "GROUP BY"
},
{
  "ques": "Which limits rows?<br><br>",
  "quesType": "mcq",
  "op1": "LIMIT",
  "op2": "STOP",
  "op3": "END",
  "op4": "RESTRICT",
  "ans": "LIMIT"
},
{
  "ques": "Which joins tables?<br><br>",
  "quesType": "mcq",
  "op1": "JOIN",
  "op2": "LINK",
  "op3": "CONNECT",
  "op4": "MERGE",
  "ans": "JOIN"
},
{
  "ques": "Which clause filters rows?<br><br>",
  "quesType": "mcq",
  "op1": "CHECK",
  "op2": "CASE",
  "op3": "WHERE",
  "op4": "WHEN",
  "ans": "WHERE"
},
{
  "ques": "Which filters groups?<br><br>",
  "quesType": "mcq",
  "op1": "HAVING",
  "op2": "WHERE",
  "op3": "FILTER",
  "op4": "GROUP",
  "ans": "HAVING"
},
{
  "ques": "Which saves changes?<br><br>",
  "quesType": "mcq",
  "op1": "SAVE",
  "op2": "STORE",
  "op3": "COMMIT",
  "op4": "APPLY",
  "ans": "COMMIT"
},
{
  "ques": "Which cancels changes?<br><br>",
  "quesType": "mcq",
  "op1": "CANCEL",
  "op2": "ROLLBACK",
  "op3": "UNDO",
  "op4": "REMOVE",
  "ans": "ROLLBACK"
},
{
  "ques": "Which checks NULL values?<br><br>",
  "quesType": "mcq",
  "op1": "IS NULL",
  "op2": "NULL",
  "op3": "NULL CHECK",
  "op4": "HAS NULL",
  "ans": "IS NULL"
},
{
  "ques": "Which combines results?<br><br>",
  "quesType": "mcq",
  "op1": "MERGE",
  "op2": "UNION",
  "op3": "JOIN",
  "op4": "COMBINE",
  "ans": "UNION"
},
{
  "ques": "Which renames table?<br><br>",
  "quesType": "mcq",
  "op1": "RENAME",
  "op2": "RENAME TABLE",
  "op3": "ALTER NAME",
  "op4": "CHANGE TABLE",
  "ans": "RENAME TABLE"
}
,
{
  "ques": "Keyword to get rows?<br><br>",
  "quesType": "fill",
  "ans": "SELECT"
},
{
  "ques": "Keyword to add rows?<br><br>",
  "quesType": "fill",
  "ans": "INSERT"
},
{
  "ques": "Keyword to delete rows?<br><br>",
  "quesType": "fill",
  "ans": "DELETE"
},
{
  "ques": "Keyword to change data?<br><br>",
  "quesType": "fill",
  "ans": "UPDATE"
},
{
  "ques": "Keyword to make a table?<br><br>",
  "quesType": "fill",
  "ans": "CREATE TABLE"
},
{
  "ques": "Keyword to drop table?<br><br>",
  "quesType": "fill",
  "ans": "DROP TABLE"
},
{
  "ques": "Keyword to add column?<br><br>",
  "quesType": "fill",
  "ans": "ADD COLUMN"
},
{
  "ques": "Keyword to modify table?<br><br>",
  "quesType": "fill",
  "ans": "ALTER TABLE"
},
{
  "ques": "Keyword for unique rows?<br><br>",
  "quesType": "fill",
  "ans": "DISTINCT"
},
{
  "ques": "Keyword to order rows?<br><br>",
  "quesType": "fill",
  "ans": "ORDER BY"
},
{
  "ques": "Keyword to group rows?<br><br>",
  "quesType": "fill",
  "ans": "GROUP BY"
},
{
  "ques": "Keyword to limit rows?<br><br>",
  "quesType": "fill",
  "ans": "LIMIT"
},
{
  "ques": "Keyword to join tables?<br><br>",
  "quesType": "fill",
  "ans": "JOIN"
},
{
  "ques": "Clause to filter rows?<br><br>",
  "quesType": "fill",
  "ans": "WHERE"
},
{
  "ques": "Clause to filter groups?<br><br>",
  "quesType": "fill",
  "ans": "HAVING"
},
{
  "ques": "Keyword to match pattern?<br><br>",
  "quesType": "fill",
  "ans": "LIKE"
},
{
  "ques": "Keyword for list match?<br><br>",
  "quesType": "fill",
  "ans": "IN"
},
{
  "ques": "Keyword to test if exists?<br><br>",
  "quesType": "fill",
  "ans": "EXISTS"
},
{
  "ques": "Keyword for column alias?<br><br>",
  "quesType": "fill",
  "ans": "AS"
},
{
  "ques": "Function to count rows?<br><br>",
  "quesType": "fill",
  "ans": "COUNT()"
}
,
{
  "ques": "Select rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "SELECT"
},
{
  "ques": "Insert rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "INSERT"
},
{
  "ques": "Remove rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "DELETE"
},
{
  "ques": "Change rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "UPDATE"
},
{
  "ques": "Create table keyword?<br><br>",
  "quesType": "fill",
  "ans": "CREATE TABLE"
},
{
  "ques": "Drop table keyword?<br><br>",
  "quesType": "fill",
  "ans": "DROP TABLE"
},
{
  "ques": "Add column keyword?<br><br>",
  "quesType": "fill",
  "ans": "ADD COLUMN"
},
{
  "ques": "Alter table keyword?<br><br>",
  "quesType": "fill",
  "ans": "ALTER TABLE"
},
{
  "ques": "Unique rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "DISTINCT"
},
{
  "ques": "Order rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "ORDER BY"
},
{
  "ques": "Group rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "GROUP BY"
},
{
  "ques": "Limit rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "LIMIT"
},
{
  "ques": "Join tables keyword?<br><br>",
  "quesType": "fill",
  "ans": "JOIN"
},
{
  "ques": "Filter rows clause?<br><br>",
  "quesType": "fill",
  "ans": "WHERE"
},
{
  "ques": "Filter groups clause?<br><br>",
  "quesType": "fill",
  "ans": "HAVING"
},
{
  "ques": "Save changes keyword?<br><br>",
  "quesType": "fill",
  "ans": "COMMIT"
},
{
  "ques": "Cancel changes keyword?<br><br>",
  "quesType": "fill",
  "ans": "ROLLBACK"
},
{
  "ques": "Check NULL keyword?<br><br>",
  "quesType": "fill",
  "ans": "IS NULL"
},
{
  "ques": "Combine results keyword?<br><br>",
  "quesType": "fill",
  "ans": "UNION"
},
{
  "ques": "Rename table keyword?<br><br>",
  "quesType": "fill",
  "ans": "RENAME TABLE"
}
,
{
  "ques": "Which keyword selects unique rows?<br><br>",
  "quesType": "mcq",
  "op1": "ONLY",
  "op2": "DISTINCT",
  "op3": "UNIQUE",
  "op4": "DIFFERENT",
  "ans": "DISTINCT"
},
{
  "ques": "Which returns number of rows?<br><br>",
  "quesType": "mcq",
  "op1": "SUM()",
  "op2": "COUNT()",
  "op3": "TOTAL()",
  "op4": "NUMBER()",
  "ans": "COUNT()"
},
{
  "ques": "Which function finds avg value?<br><br>",
  "quesType": "mcq",
  "op1": "MEDIAN()",
  "op2": "AVG()",
  "op3": "MEAN()",
  "op4": "AVERAGE()",
  "ans": "AVG()"
},
{
  "ques": "Which operator checks multiple values?<br><br>",
  "quesType": "mcq",
  "op1": "WHERE",
  "op2": "IN",
  "op3": "OR",
  "op4": "AND",
  "ans": "IN"
},
{
  "ques": "Which keyword combines tables?<br><br>",
  "quesType": "mcq",
  "op1": "MERGE",
  "op2": "JOIN",
  "op3": "LINK",
  "op4": "ATTACH",
  "ans": "JOIN"
},
{
  "ques": "Which clause sorts rows?<br><br>",
  "quesType": "mcq",
  "op1": "SORT BY",
  "op2": "ORDER",
  "op3": "ORDER BY",
  "op4": "GROUP BY",
  "ans": "ORDER BY"
},
{
  "ques": "Which clause groups rows?<br><br>",
  "quesType": "mcq",
  "op1": "GROUP",
  "op2": "GROUPING",
  "op3": "ORDER BY",
  "op4": "GROUP BY",
  "ans": "GROUP BY"
},
{
  "ques": "Which function returns max value?<br><br>",
  "quesType": "mcq",
  "op1": "MAX()",
  "op2": "BIGGEST()",
  "op3": "LARGEST()",
  "op4": "HIGH()",
  "ans": "MAX()"
},
{
  "ques": "Which keyword updates data?<br><br>",
  "quesType": "mcq",
  "op1": "CHANGE",
  "op2": "MODIFY",
  "op3": "UPDATE",
  "op4": "ALTER",
  "ans": "UPDATE"
},
{
  "ques": "Which adds new row?<br><br>",
  "quesType": "mcq",
  "op1": "INSERT",
  "op2": "ADD",
  "op3": "APPEND",
  "op4": "PUSH",
  "ans": "INSERT"
},
{
  "ques": "Which removes row?<br><br>",
  "quesType": "mcq",
  "op1": "REMOVE",
  "op2": "DROP",
  "op3": "DELETE",
  "op4": "CUT",
  "ans": "DELETE"
},
{
  "ques": "Which keyword defines new column?<br><br>",
  "quesType": "mcq",
  "op1": "ADD COLUMN",
  "op2": "NEW COLUMN",
  "op3": "INSERT COLUMN",
  "op4": "DEFINE COLUMN",
  "ans": "ADD COLUMN"
},
{
  "ques": "Which changes table structure?<br><br>",
  "quesType": "mcq",
  "op1": "CHANGE",
  "op2": "UPDATE",
  "op3": "MODIFY",
  "op4": "ALTER",
  "ans": "ALTER"
},
{
  "ques": "Which returns current time?<br><br>",
  "quesType": "mcq",
  "op1": "DATE()",
  "op2": "GETDATE()",
  "op3": "TIME()",
  "op4": "NOW()",
  "ans": "NOW()"
},
{
  "ques": "Which keyword is condition test?<br><br>",
  "quesType": "mcq",
  "op1": "CHECK",
  "op2": "CASE",
  "op3": "WHEN",
  "op4": "IF",
  "ans": "CASE"
},
{
  "ques": "Which keyword sets default value?<br><br>",
  "quesType": "mcq",
  "op1": "DEFAULT",
  "op2": "SET",
  "op3": "VALUE",
  "op4": "ASSIGN",
  "ans": "DEFAULT"
},
{
  "ques": "Which ensures unique rows?<br><br>",
  "quesType": "mcq",
  "op1": "KEY",
  "op2": "UNIQUE",
  "op3": "INDEX",
  "op4": "ID",
  "ans": "UNIQUE"
},
{
  "ques": "Which makes index?<br><br>",
  "quesType": "mcq",
  "op1": "CREATE INDEX",
  "op2": "MAKE INDEX",
  "op3": "NEW INDEX",
  "op4": "ADD INDEX",
  "ans": "CREATE INDEX"
},
{
  "ques": "Which removes index?<br><br>",
  "quesType": "mcq",
  "op1": "DELETE INDEX",
  "op2": "DROP INDEX",
  "op3": "REMOVE INDEX",
  "op4": "CUT INDEX",
  "ans": "DROP INDEX"
},
{
  "ques": "Which joins all rows?<br><br>",
  "quesType": "mcq",
  "op1": "INNER JOIN",
  "op2": "OUTER JOIN",
  "op3": "FULL JOIN",
  "op4": "LEFT JOIN",
  "ans": "FULL JOIN"
},

{
  "ques": "Select unique rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "DISTINCT"
},
{
  "ques": "Count rows function?<br><br>",
  "quesType": "fill",
  "ans": "COUNT()"
},
{
  "ques": "Average function?<br><br>",
  "quesType": "fill",
  "ans": "AVG()"
},
{
  "ques": "Multiple value check keyword?<br><br>",
  "quesType": "fill",
  "ans": "IN"
},
{
  "ques": "Combine tables keyword?<br><br>",
  "quesType": "fill",
  "ans": "JOIN"
},
{
  "ques": "Sort rows clause?<br><br>",
  "quesType": "fill",
  "ans": "ORDER BY"
},
{
  "ques": "Group rows clause?<br><br>",
  "quesType": "fill",
  "ans": "GROUP BY"
},
{
  "ques": "Max value function?<br><br>",
  "quesType": "fill",
  "ans": "MAX()"
},
{
  "ques": "Update rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "UPDATE"
},
{
  "ques": "Add row keyword?<br><br>",
  "quesType": "fill",
  "ans": "INSERT"
},
{
  "ques": "Remove row keyword?<br><br>",
  "quesType": "fill",
  "ans": "DELETE"
},
{
  "ques": "Add column keyword?<br><br>",
  "quesType": "fill",
  "ans": "ADD COLUMN"
},
{
  "ques": "Change table keyword?<br><br>",
  "quesType": "fill",
  "ans": "ALTER"
},
{
  "ques": "Get current time function?<br><br>",
  "quesType": "fill",
  "ans": "NOW()"
},
{
  "ques": "Condition test keyword?<br><br>",
  "quesType": "fill",
  "ans": "CASE"
},
{
  "ques": "Set default value keyword?<br><br>",
  "quesType": "fill",
  "ans": "DEFAULT"
},
{
  "ques": "Ensure uniqueness keyword?<br><br>",
  "quesType": "fill",
  "ans": "UNIQUE"
},
{
  "ques": "Create index keyword?<br><br>",
  "quesType": "fill",
  "ans": "CREATE INDEX"
},
{
  "ques": "Remove index keyword?<br><br>",
  "quesType": "fill",
  "ans": "DROP INDEX"
},
{
  "ques": "Join all rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "FULL JOIN"
}
,
{
  "ques": "Which function returns the sum of values?<br><br>",
  "quesType": "mcq",
  "op1": "SUM()",
  "op2": "ADD()",
  "op3": "TOTAL()",
  "op4": "PLUS()",
  "ans": "SUM()"
},
{
  "ques": "Which finds the minimum value?<br><br>",
  "quesType": "mcq",
  "op1": "LEAST()",
  "op2": "MIN()",
  "op3": "LOWEST()",
  "op4": "BOTTOM()",
  "ans": "MIN()"
},
{
  "ques": "Which finds the maximum value?<br><br>",
  "quesType": "mcq",
  "op1": "TOP()",
  "op2": "MAX()",
  "op3": "HIGHEST()",
  "op4": "GREATEST()",
  "ans": "MAX()"
},
{
  "ques": "Which calculates average value?<br><br>",
  "quesType": "mcq",
  "op1": "MEAN()",
  "op2": "AVG()",
  "op3": "AVERAGE()",
  "op4": "MID()",
  "ans": "AVG()"
},
{
  "ques": "Which function counts rows?<br><br>",
  "quesType": "mcq",
  "op1": "COUNT()",
  "op2": "SUM()",
  "op3": "TOTAL()",
  "op4": "LEN()",
  "ans": "COUNT()"
},
{
  "ques": "Which statement ends a transaction?<br><br>",
  "quesType": "mcq",
  "op1": "FINISH",
  "op2": "END",
  "op3": "COMMIT",
  "op4": "SAVE",
  "ans": "COMMIT"
},
{
  "ques": "Which undoes a transaction?<br><br>",
  "quesType": "mcq",
  "op1": "CANCEL",
  "op2": "ROLLBACK",
  "op3": "REVERSE",
  "op4": "UNDO",
  "ans": "ROLLBACK"
},
{
  "ques": "Which makes unique values in a column?<br><br>",
  "quesType": "mcq",
  "op1": "ONLY",
  "op2": "SINGLE",
  "op3": "PRIMARY KEY",
  "op4": "ONE",
  "ans": "PRIMARY KEY"
},
{
  "ques": "Which prevents null values?<br><br>",
  "quesType": "mcq",
  "op1": "NO NULL",
  "op2": "NOT NULL",
  "op3": "NULL FALSE",
  "op4": "NON NULL",
  "ans": "NOT NULL"
},
{
  "ques": "Which sets a default value?<br><br>",
  "quesType": "mcq",
  "op1": "DEFAULT",
  "op2": "SET",
  "op3": "ASSIGN",
  "op4": "FIXED",
  "ans": "DEFAULT"
},
{
  "ques": "Which condition uses pattern matching?<br><br>",
  "quesType": "mcq",
  "op1": "MATCH",
  "op2": "LIKE",
  "op3": "FIND",
  "op4": "PATTERN",
  "ans": "LIKE"
},
{
  "ques": "Which keyword checks conditions?<br><br>",
  "quesType": "mcq",
  "op1": "CASE",
  "op2": "IF",
  "op3": "WHEN",
  "op4": "WHERE",
  "ans": "WHERE"
},
{
  "ques": "Which operator combines conditions?<br><br>",
  "quesType": "mcq",
  "op1": "OR",
  "op2": "AND",
  "op3": "ADD",
  "op4": "ALSO",
  "ans": "AND"
},
{
  "ques": "Which checks if a value is in a set?<br><br>",
  "quesType": "mcq",
  "op1": "ANY",
  "op2": "IN",
  "op3": "ALL",
  "op4": "MATCH",
  "ans": "IN"
},
{
  "ques": "Which orders rows in ascending order?<br><br>",
  "quesType": "mcq",
  "op1": "ASC",
  "op2": "DESC",
  "op3": "ORDER",
  "op4": "SORT",
  "ans": "ASC"
},
{
  "ques": "Which orders rows in descending order?<br><br>",
  "quesType": "mcq",
  "op1": "ASC",
  "op2": "ORDER",
  "op3": "SORT",
  "op4": "DESC",
  "ans": "DESC"
},
{
  "ques": "Which keyword combines result sets?<br><br>",
  "quesType": "mcq",
  "op1": "MERGE",
  "op2": "UNION",
  "op3": "JOIN",
  "op4": "LINK",
  "ans": "UNION"
},
{
  "ques": "Which keyword removes duplicate rows?<br><br>",
  "quesType": "mcq",
  "op1": "ONLY",
  "op2": "DISTINCT",
  "op3": "UNIQUE",
  "op4": "SINGLE",
  "ans": "DISTINCT"
},
{
  "ques": "Which checks multiple conditions?<br><br>",
  "quesType": "mcq",
  "op1": "CASE",
  "op2": "IF",
  "op3": "ELSE",
  "op4": "WHEN",
  "ans": "CASE"
},
{
  "ques": "Which changes the table name?<br><br>",
  "quesType": "mcq",
  "op1": "CHANGE",
  "op2": "RENAME",
  "op3": "MODIFY",
  "op4": "ALTER",
  "ans": "RENAME"
}
,
{
  "ques": "Sum values function?<br><br>",
  "quesType": "fill",
  "ans": "SUM()"
},
{
  "ques": "Minimum value function?<br><br>",
  "quesType": "fill",
  "ans": "MIN()"
},
{
  "ques": "Maximum value function?<br><br>",
  "quesType": "fill",
  "ans": "MAX()"
},
{
  "ques": "Average value function?<br><br>",
  "quesType": "fill",
  "ans": "AVG()"
},
{
  "ques": "Count rows function?<br><br>",
  "quesType": "fill",
  "ans": "COUNT()"
},
{
  "ques": "End transaction keyword?<br><br>",
  "quesType": "fill",
  "ans": "COMMIT"
},
{
  "ques": "Undo transaction keyword?<br><br>",
  "quesType": "fill",
  "ans": "ROLLBACK"
},
{
  "ques": "Make unique ID?<br><br>",
  "quesType": "fill",
  "ans": "PRIMARY KEY"
},
{
  "ques": "Disallow NULL keyword?<br><br>",
  "quesType": "fill",
  "ans": "NOT NULL"
},
{
  "ques": "Set default value keyword?<br><br>",
  "quesType": "fill",
  "ans": "DEFAULT"
},
{
  "ques": "Pattern match keyword?<br><br>",
  "quesType": "fill",
  "ans": "LIKE"
},
{
  "ques": "Combine conditions keyword?<br><br>",
  "quesType": "fill",
  "ans": "AND"
},
{
  "ques": "List match keyword?<br><br>",
  "quesType": "fill",
  "ans": "IN"
},
{
  "ques": "Ascending order keyword?<br><br>",
  "quesType": "fill",
  "ans": "ASC"
},
{
  "ques": "Descending order keyword?<br><br>",
  "quesType": "fill",
  "ans": "DESC"
},
{
  "ques": "Combine results keyword?<br><br>",
  "quesType": "fill",
  "ans": "UNION"
},
{
  "ques": "Remove duplicates keyword?<br><br>",
  "quesType": "fill",
  "ans": "DISTINCT"
},
{
  "ques": "Multiple conditions keyword?<br><br>",
  "quesType": "fill",
  "ans": "CASE"
},
{
  "ques": "Rename table keyword?<br><br>",
  "quesType": "fill",
  "ans": "RENAME"
},
{
  "ques": "Check if data exists?<br><br>",
  "quesType": "fill",
  "ans": "EXISTS"
}


]
let codingsql2Arr=[
  {
  "ques": "What is the output of: SELECT COUNT(*) FROM Employees WHERE Salary > 50000;<br><br>",
  "quesType": "mcq",
  "op1": "Number of employees with Salary > 50K",
  "op2": "All employee salaries",
  "op3": "Employee names",
  "op4": "Employee IDs",
  "ans": "Number of employees with Salary > 50K"
},
{
  "ques": "Output: SELECT MAX(Age) FROM Students;<br><br>",
  "quesType": "mcq",
  "op1": "Youngest student age",
  "op2": "Oldest student age",
  "op3": "Average age",
  "op4": "All ages",
  "ans": "Oldest student age"
},
{
  "ques": "Output: SELECT MIN(Price) FROM Products;<br><br>",
  "quesType": "mcq",
  "op1": "Lowest product price",
  "op2": "Highest product price",
  "op3": "Average price",
  "op4": "Sum of prices",
  "ans": "Lowest product price"
},
{
  "ques": "Output: SELECT SUM(Quantity) FROM Orders;<br><br>",
  "quesType": "mcq",
  "op1": "Total order count",
  "op2": "Sum of order quantities",
  "op3": "Max quantity",
  "op4": "Min quantity",
  "ans": "Sum of order quantities"
},
{
  "ques": "Output: SELECT AVG(Salary) FROM Employees;<br><br>",
  "quesType": "mcq",
  "op1": "Highest salary",
  "op2": "Lowest salary",
  "op3": "Average salary",
  "op4": "Sum of salaries",
  "ans": "Average salary"
},
{
  "ques": "Output: SELECT Name FROM Customers WHERE City = 'Paris';<br><br>",
  "quesType": "mcq",
  "op1": "Customer names in Paris",
  "op2": "All customer names",
  "op3": "City names",
  "op4": "Count of customers",
  "ans": "Customer names in Paris"
},
{
  "ques": "Output: SELECT * FROM Orders LIMIT 1;<br><br>",
  "quesType": "mcq",
  "op1": "First row of Orders table",
  "op2": "Last row of Orders table",
  "op3": "All Orders",
  "op4": "Orders with LIMIT field",
  "ans": "First row of Orders table"
},
{
  "ques": "Output: SELECT DISTINCT Department FROM Employees;<br><br>",
  "quesType": "mcq",
  "op1": "All departments (with duplicates)",
  "op2": "Only unique departments",
  "op3": "Employee names",
  "op4": "Department count",
  "ans": "Only unique departments"
},
{
  "ques": "Output: SELECT Name FROM Students WHERE Age BETWEEN 18 AND 20;<br><br>",
  "quesType": "mcq",
  "op1": "Students aged 18-20",
  "op2": "All students",
  "op3": "Student ages",
  "op4": "Count of students",
  "ans": "Students aged 18-20"
},
{
  "ques": "Output: SELECT Name FROM Teachers WHERE Name LIKE 'A%';<br><br>",
  "quesType": "mcq",
  "op1": "Teachers with A in name",
  "op2": "Teachers whose name starts with A",
  "op3": "All teachers",
  "op4": "Teachers sorted by A",
  "ans": "Teachers whose name starts with A"
},
{
  "ques": "Output: SELECT * FROM Employees WHERE Department IS NULL;<br><br>",
  "quesType": "mcq",
  "op1": "Employees with any department",
  "op2": "Employees with no department",
  "op3": "All employees",
  "op4": "Departments only",
  "ans": "Employees with no department"
},
{
  "ques": "Output: SELECT COUNT(DISTINCT City) FROM Customers;<br><br>",
  "quesType": "mcq",
  "op1": "Number of cities",
  "op2": "City names",
  "op3": "Customers per city",
  "op4": "All customers",
  "ans": "Number of cities"
},
{
  "ques": "Output: SELECT Name FROM Employees ORDER BY Name DESC;<br><br>",
  "quesType": "mcq",
  "op1": "Names A-Z",
  "op2": "Names Z-A",
  "op3": "Employee IDs",
  "op4": "Employee salaries",
  "ans": "Names Z-A"
},
{
  "ques": "Output: SELECT Name FROM Employees WHERE Salary >= 60000;<br><br>",
  "quesType": "mcq",
  "op1": "Employees with salary under 60K",
  "op2": "Employees with salary above 60K",
  "op3": "All employees",
  "op4": "Salary values",
  "ans": "Employees with salary above 60K"
},
{
  "ques": "Output: SELECT Department, COUNT(*) FROM Employees GROUP BY Department;<br><br>",
  "quesType": "mcq",
  "op1": "List of departments",
  "op2": "Department names only",
  "op3": "Departments and employee counts",
  "op4": "Total employee count",
  "ans": "Departments and employee counts"
},
{
  "ques": "Output: SELECT City, COUNT(*) FROM Customers GROUP BY City HAVING COUNT(*) > 2;<br><br>",
  "quesType": "mcq",
  "op1": "All cities",
  "op2": "Cities with more than 2 customers",
  "op3": "Customers only",
  "op4": "City names only",
  "ans": "Cities with more than 2 customers"
},
{
  "ques": "Output: SELECT Salary*12 FROM Employees;<br><br>",
  "quesType": "mcq",
  "op1": "Monthly salary",
  "op2": "Annual salary",
  "op3": "Hourly salary",
  "op4": "Salary minus tax",
  "ans": "Annual salary"
},
{
  "ques": "Output: SELECT Name FROM Students WHERE Marks >= 90;<br><br>",
  "quesType": "mcq",
  "op1": "Students with any marks",
  "op2": "Students scoring less than 90",
  "op3": "Students scoring 90 or more",
  "op4": "All marks",
  "ans": "Students scoring 90 or more"
},
{
  "ques": "Output: SELECT Name FROM Employees WHERE Age IN (30, 35);<br><br>",
  "quesType": "mcq",
  "op1": "Employees aged 30 or 35",
  "op2": "Employees not aged 30 or 35",
  "op3": "All employees",
  "op4": "Age values",
  "ans": "Employees aged 30 or 35"
},
{
  "ques": "Output: SELECT Name FROM Teachers WHERE Subject = 'Math';<br><br>",
  "quesType": "mcq",
  "op1": "Teachers teaching Math",
  "op2": "All subjects",
  "op3": "Teachers not teaching Math",
  "op4": "Subject list",
  "ans": "Teachers teaching Math"
}
,
{
  "ques": "What is the output?<br><br>SELECT COUNT(*) FROM Employees WHERE salary > 50000;",
  "quesType": "fill",
  "ans": "Number of employees with salary above 50000"
},
{
  "ques": "Output of:<br><br>SELECT MAX(age) FROM Students;",
  "quesType": "fill",
  "ans": "Maximum age of students"
},
{
  "ques": "Output of:<br><br>SELECT MIN(price) FROM Products;",
  "quesType": "fill",
  "ans": "Lowest product price"
},
{
  "ques": "Output of:<br><br>SELECT name FROM Users WHERE id = 5;",
  "quesType": "fill",
  "ans": "Name of user with ID 5"
},
{
  "ques": "Output:<br><br>SELECT AVG(marks) FROM Exams WHERE subject = 'Math';",
  "quesType": "fill",
  "ans": "Average marks in Math"
},
{
  "ques": "Result of:<br><br>SELECT SUM(quantity) FROM Orders WHERE status = 'Delivered';",
  "quesType": "fill",
  "ans": "Total quantity of delivered orders"
},
{
  "ques": "Output:<br><br>SELECT department, COUNT(*) FROM Employees GROUP BY department;",
  "quesType": "fill",
  "ans": "Department-wise employee count"
},
{
  "ques": "Result:<br><br>SELECT city FROM Customers WHERE country = 'USA' LIMIT 1;",
  "quesType": "fill",
  "ans": "Any one city of a USA customer"
},
{
  "ques": "Output:<br><br>SELECT salary * 12 AS AnnualSalary FROM Employees WHERE id = 3;",
  "quesType": "fill",
  "ans": "Annual salary of employee ID 3"
},
{
  "ques": "Result:<br><br>SELECT LENGTH(name) FROM Users WHERE name = 'John';",
  "quesType": "fill",
  "ans": "Length of the name 'John'"
},
{
  "ques": "Output:<br><br>SELECT DISTINCT city FROM Customers;",
  "quesType": "fill",
  "ans": "List of unique cities"
},
{
  "ques": "Output:<br><br>SELECT UPPER(first_name) FROM Employees WHERE id = 2;",
  "quesType": "fill",
  "ans": "First name of employee ID 2 in uppercase"
},
{
  "ques": "Result:<br><br>SELECT NOW();",
  "quesType": "fill",
  "ans": "Current date and time"
},
{
  "ques": "Output:<br><br>SELECT name FROM Students WHERE marks = (SELECT MAX(marks) FROM Students);",
  "quesType": "fill",
  "ans": "Name of student with highest marks"
},
{
  "ques": "Result:<br><br>SELECT email FROM Users WHERE email LIKE '%@gmail.com';",
  "quesType": "fill",
  "ans": "Emails ending with @gmail.com"
},
{
  "ques": "Output:<br><br>SELECT product_name FROM Products WHERE price BETWEEN 50 AND 100;",
  "quesType": "fill",
  "ans": "Product names priced between 50 and 100"
},
{
  "ques": "Result:<br><br>SELECT COUNT(DISTINCT department) FROM Employees;",
  "quesType": "fill",
  "ans": "Number of unique departments"
},
{
  "ques": "Output:<br><br>SELECT LEFT(name, 3) FROM Customers;",
  "quesType": "fill",
  "ans": "First 3 letters of each customer name"
},
{
  "ques": "Result:<br><br>SELECT id FROM Orders WHERE date = CURRENT_DATE;",
  "quesType": "fill",
  "ans": "Order IDs placed today"
},
{
  "ques": "Output:<br><br>SELECT name FROM Employees WHERE manager_id IS NULL;",
  "quesType": "fill",
  "ans": "Names of employees without a manager"
}
,
{
  "ques": "Output for SELECT COUNT(*) FROM Students;<br><br>",
  "quesType": "fill",
  "ans": "Number of students"
},
{
  "ques": "Output for SELECT MAX(Salary) FROM Employees;<br><br>",
  "quesType": "fill",
  "ans": "Highest salary"
},
{
  "ques": "Output for SELECT MIN(Age) FROM Employees;<br><br>",
  "quesType": "fill",
  "ans": "Youngest employee age"
},
{
  "ques": "Output for SELECT SUM(Marks) FROM Students;<br><br>",
  "quesType": "fill",
  "ans": "Total marks"
},
{
  "ques": "Output for SELECT AVG(Price) FROM Products;<br><br>",
  "quesType": "fill",
  "ans": "Average price"
},
{
  "ques": "Output for SELECT DISTINCT Country FROM Customers;<br><br>",
  "quesType": "fill",
  "ans": "Unique countries"
},
{
  "ques": "Output for SELECT * FROM Orders LIMIT 2;<br><br>",
  "quesType": "fill",
  "ans": "First 2 orders"
},
{
  "ques": "Output for SELECT Name FROM Employees WHERE Age > 40;<br><br>",
  "quesType": "fill",
  "ans": "Employees older than 40"
},
{
  "ques": "Output for SELECT Name FROM Products WHERE Price < 100;<br><br>",
  "quesType": "fill",
  "ans": "Products under 100"
},
{
  "ques": "Output for SELECT COUNT(DISTINCT Department) FROM Employees;<br><br>",
  "quesType": "fill",
  "ans": "Number of unique departments"
},
{
  "ques": "Output for SELECT Name FROM Students WHERE Name LIKE '_a%';<br><br>",
  "quesType": "fill",
  "ans": "Student names with 2nd letter 'a'"
},
{
  "ques": "Output for SELECT Name FROM Employees ORDER BY Salary ASC;<br><br>",
  "quesType": "fill",
  "ans": "Employees sorted by salary low to high"
},
{
  "ques": "Output for SELECT City FROM Customers GROUP BY City;<br><br>",
  "quesType": "fill",
  "ans": "Unique cities"
},
{
  "ques": "Output for SELECT Name FROM Teachers WHERE Subject = 'Science';<br><br>",
  "quesType": "fill",
  "ans": "Teachers teaching Science"
},
{
  "ques": "Output for SELECT * FROM Orders WHERE Status = 'Pending';<br><br>",
  "quesType": "fill",
  "ans": "Pending orders"
},
{
  "ques": "Output for SELECT Name FROM Students WHERE Marks BETWEEN 70 AND 80;<br><br>",
  "quesType": "fill",
  "ans": "Students scoring 70-80"
},
{
  "ques": "Output for SELECT Name FROM Employees WHERE Department IS NOT NULL;<br><br>",
  "quesType": "fill",
  "ans": "Employees with department"
},
{
  "ques": "Output for SELECT Name FROM Customers WHERE City != 'London';<br><br>",
  "quesType": "fill",
  "ans": "Customers not in London"
},
{
  "ques": "Output for SELECT Name FROM Products WHERE Quantity >= 10;<br><br>",
  "quesType": "fill",
  "ans": "Products with 10 or more in stock"
},
{
  "ques": "Output for SELECT Department, AVG(Salary) FROM Employees GROUP BY Department;<br><br>",
  "quesType": "fill",
  "ans": "Department and average salary"
}
,
{
  "ques": "What will this return: SELECT COUNT(*) FROM employees WHERE salary > 50000;<br><br>",
  "quesType": "mcq",
  "op1": "Number of employees",
  "op2": "Sum of salaries",
  "op3": "Average salary",
  "op4": "All employee names",
  "ans": "Number of employees"
},
{
  "ques": "What does SELECT DISTINCT department FROM employees; return?<br><br>",
  "quesType": "mcq",
  "op1": "All departments including duplicates",
  "op2": "Unique departments only",
  "op3": "Number of departments",
  "op4": "Names of employees",
  "ans": "Unique departments only"
},
{
  "ques": "SELECT SUM(salary) FROM employees WHERE department = 'HR'; gives?<br><br>",
  "quesType": "mcq",
  "op1": "Average salary in HR",
  "op2": "Total salary of HR",
  "op3": "Minimum salary in HR",
  "op4": "Maximum salary in HR",
  "ans": "Total salary of HR"
},
{
  "ques": "SELECT name FROM employees WHERE age BETWEEN 30 AND 40; returns?<br><br>",
  "quesType": "mcq",
  "op1": "Names of all employees",
  "op2": "Names aged 30 to 40",
  "op3": "Ages only",
  "op4": "Count of employees",
  "ans": "Names aged 30 to 40"
},
{
  "ques": "What is the output of: SELECT MAX(salary) FROM employees;<br><br>",
  "quesType": "mcq",
  "op1": "Lowest salary",
  "op2": "Average salary",
  "op3": "Highest salary",
  "op4": "Sum of salaries",
  "ans": "Highest salary"
},
{
  "ques": "SELECT COUNT(DISTINCT department) FROM employees; returns?<br><br>",
  "quesType": "mcq",
  "op1": "Number of unique departments",
  "op2": "Number of employees",
  "op3": "List of departments",
  "op4": "Sum of salaries",
  "ans": "Number of unique departments"
},
{
  "ques": "SELECT AVG(salary) FROM employees WHERE age > 25; gives?<br><br>",
  "quesType": "mcq",
  "op1": "Sum of salaries",
  "op2": "Average salary of all",
  "op3": "Average salary for age > 25",
  "op4": "Minimum salary",
  "ans": "Average salary for age > 25"
},
{
  "ques": "SELECT name FROM employees ORDER BY name DESC LIMIT 1; returns?<br><br>",
  "quesType": "mcq",
  "op1": "First name alphabetically",
  "op2": "Last name alphabetically",
  "op3": "All names",
  "op4": "Count of names",
  "ans": "Last name alphabetically"
},
{
  "ques": "What does SELECT salary * 12 FROM employees; show?<br><br>",
  "quesType": "mcq",
  "op1": "Monthly salary",
  "op2": "Yearly salary",
  "op3": "Weekly salary",
  "op4": "Hourly salary",
  "ans": "Yearly salary"
},
{
  "ques": "SELECT name FROM employees WHERE name LIKE 'A%'; returns?<br><br>",
  "quesType": "mcq",
  "op1": "Names starting with A",
  "op2": "Names ending with A",
  "op3": "Names containing A",
  "op4": "All names",
  "ans": "Names starting with A"
},
{
  "ques": "SELECT name FROM employees WHERE department IN ('HR','IT'); returns?<br><br>",
  "quesType": "mcq",
  "op1": "All employee names",
  "op2": "Names in HR or IT",
  "op3": "Names not in HR or IT",
  "op4": "Number of employees",
  "ans": "Names in HR or IT"
},
{
  "ques": "SELECT salary FROM employees WHERE salary = (SELECT MAX(salary) FROM employees); returns?<br><br>",
  "quesType": "mcq",
  "op1": "Average salary",
  "op2": "Minimum salary",
  "op3": "Highest salary",
  "op4": "All salaries",
  "ans": "Highest salary"
},
{
  "ques": "SELECT department, COUNT(*) FROM employees GROUP BY department; gives?<br><br>",
  "quesType": "mcq",
  "op1": "Sum of salaries by department",
  "op2": "Employees count by department",
  "op3": "All employee names",
  "op4": "All salaries",
  "ans": "Employees count by department"
},
{
  "ques": "SELECT name FROM employees WHERE salary > ALL (SELECT salary FROM employees WHERE department='HR'); gives?<br><br>",
  "quesType": "mcq",
  "op1": "Employees earning more than all HR",
  "op2": "Employees in HR",
  "op3": "Lowest salary in HR",
  "op4": "All salaries",
  "ans": "Employees earning more than all HR"
},
{
  "ques": "SELECT name FROM employees WHERE salary IS NULL; returns?<br><br>",
  "quesType": "mcq",
  "op1": "All salaries",
  "op2": "Employees with no salary",
  "op3": "Maximum salary",
  "op4": "Minimum salary",
  "ans": "Employees with no salary"
},
{
  "ques": "SELECT name FROM employees WHERE salary IS NOT NULL; returns?<br><br>",
  "quesType": "mcq",
  "op1": "Employees with salary",
  "op2": "Employees with no salary",
  "op3": "All departments",
  "op4": "All salaries",
  "ans": "Employees with salary"
},
{
  "ques": "SELECT name FROM employees WHERE department = 'IT' AND salary > 40000; returns?<br><br>",
  "quesType": "mcq",
  "op1": "All IT employees",
  "op2": "IT employees earning above 40K",
  "op3": "All employees",
  "op4": "Sum of salaries",
  "ans": "IT employees earning above 40K"
},
{
  "ques": "SELECT salary FROM employees ORDER BY salary DESC LIMIT 1 OFFSET 1; gives?<br><br>",
  "quesType": "mcq",
  "op1": "Highest salary",
  "op2": "Second highest salary",
  "op3": "Lowest salary",
  "op4": "Average salary",
  "ans": "Second highest salary"
},
{
  "ques": "SELECT department FROM employees GROUP BY department HAVING COUNT(*) > 5; returns?<br><br>",
  "quesType": "mcq",
  "op1": "All departments",
  "op2": "Departments with more than 5 employees",
  "op3": "Employees with salary > 5",
  "op4": "All salaries",
  "ans": "Departments with more than 5 employees"
},
{
  "ques": "SELECT name FROM employees WHERE name LIKE '%son'; returns?<br><br>",
  "quesType": "mcq",
  "op1": "Names starting with 'son'",
  "op2": "Names ending with 'son'",
  "op3": "Names containing 'son'",
  "op4": "All names",
  "ans": "Names ending with 'son'"
}
,
{
  "ques": "Query for total employees?<br><br>",
  "quesType": "fill",
  "ans": "SELECT COUNT(*)"
},
{
  "ques": "Query for sum of salaries?<br><br>",
  "quesType": "fill",
  "ans": "SELECT SUM(salary)"
},
{
  "ques": "Query for highest salary?<br><br>",
  "quesType": "fill",
  "ans": "SELECT MAX(salary)"
},
{
  "ques": "Query for lowest salary?<br><br>",
  "quesType": "fill",
  "ans": "SELECT MIN(salary)"
},
{
  "ques": "Query for average salary?<br><br>",
  "quesType": "fill",
  "ans": "SELECT AVG(salary)"
},
{
  "ques": "Keyword for unique values?<br><br>",
  "quesType": "fill",
  "ans": "DISTINCT"
},
{
  "ques": "Clause to group rows?<br><br>",
  "quesType": "fill",
  "ans": "GROUP BY"
},
{
  "ques": "Clause to filter groups?<br><br>",
  "quesType": "fill",
  "ans": "HAVING"
},
{
  "ques": "Keyword for second highest?<br><br>",
  "quesType": "fill",
  "ans": "LIMIT OFFSET"
},
{
  "ques": "Clause to sort rows?<br><br>",
  "quesType": "fill",
  "ans": "ORDER BY"
},
{
  "ques": "Find rows with NULL salary?<br><br>",
  "quesType": "fill",
  "ans": "IS NULL"
},
{
  "ques": "Find rows with NOT NULL salary?<br><br>",
  "quesType": "fill",
  "ans": "IS NOT NULL"
},
{
  "ques": "Check if value in list?<br><br>",
  "quesType": "fill",
  "ans": "IN"
},
{
  "ques": "Check value not in list?<br><br>",
  "quesType": "fill",
  "ans": "NOT IN"
},
{
  "ques": "Pattern starts with A?<br><br>",
  "quesType": "fill",
  "ans": "LIKE 'A%'"
},
{
  "ques": "Pattern ends with son?<br><br>",
  "quesType": "fill",
  "ans": "LIKE '%son'"
},
{
  "ques": "Compare value to all?<br><br>",
  "quesType": "fill",
  "ans": "> ALL"
},
{
  "ques": "Combine multiple tables?<br><br>",
  "quesType": "fill",
  "ans": "JOIN"
},
{
  "ques": "Combine all rows no duplicates?<br><br>",
  "quesType": "fill",
  "ans": "UNION"
},
{
  "ques": "Combine rows allow duplicates?<br><br>",
  "quesType": "fill",
  "ans": "UNION ALL"
}
,
{
  "ques": "Which SQL function counts unique values in a column?<br><br>",
  "quesType": "mcq",
  "op1": "COUNT()",
  "op2": "COUNT(DISTINCT)",
  "op3": "SUM()",
  "op4": "DISTINCT()",
  "ans": "COUNT(DISTINCT)"
},
{
  "ques": "Which operator finds records in a range?<br><br>",
  "quesType": "mcq",
  "op1": "IN",
  "op2": "BETWEEN",
  "op3": "LIKE",
  "op4": "RANGE",
  "ans": "BETWEEN"
},
{
  "ques": "Which clause limits rows returned?<br><br>",
  "quesType": "mcq",
  "op1": "LIMIT",
  "op2": "ROWNUM",
  "op3": "TOP",
  "op4": "OFFSET",
  "ans": "LIMIT"
},
{
  "ques": "What does OFFSET do in SQL?<br><br>",
  "quesType": "mcq",
  "op1": "Skips rows",
  "op2": "Deletes rows",
  "op3": "Updates rows",
  "op4": "Inserts rows",
  "ans": "Skips rows"
},
{
  "ques": "Which keyword checks NULL condition?<br><br>",
  "quesType": "mcq",
  "op1": "IFNULL",
  "op2": "NULL",
  "op3": "IS NULL",
  "op4": "WHEN NULL",
  "ans": "IS NULL"
},
{
  "ques": "Which operator checks pattern match?<br><br>",
  "quesType": "mcq",
  "op1": "IN",
  "op2": "BETWEEN",
  "op3": "LIKE",
  "op4": "MATCH",
  "ans": "LIKE"
},
{
  "ques": "Which keyword adds a condition to GROUP BY?<br><br>",
  "quesType": "mcq",
  "op1": "ORDER BY",
  "op2": "WHERE",
  "op3": "HAVING",
  "op4": "CHECK",
  "ans": "HAVING"
},
{
  "ques": "Which JOIN returns rows with no match in right table?<br><br>",
  "quesType": "mcq",
  "op1": "INNER JOIN",
  "op2": "LEFT JOIN",
  "op3": "RIGHT JOIN",
  "op4": "FULL JOIN",
  "ans": "LEFT JOIN"
},
{
  "ques": "Which function changes text to lowercase?<br><br>",
  "quesType": "mcq",
  "op1": "UPPER()",
  "op2": "LOWER()",
  "op3": "LCASE()",
  "op4": "DOWNCASE()",
  "ans": "LOWER()"
},
{
  "ques": "Which keyword removes a table?<br><br>",
  "quesType": "mcq",
  "op1": "REMOVE",
  "op2": "DELETE TABLE",
  "op3": "DROP TABLE",
  "op4": "CLEAR TABLE",
  "ans": "DROP TABLE"
},
{
  "ques": "Which function returns length of text?<br><br>",
  "quesType": "mcq",
  "op1": "SIZE()",
  "op2": "LEN()",
  "op3": "LENGTH()",
  "op4": "COUNT()",
  "ans": "LENGTH()"
},
{
  "ques": "Which returns first letters?<br><br>",
  "quesType": "mcq",
  "op1": "RIGHT()",
  "op2": "LEFT()",
  "op3": "MID()",
  "op4": "CUT()",
  "ans": "LEFT()"
},
{
  "ques": "What does TRUNCATE TABLE do?<br><br>",
  "quesType": "mcq",
  "op1": "Deletes table",
  "op2": "Deletes rows",
  "op3": "Removes columns",
  "op4": "Removes index",
  "ans": "Deletes rows"
},
{
  "ques": "Which operator checks multiple options?<br><br>",
  "quesType": "mcq",
  "op1": "IN",
  "op2": "OR",
  "op3": "BETWEEN",
  "op4": "MATCH",
  "ans": "IN"
},
{
  "ques": "Which clause stops duplicate rows?<br><br>",
  "quesType": "mcq",
  "op1": "WHERE",
  "op2": "GROUP BY",
  "op3": "DISTINCT",
  "op4": "ORDER BY",
  "ans": "DISTINCT"
},
{
  "ques": "Which keyword shows table design?<br><br>",
  "quesType": "mcq",
  "op1": "SHOW TABLE",
  "op2": "DESCRIBE",
  "op3": "EXPLAIN",
  "op4": "SCHEMA",
  "ans": "DESCRIBE"
},
{
  "ques": "Which keyword sets auto increment?<br><br>",
  "quesType": "mcq",
  "op1": "AUTO_INCREMENT",
  "op2": "SERIAL",
  "op3": "AUTO",
  "op4": "INCREMENT",
  "ans": "AUTO_INCREMENT"
},
{
  "ques": "Which constraint allows NULLs?<br><br>",
  "quesType": "mcq",
  "op1": "NOT NULL",
  "op2": "NULL",
  "op3": "DEFAULT",
  "op4": "UNIQUE",
  "ans": "NULL"
},
{
  "ques": "Which keyword starts a transaction?<br><br>",
  "quesType": "mcq",
  "op1": "START TRANSACTION",
  "op2": "BEGIN",
  "op3": "BEGIN TRANSACTION",
  "op4": "OPEN TRANSACTION",
  "ans": "BEGIN"
},
{
  "ques": "Which saves all transaction changes?<br><br>",
  "quesType": "mcq",
  "op1": "SAVE",
  "op2": "END",
  "op3": "COMMIT",
  "op4": "STOP",
  "ans": "COMMIT"
}
,
{
  "ques": "Keyword for unique row count?<br><br>",
  "quesType": "fill",
  "ans": "COUNT(DISTINCT)"
},
{
  "ques": "Range checking operator?<br><br>",
  "quesType": "fill",
  "ans": "BETWEEN"
},
{
  "ques": "Clause to limit rows?<br><br>",
  "quesType": "fill",
  "ans": "LIMIT"
},
{
  "ques": "Skip rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "OFFSET"
},
{
  "ques": "Check NULL condition keyword?<br><br>",
  "quesType": "fill",
  "ans": "IS NULL"
},
{
  "ques": "Pattern match operator?<br><br>",
  "quesType": "fill",
  "ans": "LIKE"
},
{
  "ques": "Group condition keyword?<br><br>",
  "quesType": "fill",
  "ans": "HAVING"
},
{
  "ques": "Join to get unmatched left rows?<br><br>",
  "quesType": "fill",
  "ans": "LEFT JOIN"
},
{
  "ques": "Text to lowercase function?<br><br>",
  "quesType": "fill",
  "ans": "LOWER()"
},
{
  "ques": "Remove table keyword?<br><br>",
  "quesType": "fill",
  "ans": "DROP TABLE"
},
{
  "ques": "Text length function?<br><br>",
  "quesType": "fill",
  "ans": "LENGTH()"
},
{
  "ques": "Left letters function?<br><br>",
  "quesType": "fill",
  "ans": "LEFT()"
},
{
  "ques": "Delete all rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "TRUNCATE TABLE"
},
{
  "ques": "Multiple value match operator?<br><br>",
  "quesType": "fill",
  "ans": "IN"
},
{
  "ques": "Avoid duplicate rows keyword?<br><br>",
  "quesType": "fill",
  "ans": "DISTINCT"
},
{
  "ques": "Show table structure keyword?<br><br>",
  "quesType": "fill",
  "ans": "DESCRIBE"
},
{
  "ques": "Auto number keyword?<br><br>",
  "quesType": "fill",
  "ans": "AUTO_INCREMENT"
},
{
  "ques": "Allows NULLs constraint?<br><br>",
  "quesType": "fill",
  "ans": "NULL"
},
{
  "ques": "Start transaction keyword?<br><br>",
  "quesType": "fill",
  "ans": "BEGIN"
},
{
  "ques": "Save transaction changes keyword?<br><br>",
  "quesType": "fill",
  "ans": "COMMIT"
}
,
{
  "ques": "Output: SELECT COUNT(*) FROM Orders WHERE Status = 'Shipped';<br><br>",
  "quesType": "mcq",
  "op1": "All orders",
  "op2": "Shipped orders count",
  "op3": "Pending orders",
  "op4": "Orders details",
  "ans": "Shipped orders count"
},
{
  "ques": "Output: SELECT Name FROM Employees WHERE Age < 30;<br><br>",
  "quesType": "mcq",
  "op1": "Employees older than 30",
  "op2": "Employees younger than 30",
  "op3": "All employees",
  "op4": "Employee count",
  "ans": "Employees younger than 30"
},
{
  "ques": "Output: SELECT * FROM Products ORDER BY Price DESC LIMIT 1;<br><br>",
  "quesType": "mcq",
  "op1": "Cheapest product",
  "op2": "Second cheapest product",
  "op3": "Most expensive product",
  "op4": "All products",
  "ans": "Most expensive product"
},
{
  "ques": "Output: SELECT COUNT(DISTINCT Category) FROM Products;<br><br>",
  "quesType": "mcq",
  "op1": "Number of products",
  "op2": "Number of categories",
  "op3": "Category names",
  "op4": "Total stock",
  "ans": "Number of categories"
},
{
  "ques": "Output: SELECT AVG(Marks) FROM Exams WHERE Subject = 'Math';<br><br>",
  "quesType": "mcq",
  "op1": "Highest marks in Math",
  "op2": "Lowest marks in Math",
  "op3": "Average marks in Math",
  "op4": "All subjects",
  "ans": "Average marks in Math"
},
{
  "ques": "Output: SELECT City, COUNT(*) FROM Customers GROUP BY City;<br><br>",
  "quesType": "mcq",
  "op1": "Customer list",
  "op2": "City list only",
  "op3": "City and customer count",
  "op4": "City count only",
  "ans": "City and customer count"
},
{
  "ques": "Output: SELECT Name FROM Employees WHERE Department = 'HR';<br><br>",
  "quesType": "mcq",
  "op1": "Employees in HR",
  "op2": "All employees",
  "op3": "Departments",
  "op4": "Employee ages",
  "ans": "Employees in HR"
},
{
  "ques": "Output: SELECT Name FROM Products WHERE Quantity = 0;<br><br>",
  "quesType": "mcq",
  "op1": "All products",
  "op2": "Out of stock products",
  "op3": "In stock products",
  "op4": "Product categories",
  "ans": "Out of stock products"
},
{
  "ques": "Output: SELECT Salary FROM Employees WHERE Name = 'John';<br><br>",
  "quesType": "mcq",
  "op1": "Salary of John",
  "op2": "All salaries",
  "op3": "All employees",
  "op4": "Names only",
  "ans": "Salary of John"
},
{
  "ques": "Output: SELECT * FROM Students WHERE Marks >= 80 AND Marks <= 90;<br><br>",
  "quesType": "mcq",
  "op1": "Students with any marks",
  "op2": "Students with marks 80-90",
  "op3": "Marks only",
  "op4": "All students",
  "ans": "Students with marks 80-90"
},
{
  "ques": "Output: SELECT * FROM Orders WHERE Date >= '2024-01-01';<br><br>",
  "quesType": "mcq",
  "op1": "All orders",
  "op2": "Orders before 2024",
  "op3": "Orders after 2024-01-01",
  "op4": "Orders with old date",
  "ans": "Orders after 2024-01-01"
},
{
  "ques": "Output: SELECT Name FROM Employees WHERE Salary BETWEEN 40000 AND 60000;<br><br>",
  "quesType": "mcq",
  "op1": "Employees with salary below 40K",
  "op2": "Employees with salary above 60K",
  "op3": "Employees with salary in range 40K-60K",
  "op4": "All employees",
  "ans": "Employees with salary in range 40K-60K"
},
{
  "ques": "Output: SELECT Email FROM Customers WHERE Email LIKE '%@gmail.com';<br><br>",
  "quesType": "mcq",
  "op1": "All emails",
  "op2": "Emails ending with @gmail.com",
  "op3": "Emails starting with gmail",
  "op4": "Emails without gmail",
  "ans": "Emails ending with @gmail.com"
},
{
  "ques": "Output: SELECT COUNT(*) FROM Teachers WHERE Subject = 'English';<br><br>",
  "quesType": "mcq",
  "op1": "All teachers",
  "op2": "Number of English teachers",
  "op3": "Number of subjects",
  "op4": "Subject list",
  "ans": "Number of English teachers"
},
{
  "ques": "Output: SELECT SUM(Quantity) FROM Orders WHERE Status = 'Pending';<br><br>",
  "quesType": "mcq",
  "op1": "Total pending orders",
  "op2": "Sum of pending quantities",
  "op3": "Order IDs",
  "op4": "All orders",
  "ans": "Sum of pending quantities"
},
{
  "ques": "Output: SELECT * FROM Employees ORDER BY Salary DESC LIMIT 2;<br><br>",
  "quesType": "mcq",
  "op1": "Lowest salaries",
  "op2": "All salaries",
  "op3": "Top 2 highest salaries",
  "op4": "Average salary",
  "ans": "Top 2 highest salaries"
},
{
  "ques": "Output: SELECT Name FROM Students WHERE Name LIKE '%son';<br><br>",
  "quesType": "mcq",
  "op1": "Names ending with 'son'",
  "op2": "Names starting with 'son'",
  "op3": "Names containing 'son'",
  "op4": "All students",
  "ans": "Names ending with 'son'"
},
{
  "ques": "Output: SELECT COUNT(*) FROM Orders WHERE Quantity > 10;<br><br>",
  "quesType": "mcq",
  "op1": "Orders with any quantity",
  "op2": "Orders with Quantity <= 10",
  "op3": "Orders with Quantity > 10",
  "op4": "Quantity total",
  "ans": "Orders with Quantity > 10"
},
{
  "ques": "Output: SELECT DISTINCT Status FROM Orders;<br><br>",
  "quesType": "mcq",
  "op1": "All orders",
  "op2": "Unique order statuses",
  "op3": "Status count",
  "op4": "Order IDs",
  "ans": "Unique order statuses"
},
{
  "ques": "Output: SELECT Name FROM Employees WHERE Name NOT LIKE 'A%';<br><br>",
  "quesType": "mcq",
  "op1": "Names starting with A",
  "op2": "Names not starting with A",
  "op3": "All names",
  "op4": "Only A names",
  "ans": "Names not starting with A"
}
,
{
  "ques": "Output for SELECT MIN(Salary) FROM Employees;<br><br>",
  "quesType": "fill",
  "ans": "Lowest salary"
},
{
  "ques": "Output for SELECT MAX(Marks) FROM Students;<br><br>",
  "quesType": "fill",
  "ans": "Highest marks"
},
{
  "ques": "Output for SELECT SUM(Price) FROM Products;<br><br>",
  "quesType": "fill",
  "ans": "Total price"
},
{
  "ques": "Output for SELECT AVG(Age) FROM Employees;<br><br>",
  "quesType": "fill",
  "ans": "Average age"
},
{
  "ques": "Output for SELECT * FROM Orders LIMIT 5;<br><br>",
  "quesType": "fill",
  "ans": "First 5 orders"
},
{
  "ques": "Output for SELECT Name FROM Students WHERE Marks > 75;<br><br>",
  "quesType": "fill",
  "ans": "Students with marks above 75"
},
{
  "ques": "Output for SELECT COUNT(DISTINCT Status) FROM Orders;<br><br>",
  "quesType": "fill",
  "ans": "Number of unique statuses"
},
{
  "ques": "Output for SELECT * FROM Products WHERE Stock = 0;<br><br>",
  "quesType": "fill",
  "ans": "Out of stock products"
},
{
  "ques": "Output for SELECT Name FROM Employees WHERE Age BETWEEN 25 AND 35;<br><br>",
  "quesType": "fill",
  "ans": "Employees aged 25-35"
},
{
  "ques": "Output for SELECT Email FROM Customers WHERE Email LIKE '%yahoo.com';<br><br>",
  "quesType": "fill",
  "ans": "Yahoo email addresses"
},
{
  "ques": "Output for SELECT COUNT(*) FROM Orders WHERE Status = 'Cancelled';<br><br>",
  "quesType": "fill",
  "ans": "Number of cancelled orders"
},
{
  "ques": "Output for SELECT Department FROM Employees GROUP BY Department;<br><br>",
  "quesType": "fill",
  "ans": "Unique departments"
},
{
  "ques": "Output for SELECT * FROM Teachers WHERE Subject = 'Physics';<br><br>",
  "quesType": "fill",
  "ans": "Physics teachers"
},
{
  "ques": "Output for SELECT Name FROM Products WHERE Price > 200;<br><br>",
  "quesType": "fill",
  "ans": "Products priced over 200"
},
{
  "ques": "Output for SELECT COUNT(*) FROM Students WHERE Age < 18;<br><br>",
  "quesType": "fill",
  "ans": "Number of students under 18"
},
{
  "ques": "Output for SELECT DISTINCT Country FROM Customers;<br><br>",
  "quesType": "fill",
  "ans": "Unique countries"
},
{
  "ques": "Output for SELECT * FROM Employees WHERE Department IS NULL;<br><br>",
  "quesType": "fill",
  "ans": "Employees without department"
},
{
  "ques": "Output for SELECT COUNT(*) FROM Orders WHERE Quantity <= 5;<br><br>",
  "quesType": "fill",
  "ans": "Orders with quantity 5 or less"
},
{
  "ques": "Output for SELECT * FROM Orders ORDER BY Date ASC LIMIT 3;<br><br>",
  "quesType": "fill",
  "ans": "Earliest 3 orders"
},
{
  "ques": "Output for SELECT Name FROM Students WHERE Name LIKE 'S%';<br><br>",
  "quesType": "fill",
  "ans": "Names starting with S"
}
,
{
  "ques": "What does SELECT COUNT(DISTINCT city) FROM customers; return?<br><br>",
  "quesType": "mcq",
  "op1": "List of all cities",
  "op2": "Number of unique cities",
  "op3": "Number of customers",
  "op4": "Sum of cities",
  "ans": "Number of unique cities"
},
{
  "ques": "Output of: SELECT email FROM users WHERE email LIKE '%@gmail.com';<br><br>",
  "quesType": "mcq",
  "op1": "Emails with any domain",
  "op2": "Only Gmail emails",
  "op3": "Emails without Gmail",
  "op4": "Count of Gmail emails",
  "ans": "Only Gmail emails"
},
{
  "ques": "SELECT COUNT(*) FROM orders WHERE status = 'Shipped'; returns?<br><br>",
  "quesType": "mcq",
  "op1": "Orders shipped",
  "op2": "Orders pending",
  "op3": "All orders",
  "op4": "Sum of orders",
  "ans": "Orders shipped"
},
{
  "ques": "SELECT category, AVG(price) FROM products GROUP BY category; gives?<br><br>",
  "quesType": "mcq",
  "op1": "Sum of prices by category",
  "op2": "Average price by category",
  "op3": "Maximum price by category",
  "op4": "All product names",
  "ans": "Average price by category"
},
{
  "ques": "Output of: SELECT id FROM sales WHERE amount BETWEEN 100 AND 500;<br><br>",
  "quesType": "mcq",
  "op1": "Sales below 100",
  "op2": "Sales above 500",
  "op3": "Sales between 100 and 500",
  "op4": "All sales",
  "ans": "Sales between 100 and 500"
},
{
  "ques": "SELECT title FROM books WHERE author = 'John'; returns?<br><br>",
  "quesType": "mcq",
  "op1": "All book titles",
  "op2": "Books not by John",
  "op3": "Books by John",
  "op4": "Count of books",
  "ans": "Books by John"
},
{
  "ques": "SELECT MIN(age) FROM members; gives?<br><br>",
  "quesType": "mcq",
  "op1": "Maximum age",
  "op2": "Minimum age",
  "op3": "Average age",
  "op4": "Sum of ages",
  "ans": "Minimum age"
},
{
  "ques": "Output of: SELECT email FROM users WHERE email IS NULL;<br><br>",
  "quesType": "mcq",
  "op1": "All emails",
  "op2": "Emails not NULL",
  "op3": "Emails with value",
  "op4": "Emails with NULL only",
  "ans": "Emails with NULL only"
},
{
  "ques": "SELECT name FROM employees WHERE salary <= 40000; gives?<br><br>",
  "quesType": "mcq",
  "op1": "Names earning above 40K",
  "op2": "Names earning 40K or less",
  "op3": "All names",
  "op4": "Count of names",
  "ans": "Names earning 40K or less"
},
{
  "ques": "SELECT product FROM orders WHERE quantity > 5 AND status = 'Pending';<br><br>",
  "quesType": "mcq",
  "op1": "All products",
  "op2": "Products with quantity 5",
  "op3": "Products with quantity > 5 pending",
  "op4": "Products shipped",
  "ans": "Products with quantity > 5 pending"
},
{
  "ques": "SELECT * FROM products WHERE price IS NOT NULL; returns?<br><br>",
  "quesType": "mcq",
  "op1": "Products with price",
  "op2": "Products with NULL price",
  "op3": "All products",
  "op4": "Products with negative price",
  "ans": "Products with price"
},
{
  "ques": "SELECT COUNT(*) FROM students WHERE grade = 'A'; returns?<br><br>",
  "quesType": "mcq",
  "op1": "Number of students",
  "op2": "Students with grade A",
  "op3": "Sum of grades",
  "op4": "Average grade",
  "ans": "Students with grade A"
},
{
  "ques": "SELECT AVG(age) FROM users WHERE city = 'NY'; gives?<br><br>",
  "quesType": "mcq",
  "op1": "Average age in NY",
  "op2": "Average age all users",
  "op3": "All user ages",
  "op4": "Oldest age",
  "ans": "Average age in NY"
},
{
  "ques": "SELECT email FROM customers WHERE name LIKE '_a%'; returns?<br><br>",
  "quesType": "mcq",
  "op1": "Names starting with a",
  "op2": "Names ending with a",
  "op3": "Second letter a",
  "op4": "All emails",
  "ans": "Second letter a"
},
{
  "ques": "Output of: SELECT product FROM inventory WHERE stock = 0;<br><br>",
  "quesType": "mcq",
  "op1": "In-stock products",
  "op2": "Out-of-stock products",
  "op3": "All products",
  "op4": "Products with negative stock",
  "ans": "Out-of-stock products"
},
{
  "ques": "SELECT MAX(price) FROM products WHERE category = 'Books'; gives?<br><br>",
  "quesType": "mcq",
  "op1": "Minimum price in Books",
  "op2": "Maximum price in Books",
  "op3": "Average price in Books",
  "op4": "All book prices",
  "ans": "Maximum price in Books"
},
{
  "ques": "SELECT * FROM orders WHERE order_date >= '2024-01-01'; returns?<br><br>",
  "quesType": "mcq",
  "op1": "Orders before 2024",
  "op2": "Orders after 2024",
  "op3": "Orders in 2024 and later",
  "op4": "All orders",
  "ans": "Orders in 2024 and later"
},
{
  "ques": "Output of: SELECT name FROM users WHERE age IN (25,30);<br><br>",
  "quesType": "mcq",
  "op1": "Names not aged 25 or 30",
  "op2": "Names aged 25 or 30",
  "op3": "All ages",
  "op4": "Sum of ages",
  "ans": "Names aged 25 or 30"
},
{
  "ques": "SELECT department FROM employees GROUP BY department HAVING COUNT(*) < 3; returns?<br><br>",
  "quesType": "mcq",
  "op1": "All departments",
  "op2": "Departments with at least 3",
  "op3": "Departments with less than 3",
  "op4": "Employees list",
  "ans": "Departments with less than 3"
},
{
  "ques": "Count rows with grade A?<br><br>",
  "quesType": "fill",
  "ans": "SELECT COUNT(*)"
},
{
  "ques": "Find unique cities in customers?<br><br>",
  "quesType": "fill",
  "ans": "SELECT DISTINCT city"
},
{
  "ques": "List names where age < 18?<br><br>",
  "quesType": "fill",
  "ans": "WHERE age < 18"
},
{
  "ques": "Pattern for second letter A?<br><br>",
  "quesType": "fill",
  "ans": "LIKE '_a%'"
},
{
  "ques": "Query for NULL values?<br><br>",
  "quesType": "fill",
  "ans": "IS NULL"
},
{
  "ques": "Query for NOT NULL values?<br><br>",
  "quesType": "fill",
  "ans": "IS NOT NULL"
},
{
  "ques": "Query for stock zero?<br><br>",
  "quesType": "fill",
  "ans": "WHERE stock = 0"
},
{
  "ques": "Find date after Jan 1, 2024?<br><br>",
  "quesType": "fill",
  "ans": ">= '2024-01-01'"
},
{
  "ques": "Condition for age in 25 or 30?<br><br>",
  "quesType": "fill",
  "ans": "IN (25,30)"
},
{
  "ques": "Condition for age not 25 or 30?<br><br>",
  "quesType": "fill",
  "ans": "NOT IN (25,30)"
},
{
  "ques": "Query for price 100-200?<br><br>",
  "quesType": "fill",
  "ans": "BETWEEN 100 AND 200"
},
{
  "ques": "Get max price in Books?<br><br>",
  "quesType": "fill",
  "ans": "MAX(price)"
},
{
  "ques": "Clause for < 3 rows?<br><br>",
  "quesType": "fill",
  "ans": "HAVING COUNT(*) < 3"
},
{
  "ques": "Clause to group by category?<br><br>",
  "quesType": "fill",
  "ans": "GROUP BY category"
},
{
  "ques": "Select emails with Gmail?<br><br>",
  "quesType": "fill",
  "ans": "LIKE '%@gmail.com'"
},
{
  "ques": "Filter quantity > 5?<br><br>",
  "quesType": "fill",
  "ans": "quantity > 5"
},
{
  "ques": "Condition for price present?<br><br>",
  "quesType": "fill",
  "ans": "IS NOT NULL"
},
{
  "ques": "Find minimum age?<br><br>",
  "quesType": "fill",
  "ans": "MIN(age)"
},
{
  "ques": "Condition for salary <= 40K?<br><br>",
  "quesType": "fill",
  "ans": "salary <= 40000"
},
{
  "ques": "Query for author John?<br><br>",
  "quesType": "fill",
  "ans": "author = 'John'"
}
,
{
  "ques": "Output: SELECT COUNT(*) FROM Users WHERE Active = 1;<br><br>",
  "quesType": "mcq",
  "op1": "All users",
  "op2": "Inactive users",
  "op3": "Active users count",
  "op4": "User list",
  "ans": "Active users count"
},
{
  "ques": "Output: SELECT Name FROM Products WHERE Price < 100;<br><br>",
  "quesType": "mcq",
  "op1": "Products over 100",
  "op2": "Products under 100",
  "op3": "All products",
  "op4": "Prices only",
  "ans": "Products under 100"
},
{
  "ques": "Output: SELECT SUM(Amount) FROM Payments WHERE Status = 'Paid';<br><br>",
  "quesType": "mcq",
  "op1": "Total unpaid amount",
  "op2": "Paid amount total",
  "op3": "All payments",
  "op4": "Payment methods",
  "ans": "Paid amount total"
},
{
  "ques": "Output: SELECT AVG(Salary) FROM Employees WHERE Department = 'Sales';<br><br>",
  "quesType": "mcq",
  "op1": "Highest salary in Sales",
  "op2": "Lowest salary in Sales",
  "op3": "Average salary in Sales",
  "op4": "All departments",
  "ans": "Average salary in Sales"
},
{
  "ques": "Output: SELECT * FROM Products ORDER BY Stock ASC LIMIT 1;<br><br>",
  "quesType": "mcq",
  "op1": "Most stock",
  "op2": "Least stock product",
  "op3": "All stock",
  "op4": "Stock summary",
  "ans": "Least stock product"
},
{
  "ques": "Output: SELECT DISTINCT Country FROM Suppliers;<br><br>",
  "quesType": "mcq",
  "op1": "Suppliers list",
  "op2": "All countries",
  "op3": "Unique supplier countries",
  "op4": "Supplier count",
  "ans": "Unique supplier countries"
},
{
  "ques": "Output: SELECT COUNT(*) FROM Orders WHERE Delivered = 0;<br><br>",
  "quesType": "mcq",
  "op1": "Delivered orders",
  "op2": "Pending orders count",
  "op3": "All orders",
  "op4": "Delivery addresses",
  "ans": "Pending orders count"
},
{
  "ques": "Output: SELECT Name FROM Books WHERE Author = 'Shakespeare';<br><br>",
  "quesType": "mcq",
  "op1": "All books",
  "op2": "Books by any author",
  "op3": "Books by Shakespeare",
  "op4": "Authors only",
  "ans": "Books by Shakespeare"
},
{
  "ques": "Output: SELECT * FROM Customers WHERE City = 'London';<br><br>",
  "quesType": "mcq",
  "op1": "All cities",
  "op2": "London customers",
  "op3": "Customer count",
  "op4": "City list",
  "ans": "London customers"
},
{
  "ques": "Output: SELECT Email FROM Users WHERE Email LIKE '%@outlook.com';<br><br>",
  "quesType": "mcq",
  "op1": "Emails without outlook",
  "op2": "All emails",
  "op3": "Outlook email addresses",
  "op4": "Email count",
  "ans": "Outlook email addresses"
},
{
  "ques": "Output: SELECT * FROM Orders WHERE Quantity >= 50;<br><br>",
  "quesType": "mcq",
  "op1": "All orders",
  "op2": "Orders under 50",
  "op3": "Orders with quantity 50 or more",
  "op4": "Quantity total",
  "ans": "Orders with quantity 50 or more"
},
{
  "ques": "Output: SELECT Name FROM Students WHERE Grade = 'A';<br><br>",
  "quesType": "mcq",
  "op1": "All students",
  "op2": "Students with grade A",
  "op3": "Grades only",
  "op4": "Grade counts",
  "ans": "Students with grade A"
},
{
  "ques": "Output: SELECT MAX(Price) FROM Products;<br><br>",
  "quesType": "mcq",
  "op1": "Minimum price",
  "op2": "Average price",
  "op3": "Highest price",
  "op4": "All prices",
  "ans": "Highest price"
},
{
  "ques": "Output: SELECT MIN(Quantity) FROM Inventory;<br><br>",
  "quesType": "mcq",
  "op1": "Minimum quantity",
  "op2": "Maximum quantity",
  "op3": "Average quantity",
  "op4": "All quantities",
  "ans": "Minimum quantity"
},
{
  "ques": "Output: SELECT * FROM Employees WHERE Salary > 50000;<br><br>",
  "quesType": "mcq",
  "op1": "All salaries",
  "op2": "Salaries below 50K",
  "op3": "Salaries above 50K",
  "op4": "Average salary",
  "ans": "Salaries above 50K"
},
{
  "ques": "Output: SELECT COUNT(DISTINCT Category) FROM Products;<br><br>",
  "quesType": "mcq",
  "op1": "Product list",
  "op2": "Unique categories count",
  "op3": "Categories list",
  "op4": "Product count",
  "ans": "Unique categories count"
},
{
  "ques": "Output: SELECT Name FROM Employees WHERE Name LIKE 'J%';<br><br>",
  "quesType": "mcq",
  "op1": "Names ending with J",
  "op2": "Names containing J",
  "op3": "Names starting with J",
  "op4": "All names",
  "ans": "Names starting with J"
},
{
  "ques": "Output: SELECT SUM(Salary) FROM Employees WHERE Department = 'IT';<br><br>",
  "quesType": "mcq",
  "op1": "All salaries",
  "op2": "IT department total salary",
  "op3": "Average salary",
  "op4": "Salary count",
  "ans": "IT department total salary"
},
{
  "ques": "Output: SELECT * FROM Orders ORDER BY Date DESC LIMIT 5;<br><br>",
  "quesType": "mcq",
  "op1": "Oldest 5 orders",
  "op2": "All orders",
  "op3": "Newest 5 orders",
  "op4": "Order count",
  "ans": "Newest 5 orders"
},
{
  "ques": "Output: SELECT COUNT(*) FROM Tickets WHERE Status = 'Open';<br><br>",
  "quesType": "mcq",
  "op1": "Closed tickets",
  "op2": "Open tickets count",
  "op3": "Ticket details",
  "op4": "All statuses",
  "ans": "Open tickets count"
}
,
{
  "ques": "Which clause filters groups in SQL?<br><br>",
  "quesType": "mcq",
  "op1": "WHERE",
  "op2": "HAVING",
  "op3": "GROUP",
  "op4": "ORDER",
  "ans": "HAVING"
},
{
  "ques": "Which SQL keyword is used to combine rows from two or more tables?<br><br>",
  "quesType": "mcq",
  "op1": "MERGE",
  "op2": "APPEND",
  "op3": "JOIN",
  "op4": "COMBINE",
  "ans": "JOIN"
},
{
  "ques": "Which JOIN returns all rows when there is a match in one of the tables?<br><br>",
  "quesType": "mcq",
  "op1": "INNER JOIN",
  "op2": "OUTER JOIN",
  "op3": "LEFT JOIN",
  "op4": "FULL JOIN",
  "ans": "FULL JOIN"
},
{
  "ques": "Which constraint ensures column values are unique?<br><br>",
  "quesType": "mcq",
  "op1": "CHECK",
  "op2": "FOREIGN KEY",
  "op3": "UNIQUE",
  "op4": "DEFAULT",
  "ans": "UNIQUE"
},
{
  "ques": "Which function returns number of rows?<br><br>",
  "quesType": "mcq",
  "op1": "SUM()",
  "op2": "AVG()",
  "op3": "COUNT()",
  "op4": "TOTAL()",
  "ans": "COUNT()"
},
{
  "ques": "Which keyword adds data to a table?<br><br>",
  "quesType": "mcq",
  "op1": "INSERT",
  "op2": "ADD",
  "op3": "INPUT",
  "op4": "UPDATE",
  "ans": "INSERT"
},
{
  "ques": "Which keyword is used to update existing data?<br><br>",
  "quesType": "mcq",
  "op1": "MODIFY",
  "op2": "CHANGE",
  "op3": "UPDATE",
  "op4": "SET",
  "ans": "UPDATE"
},
{
  "ques": "Which function returns highest value?<br><br>",
  "quesType": "mcq",
  "op1": "MIN()",
  "op2": "MAX()",
  "op3": "TOP()",
  "op4": "LIMIT()",
  "ans": "MAX()"
},
{
  "ques": "Which removes duplicate records?<br><br>",
  "quesType": "mcq",
  "op1": "DISTINCT",
  "op2": "UNIQUE",
  "op3": "ONLY",
  "op4": "SINGLE",
  "ans": "DISTINCT"
},
{
  "ques": "Which operator matches patterns?<br><br>",
  "quesType": "mcq",
  "op1": "=",
  "op2": "LIKE",
  "op3": "IN",
  "op4": "BETWEEN",
  "ans": "LIKE"
},
{
  "ques": "Which operator checks for NULL?<br><br>",
  "quesType": "mcq",
  "op1": "IS NULL",
  "op2": "NULL?",
  "op3": "== NULL",
  "op4": "EQUAL NULL",
  "ans": "IS NULL"
},
{
  "ques": "Which clause limits result rows?<br><br>",
  "quesType": "mcq",
  "op1": "LIMIT",
  "op2": "HAVING",
  "op3": "WHERE",
  "op4": "ORDER",
  "ans": "LIMIT"
},
{
  "ques": "Which function returns average?<br><br>",
  "quesType": "mcq",
  "op1": "SUM()",
  "op2": "AVG()",
  "op3": "MEAN()",
  "op4": "TOTAL()",
  "ans": "AVG()"
},
{
  "ques": "Which statement removes a table?<br><br>",
  "quesType": "mcq",
  "op1": "DELETE",
  "op2": "DROP",
  "op3": "REMOVE",
  "op4": "TRUNCATE",
  "ans": "DROP"
},
{
  "ques": "Which is used to rename a table?<br><br>",
  "quesType": "mcq",
  "op1": "ALTER",
  "op2": "MODIFY",
  "op3": "RENAME",
  "op4": "CHANGE",
  "ans": "ALTER"
},
{
  "ques": "Which joins rows using common columns?<br><br>",
  "quesType": "mcq",
  "op1": "JOIN ON",
  "op2": "UNION",
  "op3": "GROUP BY",
  "op4": "WHERE",
  "ans": "JOIN ON"
},
{
  "ques": "Which keyword deletes all rows fast?<br><br>",
  "quesType": "mcq",
  "op1": "DELETE",
  "op2": "REMOVE",
  "op3": "DROP",
  "op4": "TRUNCATE",
  "ans": "TRUNCATE"
},
{
  "ques": "Which statement adds new column?<br><br>",
  "quesType": "mcq",
  "op1": "ADD COLUMN",
  "op2": "INSERT COLUMN",
  "op3": "NEW COLUMN",
  "op4": "CREATE COLUMN",
  "ans": "ADD COLUMN"
},
{
  "ques": "Which command undoes changes?<br><br>",
  "quesType": "mcq",
  "op1": "REVOKE",
  "op2": "ROLLBACK",
  "op3": "UNDO",
  "op4": "REWIND",
  "ans": "ROLLBACK"
},
{
  "ques": "Which keyword saves changes?<br><br>",
  "quesType": "mcq",
  "op1": "SAVE",
  "op2": "PERSIST",
  "op3": "COMMIT",
  "op4": "KEEP",
  "ans": "COMMIT"
}
,
{
  "ques": "Output for SELECT COUNT(*) FROM Members WHERE Active = 0;<br><br>",
  "quesType": "fill",
  "ans": "Inactive members count"
},
{
  "ques": "Output for SELECT * FROM Books WHERE Year > 2000;<br><br>",
  "quesType": "fill",
  "ans": "Books published after 2000"
},
{
  "ques": "Output for SELECT DISTINCT Status FROM Tickets;<br><br>",
  "quesType": "fill",
  "ans": "Unique ticket statuses"
},
{
  "ques": "Output for SELECT AVG(Price) FROM Products;<br><br>",
  "quesType": "fill",
  "ans": "Average product price"
},
{
  "ques": "Output for SELECT SUM(Stock) FROM Inventory;<br><br>",
  "quesType": "fill",
  "ans": "Total stock"
},
{
  "ques": "Output for SELECT * FROM Orders WHERE Payment = 'Failed';<br><br>",
  "quesType": "fill",
  "ans": "Failed payments"
},
{
  "ques": "Output for SELECT Name FROM Customers WHERE Country = 'USA';<br><br>",
  "quesType": "fill",
  "ans": "Customers from USA"
},
{
  "ques": "Output for SELECT COUNT(*) FROM Orders WHERE Quantity < 5;<br><br>",
  "quesType": "fill",
  "ans": "Orders with quantity below 5"
},
{
  "ques": "Output for SELECT * FROM Employees WHERE Position = 'Manager';<br><br>",
  "quesType": "fill",
  "ans": "Managers"
},
{
  "ques": "Output for SELECT Name FROM Suppliers WHERE Country != 'China';<br><br>",
  "quesType": "fill",
  "ans": "Suppliers not in China"
},
{
  "ques": "Output for SELECT * FROM Events WHERE Date BETWEEN '2025-01-01' AND '2025-12-31';<br><br>",
  "quesType": "fill",
  "ans": "Events in 2025"
},
{
  "ques": "Output for SELECT MAX(Age) FROM Students;<br><br>",
  "quesType": "fill",
  "ans": "Oldest student age"
},
{
  "ques": "Output for SELECT MIN(Price) FROM Products;<br><br>",
  "quesType": "fill",
  "ans": "Lowest product price"
},
{
  "ques": "Output for SELECT COUNT(*) FROM Feedback WHERE Rating = 5;<br><br>",
  "quesType": "fill",
  "ans": "5-star feedback count"
},
{
  "ques": "Output for SELECT Email FROM Users WHERE Email LIKE '%edu';<br><br>",
  "quesType": "fill",
  "ans": ".edu email addresses"
},
{
  "ques": "Output for SELECT * FROM Reservations WHERE Status = 'Confirmed';<br><br>",
  "quesType": "fill",
  "ans": "Confirmed reservations"
},
{
  "ques": "Output for SELECT DISTINCT Role FROM Employees;<br><br>",
  "quesType": "fill",
  "ans": "Unique employee roles"
},
{
  "ques": "Output for SELECT * FROM Sales ORDER BY Date ASC LIMIT 1;<br><br>",
  "quesType": "fill",
  "ans": "Earliest sale"
},
{
  "ques": "Output for SELECT Name FROM Students WHERE Marks BETWEEN 70 AND 80;<br><br>",
  "quesType": "fill",
  "ans": "Students scoring 70-80"
},
{
  "ques": "Output for SELECT SUM(Amount) FROM Donations WHERE Year = 2024;<br><br>",
  "quesType": "fill",
  "ans": "Total donations in 2024"
}
,
{
  "ques": "Clause for filtering groups?<br><br>",
  "quesType": "fill",
  "ans": "HAVING"
},
{
  "ques": "Combine tables keyword?<br><br>",
  "quesType": "fill",
  "ans": "JOIN"
},
{
  "ques": "Full rows join type?<br><br>",
  "quesType": "fill",
  "ans": "FULL JOIN"
},
{
  "ques": "Ensure unique values constraint?<br><br>",
  "quesType": "fill",
  "ans": "UNIQUE"
},
{
  "ques": "Rows count function?<br><br>",
  "quesType": "fill",
  "ans": "COUNT()"
},
{
  "ques": "Add new data keyword?<br><br>",
  "quesType": "fill",
  "ans": "INSERT"
},
{
  "ques": "Change data keyword?<br><br>",
  "quesType": "fill",
  "ans": "UPDATE"
},
{
  "ques": "Find highest value function?<br><br>",
  "quesType": "fill",
  "ans": "MAX()"
},
{
  "ques": "Remove duplicate rows?<br><br>",
  "quesType": "fill",
  "ans": "DISTINCT"
},
{
  "ques": "Pattern matching operator?<br><br>",
  "quesType": "fill",
  "ans": "LIKE"
},
{
  "ques": "NULL check operator?<br><br>",
  "quesType": "fill",
  "ans": "IS NULL"
},
{
  "ques": "Limit rows clause?<br><br>",
  "quesType": "fill",
  "ans": "LIMIT"
},
{
  "ques": "Average value function?<br><br>",
  "quesType": "fill",
  "ans": "AVG()"
},
{
  "ques": "Delete table command?<br><br>",
  "quesType": "fill",
  "ans": "DROP"
},
{
  "ques": "Rename table statement?<br><br>",
  "quesType": "fill",
  "ans": "ALTER"
},
{
  "ques": "Join rows by column?<br><br>",
  "quesType": "fill",
  "ans": "JOIN ON"
},
{
  "ques": "Delete all rows fast?<br><br>",
  "quesType": "fill",
  "ans": "TRUNCATE"
},
{
  "ques": "Add column command?<br><br>",
  "quesType": "fill",
  "ans": "ADD COLUMN"
},
{
  "ques": "Undo transaction?<br><br>",
  "quesType": "fill",
  "ans": "ROLLBACK"
},
{
  "ques": "Save transaction?<br><br>",
  "quesType": "fill",
  "ans": "COMMIT"
}
,
{
  "ques": "SELECT COUNT(*) FROM employees WHERE department = 'HR'; returns?<br><br>",
  "quesType": "mcq",
  "op1": "Number of all employees",
  "op2": "Number of HR employees",
  "op3": "Number of departments",
  "op4": "Sum of salaries",
  "ans": "Number of HR employees"
},
{
  "ques": "Output of: SELECT SUM(amount) FROM payments WHERE status = 'Paid';<br><br>",
  "quesType": "mcq",
  "op1": "Sum of all payments",
  "op2": "Sum of unpaid payments",
  "op3": "Sum of paid payments",
  "op4": "Count of payments",
  "ans": "Sum of paid payments"
},
{
  "ques": "SELECT DISTINCT role FROM users; gives?<br><br>",
  "quesType": "mcq",
  "op1": "All users",
  "op2": "Roles of all users",
  "op3": "Unique roles only",
  "op4": "Count of roles",
  "ans": "Unique roles only"
},
{
  "ques": "SELECT email FROM clients WHERE phone IS NULL; returns?<br><br>",
  "quesType": "mcq",
  "op1": "Clients with phone",
  "op2": "Clients without phone",
  "op3": "All clients",
  "op4": "Clients with email NULL",
  "ans": "Clients without phone"
},
{
  "ques": "SELECT MAX(salary) FROM staff; output?<br><br>",
  "quesType": "mcq",
  "op1": "Lowest salary",
  "op2": "Average salary",
  "op3": "Maximum salary",
  "op4": "Sum of salaries",
  "ans": "Maximum salary"
},
{
  "ques": "SELECT name FROM products WHERE price > 1000;<br><br>",
  "quesType": "mcq",
  "op1": "Products under 1000",
  "op2": "Products priced above 1000",
  "op3": "All product names",
  "op4": "Products with no price",
  "ans": "Products priced above 1000"
},
{
  "ques": "SELECT * FROM orders WHERE status != 'Cancelled'; returns?<br><br>",
  "quesType": "mcq",
  "op1": "Cancelled orders",
  "op2": "All orders",
  "op3": "Non-cancelled orders",
  "op4": "Orders with NULL status",
  "ans": "Non-cancelled orders"
},
{
  "ques": "Output of: SELECT username FROM accounts WHERE created_at < '2024-01-01';<br><br>",
  "quesType": "mcq",
  "op1": "Accounts made in 2024",
  "op2": "Accounts before 2024",
  "op3": "All accounts",
  "op4": "Accounts with NULL date",
  "ans": "Accounts before 2024"
},
{
  "ques": "SELECT name FROM members WHERE age BETWEEN 18 AND 25;<br><br>",
  "quesType": "mcq",
  "op1": "Members under 18",
  "op2": "Members above 25",
  "op3": "Members aged 18-25",
  "op4": "All members",
  "ans": "Members aged 18-25"
},
{
  "ques": "SELECT AVG(score) FROM exams WHERE subject = 'Math'; returns?<br><br>",
  "quesType": "mcq",
  "op1": "Average score of all subjects",
  "op2": "Highest Math score",
  "op3": "Average Math score",
  "op4": "Sum of Math scores",
  "ans": "Average Math score"
},
{
  "ques": "Output of: SELECT department, COUNT(*) FROM employees GROUP BY department;<br><br>",
  "quesType": "mcq",
  "op1": "Number of employees",
  "op2": "Count per department",
  "op3": "Sum of salaries",
  "op4": "List of departments only",
  "ans": "Count per department"
},
{
  "ques": "SELECT COUNT(email) FROM users WHERE email LIKE '%yahoo.com';<br><br>",
  "quesType": "mcq",
  "op1": "Yahoo emails count",
  "op2": "All emails",
  "op3": "Non-Yahoo emails",
  "op4": "Emails with NULL",
  "ans": "Yahoo emails count"
},
{
  "ques": "SELECT id FROM tickets WHERE status = 'Closed'; returns?<br><br>",
  "quesType": "mcq",
  "op1": "Open tickets",
  "op2": "All tickets",
  "op3": "Closed tickets",
  "op4": "Cancelled tickets",
  "ans": "Closed tickets"
},
{
  "ques": "SELECT price FROM items WHERE discount > 0;<br><br>",
  "quesType": "mcq",
  "op1": "Items with no discount",
  "op2": "Discounted items",
  "op3": "All items",
  "op4": "Items with NULL price",
  "ans": "Discounted items"
},
{
  "ques": "Output of: SELECT COUNT(*) FROM products WHERE stock <= 5;<br><br>",
  "quesType": "mcq",
  "op1": "Products out of stock",
  "op2": "Products with stock > 5",
  "op3": "Low stock products",
  "op4": "All products",
  "ans": "Low stock products"
},
{
  "ques": "SELECT phone FROM users WHERE phone IS NOT NULL;<br><br>",
  "quesType": "mcq",
  "op1": "Users with NULL phone",
  "op2": "Users without phone",
  "op3": "Users with phone",
  "op4": "All users",
  "ans": "Users with phone"
},
{
  "ques": "Output of: SELECT username FROM logins WHERE last_login > '2025-01-01';<br><br>",
  "quesType": "mcq",
  "op1": "Logins before 2025",
  "op2": "Logins after 2025",
  "op3": "All usernames",
  "op4": "NULL usernames",
  "ans": "Logins after 2025"
},
{
  "ques": "SELECT * FROM payments WHERE amount != 0;<br><br>",
  "quesType": "mcq",
  "op1": "Payments with zero",
  "op2": "Payments with no amount",
  "op3": "Non-zero payments",
  "op4": "All payments",
  "ans": "Non-zero payments"
},
{
  "ques": "SELECT email FROM staff WHERE email LIKE 'a%';<br><br>",
  "quesType": "mcq",
  "op1": "Emails starting with any letter",
  "op2": "Emails ending with a",
  "op3": "Emails starting with a",
  "op4": "Emails without a",
  "ans": "Emails starting with a"
},
{
  "ques": "Output of: SELECT COUNT(DISTINCT city) FROM branches;<br><br>",
  "quesType": "mcq",
  "op1": "All cities",
  "op2": "Branches in cities",
  "op3": "Unique cities count",
  "op4": "All branches",
  "ans": "Unique cities count"
},
{
  "ques": "Count HR employees?<br><br>",
  "quesType": "fill",
  "ans": "WHERE department = 'HR'"
},
{
  "ques": "Sum of paid amounts?<br><br>",
  "quesType": "fill",
  "ans": "SUM(amount)"
},
{
  "ques": "Unique roles keyword?<br><br>",
  "quesType": "fill",
  "ans": "DISTINCT"
},
{
  "ques": "Condition for phone NULL?<br><br>",
  "quesType": "fill",
  "ans": "IS NULL"
},
{
  "ques": "Find max salary?<br><br>",
  "quesType": "fill",
  "ans": "MAX(salary)"
},
{
  "ques": "Price above 1000?<br><br>",
  "quesType": "fill",
  "ans": "price > 1000"
},
{
  "ques": "Condition for NOT cancelled?<br><br>",
  "quesType": "fill",
  "ans": "!= 'Cancelled'"
},
{
  "ques": "Created before 2024?<br><br>",
  "quesType": "fill",
  "ans": "< '2024-01-01'"
},
{
  "ques": "Between ages 18 and 25?<br><br>",
  "quesType": "fill",
  "ans": "BETWEEN 18 AND 25"
},
{
  "ques": "Average Math score?<br><br>",
  "quesType": "fill",
  "ans": "AVG(score)"
},
{
  "ques": "Count per department?<br><br>",
  "quesType": "fill",
  "ans": "GROUP BY department"
},
{
  "ques": "Yahoo emails LIKE?<br><br>",
  "quesType": "fill",
  "ans": "LIKE '%yahoo.com'"
},
{
  "ques": "Closed tickets status?<br><br>",
  "quesType": "fill",
  "ans": "status = 'Closed'"
},
{
  "ques": "Discount greater than 0?<br><br>",
  "quesType": "fill",
  "ans": "discount > 0"
},
{
  "ques": "Low stock condition?<br><br>",
  "quesType": "fill",
  "ans": "stock <= 5"
},
{
  "ques": "Phone present condition?<br><br>",
  "quesType": "fill",
  "ans": "IS NOT NULL"
},
{
  "ques": "Logins after 2025?<br><br>",
  "quesType": "fill",
  "ans": "> '2025-01-01'"
},
{
  "ques": "Amount not zero?<br><br>",
  "quesType": "fill",
  "ans": "amount != 0"
},
{
  "ques": "Emails starting with a?<br><br>",
  "quesType": "fill",
  "ans": "LIKE 'a%'"
},
{
  "ques": "Unique cities count?<br><br>",
  "quesType": "fill",
  "ans": "COUNT(DISTINCT city)"
}



]
let codingsql3Arr=[
  {
  "ques": "Which clause partitions rows before a window function?<br><br>",
  "quesType": "mcq",
  "op1": "PARTITION BY",
  "op2": "GROUP BY",
  "op3": "ORDER BY",
  "op4": "ROW BY",
  "ans": "PARTITION BY"
},
{
  "ques": "Which function returns row number in result?<br><br>",
  "quesType": "mcq",
  "op1": "ROWID()",
  "op2": "ROWNUM()",
  "op3": "ROW_NUMBER()",
  "op4": "RANK()",
  "ans": "ROW_NUMBER()"
},
{
  "ques": "Which keyword is used to create an index?<br><br>",
  "quesType": "mcq",
  "op1": "INDEX",
  "op2": "CREATE INDEX",
  "op3": "NEW INDEX",
  "op4": "ADD INDEX",
  "ans": "CREATE INDEX"
},
{
  "ques": "Which keyword deletes a database?<br><br>",
  "quesType": "mcq",
  "op1": "REMOVE DATABASE",
  "op2": "DROP DATABASE",
  "op3": "DELETE DATABASE",
  "op4": "TRUNCATE DATABASE",
  "ans": "DROP DATABASE"
},
{
  "ques": "Which function finds the rank of rows?<br><br>",
  "quesType": "mcq",
  "op1": "RANK()",
  "op2": "ROW_NUMBER()",
  "op3": "DENSE_RANK()",
  "op4": "LEVEL()",
  "ans": "RANK()"
},
{
  "ques": "Which operator merges result sets?<br><br>",
  "quesType": "mcq",
  "op1": "JOIN",
  "op2": "MERGE",
  "op3": "UNION",
  "op4": "CONNECT",
  "ans": "UNION"
},
{
  "ques": "Which statement changes table structure?<br><br>",
  "quesType": "mcq",
  "op1": "MODIFY",
  "op2": "CHANGE",
  "op3": "ALTER TABLE",
  "op4": "UPDATE TABLE",
  "ans": "ALTER TABLE"
},
{
  "ques": "Which keyword rolls back to savepoint?<br><br>",
  "quesType": "mcq",
  "op1": "ROLLBACK",
  "op2": "ROLLBACK TO",
  "op3": "UNDO TO",
  "op4": "REVERT",
  "ans": "ROLLBACK TO"
},
{
  "ques": "Which is not a valid isolation level?<br><br>",
  "quesType": "mcq",
  "op1": "SERIALIZABLE",
  "op2": "READ UNCOMMITTED",
  "op3": "REPEATABLE READ",
  "op4": "UNIQUE READ",
  "ans": "UNIQUE READ"
},
{
  "ques": "Which constraint ensures referential integrity?<br><br>",
  "quesType": "mcq",
  "op1": "PRIMARY KEY",
  "op2": "FOREIGN KEY",
  "op3": "UNIQUE",
  "op4": "CHECK",
  "ans": "FOREIGN KEY"
},
{
  "ques": "Which clause is used in recursive queries?<br><br>",
  "quesType": "mcq",
  "op1": "CONNECT BY",
  "op2": "RECURSIVE",
  "op3": "WITH RECURSIVE",
  "op4": "REPEAT",
  "ans": "WITH RECURSIVE"
},
{
  "ques": "Which keyword locks a table?<br><br>",
  "quesType": "mcq",
  "op1": "HOLD",
  "op2": "LOCK",
  "op3": "FREEZE",
  "op4": "SECURE",
  "ans": "LOCK"
},
{
  "ques": "Which operator returns true if subquery returns any row?<br><br>",
  "quesType": "mcq",
  "op1": "ALL",
  "op2": "ANY",
  "op3": "EXISTS",
  "op4": "IN",
  "ans": "EXISTS"
},
{
  "ques": "Which operator compares sets?<br><br>",
  "quesType": "mcq",
  "op1": "EXCEPT",
  "op2": "DIFFERENCE",
  "op3": "SUBTRACT",
  "op4": "MINUS",
  "ans": "EXCEPT"
},
{
  "ques": "Which clause orders window function output?<br><br>",
  "quesType": "mcq",
  "op1": "ORDER BY",
  "op2": "GROUP BY",
  "op3": "SORT BY",
  "op4": "ROW BY",
  "ans": "ORDER BY"
},
{
  "ques": "Which keyword makes temp table?<br><br>",
  "quesType": "mcq",
  "op1": "TEMPORARY",
  "op2": "TEMP",
  "op3": "TEMPORARY TABLE",
  "op4": "CREATE TEMP TABLE",
  "ans": "CREATE TEMP TABLE"
},
{
  "ques": "Which function returns current date?<br><br>",
  "quesType": "mcq",
  "op1": "GETDATE()",
  "op2": "SYSDATE()",
  "op3": "CURDATE()",
  "op4": "NOW()",
  "ans": "NOW()"
},
{
  "ques": "Which function concatenates strings?<br><br>",
  "quesType": "mcq",
  "op1": "CONCAT()",
  "op2": "MERGE()",
  "op3": "APPEND()",
  "op4": "JOIN()",
  "ans": "CONCAT()"
},
{
  "ques": "Which function changes data type?<br><br>",
  "quesType": "mcq",
  "op1": "CONVERT()",
  "op2": "CAST()",
  "op3": "TRANSFORM()",
  "op4": "CHANGE()",
  "ans": "CAST()"
},
{
  "ques": "Which function returns substring?<br><br>",
  "quesType": "mcq",
  "op1": "SUBSTR()",
  "op2": "SLICE()",
  "op3": "SUBSTRING()",
  "op4": "CUT()",
  "ans": "SUBSTRING()"
}
,
{
  "ques": "Partition rows clause?<br><br>",
  "quesType": "fill",
  "ans": "PARTITION BY"
},
{
  "ques": "Row number function?<br><br>",
  "quesType": "fill",
  "ans": "ROW_NUMBER()"
},
{
  "ques": "Create index keyword?<br><br>",
  "quesType": "fill",
  "ans": "CREATE INDEX"
},
{
  "ques": "Delete database keyword?<br><br>",
  "quesType": "fill",
  "ans": "DROP DATABASE"
},
{
  "ques": "Rank rows function?<br><br>",
  "quesType": "fill",
  "ans": "RANK()"
},
{
  "ques": "Merge sets operator?<br><br>",
  "quesType": "fill",
  "ans": "UNION"
},
{
  "ques": "Change table structure?<br><br>",
  "quesType": "fill",
  "ans": "ALTER TABLE"
},
{
  "ques": "Rollback to savepoint?<br><br>",
  "quesType": "fill",
  "ans": "ROLLBACK TO"
},
{
  "ques": "Not valid isolation level?<br><br>",
  "quesType": "fill",
  "ans": "UNIQUE READ"
},
{
  "ques": "Referential integrity constraint?<br><br>",
  "quesType": "fill",
  "ans": "FOREIGN KEY"
},
{
  "ques": "Recursive query clause?<br><br>",
  "quesType": "fill",
  "ans": "WITH RECURSIVE"
},
{
  "ques": "Lock table keyword?<br><br>",
  "quesType": "fill",
  "ans": "LOCK"
},
{
  "ques": "Check if rows exist?<br><br>",
  "quesType": "fill",
  "ans": "EXISTS"
},
{
  "ques": "Compare sets operator?<br><br>",
  "quesType": "fill",
  "ans": "EXCEPT"
},
{
  "ques": "Window order clause?<br><br>",
  "quesType": "fill",
  "ans": "ORDER BY"
},
{
  "ques": "Temporary table keyword?<br><br>",
  "quesType": "fill",
  "ans": "CREATE TEMP TABLE"
},
{
  "ques": "Current date function?<br><br>",
  "quesType": "fill",
  "ans": "NOW()"
},
{
  "ques": "Concatenate strings function?<br><br>",
  "quesType": "fill",
  "ans": "CONCAT()"
},
{
  "ques": "Change data type function?<br><br>",
  "quesType": "fill",
  "ans": "CAST()"
},
{
  "ques": "Substring function?<br><br>",
  "quesType": "fill",
  "ans": "SUBSTRING()"
}
,
{
  "ques": "What does: SELECT COUNT(*) FROM employees WHERE salary > (SELECT AVG(salary) FROM employees); return?<br><br>",
  "quesType": "mcq",
  "op1": "Count below average salary",
  "op2": "Count above average salary",
  "op3": "Total employees",
  "op4": "Sum of salaries",
  "ans": "Count above average salary"
},
{
  "ques": "Output of: SELECT department FROM employees GROUP BY department HAVING COUNT(*) > 5;<br><br>",
  "quesType": "mcq",
  "op1": "Departments with 5 or fewer",
  "op2": "Departments with more than 5",
  "op3": "All departments",
  "op4": "Departments with zero employees",
  "ans": "Departments with more than 5"
},
{
  "ques": "SELECT name FROM products WHERE price = (SELECT MAX(price) FROM products); gives?<br><br>",
  "quesType": "mcq",
  "op1": "All product names",
  "op2": "Products with lowest price",
  "op3": "Products with highest price",
  "op4": "Products out of stock",
  "ans": "Products with highest price"
},
{
  "ques": "Output of: SELECT COUNT(DISTINCT department) FROM employees;<br><br>",
  "quesType": "mcq",
  "op1": "Total departments",
  "op2": "Total employees",
  "op3": "Average employees per department",
  "op4": "Sum of salaries",
  "ans": "Total departments"
},
{
  "ques": "SELECT name FROM students WHERE id IN (SELECT student_id FROM results WHERE score > 90);<br><br>",
  "quesType": "mcq",
  "op1": "All students",
  "op2": "Students scoring below 90",
  "op3": "Students scoring above 90",
  "op4": "Students with no score",
  "ans": "Students scoring above 90"
},
{
  "ques": "What does: SELECT * FROM orders WHERE order_date BETWEEN '2024-01-01' AND '2024-12-31'; return?<br><br>",
  "quesType": "mcq",
  "op1": "Orders before 2024",
  "op2": "Orders in 2024",
  "op3": "Orders after 2024",
  "op4": "All orders",
  "ans": "Orders in 2024"
},
{
  "ques": "Output of: SELECT department, AVG(salary) FROM employees GROUP BY department;<br><br>",
  "quesType": "mcq",
  "op1": "Average salary of all",
  "op2": "Total salary per department",
  "op3": "Average per department",
  "op4": "Employees list",
  "ans": "Average per department"
},
{
  "ques": "SELECT COUNT(*) FROM orders WHERE customer_id NOT IN (SELECT id FROM customers);<br><br>",
  "quesType": "mcq",
  "op1": "Orders linked to customers",
  "op2": "Orphan orders",
  "op3": "Total orders",
  "op4": "Cancelled orders",
  "ans": "Orphan orders"
},
{
  "ques": "SELECT name FROM suppliers WHERE EXISTS (SELECT * FROM products WHERE supplier_id = suppliers.id);<br><br>",
  "quesType": "mcq",
  "op1": "Suppliers with no products",
  "op2": "All suppliers",
  "op3": "Suppliers with products",
  "op4": "All products",
  "ans": "Suppliers with products"
},
{
  "ques": "Output of: SELECT name FROM employees WHERE manager_id IS NULL;<br><br>",
  "quesType": "mcq",
  "op1": "Managers only",
  "op2": "Employees without manager",
  "op3": "All employees",
  "op4": "Employees with managers",
  "ans": "Employees without manager"
},
{
  "ques": "SELECT COUNT(*) FROM products WHERE stock = 0;<br><br>",
  "quesType": "mcq",
  "op1": "All products",
  "op2": "Products in stock",
  "op3": "Out of stock products",
  "op4": "Low stock products",
  "ans": "Out of stock products"
},
{
  "ques": "Output of: SELECT department, SUM(salary) FROM employees GROUP BY department HAVING SUM(salary) > 100000;<br><br>",
  "quesType": "mcq",
  "op1": "All departments",
  "op2": "Departments earning over 100k",
  "op3": "Departments earning under 100k",
  "op4": "All employees",
  "ans": "Departments earning over 100k"
},
{
  "ques": "SELECT * FROM orders WHERE amount BETWEEN 500 AND 1000;<br><br>",
  "quesType": "mcq",
  "op1": "Orders below 500",
  "op2": "Orders above 1000",
  "op3": "Orders between 500 and 1000",
  "op4": "All orders",
  "ans": "Orders between 500 and 1000"
},
{
  "ques": "SELECT MAX(price) FROM products WHERE category = 'Electronics';<br><br>",
  "quesType": "mcq",
  "op1": "Highest price of all",
  "op2": "Lowest price in Electronics",
  "op3": "Max price in Electronics",
  "op4": "Sum of prices",
  "ans": "Max price in Electronics"
},
{
  "ques": "SELECT name FROM employees WHERE salary > ALL (SELECT salary FROM employees WHERE department = 'HR');<br><br>",
  "quesType": "mcq",
  "op1": "Employees earning more than any HR",
  "op2": "Employees earning less than HR",
  "op3": "Employees with same HR salary",
  "op4": "All employees",
  "ans": "Employees earning more than any HR"
},
{
  "ques": "Output of: SELECT department FROM employees GROUP BY department HAVING COUNT(*) = 1;<br><br>",
  "quesType": "mcq",
  "op1": "Empty departments",
  "op2": "Departments with exactly 1 employee",
  "op3": "Departments with many employees",
  "op4": "All departments",
  "ans": "Departments with exactly 1 employee"
},
{
  "ques": "SELECT name FROM students WHERE grade IN ('A', 'B');<br><br>",
  "quesType": "mcq",
  "op1": "Students with C",
  "op2": "Students with A or B",
  "op3": "Students with D",
  "op4": "All students",
  "ans": "Students with A or B"
},
{
  "ques": "Output of: SELECT customer_id, COUNT(*) FROM orders GROUP BY customer_id;<br><br>",
  "quesType": "mcq",
  "op1": "All customers",
  "op2": "Order count per customer",
  "op3": "Total orders",
  "op4": "All orders",
  "ans": "Order count per customer"
},
{
  "ques": "Output of: SELECT SUM(amount) FROM orders WHERE status = 'Completed';<br><br>",
  "quesType": "mcq",
  "op1": "Sum of all orders",
  "op2": "Sum of cancelled orders",
  "op3": "Sum of completed orders",
  "op4": "Sum of failed orders",
  "ans": "Sum of completed orders"
},
{
  "ques": "Output of: SELECT COUNT(*) FROM logins WHERE login_date >= CURDATE();<br><br>",
  "quesType": "mcq",
  "op1": "Past logins",
  "op2": "Future logins",
  "op3": "Today's logins",
  "op4": "All logins",
  "ans": "Today's logins"
}
,
{
  "ques": "Count employees above avg salary?<br><br>",
  "quesType": "fill",
  "ans": "salary > (SELECT AVG(salary) FROM employees)"
},
{
  "ques": "Filter groups having count > 5?<br><br>",
  "quesType": "fill",
  "ans": "HAVING COUNT(*) > 5"
},
{
  "ques": "Products with max price?<br><br>",
  "quesType": "fill",
  "ans": "price = (SELECT MAX(price) FROM products)"
},
{
  "ques": "Distinct departments count?<br><br>",
  "quesType": "fill",
  "ans": "COUNT(DISTINCT department)"
},
{
  "ques": "Students scoring > 90 subquery?<br><br>",
  "quesType": "fill",
  "ans": "id IN (SELECT student_id FROM results WHERE score > 90)"
},
{
  "ques": "Orders in 2024?<br><br>",
  "quesType": "fill",
  "ans": "BETWEEN '2024-01-01' AND '2024-12-31'"
},
{
  "ques": "Average salary by department?<br><br>",
  "quesType": "fill",
  "ans": "AVG(salary)"
},
{
  "ques": "Find orphan orders?<br><br>",
  "quesType": "fill",
  "ans": "customer_id NOT IN (SELECT id FROM customers)"
},
{
  "ques": "Suppliers with products?<br><br>",
  "quesType": "fill",
  "ans": "EXISTS (SELECT * FROM products WHERE supplier_id = suppliers.id)"
},
{
  "ques": "Employees without manager?<br><br>",
  "quesType": "fill",
  "ans": "manager_id IS NULL"
},
{
  "ques": "Out of stock check?<br><br>",
  "quesType": "fill",
  "ans": "stock = 0"
},
{
  "ques": "Department salary over 100k?<br><br>",
  "quesType": "fill",
  "ans": "HAVING SUM(salary) > 100000"
},
{
  "ques": "Orders in 500-1000 range?<br><br>",
  "quesType": "fill",
  "ans": "BETWEEN 500 AND 1000"
},
{
  "ques": "Max Electronics price?<br><br>",
  "quesType": "fill",
  "ans": "MAX(price)"
},
{
  "ques": "Salary > ALL HR salaries?<br><br>",
  "quesType": "fill",
  "ans": "salary > ALL (SELECT salary FROM employees WHERE department = 'HR')"
},
{
  "ques": "Only 1 employee in dept?<br><br>",
  "quesType": "fill",
  "ans": "HAVING COUNT(*) = 1"
},
{
  "ques": "Students A or B grade?<br><br>",
  "quesType": "fill",
  "ans": "grade IN ('A', 'B')"
},
{
  "ques": "Order count per customer?<br><br>",
  "quesType": "fill",
  "ans": "GROUP BY customer_id"
},
{
  "ques": "Sum completed orders?<br><br>",
  "quesType": "fill",
  "ans": "status = 'Completed'"
},
{
  "ques": "Today's logins?<br><br>",
  "quesType": "fill",
  "ans": "login_date >= CURDATE()"
}
,
{
  "ques": "Output: SELECT MAX(Salary) FROM Employees WHERE DepartmentID IN (SELECT ID FROM Departments WHERE Location = 'NY');<br><br>",
  "quesType": "mcq",
  "op1": "Max salary in NY departments",
  "op2": "Max salary in all departments",
  "op3": "All salaries",
  "op4": "NY departments list",
  "ans": "Max salary in NY departments"
},
{
  "ques": "Output: SELECT COUNT(*) FROM Orders WHERE CustomerID NOT IN (SELECT ID FROM Customers WHERE Country = 'USA');<br><br>",
  "quesType": "mcq",
  "op1": "Orders from USA",
  "op2": "Orders not from USA",
  "op3": "All orders",
  "op4": "Customers from USA",
  "ans": "Orders not from USA"
},
{
  "ques": "Output: SELECT Name FROM Students WHERE Marks = (SELECT MAX(Marks) FROM Students);<br><br>",
  "quesType": "mcq",
  "op1": "Students with lowest marks",
  "op2": "All students",
  "op3": "Students with highest marks",
  "op4": "Marks average",
  "ans": "Students with highest marks"
},
{
  "ques": "Output: SELECT Department, AVG(Salary) FROM Employees GROUP BY Department HAVING AVG(Salary) > 60000;<br><br>",
  "quesType": "mcq",
  "op1": "All departments",
  "op2": "Departments with avg salary below 60k",
  "op3": "Departments with avg salary above 60k",
  "op4": "Employees only",
  "ans": "Departments with avg salary above 60k"
},
{
  "ques": "Output: SELECT CustomerID, SUM(Amount) FROM Orders GROUP BY CustomerID ORDER BY SUM(Amount) DESC LIMIT 1;<br><br>",
  "quesType": "mcq",
  "op1": "Lowest paying customer",
  "op2": "All customers",
  "op3": "Top paying customer",
  "op4": "Orders list",
  "ans": "Top paying customer"
},
{
  "ques": "Output: SELECT Name FROM Products WHERE ID IN (SELECT ProductID FROM OrderDetails GROUP BY ProductID HAVING COUNT(*) > 10);<br><br>",
  "quesType": "mcq",
  "op1": "Products never ordered",
  "op2": "Products ordered more than 10 times",
  "op3": "Products under 10 orders",
  "op4": "All products",
  "ans": "Products ordered more than 10 times"
},
{
  "ques": "Output: SELECT * FROM Orders o JOIN Customers c ON o.CustomerID = c.ID WHERE c.City = 'Berlin';<br><br>",
  "quesType": "mcq",
  "op1": "Orders from all cities",
  "op2": "Orders from Berlin customers",
  "op3": "Customer list",
  "op4": "Cities list",
  "ans": "Orders from Berlin customers"
},
{
  "ques": "Output: SELECT Name FROM Employees WHERE EXISTS (SELECT * FROM Salaries WHERE Salaries.EmpID = Employees.ID AND Amount > 100000);<br><br>",
  "quesType": "mcq",
  "op1": "Employees earning below 100k",
  "op2": "All employees",
  "op3": "Employees earning above 100k",
  "op4": "Salary list",
  "ans": "Employees earning above 100k"
},
{
  "ques": "Output: SELECT Department, COUNT(*) OVER (PARTITION BY Department) FROM Employees;<br><br>",
  "quesType": "mcq",
  "op1": "Employees count per department",
  "op2": "All employees",
  "op3": "Total employees",
  "op4": "Average salary",
  "ans": "Employees count per department"
},
{
  "ques": "Output: SELECT Name FROM Products WHERE Price = (SELECT MIN(Price) FROM Products);<br><br>",
  "quesType": "mcq",
  "op1": "Most expensive product",
  "op2": "Cheapest product",
  "op3": "All products",
  "op4": "Price list",
  "ans": "Cheapest product"
},
{
  "ques": "Output: SELECT Name FROM Employees WHERE ID IN (SELECT ManagerID FROM Employees);<br><br>",
  "quesType": "mcq",
  "op1": "Only non-managers",
  "op2": "Employees with no manager",
  "op3": "Employees who are managers",
  "op4": "All employees",
  "ans": "Employees who are managers"
},
{
  "ques": "Output: SELECT CustomerID, COUNT(*) FROM Orders GROUP BY CustomerID HAVING COUNT(*) > 5;<br><br>",
  "quesType": "mcq",
  "op1": "Customers with few orders",
  "op2": "All orders",
  "op3": "Customers with many orders",
  "op4": "Customer list",
  "ans": "Customers with many orders"
},
{
  "ques": "Output: SELECT * FROM Payments WHERE Amount BETWEEN 100 AND 200;<br><br>",
  "quesType": "mcq",
  "op1": "Payments over 200",
  "op2": "Payments under 100",
  "op3": "Payments between 100 and 200",
  "op4": "All payments",
  "ans": "Payments between 100 and 200"
},
{
  "ques": "Output: SELECT Name FROM Employees WHERE Name LIKE '_a%';<br><br>",
  "quesType": "mcq",
  "op1": "Names ending with a",
  "op2": "Names starting with a",
  "op3": "Names with 'a' as second letter",
  "op4": "All names",
  "ans": "Names with 'a' as second letter"
},
{
  "ques": "Output: SELECT Department, MAX(Salary) FROM Employees GROUP BY Department;<br><br>",
  "quesType": "mcq",
  "op1": "Min salary by dept",
  "op2": "Max salary by dept",
  "op3": "All salaries",
  "op4": "Average salary",
  "ans": "Max salary by dept"
},
{
  "ques": "Output: SELECT * FROM Employees WHERE Salary > ALL (SELECT Salary FROM Employees WHERE Department = 'HR');<br><br>",
  "quesType": "mcq",
  "op1": "Salaries in HR",
  "op2": "Salaries lower than HR",
  "op3": "Salaries higher than everyone in HR",
  "op4": "All salaries",
  "ans": "Salaries higher than everyone in HR"
},
{
  "ques": "Output: SELECT Name FROM Users WHERE Email IS NULL;<br><br>",
  "quesType": "mcq",
  "op1": "Users with email",
  "op2": "All users",
  "op3": "Users with no email",
  "op4": "Email list",
  "ans": "Users with no email"
},
{
  "ques": "Output: SELECT Department, SUM(Salary) OVER (PARTITION BY Department) FROM Employees;<br><br>",
  "quesType": "mcq",
  "op1": "Total salary overall",
  "op2": "Total salary by dept",
  "op3": "Average salary",
  "op4": "Salary list",
  "ans": "Total salary by dept"
},
{
  "ques": "Output: SELECT Name FROM Employees WHERE Salary > (SELECT AVG(Salary) FROM Employees);<br><br>",
  "quesType": "mcq",
  "op1": "Employees with salary below avg",
  "op2": "All employees",
  "op3": "Employees with salary above avg",
  "op4": "Avg salary",
  "ans": "Employees with salary above avg"
},
{
  "ques": "Output: SELECT Name FROM Employees WHERE ID IN (SELECT EmpID FROM Bonuses);<br><br>",
  "quesType": "mcq",
  "op1": "Employees with no bonus",
  "op2": "Employees with bonus",
  "op3": "All employees",
  "op4": "Bonuses list",
  "ans": "Employees with bonus"
}
,
{
  "ques": "Output for SELECT * FROM Orders WHERE Date >= '2024-01-01';<br><br>",
  "quesType": "fill",
  "ans": "Orders from 2024 onwards"
},
{
  "ques": "Output for SELECT COUNT(*) FROM Employees WHERE Salary BETWEEN 50000 AND 70000;<br><br>",
  "quesType": "fill",
  "ans": "Employees with salary in 50-70K"
},
{
  "ques": "Output for SELECT AVG(Age) FROM Students WHERE Marks > 80;<br><br>",
  "quesType": "fill",
  "ans": "Average age of high scorers"
},
{
  "ques": "Output for SELECT MAX(Amount) FROM Payments WHERE Status = 'Pending';<br><br>",
  "quesType": "fill",
  "ans": "Largest pending payment"
},
{
  "ques": "Output for SELECT DISTINCT Year FROM Orders;<br><br>",
  "quesType": "fill",
  "ans": "Years with orders"
},
{
  "ques": "Output for SELECT Name FROM Customers WHERE ID IN (SELECT CustomerID FROM Orders WHERE Amount > 1000);<br><br>",
  "quesType": "fill",
  "ans": "Customers with big orders"
},
{
  "ques": "Output for SELECT * FROM Employees WHERE Department IN ('HR', 'Finance');<br><br>",
  "quesType": "fill",
  "ans": "Employees in HR or Finance"
},
{
  "ques": "Output for SELECT MIN(BirthDate) FROM Users;<br><br>",
  "quesType": "fill",
  "ans": "Oldest birth date"
},
{
  "ques": "Output for SELECT COUNT(*) FROM Tickets WHERE Priority = 'High';<br><br>",
  "quesType": "fill",
  "ans": "High priority tickets count"
},
{
  "ques": "Output for SELECT * FROM Orders WHERE Amount = (SELECT MAX(Amount) FROM Orders);<br><br>",
  "quesType": "fill",
  "ans": "Biggest order"
},
{
  "ques": "Output for SELECT Name FROM Products WHERE Stock = 0;<br><br>",
  "quesType": "fill",
  "ans": "Out of stock products"
},
{
  "ques": "Output for SELECT DISTINCT Role FROM Employees;<br><br>",
  "quesType": "fill",
  "ans": "Different employee roles"
},
{
  "ques": "Output for SELECT COUNT(*) FROM Employees WHERE ManagerID IS NULL;<br><br>",
  "quesType": "fill",
  "ans": "Employees with no manager"
},
{
  "ques": "Output for SELECT Department, COUNT(*) FROM Employees GROUP BY Department;<br><br>",
  "quesType": "fill",
  "ans": "Headcount by department"
},
{
  "ques": "Output for SELECT SUM(Amount) FROM Orders WHERE Delivered = 1;<br><br>",
  "quesType": "fill",
  "ans": "Total of delivered orders"
},
{
  "ques": "Output for SELECT MAX(Price) FROM Products WHERE Category = 'Electronics';<br><br>",
  "quesType": "fill",
  "ans": "Highest price in Electronics"
},
{
  "ques": "Output for SELECT * FROM Users WHERE CreatedAt > '2025-01-01';<br><br>",
  "quesType": "fill",
  "ans": "Users created after Jan 2025"
},
{
  "ques": "Output for SELECT DISTINCT Country FROM Customers;<br><br>",
  "quesType": "fill",
  "ans": "Countries with customers"
},
{
  "ques": "Output for SELECT * FROM Employees WHERE Salary > (SELECT AVG(Salary) FROM Employees);<br><br>",
  "quesType": "fill",
  "ans": "Above average earners"
},
{
  "ques": "Output for SELECT * FROM Orders WHERE ID NOT IN (SELECT OrderID FROM Payments);<br><br>",
  "quesType": "fill",
  "ans": "Unpaid orders"
}
,
{
  "ques": "Which function returns dense ranking?<br><br>",
  "quesType": "mcq",
  "op1": "RANK()",
  "op2": "DENSE_RANK()",
  "op3": "ROW_NUMBER()",
  "op4": "LEVEL()",
  "ans": "DENSE_RANK()"
},
{
  "ques": "Which operator performs intersection?<br><br>",
  "quesType": "mcq",
  "op1": "INTERSECT",
  "op2": "UNION",
  "op3": "EXCEPT",
  "op4": "JOIN",
  "ans": "INTERSECT"
},
{
  "ques": "Which constraint prevents nulls?<br><br>",
  "quesType": "mcq",
  "op1": "PRIMARY KEY",
  "op2": "FOREIGN KEY",
  "op3": "NOT NULL",
  "op4": "CHECK",
  "ans": "NOT NULL"
},
{
  "ques": "Which keyword disables auto commit?<br><br>",
  "quesType": "mcq",
  "op1": "AUTOCOMMIT OFF",
  "op2": "SET AUTOCOMMIT 0",
  "op3": "SET TRANSACTION",
  "op4": "TRANSACTION OFF",
  "ans": "SET AUTOCOMMIT 0"
},
{
  "ques": "Which command grants permission?<br><br>",
  "quesType": "mcq",
  "op1": "GRANT",
  "op2": "ALLOW",
  "op3": "PERMIT",
  "op4": "ACCESS",
  "ans": "GRANT"
},
{
  "ques": "Which statement copies table structure?<br><br>",
  "quesType": "mcq",
  "op1": "COPY TABLE",
  "op2": "DUPLICATE TABLE",
  "op3": "CREATE TABLE AS",
  "op4": "NEW TABLE",
  "ans": "CREATE TABLE AS"
},
{
  "ques": "Which function converts to lowercase?<br><br>",
  "quesType": "mcq",
  "op1": "LOWER()",
  "op2": "LCASE()",
  "op3": "TOLOWER()",
  "op4": "DOWNCASE()",
  "ans": "LOWER()"
},
{
  "ques": "Which clause combines rows from two queries?<br><br>",
  "quesType": "mcq",
  "op1": "JOIN",
  "op2": "UNION ALL",
  "op3": "INTERSECT",
  "op4": "MERGE",
  "ans": "UNION ALL"
},
{
  "ques": "Which constraint checks condition?<br><br>",
  "quesType": "mcq",
  "op1": "UNIQUE",
  "op2": "CHECK",
  "op3": "FOREIGN KEY",
  "op4": "INDEX",
  "ans": "CHECK"
},
{
  "ques": "Which isolation avoids dirty reads?<br><br>",
  "quesType": "mcq",
  "op1": "READ UNCOMMITTED",
  "op2": "READ COMMITTED",
  "op3": "SERIALIZABLE",
  "op4": "SNAPSHOT",
  "ans": "READ COMMITTED"
},
{
  "ques": "Which statement modifies multiple rows?<br><br>",
  "quesType": "mcq",
  "op1": "UPDATE",
  "op2": "MERGE",
  "op3": "ALTER",
  "op4": "CHANGE",
  "ans": "UPDATE"
},
{
  "ques": "Which returns difference in days?<br><br>",
  "quesType": "mcq",
  "op1": "DATEDIFF()",
  "op2": "DAYS()",
  "op3": "DAYDIFF()",
  "op4": "GETDAYS()",
  "ans": "DATEDIFF()"
},
{
  "ques": "Which function trims spaces?<br><br>",
  "quesType": "mcq",
  "op1": "CUT()",
  "op2": "REMOVE()",
  "op3": "TRIM()",
  "op4": "STRIP()",
  "ans": "TRIM()"
},
{
  "ques": "Which keyword sets default value?<br><br>",
  "quesType": "mcq",
  "op1": "SET DEFAULT",
  "op2": "DEFAULT",
  "op3": "VALUE",
  "op4": "DEF",
  "ans": "DEFAULT"
},
{
  "ques": "Which operator returns rows from left only?<br><br>",
  "quesType": "mcq",
  "op1": "LEFT JOIN",
  "op2": "RIGHT JOIN",
  "op3": "INNER JOIN",
  "op4": "OUTER JOIN",
  "ans": "LEFT JOIN"
},
{
  "ques": "Which removes duplicates?<br><br>",
  "quesType": "mcq",
  "op1": "UNIQUE",
  "op2": "DISTINCT",
  "op3": "FILTER",
  "op4": "CLEAN",
  "ans": "DISTINCT"
},
{
  "ques": "Which function converts to uppercase?<br><br>",
  "quesType": "mcq",
  "op1": "UPPER()",
  "op2": "UCASE()",
  "op3": "TOUPPER()",
  "op4": "UPCASE()",
  "ans": "UPPER()"
},
{
  "ques": "Which statement creates new schema?<br><br>",
  "quesType": "mcq",
  "op1": "NEW SCHEMA",
  "op2": "CREATE SCHEMA",
  "op3": "MAKE SCHEMA",
  "op4": "SET SCHEMA",
  "ans": "CREATE SCHEMA"
},
{
  "ques": "Which keyword limits output rows?<br><br>",
  "quesType": "mcq",
  "op1": "LIMIT",
  "op2": "MAX",
  "op3": "TOP",
  "op4": "RANGE",
  "ans": "LIMIT"
},
{
  "ques": "Which function finds length of string?<br><br>",
  "quesType": "mcq",
  "op1": "LEN()",
  "op2": "LENGTH()",
  "op3": "STRLEN()",
  "op4": "SIZE()",
  "ans": "LENGTH()"
}
,
{
  "ques": "Dense rank function?<br><br>",
  "quesType": "fill",
  "ans": "DENSE_RANK()"
},
{
  "ques": "Set intersection operator?<br><br>",
  "quesType": "fill",
  "ans": "INTERSECT"
},
{
  "ques": "Prevents nulls?<br><br>",
  "quesType": "fill",
  "ans": "NOT NULL"
},
{
  "ques": "Disable autocommit?<br><br>",
  "quesType": "fill",
  "ans": "SET AUTOCOMMIT 0"
},
{
  "ques": "Grant permission command?<br><br>",
  "quesType": "fill",
  "ans": "GRANT"
},
{
  "ques": "Copy table structure?<br><br>",
  "quesType": "fill",
  "ans": "CREATE TABLE AS"
},
{
  "ques": "Lowercase function?<br><br>",
  "quesType": "fill",
  "ans": "LOWER()"
},
{
  "ques": "Combine rows queries?<br><br>",
  "quesType": "fill",
  "ans": "UNION ALL"
},
{
  "ques": "Check condition constraint?<br><br>",
  "quesType": "fill",
  "ans": "CHECK"
},
{
  "ques": "Avoid dirty reads level?<br><br>",
  "quesType": "fill",
  "ans": "READ COMMITTED"
},
{
  "ques": "Modify multiple rows?<br><br>",
  "quesType": "fill",
  "ans": "UPDATE"
},
{
  "ques": "Difference in days function?<br><br>",
  "quesType": "fill",
  "ans": "DATEDIFF()"
},
{
  "ques": "Trim spaces function?<br><br>",
  "quesType": "fill",
  "ans": "TRIM()"
},
{
  "ques": "Set default value keyword?<br><br>",
  "quesType": "fill",
  "ans": "DEFAULT"
},
{
  "ques": "Left only rows operator?<br><br>",
  "quesType": "fill",
  "ans": "LEFT JOIN"
},
{
  "ques": "Remove duplicates?<br><br>",
  "quesType": "fill",
  "ans": "DISTINCT"
},
{
  "ques": "Uppercase function?<br><br>",
  "quesType": "fill",
  "ans": "UPPER()"
},
{
  "ques": "Create schema statement?<br><br>",
  "quesType": "fill",
  "ans": "CREATE SCHEMA"
},
{
  "ques": "Limit output rows?<br><br>",
  "quesType": "fill",
  "ans": "LIMIT"
},
{
  "ques": "String length function?<br><br>",
  "quesType": "fill",
  "ans": "LENGTH()"
}
,
{
  "ques": "Output of: SELECT department, MAX(salary) FROM employees GROUP BY department HAVING MAX(salary) < 50000;<br><br>",
  "quesType": "mcq",
  "op1": "Departments with max salary above 50k",
  "op2": "Departments with max salary below 50k",
  "op3": "All employees",
  "op4": "All departments",
  "ans": "Departments with max salary below 50k"
},
{
  "ques": "Output of: SELECT name FROM employees WHERE salary > (SELECT MAX(salary) FROM employees WHERE department = 'HR');<br><br>",
  "quesType": "mcq",
  "op1": "Employees earning more than any HR",
  "op2": "All employees",
  "op3": "HR employees only",
  "op4": "Employees earning less than HR",
  "ans": "Employees earning more than any HR"
},
{
  "ques": "SELECT department FROM employees GROUP BY department HAVING COUNT(*) BETWEEN 2 AND 5;<br><br>",
  "quesType": "mcq",
  "op1": "Departments with less than 2",
  "op2": "Departments with 2 to 5 employees",
  "op3": "All departments",
  "op4": "Departments with more than 5",
  "ans": "Departments with 2 to 5 employees"
},
{
  "ques": "Output: SELECT COUNT(*) FROM employees WHERE salary IS NULL;<br><br>",
  "quesType": "mcq",
  "op1": "Employees with salary",
  "op2": "Employees with no salary",
  "op3": "Total employees",
  "op4": "Employees with max salary",
  "ans": "Employees with no salary"
},
{
  "ques": "SELECT COUNT(*) FROM employees WHERE department IS NOT NULL;<br><br>",
  "quesType": "mcq",
  "op1": "Employees with department",
  "op2": "Employees with no department",
  "op3": "Total employees",
  "op4": "All departments",
  "ans": "Employees with department"
},
{
  "ques": "Output: SELECT name FROM students WHERE marks = (SELECT MIN(marks) FROM students);<br><br>",
  "quesType": "mcq",
  "op1": "Students with highest marks",
  "op2": "Students with average marks",
  "op3": "Students with lowest marks",
  "op4": "All students",
  "ans": "Students with lowest marks"
},
{
  "ques": "SELECT COUNT(DISTINCT role) FROM employees;<br><br>",
  "quesType": "mcq",
  "op1": "Total roles",
  "op2": "Total employees",
  "op3": "Total salaries",
  "op4": "Total departments",
  "ans": "Total roles"
},
{
  "ques": "Output: SELECT department FROM employees GROUP BY department HAVING SUM(salary) < 200000;<br><br>",
  "quesType": "mcq",
  "op1": "Departments with sum salary above 200k",
  "op2": "Departments with sum salary below 200k",
  "op3": "All departments",
  "op4": "No departments",
  "ans": "Departments with sum salary below 200k"
},
{
  "ques": "Output: SELECT name FROM employees WHERE department = 'Sales' AND salary > 70000;<br><br>",
  "quesType": "mcq",
  "op1": "All Sales employees",
  "op2": "Sales employees earning above 70k",
  "op3": "Sales employees earning below 70k",
  "op4": "All employees",
  "ans": "Sales employees earning above 70k"
},
{
  "ques": "Output of: SELECT COUNT(*) FROM orders WHERE shipped_date IS NULL;<br><br>",
  "quesType": "mcq",
  "op1": "All shipped orders",
  "op2": "Pending shipments",
  "op3": "Cancelled orders",
  "op4": "Orders with delivered date",
  "ans": "Pending shipments"
},
{
  "ques": "SELECT AVG(salary) FROM employees WHERE department = 'Tech';<br><br>",
  "quesType": "mcq",
  "op1": "Avg salary all",
  "op2": "Avg salary HR",
  "op3": "Avg salary Tech",
  "op4": "Total salary",
  "ans": "Avg salary Tech"
},
{
  "ques": "Output of: SELECT department FROM employees WHERE salary > 50000 GROUP BY department;<br><br>",
  "quesType": "mcq",
  "op1": "Departments with low salary",
  "op2": "Departments with salary above 50k",
  "op3": "All employees",
  "op4": "All departments",
  "ans": "Departments with salary above 50k"
},
{
  "ques": "SELECT name FROM students WHERE id NOT IN (SELECT student_id FROM exams);<br><br>",
  "quesType": "mcq",
  "op1": "All students",
  "op2": "Students who wrote exams",
  "op3": "Students with no exams",
  "op4": "Students with high marks",
  "ans": "Students with no exams"
},
{
  "ques": "SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) >= 10;<br><br>",
  "quesType": "mcq",
  "op1": "Departments with fewer than 10",
  "op2": "Departments with 10 or more",
  "op3": "All departments",
  "op4": "No departments",
  "ans": "Departments with 10 or more"
},
{
  "ques": "Output of: SELECT COUNT(*) FROM products WHERE discontinued = 1;<br><br>",
  "quesType": "mcq",
  "op1": "Active products",
  "op2": "Out-of-stock",
  "op3": "Discontinued products",
  "op4": "New products",
  "ans": "Discontinued products"
},
{
  "ques": "Output: SELECT name FROM students WHERE age >= 18;<br><br>",
  "quesType": "mcq",
  "op1": "All students",
  "op2": "Students under 18",
  "op3": "Students 18 and above",
  "op4": "All ages",
  "ans": "Students 18 and above"
},
{
  "ques": "Output of: SELECT MAX(age) FROM students;<br><br>",
  "quesType": "mcq",
  "op1": "Minimum age",
  "op2": "Average age",
  "op3": "Oldest student",
  "op4": "Sum age",
  "ans": "Oldest student"
},
{
  "ques": "SELECT name FROM employees WHERE salary BETWEEN 60000 AND 90000;<br><br>",
  "quesType": "mcq",
  "op1": "All employees",
  "op2": "Employees below 60k",
  "op3": "Employees between 60k-90k",
  "op4": "Employees above 90k",
  "ans": "Employees between 60k-90k"
},
{
  "ques": "Output: SELECT COUNT(*) FROM users WHERE email IS NULL;<br><br>",
  "quesType": "mcq",
  "op1": "Users with emails",
  "op2": "Users with no email",
  "op3": "All users",
  "op4": "Active users",
  "ans": "Users with no email"
},
{
  "ques": "SELECT department FROM employees WHERE salary IN (40000, 50000);<br><br>",
  "quesType": "mcq",
  "op1": "Departments with salary not 40k, 50k",
  "op2": "Departments with salary 40k, 50k",
  "op3": "All departments",
  "op4": "All employees",
  "ans": "Departments with salary 40k, 50k"
}
,
{
  "ques": "Output: SELECT Department FROM Employees WHERE Salary > (SELECT AVG(Salary) FROM Employees);<br><br>",
  "quesType": "mcq",
  "op1": "Departments with lowest salaries",
  "op2": "Departments where someone earns above avg",
  "op3": "All departments",
  "op4": "Avg salary only",
  "ans": "Departments where someone earns above avg"
},
{
  "ques": "Output: SELECT Name FROM Products WHERE Price > ALL (SELECT Price FROM Products WHERE Category = 'Books');<br><br>",
  "quesType": "mcq",
  "op1": "Products cheaper than books",
  "op2": "Products same price as books",
  "op3": "Products costlier than any book",
  "op4": "Books only",
  "ans": "Products costlier than any book"
},
{
  "ques": "Output: SELECT Name FROM Students WHERE Marks = (SELECT MIN(Marks) FROM Students);<br><br>",
  "quesType": "mcq",
  "op1": "Students with lowest marks",
  "op2": "Students with highest marks",
  "op3": "All students",
  "op4": "Marks average",
  "ans": "Students with lowest marks"
},
{
  "ques": "Output: SELECT Department, SUM(Salary) FROM Employees GROUP BY Department HAVING SUM(Salary) > 200000;<br><br>",
  "quesType": "mcq",
  "op1": "Departments below 200k",
  "op2": "All departments",
  "op3": "Departments above 200k total salary",
  "op4": "Individual salaries",
  "ans": "Departments above 200k total salary"
},
{
  "ques": "Output: SELECT CustomerID FROM Orders GROUP BY CustomerID HAVING SUM(Amount) < 500;<br><br>",
  "quesType": "mcq",
  "op1": "Big spenders",
  "op2": "Low spenders",
  "op3": "All customers",
  "op4": "Order total",
  "ans": "Low spenders"
},
{
  "ques": "Output: SELECT Name FROM Employees WHERE ManagerID IS NOT NULL;<br><br>",
  "quesType": "mcq",
  "op1": "Managers only",
  "op2": "Non-managers",
  "op3": "All employees",
  "op4": "ID list",
  "ans": "Non-managers"
},
{
  "ques": "Output: SELECT * FROM Payments WHERE Amount NOT BETWEEN 100 AND 500;<br><br>",
  "quesType": "mcq",
  "op1": "Payments in 100–500",
  "op2": "Payments below 100 or above 500",
  "op3": "All payments",
  "op4": "Payments equal to 100",
  "ans": "Payments below 100 or above 500"
},
{
  "ques": "Output: SELECT Name FROM Employees WHERE Name LIKE '%son';<br><br>",
  "quesType": "mcq",
  "op1": "Names starting with son",
  "op2": "Names containing son",
  "op3": "Names ending with son",
  "op4": "All names",
  "ans": "Names ending with son"
},
{
  "ques": "Output: SELECT * FROM Orders WHERE CustomerID IS NULL;<br><br>",
  "quesType": "mcq",
  "op1": "Orders with customer",
  "op2": "Orders with no customer ID",
  "op3": "All orders",
  "op4": "Customer list",
  "ans": "Orders with no customer ID"
},
{
  "ques": "Output: SELECT ProductID, COUNT(*) FROM OrderDetails GROUP BY ProductID HAVING COUNT(*) = 1;<br><br>",
  "quesType": "mcq",
  "op1": "Products never ordered",
  "op2": "Products ordered exactly once",
  "op3": "Popular products",
  "op4": "All products",
  "ans": "Products ordered exactly once"
},
{
  "ques": "Output: SELECT * FROM Employees e JOIN Departments d ON e.DeptID = d.ID WHERE d.Name = 'IT';<br><br>",
  "quesType": "mcq",
  "op1": "All departments",
  "op2": "Employees in IT dept",
  "op3": "IT dept only",
  "op4": "No match",
  "ans": "Employees in IT dept"
},
{
  "ques": "Output: SELECT * FROM Products WHERE ID NOT IN (SELECT ProductID FROM OrderDetails);<br><br>",
  "quesType": "mcq",
  "op1": "Products never ordered",
  "op2": "Products always ordered",
  "op3": "All products",
  "op4": "Orders only",
  "ans": "Products never ordered"
},
{
  "ques": "Output: SELECT AVG(Amount) OVER () FROM Payments;<br><br>",
  "quesType": "mcq",
  "op1": "Average for each row",
  "op2": "Sum for each row",
  "op3": "Max for each row",
  "op4": "No output",
  "ans": "Average for each row"
},
{
  "ques": "Output: SELECT Department, RANK() OVER (ORDER BY AVG(Salary) DESC) FROM Employees GROUP BY Department;<br><br>",
  "quesType": "mcq",
  "op1": "Rank by employee count",
  "op2": "Rank by avg salary",
  "op3": "No ranking",
  "op4": "Total salary",
  "ans": "Rank by avg salary"
},
{
  "ques": "Output: SELECT Name FROM Employees WHERE Salary = (SELECT MIN(Salary) FROM Employees WHERE Department = 'HR');<br><br>",
  "quesType": "mcq",
  "op1": "Lowest salary in HR",
  "op2": "Lowest salary overall",
  "op3": "Highest salary HR",
  "op4": "All HR salaries",
  "ans": "Lowest salary in HR"
},
{
  "ques": "Output: SELECT * FROM Orders WHERE Date BETWEEN '2024-05-01' AND '2024-05-31';<br><br>",
  "quesType": "mcq",
  "op1": "All orders",
  "op2": "May 2024 orders",
  "op3": "Future orders",
  "op4": "Old orders",
  "ans": "May 2024 orders"
},
{
  "ques": "Output: SELECT Name FROM Users WHERE Username IS NOT NULL;<br><br>",
  "quesType": "mcq",
  "op1": "Users with no username",
  "op2": "All users",
  "op3": "Users with username",
  "op4": "Username list",
  "ans": "Users with username"
},
{
  "ques": "Output: SELECT Country, COUNT(*) FROM Customers GROUP BY Country HAVING COUNT(*) > 3;<br><br>",
  "quesType": "mcq",
  "op1": "Countries with < 3 customers",
  "op2": "All countries",
  "op3": "Countries with > 3 customers",
  "op4": "One customer",
  "ans": "Countries with > 3 customers"
},
{
  "ques": "Output: SELECT * FROM Salaries WHERE EmpID IN (SELECT ID FROM Employees WHERE Department = 'Marketing');<br><br>",
  "quesType": "mcq",
  "op1": "Salaries for all",
  "op2": "Salaries for Marketing only",
  "op3": "Salaries for HR",
  "op4": "No salaries",
  "ans": "Salaries for Marketing only"
},
{
  "ques": "Output: SELECT * FROM Products WHERE Price < (SELECT AVG(Price) FROM Products);<br><br>",
  "quesType": "mcq",
  "op1": "Products above avg price",
  "op2": "Products below avg price",
  "op3": "All products",
  "op4": "Max priced products",
  "ans": "Products below avg price"
},
{
  "ques": "Group by max salary below 50k?<br><br>",
  "quesType": "fill",
  "ans": "HAVING MAX(salary) < 50000"
},
{
  "ques": "More than HR max salary?<br><br>",
  "quesType": "fill",
  "ans": "salary > (SELECT MAX(salary) FROM employees WHERE department = 'HR')"
},
{
  "ques": "Groups count between 2-5?<br><br>",
  "quesType": "fill",
  "ans": "HAVING COUNT(*) BETWEEN 2 AND 5"
},
{
  "ques": "Salary is null check?<br><br>",
  "quesType": "fill",
  "ans": "salary IS NULL"
},
{
  "ques": "Department not null?<br><br>",
  "quesType": "fill",
  "ans": "department IS NOT NULL"
},
{
  "ques": "Lowest marks student?<br><br>",
  "quesType": "fill",
  "ans": "marks = (SELECT MIN(marks) FROM students)"
},
{
  "ques": "Count distinct role?<br><br>",
  "quesType": "fill",
  "ans": "COUNT(DISTINCT role)"
},
{
  "ques": "Groups salary sum below 200k?<br><br>",
  "quesType": "fill",
  "ans": "HAVING SUM(salary) < 200000"
},
{
  "ques": "Sales earning >70k?<br><br>",
  "quesType": "fill",
  "ans": "department = 'Sales' AND salary > 70000"
},
{
  "ques": "Shipped date null check?<br><br>",
  "quesType": "fill",
  "ans": "shipped_date IS NULL"
},
{
  "ques": "Tech avg salary?<br><br>",
  "quesType": "fill",
  "ans": "AVG(salary)"
},
{
  "ques": "Group salary above 50k?<br><br>",
  "quesType": "fill",
  "ans": "salary > 50000"
},
{
  "ques": "Students with no exams?<br><br>",
  "quesType": "fill",
  "ans": "id NOT IN (SELECT student_id FROM exams)"
},
{
  "ques": "Groups with 10 or more?<br><br>",
  "quesType": "fill",
  "ans": "HAVING COUNT(*) >= 10"
},
{
  "ques": "Discontinued check?<br><br>",
  "quesType": "fill",
  "ans": "discontinued = 1"
},
{
  "ques": "Students 18+?<br><br>",
  "quesType": "fill",
  "ans": "age >= 18"
},
{
  "ques": "Oldest student?<br><br>",
  "quesType": "fill",
  "ans": "MAX(age)"
},
{
  "ques": "Salary 60k to 90k?<br><br>",
  "quesType": "fill",
  "ans": "BETWEEN 60000 AND 90000"
},
{
  "ques": "Email null check?<br><br>",
  "quesType": "fill",
  "ans": "email IS NULL"
},
{
  "ques": "Salary in 40k, 50k?<br><br>",
  "quesType": "fill",
  "ans": "salary IN (40000, 50000)"
}
,
{
  "ques": "Output for SELECT * FROM Orders WHERE Amount > 1000;<br><br>",
  "quesType": "fill",
  "ans": "Orders above 1000"
},
{
  "ques": "Output for SELECT MIN(Salary) FROM Employees;<br><br>",
  "quesType": "fill",
  "ans": "Lowest salary"
},
{
  "ques": "Output for SELECT * FROM Payments WHERE Status = 'Failed';<br><br>",
  "quesType": "fill",
  "ans": "Failed payments"
},
{
  "ques": "Output for SELECT DISTINCT Department FROM Employees;<br><br>",
  "quesType": "fill",
  "ans": "Unique departments"
},
{
  "ques": "Output for SELECT COUNT(*) FROM Orders WHERE Delivered = 0;<br><br>",
  "quesType": "fill",
  "ans": "Undelivered orders count"
},
{
  "ques": "Output for SELECT * FROM Products WHERE Category = 'Gadgets';<br><br>",
  "quesType": "fill",
  "ans": "Gadget products"
},
{
  "ques": "Output for SELECT MAX(Amount) FROM Payments;<br><br>",
  "quesType": "fill",
  "ans": "Highest payment"
},
{
  "ques": "Output for SELECT SUM(Amount) FROM Orders;<br><br>",
  "quesType": "fill",
  "ans": "Total orders amount"
},
{
  "ques": "Output for SELECT * FROM Employees WHERE Age < 30;<br><br>",
  "quesType": "fill",
  "ans": "Employees under 30"
},
{
  "ques": "Output for SELECT * FROM Orders WHERE Date < '2024-01-01';<br><br>",
  "quesType": "fill",
  "ans": "Orders before 2024"
},
{
  "ques": "Output for SELECT * FROM Users WHERE Role = 'Admin';<br><br>",
  "quesType": "fill",
  "ans": "Admins"
},
{
  "ques": "Output for SELECT AVG(Amount) FROM Payments;<br><br>",
  "quesType": "fill",
  "ans": "Average payment"
},
{
  "ques": "Output for SELECT * FROM Orders WHERE CustomerID IS NOT NULL;<br><br>",
  "quesType": "fill",
  "ans": "Orders with customer"
},
{
  "ques": "Output for SELECT * FROM Products WHERE Stock > 50;<br><br>",
  "quesType": "fill",
  "ans": "Products stocked over 50"
},
{
  "ques": "Output for SELECT COUNT(*) FROM Customers WHERE Country = 'India';<br><br>",
  "quesType": "fill",
  "ans": "Customer count in India"
},
{
  "ques": "Output for SELECT MAX(Age) FROM Users;<br><br>",
  "quesType": "fill",
  "ans": "Oldest user age"
},
{
  "ques": "Output for SELECT * FROM Payments WHERE Method = 'Credit Card';<br><br>",
  "quesType": "fill",
  "ans": "Credit Card payments"
},
{
  "ques": "Output for SELECT Name FROM Employees WHERE ID NOT IN (SELECT EmpID FROM Salaries);<br><br>",
  "quesType": "fill",
  "ans": "Employees without salary record"
},
{
  "ques": "Output for SELECT DISTINCT Year FROM Orders;<br><br>",
  "quesType": "fill",
  "ans": "Order years"
},
{
  "ques": "Output for SELECT * FROM Orders WHERE ID IN (SELECT OrderID FROM Payments);<br><br>",
  "quesType": "fill",
  "ans": "Paid orders"
}
,
{
  "ques": "Which function returns the current user?<br><br>",
  "quesType": "mcq",
  "op1": "USER()",
  "op2": "CURRENT_USER()",
  "op3": "SESSION_USER()",
  "op4": "LOGIN_USER()",
  "ans": "CURRENT_USER()"
},
{
  "ques": "Which keyword rolls back transaction?<br><br>",
  "quesType": "mcq",
  "op1": "REVERT",
  "op2": "ROLLBACK",
  "op3": "UNDO",
  "op4": "CANCEL",
  "ans": "ROLLBACK"
},
{
  "ques": "Which function returns null if condition fails?<br><br>",
  "quesType": "mcq",
  "op1": "NULLIF()",
  "op2": "ISNULL()",
  "op3": "COALESCE()",
  "op4": "NVL()",
  "ans": "NULLIF()"
},
{
  "ques": "Which keyword locks rows?<br><br>",
  "quesType": "mcq",
  "op1": "LOCK",
  "op2": "HOLD",
  "op3": "FOR UPDATE",
  "op4": "ROWLOCK",
  "ans": "FOR UPDATE"
},
{
  "ques": "Which index type speeds up full-text searches?<br><br>",
  "quesType": "mcq",
  "op1": "BTREE",
  "op2": "FULLTEXT",
  "op3": "HASH",
  "op4": "CLUSTERED",
  "ans": "FULLTEXT"
},
{
  "ques": "Which operator matches pattern?<br><br>",
  "quesType": "mcq",
  "op1": "LIKE",
  "op2": "REGEXP",
  "op3": "MATCH",
  "op4": "SEARCH",
  "ans": "LIKE"
},
{
  "ques": "Which function returns position of substring?<br><br>",
  "quesType": "mcq",
  "op1": "POSITION()",
  "op2": "INDEX()",
  "op3": "LOCATE()",
  "op4": "FIND()",
  "ans": "POSITION()"
},
{
  "ques": "Which clause removes duplicates in aggregate?<br><br>",
  "quesType": "mcq",
  "op1": "UNIQUE",
  "op2": "ALL",
  "op3": "DISTINCT",
  "op4": "EXCEPT",
  "ans": "DISTINCT"
},
{
  "ques": "Which operator combines conditions?<br><br>",
  "quesType": "mcq",
  "op1": "OR",
  "op2": "AND",
  "op3": "WITH",
  "op4": "MERGE",
  "ans": "AND"
},
{
  "ques": "Which constraint creates parent-child relation?<br><br>",
  "quesType": "mcq",
  "op1": "PRIMARY KEY",
  "op2": "UNIQUE",
  "op3": "FOREIGN KEY",
  "op4": "CHECK",
  "ans": "FOREIGN KEY"
},
{
  "ques": "Which function returns system date?<br><br>",
  "quesType": "mcq",
  "op1": "GETDATE()",
  "op2": "SYSDATE()",
  "op3": "CURRENT_DATE()",
  "op4": "TODAY()",
  "ans": "CURRENT_DATE()"
},
{
  "ques": "Which keyword makes unique values?<br><br>",
  "quesType": "mcq",
  "op1": "KEY",
  "op2": "UNIQUE",
  "op3": "INDEX",
  "op4": "DISTINCT",
  "ans": "UNIQUE"
},
{
  "ques": "Which statement alters table structure?<br><br>",
  "quesType": "mcq",
  "op1": "CHANGE",
  "op2": "MODIFY",
  "op3": "ALTER",
  "op4": "UPDATE",
  "ans": "ALTER"
},
{
  "ques": "Which clause returns top records?<br><br>",
  "quesType": "mcq",
  "op1": "TOP",
  "op2": "LIMIT",
  "op3": "FETCH",
  "op4": "ROWNUM",
  "ans": "LIMIT"
},
{
  "ques": "Which command shows database list?<br><br>",
  "quesType": "mcq",
  "op1": "SHOW DATABASES",
  "op2": "DISPLAY DATABASES",
  "op3": "LIST DATABASES",
  "op4": "GET DATABASES",
  "ans": "SHOW DATABASES"
},
{
  "ques": "Which operator tests range?<br><br>",
  "quesType": "mcq",
  "op1": "RANGE",
  "op2": "BETWEEN",
  "op3": "IN",
  "op4": "LIKE",
  "ans": "BETWEEN"
},
{
  "ques": "Which keyword removes duplicate rows?<br><br>",
  "quesType": "mcq",
  "op1": "UNIQUE",
  "op2": "FILTER",
  "op3": "DISTINCT",
  "op4": "EXCLUDE",
  "ans": "DISTINCT"
},
{
  "ques": "Which command removes all rows?<br><br>",
  "quesType": "mcq",
  "op1": "DROP",
  "op2": "DELETE",
  "op3": "REMOVE",
  "op4": "TRUNCATE",
  "ans": "TRUNCATE"
},
{
  "ques": "Which function returns maximum value?<br><br>",
  "quesType": "mcq",
  "op1": "MAX()",
  "op2": "HIGHEST()",
  "op3": "TOP()",
  "op4": "BIGGEST()",
  "ans": "MAX()"
},
{
  "ques": "Which operator tests membership?<br><br>",
  "quesType": "mcq",
  "op1": "IN",
  "op2": "BETWEEN",
  "op3": "LIKE",
  "op4": "EXISTS",
  "ans": "IN"
}
,
{
  "ques": "Current user function?<br><br>",
  "quesType": "fill",
  "ans": "CURRENT_USER()"
},
{
  "ques": "Rollback transaction?<br><br>",
  "quesType": "fill",
  "ans": "ROLLBACK"
},
{
  "ques": "Null if equal?<br><br>",
  "quesType": "fill",
  "ans": "NULLIF()"
},
{
  "ques": "Row lock keyword?<br><br>",
  "quesType": "fill",
  "ans": "FOR UPDATE"
},
{
  "ques": "Full text index type?<br><br>",
  "quesType": "fill",
  "ans": "FULLTEXT"
},
{
  "ques": "Pattern match operator?<br><br>",
  "quesType": "fill",
  "ans": "LIKE"
},
{
  "ques": "Substring position function?<br><br>",
  "quesType": "fill",
  "ans": "POSITION()"
},
{
  "ques": "Remove duplicates in aggregate?<br><br>",
  "quesType": "fill",
  "ans": "DISTINCT"
},
{
  "ques": "Combine conditions?<br><br>",
  "quesType": "fill",
  "ans": "AND"
},
{
  "ques": "Parent-child relation?<br><br>",
  "quesType": "fill",
  "ans": "FOREIGN KEY"
},
{
  "ques": "System date function?<br><br>",
  "quesType": "fill",
  "ans": "CURRENT_DATE()"
},
{
  "ques": "Make unique values?<br><br>",
  "quesType": "fill",
  "ans": "UNIQUE"
},
{
  "ques": "Alter table structure?<br><br>",
  "quesType": "fill",
  "ans": "ALTER"
},
{
  "ques": "Top records clause?<br><br>",
  "quesType": "fill",
  "ans": "LIMIT"
},
{
  "ques": "Show databases command?<br><br>",
  "quesType": "fill",
  "ans": "SHOW DATABASES"
},
{
  "ques": "Range test operator?<br><br>",
  "quesType": "fill",
  "ans": "BETWEEN"
},
{
  "ques": "Remove duplicate rows?<br><br>",
  "quesType": "fill",
  "ans": "DISTINCT"
},
{
  "ques": "Remove all rows?<br><br>",
  "quesType": "fill",
  "ans": "TRUNCATE"
},
{
  "ques": "Maximum value function?<br><br>",
  "quesType": "fill",
  "ans": "MAX()"
},
{
  "ques": "Membership test operator?<br><br>",
  "quesType": "fill",
  "ans": "IN"
}
,
{
  "ques": "Output: SELECT Name FROM Employees WHERE Salary > (SELECT MAX(Salary) FROM Employees WHERE Department = 'HR');<br><br>",
  "quesType": "mcq",
  "op1": "HR employees only",
  "op2": "All employees",
  "op3": "Employees earning above HR max",
  "op4": "Employees earning below HR max",
  "ans": "Employees earning above HR max"
},
{
  "ques": "Output: SELECT Name FROM Products WHERE Price = (SELECT MAX(Price) FROM Products WHERE Category = 'Electronics');<br><br>",
  "quesType": "mcq",
  "op1": "Cheapest Electronics",
  "op2": "Most expensive Electronics",
  "op3": "All Electronics",
  "op4": "Non-Electronics",
  "ans": "Most expensive Electronics"
},
{
  "ques": "Output: SELECT CustomerID FROM Orders WHERE Amount = (SELECT MAX(Amount) FROM Orders);<br><br>",
  "quesType": "mcq",
  "op1": "Lowest order",
  "op2": "All customers",
  "op3": "Customer with highest order",
  "op4": "Orders with zero amount",
  "ans": "Customer with highest order"
},
{
  "ques": "Output: SELECT Name FROM Employees WHERE Department IN (SELECT Name FROM Departments WHERE Location = 'NY');<br><br>",
  "quesType": "mcq",
  "op1": "Employees in NY depts",
  "op2": "All employees",
  "op3": "NY depts only",
  "op4": "No output",
  "ans": "Employees in NY depts"
},
{
  "ques": "Output: SELECT * FROM Orders WHERE CustomerID NOT IN (SELECT ID FROM Customers);<br><br>",
  "quesType": "mcq",
  "op1": "Orders by valid customers",
  "op2": "Orders with missing customer",
  "op3": "All orders",
  "op4": "Customer list only",
  "ans": "Orders with missing customer"
},
{
  "ques": "Output: SELECT * FROM Employees WHERE EXISTS (SELECT * FROM Departments WHERE Departments.ID = Employees.DeptID AND Departments.Name = 'Finance');<br><br>",
  "quesType": "mcq",
  "op1": "All depts",
  "op2": "Finance dept employees",
  "op3": "Non-Finance employees",
  "op4": "Dept only",
  "ans": "Finance dept employees"
},
{
  "ques": "Output: SELECT * FROM Payments WHERE Amount BETWEEN 500 AND 1000;<br><br>",
  "quesType": "mcq",
  "op1": "Payments under 500",
  "op2": "Payments over 1000",
  "op3": "Payments between 500–1000",
  "op4": "All payments",
  "ans": "Payments between 500–1000"
},
{
  "ques": "Output: SELECT Name FROM Users WHERE Username LIKE '__a%';<br><br>",
  "quesType": "mcq",
  "op1": "Names starting with a",
  "op2": "Names ending with a",
  "op3": "Names with third letter a",
  "op4": "Names with a",
  "ans": "Names with third letter a"
},
{
  "ques": "Output: SELECT * FROM Orders WHERE Date >= '2024-06-01';<br><br>",
  "quesType": "mcq",
  "op1": "Orders before June",
  "op2": "Orders from June onwards",
  "op3": "All orders",
  "op4": "Future orders only",
  "ans": "Orders from June onwards"
},
{
  "ques": "Output: SELECT name FROM employees WHERE salary = (SELECT MAX(salary) FROM employees);<br><br>",
  "quesType": "mcq",
  "op1": "Employee with min salary",
  "op2": "Employee with max salary",
  "op3": "All employees",
  "op4": "Employee with avg salary",
  "ans": "Employee with max salary"
},
{
  "ques": "SELECT department FROM employees GROUP BY department HAVING AVG(salary) > 80000;<br><br>",
  "quesType": "mcq",
  "op1": "Departments with avg salary below 80k",
  "op2": "Departments with avg salary above 80k",
  "op3": "All departments",
  "op4": "Departments with no salary",
  "ans": "Departments with avg salary above 80k"
},
{
  "ques": "Output: SELECT COUNT(*) FROM students WHERE marks = 100;<br><br>",
  "quesType": "mcq",
  "op1": "Students with 0 marks",
  "op2": "Students with full marks",
  "op3": "Total students",
  "op4": "Failed students",
  "ans": "Students with full marks"
},
{
  "ques": "Output: SELECT COUNT(*) FROM orders WHERE order_date >= '2024-01-01';<br><br>",
  "quesType": "mcq",
  "op1": "Orders before 2024",
  "op2": "Orders after 2024",
  "op3": "Orders from 2024 onwards",
  "op4": "All orders",
  "ans": "Orders from 2024 onwards"
},
{
  "ques": "Output: SELECT name FROM products WHERE price = (SELECT MIN(price) FROM products);<br><br>",
  "quesType": "mcq",
  "op1": "Most expensive product",
  "op2": "Average priced product",
  "op3": "Cheapest product",
  "op4": "All products",
  "ans": "Cheapest product"
},
{
  "ques": "SELECT role FROM employees GROUP BY role HAVING COUNT(*) > 1;<br><br>",
  "quesType": "mcq",
  "op1": "Roles with only 1 employee",
  "op2": "Roles with 2 or more employees",
  "op3": "All roles",
  "op4": "No roles",
  "ans": "Roles with 2 or more employees"
},
{
  "ques": "Output: SELECT name FROM customers WHERE city = 'New York';<br><br>",
  "quesType": "mcq",
  "op1": "All cities",
  "op2": "Customers not in NY",
  "op3": "Customers in New York",
  "op4": "All customers",
  "ans": "Customers in New York"
},
{
  "ques": "Output: SELECT SUM(amount) FROM orders WHERE status = 'Pending';<br><br>",
  "quesType": "mcq",
  "op1": "Sum of shipped orders",
  "op2": "Sum of all orders",
  "op3": "Sum of pending orders",
  "op4": "Cancelled orders",
  "ans": "Sum of pending orders"
},
{
  "ques": "SELECT name FROM employees WHERE salary >= ALL (SELECT salary FROM employees WHERE department = 'HR');<br><br>",
  "quesType": "mcq",
  "op1": "Employees earning less than HR",
  "op2": "Employees earning same as HR",
  "op3": "Employees earning equal or more than any HR",
  "op4": "All HR",
  "ans": "Employees earning equal or more than any HR"
},
{
  "ques": "SELECT COUNT(*) FROM students WHERE marks BETWEEN 50 AND 80;<br><br>",
  "quesType": "mcq",
  "op1": "Students below 50",
  "op2": "Students above 80",
  "op3": "Students with marks between 50 and 80",
  "op4": "All students",
  "ans": "Students with marks between 50 and 80"
},
{
  "ques": "Output: SELECT department FROM employees GROUP BY department HAVING COUNT(*) = 0;<br><br>",
  "quesType": "mcq",
  "op1": "Departments with no employees",
  "op2": "Departments with some employees",
  "op3": "All departments",
  "op4": "Departments with max employees",
  "ans": "Departments with no employees"
},
{
  "ques": "Output: SELECT name FROM products WHERE price > ALL (SELECT price FROM products WHERE category = 'Electronics');<br><br>",
  "quesType": "mcq",
  "op1": "Products cheaper than Electronics",
  "op2": "Products more expensive than any Electronics",
  "op3": "Electronics only",
  "op4": "All products",
  "ans": "Products more expensive than any Electronics"
},
{
  "ques": "Output: SELECT COUNT(*) FROM users WHERE active = 0;<br><br>",
  "quesType": "mcq",
  "op1": "Active users",
  "op2": "Inactive users",
  "op3": "All users",
  "op4": "New users",
  "ans": "Inactive users"
},
{
  "ques": "SELECT COUNT(*) FROM employees WHERE salary > 100000;<br><br>",
  "quesType": "mcq",
  "op1": "Employees with salary below 100k",
  "op2": "Employees with salary above 100k",
  "op3": "All employees",
  "op4": "Average salary",
  "ans": "Employees with salary above 100k"
},
{
  "ques": "Output: SELECT department FROM employees GROUP BY department HAVING SUM(salary) > 500000;<br><br>",
  "quesType": "mcq",
  "op1": "Departments with low total salary",
  "op2": "Departments with total salary above 500k",
  "op3": "All departments",
  "op4": "No departments",
  "ans": "Departments with total salary above 500k"
},
{
  "ques": "Output: SELECT name FROM orders WHERE status != 'Delivered';<br><br>",
  "quesType": "mcq",
  "op1": "Delivered orders",
  "op2": "Undelivered orders",
  "op3": "All orders",
  "op4": "Cancelled orders",
  "ans": "Undelivered orders"
},
{
  "ques": "SELECT COUNT(*) FROM logs WHERE error IS NOT NULL;<br><br>",
  "quesType": "mcq",
  "op1": "Logs with no error",
  "op2": "Logs with errors",
  "op3": "All logs",
  "op4": "Empty logs",
  "ans": "Logs with errors"
},
{
  "ques": "SELECT COUNT(*) FROM attendance WHERE present = 1;<br><br>",
  "quesType": "mcq",
  "op1": "Absent students",
  "op2": "Total students",
  "op3": "Present students",
  "op4": "No students",
  "ans": "Present students"
},
{
  "ques": "Output: SELECT email FROM users WHERE email LIKE '%@gmail.com';<br><br>",
  "quesType": "mcq",
  "op1": "Users with any email",
  "op2": "Users with no email",
  "op3": "Gmail users",
  "op4": "Yahoo users",
  "ans": "Gmail users"
},

]


let sqlIncorrectAnswers = [];

let sqlTimerId = "";
let sqlSkip = document.getElementById("sqlSkip");
let codingsqlQues = document.getElementById("codingsqlQues");
let mcqsql = document.getElementById("mcqsql");
let sqlQuestionNumber = document.getElementById("sqlQuestionNumber");
let sqlQuestionCount = 2;
let sqlScore = 0;
let sqlScoreDisplay = document.getElementById("sqlScoreDisplay");
let sqlScoreShow = document.getElementById("sqlScoreShow");
let sqlSkip2 = document.getElementById("sqlSkip2");

let sqlFillAns = document.getElementById("sqlFillAns");
let sqlStatus1 = document.getElementById("sqlStatus1");
let sqlStatus2 = document.getElementById("sqlStatus2");
let sqlStatus3 = document.getElementById("sqlStatus3");
let sqlCheckFill = document.getElementById("sqlCheckFill");

let codingResultsql = document.getElementById("codingResultsql");

let sqlIncorrectAnswersDisplay = document.getElementById("sqlIncorrectAnswersDisplay");
let sqlScoreBelow70 = document.getElementById("sqlScoreBelow70");
let sqlScore100 = document.getElementById("sqlScore100");

let sqlResult1 = document.getElementById("sqlResult1");
let sqlResult2 = document.getElementById("sqlResult2");
let sqlResult3 = document.getElementById("sqlResult3");
let sqlResult4 = document.getElementById("sqlResult4");
let sqlResult5 = document.getElementById("sqlResult5");
let sqlBg1 = document.getElementById("sqlBg1");



function codingsqlStart(){
  codingsqlHide.classList.add("d-none");
codingsqlShow.classList.remove("d-none");

let fillBlanksql = document.getElementById("fillBlanksql");
let op1sql = document.getElementById("op1sql");
let op2sql = document.getElementById("op2sql");
let op3sql = document.getElementById("op3sql");
let op4sql = document.getElementById("op4sql");

let sqlFillAns = document.getElementById("sqlFillAns");
let sqlStatus1 = document.getElementById("sqlStatus1");
let sqlStatus2 = document.getElementById("sqlStatus2");
let sqlStatus3 = document.getElementById("sqlStatus3");
let sqlCheckFill = document.getElementById("sqlCheckFill");

sqlFillAns.disabled = false;
sqlStatus1.classList.remove("d-none");
sqlStatus2.classList.add("d-none");
sqlStatus3.classList.add("d-none");
sqlFillAns.value = "";
sqlSkip2.textContent = "Skip";
sqlSkip2.style.backgroundColor = "orange";
sqlSkip2.style.borderColor = "orange";

sqlSkip.textContent = "Skip";
sqlSkip.style.backgroundColor = "orange";
sqlSkip.style.borderColor = "orange";
sqlScoreShow.textContent = "";
sqlTimer.style.color = "black";

if (sqlLevel === 1) {
  let sqlRandom = Math.floor(Math.random() * codingsql1Arr.length);
  let y = codingsql1Arr[sqlRandom];
  sqlTimer.textContent = "20";
  sqlTime = 20;

  sqlTimerId = setInterval(function () {
    sqlTime = sqlTime - 1;
    if (sqlTime == 0) {
      clearInterval(sqlTimerId);
      sqlQuestionNumber.textContent = "Question:" + sqlQuestionCount + "/10";
      sqlQuestionCount = sqlQuestionCount + 1;
      sqlTime = 20;
      codingsqlStart();
    }
    if (sqlTime <= 5) {
      sqlTimer.style.color = "red";
      sqlTimer.textContent = sqlTime;
    } else {
      sqlTimer.textContent = sqlTime;
    }
  }, 1000);

  if (sqlQuestionCount == 12) {
    clearInterval(sqlTimerId);
    mcqsql.classList.add("d-none");
    document.getElementById("sqlScoreEnd").textContent = sqlScoreDisplay.textContent;
    fillBlanksql.classList.add("d-none");
    codingsqlShow.classList.add("d-none");
    codingResultsql.classList.remove("d-none");

    if (sqlScore < 70) {
      sqlScoreBelow70.classList.remove("d-none");
      sqlScore100.classList.add("d-none");
      sectionCodingsql.classList.add("back15");

      sqlResult1.textContent = "Test finished!!";
      sqlResult2.textContent = "😓 Oops! Not quite right.";
      sqlResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      sqlResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      sqlIncorrectAnswersDisplay.appendChild(h2);

      for (let z of sqlIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        sqlIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (sqlScore < 100) {
      sqlScoreBelow70.classList.remove("d-none");
      sqlScore100.classList.add("d-none");
      sectionCodingsql.classList.add("back15");

      sqlResult1.textContent = "Test finished!!";
      sqlResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      sqlResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      sqlResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      sqlIncorrectAnswersDisplay.appendChild(h2);

      for (let z of sqlIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        sqlIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (sqlScore === 100) {
      document.getElementById("sectionCodingsql").classList.add("back14");
      sqlScore100.classList.remove("d-none");
      sqlScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqsql.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingsqlQues.innerHTML = formattedQuestion;

    fillBlanksql.classList.add("d-none");
    op1sql.textContent = y.op1;
    op2sql.textContent = y.op2;
    op3sql.textContent = y.op3;
    op4sql.textContent = y.op4;

    const allOps = [op1sql, op2sql, op3sql, op4sql];
    allOps.forEach((op, i) => {
      op.onclick = function () {
        allOps.forEach(o => (o.disabled = true));
        clearInterval(sqlTimerId);
        sqlTime = 20;

        if (op.textContent === y.ans) {
          op.style.backgroundColor = "green";
          sqlScore += 10;
          sqlScoreShow.textContent = "+10";
          sqlScoreShow.style.color = "green";
        } else {
          op.style.backgroundColor = "red";
          sqlScore -= 5;
          sqlScoreShow.textContent = "-5";
          sqlScoreShow.style.color = "red";
          let wrong_answer = { ques: y.ques, correct: y.ans, wrong: op.textContent };
          sqlIncorrectAnswers.push(wrong_answer);
        }

        sqlScoreDisplay.textContent = "Score: " + sqlScore + "/100";

        sqlSkip.textContent = "Next";
        sqlSkip.style.backgroundColor = "#23ebdd";
        sqlSkip.style.borderColor = "#23ebdd";

        sqlSkip.onclick = function () {
          sqlQuestionNumber.textContent = "Question:" + sqlQuestionCount + "/10";
          sqlQuestionCount += 1;
          allOps.forEach(o => {
            o.disabled = false;
            o.style.backgroundColor = "white";
          });
          codingsqlStart();
        };
      };
    });

    sqlSkip.onclick = function () {
      clearInterval(sqlTimerId);
      sqlTime = 20;
      sqlQuestionNumber.textContent = "Question:" + sqlQuestionCount + "/10";
      sqlQuestionCount += 1;
      allOps.forEach(o => {
        o.disabled = false;
        o.style.backgroundColor = "white";
      });
      let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
      sqlIncorrectAnswers.push(wrong_answer);
      codingsqlStart();
    };
  } 
  else {
    mcqsql.classList.add("d-none");
    fillBlanksql.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingsqlQues.innerHTML = formattedQuestion;

    sqlCheckFill.onclick = function () {
      clearInterval(sqlTimerId);
      sqlCheckFill.disabled = false;
      sqlSkip2.textContent = "Next";
      sqlSkip2.style.backgroundColor = "#23ebdd";
      sqlSkip2.style.borderColor = "#23ebdd";
      sqlFillAns.disabled = true;

      if (sqlFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        sqlStatus1.classList.add("d-none");
        sqlStatus2.classList.remove("d-none");

        sqlScore += 10;
        sqlScoreShow.textContent = "+10";
        sqlScoreShow.style.color = "green";
      } else {
        sqlStatus1.classList.add("d-none");
        sqlStatus3.classList.remove("d-none");

        sqlScore -= 5;
        sqlScoreShow.textContent = "-5";
        sqlScoreShow.style.color = "red";

        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: sqlFillAns.value };
        sqlIncorrectAnswers.push(wrong_answer);
      }

      sqlScoreDisplay.textContent = "Score: " + sqlScore + "/100";
    };

    sqlSkip2.onclick = function () {
      if (sqlFillAns.value === "") {
        let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
        sqlIncorrectAnswers.push(wrong_answer);
      }
      clearInterval(sqlTimerId);
      sqlTime = 20;
      sqlQuestionNumber.textContent = "Question:" + sqlQuestionCount + "/10";
      sqlQuestionCount += 1;
      codingsqlStart();
    };
  }
}
else if (sqlLevel === 2) {
  let sqlRandom = Math.floor(Math.random() * codingsql2Arr.length);
  let y = codingsql2Arr[sqlRandom];
  sqlTimer.textContent = "25";
  sqlTime = 25;

  sqlTimerId = setInterval(function () {
    sqlTime = sqlTime - 1;
    if (sqlTime == 0) {
      clearInterval(sqlTimerId);
      sqlQuestionNumber.textContent = "Question:" + sqlQuestionCount + "/10";
      sqlQuestionCount = sqlQuestionCount + 1;
      sqlTime = 25;
      codingsqlStart();
    }
    if (sqlTime <= 5) {
      sqlTimer.style.color = "red";
      sqlTimer.textContent = sqlTime;
    } else {
      sqlTimer.textContent = sqlTime;
    }
  }, 1000);

  if (sqlQuestionCount == 12) {
    clearInterval(sqlTimerId);
    mcqsql.classList.add("d-none");
    document.getElementById("sqlScoreEnd").textContent = sqlScoreDisplay.textContent;
    fillBlanksql.classList.add("d-none");
    codingsqlShow.classList.add("d-none");
    codingResultsql.classList.remove("d-none");

    if (sqlScore < 70) {
      sqlScoreBelow70.classList.remove("d-none");
      sqlScore100.classList.add("d-none");
      sectionCodingsql.classList.add("back15");

      sqlResult1.textContent = "Test finished!!";
      sqlResult2.textContent = "😓 Oops! Not quite right.";
      sqlResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      sqlResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      sqlIncorrectAnswersDisplay.appendChild(h2);

      for (let z of sqlIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        sqlIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (sqlScore < 100) {
      sqlScoreBelow70.classList.remove("d-none");
      sqlScore100.classList.add("d-none");
      sectionCodingsql.classList.add("back15");

      sqlResult1.textContent = "Test finished!!";
      sqlResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      sqlResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      sqlResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      sqlIncorrectAnswersDisplay.appendChild(h2);

      for (let z of sqlIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        sqlIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (sqlScore === 100) {
      document.getElementById("sectionCodingsql").classList.add("back14");
      sqlScore100.classList.remove("d-none");
      sqlScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqsql.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingsqlQues.innerHTML = formattedQuestion;
    fillBlanksql.classList.add("d-none");
    op1sql.textContent = y.op1;
    op2sql.textContent = y.op2;
    op3sql.textContent = y.op3;
    op4sql.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(sqlTimerId);
      sqlTime = 25;
      sqlSkip.textContent = "Next";
      sqlSkip.style.backgroundColor = "#23ebdd";
      sqlSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        sqlScore += 10;
        sqlScoreShow.textContent = "+10";
        sqlScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        sqlScore -= 5;
        sqlScoreShow.textContent = "-5";
        sqlScoreShow.style.color = "red";
        sqlIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      sqlScoreDisplay.textContent = "Score: " + sqlScore + "/100";
    }

    op1sql.onclick = () => handleOptionClick(op1sql, [op2sql, op3sql, op4sql]);
    op2sql.onclick = () => handleOptionClick(op2sql, [op1sql, op3sql, op4sql]);
    op3sql.onclick = () => handleOptionClick(op3sql, [op1sql, op2sql, op4sql]);
    op4sql.onclick = () => handleOptionClick(op4sql, [op1sql, op2sql, op3sql]);

    sqlSkip.onclick = function () {
      clearInterval(sqlTimerId);
      sqlTime = 25;
      sqlQuestionNumber.textContent = "Question:" + sqlQuestionCount + "/10";
      sqlQuestionCount++;
      [op1sql, op2sql, op3sql, op4sql].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      sqlIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingsqlStart();
    };
  }
  else {
    mcqsql.classList.add("d-none");
    fillBlanksql.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingsqlQues.innerHTML = formattedQuestion;

    sqlCheckFill.disabled = false;
    sqlFillAns.disabled = false;
    sqlFillAns.value = "";
    sqlStatus1.classList.remove("d-none");
    sqlStatus2.classList.add("d-none");
    sqlStatus3.classList.add("d-none");
    sqlScoreShow.textContent = "";

    sqlCheckFill.onclick = function () {
      clearInterval(sqlTimerId);
      sqlCheckFill.disabled = true;
      sqlSkip2.textContent = "Next";
      sqlSkip2.style.backgroundColor = "#23ebdd";
      sqlSkip2.style.borderColor = "#23ebdd";
      sqlFillAns.disabled = true;

      if (sqlFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        sqlStatus1.classList.add("d-none");
        sqlStatus2.classList.remove("d-none");
        sqlScore += 10;
        sqlScoreShow.textContent = "+10";
        sqlScoreShow.style.color = "green";
      } else {
        sqlStatus1.classList.add("d-none");
        sqlStatus3.classList.remove("d-none");
        sqlScore -= 5;
        sqlScoreShow.textContent = "-5";
        sqlScoreShow.style.color = "red";
        sqlIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: sqlFillAns.value });
      }
      sqlScoreDisplay.textContent = "Score: " + sqlScore + "/100";
    };

    sqlSkip2.onclick = function () {
      if (sqlFillAns.value === "") {
        sqlIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      }
      clearInterval(sqlTimerId);
      sqlTime = 25;
      sqlQuestionNumber.textContent = "Question:" + sqlQuestionCount + "/10";
      sqlQuestionCount++;
      codingsqlStart();
    };
  }
}
else if (sqlLevel === 3) {
  let sqlRandom = Math.floor(Math.random() * codingsql3Arr.length);
  let y = codingsql3Arr[sqlRandom];
  sqlTimer.textContent = "30";
  sqlTime = 30;

  sqlTimerId = setInterval(function () {
    sqlTime = sqlTime - 1;
    if (sqlTime == 0) {
      clearInterval(sqlTimerId);
      sqlQuestionNumber.textContent = "Question:" + sqlQuestionCount + "/10";
      sqlQuestionCount = sqlQuestionCount + 1;
      sqlTime = 30;
      codingsqlStart();
    }
    if (sqlTime <= 5) {
      sqlTimer.style.color = "red";
      sqlTimer.textContent = sqlTime;
    } else {
      sqlTimer.textContent = sqlTime;
    }
  }, 1000);

  if (sqlQuestionCount == 12) {
    clearInterval(sqlTimerId);
    mcqsql.classList.add("d-none");
    document.getElementById("sqlScoreEnd").textContent = sqlScoreDisplay.textContent;
    fillBlanksql.classList.add("d-none");
    codingsqlShow.classList.add("d-none");
    codingResultsql.classList.remove("d-none");

    if (sqlScore < 70) {
      sqlScoreBelow70.classList.remove("d-none");
      sqlScore100.classList.add("d-none");
      sectionCodingsql.classList.add("back15");

      sqlResult1.textContent = "Test finished!!";
      sqlResult2.textContent = "😓 Oops! Not quite right.";
      sqlResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      sqlResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      sqlIncorrectAnswersDisplay.appendChild(h2);

      for (let z of sqlIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        sqlIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (sqlScore < 100) {
      sqlScoreBelow70.classList.remove("d-none");
      sqlScore100.classList.add("d-none");
      sectionCodingsql.classList.add("back15");

      sqlResult1.textContent = "Test finished!!";
      sqlResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      sqlResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      sqlResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      sqlIncorrectAnswersDisplay.appendChild(h2);

      for (let z of sqlIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        sqlIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (sqlScore === 100) {
      document.getElementById("sectionCodingsql").classList.add("back14");
      sqlScore100.classList.remove("d-none");
      sqlScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqsql.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingsqlQues.innerHTML = formattedQuestion;
    fillBlanksql.classList.add("d-none");
    op1sql.textContent = y.op1;
    op2sql.textContent = y.op2;
    op3sql.textContent = y.op3;
    op4sql.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(sqlTimerId);
      sqlTime = 30;
      sqlSkip.textContent = "Next";
      sqlSkip.style.backgroundColor = "#23ebdd";
      sqlSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        sqlScore += 10;
        sqlScoreShow.textContent = "+10";
        sqlScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        sqlScore -= 5;
        sqlScoreShow.textContent = "-5";
        sqlScoreShow.style.color = "red";
        sqlIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      sqlScoreDisplay.textContent = "Score: " + sqlScore + "/100";
    }

    op1sql.onclick = () => handleOptionClick(op1sql, [op2sql, op3sql, op4sql]);
    op2sql.onclick = () => handleOptionClick(op2sql, [op1sql, op3sql, op4sql]);
    op3sql.onclick = () => handleOptionClick(op3sql, [op1sql, op2sql, op4sql]);
    op4sql.onclick = () => handleOptionClick(op4sql, [op1sql, op2sql, op3sql]);

    sqlSkip.onclick = function () {
      clearInterval(sqlTimerId);
      sqlTime = 30;
      sqlQuestionNumber.textContent = "Question:" + sqlQuestionCount + "/10";
      sqlQuestionCount++;
      [op1sql, op2sql, op3sql, op4sql].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      sqlIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingsqlStart();
    };
  }
  else {
    mcqsql.classList.add("d-none");
    fillBlanksql.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingsqlQues.innerHTML = formattedQuestion;

    sqlCheckFill.disabled = false;
    sqlFillAns.disabled = false;
    sqlFillAns.value = "";
    sqlStatus1.classList.remove("d-none");
    sqlStatus2.classList.add("d-none");
    sqlStatus3.classList.add("d-none");
    sqlScoreShow.textContent = "";

    sqlCheckFill.onclick = function () {
      clearInterval(sqlTimerId);
      sqlCheckFill.disabled = true;
      sqlSkip2.textContent = "Next";
      sqlSkip2.style.backgroundColor = "#23ebdd";
      sqlSkip2.style.borderColor = "#23ebdd";
      sqlFillAns.disabled = true;

      if (sqlFillAns.value.trim().toLowerCase() === y.ans.trim().toLowerCase()) {
        sqlStatus1.classList.add("d-none");
        sqlStatus2.classList.remove("d-none");
        sqlScore += 10;
        sqlScoreShow.textContent = "+10";
        sqlScoreShow.style.color = "green";
      } else {
        sqlStatus1.classList.add("d-none");
        sqlStatus3.classList.remove("d-none");
        sqlScore -= 5;
        sqlScoreShow.textContent = "-5";
        sqlScoreShow.style.color = "red";
        sqlIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: sqlFillAns.value });
      }
      sqlScoreDisplay.textContent = "Score: " + sqlScore + "/100";
    };

    sqlSkip2.onclick = function () {
      if (sqlFillAns.value === "") {
        sqlIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      }
      clearInterval(sqlTimerId);
      sqlTime = 30;
      sqlQuestionNumber.textContent = "Question:" + sqlQuestionCount + "/10";
      sqlQuestionCount++;
      codingsqlStart();
    };
  }
}

}
function resetCodingsql() {
  document.getElementById("codingsqlShow").classList.add("d-none");
  document.getElementById("codingResultsql").classList.add("d-none");
  document.getElementById("codingsqlHide").classList.remove("d-none");

  document.getElementById("sqlQuestionNumber").innerText = "Question: 1/10";
  document.getElementById("sqlScoreDisplay").innerText = "Score: 0/100";
  document.getElementById("sqlScoreShow").innerText = "";
  document.getElementById("sqlTimer").innerText = "00";
  document.getElementById("codingsqlQues").innerText = "";

  document.getElementById("op1sql").innerText = "option1";
  document.getElementById("op2sql").innerText = "option2";
  document.getElementById("op3sql").innerText = "option3";
  document.getElementById("op4sql").innerText = "option4";

  sqlIncorrectAnswers = [];
  document.getElementById("sqlIncorrectAnswersDisplay").innerHTML = "";

  sqlScore100.classList.add("d-none");
  sqlScoreBelow70.classList.add("d-none");

  sqlResult1.textContent = "";
  sqlResult2.textContent = "";
  sqlResult3.src = "";
  sqlResult4.textContent = "";

  sectionCodingsql.classList.remove("back14");
  sectionCodingsql.classList.remove("back15");

  document.getElementById("sqlFillAns").value = "";
  document.getElementById("fillBlanksql").style.display = "none";
  document.getElementById("mcqsql").style.display = "block";

  document.getElementById("sqlStatus1").classList.remove("d-none");
  document.getElementById("sqlStatus2").classList.add("d-none");
  document.getElementById("sqlStatus3").classList.add("d-none");

  if (typeof sqlTimerId !== "undefined") {
    clearInterval(sqlTimerId);
  }
  sqlTime = 20;
  sqlQuestionCount = 2;
  sqlScore = 0;
}

function sqlResetLevel() {
  sqlButton1.disabled = false;
  sqlButton2.disabled = false;
  sqlButton3.disabled = false;
  sqlButton.classList.add("d-none");
  sqlIncorrectAnswers = [];
}



// maths quiz
let mathsButton = document.getElementById("mathsButton");
let mathsButton1 = document.getElementById("mathsButton1");
let mathsButton2 = document.getElementById("mathsButton2");
let mathsButton3 = document.getElementById("mathsButton3");
let mathsLevel = 0;
let mathsCodingTest = document.getElementById("mathsCodingTest");
let mathsTimer = document.getElementById("mathsTimer");

mathsButton1.onclick = function () {
  mathsButton2.disabled = true;
  mathsButton3.disabled = true;
  mathsLevel = 1;

  mathsButton.classList.remove("d-none");
  mathsButton.classList.add("d-block");
};

mathsButton2.onclick = function () {
  mathsButton1.disabled = true;
  mathsButton3.disabled = true;
  mathsLevel = 2;

  mathsButton.classList.remove("d-none");
  mathsButton.classList.add("d-block");
};

mathsButton3.onclick = function () {
  mathsButton2.disabled = true;
  mathsButton1.disabled = true;
  mathsLevel = 3;

  mathsButton.classList.remove("d-none");
  mathsButton.classList.add("d-block");
};

let mathsTime = 0;

let codingmathsShow = document.getElementById("codingmathsShow");
let codingmathsHide = document.getElementById("codingmathsHide");
let codingmathsBack = document.getElementById("codingmathsBack");

codingmathsBack.onclick = function () {
  codingmathsShow.classList.add("d-none");
  codingmathsHide.classList.remove("d-none");
};

let codingmaths1Arr=[
  {
  "ques": "What is 5 + 3?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "8"
},
{
  "ques": "What is 9 - 4?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "5"
},
{
  "ques": "What is 6 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "12",
  "op3": "14",
  "op4": "16",
  "ans": "12"
},
{
  "ques": "What is 15 ÷ 3?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is the square of 4?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "12",
  "op3": "16",
  "op4": "20",
  "ans": "16"
},
{
  "ques": "What is the square root of 25?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 10% of 100?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "10",
  "op3": "20",
  "op4": "50",
  "ans": "10"
},
{
  "ques": "What is 7 × 7?<br><br>",
  "quesType": "mcq",
  "op1": "42",
  "op2": "47",
  "op3": "49",
  "op4": "56",
  "ans": "49"
},
{
  "ques": "What is 100 - 45?<br><br>",
  "quesType": "mcq",
  "op1": "45",
  "op2": "50",
  "op3": "55",
  "op4": "65",
  "ans": "55"
},
{
  "ques": "What is 2³ (2 to the power of 3)?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "8",
  "op3": "10",
  "op4": "12",
  "ans": "8"
},
{
  "ques": "What is 1/2 of 20?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "8",
  "op3": "10",
  "op4": "12",
  "ans": "10"
},
{
  "ques": "What is the value of π (approx)?<br><br>",
  "quesType": "mcq",
  "op1": "2.14",
  "op2": "2.71",
  "op3": "3.14",
  "op4": "3.41",
  "ans": "3.14"
},
{
  "ques": "What is 8 × 5?<br><br>",
  "quesType": "mcq",
  "op1": "35",
  "op2": "40",
  "op3": "45",
  "op4": "50",
  "ans": "40"
},
{
  "ques": "What is the smallest prime number?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "2",
  "op4": "3",
  "ans": "2"
},
{
  "ques": "What is 2 + 2 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "8",
  "op3": "10",
  "op4": "12",
  "ans": "6"
},
{
  "ques": "What is 50% of 200?<br><br>",
  "quesType": "mcq",
  "op1": "50",
  "op2": "75",
  "op3": "100",
  "op4": "150",
  "ans": "100"
},
{
  "ques": "What is 81 ÷ 9?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "What is the next odd number after 11?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "13"
},
{
  "ques": "What is the value of 0 × 5?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "5",
  "op4": "10",
  "ans": "0"
},
{
  "ques": "What is 3² + 4²?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "16",
  "op3": "20",
  "op4": "25",
  "ans": "25"
}
,
{
  "ques": "What is 7 + 2?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "9"
},
{
  "ques": "What is 10 - 6?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "4",
  "op3": "3",
  "op4": "6",
  "ans": "4"
},
{
  "ques": "What is 4 × 3?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "10",
  "op3": "12",
  "op4": "14",
  "ans": "12"
},
{
  "ques": "What is 15 ÷ 3?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 8 + 5?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "13"
},
{
  "ques": "What is 12 - 7?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 5 × 5?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "35",
  "ans": "25"
},
{
  "ques": "What is 18 ÷ 2?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "What is 9 + 6?<br><br>",
  "quesType": "mcq",
  "op1": "14",
  "op2": "15",
  "op3": "16",
  "op4": "17",
  "ans": "15"
},
{
  "ques": "What is 14 - 5?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "9"
},
{
  "ques": "What is 3 × 4?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "What is 20 ÷ 5?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "4"
},
{
  "ques": "What is 11 + 4?<br><br>",
  "quesType": "mcq",
  "op1": "13",
  "op2": "14",
  "op3": "15",
  "op4": "16",
  "ans": "15"
},
{
  "ques": "What is 13 - 8?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 2 × 7?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "14"
},
{
  "ques": "What is 16 ÷ 4?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "4"
},
{
  "ques": "What is 7 + 8?<br><br>",
  "quesType": "mcq",
  "op1": "14",
  "op2": "15",
  "op3": "16",
  "op4": "17",
  "ans": "15"
},
{
  "ques": "What is 17 - 9?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "8"
},
{
  "ques": "What is 4 × 5?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "18",
  "op3": "20",
  "op4": "22",
  "ans": "20"
},
{
  "ques": "What is 24 ÷ 6?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "4"
}
,
{
  "ques": "What is 7 + 2?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "9"
},
{
  "ques": "What is 10 - 3?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "7"
},
{
  "ques": "What is 4 × 3?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "10",
  "op3": "12",
  "op4": "14",
  "ans": "12"
},
{
  "ques": "What is 15 ÷ 3?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "5"
},
{
  "ques": "What is 8 + 5?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "13"
},
{
  "ques": "What is 12 - 7?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 5 × 5?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "35",
  "ans": "25"
},
{
  "ques": "What is 20 ÷ 4?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 9 + 6?<br><br>",
  "quesType": "mcq",
  "op1": "14",
  "op2": "15",
  "op3": "16",
  "op4": "17",
  "ans": "15"
},
{
  "ques": "What is 14 - 5?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "9"
},
{
  "ques": "What is 7 × 3?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "20",
  "op3": "21",
  "op4": "24",
  "ans": "21"
},
{
  "ques": "What is 18 ÷ 2?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "What is 3 + 4?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "7"
},
{
  "ques": "What is 11 - 2?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "9"
},
{
  "ques": "What is 6 × 4?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "22",
  "op3": "24",
  "op4": "26",
  "ans": "24"
},
{
  "ques": "What is 16 ÷ 4?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "4"
},
{
  "ques": "What is 2 + 8?<br><br>",
  "quesType": "mcq",
  "op1": "9",
  "op2": "10",
  "op3": "11",
  "op4": "12",
  "ans": "10"
},
{
  "ques": "What is 13 - 6?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "7"
},
{
  "ques": "What is 9 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "17",
  "op3": "18",
  "op4": "19",
  "ans": "18"
},
{
  "ques": "What is 25 ÷ 5?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
}
,
{
  "ques": "What is 12 + 5?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "16",
  "op3": "17",
  "op4": "18",
  "ans": "17"
},
{
  "ques": "What is 20 - 8?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "What is 3 × 4?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "10",
  "op4": "12",
  "ans": "12"
},
{
  "ques": "What is 24 ÷ 6?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "4"
},
{
  "ques": "What is the square of 5?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "35",
  "ans": "25"
},
{
  "ques": "What is the square root of 49?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "7"
},
{
  "ques": "What is 25% of 200?<br><br>",
  "quesType": "mcq",
  "op1": "25",
  "op2": "40",
  "op3": "50",
  "op4": "75",
  "ans": "50"
},
{
  "ques": "What is 11 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "21",
  "op3": "22",
  "op4": "23",
  "ans": "22"
},
{
  "ques": "What is 30 - 15?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "12",
  "op3": "14",
  "op4": "15",
  "ans": "15"
},
{
  "ques": "What is 3²?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "8",
  "op3": "9",
  "op4": "12",
  "ans": "9"
},
{
  "ques": "What is 1/4 of 40?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "8",
  "op3": "10",
  "op4": "12",
  "ans": "10"
},
{
  "ques": "What is 15% of 100?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "12",
  "op3": "15",
  "op4": "18",
  "ans": "15"
},
{
  "ques": "What is 9 × 3?<br><br>",
  "quesType": "mcq",
  "op1": "27",
  "op2": "28",
  "op3": "29",
  "op4": "30",
  "ans": "27"
},
{
  "ques": "What is the smallest even prime number?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "2",
  "op4": "4",
  "ans": "2"
},
{
  "ques": "What is 5 + 5 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "15",
  "op3": "20",
  "op4": "25",
  "ans": "15"
},
{
  "ques": "What is 60% of 50?<br><br>",
  "quesType": "mcq",
  "op1": "25",
  "op2": "30",
  "op3": "35",
  "op4": "40",
  "ans": "30"
},
{
  "ques": "What is 36 ÷ 6?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "6"
},
{
  "ques": "What is the next even number after 14?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "16",
  "op3": "17",
  "op4": "18",
  "ans": "16"
},
{
  "ques": "What is the value of 1 × 7?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "7",
  "op4": "8",
  "ans": "7"
},
{
  "ques": "What is 2² + 3²?<br><br>",
  "quesType": "mcq",
  "op1": "9",
  "op2": "10",
  "op3": "12",
  "op4": "13",
  "ans": "13"
}
,
{
  "ques": "What is 4 + 5?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "9"
},
{
  "ques": "What is 13 - 8?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 3 × 3?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "9"
},
{
  "ques": "What is 12 ÷ 3?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "4"
},
{
  "ques": "What is 7 + 6?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "13"
},
{
  "ques": "What is 10 - 5?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 2 × 7?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "14"
},
{
  "ques": "What is 18 ÷ 6?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "3"
},
{
  "ques": "What is 8 + 4?<br><br>",
  "quesType": "mcq",
  "op1": "11",
  "op2": "12",
  "op3": "13",
  "op4": "14",
  "ans": "12"
},
{
  "ques": "What is 14 - 9?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 4 × 4?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "14",
  "op3": "16",
  "op4": "18",
  "ans": "16"
},
{
  "ques": "What is 21 ÷ 7?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "3"
},
{
  "ques": "What is 6 + 3?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "9"
},
{
  "ques": "What is 11 - 7?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "4"
},
{
  "ques": "What is 3 × 5?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "15"
},
{
  "ques": "What is 16 ÷ 2?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "8"
},
{
  "ques": "What is 9 + 4?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "13"
},
{
  "ques": "What is 13 - 6?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "7"
},
{
  "ques": "What is 2 × 8?<br><br>",
  "quesType": "mcq",
  "op1": "14",
  "op2": "15",
  "op3": "16",
  "op4": "17",
  "ans": "16"
},
{
  "ques": "What is 24 ÷ 4?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "6"
}
,
{
  "ques": "What is 7 + 6?<br><br>",
  "quesType": "mcq",
  "op1": "11",
  "op2": "12",
  "op3": "13",
  "op4": "14",
  "ans": "13"
},
{
  "ques": "What is 18 - 9?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "What is 4 × 5?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "18",
  "op3": "20",
  "op4": "22",
  "ans": "20"
},
{
  "ques": "What is 40 ÷ 5?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "8"
},
{
  "ques": "What is the square of 6?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "32",
  "op3": "35",
  "op4": "36",
  "ans": "36"
},
{
  "ques": "What is the square root of 64?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "8"
},
{
  "ques": "What is 20% of 50?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "8",
  "op3": "10",
  "op4": "15",
  "ans": "10"
},
{
  "ques": "What is 12 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "22",
  "op2": "24",
  "op3": "26",
  "op4": "28",
  "ans": "24"
},
{
  "ques": "What is 50 - 20?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "35",
  "ans": "30"
},
{
  "ques": "What is 4³ (4 to the power of 3)?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "24",
  "op3": "48",
  "op4": "64",
  "ans": "64"
},
{
  "ques": "What is 3/4 of 40?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "35",
  "ans": "30"
},
{
  "ques": "What is 5% of 200?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "10",
  "op3": "15",
  "op4": "20",
  "ans": "10"
},
{
  "ques": "What is 14 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "26",
  "op2": "28",
  "op3": "30",
  "op4": "32",
  "ans": "28"
},
{
  "ques": "What is the first prime number after 5?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "7"
},
{
  "ques": "What is 8 + 4 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "18",
  "op3": "20",
  "op4": "22",
  "ans": "16"
},
{
  "ques": "What is 25% of 80?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "18",
  "op3": "20",
  "op4": "25",
  "ans": "20"
},
{
  "ques": "What is 45 ÷ 9?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is the next prime number after 11?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "13"
},
{
  "ques": "What is 5 × 0?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "5",
  "op4": "10",
  "ans": "0"
},
{
  "ques": "What is 4² + 3²?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "18",
  "op3": "25",
  "op4": "30",
  "ans": "25"
},
{
  "ques": "What is 60 + 15?<br><br>",
  "quesType": "mcq",
  "op1": "70",
  "op2": "75",
  "op3": "80",
  "op4": "85",
  "ans": "75"
},
{
  "ques": "What is 10²?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "50",
  "op3": "100",
  "op4": "200",
  "ans": "100"
},
{
  "ques": "What is 2 × 2 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "8",
  "op3": "10",
  "op4": "12",
  "ans": "8"
},
{
  "ques": "What is 5 + 15?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "20",
  "op3": "25",
  "op4": "30",
  "ans": "20"
},
{
  "ques": "What is 70 - 35?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "35",
  "op3": "40",
  "op4": "45",
  "ans": "35"
},
{
  "ques": "What is 9²?<br><br>",
  "quesType": "mcq",
  "op1": "72",
  "op2": "81",
  "op3": "90",
  "op4": "100",
  "ans": "81"
},
{
  "ques": "What is the square root of 121?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "11"
},
{
  "ques": "What is 100 ÷ 4?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "35",
  "ans": "25"
},
{
  "ques": "What is 8²?<br><br>",
  "quesType": "mcq",
  "op1": "56",
  "op2": "62",
  "op3": "64",
  "op4": "72",
  "ans": "64"
},
{
  "ques": "What is the next odd number after 19?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "21",
  "op3": "22",
  "op4": "23",
  "ans": "21"
}
,
{
  "ques": "What is 2 + 6?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "8"
},
{
  "ques": "What is 10 - 3?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "7"
},
{
  "ques": "What is 3 × 5?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "12",
  "op3": "15",
  "op4": "18",
  "ans": "15"
},
{
  "ques": "What is 20 ÷ 4?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 5 + 9?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "14"
},
{
  "ques": "What is 14 - 6?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "8"
},
{
  "ques": "What is 2 × 9?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "17",
  "op3": "18",
  "op4": "19",
  "ans": "18"
},
{
  "ques": "What is 30 ÷ 5?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "6"
},
{
  "ques": "What is 8 + 7?<br><br>",
  "quesType": "mcq",
  "op1": "14",
  "op2": "15",
  "op3": "16",
  "op4": "17",
  "ans": "15"
},
{
  "ques": "What is 11 - 2?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "What is 4 × 6?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "22",
  "op3": "24",
  "op4": "26",
  "ans": "24"
},
{
  "ques": "What is 27 ÷ 3?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "What is 6 + 11?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "16",
  "op3": "17",
  "op4": "18",
  "ans": "17"
},
{
  "ques": "What is 17 - 5?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "What is 7 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "14"
},
{
  "ques": "What is 35 ÷ 5?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "7"
},
{
  "ques": "What is 9 + 5?<br><br>",
  "quesType": "mcq",
  "op1": "13",
  "op2": "14",
  "op3": "15",
  "op4": "16",
  "ans": "14"
},
{
  "ques": "What is 13 - 9?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "4"
},
{
  "ques": "What is 8 × 3?<br><br>",
  "quesType": "mcq",
  "op1": "22",
  "op2": "23",
  "op3": "24",
  "op4": "25",
  "ans": "24"
},
{
  "ques": "What is 40 ÷ 8?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 12 + 3?<br><br>",
  "quesType": "mcq",
  "op1": "14",
  "op2": "15",
  "op3": "16",
  "op4": "17",
  "ans": "15"
},
{
  "ques": "What is 19 - 7?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "What is 5 × 4?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "18",
  "op3": "20",
  "op4": "22",
  "ans": "20"
},
{
  "ques": "What is 45 ÷ 9?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 10 + 8?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "17",
  "op3": "18",
  "op4": "19",
  "ans": "18"
},
{
  "ques": "What is 21 - 12?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "What is 3 × 7?<br><br>",
  "quesType": "mcq",
  "op1": "19",
  "op2": "20",
  "op3": "21",
  "op4": "22",
  "ans": "21"
},
{
  "ques": "What is 50 ÷ 10?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 14 + 5?<br><br>",
  "quesType": "mcq",
  "op1": "17",
  "op2": "18",
  "op3": "19",
  "op4": "20",
  "ans": "19"
},
{
  "ques": "What is 25 - 13?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
}
,
{
  "ques": "What is 5 + 4?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "9"
},
{
  "ques": "What is 15 - 6?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "What is 3 × 4?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "What is 20 ÷ 5?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "4"
},
{
  "ques": "What is 6 + 7?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "13"
},
{
  "ques": "What is 14 - 7?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "7"
},
{
  "ques": "What is 4 × 5?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "18",
  "op3": "20",
  "op4": "22",
  "ans": "20"
},
{
  "ques": "What is 30 ÷ 6?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 10 + 2?<br><br>",
  "quesType": "mcq",
  "op1": "11",
  "op2": "12",
  "op3": "13",
  "op4": "14",
  "ans": "12"
},
{
  "ques": "What is 19 - 5?<br><br>",
  "quesType": "mcq",
  "op1": "13",
  "op2": "14",
  "op3": "15",
  "op4": "16",
  "ans": "14"
},
{
  "ques": "What is 2 × 9?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "17",
  "op3": "18",
  "op4": "19",
  "ans": "18"
},
{
  "ques": "What is 18 ÷ 3?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "6"
},
{
  "ques": "What is 7 + 8?<br><br>",
  "quesType": "mcq",
  "op1": "14",
  "op2": "15",
  "op3": "16",
  "op4": "17",
  "ans": "15"
},
{
  "ques": "What is 17 - 9?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "8"
},
{
  "ques": "What is 5 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "10"
},
{
  "ques": "What is 40 ÷ 8?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 11 + 3?<br><br>",
  "quesType": "mcq",
  "op1": "13",
  "op2": "14",
  "op3": "15",
  "op4": "16",
  "ans": "14"
},
{
  "ques": "What is 22 - 11?<br><br>",
  "quesType": "mcq",
  "op1": "9",
  "op2": "10",
  "op3": "11",
  "op4": "12",
  "ans": "11"
},
{
  "ques": "What is 6 × 3?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "17",
  "op3": "18",
  "op4": "19",
  "ans": "18"
},
{
  "ques": "What is 35 ÷ 5?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "7"
},
{
  "ques": "What is 8 + 7?<br><br>",
  "quesType": "mcq",
  "op1": "14",
  "op2": "15",
  "op3": "16",
  "op4": "17",
  "ans": "15"
},
{
  "ques": "What is 21 - 12?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "9"
},
{
  "ques": "What is 3 × 7?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "19",
  "op3": "20",
  "op4": "21",
  "ans": "21"
},
{
  "ques": "What is 45 ÷ 9?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 12 + 5?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "17",
  "op3": "18",
  "op4": "19",
  "ans": "17"
},
{
  "ques": "What is 23 - 8?<br><br>",
  "quesType": "mcq",
  "op1": "13",
  "op2": "14",
  "op3": "15",
  "op4": "16",
  "ans": "15"
},
{
  "ques": "What is 4 × 6?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "22",
  "op3": "24",
  "op4": "26",
  "ans": "24"
},
{
  "ques": "What is 36 ÷ 6?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "6"
},
{
  "ques": "What is 9 + 5?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "14"
},
{
  "ques": "What is 16 - 4?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "What is 7 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "14"
},
{
  "ques": "What is 42 ÷ 7?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "6"
}
,
{
  "ques": "What is 13 + 7?<br><br>",
  "quesType": "mcq",
  "op1": "19",
  "op2": "20",
  "op3": "21",
  "op4": "22",
  "ans": "20"
},
{
  "ques": "What is 22 - 11?<br><br>",
  "quesType": "mcq",
  "op1": "9",
  "op2": "10",
  "op3": "11",
  "op4": "12",
  "ans": "11"
},
{
  "ques": "What is 5 × 6?<br><br>",
  "quesType": "mcq",
  "op1": "25",
  "op2": "30",
  "op3": "35",
  "op4": "40",
  "ans": "30"
},
{
  "ques": "What is 90 ÷ 9?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "10"
},
{
  "ques": "What is the square of 3?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "8",
  "op3": "9",
  "op4": "12",
  "ans": "9"
},
{
  "ques": "What is the square root of 16?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "4"
},
{
  "ques": "What is 50% of 300?<br><br>",
  "quesType": "mcq",
  "op1": "100",
  "op2": "125",
  "op3": "150",
  "op4": "175",
  "ans": "150"
},
{
  "ques": "What is 7 × 3?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "20",
  "op3": "21",
  "op4": "24",
  "ans": "21"
},
{
  "ques": "What is 60 - 15?<br><br>",
  "quesType": "mcq",
  "op1": "35",
  "op2": "40",
  "op3": "45",
  "op4": "50",
  "ans": "45"
},
{
  "ques": "What is 2 to the power of 5?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "24",
  "op3": "32",
  "op4": "64",
  "ans": "32"
},
{
  "ques": "What is half of 60?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "35",
  "ans": "30"
},
{
  "ques": "What is 12% of 100?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "12",
  "op3": "14",
  "op4": "16",
  "ans": "12"
},
{
  "ques": "What is 15 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "25",
  "op2": "30",
  "op3": "35",
  "op4": "40",
  "ans": "30"
},
{
  "ques": "What is the next prime number after 17?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "19",
  "op3": "20",
  "op4": "21",
  "ans": "19"
},
{
  "ques": "What is 10 + 5 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "20",
  "op3": "25",
  "op4": "30",
  "ans": "20"
},
{
  "ques": "What is 40% of 50?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "20",
  "op3": "25",
  "op4": "30",
  "ans": "20"
},
{
  "ques": "What is 100 ÷ 2?<br><br>",
  "quesType": "mcq",
  "op1": "40",
  "op2": "45",
  "op3": "50",
  "op4": "55",
  "ans": "50"
},
{
  "ques": "What is the next multiple of 5 after 25?<br><br>",
  "quesType": "mcq",
  "op1": "26",
  "op2": "27",
  "op3": "30",
  "op4": "35",
  "ans": "30"
},
{
  "ques": "What is 8 × 1?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "8",
  "op4": "10",
  "ans": "8"
},
{
  "ques": "What is 6² + 2²?<br><br>",
  "quesType": "mcq",
  "op1": "36",
  "op2": "40",
  "op3": "42",
  "op4": "44",
  "ans": "40"
},
{
  "ques": "What is 20 + 25?<br><br>",
  "quesType": "mcq",
  "op1": "40",
  "op2": "45",
  "op3": "50",
  "op4": "55",
  "ans": "45"
},
{
  "ques": "What is 11²?<br><br>",
  "quesType": "mcq",
  "op1": "100",
  "op2": "110",
  "op3": "121",
  "op4": "144",
  "ans": "121"
},
{
  "ques": "What is 3 × 3 × 3?<br><br>",
  "quesType": "mcq",
  "op1": "9",
  "op2": "18",
  "op3": "27",
  "op4": "36",
  "ans": "27"
},
{
  "ques": "What is 7 + 15?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "21",
  "op3": "22",
  "op4": "23",
  "ans": "22"
},
{
  "ques": "What is 55 - 20?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "32",
  "op3": "35",
  "op4": "40",
  "ans": "35"
},
{
  "ques": "What is 12²?<br><br>",
  "quesType": "mcq",
  "op1": "124",
  "op2": "132",
  "op3": "144",
  "op4": "156",
  "ans": "144"
},
{
  "ques": "What is the square root of 81?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "9"
},
{
  "ques": "What is 80 ÷ 2?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "35",
  "op3": "40",
  "op4": "45",
  "ans": "40"
},
{
  "ques": "What is 7²?<br><br>",
  "quesType": "mcq",
  "op1": "45",
  "op2": "47",
  "op3": "49",
  "op4": "51",
  "ans": "49"
},
{
  "ques": "What is the next even number after 28?<br><br>",
  "quesType": "mcq",
  "op1": "29",
  "op2": "30",
  "op3": "31",
  "op4": "32",
  "ans": "30"
}
,
{
  "ques": "What is 1 + 9?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "10"
},
{
  "ques": "What is 15 - 8?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "7"
},
{
  "ques": "What is 2 × 8?<br><br>",
  "quesType": "mcq",
  "op1": "14",
  "op2": "15",
  "op3": "16",
  "op4": "17",
  "ans": "16"
},
{
  "ques": "What is 18 ÷ 6?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "3"
},
{
  "ques": "What is 6 + 13?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "19",
  "op3": "20",
  "op4": "21",
  "ans": "19"
},
{
  "ques": "What is 22 - 11?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "11"
},
{
  "ques": "What is 5 × 3?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "12",
  "op3": "15",
  "op4": "18",
  "ans": "15"
},
{
  "ques": "What is 36 ÷ 6?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "6"
},
{
  "ques": "What is 7 + 12?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "19",
  "op3": "20",
  "op4": "21",
  "ans": "19"
},
{
  "ques": "What is 20 - 15?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 9 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "17",
  "op3": "18",
  "op4": "19",
  "ans": "18"
},
{
  "ques": "What is 45 ÷ 5?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "What is 4 + 14?<br><br>",
  "quesType": "mcq",
  "op1": "17",
  "op2": "18",
  "op3": "19",
  "op4": "20",
  "ans": "18"
},
{
  "ques": "What is 28 - 9?<br><br>",
  "quesType": "mcq",
  "op1": "17",
  "op2": "18",
  "op3": "19",
  "op4": "20",
  "ans": "19"
},
{
  "ques": "What is 8 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "14",
  "op2": "15",
  "op3": "16",
  "op4": "17",
  "ans": "16"
},
{
  "ques": "What is 30 ÷ 6?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 13 + 4?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "17",
  "op3": "18",
  "op4": "19",
  "ans": "17"
},
{
  "ques": "What is 23 - 8?<br><br>",
  "quesType": "mcq",
  "op1": "14",
  "op2": "15",
  "op3": "16",
  "op4": "17",
  "ans": "15"
},
{
  "ques": "What is 10 × 1?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "10"
},
{
  "ques": "What is 42 ÷ 7?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "6"
},
{
  "ques": "What is 12 + 9?<br><br>",
  "quesType": "mcq",
  "op1": "19",
  "op2": "20",
  "op3": "21",
  "op4": "22",
  "ans": "21"
},
{
  "ques": "What is 19 - 4?<br><br>",
  "quesType": "mcq",
  "op1": "13",
  "op2": "14",
  "op3": "15",
  "op4": "16",
  "ans": "15"
},
{
  "ques": "What is 3 × 6?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "17",
  "op3": "18",
  "op4": "19",
  "ans": "18"
},
{
  "ques": "What is 50 ÷ 10?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 2 + 17?<br><br>",
  "quesType": "mcq",
  "op1": "17",
  "op2": "18",
  "op3": "19",
  "op4": "20",
  "ans": "19"
},
{
  "ques": "What is 16 - 7?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "What is 7 × 4?<br><br>",
  "quesType": "mcq",
  "op1": "24",
  "op2": "25",
  "op3": "26",
  "op4": "28",
  "ans": "28"
},
{
  "ques": "What is 60 ÷ 5?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "What is 9 + 8?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "17",
  "op3": "18",
  "op4": "19",
  "ans": "17"
},
{
  "ques": "What is 31 - 12?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "19",
  "op3": "20",
  "op4": "21",
  "ans": "19"
},
{
  "ques": "What is 5 × 6?<br><br>",
  "quesType": "mcq",
  "op1": "28",
  "op2": "30",
  "op3": "32",
  "op4": "34",
  "ans": "30"
},
{
  "ques": "What is 72 ÷ 8?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
}
,
{
  "ques": "What is 2 + 5?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "7"
},
{
  "ques": "What is 12 - 3?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "What is 2 × 6?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "What is 24 ÷ 6?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "4"
},
{
  "ques": "What is 5 + 6?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "11"
},
{
  "ques": "What is 18 - 7?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "11"
},
{
  "ques": "What is 3 × 5?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "15"
},
{
  "ques": "What is 28 ÷ 7?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "4"
},
{
  "ques": "What is 4 + 8?<br><br>",
  "quesType": "mcq",
  "op1": "11",
  "op2": "12",
  "op3": "13",
  "op4": "14",
  "ans": "12"
},
{
  "ques": "What is 19 - 9?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "10"
},
{
  "ques": "What is 2 × 8?<br><br>",
  "quesType": "mcq",
  "op1": "14",
  "op2": "15",
  "op3": "16",
  "op4": "17",
  "ans": "16"
},
{
  "ques": "What is 30 ÷ 5?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "6"
},
{
  "ques": "What is 7 + 5?<br><br>",
  "quesType": "mcq",
  "op1": "11",
  "op2": "12",
  "op3": "13",
  "op4": "14",
  "ans": "12"
},
{
  "ques": "What is 25 - 5?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "19",
  "op3": "20",
  "op4": "21",
  "ans": "20"
},
{
  "ques": "What is 4 × 3?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "What is 32 ÷ 4?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "8"
},
{
  "ques": "What is 9 + 2?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "11"
},
{
  "ques": "What is 20 - 11?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "9"
},
{
  "ques": "What is 5 × 3?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "15"
},
{
  "ques": "What is 40 ÷ 5?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "8"
},
{
  "ques": "What is 8 + 4?<br><br>",
  "quesType": "mcq",
  "op1": "11",
  "op2": "12",
  "op3": "13",
  "op4": "14",
  "ans": "12"
},
{
  "ques": "What is 17 - 8?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "9"
},
{
  "ques": "What is 3 × 7?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "19",
  "op3": "20",
  "op4": "21",
  "ans": "21"
},
{
  "ques": "What is 35 ÷ 7?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 10 + 6?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "16",
  "op3": "17",
  "op4": "18",
  "ans": "16"
},
{
  "ques": "What is 27 - 9?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "17",
  "op3": "18",
  "op4": "19",
  "ans": "18"
},
{
  "ques": "What is 6 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "What is 36 ÷ 9?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "4"
},
{
  "ques": "What is 12 + 7?<br><br>",
  "quesType": "mcq",
  "op1": "17",
  "op2": "18",
  "op3": "19",
  "op4": "20",
  "ans": "19"
},
{
  "ques": "What is 22 - 12?<br><br>",
  "quesType": "mcq",
  "op1": "9",
  "op2": "10",
  "op3": "11",
  "op4": "12",
  "ans": "10"
},
{
  "ques": "What is 2 × 9?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "17",
  "op3": "18",
  "op4": "19",
  "ans": "18"
},
{
  "ques": "What is 48 ÷ 6?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "8"
}
,
{
  "ques": "What is 8 + 12?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "19",
  "op3": "20",
  "op4": "21",
  "ans": "20"
},
{
  "ques": "What is 30 - 12?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "17",
  "op3": "18",
  "op4": "19",
  "ans": "18"
},
{
  "ques": "What is 7 × 5?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "32",
  "op3": "34",
  "op4": "35",
  "ans": "35"
},
{
  "ques": "What is 72 ÷ 8?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "What is the square of 2?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "4",
  "op3": "6",
  "op4": "8",
  "ans": "4"
},
{
  "ques": "What is the square root of 36?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "6"
},
{
  "ques": "What is 10% of 250?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "20",
  "op3": "25",
  "op4": "30",
  "ans": "25"
},
{
  "ques": "What is 9 × 4?<br><br>",
  "quesType": "mcq",
  "op1": "32",
  "op2": "34",
  "op3": "36",
  "op4": "38",
  "ans": "36"
},
{
  "ques": "What is 100 - 60?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "35",
  "op3": "40",
  "op4": "45",
  "ans": "40"
},
{
  "ques": "What is 3 to the power of 3?<br><br>",
  "quesType": "mcq",
  "op1": "9",
  "op2": "18",
  "op3": "27",
  "op4": "36",
  "ans": "27"
},
{
  "ques": "What is half of 90?<br><br>",
  "quesType": "mcq",
  "op1": "40",
  "op2": "45",
  "op3": "50",
  "op4": "55",
  "ans": "45"
},
{
  "ques": "What is 5% of 500?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "20",
  "op3": "25",
  "op4": "30",
  "ans": "25"
},
{
  "ques": "What is 20 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "35",
  "op3": "40",
  "op4": "45",
  "ans": "40"
},
{
  "ques": "What is the next prime number after 23?<br><br>",
  "quesType": "mcq",
  "op1": "24",
  "op2": "25",
  "op3": "27",
  "op4": "29",
  "ans": "29"
},
{
  "ques": "What is 12 + 4 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "20",
  "op3": "22",
  "op4": "24",
  "ans": "20"
},
{
  "ques": "What is 30% of 200?<br><br>",
  "quesType": "mcq",
  "op1": "40",
  "op2": "50",
  "op3": "60",
  "op4": "70",
  "ans": "60"
},
{
  "ques": "What is 144 ÷ 12?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "What is the next multiple of 10 after 30?<br><br>",
  "quesType": "mcq",
  "op1": "35",
  "op2": "40",
  "op3": "45",
  "op4": "50",
  "ans": "40"
},
{
  "ques": "What is 9 × 1?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "What is 5² + 5²?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "40",
  "op3": "50",
  "op4": "60",
  "ans": "50"
},
{
  "ques": "What is 45 + 15?<br><br>",
  "quesType": "mcq",
  "op1": "50",
  "op2": "55",
  "op3": "60",
  "op4": "65",
  "ans": "60"
},
{
  "ques": "What is 13²?<br><br>",
  "quesType": "mcq",
  "op1": "144",
  "op2": "156",
  "op3": "169",
  "op4": "196",
  "ans": "169"
},
{
  "ques": "What is 4 × 4 × 2?<br><br>",
  "quesType": "mcq",
  "op1": "24",
  "op2": "28",
  "op3": "30",
  "op4": "32",
  "ans": "32"
},
{
  "ques": "What is 10 + 35?<br><br>",
  "quesType": "mcq",
  "op1": "40",
  "op2": "42",
  "op3": "45",
  "op4": "50",
  "ans": "45"
},
{
  "ques": "What is 70 - 40?<br><br>",
  "quesType": "mcq",
  "op1": "25",
  "op2": "30",
  "op3": "35",
  "op4": "40",
  "ans": "30"
},
{
  "ques": "What is 14²?<br><br>",
  "quesType": "mcq",
  "op1": "169",
  "op2": "176",
  "op3": "182",
  "op4": "196",
  "ans": "196"
},
{
  "ques": "What is the square root of 100?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "10"
},
{
  "ques": "What is 90 ÷ 3?<br><br>",
  "quesType": "mcq",
  "op1": "25",
  "op2": "30",
  "op3": "35",
  "op4": "40",
  "ans": "30"
},
{
  "ques": "What is 10³?<br><br>",
  "quesType": "mcq",
  "op1": "100",
  "op2": "500",
  "op3": "1000",
  "op4": "1500",
  "ans": "1000"
},
{
  "ques": "What is the next odd number after 31?<br><br>",
  "quesType": "mcq",
  "op1": "32",
  "op2": "33",
  "op3": "34",
  "op4": "35",
  "ans": "33"
}

]

let codingmaths2Arr=[
  {
  "ques": "What is 12 + 15?<br><br>",
  "quesType": "mcq",
  "op1": "25",
  "op2": "26",
  "op3": "27",
  "op4": "28",
  "ans": "27"
},
{
  "ques": "What is 45 - 18?<br><br>",
  "quesType": "mcq",
  "op1": "25",
  "op2": "26",
  "op3": "27",
  "op4": "28",
  "ans": "27"
},
{
  "ques": "What is 7 × 8?<br><br>",
  "quesType": "mcq",
  "op1": "54",
  "op2": "55",
  "op3": "56",
  "op4": "57",
  "ans": "56"
},
{
  "ques": "What is 81 ÷ 9?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "What is 25 + 37?<br><br>",
  "quesType": "mcq",
  "op1": "61",
  "op2": "62",
  "op3": "63",
  "op4": "64",
  "ans": "62"
},
{
  "ques": "What is 50 - 23?<br><br>",
  "quesType": "mcq",
  "op1": "25",
  "op2": "26",
  "op3": "27",
  "op4": "28",
  "ans": "27"
},
{
  "ques": "What is 9 × 7?<br><br>",
  "quesType": "mcq",
  "op1": "61",
  "op2": "62",
  "op3": "63",
  "op4": "64",
  "ans": "63"
},
{
  "ques": "What is 72 ÷ 8?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "9"
},
{
  "ques": "What is 34 + 29?<br><br>",
  "quesType": "mcq",
  "op1": "62",
  "op2": "63",
  "op3": "64",
  "op4": "65",
  "ans": "63"
},
{
  "ques": "What is 60 - 32?<br><br>",
  "quesType": "mcq",
  "op1": "27",
  "op2": "28",
  "op3": "29",
  "op4": "30",
  "ans": "28"
},
{
  "ques": "What is 8 × 8?<br><br>",
  "quesType": "mcq",
  "op1": "62",
  "op2": "63",
  "op3": "64",
  "op4": "65",
  "ans": "64"
},
{
  "ques": "What is 90 ÷ 10?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "What is 13 + 47?<br><br>",
  "quesType": "mcq",
  "op1": "58",
  "op2": "59",
  "op3": "60",
  "op4": "61",
  "ans": "60"
},
{
  "ques": "What is 75 - 28?<br><br>",
  "quesType": "mcq",
  "op1": "45",
  "op2": "46",
  "op3": "47",
  "op4": "48",
  "ans": "47"
},
{
  "ques": "What is 6 × 12?<br><br>",
  "quesType": "mcq",
  "op1": "70",
  "op2": "71",
  "op3": "72",
  "op4": "73",
  "ans": "72"
},
{
  "ques": "What is 100 ÷ 4?<br><br>",
  "quesType": "mcq",
  "op1": "24",
  "op2": "25",
  "op3": "26",
  "op4": "27",
  "ans": "25"
},
{
  "ques": "What is 23 + 56?<br><br>",
  "quesType": "mcq",
  "op1": "77",
  "op2": "78",
  "op3": "79",
  "op4": "80",
  "ans": "79"
},
{
  "ques": "What is 95 - 45?<br><br>",
  "quesType": "mcq",
  "op1": "48",
  "op2": "49",
  "op3": "50",
  "op4": "51",
  "ans": "50"
},
{
  "ques": "What is 11 × 5?<br><br>",
  "quesType": "mcq",
  "op1": "54",
  "op2": "55",
  "op3": "56",
  "op4": "57",
  "ans": "55"
},
{
  "ques": "What is 64 ÷ 8?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "8"
},
{
  "ques": "What is 44 + 33?<br><br>",
  "quesType": "mcq",
  "op1": "75",
  "op2": "76",
  "op3": "77",
  "op4": "78",
  "ans": "77"
},
{
  "ques": "What is 85 - 29?<br><br>",
  "quesType": "mcq",
  "op1": "54",
  "op2": "55",
  "op3": "56",
  "op4": "57",
  "ans": "56"
},
{
  "ques": "What is 10 × 9?<br><br>",
  "quesType": "mcq",
  "op1": "88",
  "op2": "89",
  "op3": "90",
  "op4": "91",
  "ans": "90"
},
{
  "ques": "What is 121 ÷ 11?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "11"
},
{
  "ques": "What is 35 + 28?<br><br>",
  "quesType": "mcq",
  "op1": "61",
  "op2": "62",
  "op3": "63",
  "op4": "64",
  "ans": "63"
},
{
  "ques": "What is 70 - 37?<br><br>",
  "quesType": "mcq",
  "op1": "31",
  "op2": "32",
  "op3": "33",
  "op4": "34",
  "ans": "33"
},
{
  "ques": "What is 13 × 4?<br><br>",
  "quesType": "mcq",
  "op1": "50",
  "op2": "51",
  "op3": "52",
  "op4": "53",
  "ans": "52"
},
{
  "ques": "What is 144 ÷ 12?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "What is 49 + 27?<br><br>",
  "quesType": "mcq",
  "op1": "74",
  "op2": "75",
  "op3": "76",
  "op4": "77",
  "ans": "76"
},
{
  "ques": "What is 88 - 59?<br><br>",
  "quesType": "mcq",
  "op1": "27",
  "op2": "28",
  "op3": "29",
  "op4": "30",
  "ans": "29"
}
,
{
  "ques": "What is the square of 5?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "35",
  "ans": "25"
},
{
  "ques": "What is the square root of 49?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "7"
},
{
  "ques": "What is 15% of 200?<br><br>",
  "quesType": "mcq",
  "op1": "25",
  "op2": "30",
  "op3": "35",
  "op4": "40",
  "ans": "30"
},
{
  "ques": "What is 45 ÷ 5?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "What is 12 × 4?<br><br>",
  "quesType": "mcq",
  "op1": "44",
  "op2": "46",
  "op3": "48",
  "op4": "50",
  "ans": "48"
},
{
  "ques": "What is 144 ÷ 12?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "What is the LCM of 4 and 6?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "10",
  "op3": "12",
  "op4": "14",
  "ans": "12"
},
{
  "ques": "If a box holds 8 apples, how many apples in 3 boxes?<br><br>",
  "quesType": "mcq",
  "op1": "22",
  "op2": "24",
  "op3": "26",
  "op4": "28",
  "ans": "24"
},
{
  "ques": "What is 2³?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "8"
},
{
  "ques": "What is 100 ÷ 4?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "22",
  "op3": "24",
  "op4": "25",
  "ans": "25"
},
{
  "ques": "If 1 book costs 50, what is the cost of 5 books?<br><br>",
  "quesType": "mcq",
  "op1": "200",
  "op2": "220",
  "op3": "240",
  "op4": "250",
  "ans": "250"
},
{
  "ques": "What is the square of 8?<br><br>",
  "quesType": "mcq",
  "op1": "56",
  "op2": "60",
  "op3": "64",
  "op4": "68",
  "ans": "64"
},
{
  "ques": "What is the cube of 3?<br><br>",
  "quesType": "mcq",
  "op1": "27",
  "op2": "28",
  "op3": "29",
  "op4": "30",
  "ans": "27"
},
{
  "ques": "If you walk 5 km daily, how far in 7 days?<br><br>",
  "quesType": "mcq",
  "op1": "30 km",
  "op2": "32 km",
  "op3": "34 km",
  "op4": "35 km",
  "ans": "35 km"
},
{
  "ques": "What is 250 - 175?<br><br>",
  "quesType": "mcq",
  "op1": "65",
  "op2": "70",
  "op3": "75",
  "op4": "80",
  "ans": "75"
},
{
  "ques": "What is 72 ÷ 8?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "9"
},
{
  "ques": "How many sides does a hexagon have?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "6"
},
{
  "ques": "What is 20% of 150?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "35",
  "ans": "30"
},
{
  "ques": "What is the next multiple of 9 after 27?<br><br>",
  "quesType": "mcq",
  "op1": "36",
  "op2": "35",
  "op3": "34",
  "op4": "33",
  "ans": "36"
},
{
  "ques": "How much is 2 dozens?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "22",
  "op3": "24",
  "op4": "26",
  "ans": "24"
}
,
{
  "ques": "What is the value of (5 + 3) × 2?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "14",
  "op3": "16",
  "op4": "18",
  "ans": "16"
},
{
  "ques": "If a box has 8 rows of 6 apples each, how many apples in total?<br><br>",
  "quesType": "mcq",
  "op1": "36",
  "op2": "42",
  "op3": "48",
  "op4": "54",
  "ans": "48"
},
{
  "ques": "What is 15% of 240?<br><br>",
  "quesType": "mcq",
  "op1": "32",
  "op2": "34",
  "op3": "36",
  "op4": "36",
  "ans": "36"
},
{
  "ques": "What is the average of 10, 20, and 30?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "20",
  "op3": "25",
  "op4": "30",
  "ans": "20"
},
{
  "ques": "A shopkeeper sells a pen for Rs. 45 after buying it for Rs. 30. Profit is?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "12",
  "op3": "15",
  "op4": "20",
  "ans": "15"
},
{
  "ques": "What is the simple interest on Rs. 1000 at 5% per annum for 2 years?<br><br>",
  "quesType": "mcq",
  "op1": "50",
  "op2": "75",
  "op3": "100",
  "op4": "150",
  "ans": "100"
},
{
  "ques": "What is the next multiple of 13 after 65?<br><br>",
  "quesType": "mcq",
  "op1": "72",
  "op2": "75",
  "op3": "78",
  "op4": "80",
  "ans": "78"
},
{
  "ques": "If 2x = 10, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "5"
},
{
  "ques": "What is the mean of 5, 15, 25, and 35?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "20",
  "op3": "22.5",
  "op4": "25",
  "ans": "20"
},
{
  "ques": "If 9 × x = 81, then x = ?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "9"
},
{
  "ques": "What is 42 + 19?<br><br>",
  "quesType": "mcq",
  "op1": "60",
  "op2": "61",
  "op3": "62",
  "op4": "63",
  "ans": "61"
},
{
  "ques": "What is 90 - 36?<br><br>",
  "quesType": "mcq",
  "op1": "52",
  "op2": "53",
  "op3": "54",
  "op4": "55",
  "ans": "54"
},
{
  "ques": "What is 7 × 9?<br><br>",
  "quesType": "mcq",
  "op1": "62",
  "op2": "63",
  "op3": "64",
  "op4": "65",
  "ans": "63"
},
{
  "ques": "What is 132 ÷ 11?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "What is 55 + 24?<br><br>",
  "quesType": "mcq",
  "op1": "78",
  "op2": "79",
  "op3": "80",
  "op4": "81",
  "ans": "79"
},
{
  "ques": "What is 100 - 47?<br><br>",
  "quesType": "mcq",
  "op1": "51",
  "op2": "52",
  "op3": "53",
  "op4": "54",
  "ans": "53"
},
{
  "ques": "What is 8 × 11?<br><br>",
  "quesType": "mcq",
  "op1": "86",
  "op2": "87",
  "op3": "88",
  "op4": "89",
  "ans": "88"
},
{
  "ques": "What is 144 ÷ 12?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "What is 65 + 18?<br><br>",
  "quesType": "mcq",
  "op1": "81",
  "op2": "82",
  "op3": "83",
  "op4": "84",
  "ans": "83"
},
{
  "ques": "What is 120 - 45?<br><br>",
  "quesType": "mcq",
  "op1": "74",
  "op2": "75",
  "op3": "76",
  "op4": "77",
  "ans": "75"
},
{
  "ques": "What is 13 × 5?<br><br>",
  "quesType": "mcq",
  "op1": "63",
  "op2": "64",
  "op3": "65",
  "op4": "66",
  "ans": "65"
},
{
  "ques": "What is 121 ÷ 11?<br><br>",
  "quesType": "mcq",
  "op1": "9",
  "op2": "10",
  "op3": "11",
  "op4": "12",
  "ans": "11"
},
{
  "ques": "What is 39 + 42?<br><br>",
  "quesType": "mcq",
  "op1": "80",
  "op2": "81",
  "op3": "82",
  "op4": "83",
  "ans": "81"
},
{
  "ques": "What is 77 - 38?<br><br>",
  "quesType": "mcq",
  "op1": "37",
  "op2": "38",
  "op3": "39",
  "op4": "40",
  "ans": "39"
},
{
  "ques": "What is 9 × 9?<br><br>",
  "quesType": "mcq",
  "op1": "80",
  "op2": "81",
  "op3": "82",
  "op4": "83",
  "ans": "81"
},
{
  "ques": "What is 108 ÷ 9?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "What is 29 + 56?<br><br>",
  "quesType": "mcq",
  "op1": "83",
  "op2": "84",
  "op3": "85",
  "op4": "86",
  "ans": "85"
},
{
  "ques": "What is 85 - 47?<br><br>",
  "quesType": "mcq",
  "op1": "36",
  "op2": "37",
  "op3": "38",
  "op4": "39",
  "ans": "38"
},
{
  "ques": "What is 12 × 6?<br><br>",
  "quesType": "mcq",
  "op1": "70",
  "op2": "71",
  "op3": "72",
  "op4": "73",
  "ans": "72"
},
{
  "ques": "What is 99 ÷ 11?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "9"
},
{
  "ques": "What is 57 + 29?<br><br>",
  "quesType": "mcq",
  "op1": "85",
  "op2": "86",
  "op3": "87",
  "op4": "88",
  "ans": "86"
},
{
  "ques": "What is 102 - 68?<br><br>",
  "quesType": "mcq",
  "op1": "33",
  "op2": "34",
  "op3": "35",
  "op4": "36",
  "ans": "34"
},
{
  "ques": "What is 14 × 4?<br><br>",
  "quesType": "mcq",
  "op1": "54",
  "op2": "55",
  "op3": "56",
  "op4": "57",
  "ans": "56"
},
{
  "ques": "What is 132 ÷ 12?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "11"
},
{
  "ques": "What is 67 + 23?<br><br>",
  "quesType": "mcq",
  "op1": "89",
  "op2": "90",
  "op3": "91",
  "op4": "92",
  "ans": "90"
},
{
  "ques": "What is 150 - 75?<br><br>",
  "quesType": "mcq",
  "op1": "73",
  "op2": "74",
  "op3": "75",
  "op4": "76",
  "ans": "75"
},
{
  "ques": "What is 15 × 3?<br><br>",
  "quesType": "mcq",
  "op1": "44",
  "op2": "45",
  "op3": "46",
  "op4": "47",
  "ans": "45"
},
{
  "ques": "What is 180 ÷ 15?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "What is 58 + 32?<br><br>",
  "quesType": "mcq",
  "op1": "89",
  "op2": "90",
  "op3": "91",
  "op4": "92",
  "ans": "90"
},
{
  "ques": "What is 92 - 43?<br><br>",
  "quesType": "mcq",
  "op1": "48",
  "op2": "49",
  "op3": "50",
  "op4": "51",
  "ans": "49"
}
,
{
  "ques": "What is 3/4 of 64?<br><br>",
  "quesType": "mcq",
  "op1": "42",
  "op2": "46",
  "op3": "48",
  "op4": "52",
  "ans": "48"
},
{
  "ques": "What is the average of 12, 18, and 24?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "17",
  "op3": "18",
  "op4": "19",
  "ans": "18"
},
{
  "ques": "If 20% of a number is 30, what is the number?<br><br>",
  "quesType": "mcq",
  "op1": "100",
  "op2": "120",
  "op3": "130",
  "op4": "150",
  "ans": "150"
},
{
  "ques": "What is the HCF of 24 and 36?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "8",
  "op3": "12",
  "op4": "18",
  "ans": "12"
},
{
  "ques": "What is the LCM of 6 and 8?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "18",
  "op3": "24",
  "op4": "36",
  "ans": "24"
},
{
  "ques": "What is 15% of 240?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "32",
  "op3": "34",
  "op4": "36",
  "ans": "36"
},
{
  "ques": "A number minus its half is 36. What is the number?<br><br>",
  "quesType": "mcq",
  "op1": "60",
  "op2": "72",
  "op3": "80",
  "op4": "90",
  "ans": "72"
},
{
  "ques": "If the perimeter of a square is 48 cm, what is its side?<br><br>",
  "quesType": "mcq",
  "op1": "10 cm",
  "op2": "11 cm",
  "op3": "12 cm",
  "op4": "13 cm",
  "ans": "12 cm"
},
{
  "ques": "What is 2/5 of 150?<br><br>",
  "quesType": "mcq",
  "op1": "50",
  "op2": "55",
  "op3": "60",
  "op4": "65",
  "ans": "60"
},
{
  "ques": "Find the next term: 2, 4, 8, 16, ?<br><br>",
  "quesType": "mcq",
  "op1": "24",
  "op2": "30",
  "op3": "32",
  "op4": "36",
  "ans": "32"
},
{
  "ques": "A shopkeeper buys an item for ₹120 and sells it for ₹150. What is the profit %?<br><br>",
  "quesType": "mcq",
  "op1": "20%",
  "op2": "25%",
  "op3": "30%",
  "op4": "35%",
  "ans": "25%"
},
{
  "ques": "If 7x = 42, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "6"
},
{
  "ques": "The area of a rectangle is 60 cm² and its length is 12 cm. What is the breadth?<br><br>",
  "quesType": "mcq",
  "op1": "4 cm",
  "op2": "5 cm",
  "op3": "6 cm",
  "op4": "7 cm",
  "ans": "5 cm"
},
{
  "ques": "What is the sum of first 5 odd numbers?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "35",
  "ans": "25"
},
{
  "ques": "If a = 5 and b = 3, what is a² + b²?<br><br>",
  "quesType": "mcq",
  "op1": "25",
  "op2": "28",
  "op3": "34",
  "op4": "35",
  "ans": "34"
},
{
  "ques": "Find the value of 2³ × 3²?<br><br>",
  "quesType": "mcq",
  "op1": "36",
  "op2": "40",
  "op3": "48",
  "op4": "54",
  "ans": "72"
},
{
  "ques": "What is the average of 10, 20, 30, 40?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "35",
  "ans": "25"
},
{
  "ques": "Simplify: 100 ÷ (5 × 2)<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "10",
  "op3": "20",
  "op4": "25",
  "ans": "10"
},
{
  "ques": "Which of these numbers is a prime number?<br><br>",
  "quesType": "mcq",
  "op1": "21",
  "op2": "23",
  "op3": "25",
  "op4": "27",
  "ans": "23"
},
{
  "ques": "If the cost of 5 pens is ₹75, what is the cost of 1 pen?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "15"
},
{
  "ques": "What is the product of first three prime numbers?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "30",
  "op3": "35",
  "op4": "40",
  "ans": "30"
},
{
  "ques": "What is ⅔ of 90?<br><br>",
  "quesType": "mcq",
  "op1": "50",
  "op2": "55",
  "op3": "60",
  "op4": "65",
  "ans": "60"
},
{
  "ques": "If a train travels 120 km in 2 hours, what is its speed?<br><br>",
  "quesType": "mcq",
  "op1": "40 km/h",
  "op2": "50 km/h",
  "op3": "60 km/h",
  "op4": "70 km/h",
  "ans": "60 km/h"
},
{
  "ques": "Find the missing number: 5, 10, 20, ? , 80<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "35",
  "op3": "40",
  "op4": "45",
  "ans": "40"
},
{
  "ques": "A number divided by 5 gives 9. What is the number?<br><br>",
  "quesType": "mcq",
  "op1": "40",
  "op2": "45",
  "op3": "50",
  "op4": "55",
  "ans": "45"
},
{
  "ques": "What is the sum of angles in a triangle?<br><br>",
  "quesType": "mcq",
  "op1": "90°",
  "op2": "180°",
  "op3": "270°",
  "op4": "360°",
  "ans": "180°"
},
{
  "ques": "Find the square root of 225?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "15"
},
{
  "ques": "What is 4! (4 factorial)?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "20",
  "op3": "24",
  "op4": "32",
  "ans": "24"
},
{
  "ques": "What is 10² - 6²?<br><br>",
  "quesType": "mcq",
  "op1": "28",
  "op2": "36",
  "op3": "64",
  "op4": "100",
  "ans": "64"
},
{
  "ques": "Which of these is a perfect square?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "36",
  "op3": "40",
  "op4": "45",
  "ans": "36"
}
,
{
  "ques": "What is 53 + 17?<br><br>",
  "quesType": "mcq",
  "op1": "69",
  "op2": "70",
  "op3": "71",
  "op4": "72",
  "ans": "70"
},
{
  "ques": "What is 85 - 29?<br><br>",
  "quesType": "mcq",
  "op1": "54",
  "op2": "55",
  "op3": "56",
  "op4": "57",
  "ans": "56"
},
{
  "ques": "What is 6 × 11?<br><br>",
  "quesType": "mcq",
  "op1": "65",
  "op2": "66",
  "op3": "67",
  "op4": "68",
  "ans": "66"
},
{
  "ques": "What is 120 ÷ 8?<br><br>",
  "quesType": "mcq",
  "op1": "14",
  "op2": "15",
  "op3": "16",
  "op4": "17",
  "ans": "15"
},
{
  "ques": "What is 47 + 28?<br><br>",
  "quesType": "mcq",
  "op1": "74",
  "op2": "75",
  "op3": "76",
  "op4": "77",
  "ans": "75"
},
{
  "ques": "What is 96 - 38?<br><br>",
  "quesType": "mcq",
  "op1": "56",
  "op2": "57",
  "op3": "58",
  "op4": "59",
  "ans": "58"
},
{
  "ques": "What is 12 × 7?<br><br>",
  "quesType": "mcq",
  "op1": "82",
  "op2": "83",
  "op3": "84",
  "op4": "85",
  "ans": "84"
},
{
  "ques": "What is 135 ÷ 9?<br><br>",
  "quesType": "mcq",
  "op1": "14",
  "op2": "15",
  "op3": "16",
  "op4": "17",
  "ans": "15"
},
{
  "ques": "What is 66 + 19?<br><br>",
  "quesType": "mcq",
  "op1": "84",
  "op2": "85",
  "op3": "86",
  "op4": "87",
  "ans": "85"
},
{
  "ques": "What is 110 - 53?<br><br>",
  "quesType": "mcq",
  "op1": "56",
  "op2": "57",
  "op3": "58",
  "op4": "59",
  "ans": "57"
},
{
  "ques": "What is 13 × 6?<br><br>",
  "quesType": "mcq",
  "op1": "76",
  "op2": "77",
  "op3": "78",
  "op4": "79",
  "ans": "78"
},
{
  "ques": "What is 144 ÷ 9?<br><br>",
  "quesType": "mcq",
  "op1": "14",
  "op2": "15",
  "op3": "16",
  "op4": "17",
  "ans": "16"
},
{
  "ques": "What is 39 + 44?<br><br>",
  "quesType": "mcq",
  "op1": "82",
  "op2": "83",
  "op3": "84",
  "op4": "85",
  "ans": "83"
},
{
  "ques": "What is 99 - 44?<br><br>",
  "quesType": "mcq",
  "op1": "54",
  "op2": "55",
  "op3": "56",
  "op4": "57",
  "ans": "55"
},
{
  "ques": "What is 8 × 12?<br><br>",
  "quesType": "mcq",
  "op1": "94",
  "op2": "95",
  "op3": "96",
  "op4": "97",
  "ans": "96"
},
{
  "ques": "What is 132 ÷ 6?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "21",
  "op3": "22",
  "op4": "23",
  "ans": "22"
},
{
  "ques": "What is 57 + 32?<br><br>",
  "quesType": "mcq",
  "op1": "88",
  "op2": "89",
  "op3": "90",
  "op4": "91",
  "ans": "89"
},
{
  "ques": "What is 140 - 59?<br><br>",
  "quesType": "mcq",
  "op1": "80",
  "op2": "81",
  "op3": "82",
  "op4": "83",
  "ans": "81"
},
{
  "ques": "What is 14 × 5?<br><br>",
  "quesType": "mcq",
  "op1": "68",
  "op2": "69",
  "op3": "70",
  "op4": "71",
  "ans": "70"
},
{
  "ques": "What is 156 ÷ 12?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "13"
},
{
  "ques": "What is 73 + 18?<br><br>",
  "quesType": "mcq",
  "op1": "90",
  "op2": "91",
  "op3": "92",
  "op4": "93",
  "ans": "91"
},
{
  "ques": "What is 105 - 67?<br><br>",
  "quesType": "mcq",
  "op1": "37",
  "op2": "38",
  "op3": "39",
  "op4": "40",
  "ans": "38"
},
{
  "ques": "What is 9 × 11?<br><br>",
  "quesType": "mcq",
  "op1": "97",
  "op2": "98",
  "op3": "99",
  "op4": "100",
  "ans": "99"
},
{
  "ques": "What is 168 ÷ 8?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "21",
  "op3": "22",
  "op4": "23",
  "ans": "21"
},
{
  "ques": "What is 61 + 24?<br><br>",
  "quesType": "mcq",
  "op1": "83",
  "op2": "84",
  "op3": "85",
  "op4": "86",
  "ans": "85"
},
{
  "ques": "What is 120 - 55?<br><br>",
  "quesType": "mcq",
  "op1": "64",
  "op2": "65",
  "op3": "66",
  "op4": "67",
  "ans": "65"
},
{
  "ques": "What is 15 × 4?<br><br>",
  "quesType": "mcq",
  "op1": "58",
  "op2": "59",
  "op3": "60",
  "op4": "61",
  "ans": "60"
},
{
  "ques": "What is 150 ÷ 5?<br><br>",
  "quesType": "mcq",
  "op1": "28",
  "op2": "29",
  "op3": "30",
  "op4": "31",
  "ans": "30"
},
{
  "ques": "What is 45 + 37?<br><br>",
  "quesType": "mcq",
  "op1": "81",
  "op2": "82",
  "op3": "83",
  "op4": "84",
  "ans": "82"
},
{
  "ques": "What is 81 - 26?<br><br>",
  "quesType": "mcq",
  "op1": "54",
  "op2": "55",
  "op3": "56",
  "op4": "57",
  "ans": "55"
}
,
{
  "ques": "What is 2/3 of 150?<br><br>",
  "quesType": "mcq",
  "op1": "80",
  "op2": "90",
  "op3": "100",
  "op4": "110",
  "ans": "100"
},
{
  "ques": "Find the average of 15, 20, 25.<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "20",
  "op3": "21",
  "op4": "22",
  "ans": "20"
},
{
  "ques": "If 25% of a number is 50, what is the number?<br><br>",
  "quesType": "mcq",
  "op1": "150",
  "op2": "180",
  "op3": "200",
  "op4": "220",
  "ans": "200"
},
{
  "ques": "What is the HCF of 30 and 45?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "10",
  "op3": "15",
  "op4": "20",
  "ans": "15"
},
{
  "ques": "What is the LCM of 5 and 12?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "40",
  "op3": "50",
  "op4": "60",
  "ans": "60"
},
{
  "ques": "What is 35% of 200?<br><br>",
  "quesType": "mcq",
  "op1": "60",
  "op2": "65",
  "op3": "70",
  "op4": "75",
  "ans": "70"
},
{
  "ques": "A number minus 40% of it is 30. What is the number?<br><br>",
  "quesType": "mcq",
  "op1": "40",
  "op2": "45",
  "op3": "50",
  "op4": "60",
  "ans": "50"
},
{
  "ques": "If the perimeter of a rectangle is 60 cm and its length is 20 cm, what is its breadth?<br><br>",
  "quesType": "mcq",
  "op1": "5 cm",
  "op2": "10 cm",
  "op3": "15 cm",
  "op4": "20 cm",
  "ans": "10 cm"
},
{
  "ques": "What is 3/5 of 80?<br><br>",
  "quesType": "mcq",
  "op1": "40",
  "op2": "42",
  "op3": "48",
  "op4": "50",
  "ans": "48"
},
{
  "ques": "Find the next term: 5, 10, 20, 40, ?<br><br>",
  "quesType": "mcq",
  "op1": "50",
  "op2": "60",
  "op3": "70",
  "op4": "80",
  "ans": "80"
},
{
  "ques": "A man bought an article for ₹250 and sold it for ₹300. What is the profit %?<br><br>",
  "quesType": "mcq",
  "op1": "15%",
  "op2": "20%",
  "op3": "25%",
  "op4": "30%",
  "ans": "20%"
},
{
  "ques": "If 5x = 45, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "The area of a square is 144 cm². What is its side?<br><br>",
  "quesType": "mcq",
  "op1": "10 cm",
  "op2": "11 cm",
  "op3": "12 cm",
  "op4": "13 cm",
  "ans": "12 cm"
},
{
  "ques": "What is the sum of first 6 odd numbers?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "36",
  "op3": "42",
  "op4": "48",
  "ans": "36"
},
{
  "ques": "If a = 6 and b = 8, what is a² + b²?<br><br>",
  "quesType": "mcq",
  "op1": "80",
  "op2": "90",
  "op3": "100",
  "op4": "110",
  "ans": "100"
},
{
  "ques": "Find the value of 3² × 2³?<br><br>",
  "quesType": "mcq",
  "op1": "36",
  "op2": "48",
  "op3": "54",
  "op4": "72",
  "ans": "72"
},
{
  "ques": "What is the average of 5, 10, 15, 20, 25?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "15",
  "op3": "18",
  "op4": "20",
  "ans": "15"
},
{
  "ques": "Simplify: 144 ÷ (6 × 2)<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "12",
  "op3": "15",
  "op4": "18",
  "ans": "12"
},
{
  "ques": "Which of these is a prime number?<br><br>",
  "quesType": "mcq",
  "op1": "29",
  "op2": "33",
  "op3": "35",
  "op4": "39",
  "ans": "29"
},
{
  "ques": "If the cost of 8 books is ₹400, what is the cost of 1 book?<br><br>",
  "quesType": "mcq",
  "op1": "40",
  "op2": "45",
  "op3": "50",
  "op4": "55",
  "ans": "50"
},
{
  "ques": "What is the product of 2nd, 3rd, and 4th prime numbers?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "70",
  "op3": "105",
  "op4": "110",
  "ans": "105"
},
{
  "ques": "What is ¾ of 80?<br><br>",
  "quesType": "mcq",
  "op1": "50",
  "op2": "55",
  "op3": "60",
  "op4": "65",
  "ans": "60"
},
{
  "ques": "If a bus covers 180 km in 3 hours, what is its speed?<br><br>",
  "quesType": "mcq",
  "op1": "50 km/h",
  "op2": "55 km/h",
  "op3": "60 km/h",
  "op4": "65 km/h",
  "ans": "60 km/h"
},
{
  "ques": "Find the missing term: 2, 5, 10, 17, ?<br><br>",
  "quesType": "mcq",
  "op1": "24",
  "op2": "26",
  "op3": "28",
  "op4": "30",
  "ans": "26"
},
{
  "ques": "A number divided by 4 gives 8. What is the number?<br><br>",
  "quesType": "mcq",
  "op1": "28",
  "op2": "30",
  "op3": "32",
  "op4": "34",
  "ans": "32"
},
{
  "ques": "What is the sum of angles in a quadrilateral?<br><br>",
  "quesType": "mcq",
  "op1": "180°",
  "op2": "270°",
  "op3": "360°",
  "op4": "450°",
  "ans": "360°"
},
{
  "ques": "Find the square root of 289?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "17",
  "op3": "18",
  "op4": "19",
  "ans": "17"
},
{
  "ques": "What is 5! (5 factorial)?<br><br>",
  "quesType": "mcq",
  "op1": "60",
  "op2": "100",
  "op3": "120",
  "op4": "150",
  "ans": "120"
},
{
  "ques": "What is 15² - 5²?<br><br>",
  "quesType": "mcq",
  "op1": "150",
  "op2": "200",
  "op3": "250",
  "op4": "300",
  "ans": "200"
},
{
  "ques": "Which of these is not a perfect square?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "25",
  "op3": "49",
  "op4": "50",
  "ans": "50"
}
,
{
  "ques": "What is 50% of 200?<br><br>",
  "quesType": "mcq",
  "op1": "50",
  "op2": "75",
  "op3": "100",
  "op4": "150",
  "ans": "100"
},
{
  "ques": "What is the square of 7?<br><br>",
  "quesType": "mcq",
  "op1": "42",
  "op2": "47",
  "op3": "49",
  "op4": "56",
  "ans": "49"
},
{
  "ques": "What is 25% of 80?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "18",
  "op3": "20",
  "op4": "25",
  "ans": "20"
},
{
  "ques": "What is the value of 9 × 8?<br><br>",
  "quesType": "mcq",
  "op1": "64",
  "op2": "72",
  "op3": "81",
  "op4": "90",
  "ans": "72"
},
{
  "ques": "What is the smallest prime number?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "2",
  "op4": "3",
  "ans": "2"
},
{
  "ques": "How many sides does a pentagon have?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 100 divided by 4?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "40",
  "ans": "25"
},
{
  "ques": "What is the next prime number after 11?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "13"
},
{
  "ques": "What is the cube of 2?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "6",
  "op3": "8",
  "op4": "10",
  "ans": "8"
},
{
  "ques": "How many degrees in a right angle?<br><br>",
  "quesType": "mcq",
  "op1": "45°",
  "op2": "60°",
  "op3": "90°",
  "op4": "120°",
  "ans": "90°"
},
{
  "ques": "What is the sum of 15 and 28?<br><br>",
  "quesType": "mcq",
  "op1": "42",
  "op2": "43",
  "op3": "44",
  "op4": "45",
  "ans": "43"
},
{
  "ques": "What is 5 squared?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "35",
  "ans": "25"
},
{
  "ques": "What is ¼ of 60?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "12",
  "op3": "15",
  "op4": "20",
  "ans": "15"
},
{
  "ques": "What is 11 × 11?<br><br>",
  "quesType": "mcq",
  "op1": "111",
  "op2": "112",
  "op3": "120",
  "op4": "121",
  "ans": "121"
},
{
  "ques": "Which number is even?<br><br>",
  "quesType": "mcq",
  "op1": "17",
  "op2": "21",
  "op3": "24",
  "op4": "29",
  "ans": "24"
},
{
  "ques": "If 6 pencils cost ₹30, what is the cost of 1 pencil?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is the value of 2² + 3²?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "15",
  "op4": "18",
  "ans": "13"
},
{
  "ques": "If 4 books cost ₹80, what is the cost of 2 books?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "30",
  "op3": "40",
  "op4": "50",
  "ans": "40"
},
{
  "ques": "What is 3 × 12?<br><br>",
  "quesType": "mcq",
  "op1": "32",
  "op2": "34",
  "op3": "36",
  "op4": "38",
  "ans": "36"
},
{
  "ques": "How many sides does a hexagon have?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "6"
},
{
  "ques": "What is the next odd number after 27?<br><br>",
  "quesType": "mcq",
  "op1": "28",
  "op2": "29",
  "op3": "30",
  "op4": "31",
  "ans": "29"
},
{
  "ques": "What is the half of 144?<br><br>",
  "quesType": "mcq",
  "op1": "60",
  "op2": "62",
  "op3": "70",
  "op4": "72",
  "ans": "72"
},
{
  "ques": "Which is a multiple of 9?<br><br>",
  "quesType": "mcq",
  "op1": "25",
  "op2": "27",
  "op3": "31",
  "op4": "35",
  "ans": "27"
},
{
  "ques": "What is 5 × 7?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "32",
  "op3": "34",
  "op4": "35",
  "ans": "35"
},
{
  "ques": "What is 2/3 of 150?<br><br>",
  "quesType": "mcq",
  "op1": "90",
  "op2": "95",
  "op3": "100",
  "op4": "110",
  "ans": "100"
},
{
  "ques": "Which is the smallest odd number?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "2",
  "op4": "3",
  "ans": "1"
},
{
  "ques": "What is the sum of angles in a quadrilateral?<br><br>",
  "quesType": "mcq",
  "op1": "180°",
  "op2": "270°",
  "op3": "360°",
  "op4": "450°",
  "ans": "360°"
},
{
  "ques": "What is the value of 6! (6 factorial)?<br><br>",
  "quesType": "mcq",
  "op1": "600",
  "op2": "720",
  "op3": "840",
  "op4": "960",
  "ans": "720"
},
{
  "ques": "Which is a factor of 45?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is 15 + 35?<br><br>",
  "quesType": "mcq",
  "op1": "40",
  "op2": "45",
  "op3": "50",
  "op4": "55",
  "ans": "50"
}
,
{
  "ques": "What is 2/3 of 81?<br><br>",
  "quesType": "mcq",
  "op1": "50",
  "op2": "52",
  "op3": "54",
  "op4": "56",
  "ans": "54"
},
{
  "ques": "What is the average of 5, 15, and 25?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "15",
  "op3": "20",
  "op4": "25",
  "ans": "15"
},
{
  "ques": "If 25% of a number is 45, what is the number?<br><br>",
  "quesType": "mcq",
  "op1": "150",
  "op2": "160",
  "op3": "170",
  "op4": "180",
  "ans": "180"
},
{
  "ques": "What is the HCF of 30 and 45?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "10",
  "op3": "15",
  "op4": "20",
  "ans": "15"
},
{
  "ques": "What is the LCM of 9 and 12?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "24",
  "op3": "27",
  "op4": "36",
  "ans": "36"
},
{
  "ques": "What is 20% of 350?<br><br>",
  "quesType": "mcq",
  "op1": "60",
  "op2": "65",
  "op3": "70",
  "op4": "75",
  "ans": "70"
},
{
  "ques": "A number minus its third is 40. What is the number?<br><br>",
  "quesType": "mcq",
  "op1": "50",
  "op2": "55",
  "op3": "60",
  "op4": "60"
  ,
  "ans": "60"
},
{
  "ques": "If the perimeter of a square is 64 cm, what is its side?<br><br>",
  "quesType": "mcq",
  "op1": "14 cm",
  "op2": "15 cm",
  "op3": "16 cm",
  "op4": "17 cm",
  "ans": "16 cm"
},
{
  "ques": "What is 3/5 of 200?<br><br>",
  "quesType": "mcq",
  "op1": "100",
  "op2": "110",
  "op3": "120",
  "op4": "130",
  "ans": "120"
},
{
  "ques": "Find the next term: 3, 6, 12, 24, ?<br><br>",
  "quesType": "mcq",
  "op1": "36",
  "op2": "40",
  "op3": "48",
  "op4": "54",
  "ans": "48"
},
{
  "ques": "A shopkeeper buys for ₹200 and sells for ₹260. What is the profit %?<br><br>",
  "quesType": "mcq",
  "op1": "25%",
  "op2": "30%",
  "op3": "35%",
  "op4": "40%",
  "ans": "30%"
},
{
  "ques": "If 8y = 64, what is y?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "8"
},
{
  "ques": "Area of rectangle is 80 cm², length is 10 cm, find breadth.<br><br>",
  "quesType": "mcq",
  "op1": "6 cm",
  "op2": "7 cm",
  "op3": "8 cm",
  "op4": "9 cm",
  "ans": "8 cm"
},
{
  "ques": "Sum of first 6 odd numbers?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "36",
  "op3": "42",
  "op4": "48",
  "ans": "36"
},
{
  "ques": "If a = 4 and b = 6, a² + b² = ?<br><br>",
  "quesType": "mcq",
  "op1": "36",
  "op2": "40",
  "op3": "52",
  "op4": "56",
  "ans": "52"
},
{
  "ques": "Find 3³ × 2²<br><br>",
  "quesType": "mcq",
  "op1": "24",
  "op2": "27",
  "op3": "32",
  "op4": "72",
  "ans": "72"
},
{
  "ques": "Average of 15, 25, 35?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "35",
  "ans": "25"
},
{
  "ques": "Simplify: 200 ÷ (4 × 5)<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "10",
  "op3": "12",
  "op4": "15",
  "ans": "10"
},
{
  "ques": "Which is a prime number?<br><br>",
  "quesType": "mcq",
  "op1": "33",
  "op2": "37",
  "op3": "39",
  "op4": "49",
  "ans": "37"
},
{
  "ques": "Cost of 4 books is ₹160, cost of 1 book?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "35",
  "op3": "40",
  "op4": "45",
  "ans": "40"
},
{
  "ques": "Product of first four prime numbers?<br><br>",
  "quesType": "mcq",
  "op1": "120",
  "op2": "130",
  "op3": "140",
  "op4": "150",
  "ans": "210"
},
{
  "ques": "What is ¾ of 80?<br><br>",
  "quesType": "mcq",
  "op1": "50",
  "op2": "55",
  "op3": "60",
  "op4": "65",
  "ans": "60"
},
{
  "ques": "Train travels 150 km in 3 hrs. Speed?<br><br>",
  "quesType": "mcq",
  "op1": "40 km/h",
  "op2": "50 km/h",
  "op3": "60 km/h",
  "op4": "70 km/h",
  "ans": "50 km/h"
},
{
  "ques": "Find missing: 4, 8, 16, ?, 64<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "24",
  "op3": "28",
  "op4": "32",
  "ans": "32"
},
{
  "ques": "Number divided by 4 is 11. Number?<br><br>",
  "quesType": "mcq",
  "op1": "40",
  "op2": "42",
  "op3": "44",
  "op4": "45",
  "ans": "44"
},
{
  "ques": "Sum of angles in a quadrilateral?<br><br>",
  "quesType": "mcq",
  "op1": "180°",
  "op2": "270°",
  "op3": "360°",
  "op4": "450°",
  "ans": "360°"
},
{
  "ques": "Square root of 400?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "19",
  "op3": "20",
  "op4": "21",
  "ans": "20"
},
{
  "ques": "What is 5! (5 factorial)?<br><br>",
  "quesType": "mcq",
  "op1": "100",
  "op2": "110",
  "op3": "120",
  "op4": "130",
  "ans": "120"
},
{
  "ques": "What is 12² - 8²?<br><br>",
  "quesType": "mcq",
  "op1": "80",
  "op2": "88",
  "op3": "96",
  "op4": "100",
  "ans": "80"
},
{
  "ques": "Which is a perfect square?<br><br>",
  "quesType": "mcq",
  "op1": "45",
  "op2": "49",
  "op3": "51",
  "op4": "53",
  "ans": "49"
}
,
{
  "ques": "What is 40% of 250?<br><br>",
  "quesType": "mcq",
  "op1": "80",
  "op2": "90",
  "op3": "100",
  "op4": "110",
  "ans": "100"
},
{
  "ques": "Find the average of 8, 12, 16, 20.<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "14",
  "op3": "16",
  "op4": "18",
  "ans": "14"
},
{
  "ques": "If 10% of a number is 25, what is the number?<br><br>",
  "quesType": "mcq",
  "op1": "150",
  "op2": "200",
  "op3": "250",
  "op4": "300",
  "ans": "250"
},
{
  "ques": "What is the HCF of 18 and 42?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "8",
  "op3": "12",
  "op4": "18",
  "ans": "6"
},
{
  "ques": "What is the LCM of 9 and 12?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "24",
  "op3": "36",
  "op4": "48",
  "ans": "36"
},
{
  "ques": "What is 25% of 320?<br><br>",
  "quesType": "mcq",
  "op1": "60",
  "op2": "70",
  "op3": "80",
  "op4": "90",
  "ans": "80"
},
{
  "ques": "A number plus its 50% is 180. What is the number?<br><br>",
  "quesType": "mcq",
  "op1": "100",
  "op2": "110",
  "op3": "120",
  "op4": "130",
  "ans": "120"
},
{
  "ques": "If the perimeter of a triangle is 60 cm and two sides are 20 cm and 15 cm, what is the third side?<br><br>",
  "quesType": "mcq",
  "op1": "20 cm",
  "op2": "25 cm",
  "op3": "30 cm",
  "op4": "35 cm",
  "ans": "25 cm"
},
{
  "ques": "What is 5/8 of 80?<br><br>",
  "quesType": "mcq",
  "op1": "40",
  "op2": "45",
  "op3": "50",
  "op4": "55",
  "ans": "50"
},
{
  "ques": "Find the next term: 3, 6, 12, 24, ?<br><br>",
  "quesType": "mcq",
  "op1": "36",
  "op2": "40",
  "op3": "48",
  "op4": "50",
  "ans": "48"
},
{
  "ques": "A trader bought an item for ₹400 and sold it for ₹500. What is the profit %?<br><br>",
  "quesType": "mcq",
  "op1": "20%",
  "op2": "25%",
  "op3": "30%",
  "op4": "35%",
  "ans": "25%"
},
{
  "ques": "If 4x = 64, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "14",
  "op3": "16",
  "op4": "18",
  "ans": "16"
},
{
  "ques": "The area of a rectangle is 96 cm² and its length is 12 cm. What is its breadth?<br><br>",
  "quesType": "mcq",
  "op1": "6 cm",
  "op2": "7 cm",
  "op3": "8 cm",
  "op4": "9 cm",
  "ans": "8 cm"
},
{
  "ques": "What is the sum of first 8 odd numbers?<br><br>",
  "quesType": "mcq",
  "op1": "56",
  "op2": "60",
  "op3": "64",
  "op4": "72",
  "ans": "64"
},
{
  "ques": "If a = 4 and b = 9, what is a² + b²?<br><br>",
  "quesType": "mcq",
  "op1": "70",
  "op2": "81",
  "op3": "97",
  "op4": "100",
  "ans": "97"
},
{
  "ques": "Find the value of 4² × 3²?<br><br>",
  "quesType": "mcq",
  "op1": "64",
  "op2": "72",
  "op3": "96",
  "op4": "144",
  "ans": "144"
},
{
  "ques": "What is the average of 5, 15, 25, 35?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "20",
  "op3": "25",
  "op4": "30",
  "ans": "20"
},
{
  "ques": "Simplify: 180 ÷ (5 × 3)<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "12",
  "op3": "15",
  "op4": "18",
  "ans": "12"
},
{
  "ques": "Which of these is a prime number?<br><br>",
  "quesType": "mcq",
  "op1": "31",
  "op2": "33",
  "op3": "35",
  "op4": "39",
  "ans": "31"
},
{
  "ques": "If the cost of 10 pencils is ₹90, what is the cost of 1 pencil?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "What is the product of 3rd and 5th prime numbers?<br><br>",
  "quesType": "mcq",
  "op1": "21",
  "op2": "35",
  "op3": "55",
  "op4": "77",
  "ans": "35"
},
{
  "ques": "What is ⅗ of 75?<br><br>",
  "quesType": "mcq",
  "op1": "40",
  "op2": "42",
  "op3": "45",
  "op4": "48",
  "ans": "45"
},
{
  "ques": "If a car travels 240 km in 4 hours, what is its speed?<br><br>",
  "quesType": "mcq",
  "op1": "50 km/h",
  "op2": "55 km/h",
  "op3": "60 km/h",
  "op4": "65 km/h",
  "ans": "60 km/h"
},
{
  "ques": "Find the missing term: 4, 9, 16, 25, ?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "35",
  "op3": "36",
  "op4": "49",
  "ans": "36"
},
{
  "ques": "A number divided by 3 gives 12. What is the number?<br><br>",
  "quesType": "mcq",
  "op1": "32",
  "op2": "33",
  "op3": "35",
  "op4": "36",
  "ans": "36"
},
{
  "ques": "What is the sum of angles in a pentagon?<br><br>",
  "quesType": "mcq",
  "op1": "360°",
  "op2": "450°",
  "op3": "540°",
  "op4": "600°",
  "ans": "540°"
},
{
  "ques": "Find the square root of 400?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "19",
  "op3": "20",
  "op4": "21",
  "ans": "20"
},
{
  "ques": "What is 6! (6 factorial)?<br><br>",
  "quesType": "mcq",
  "op1": "480",
  "op2": "600",
  "op3": "720",
  "op4": "840",
  "ans": "720"
},
{
  "ques": "What is 12² - 7²?<br><br>",
  "quesType": "mcq",
  "op1": "95",
  "op2": "105",
  "op3": "115",
  "op4": "125",
  "ans": "95"
},
{
  "ques": "Which of these is not a perfect square?<br><br>",
  "quesType": "mcq",
  "op1": "64",
  "op2": "81",
  "op3": "100",
  "op4": "105",
  "ans": "105"
}
,
{
  "ques": "What is 20% of 150?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "35",
  "ans": "30"
},
{
  "ques": "What is the square root of 81?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "12",
  "ans": "9"
},
{
  "ques": "What is ⅕ of 200?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "30",
  "op3": "40",
  "op4": "50",
  "ans": "40"
},
{
  "ques": "What is 15 × 3?<br><br>",
  "quesType": "mcq",
  "op1": "35",
  "op2": "40",
  "op3": "45",
  "op4": "50",
  "ans": "45"
},
{
  "ques": "What is the value of 7²?<br><br>",
  "quesType": "mcq",
  "op1": "47",
  "op2": "48",
  "op3": "49",
  "op4": "50",
  "ans": "49"
},
{
  "ques": "How many sides does an octagon have?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "8"
},
{
  "ques": "What is 5³?<br><br>",
  "quesType": "mcq",
  "op1": "100",
  "op2": "120",
  "op3": "125",
  "op4": "150",
  "ans": "125"
},
{
  "ques": "What is 12 × 5?<br><br>",
  "quesType": "mcq",
  "op1": "50",
  "op2": "55",
  "op3": "60",
  "op4": "65",
  "ans": "60"
},
{
  "ques": "What is the HCF of 14 and 21?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "7"
},
{
  "ques": "If 50 ÷ 2 = ?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "35",
  "ans": "25"
},
{
  "ques": "What is ⅖ of 100?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "30",
  "op3": "40",
  "op4": "50",
  "ans": "40"
},
{
  "ques": "What is 9 × 9?<br><br>",
  "quesType": "mcq",
  "op1": "80",
  "op2": "81",
  "op3": "82",
  "op4": "83",
  "ans": "81"
},
{
  "ques": "What is 1/3 of 90?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "35",
  "ans": "30"
},
{
  "ques": "How many degrees in a straight angle?<br><br>",
  "quesType": "mcq",
  "op1": "90°",
  "op2": "120°",
  "op3": "150°",
  "op4": "180°",
  "ans": "180°"
},
{
  "ques": "What is the next term: 3, 6, 12, 24, ?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "36",
  "op3": "40",
  "op4": "48",
  "ans": "48"
},
{
  "ques": "What is 4 squared plus 5 squared?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "31",
  "op3": "32",
  "op4": "41",
  "ans": "41"
},
{
  "ques": "What is the LCM of 5 and 10?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "15",
  "op3": "20",
  "op4": "25",
  "ans": "10"
},
{
  "ques": "What is the sum of first 4 even numbers?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "20",
  "op3": "24",
  "op4": "30",
  "ans": "20"
},
{
  "ques": "What is ⅗ of 50?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "35",
  "ans": "30"
},
{
  "ques": "What is 8 × 7?<br><br>",
  "quesType": "mcq",
  "op1": "54",
  "op2": "55",
  "op3": "56",
  "op4": "57",
  "ans": "56"
},
{
  "ques": "What is 18 ÷ 3?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "6"
},
{
  "ques": "What is the sum of angles in a rectangle?<br><br>",
  "quesType": "mcq",
  "op1": "180°",
  "op2": "270°",
  "op3": "360°",
  "op4": "450°",
  "ans": "360°"
},
{
  "ques": "What is 2 × 15?<br><br>",
  "quesType": "mcq",
  "op1": "25",
  "op2": "30",
  "op3": "35",
  "op4": "40",
  "ans": "30"
},
{
  "ques": "How many minutes in 2 hours?<br><br>",
  "quesType": "mcq",
  "op1": "90",
  "op2": "100",
  "op3": "110",
  "op4": "120",
  "ans": "120"
},
{
  "ques": "What is the next prime number after 17?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "19",
  "op3": "20",
  "op4": "21",
  "ans": "19"
},
{
  "ques": "What is 6 squared?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "36",
  "op3": "42",
  "op4": "48",
  "ans": "36"
},
{
  "ques": "How many days in a week?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "7"
},
{
  "ques": "Which is a factor of 60?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "10",
  "op4": "All of these",
  "ans": "All of these"
},
{
  "ques": "What is 20 + 30?<br><br>",
  "quesType": "mcq",
  "op1": "40",
  "op2": "50",
  "op3": "60",
  "op4": "70",
  "ans": "50"
},
{
  "ques": "What is the next term: 1, 4, 9, 16, ?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "24",
  "op3": "25",
  "op4": "36",
  "ans": "25"
}
,
{
  "ques": "What is 4/5 of 75?<br><br>",
  "quesType": "mcq",
  "op1": "55",
  "op2": "60",
  "op3": "65",
  "op4": "70",
  "ans": "60"
},
{
  "ques": "What is the average of 8, 12, 20?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "13.33"
},
{
  "ques": "If 30% of a number is 75, find the number.<br><br>",
  "quesType": "mcq",
  "op1": "225",
  "op2": "230",
  "op3": "240",
  "op4": "250",
  "ans": "250"
},
{
  "ques": "HCF of 35 and 50?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "10",
  "op3": "15",
  "op4": "20",
  "ans": "5"
},
{
  "ques": "LCM of 5 and 12?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "40",
  "op3": "50",
  "op4": "60",
  "ans": "60"
},
{
  "ques": "What is 12.5% of 320?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "35",
  "op3": "40",
  "op4": "50",
  "ans": "40"
},
{
  "ques": "A number minus its quarter is 45. Find the number.<br><br>",
  "quesType": "mcq",
  "op1": "50",
  "op2": "55",
  "op3": "60",
  "op4": "65",
  "ans": "60"
},
{
  "ques": "Perimeter of square is 40 cm, side is?<br><br>",
  "quesType": "mcq",
  "op1": "8 cm",
  "op2": "9 cm",
  "op3": "10 cm",
  "op4": "11 cm",
  "ans": "10 cm"
},
{
  "ques": "What is 4/7 of 210?<br><br>",
  "quesType": "mcq",
  "op1": "110",
  "op2": "120",
  "op3": "125",
  "op4": "140",
  "ans": "120"
},
{
  "ques": "Next term: 1, 4, 9, 16, ?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "36",
  "ans": "25"
},
{
  "ques": "Cost price ₹400, selling price ₹460. Profit %?<br><br>",
  "quesType": "mcq",
  "op1": "10%",
  "op2": "12%",
  "op3": "15%",
  "op4": "20%",
  "ans": "15%"
},
{
  "ques": "If 5m = 35, what is m?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "7"
},
{
  "ques": "Rectangle area 144 cm², length 12 cm. Breadth?<br><br>",
  "quesType": "mcq",
  "op1": "10 cm",
  "op2": "11 cm",
  "op3": "12 cm",
  "op4": "13 cm",
  "ans": "12 cm"
},
{
  "ques": "Sum of first 7 odd numbers?<br><br>",
  "quesType": "mcq",
  "op1": "49",
  "op2": "56",
  "op3": "63",
  "op4": "70",
  "ans": "49"
},
{
  "ques": "If x=2, y=5, find x² + y²?<br><br>",
  "quesType": "mcq",
  "op1": "25",
  "op2": "27",
  "op3": "29",
  "op4": "29",
  "ans": "29"
},
{
  "ques": "Value of 4³ × 2²?<br><br>",
  "quesType": "mcq",
  "op1": "64",
  "op2": "96",
  "op3": "128",
  "op4": "256",
  "ans": "128"
},
{
  "ques": "Average of 25, 35, 45?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "35",
  "op3": "40",
  "op4": "45",
  "ans": "35"
},
{
  "ques": "Simplify: 120 ÷ (3 × 4)<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "10",
  "op3": "12",
  "op4": "14",
  "ans": "10"
},
{
  "ques": "Which number is prime?<br><br>",
  "quesType": "mcq",
  "op1": "51",
  "op2": "53",
  "op3": "55",
  "op4": "57",
  "ans": "53"
},
{
  "ques": "Cost of 3 bags ₹270. Cost of 1 bag?<br><br>",
  "quesType": "mcq",
  "op1": "80",
  "op2": "85",
  "op3": "90",
  "op4": "95",
  "ans": "90"
},
{
  "ques": "Product of first five prime numbers?<br><br>",
  "quesType": "mcq",
  "op1": "210",
  "op2": "2310",
  "op3": "231",
  "op4": "330",
  "ans": "2310"
},
{
  "ques": "What is ⅗ of 150?<br><br>",
  "quesType": "mcq",
  "op1": "75",
  "op2": "80",
  "op3": "85",
  "op4": "90",
  "ans": "90"
},
{
  "ques": "Speed if 200 km in 4 hours?<br><br>",
  "quesType": "mcq",
  "op1": "40 km/h",
  "op2": "45 km/h",
  "op3": "50 km/h",
  "op4": "55 km/h",
  "ans": "50 km/h"
},
{
  "ques": "Find missing: 6, 12, 24, ?, 96<br><br>",
  "quesType": "mcq",
  "op1": "36",
  "op2": "40",
  "op3": "42",
  "op4": "48",
  "ans": "48"
},
{
  "ques": "Number divided by 8 is 9. Number?<br><br>",
  "quesType": "mcq",
  "op1": "64",
  "op2": "70",
  "op3": "72",
  "op4": "75",
  "ans": "72"
},
{
  "ques": "Sum of angles in pentagon?<br><br>",
  "quesType": "mcq",
  "op1": "360°",
  "op2": "540°",
  "op3": "720°",
  "op4": "900°",
  "ans": "540°"
},
{
  "ques": "Square root of 625?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "22",
  "op3": "24",
  "op4": "25",
  "ans": "25"
},
{
  "ques": "What is 6! (6 factorial)?<br><br>",
  "quesType": "mcq",
  "op1": "620",
  "op2": "700",
  "op3": "720",
  "op4": "750",
  "ans": "720"
},
{
  "ques": "12² - 5²?<br><br>",
  "quesType": "mcq",
  "op1": "100",
  "op2": "104",
  "op3": "119",
  "op4": "144",
  "ans": "119"
},
{
  "ques": "Which is a perfect square?<br><br>",
  "quesType": "mcq",
  "op1": "55",
  "op2": "60",
  "op3": "64",
  "op4": "70",
  "ans": "64"
}


]

let codingmaths3Arr=[
  {
  "ques": "If x² = 121, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "9",
  "op2": "10",
  "op3": "11",
  "op4": "12",
  "ans": "11"
},
{
  "ques": "What is the cube root of 512?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "8"
},
{
  "ques": "What is the value of 2⁵?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "24",
  "op3": "32",
  "op4": "40",
  "ans": "32"
},
{
  "ques": "If a : b = 2 : 3 and b : c = 4 : 5, what is a : c?<br><br>",
  "quesType": "mcq",
  "op1": "8 : 15",
  "op2": "4 : 5",
  "op3": "2 : 5",
  "op4": "3 : 5",
  "ans": "8 : 15"
},
{
  "ques": "If 25% of x is 45, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "160",
  "op2": "170",
  "op3": "180",
  "op4": "190",
  "ans": "180"
},
{
  "ques": "If 5 men can do a work in 12 days, how many days will 10 men take?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "6"
},
{
  "ques": "A sum becomes ₹4840 in 2 years at 10% p.a. simple interest. What is the principal?<br><br>",
  "quesType": "mcq",
  "op1": "4000",
  "op2": "4200",
  "op3": "4400",
  "op4": "4600",
  "ans": "4000"
},
{
  "ques": "If √x = 7, then x = ?<br><br>",
  "quesType": "mcq",
  "op1": "47",
  "op2": "49",
  "op3": "56",
  "op4": "63",
  "ans": "49"
},
{
  "ques": "LCM of 14, 28, and 56 is?<br><br>",
  "quesType": "mcq",
  "op1": "56",
  "op2": "84",
  "op3": "112",
  "op4": "168",
  "ans": "56"
},
{
  "ques": "HCF of 72 and 120 is?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "18",
  "op3": "24",
  "op4": "36",
  "ans": "24"
},
{
  "ques": "What is the next prime number after 47?<br><br>",
  "quesType": "mcq",
  "op1": "49",
  "op2": "51",
  "op3": "53",
  "op4": "55",
  "ans": "53"
},
{
  "ques": "How many odd numbers are there between 10 and 50?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "19",
  "op3": "20",
  "op4": "21",
  "ans": "20"
},
{
  "ques": "If 2x + 3 = 17, x = ?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "7"
},
{
  "ques": "Compound interest on ₹1000 for 2 years at 5% p.a. is?<br><br>",
  "quesType": "mcq",
  "op1": "102.5",
  "op2": "105",
  "op3": "110.25",
  "op4": "115",
  "ans": "102.5"
},
{
  "ques": "The square of 15 plus the square of 8 is?<br><br>",
  "quesType": "mcq",
  "op1": "289",
  "op2": "305",
  "op3": "314",
  "op4": "325",
  "ans": "289"
},
{
  "ques": "Which is divisible by 9?<br><br>",
  "quesType": "mcq",
  "op1": "234",
  "op2": "333",
  "op3": "423",
  "op4": "729",
  "ans": "729"
},
{
  "ques": "What is the median of 5, 7, 9, 11, 13?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "9",
  "op3": "11",
  "op4": "13",
  "ans": "9"
},
{
  "ques": "What is the mode of 2, 2, 3, 4, 4, 4, 5?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "4"
},
{
  "ques": "12% of 250 + 8% of 500 = ?<br><br>",
  "quesType": "mcq",
  "op1": "50",
  "op2": "60",
  "op3": "70",
  "op4": "80",
  "ans": "70"
},
{
  "ques": "What is the next term: 3, 9, 27, ?<br><br>",
  "quesType": "mcq",
  "op1": "54",
  "op2": "72",
  "op3": "81",
  "op4": "90",
  "ans": "81"
},
{
  "ques": "A number is divisible by 2 and 3 but not by 4. Which could it be?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "12",
  "op3": "18",
  "op4": "30",
  "ans": "6"
},
{
  "ques": "LCM of 8, 12 and 15 is?<br><br>",
  "quesType": "mcq",
  "op1": "60",
  "op2": "120",
  "op3": "240",
  "op4": "360",
  "ans": "120"
},
{
  "ques": "Which number is a multiple of both 7 and 11?<br><br>",
  "quesType": "mcq",
  "op1": "49",
  "op2": "66",
  "op3": "77",
  "op4": "99",
  "ans": "77"
},
{
  "ques": "What is the value of 5³?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "25",
  "op3": "75",
  "op4": "125",
  "ans": "125"
},
{
  "ques": "How many factors does 36 have?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "8",
  "op3": "9",
  "op4": "12",
  "ans": "9"
},
{
  "ques": "If 3/5 of a number is 60, what is the number?<br><br>",
  "quesType": "mcq",
  "op1": "80",
  "op2": "90",
  "op3": "100",
  "op4": "110",
  "ans": "100"
},
{
  "ques": "Find the missing number: 4, 16, 36, ?<br><br>",
  "quesType": "mcq",
  "op1": "49",
  "op2": "64",
  "op3": "81",
  "op4": "100",
  "ans": "64"
},
{
  "ques": "Find the next odd prime after 31.<br><br>",
  "quesType": "mcq",
  "op1": "33",
  "op2": "35",
  "op3": "37",
  "op4": "39",
  "ans": "37"
},
{
  "ques": "Which number is divisible by 5 and 6?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "30",
  "op3": "40",
  "op4": "50",
  "ans": "30"
},
{
  "ques": "The sum of the first 5 even numbers is?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "20",
  "op3": "30",
  "op4": "40",
  "ans": "30"
}
,
{
  "ques": "If 3x + 5 = 20, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "5"
},
{
  "ques": "If log₁₀ 1000 = x, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "1",
  "op2": "2",
  "op3": "3",
  "op4": "4",
  "ans": "3"
},
{
  "ques": "If a² - b² = 0 and a = 5, what is b?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "2",
  "op3": "5",
  "op4": "10",
  "ans": "5"
},
{
  "ques": "If a circle has a radius of 7 cm, what is its area? (π = 22/7)<br><br>",
  "quesType": "mcq",
  "op1": "144 cm²",
  "op2": "154 cm²",
  "op3": "164 cm²",
  "op4": "174 cm²",
  "ans": "154 cm²"
},
{
  "ques": "Find x: 2x + 3 = 5x - 6<br><br>",
  "quesType": "mcq",
  "op1": "1",
  "op2": "2",
  "op3": "3",
  "op4": "4",
  "ans": "3"
},
{
  "ques": "If 2⁴ × 2³ = 2ˣ, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "7"
},
{
  "ques": "What is the value of √(144)?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "If a:b = 2:3 and b:c = 4:5, what is a:c?<br><br>",
  "quesType": "mcq",
  "op1": "8:15",
  "op2": "5:8",
  "op3": "3:4",
  "op4": "2:5",
  "ans": "8:15"
},
{
  "ques": "If the sum of angles in a polygon is 540°, how many sides does it have?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "If x² = 49, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "7"
},
{
  "ques": "If a triangle has sides 3 cm, 4 cm, 5 cm, what type is it?<br><br>",
  "quesType": "mcq",
  "op1": "Equilateral",
  "op2": "Isosceles",
  "op3": "Right-angled",
  "op4": "Scalene",
  "ans": "Right-angled"
},
{
  "ques": "If 5! = ?<br><br>",
  "quesType": "mcq",
  "op1": "100",
  "op2": "110",
  "op3": "120",
  "op4": "130",
  "ans": "120"
},
{
  "ques": "Find the value of x: 2(x + 3) = 16<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "What is the sum of interior angles of an octagon?<br><br>",
  "quesType": "mcq",
  "op1": "720°",
  "op2": "1080°",
  "op3": "1260°",
  "op4": "1440°",
  "ans": "1080°"
},
{
  "ques": "If 2x - 5 = 11, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "8"
},
{
  "ques": "Find the next term: 2, 5, 10, 17, ?<br><br>",
  "quesType": "mcq",
  "op1": "24",
  "op2": "26",
  "op3": "28",
  "op4": "30",
  "ans": "26"
},
{
  "ques": "If 3 consecutive odd numbers add to 45, what is the largest?<br><br>",
  "quesType": "mcq",
  "op1": "13",
  "op2": "15",
  "op3": "17",
  "op4": "19",
  "ans": "17"
},
{
  "ques": "If a = 2 and b = 3, what is (a + b)²?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "20",
  "op3": "25",
  "op4": "30",
  "ans": "25"
},
{
  "ques": "What is the quadratic formula used for?<br><br>",
  "quesType": "mcq",
  "op1": "Solving cubic equations",
  "op2": "Solving linear equations",
  "op3": "Solving quadratic equations",
  "op4": "Finding HCF",
  "ans": "Solving quadratic equations"
},
{
  "ques": "If (x + 2)(x - 2) = ?<br><br>",
  "quesType": "mcq",
  "op1": "x² + 4",
  "op2": "x² - 4",
  "op3": "x² - 2",
  "op4": "x² + 2",
  "ans": "x² - 4"
},
{
  "ques": "What is the value of log₂ 8?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "3"
},
{
  "ques": "What is the mean of 5, 10, 15, 20, 25?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "15",
  "op3": "20",
  "op4": "25",
  "ans": "15"
},
{
  "ques": "If sin 30° = ?<br><br>",
  "quesType": "mcq",
  "op1": "1/2",
  "op2": "√2/2",
  "op3": "√3/2",
  "op4": "1",
  "ans": "1/2"
},
{
  "ques": "What is the sum of squares of first 2 natural numbers?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "5",
  "op3": "7",
  "op4": "9",
  "ans": "5"
},
{
  "ques": "What is the compound interest on ₹1000 for 2 years at 10% p.a.?<br><br>",
  "quesType": "mcq",
  "op1": "200",
  "op2": "210",
  "op3": "220",
  "op4": "230",
  "ans": "210"
},
{
  "ques": "Find the mode: 2, 4, 4, 5, 6<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "4"
},
{
  "ques": "If x = -2, what is x³?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "-2",
  "op3": "-4",
  "op4": "-8",
  "ans": "-8"
},
{
  "ques": "If the radius of a circle is doubled, its area becomes?<br><br>",
  "quesType": "mcq",
  "op1": "Double",
  "op2": "Triple",
  "op3": "Four times",
  "op4": "Eight times",
  "ans": "Four times"
},
{
  "ques": "If 2a + 3b = 12 and b = 2, find a.<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "3"
},
{
  "ques": "If the average of 3 numbers is 20 and two numbers are 15 and 25, find the third.<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "20",
  "op3": "25",
  "op4": "30",
  "ans": "20"
}
,
{
  "ques": "What is the value of √(144) + √(81)?<br><br>",
  "quesType": "mcq",
  "op1": "21",
  "op2": "22",
  "op3": "23",
  "op4": "24",
  "ans": "21"
},
{
  "ques": "If x² = 49, what is x (positive root)?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "7"
},
{
  "ques": "What is the remainder when 235 is divided by 6?<br><br>",
  "quesType": "mcq",
  "op1": "1",
  "op2": "2",
  "op3": "3",
  "op4": "5",
  "ans": "1"
},
{
  "ques": "If log₁₀ 1000 = x, find x.<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "3"
},
{
  "ques": "Find the value of 2⁵ × 2³.<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "32",
  "op3": "64",
  "op4": "256",
  "ans": "256"
},
{
  "ques": "What is the sum of all angles in a hexagon?<br><br>",
  "quesType": "mcq",
  "op1": "360°",
  "op2": "540°",
  "op3": "720°",
  "op4": "900°",
  "ans": "720°"
},
{
  "ques": "Find the next term: 3, 6, 12, 24, ?<br><br>",
  "quesType": "mcq",
  "op1": "36",
  "op2": "48",
  "op3": "50",
  "op4": "60",
  "ans": "48"
},
{
  "ques": "If 2/3 of a number is 50, what is the number?<br><br>",
  "quesType": "mcq",
  "op1": "70",
  "op2": "75",
  "op3": "80",
  "op4": "90",
  "ans": "75"
},
{
  "ques": "The HCF of 48 and 180 is:<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "18",
  "op3": "24",
  "op4": "36",
  "ans": "12"
},
{
  "ques": "If x = 2, y = 3, z = 4, find xyz.<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "20",
  "op3": "24",
  "op4": "30",
  "ans": "24"
},
{
  "ques": "If simple interest on ₹4000 at 5% for 2 years is ?<br><br>",
  "quesType": "mcq",
  "op1": "200",
  "op2": "300",
  "op3": "400",
  "op4": "500",
  "ans": "400"
},
{
  "ques": "LCM of 14 and 35?<br><br>",
  "quesType": "mcq",
  "op1": "70",
  "op2": "105",
  "op3": "140",
  "op4": "210",
  "ans": "70"
},
{
  "ques": "If 5 workers do a job in 6 days, how long for 10 workers?<br><br>",
  "quesType": "mcq",
  "op1": "2 days",
  "op2": "3 days",
  "op3": "4 days",
  "op4": "5 days",
  "ans": "3 days"
},
{
  "ques": "If side of a cube is 5 cm, its volume is?<br><br>",
  "quesType": "mcq",
  "op1": "100",
  "op2": "125",
  "op3": "150",
  "op4": "200",
  "ans": "125"
},
{
  "ques": "Solve: 2x + 3 = 11.<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "4"
},
{
  "ques": "Area of circle with radius 7 cm (π = 22/7)?<br><br>",
  "quesType": "mcq",
  "op1": "120",
  "op2": "132",
  "op3": "144",
  "op4": "154",
  "ans": "154"
},
{
  "ques": "How many 3-digit numbers can be formed with 1,2,3 without repetition?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "6"
},
{
  "ques": "What is the value of 0! ?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "2",
  "op4": "Undefined",
  "ans": "1"
},
{
  "ques": "If 10% of a number is 25, what is 20%?<br><br>",
  "quesType": "mcq",
  "op1": "50",
  "op2": "55",
  "op3": "60",
  "op4": "65",
  "ans": "50"
},
{
  "ques": "A:B = 2:3, B:C = 4:5, A:C = ?<br><br>",
  "quesType": "mcq",
  "op1": "6:5",
  "op2": "8:15",
  "op3": "4:5",
  "op4": "2:5",
  "ans": "8:15"
},
{
  "ques": "Find the 6th term: 2, 5, 10, 17, 26, ?<br><br>",
  "quesType": "mcq",
  "op1": "37",
  "op2": "38",
  "op3": "39",
  "op4": "40",
  "ans": "37"
},
{
  "ques": "Which is a multiple of both 6 and 8?<br><br>",
  "quesType": "mcq",
  "op1": "24",
  "op2": "36",
  "op3": "48",
  "op4": "60",
  "ans": "24"
},
{
  "ques": "In how many ways can 3 books be arranged?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "6"
},
{
  "ques": "Solve: x/4 = 5.<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "18",
  "op3": "20",
  "op4": "22",
  "ans": "20"
},
{
  "ques": "If 5x = 2y and x = 10, find y.<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "40",
  "ans": "25"
},
{
  "ques": "What is 15% of 300 plus 5% of 200?<br><br>",
  "quesType": "mcq",
  "op1": "55",
  "op2": "60",
  "op3": "65",
  "op4": "70",
  "ans": "55"
},
{
  "ques": "Which is not prime?<br><br>",
  "quesType": "mcq",
  "op1": "31",
  "op2": "33",
  "op3": "37",
  "op4": "41",
  "ans": "33"
},
{
  "ques": "Which is a factor of 72?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "12",
  "op4": "All",
  "ans": "All"
},
{
  "ques": "The square of which number is 196?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "14"
},
{
  "ques": "Value of (2³)² is ?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "32",
  "op3": "64",
  "op4": "128",
  "ans": "64"
}
,
{
  "ques": "If √x = 5, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "20",
  "op3": "25",
  "op4": "30",
  "ans": "25"
},
{
  "ques": "If 3x = 2y and y = 9, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "6"
},
{
  "ques": "What is the value of (5²) – (3²)?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "16",
  "op3": "18",
  "op4": "20",
  "ans": "16"
},
{
  "ques": "What is the square root of 324?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "17",
  "op3": "18",
  "op4": "19",
  "ans": "18"
},
{
  "ques": "What is the cube of 4?<br><br>",
  "quesType": "mcq",
  "op1": "32",
  "op2": "56",
  "op3": "64",
  "op4": "72",
  "ans": "64"
},
{
  "ques": "Which is a factor of 100?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "20",
  "op3": "25",
  "op4": "All",
  "ans": "All"
},
{
  "ques": "If 12 pencils cost ₹48, what is the cost of 5 pencils?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "18",
  "op3": "20",
  "op4": "22",
  "ans": "20"
},
{
  "ques": "Find the next term: 1, 4, 9, 16, ?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "30",
  "op4": "36",
  "ans": "25"
},
{
  "ques": "The average of 5, 10, 15, 20 is ?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "12",
  "op3": "13",
  "op4": "15",
  "ans": "12.5"
},
{
  "ques": "How many even numbers are there between 10 and 20?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "5"
},
{
  "ques": "Which is the largest factor of any number?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "Itself",
  "op4": "2",
  "ans": "Itself"
},
{
  "ques": "If A:B = 2:5 and B:C = 3:4, then A:C = ?<br><br>",
  "quesType": "mcq",
  "op1": "6:20",
  "op2": "3:10",
  "op3": "2:5",
  "op4": "5:12",
  "ans": "6:20"
},
{
  "ques": "How many prime numbers between 20 and 30?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "2"
},
{
  "ques": "A shopkeeper sells an item for ₹200, cost is ₹160. Profit % ?<br><br>",
  "quesType": "mcq",
  "op1": "20%",
  "op2": "25%",
  "op3": "30%",
  "op4": "40%",
  "ans": "25%"
},
{
  "ques": "What is the sum of angles in a pentagon?<br><br>",
  "quesType": "mcq",
  "op1": "360°",
  "op2": "540°",
  "op3": "720°",
  "op4": "900°",
  "ans": "540°"
},
{
  "ques": "How many odd numbers between 1 and 20?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "10"
},
{
  "ques": "Simplify: (2²)³<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "16",
  "op3": "32",
  "op4": "64",
  "ans": "64"
},
{
  "ques": "What is the square root of 625?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "22",
  "op3": "24",
  "op4": "25",
  "ans": "25"
},
{
  "ques": "Find the next: 2, 5, 10, 17, ?<br><br>",
  "quesType": "mcq",
  "op1": "24",
  "op2": "25",
  "op3": "26",
  "op4": "27",
  "ans": "26"
},
{
  "ques": "If profit is 15% of cost price ₹200, find selling price.<br><br>",
  "quesType": "mcq",
  "op1": "220",
  "op2": "225",
  "op3": "230",
  "op4": "240",
  "ans": "230"
},
{
  "ques": "Solve: 3(x – 2) = 9.<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "5"
},
{
  "ques": "What is 7% of 700?<br><br>",
  "quesType": "mcq",
  "op1": "45",
  "op2": "48",
  "op3": "49",
  "op4": "50",
  "ans": "49"
},
{
  "ques": "What is 0.2 × 0.5?<br><br>",
  "quesType": "mcq",
  "op1": "0.1",
  "op2": "0.05",
  "op3": "0.2",
  "op4": "0.25",
  "ans": "0.1"
},
{
  "ques": "LCM of 8, 12, and 16?<br><br>",
  "quesType": "mcq",
  "op1": "24",
  "op2": "36",
  "op3": "48",
  "op4": "60",
  "ans": "48"
},
{
  "ques": "HCF of 30 and 45?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "10",
  "op3": "15",
  "op4": "20",
  "ans": "15"
},
{
  "ques": "If 4 boys can finish a work in 8 days, how many days for 8 boys?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "4"
},
{
  "ques": "Probability of head when tossing a coin?<br><br>",
  "quesType": "mcq",
  "op1": "1/2",
  "op2": "1/3",
  "op3": "1/4",
  "op4": "1",
  "ans": "1/2"
},
{
  "ques": "Value of 1² + 2² + 3²?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "12",
  "op3": "14",
  "op4": "18",
  "ans": "14"
},
{
  "ques": "What is 2/3 of 150?<br><br>",
  "quesType": "mcq",
  "op1": "90",
  "op2": "95",
  "op3": "100",
  "op4": "105",
  "ans": "100"
},
{
  "ques": "A: B = 4:5. If B = 40, find A.<br><br>",
  "quesType": "mcq",
  "op1": "24",
  "op2": "28",
  "op3": "30",
  "op4": "32",
  "ans": "32"
}
,
{
  "ques": "If x³ = 125, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "5"
},
{
  "ques": "What is the cube of 6?<br><br>",
  "quesType": "mcq",
  "op1": "126",
  "op2": "216",
  "op3": "326",
  "op4": "426",
  "ans": "216"
},
{
  "ques": "The square root of 625 is?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "22",
  "op3": "24",
  "op4": "25",
  "ans": "25"
},
{
  "ques": "If 20% of x is 70, then x = ?<br><br>",
  "quesType": "mcq",
  "op1": "250",
  "op2": "300",
  "op3": "350",
  "op4": "400",
  "ans": "350"
},
{
  "ques": "What is the LCM of 16 and 20?<br><br>",
  "quesType": "mcq",
  "op1": "40",
  "op2": "60",
  "op3": "80",
  "op4": "100",
  "ans": "80"
},
{
  "ques": "What is the HCF of 84 and 126?<br><br>",
  "quesType": "mcq",
  "op1": "14",
  "op2": "21",
  "op3": "28",
  "op4": "42",
  "ans": "42"
},
{
  "ques": "If √x = 10, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "80",
  "op2": "90",
  "op3": "100",
  "op4": "110",
  "ans": "100"
},
{
  "ques": "The next prime number after 59 is?<br><br>",
  "quesType": "mcq",
  "op1": "60",
  "op2": "61",
  "op3": "63",
  "op4": "65",
  "ans": "61"
},
{
  "ques": "If a : b = 5 : 7 and b : c = 2 : 3, then a : c = ?<br><br>",
  "quesType": "mcq",
  "op1": "10 : 21",
  "op2": "5 : 7",
  "op3": "5 : 9",
  "op4": "7 : 10",
  "ans": "10 : 21"
},
{
  "ques": "Find the missing term: 5, 10, 17, 26, ?<br><br>",
  "quesType": "mcq",
  "op1": "35",
  "op2": "36",
  "op3": "37",
  "op4": "38",
  "ans": "37"
},
{
  "ques": "A sum doubles in 8 years at simple interest. What is the rate % p.a.?<br><br>",
  "quesType": "mcq",
  "op1": "10%",
  "op2": "12.5%",
  "op3": "15%",
  "op4": "20%",
  "ans": "12.5%"
},
{
  "ques": "Compound interest on ₹2000 for 2 years at 5% p.a. is?<br><br>",
  "quesType": "mcq",
  "op1": "200",
  "op2": "210.25",
  "op3": "220.5",
  "op4": "230",
  "ans": "210.25"
},
{
  "ques": "If 6 men can complete a work in 8 days, how long will 4 men take?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "12",
  "op3": "14",
  "op4": "16",
  "ans": "12"
},
{
  "ques": "Which number is a factor of 132?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "11"
},
{
  "ques": "LCM of 9, 12, and 15 is?<br><br>",
  "quesType": "mcq",
  "op1": "60",
  "op2": "90",
  "op3": "120",
  "op4": "180",
  "ans": "180"
},
{
  "ques": "HCF of 64 and 80 is?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "12",
  "op3": "16",
  "op4": "20",
  "ans": "16"
},
{
  "ques": "The median of 2, 4, 6, 8, 10, 12 is?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "7"
},
{
  "ques": "Mode of 1, 2, 2, 3, 3, 3, 4 is?<br><br>",
  "quesType": "mcq",
  "op1": "1",
  "op2": "2",
  "op3": "3",
  "op4": "4",
  "ans": "3"
},
{
  "ques": "What is 35% of 420?<br><br>",
  "quesType": "mcq",
  "op1": "120",
  "op2": "130",
  "op3": "140",
  "op4": "150",
  "ans": "147"
},
{
  "ques": "If 2/7 of a number is 18, what is the number?<br><br>",
  "quesType": "mcq",
  "op1": "56",
  "op2": "63",
  "op3": "72",
  "op4": "84",
  "ans": "63"
},
{
  "ques": "What is the sum of angles in a hexagon?<br><br>",
  "quesType": "mcq",
  "op1": "360°",
  "op2": "540°",
  "op3": "720°",
  "op4": "900°",
  "ans": "720°"
},
{
  "ques": "How many multiples of 4 are there between 1 and 50?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "The next term of 2, 4, 7, 11, ?<br><br>",
  "quesType": "mcq",
  "op1": "14",
  "op2": "15",
  "op3": "16",
  "op4": "17",
  "ans": "16"
},
{
  "ques": "What is 3/4 of 360?<br><br>",
  "quesType": "mcq",
  "op1": "240",
  "op2": "250",
  "op3": "260",
  "op4": "270",
  "ans": "270"
},
{
  "ques": "Square of 22 is?<br><br>",
  "quesType": "mcq",
  "op1": "484",
  "op2": "500",
  "op3": "512",
  "op4": "529",
  "ans": "484"
},
{
  "ques": "Cube root of 1000 is?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "10"
},
{
  "ques": "LCM of 14, 21, and 28 is?<br><br>",
  "quesType": "mcq",
  "op1": "42",
  "op2": "56",
  "op3": "84",
  "op4": "98",
  "ans": "84"
},
{
  "ques": "What is the next prime after 67?<br><br>",
  "quesType": "mcq",
  "op1": "69",
  "op2": "71",
  "op3": "73",
  "op4": "75",
  "ans": "71"
},
{
  "ques": "How many factors does 45 have?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "6"
},
{
  "ques": "What is the HCF of 90 and 135?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "30",
  "op3": "45",
  "op4": "60",
  "ans": "45"
}
,
{
  "ques": "If x² + x - 6 = 0, what is one root of x?<br><br>",
  "quesType": "mcq",
  "op1": "-2",
  "op2": "2",
  "op3": "-3",
  "op4": "3",
  "ans": "2"
},
{
  "ques": "What is the derivative of x²?<br><br>",
  "quesType": "mcq",
  "op1": "x",
  "op2": "2x",
  "op3": "x²",
  "op4": "2",
  "ans": "2x"
},
{
  "ques": "What is the value of 3⁴?<br><br>",
  "quesType": "mcq",
  "op1": "27",
  "op2": "64",
  "op3": "81",
  "op4": "243",
  "ans": "81"
},
{
  "ques": "What is the area of an equilateral triangle with side 4 cm? (√3 ≈ 1.732)<br><br>",
  "quesType": "mcq",
  "op1": "5.5 cm²",
  "op2": "6.9 cm²",
  "op3": "7.5 cm²",
  "op4": "6.93 cm²",
  "ans": "6.93 cm²"
},
{
  "ques": "The sum of first n natural numbers is 55. Find n.<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "10"
},
{
  "ques": "What is sin 90°?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1/2",
  "op3": "√3/2",
  "op4": "1",
  "ans": "1"
},
{
  "ques": "If log₁₀ x = 2, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "20",
  "op3": "50",
  "op4": "100",
  "ans": "100"
},
{
  "ques": "If (x + 1)(x + 2) = 0, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "-1 or -2",
  "op2": "1 or 2",
  "op3": "-1 or 2",
  "op4": "1 or -2",
  "ans": "-1 or -2"
},
{
  "ques": "What is the next term: 1, 4, 9, 16, ?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "25",
  "op3": "36",
  "op4": "49",
  "ans": "25"
},
{
  "ques": "What is the slope of the line y = 2x + 5?<br><br>",
  "quesType": "mcq",
  "op1": "1",
  "op2": "2",
  "op3": "5",
  "op4": "0",
  "ans": "2"
},
{
  "ques": "If x³ = 27, then x = ?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "3"
},
{
  "ques": "If the mean of five numbers is 12, their sum is?<br><br>",
  "quesType": "mcq",
  "op1": "50",
  "op2": "55",
  "op3": "60",
  "op4": "65",
  "ans": "60"
},
{
  "ques": "What is the value of (2²)³?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "16",
  "op3": "32",
  "op4": "64",
  "ans": "64"
},
{
  "ques": "What is the volume of a cube of side 5 cm?<br><br>",
  "quesType": "mcq",
  "op1": "25 cm³",
  "op2": "75 cm³",
  "op3": "100 cm³",
  "op4": "125 cm³",
  "ans": "125 cm³"
},
{
  "ques": "If x = 3, find 2x² + 3x + 4<br><br>",
  "quesType": "mcq",
  "op1": "25",
  "op2": "28",
  "op3": "31",
  "op4": "34",
  "ans": "31"
},
{
  "ques": "What is the standard deviation of 2, 2, 2, 2?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "2",
  "op4": "4",
  "ans": "0"
},
{
  "ques": "How many prime numbers are there between 1 and 10?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "4"
},
{
  "ques": "If cos 0° = ?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "1/2",
  "op4": "√3/2",
  "ans": "1"
},
{
  "ques": "What is 2³ + 3²?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "17",
  "op4": "18",
  "ans": "17"
},
{
  "ques": "If 3 workers finish a job in 4 days, how long for 2 workers?<br><br>",
  "quesType": "mcq",
  "op1": "4 days",
  "op2": "5 days",
  "op3": "6 days",
  "op4": "8 days",
  "ans": "6 days"
},
{
  "ques": "If 2x = 32, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "8",
  "ans": "5"
},
{
  "ques": "If sum of angles of polygon is 1260°, find sides.<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "What is the sum of interior angles of a hexagon?<br><br>",
  "quesType": "mcq",
  "op1": "360°",
  "op2": "540°",
  "op3": "720°",
  "op4": "900°",
  "ans": "720°"
},
{
  "ques": "What is 5² - 4²?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "7",
  "op3": "9",
  "op4": "15",
  "ans": "9"
},
{
  "ques": "If mean = median = mode, the data is?<br><br>",
  "quesType": "mcq",
  "op1": "Normal",
  "op2": "Symmetric",
  "op3": "Skewed",
  "op4": "Uniform",
  "ans": "Symmetric"
},
{
  "ques": "If 2x + 3y = 12 and y = 2, find x.<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "3"
},
{
  "ques": "If the roots of x² + px + q = 0 are equal, then?<br><br>",
  "quesType": "mcq",
  "op1": "p² = 2q",
  "op2": "p² = q",
  "op3": "p² = 4q",
  "op4": "p = 2q",
  "ans": "p² = 4q"
},
{
  "ques": "What is tan 45°?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "1/2",
  "op4": "√2",
  "ans": "1"
},
{
  "ques": "If x + y = 10 and x - y = 4, find x.<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "5",
  "op3": "6",
  "op4": "7",
  "ans": "7"
},
{
  "ques": "What is the factorial of 6?<br><br>",
  "quesType": "mcq",
  "op1": "600",
  "op2": "720",
  "op3": "840",
  "op4": "960",
  "ans": "720"
}
,
{
  "ques": "If x² – 5x + 6 = 0, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "2 or 3",
  "op2": "1 or 6",
  "op3": "2 or 4",
  "op4": "3 or 5",
  "ans": "2 or 3"
},
{
  "ques": "If log₃(x) = 4, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "9",
  "op2": "27",
  "op3": "64",
  "op4": "81",
  "ans": "81"
},
{
  "ques": "What is the value of sin 45°?<br><br>",
  "quesType": "mcq",
  "op1": "1/2",
  "op2": "1/√2",
  "op3": "√3/2",
  "op4": "1",
  "ans": "1/√2"
},
{
  "ques": "If x³ = 125, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "5"
},
{
  "ques": "Solve: 2x + 3y = 12, if y = 2<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "3"
},
{
  "ques": "Limit of (x² – 1)/(x – 1) as x → 1?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "2",
  "op4": "2",
  "ans": "2"
},
{
  "ques": "What is the derivative of x²?<br><br>",
  "quesType": "mcq",
  "op1": "x",
  "op2": "2x",
  "op3": "x²",
  "op4": "2",
  "ans": "2x"
},
{
  "ques": "If matrix A is 2×2, how many elements?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "4"
},
{
  "ques": "Value of tan 45°?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "√3",
  "op4": "∞",
  "ans": "1"
},
{
  "ques": "If det(A) = 0, then matrix A is?<br><br>",
  "quesType": "mcq",
  "op1": "Singular",
  "op2": "Unit",
  "op3": "Square",
  "op4": "Diagonal",
  "ans": "Singular"
},
{
  "ques": "If A = {1,2,3} and B = {3,4}, A ∩ B = ?<br><br>",
  "quesType": "mcq",
  "op1": "{1}",
  "op2": "{2}",
  "op3": "{3}",
  "op4": "{4}",
  "ans": "{3}"
},
{
  "ques": "What is ∫ x dx?<br><br>",
  "quesType": "mcq",
  "op1": "x",
  "op2": "x²",
  "op3": "x²/2",
  "op4": "2x",
  "ans": "x²/2"
},
{
  "ques": "If P(A) = 0.4, P(B) = 0.5, P(A ∩ B) = 0.2, find P(A ∪ B).<br><br>",
  "quesType": "mcq",
  "op1": "0.7",
  "op2": "0.6",
  "op3": "0.8",
  "op4": "0.9",
  "ans": "0.7"
},
{
  "ques": "Find 5!<br><br>",
  "quesType": "mcq",
  "op1": "60",
  "op2": "100",
  "op3": "120",
  "op4": "150",
  "ans": "120"
},
{
  "ques": "Slope of line y = 3x + 4?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "1",
  "op4": "0",
  "ans": "3"
},
{
  "ques": "Area under y = x between 0 and 2?<br><br>",
  "quesType": "mcq",
  "op1": "1",
  "op2": "2",
  "op3": "3",
  "op4": "2",
  "ans": "2"
},
{
  "ques": "Find the mean of 5,10,15,20,25.<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "15",
  "op3": "20",
  "op4": "25",
  "ans": "15"
},
{
  "ques": "What is the mode of 2,3,3,4,5?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "3"
},
{
  "ques": "What is the median of 2,5,7,9,11?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "7",
  "op3": "9",
  "op4": "11",
  "ans": "7"
},
{
  "ques": "Derivative of cos(x)?<br><br>",
  "quesType": "mcq",
  "op1": "sin(x)",
  "op2": "-sin(x)",
  "op3": "cos(x)",
  "op4": "-cos(x)",
  "ans": "-sin(x)"
},
{
  "ques": "Value of e⁰?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "e",
  "op4": "∞",
  "ans": "1"
},
{
  "ques": "Roots of x² + 1 = 0?<br><br>",
  "quesType": "mcq",
  "op1": "±1",
  "op2": "±i",
  "op3": "±2",
  "op4": "±√2",
  "ans": "±i"
},
{
  "ques": "If |x| = 4, then x = ?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "-4",
  "op3": "±4",
  "op4": "0",
  "ans": "±4"
},
{
  "ques": "Solve: x³ – 8 = 0<br><br>",
  "quesType": "mcq",
  "op1": "1",
  "op2": "2",
  "op3": "3",
  "op4": "4",
  "ans": "2"
},
{
  "ques": "Value of cos 0°?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "0.5",
  "op4": "√2/2",
  "ans": "1"
},
{
  "ques": "If f(x)=x², f'(2)=?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "4",
  "op3": "8",
  "op4": "16",
  "ans": "4"
},
{
  "ques": "What is 2 to the power 5?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "32",
  "op3": "64",
  "op4": "128",
  "ans": "32"
},
{
  "ques": "LCM of 15, 20?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "40",
  "op3": "50",
  "op4": "60",
  "ans": "60"
},
{
  "ques": "HCF of 18, 24?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "4",
  "op3": "6",
  "op4": "12",
  "ans": "6"
},
{
  "ques": "Sum of squares: 1² + 2² + 3² + 4²?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "35",
  "op3": "40",
  "op4": "50",
  "ans": "30"
},
{
  "ques": "Solve: log₁₀(1000)<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "3"
}
,
{
  "ques": "What is the square of 23?<br><br>",
  "quesType": "mcq",
  "op1": "489",
  "op2": "529",
  "op3": "529",
  "op4": "576",
  "ans": "529"
},
{
  "ques": "What is the cube of 7?<br><br>",
  "quesType": "mcq",
  "op1": "243",
  "op2": "343",
  "op3": "423",
  "op4": "512",
  "ans": "343"
},
{
  "ques": "What is the value of 2⁴ × 3³?<br><br>",
  "quesType": "mcq",
  "op1": "72",
  "op2": "96",
  "op3": "144",
  "op4": "216",
  "ans": "216"
},
{
  "ques": "What is the cube root of 729?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "11",
  "ans": "9"
},
{
  "ques": "What is the LCM of 18 and 24?<br><br>",
  "quesType": "mcq",
  "op1": "36",
  "op2": "48",
  "op3": "54",
  "op4": "72",
  "ans": "72"
},
{
  "ques": "What is the HCF of 144 and 180?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "18",
  "op3": "24",
  "op4": "36",
  "ans": "36"
},
{
  "ques": "Next prime number after 73?<br><br>",
  "quesType": "mcq",
  "op1": "75",
  "op2": "77",
  "op3": "79",
  "op4": "81",
  "ans": "79"
},
{
  "ques": "Which is a multiple of both 8 and 9?<br><br>",
  "quesType": "mcq",
  "op1": "64",
  "op2": "72",
  "op3": "80",
  "op4": "90",
  "ans": "72"
},
{
  "ques": "If a : b = 3 : 5 and b : c = 5 : 7, find a : c?<br><br>",
  "quesType": "mcq",
  "op1": "3 : 5",
  "op2": "3 : 7",
  "op3": "5 : 7",
  "op4": "3 : 7",
  "ans": "3 : 7"
},
{
  "ques": "If 40% of x is 120, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "200",
  "op2": "250",
  "op3": "300",
  "op4": "320",
  "ans": "300"
},
{
  "ques": "A sum triples itself in 10 years at simple interest. Find the rate % p.a.<br><br>",
  "quesType": "mcq",
  "op1": "10%",
  "op2": "15%",
  "op3": "20%",
  "op4": "25%",
  "ans": "20%"
},
{
  "ques": "Compound interest on ₹4000 for 2 years at 5% p.a. is?<br><br>",
  "quesType": "mcq",
  "op1": "410",
  "op2": "410.25",
  "op3": "420.5",
  "op4": "425",
  "ans": "410.25"
},
{
  "ques": "If 8 men can do a work in 15 days, how long will 5 men take?<br><br>",
  "quesType": "mcq",
  "op1": "22",
  "op2": "24",
  "op3": "25",
  "op4": "30",
  "ans": "24"
},
{
  "ques": "What is the next odd prime after 83?<br><br>",
  "quesType": "mcq",
  "op1": "85",
  "op2": "87",
  "op3": "89",
  "op4": "91",
  "ans": "89"
},
{
  "ques": "What is the median of 3, 5, 7, 9, 11, 13, 15?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "9",
  "op3": "11",
  "op4": "13",
  "ans": "9"
},
{
  "ques": "Mode of 1, 3, 3, 4, 4, 4, 5, 5?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "4"
},
{
  "ques": "45% of 320 is?<br><br>",
  "quesType": "mcq",
  "op1": "128",
  "op2": "135",
  "op3": "144",
  "op4": "150",
  "ans": "144"
},
{
  "ques": "If ⅗ of a number is 75, what is the number?<br><br>",
  "quesType": "mcq",
  "op1": "100",
  "op2": "110",
  "op3": "120",
  "op4": "125",
  "ans": "125"
},
{
  "ques": "Sum of angles in an octagon is?<br><br>",
  "quesType": "mcq",
  "op1": "720°",
  "op2": "900°",
  "op3": "1080°",
  "op4": "1260°",
  "ans": "1080°"
},
{
  "ques": "How many even numbers are between 20 and 60?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "19",
  "op3": "20",
  "op4": "21",
  "ans": "20"
},
{
  "ques": "Find the next term: 5, 11, 19, 29, ?<br><br>",
  "quesType": "mcq",
  "op1": "35",
  "op2": "39",
  "op3": "41",
  "op4": "43",
  "ans": "41"
},
{
  "ques": "What is 7/8 of 400?<br><br>",
  "quesType": "mcq",
  "op1": "300",
  "op2": "320",
  "op3": "350",
  "op4": "375",
  "ans": "350"
},
{
  "ques": "Square of 19 is?<br><br>",
  "quesType": "mcq",
  "op1": "321",
  "op2": "361",
  "op3": "381",
  "op4": "400",
  "ans": "361"
},
{
  "ques": "Cube root of 1331?<br><br>",
  "quesType": "mcq",
  "op1": "9",
  "op2": "10",
  "op3": "11",
  "op4": "12",
  "ans": "11"
},
{
  "ques": "LCM of 20, 30, and 50?<br><br>",
  "quesType": "mcq",
  "op1": "60",
  "op2": "100",
  "op3": "150",
  "op4": "300",
  "ans": "300"
},
{
  "ques": "Next prime number after 97?<br><br>",
  "quesType": "mcq",
  "op1": "99",
  "op2": "101",
  "op3": "103",
  "op4": "107",
  "ans": "101"
},
{
  "ques": "How many factors does 60 have?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "14",
  "ans": "12"
},
{
  "ques": "HCF of 120 and 180 is?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "40",
  "op3": "50",
  "op4": "60",
  "ans": "60"
},
{
  "ques": "What is ⅗ of 250?<br><br>",
  "quesType": "mcq",
  "op1": "120",
  "op2": "130",
  "op3": "140",
  "op4": "150",
  "ans": "150"
}
,
{
  "ques": "If x² = 81, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "If 4x - 5 = 11, find x.<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "4"
},
{
  "ques": "Find the missing term: 1, 1, 2, 3, 5, ?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "8"
},
{
  "ques": "What is log₁₀ 1?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "10",
  "op4": "∞",
  "ans": "0"
},
{
  "ques": "If x = 2, what is 3x² + 2x + 1?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "16",
  "op3": "17",
  "op4": "18",
  "ans": "17"
},
{
  "ques": "If the sides of a square are doubled, its area becomes?<br><br>",
  "quesType": "mcq",
  "op1": "Double",
  "op2": "Triple",
  "op3": "Four times",
  "op4": "Eight times",
  "ans": "Four times"
},
{
  "ques": "If the perimeter of a circle is 44 cm, what is the radius? (π = 22/7)<br><br>",
  "quesType": "mcq",
  "op1": "5 cm",
  "op2": "6 cm",
  "op3": "7 cm",
  "op4": "8 cm",
  "ans": "7 cm"
},
{
  "ques": "What is the median of 5, 7, 9, 11, 13?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "9",
  "op3": "11",
  "op4": "13",
  "ans": "9"
},
{
  "ques": "If 2x = 3y and y = 6, find x.<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "9",
  "op3": "10",
  "op4": "12",
  "ans": "9"
},
{
  "ques": "What is the next square number after 100?<br><br>",
  "quesType": "mcq",
  "op1": "111",
  "op2": "121",
  "op3": "144",
  "op4": "169",
  "ans": "121"
},
{
  "ques": "If a:b = 3:4 and b:c = 2:5, then a:c = ?<br><br>",
  "quesType": "mcq",
  "op1": "3:5",
  "op2": "2:5",
  "op3": "3:10",
  "op4": "6:5",
  "ans": "3:10"
},
{
  "ques": "If 5x = 125, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "3"
},
{
  "ques": "What is the cube root of 64?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "4"
},
{
  "ques": "If x³ - 27 = 0, find x.<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "3"
},
{
  "ques": "What is sin 0°?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1/2",
  "op3": "1",
  "op4": "Undefined",
  "ans": "0"
},
{
  "ques": "What is the value of √(196)?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "14"
},
{
  "ques": "If 1/x = 0.2, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "5"
},
{
  "ques": "If an angle is 2x and its supplement is 3x, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "36",
  "op3": "40",
  "op4": "48",
  "ans": "36"
},
{
  "ques": "What is the HCF of 42 and 70?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "14",
  "op4": "21",
  "ans": "14"
},
{
  "ques": "If 2(x + 1) = 3(x - 2), find x.<br><br>",
  "quesType": "mcq",
  "op1": "1",
  "op2": "2",
  "op3": "3",
  "op4": "4",
  "ans": "8"
},
{
  "ques": "If the mean of 2, 4, 6, 8, x is 6, find x.<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "10",
  "op3": "12",
  "op4": "14",
  "ans": "10"
},
{
  "ques": "If a² = 49, then a = ?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "7"
},
{
  "ques": "What is the square of 15?<br><br>",
  "quesType": "mcq",
  "op1": "215",
  "op2": "225",
  "op3": "235",
  "op4": "245",
  "ans": "225"
},
{
  "ques": "If sum of angles of polygon is 900°, sides = ?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "7"
},
{
  "ques": "If 6 men finish work in 8 days, how many days for 4 men?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "10",
  "op3": "12",
  "op4": "16",
  "ans": "12"
},
{
  "ques": "If x = 4, find 2x³ - x².<br><br>",
  "quesType": "mcq",
  "op1": "48",
  "op2": "52",
  "op3": "56",
  "op4": "60",
  "ans": "48"
},
{
  "ques": "What is the LCM of 12 and 18?<br><br>",
  "quesType": "mcq",
  "op1": "24",
  "op2": "30",
  "op3": "36",
  "op4": "48",
  "ans": "36"
},
{
  "ques": "What is tan 0°?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "∞",
  "op4": "Undefined",
  "ans": "0"
},
{
  "ques": "If log₂ 8 = ?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "3"
},
{
  "ques": "If a = 3 and b = 4, find a² + b².<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "18",
  "op3": "24",
  "op4": "25",
  "ans": "25"
}
,
{
  "ques": "If x² – 4x + 3 = 0, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "1 or 3",
  "op2": "1 or 4",
  "op3": "2 or 3",
  "op4": "3 or 4",
  "ans": "1 or 3"
},
{
  "ques": "If log₂(x) = 5, x = ?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "16",
  "op3": "25",
  "op4": "32",
  "ans": "32"
},
{
  "ques": "What is cos 60°?<br><br>",
  "quesType": "mcq",
  "op1": "1/2",
  "op2": "√3/2",
  "op3": "0",
  "op4": "1",
  "ans": "1/2"
},
{
  "ques": "If 2x – 3 = 5, x = ?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "4"
},
{
  "ques": "If a² – b² = 0, then a = ?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "b",
  "op3": "-b",
  "op4": "±b",
  "ans": "±b"
},
{
  "ques": "Limit of sin(x)/x as x→0?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "∞",
  "op4": "Undefined",
  "ans": "1"
},
{
  "ques": "Derivative of ln(x)?<br><br>",
  "quesType": "mcq",
  "op1": "ln(x)",
  "op2": "1/x",
  "op3": "x",
  "op4": "x²",
  "ans": "1/x"
},
{
  "ques": "Order of a 3x3 matrix?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "6",
  "op4": "9",
  "ans": "9"
},
{
  "ques": "sin 0° = ?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "∞",
  "op4": "-1",
  "ans": "0"
},
{
  "ques": "If |A| = 5 and |B| = 3, find |A × B|.<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "15",
  "op3": "1",
  "op4": "0",
  "ans": "15"
},
{
  "ques": "What is ∫ 1/x dx?<br><br>",
  "quesType": "mcq",
  "op1": "ln(x)",
  "op2": "1/x",
  "op3": "x",
  "op4": "x²/2",
  "ans": "ln(x)"
},
{
  "ques": "If P(A) + P(B) = 1 and P(A) = 0.3, P(B) = ?<br><br>",
  "quesType": "mcq",
  "op1": "0.3",
  "op2": "0.4",
  "op3": "0.5",
  "op4": "0.7",
  "ans": "0.7"
},
{
  "ques": "Find 6!<br><br>",
  "quesType": "mcq",
  "op1": "720",
  "op2": "640",
  "op3": "540",
  "op4": "600",
  "ans": "720"
},
{
  "ques": "Slope of 2y – x = 0?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "1/2",
  "op3": "-2",
  "op4": "-1/2",
  "ans": "1/2"
},
{
  "ques": "Area of circle with r=7?<br><br>",
  "quesType": "mcq",
  "op1": "49π",
  "op2": "14π",
  "op3": "28π",
  "op4": "21π",
  "ans": "49π"
},
{
  "ques": "Mean of 1,2,3,4,5,6?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "3.5",
  "op4": "4",
  "ans": "3.5"
},
{
  "ques": "Mode of 4,4,4,5,6?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "5",
  "op3": "6",
  "op4": "0",
  "ans": "4"
},
{
  "ques": "Median of 1,3,5,7,9,11?<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "6"
},
{
  "ques": "Derivative of tan(x)?<br><br>",
  "quesType": "mcq",
  "op1": "sec²(x)",
  "op2": "cos²(x)",
  "op3": "sin²(x)",
  "op4": "-sec²(x)",
  "ans": "sec²(x)"
},
{
  "ques": "Value of e¹?<br><br>",
  "quesType": "mcq",
  "op1": "1",
  "op2": "0",
  "op3": "e",
  "op4": "∞",
  "ans": "e"
},
{
  "ques": "Roots of x² – 4 = 0?<br><br>",
  "quesType": "mcq",
  "op1": "±2",
  "op2": "±4",
  "op3": "2",
  "op4": "4",
  "ans": "±2"
},
{
  "ques": "If |x| = 7, then x = ?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "-7",
  "op3": "±7",
  "op4": "0",
  "ans": "±7"
},
{
  "ques": "Solve: x³ – 27 = 0<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "3"
},
{
  "ques": "cos 90° = ?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "∞",
  "op4": "-1",
  "ans": "0"
},
{
  "ques": "If f(x)=x³, f'(2)=?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "8",
  "op3": "12",
  "op4": "16",
  "ans": "12"
},
{
  "ques": "3² × 3³ = ?<br><br>",
  "quesType": "mcq",
  "op1": "9",
  "op2": "27",
  "op3": "81",
  "op4": "243",
  "ans": "243"
},
{
  "ques": "LCM of 18, 24?<br><br>",
  "quesType": "mcq",
  "op1": "36",
  "op2": "48",
  "op3": "72",
  "op4": "96",
  "ans": "72"
},
{
  "ques": "HCF of 42, 56?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "14",
  "op3": "21",
  "op4": "28",
  "ans": "14"
},
{
  "ques": "Sum of squares: 1² + 2² + 3² + 4² + 5²?<br><br>",
  "quesType": "mcq",
  "op1": "35",
  "op2": "40",
  "op3": "45",
  "op4": "55",
  "ans": "55"
},
{
  "ques": "log₁₀(10000) = ?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "4"
}
,
{
  "ques": "What is the square root of 900?<br><br>",
  "quesType": "mcq",
  "op1": "28",
  "op2": "29",
  "op3": "30",
  "op4": "32",
  "ans": "30"
},
{
  "ques": "What is 2⁶?<br><br>",
  "quesType": "mcq",
  "op1": "32",
  "op2": "48",
  "op3": "60",
  "op4": "64",
  "ans": "64"
},
{
  "ques": "What is the cube of 9?<br><br>",
  "quesType": "mcq",
  "op1": "618",
  "op2": "720",
  "op3": "729",
  "op4": "810",
  "ans": "729"
},
{
  "ques": "Cube root of 2197 is?<br><br>",
  "quesType": "mcq",
  "op1": "11",
  "op2": "12",
  "op3": "13",
  "op4": "14",
  "ans": "13"
},
{
  "ques": "LCM of 35 and 50 is?<br><br>",
  "quesType": "mcq",
  "op1": "100",
  "op2": "150",
  "op3": "175",
  "op4": "200",
  "ans": "350"
},
{
  "ques": "HCF of 72 and 108 is?<br><br>",
  "quesType": "mcq",
  "op1": "18",
  "op2": "24",
  "op3": "36",
  "op4": "54",
  "ans": "36"
},
{
  "ques": "Next prime number after 101 is?<br><br>",
  "quesType": "mcq",
  "op1": "103",
  "op2": "105",
  "op3": "107",
  "op4": "109",
  "ans": "103"
},
{
  "ques": "Which is a multiple of both 6 and 11?<br><br>",
  "quesType": "mcq",
  "op1": "55",
  "op2": "60",
  "op3": "66",
  "op4": "72",
  "ans": "66"
},
{
  "ques": "If a : b = 4 : 7 and b : c = 7 : 9, find a : c?<br><br>",
  "quesType": "mcq",
  "op1": "4 : 9",
  "op2": "4 : 7",
  "op3": "7 : 9",
  "op4": "28 : 63",
  "ans": "4 : 9"
},
{
  "ques": "If 15% of x is 75, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "400",
  "op2": "450",
  "op3": "500",
  "op4": "550",
  "ans": "500"
},
{
  "ques": "A sum becomes 4 times in 12 years at simple interest. Find the rate % p.a.<br><br>",
  "quesType": "mcq",
  "op1": "25%",
  "op2": "30%",
  "op3": "33.33%",
  "op4": "35%",
  "ans": "25%"
},
{
  "ques": "Compound interest on ₹5000 for 2 years at 8% p.a. is?<br><br>",
  "quesType": "mcq",
  "op1": "816",
  "op2": "832",
  "op3": "864",
  "op4": "900",
  "ans": "832"
},
{
  "ques": "If 10 men can do a job in 20 days, how many days for 8 men?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "22.5",
  "op3": "25",
  "op4": "30",
  "ans": "25"
},
{
  "ques": "What is the next prime number after 113?<br><br>",
  "quesType": "mcq",
  "op1": "115",
  "op2": "117",
  "op3": "119",
  "op4": "127",
  "ans": "127"
},
{
  "ques": "Median of 2, 4, 6, 8, 10, 12, 14, 16 is?<br><br>",
  "quesType": "mcq",
  "op1": "7",
  "op2": "8",
  "op3": "9",
  "op4": "10",
  "ans": "9"
},
{
  "ques": "Mode of 5, 6, 7, 7, 8, 8, 8, 9?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "8"
},
{
  "ques": "55% of 360 is?<br><br>",
  "quesType": "mcq",
  "op1": "180",
  "op2": "198",
  "op3": "200",
  "op4": "210",
  "ans": "198"
},
{
  "ques": "If ⅘ of a number is 160, what is the number?<br><br>",
  "quesType": "mcq",
  "op1": "180",
  "op2": "190",
  "op3": "200",
  "op4": "210",
  "ans": "200"
},
{
  "ques": "Sum of angles in a nonagon is?<br><br>",
  "quesType": "mcq",
  "op1": "1080°",
  "op2": "1260°",
  "op3": "1440°",
  "op4": "1620°",
  "ans": "1260°"
},
{
  "ques": "How many odd numbers between 50 and 100?<br><br>",
  "quesType": "mcq",
  "op1": "24",
  "op2": "25",
  "op3": "26",
  "op4": "27",
  "ans": "25"
},
{
  "ques": "Next term in 6, 12, 20, 30, ?<br><br>",
  "quesType": "mcq",
  "op1": "36",
  "op2": "40",
  "op3": "42",
  "op4": "44",
  "ans": "42"
},
{
  "ques": "What is ⅔ of 450?<br><br>",
  "quesType": "mcq",
  "op1": "280",
  "op2": "290",
  "op3": "300",
  "op4": "320",
  "ans": "300"
},
{
  "ques": "Square of 28 is?<br><br>",
  "quesType": "mcq",
  "op1": "784",
  "op2": "800",
  "op3": "812",
  "op4": "828",
  "ans": "784"
},
{
  "ques": "Cube root of 3375 is?<br><br>",
  "quesType": "mcq",
  "op1": "12",
  "op2": "13",
  "op3": "14",
  "op4": "15",
  "ans": "15"
},
{
  "ques": "LCM of 24, 36, 60 is?<br><br>",
  "quesType": "mcq",
  "op1": "120",
  "op2": "180",
  "op3": "240",
  "op4": "360",
  "ans": "360"
},
{
  "ques": "Next prime number after 137 is?<br><br>",
  "quesType": "mcq",
  "op1": "139",
  "op2": "141",
  "op3": "143",
  "op4": "145",
  "ans": "139"
},
{
  "ques": "How many factors does 72 have?<br><br>",
  "quesType": "mcq",
  "op1": "10",
  "op2": "11",
  "op3": "12",
  "op4": "13",
  "ans": "12"
},
{
  "ques": "HCF of 140 and 210 is?<br><br>",
  "quesType": "mcq",
  "op1": "30",
  "op2": "35",
  "op3": "40",
  "op4": "70",
  "ans": "70"
},
{
  "ques": "What is ⅗ of 600?<br><br>",
  "quesType": "mcq",
  "op1": "320",
  "op2": "340",
  "op3": "360",
  "op4": "380",
  "ans": "360"
}
,
{
  "ques": "If x² - 5x + 6 = 0, find one root.<br><br>",
  "quesType": "mcq",
  "op1": "1",
  "op2": "2",
  "op3": "3",
  "op4": "4",
  "ans": "2"
},
{
  "ques": "Solve: 3(x - 2) = 2(x + 3)<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "6",
  "op3": "7",
  "op4": "8",
  "ans": "12"
},
{
  "ques": "Find 5% of 200.<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "10",
  "op3": "15",
  "op4": "20",
  "ans": "10"
},
{
  "ques": "What is the 5th term in the GP: 2, 4, 8, ...?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "32",
  "op3": "64",
  "op4": "128",
  "ans": "32"
},
{
  "ques": "What is the area of a circle with radius 7 cm? (π = 22/7)<br><br>",
  "quesType": "mcq",
  "op1": "132",
  "op2": "144",
  "op3": "154",
  "op4": "168",
  "ans": "154"
},
{
  "ques": "If log₁₀ 1000 = ?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "3"
},
{
  "ques": "What is the sum of first 10 natural numbers?<br><br>",
  "quesType": "mcq",
  "op1": "45",
  "op2": "50",
  "op3": "55",
  "op4": "60",
  "ans": "55"
},
{
  "ques": "If √x = 5, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "15",
  "op2": "20",
  "op3": "25",
  "op4": "30",
  "ans": "25"
},
{
  "ques": "Solve: 2x + 3 = 11<br><br>",
  "quesType": "mcq",
  "op1": "3",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "4"
},
{
  "ques": "What is the product of 2² × 2³?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "12",
  "op3": "16",
  "op4": "32",
  "ans": "32"
},
{
  "ques": "What is the value of (3!)²?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "36",
  "op3": "9",
  "op4": "18",
  "ans": "36"
},
{
  "ques": "What is tan 90°?<br><br>",
  "quesType": "mcq",
  "op1": "0",
  "op2": "1",
  "op3": "∞",
  "op4": "Undefined",
  "ans": "Undefined"
},
{
  "ques": "If a:b = 2:3, b:c = 4:5, then a:c = ?<br><br>",
  "quesType": "mcq",
  "op1": "8:15",
  "op2": "2:5",
  "op3": "3:5",
  "op4": "4:5",
  "ans": "8:15"
},
{
  "ques": "If 3x = 81, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "4"
},
{
  "ques": "What is the mean of 4, 8, 12, 16?<br><br>",
  "quesType": "mcq",
  "op1": "8",
  "op2": "10",
  "op3": "12",
  "op4": "14",
  "ans": "10"
},
{
  "ques": "Find the HCF of 45 and 75.<br><br>",
  "quesType": "mcq",
  "op1": "5",
  "op2": "10",
  "op3": "15",
  "op4": "20",
  "ans": "15"
},
{
  "ques": "What is sin 30°?<br><br>",
  "quesType": "mcq",
  "op1": "1/2",
  "op2": "1",
  "op3": "√3/2",
  "op4": "0",
  "ans": "1/2"
},
{
  "ques": "If x² = 121, what is x?<br><br>",
  "quesType": "mcq",
  "op1": "9",
  "op2": "10",
  "op3": "11",
  "op4": "12",
  "ans": "11"
},
{
  "ques": "What is 2³ + 2²?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "8",
  "op3": "10",
  "op4": "12",
  "ans": "12"
},
{
  "ques": "If 4 men finish work in 6 days, how many days for 3 men?<br><br>",
  "quesType": "mcq",
  "op1": "6",
  "op2": "7",
  "op3": "8",
  "op4": "9",
  "ans": "8"
},
{
  "ques": "What is log₂ 16?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "4"
},
{
  "ques": "What is cos 60°?<br><br>",
  "quesType": "mcq",
  "op1": "1/2",
  "op2": "√3/2",
  "op3": "1",
  "op4": "0",
  "ans": "1/2"
},
{
  "ques": "If 2x + 3y = 12 and y = 2, find x.<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "3"
},
{
  "ques": "What is 7² - 4²?<br><br>",
  "quesType": "mcq",
  "op1": "33",
  "op2": "37",
  "op3": "45",
  "op4": "49",
  "ans": "33"
},
{
  "ques": "If √x = 8, then x = ?<br><br>",
  "quesType": "mcq",
  "op1": "16",
  "op2": "32",
  "op3": "64",
  "op4": "81",
  "ans": "64"
},
{
  "ques": "What is the sum of angles in a pentagon?<br><br>",
  "quesType": "mcq",
  "op1": "360°",
  "op2": "540°",
  "op3": "720°",
  "op4": "900°",
  "ans": "540°"
},
{
  "ques": "If 10% of x is 25, find x.<br><br>",
  "quesType": "mcq",
  "op1": "150",
  "op2": "200",
  "op3": "250",
  "op4": "300",
  "ans": "250"
},
{
  "ques": "What is the slope of y = 3x - 4?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "3",
  "op3": "4",
  "op4": "5",
  "ans": "3"
},
{
  "ques": "If 5² + 12² = ?, what is the result?<br><br>",
  "quesType": "mcq",
  "op1": "119",
  "op2": "144",
  "op3": "169",
  "op4": "196",
  "ans": "169"
},
{
  "ques": "What is √(625)?<br><br>",
  "quesType": "mcq",
  "op1": "20",
  "op2": "22",
  "op3": "24",
  "op4": "25",
  "ans": "25"
}

]

let mathsIncorrectAnswers = [];

let mathsTimerId = "";
let mathsSkip = document.getElementById("mathsSkip");
let codingmathsQues = document.getElementById("codingmathsQues");
let mcqmaths = document.getElementById("mcqmaths");
let mathsQuestionNumber = document.getElementById("mathsQuestionNumber");
let mathsQuestionCount = 2;
let mathsScore = 0;
let mathsScoreDisplay = document.getElementById("mathsScoreDisplay");
let mathsScoreShow = document.getElementById("mathsScoreShow");
let mathsSkip2 = document.getElementById("mathsSkip2");

let mathsFillAns = document.getElementById("mathsFillAns");
let mathsStatus1 = document.getElementById("mathsStatus1");
let mathsStatus2 = document.getElementById("mathsStatus2");
let mathsStatus3 = document.getElementById("mathsStatus3");
let mathsCheckFill = document.getElementById("mathsCheckFill");

let codingResultmaths = document.getElementById("codingResultmaths");

let mathsIncorrectAnswersDisplay = document.getElementById("mathsIncorrectAnswersDisplay");
let mathsScoreBelow70 = document.getElementById("mathsScoreBelow70");
let mathsScore100 = document.getElementById("mathsScore100");

let mathsResult1 = document.getElementById("mathsResult1");
let mathsResult2 = document.getElementById("mathsResult2");
let mathsResult3 = document.getElementById("mathsResult3");
let mathsResult4 = document.getElementById("mathsResult4");
let mathsResult5 = document.getElementById("mathsResult5");
let mathsBg1 = document.getElementById("mathsBg1");


function codingmathsStart(){
  codingmathsHide.classList.add("d-none");
codingmathsShow.classList.remove("d-none");

let fillBlankmaths = document.getElementById("fillBlankmaths");
let op1maths = document.getElementById("op1maths");
let op2maths = document.getElementById("op2maths");
let op3maths = document.getElementById("op3maths");
let op4maths = document.getElementById("op4maths");

let mathsFillAns = document.getElementById("mathsFillAns");
let mathsStatus1 = document.getElementById("mathsStatus1");
let mathsStatus2 = document.getElementById("mathsStatus2");
let mathsStatus3 = document.getElementById("mathsStatus3");
let mathsCheckFill = document.getElementById("mathsCheckFill");

mathsFillAns.disabled = false;
mathsStatus1.classList.remove("d-none");
mathsStatus2.classList.add("d-none");
mathsStatus3.classList.add("d-none");
mathsFillAns.value = "";
mathsSkip2.textContent = "Skip";
mathsSkip2.style.backgroundColor = "orange";
mathsSkip2.style.borderColor = "orange";

mathsSkip.textContent = "Skip";
mathsSkip.style.backgroundColor = "orange";
mathsSkip.style.borderColor = "orange";
mathsScoreShow.textContent = "";
mathsTimer.style.color = "black";

if (mathsLevel === 1) {
  let mathsRandom = Math.floor(Math.random() * codingmaths1Arr.length);
  let y = codingmaths1Arr[mathsRandom];
  mathsTimer.textContent = "20";
  mathsTime = 20;

  mathsTimerId = setInterval(function () {
    mathsTime = mathsTime - 1;
    if (mathsTime == 0) {
      clearInterval(mathsTimerId);
      mathsQuestionNumber.textContent = "Question:" + mathsQuestionCount + "/10";
      mathsQuestionCount = mathsQuestionCount + 1;
      mathsTime = 20;
      codingmathsStart();
    }
    if (mathsTime <= 5) {
      mathsTimer.style.color = "red";
      mathsTimer.textContent = mathsTime;
    } else {
      mathsTimer.textContent = mathsTime;
    }
  }, 1000);

  if (mathsQuestionCount == 12) {
    clearInterval(mathsTimerId);
    mcqmaths.classList.add("d-none");
    document.getElementById("mathsScoreEnd").textContent = mathsScoreDisplay.textContent;
    fillBlankmaths.classList.add("d-none");
    codingmathsShow.classList.add("d-none");
    codingResultmaths.classList.remove("d-none");

    if (mathsScore < 70) {
      mathsScoreBelow70.classList.remove("d-none");
      mathsScore100.classList.add("d-none");
      sectionCodingmaths.classList.add("back15");

      mathsResult1.textContent = "Test finished!!";
      mathsResult2.textContent = "😓 Oops! Not quite right.";
      mathsResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      mathsResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      mathsIncorrectAnswersDisplay.appendChild(h2);

      for (let z of mathsIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        mathsIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (mathsScore < 100) {
      mathsScoreBelow70.classList.remove("d-none");
      mathsScore100.classList.add("d-none");
      sectionCodingmaths.classList.add("back15");

      mathsResult1.textContent = "Test finished!!";
      mathsResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      mathsResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      mathsResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      mathsIncorrectAnswersDisplay.appendChild(h2);

      for (let z of mathsIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        mathsIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (mathsScore === 100) {
      document.getElementById("sectionCodingmaths").classList.add("back14");
      mathsScore100.classList.remove("d-none");
      mathsScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqmaths.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingmathsQues.innerHTML = formattedQuestion;

    fillBlankmaths.classList.add("d-none");
    op1maths.textContent = y.op1;
    op2maths.textContent = y.op2;
    op3maths.textContent = y.op3;
    op4maths.textContent = y.op4;

    const allOps = [op1maths, op2maths, op3maths, op4maths];
    allOps.forEach((op, i) => {
      op.onclick = function () {
        allOps.forEach(o => (o.disabled = true));
        clearInterval(mathsTimerId);
        mathsTime = 20;

        if (op.textContent === y.ans) {
          op.style.backgroundColor = "green";
          mathsScore += 10;
          mathsScoreShow.textContent = "+10";
          mathsScoreShow.style.color = "green";
        } else {
          op.style.backgroundColor = "red";
          mathsScore -= 5;
          mathsScoreShow.textContent = "-5";
          mathsScoreShow.style.color = "red";
          let wrong_answer = { ques: y.ques, correct: y.ans, wrong: op.textContent };
          mathsIncorrectAnswers.push(wrong_answer);
        }

        mathsScoreDisplay.textContent = "Score: " + mathsScore + "/100";

        mathsSkip.textContent = "Next";
        mathsSkip.style.backgroundColor = "#23ebdd";
        mathsSkip.style.borderColor = "#23ebdd";

        mathsSkip.onclick = function () {
          mathsQuestionNumber.textContent = "Question:" + mathsQuestionCount + "/10";
          mathsQuestionCount += 1;
          allOps.forEach(o => {
            o.disabled = false;
            o.style.backgroundColor = "white";
          });
          codingmathsStart();
        };
      };
    });

    mathsSkip.onclick = function () {
      clearInterval(mathsTimerId);
      mathsTime = 20;
      mathsQuestionNumber.textContent = "Question:" + mathsQuestionCount + "/10";
      mathsQuestionCount += 1;
      allOps.forEach(o => {
        o.disabled = false;
        o.style.backgroundColor = "white";
      });
      let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
      mathsIncorrectAnswers.push(wrong_answer);
      codingmathsStart();
    };
  } 
}
else if (mathsLevel === 2) {
  let mathsRandom = Math.floor(Math.random() * codingmaths2Arr.length);
  let y = codingmaths2Arr[mathsRandom];
  mathsTimer.textContent = "25";
  mathsTime = 25;

  mathsTimerId = setInterval(function () {
    mathsTime = mathsTime - 1;
    if (mathsTime == 0) {
      clearInterval(mathsTimerId);
      mathsQuestionNumber.textContent = "Question:" + mathsQuestionCount + "/10";
      mathsQuestionCount = mathsQuestionCount + 1;
      mathsTime = 25;
      codingmathsStart();
    }
    if (mathsTime <= 5) {
      mathsTimer.style.color = "red";
      mathsTimer.textContent = mathsTime;
    } else {
      mathsTimer.textContent = mathsTime;
    }
  }, 1000);

  if (mathsQuestionCount == 12) {
    clearInterval(mathsTimerId);
    mcqmaths.classList.add("d-none");
    document.getElementById("mathsScoreEnd").textContent = mathsScoreDisplay.textContent;
    fillBlankmaths.classList.add("d-none");
    codingmathsShow.classList.add("d-none");
    codingResultmaths.classList.remove("d-none");

    if (mathsScore < 70) {
      mathsScoreBelow70.classList.remove("d-none");
      mathsScore100.classList.add("d-none");
      sectionCodingmaths.classList.add("back15");

      mathsResult1.textContent = "Test finished!!";
      mathsResult2.textContent = "😓 Oops! Not quite right.";
      mathsResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      mathsResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      mathsIncorrectAnswersDisplay.appendChild(h2);

      for (let z of mathsIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        mathsIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (mathsScore < 100) {
      mathsScoreBelow70.classList.remove("d-none");
      mathsScore100.classList.add("d-none");
      sectionCodingmaths.classList.add("back15");

      mathsResult1.textContent = "Test finished!!";
      mathsResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      mathsResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      mathsResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      mathsIncorrectAnswersDisplay.appendChild(h2);

      for (let z of mathsIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        mathsIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (mathsScore === 100) {
      document.getElementById("sectionCodingmaths").classList.add("back14");
      mathsScore100.classList.remove("d-none");
      mathsScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqmaths.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingmathsQues.innerHTML = formattedQuestion;
    fillBlankmaths.classList.add("d-none");
    op1maths.textContent = y.op1;
    op2maths.textContent = y.op2;
    op3maths.textContent = y.op3;
    op4maths.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(mathsTimerId);
      mathsTime = 25;
      mathsSkip.textContent = "Next";
      mathsSkip.style.backgroundColor = "#23ebdd";
      mathsSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        mathsScore += 10;
        mathsScoreShow.textContent = "+10";
        mathsScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        mathsScore -= 5;
        mathsScoreShow.textContent = "-5";
        mathsScoreShow.style.color = "red";
        mathsIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      mathsScoreDisplay.textContent = "Score: " + mathsScore + "/100";
    }

    op1maths.onclick = () => handleOptionClick(op1maths, [op2maths, op3maths, op4maths]);
    op2maths.onclick = () => handleOptionClick(op2maths, [op1maths, op3maths, op4maths]);
    op3maths.onclick = () => handleOptionClick(op3maths, [op1maths, op2maths, op4maths]);
    op4maths.onclick = () => handleOptionClick(op4maths, [op1maths, op2maths, op3maths]);

    mathsSkip.onclick = function () {
      clearInterval(mathsTimerId);
      mathsTime = 25;
      mathsQuestionNumber.textContent = "Question:" + mathsQuestionCount + "/10";
      mathsQuestionCount++;
      [op1maths, op2maths, op3maths, op4maths].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      mathsIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingmathsStart();
    };
  }
}
else if (mathsLevel === 3) {
  let mathsRandom = Math.floor(Math.random() * codingmaths3Arr.length);
  let y = codingmaths3Arr[mathsRandom];
  mathsTimer.textContent = "30";
  mathsTime = 30;

  mathsTimerId = setInterval(function () {
    mathsTime = mathsTime - 1;
    if (mathsTime == 0) {
      clearInterval(mathsTimerId);
      mathsQuestionNumber.textContent = "Question:" + mathsQuestionCount + "/10";
      mathsQuestionCount = mathsQuestionCount + 1;
      mathsTime = 30;
      codingmathsStart();
    }
    if (mathsTime <= 5) {
      mathsTimer.style.color = "red";
      mathsTimer.textContent = mathsTime;
    } else {
      mathsTimer.textContent = mathsTime;
    }
  }, 1000);

  if (mathsQuestionCount == 12) {
    clearInterval(mathsTimerId);
    mcqmaths.classList.add("d-none");
    document.getElementById("mathsScoreEnd").textContent = mathsScoreDisplay.textContent;
    fillBlankmaths.classList.add("d-none");
    codingmathsShow.classList.add("d-none");
    codingResultmaths.classList.remove("d-none");

    if (mathsScore < 70) {
      mathsScoreBelow70.classList.remove("d-none");
      mathsScore100.classList.add("d-none");
      sectionCodingmaths.classList.add("back15");

      mathsResult1.textContent = "Test finished!!";
      mathsResult2.textContent = "😓 Oops! Not quite right.";
      mathsResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      mathsResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      mathsIncorrectAnswersDisplay.appendChild(h2);

      for (let z of mathsIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        mathsIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (mathsScore < 100) {
      mathsScoreBelow70.classList.remove("d-none");
      mathsScore100.classList.add("d-none");
      sectionCodingmaths.classList.add("back15");

      mathsResult1.textContent = "Test finished!!";
      mathsResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      mathsResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      mathsResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      mathsIncorrectAnswersDisplay.appendChild(h2);

      for (let z of mathsIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        mathsIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (mathsScore === 100) {
      document.getElementById("sectionCodingmaths").classList.add("back14");
      mathsScore100.classList.remove("d-none");
      mathsScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqmaths.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingmathsQues.innerHTML = formattedQuestion;
    fillBlankmaths.classList.add("d-none");
    op1maths.textContent = y.op1;
    op2maths.textContent = y.op2;
    op3maths.textContent = y.op3;
    op4maths.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(mathsTimerId);
      mathsTime = 30;
      mathsSkip.textContent = "Next";
      mathsSkip.style.backgroundColor = "#23ebdd";
      mathsSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        mathsScore += 10;
        mathsScoreShow.textContent = "+10";
        mathsScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        mathsScore -= 5;
        mathsScoreShow.textContent = "-5";
        mathsScoreShow.style.color = "red";
        mathsIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      mathsScoreDisplay.textContent = "Score: " + mathsScore + "/100";
    }

    op1maths.onclick = () => handleOptionClick(op1maths, [op2maths, op3maths, op4maths]);
    op2maths.onclick = () => handleOptionClick(op2maths, [op1maths, op3maths, op4maths]);
    op3maths.onclick = () => handleOptionClick(op3maths, [op1maths, op2maths, op4maths]);
    op4maths.onclick = () => handleOptionClick(op4maths, [op1maths, op2maths, op3maths]);

    mathsSkip.onclick = function () {
      clearInterval(mathsTimerId);
      mathsTime = 30;
      mathsQuestionNumber.textContent = "Question:" + mathsQuestionCount + "/10";
      mathsQuestionCount++;
      [op1maths, op2maths, op3maths, op4maths].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      mathsIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingmathsStart();
    };
  }
}


}
function resetCodingmaths(){
  document.getElementById("codingmathsShow").classList.add("d-none");
  document.getElementById("codingResultmaths").classList.add("d-none");
  document.getElementById("codingmathsHide").classList.remove("d-none");

  document.getElementById("mathsQuestionNumber").innerText = "Question: 1/10";
  document.getElementById("mathsScoreDisplay").innerText = "Score: 0/100";
  document.getElementById("mathsScoreShow").innerText = "";
  document.getElementById("mathsTimer").innerText = "00";
  document.getElementById("codingmathsQues").innerText = "";

  document.getElementById("op1maths").innerText = "option1";
  document.getElementById("op2maths").innerText = "option2";
  document.getElementById("op3maths").innerText = "option3";
  document.getElementById("op4maths").innerText = "option4";

  mathsIncorrectAnswers = [];
  document.getElementById("mathsIncorrectAnswersDisplay").innerHTML = "";

  mathsScore100.classList.add("d-none");
  mathsScoreBelow70.classList.add("d-none");

  mathsResult1.textContent = "";
  mathsResult2.textContent = "";
  mathsResult3.src = "";
  mathsResult4.textContent = "";

  sectionCodingmaths.classList.remove("back14");
  sectionCodingmaths.classList.remove("back15");

  document.getElementById("mathsFillAns").value = "";
  document.getElementById("fillBlankmaths").style.display = "none";
  document.getElementById("mcqmaths").style.display = "block";

  document.getElementById("mathsStatus1").classList.remove("d-none");
  document.getElementById("mathsStatus2").classList.add("d-none");
  document.getElementById("mathsStatus3").classList.add("d-none");

  if (typeof mathsTimerId !== "undefined") {
    clearInterval(mathsTimerId);
  }
  mathsTime = 20;
  mathsQuestionCount = 2;
  mathsScore = 0;
}

function mathsResetLevel() {
  mathsButton1.disabled = false;
  mathsButton2.disabled = false;
  mathsButton3.disabled = false;
  mathsButton.classList.add("d-none");
  mathsIncorrectAnswers = [];
}

// current Affairs

let affairButton = document.getElementById("affairButton");
let affairButton1 = document.getElementById("affairButton1");
let affairButton2 = document.getElementById("affairButton2");
let affairButton3 = document.getElementById("affairButton3");
let affairLevel = 0;
let affairCodingTest = document.getElementById("affairCodingTest");
let affairTimer = document.getElementById("affairTimer");

affairButton1.onclick = function () {
  affairButton2.disabled = true;
  affairButton3.disabled = true;
  affairLevel = 1;

  affairButton.classList.remove("d-none");
  affairButton.classList.add("d-block");
};

affairButton2.onclick = function () {
  affairButton1.disabled = true;
  affairButton3.disabled = true;
  affairLevel = 2;

  affairButton.classList.remove("d-none");
  affairButton.classList.add("d-block");
};

affairButton3.onclick = function () {
  affairButton2.disabled = true;
  affairButton1.disabled = true;
  affairLevel = 3;

  affairButton.classList.remove("d-none");
  affairButton.classList.add("d-block");
};

let affairTime = 0;

let codingaffairShow = document.getElementById("codingaffairShow");
let codingaffairHide = document.getElementById("codingaffairHide");
let codingaffairBack = document.getElementById("codingaffairBack");

codingaffairBack.onclick = function () {
  codingaffairShow.classList.add("d-none");
  codingaffairHide.classList.remove("d-none");
};


let codingaffair1Arr=[
  {
  "ques": "Who is the current President of the United States?<br><br>",
  "quesType": "mcq",
  "op1": "Donald Trump",
  "op2": "Joe Biden",
  "op3": "Barack Obama",
  "op4": "George Bush",
  "ans": "Joe Biden"
},
{
  "ques": "Which country won the FIFA World Cup 2022?<br><br>",
  "quesType": "mcq",
  "op1": "France",
  "op2": "Brazil",
  "op3": "Argentina",
  "op4": "Germany",
  "ans": "Argentina"
},
{
  "ques": "Who is the current Prime Minister of India?<br><br>",
  "quesType": "mcq",
  "op1": "Narendra Modi",
  "op2": "Rahul Gandhi",
  "op3": "Amit Shah",
  "op4": "Manmohan Singh",
  "ans": "Narendra Modi"
},
{
  "ques": "Where were the 2024 Summer Olympics held?<br><br>",
  "quesType": "mcq",
  "op1": "Paris",
  "op2": "Tokyo",
  "op3": "Los Angeles",
  "op4": "London",
  "ans": "Paris"
},
{
  "ques": "Which company became the first to reach a $3 trillion market cap?<br><br>",
  "quesType": "mcq",
  "op1": "Microsoft",
  "op2": "Amazon",
  "op3": "Google",
  "op4": "Apple",
  "ans": "Apple"
},
{
  "ques": "Who is the CEO of Tesla?<br><br>",
  "quesType": "mcq",
  "op1": "Jeff Bezos",
  "op2": "Tim Cook",
  "op3": "Sundar Pichai",
  "op4": "Elon Musk",
  "ans": "Elon Musk"
},
{
  "ques": "Which country hosted the G20 Summit in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "China",
  "op2": "India",
  "op3": "Italy",
  "op4": "Australia",
  "ans": "India"
},
{
  "ques": "Which vaccine company developed Covishield?<br><br>",
  "quesType": "mcq",
  "op1": "Moderna",
  "op2": "Pfizer",
  "op3": "Serum Institute of India",
  "op4": "AstraZeneca",
  "ans": "Serum Institute of India"
},
{
  "ques": "Who won the Nobel Peace Prize in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Malala Yousafzai",
  "op2": "Volodymyr Zelenskyy",
  "op3": "Narges Mohammadi",
  "op4": "Greta Thunberg",
  "ans": "Narges Mohammadi"
},
{
  "ques": "Which country recently joined BRICS?<br><br>",
  "quesType": "mcq",
  "op1": "Argentina",
  "op2": "Japan",
  "op3": "Canada",
  "op4": "Mexico",
  "ans": "Argentina"
},
{
  "ques": "Who is the current Secretary-General of the UN?<br><br>",
  "quesType": "mcq",
  "op1": "António Guterres",
  "op2": "Ban Ki-moon",
  "op3": "Kofi Annan",
  "op4": "Jens Stoltenberg",
  "ans": "António Guterres"
},
{
  "ques": "Which country launched the Chandrayaan-3 mission?<br><br>",
  "quesType": "mcq",
  "op1": "China",
  "op2": "Russia",
  "op3": "India",
  "op4": "USA",
  "ans": "India"
},
{
  "ques": "Who is the current Chief Justice of India?<br><br>",
  "quesType": "mcq",
  "op1": "D.Y. Chandrachud",
  "op2": "N.V. Ramana",
  "op3": "Sharad Bobde",
  "op4": "Ranjan Gogoi",
  "ans": "D.Y. Chandrachud"
},
{
  "ques": "Who won the Ballon d'Or 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Cristiano Ronaldo",
  "op2": "Kylian Mbappé",
  "op3": "Karim Benzema",
  "op4": "Lionel Messi",
  "ans": "Lionel Messi"
},
{
  "ques": "Who is the current Finance Minister of India?<br><br>",
  "quesType": "mcq",
  "op1": "Smriti Irani",
  "op2": "Nirmala Sitharaman",
  "op3": "Piyush Goyal",
  "op4": "Amit Shah",
  "ans": "Nirmala Sitharaman"
},
{
  "ques": "Which city hosted the COP28 climate summit?<br><br>",
  "quesType": "mcq",
  "op1": "Glasgow",
  "op2": "Dubai",
  "op3": "Madrid",
  "op4": "New York",
  "ans": "Dubai"
},
{
  "ques": "Who won the Miss Universe 2023 title?<br><br>",
  "quesType": "mcq",
  "op1": "Harnaaz Sandhu",
  "op2": "Andrea Meza",
  "op3": "Sheynnis Palacios",
  "op4": "Zozibini Tunzi",
  "ans": "Sheynnis Palacios"
},
{
  "ques": "Who is the current RBI Governor?<br><br>",
  "quesType": "mcq",
  "op1": "Urjit Patel",
  "op2": "Raghuram Rajan",
  "op3": "Shaktikanta Das",
  "op4": "D. Subbarao",
  "ans": "Shaktikanta Das"
},
{
  "ques": "Which Indian city topped the Smart City Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Mumbai",
  "op3": "Bangalore",
  "op4": "Indore",
  "ans": "Indore"
},
{
  "ques": "Who is the current Vice President of India?<br><br>",
  "quesType": "mcq",
  "op1": "Venkaiah Naidu",
  "op2": "Jagdeep Dhankhar",
  "op3": "Rajnath Singh",
  "op4": "Piyush Goyal",
  "ans": "Jagdeep Dhankhar"
},
{
  "ques": "Which country exited the European Union in 2020?<br><br>",
  "quesType": "mcq",
  "op1": "France",
  "op2": "Germany",
  "op3": "UK",
  "op4": "Spain",
  "ans": "UK"
},
{
  "ques": "Who is the CEO of Google?<br><br>",
  "quesType": "mcq",
  "op1": "Sundar Pichai",
  "op2": "Satya Nadella",
  "op3": "Tim Cook",
  "op4": "Mark Zuckerberg",
  "ans": "Sundar Pichai"
},
{
  "ques": "Which country recently banned TikTok nationwide?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "India",
  "op3": "Australia",
  "op4": "Russia",
  "ans": "India"
},
{
  "ques": "Which country is the largest oil producer?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "USA",
  "op3": "Saudi Arabia",
  "op4": "Iran",
  "ans": "USA"
},
{
  "ques": "Who won the Australian Open 2024 (Men's Singles)?<br><br>",
  "quesType": "mcq",
  "op1": "Rafael Nadal",
  "op2": "Novak Djokovic",
  "op3": "Carlos Alcaraz",
  "op4": "Daniil Medvedev",
  "ans": "Novak Djokovic"
},
{
  "ques": "Which company owns Instagram?<br><br>",
  "quesType": "mcq",
  "op1": "Google",
  "op2": "Microsoft",
  "op3": "Meta",
  "op4": "Amazon",
  "ans": "Meta"
},
{
  "ques": "Who is the Defence Minister of India?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Shah",
  "op2": "Rajnath Singh",
  "op3": "Nitin Gadkari",
  "op4": "Smriti Irani",
  "ans": "Rajnath Singh"
},
{
  "ques": "Which city topped the Global Liveability Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Vienna",
  "op2": "London",
  "op3": "Sydney",
  "op4": "Toronto",
  "ans": "Vienna"
},
{
  "ques": "Which Indian state launched the 'Mukhyamantri Ladli Behna Yojana'?<br><br>",
  "quesType": "mcq",
  "op1": "Uttar Pradesh",
  "op2": "Madhya Pradesh",
  "op3": "Rajasthan",
  "op4": "Bihar",
  "ans": "Madhya Pradesh"
},
{
  "ques": "Which Indian won the ICC Men's Cricketer of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Rohit Sharma",
  "op3": "Shubman Gill",
  "op4": "Hardik Pandya",
  "ans": "Virat Kohli"
}
,

  {
    "ques": "Who is the current Chief Minister of Uttar Pradesh?<br><br>",
    "quesType": "mcq",
    "op1": "Akhilesh Yadav",
    "op2": "Yogi Adityanath",
    "op3": "Mayawati",
    "op4": "Keshav Prasad Maurya",
    "ans": "Yogi Adityanath"
  },
  {
    "ques": "Which country will host the FIFA World Cup 2026?<br><br>",
    "quesType": "mcq",
    "op1": "Qatar",
    "op2": "USA, Canada & Mexico",
    "op3": "France",
    "op4": "Italy",
    "ans": "USA, Canada & Mexico"
  },
  {
    "ques": "Who is the current President of France?<br><br>",
    "quesType": "mcq",
    "op1": "Emmanuel Macron",
    "op2": "Nicolas Sarkozy",
    "op3": "Francois Hollande",
    "op4": "Marine Le Pen",
    "ans": "Emmanuel Macron"
  },
  {
    "ques": "Which Indian city will host the 2036 Olympics (bid proposed)?<br><br>",
    "quesType": "mcq",
    "op1": "Delhi",
    "op2": "Mumbai",
    "op3": "Ahmedabad",
    "op4": "Chennai",
    "ans": "Ahmedabad"
  },
  {
    "ques": "Who is the current Chairman of ISRO?<br><br>",
    "quesType": "mcq",
    "op1": "K. Sivan",
    "op2": "A.S. Kiran Kumar",
    "op3": "S. Somanath",
    "op4": "G. Madhavan Nair",
    "ans": "S. Somanath"
  },
  {
    "ques": "Which country ranks first in Global Happiness Index 2024?<br><br>",
    "quesType": "mcq",
    "op1": "Denmark",
    "op2": "Norway",
    "op3": "Finland",
    "op4": "Sweden",
    "ans": "Finland"
  },
  {
    "ques": "Who is the current CEO of Microsoft?<br><br>",
    "quesType": "mcq",
    "op1": "Sundar Pichai",
    "op2": "Satya Nadella",
    "op3": "Tim Cook",
    "op4": "Mark Zuckerberg",
    "ans": "Satya Nadella"
  },
  {
    "ques": "Which country hosted the Cricket World Cup 2023?<br><br>",
    "quesType": "mcq",
    "op1": "England",
    "op2": "Australia",
    "op3": "India",
    "op4": "New Zealand",
    "ans": "India"
  },
  {
    "ques": "Which bank is the largest public sector bank in India?<br><br>",
    "quesType": "mcq",
    "op1": "ICICI Bank",
    "op2": "HDFC Bank",
    "op3": "Axis Bank",
    "op4": "State Bank of India",
    "ans": "State Bank of India"
  },
  {
    "ques": "Which city hosted G20 Summit 2024?<br><br>",
    "quesType": "mcq",
    "op1": "New Delhi",
    "op2": "Rome",
    "op3": "Rio de Janeiro",
    "op4": "Berlin",
    "ans": "Rio de Janeiro"
  },
  {
    "ques": "Who is the current Home Minister of India?<br><br>",
    "quesType": "mcq",
    "op1": "Rajnath Singh",
    "op2": "Amit Shah",
    "op3": "Nitin Gadkari",
    "op4": "Narendra Modi",
    "ans": "Amit Shah"
  },
  {
    "ques": "Which country won the ICC T20 World Cup 2024?<br><br>",
    "quesType": "mcq",
    "op1": "Australia",
    "op2": "India",
    "op3": "Pakistan",
    "op4": "England",
    "ans": "India"
  },
  {
    "ques": "Who is the current President of Russia?<br><br>",
    "quesType": "mcq",
    "op1": "Vladimir Putin",
    "op2": "Dmitry Medvedev",
    "op3": "Alexei Navalny",
    "op4": "Sergey Lavrov",
    "ans": "Vladimir Putin"
  },
  {
    "ques": "Which country is the largest gold producer?<br><br>",
    "quesType": "mcq",
    "op1": "USA",
    "op2": "Russia",
    "op3": "China",
    "op4": "India",
    "ans": "China"
  },
  {
    "ques": "Who is the current Health Minister of India?<br><br>",
    "quesType": "mcq",
    "op1": "Nirmala Sitharaman",
    "op2": "Mansukh Mandaviya",
    "op3": "Amit Shah",
    "op4": "Smriti Irani",
    "ans": "Mansukh Mandaviya"
  },
  {
    "ques": "Where is the headquarters of WHO?<br><br>",
    "quesType": "mcq",
    "op1": "New York",
    "op2": "London",
    "op3": "Geneva",
    "op4": "Paris",
    "ans": "Geneva"
  },
  {
    "ques": "Who is the current President of China?<br><br>",
    "quesType": "mcq",
    "op1": "Xi Jinping",
    "op2": "Li Keqiang",
    "op3": "Hu Jintao",
    "op4": "Wang Yi",
    "ans": "Xi Jinping"
  },
  {
    "ques": "Which country is the largest coal producer?<br><br>",
    "quesType": "mcq",
    "op1": "India",
    "op2": "USA",
    "op3": "Australia",
    "op4": "China",
    "ans": "China"
  },
  {
    "ques": "Which Indian state topped the State Energy Efficiency Index 2024?<br><br>",
    "quesType": "mcq",
    "op1": "Kerala",
    "op2": "Gujarat",
    "op3": "Tamil Nadu",
    "op4": "Karnataka",
    "ans": "Tamil Nadu"
  },
  {
    "ques": "Who won the Booker Prize 2023?<br><br>",
    "quesType": "mcq",
    "op1": "Damon Galgut",
    "op2": "Shehan Karunatilaka",
    "op3": "Geetanjali Shree",
    "op4": "Paul Lynch",
    "ans": "Paul Lynch"
  },
  {
    "ques": "Which country recently legalized same-sex marriage in 2024?<br><br>",
    "quesType": "mcq",
    "op1": "India",
    "op2": "Japan",
    "op3": "Thailand",
    "op4": "USA",
    "ans": "Thailand"
  },
  {
    "ques": "Who is the CEO of OpenAI?<br><br>",
    "quesType": "mcq",
    "op1": "Elon Musk",
    "op2": "Sam Altman",
    "op3": "Mark Zuckerberg",
    "op4": "Sundar Pichai",
    "ans": "Sam Altman"
  },
  {
    "ques": "Who won the Nobel Prize in Literature 2023?<br><br>",
    "quesType": "mcq",
    "op1": "Jon Fosse",
    "op2": "Annie Ernaux",
    "op3": "Kazuo Ishiguro",
    "op4": "Abdulrazak Gurnah",
    "ans": "Jon Fosse"
  },
  {
    "ques": "Which city topped the Swachh Survekshan 2024?<br><br>",
    "quesType": "mcq",
    "op1": "Indore",
    "op2": "Surat",
    "op3": "Bhopal",
    "op4": "Mysore",
    "ans": "Indore"
  },
  {
    "ques": "Who is the Chairman of Tata Group?<br><br>",
    "quesType": "mcq",
    "op1": "Ratan Tata",
    "op2": "N. Chandrasekaran",
    "op3": "Cyrus Mistry",
    "op4": "Mukesh Ambani",
    "ans": "N. Chandrasekaran"
  },
  {
    "ques": "Which Indian state has the largest forest cover?<br><br>",
    "quesType": "mcq",
    "op1": "Madhya Pradesh",
    "op2": "Arunachal Pradesh",
    "op3": "Chhattisgarh",
    "op4": "Odisha",
    "ans": "Madhya Pradesh"
  },
  {
    "ques": "Who is the current Railway Minister of India?<br><br>",
    "quesType": "mcq",
    "op1": "Ashwini Vaishnaw",
    "op2": "Piyush Goyal",
    "op3": "Rajnath Singh",
    "op4": "Nitin Gadkari",
    "ans": "Ashwini Vaishnaw"
  },
  {
    "ques": "Which country is the largest producer of coffee?<br><br>",
    "quesType": "mcq",
    "op1": "Colombia",
    "op2": "Vietnam",
    "op3": "India",
    "op4": "Brazil",
    "ans": "Brazil"
  },
  {
    "ques": "Which airport is the busiest in the world (2024)?<br><br>",
    "quesType": "mcq",
    "op1": "Beijing Capital Airport",
    "op2": "Dubai International Airport",
    "op3": "Atlanta Hartsfield-Jackson",
    "op4": "Heathrow Airport",
    "ans": "Atlanta Hartsfield-Jackson"
  },
  {
    "ques": "Who is the current Chief Minister of Uttar Pradesh?<br><br>",
    "quesType": "mcq",
    "op1": "Akhilesh Yadav",
    "op2": "Yogi Adityanath",
    "op3": "Mayawati",
    "op4": "Raj Nath Singh",
    "ans": "Yogi Adityanath"
  },
  {
    "ques": "Which is the latest country to join NATO?<br><br>",
    "quesType": "mcq",
    "op1": "Ukraine",
    "op2": "Finland",
    "op3": "Sweden",
    "op4": "Georgia",
    "ans": "Sweden"
  },
  {
    "ques": "Who is the chairman of ISRO in 2024?<br><br>",
    "quesType": "mcq",
    "op1": "K. Sivan",
    "op2": "S. Somanath",
    "op3": "G. Madhavan Nair",
    "op4": "A. S. Kiran Kumar",
    "ans": "S. Somanath"
  },
  {
    "ques": "Who won the ICC Women's Cricketer of the Year 2023?<br><br>",
    "quesType": "mcq",
    "op1": "Smriti Mandhana",
    "op2": "Harmanpreet Kaur",
    "op3": "Ellyse Perry",
    "op4": "Meg Lanning",
    "ans": "Harmanpreet Kaur"
  },
  {
    "ques": "Which country will host the FIFA World Cup 2026?<br><br>",
    "quesType": "mcq",
    "op1": "USA, Canada & Mexico",
    "op2": "Qatar",
    "op3": "Germany",
    "op4": "Spain",
    "ans": "USA, Canada & Mexico"
  },
  {
    "ques": "Who is the current Chief Minister of Tamil Nadu?<br><br>",
    "quesType": "mcq",
    "op1": "Edappadi K. Palaniswami",
    "op2": "M.K. Stalin",
    "op3": "O. Panneerselvam",
    "op4": "Jayalalithaa",
    "ans": "M.K. Stalin"
  },
  {
    "ques": "Which company launched ChatGPT?<br><br>",
    "quesType": "mcq",
    "op1": "Microsoft",
    "op2": "Google",
    "op3": "OpenAI",
    "op4": "Amazon",
    "ans": "OpenAI"
  },
  {
    "ques": "Who is the current Minister of External Affairs of India?<br><br>",
    "quesType": "mcq",
    "op1": "Subrahmanyam Jaishankar",
    "op2": "Amit Shah",
    "op3": "Piyush Goyal",
    "op4": "Rajnath Singh",
    "ans": "Subrahmanyam Jaishankar"
  },
  {
    "ques": "Which country topped the Human Development Index 2023?<br><br>",
    "quesType": "mcq",
    "op1": "Norway",
    "op2": "Switzerland",
    "op3": "Australia",
    "op4": "Ireland",
    "ans": "Norway"
  },
  {
    "ques": "Who is the new President of Iran elected in 2024?<br><br>",
    "quesType": "mcq",
    "op1": "Hassan Rouhani",
    "op2": "Ebrahim Raisi",
    "op3": "Mohammad Mokhber",
    "op4": "Ali Khamenei",
    "ans": "Mohammad Mokhber"
  },
  {
    "ques": "Which Indian won the Oscar for Best Original Song 2023?<br><br>",
    "quesType": "mcq",
    "op1": "A.R. Rahman",
    "op2": "Ilaiyaraaja",
    "op3": "M.M. Keeravani",
    "op4": "Pritam",
    "ans": "M.M. Keeravani"
  },
  {
    "ques": "Which country hosted the Asian Games 2023?<br><br>",
    "quesType": "mcq",
    "op1": "Japan",
    "op2": "China",
    "op3": "South Korea",
    "op4": "Indonesia",
    "ans": "China"
  },
  {
    "ques": "Which is India’s first bullet train corridor?<br><br>",
    "quesType": "mcq",
    "op1": "Delhi-Mumbai",
    "op2": "Mumbai-Ahmedabad",
    "op3": "Chennai-Bangalore",
    "op4": "Kolkata-Patna",
    "ans": "Mumbai-Ahmedabad"
  },
  {
    "ques": "Which Indian city hosted the G20 Summit 2023?<br><br>",
    "quesType": "mcq",
    "op1": "Bangalore",
    "op2": "Mumbai",
    "op3": "Delhi",
    "op4": "Hyderabad",
    "ans": "Delhi"
  },
  {
    "ques": "Who won the ICC T20 World Cup 2024?<br><br>",
    "quesType": "mcq",
    "op1": "India",
    "op2": "Australia",
    "op3": "England",
    "op4": "West Indies",
    "ans": "India"
  },
  {
    "ques": "Which app is banned in India since 2020?<br><br>",
    "quesType": "mcq",
    "op1": "WhatsApp",
    "op2": "Telegram",
    "op3": "Instagram",
    "op4": "TikTok",
    "ans": "TikTok"
  },
  {
    "ques": "Which bank merged with HDFC Ltd in 2023?<br><br>",
    "quesType": "mcq",
    "op1": "SBI",
    "op2": "ICICI Bank",
    "op3": "HDFC Bank",
    "op4": "Axis Bank",
    "ans": "HDFC Bank"
  },
  {
    "ques": "Which is India’s first private rocket launch company?<br><br>",
    "quesType": "mcq",
    "op1": "ISRO",
    "op2": "Skyroot Aerospace",
    "op3": "Agnikul Cosmos",
    "op4": "Bellatrix Aerospace",
    "ans": "Skyroot Aerospace"
  },
  {
    "ques": "Who won the Nobel Prize in Physics 2023?<br><br>",
    "quesType": "mcq",
    "op1": "Alain Aspect",
    "op2": "Pierre Agostini",
    "op3": "Roger Penrose",
    "op4": "Reinhard Genzel",
    "ans": "Pierre Agostini"
  },
  {
    "ques": "Where is the new Parliament building of India located?<br><br>",
    "quesType": "mcq",
    "op1": "Kolkata",
    "op2": "Delhi",
    "op3": "Mumbai",
    "op4": "Chennai",
    "ans": "Delhi"
  },
  {
    "ques": "Which country hosts Wimbledon?<br><br>",
    "quesType": "mcq",
    "op1": "France",
    "op2": "Australia",
    "op3": "USA",
    "op4": "UK",
    "ans": "UK"
  },
  {
    "ques": "Which Indian city hosted the SCO Summit 2023?<br><br>",
    "quesType": "mcq",
    "op1": "Jaipur",
    "op2": "Bangalore",
    "op3": "New Delhi",
    "op4": "Goa",
    "ans": "New Delhi"
  },
  {
    "ques": "Who is the current CEO of Microsoft?<br><br>",
    "quesType": "mcq",
    "op1": "Tim Cook",
    "op2": "Sundar Pichai",
    "op3": "Satya Nadella",
    "op4": "Elon Musk",
    "ans": "Satya Nadella"
  },
  {
    "ques": "Which river is declared as a ‘Living Entity’ in India?<br><br>",
    "quesType": "mcq",
    "op1": "Yamuna",
    "op2": "Ganga",
    "op3": "Godavari",
    "op4": "Narmada",
    "ans": "Ganga"
  },
  {
    "ques": "Which company manufactures the iPhone?<br><br>",
    "quesType": "mcq",
    "op1": "Microsoft",
    "op2": "Samsung",
    "op3": "Apple",
    "op4": "Google",
    "ans": "Apple"
  },
  {
    "ques": "Which country topped the World Happiness Report 2024?<br><br>",
    "quesType": "mcq",
    "op1": "Denmark",
    "op2": "Switzerland",
    "op3": "Finland",
    "op4": "Sweden",
    "ans": "Finland"
  },
  {
    "ques": "Which is India’s first semi-high-speed train?<br><br>",
    "quesType": "mcq",
    "op1": "Rajdhani Express",
    "op2": "Shatabdi Express",
    "op3": "Vande Bharat Express",
    "op4": "Duronto Express",
    "ans": "Vande Bharat Express"
  },
  {
    "ques": "Who won the French Open 2024 (Men’s Singles)?<br><br>",
    "quesType": "mcq",
    "op1": "Carlos Alcaraz",
    "op2": "Novak Djokovic",
    "op3": "Rafael Nadal",
    "op4": "Stefanos Tsitsipas",
    "ans": "Carlos Alcaraz"
  },
  {
    "ques": "Who is the current Home Minister of India?<br><br>",
    "quesType": "mcq",
    "op1": "Narendra Modi",
    "op2": "Rajnath Singh",
    "op3": "Amit Shah",
    "op4": "Nitin Gadkari",
    "ans": "Amit Shah"
  },
  {
    "ques": "Which city is known as the 'Silicon Valley of India'?<br><br>",
    "quesType": "mcq",
    "op1": "Hyderabad",
    "op2": "Bangalore",
    "op3": "Pune",
    "op4": "Chennai",
    "ans": "Bangalore"
  },
  {
    "ques": "Who is the current President of France?<br><br>",
    "quesType": "mcq",
    "op1": "Emmanuel Macron",
    "op2": "Olaf Scholz",
    "op3": "Rishi Sunak",
    "op4": "Pedro Sánchez",
    "ans": "Emmanuel Macron"
  },
  {
    "ques": "Which country recently hosted the ICC Cricket World Cup 2023?<br><br>",
    "quesType": "mcq",
    "op1": "Australia",
    "op2": "India",
    "op3": "England",
    "op4": "South Africa",
    "ans": "India"
  },
  {
    "ques": "Who is the current Chief Minister of Uttar Pradesh?<br><br>",
    "quesType": "mcq",
    "op1": "Yogi Adityanath",
    "op2": "Akhilesh Yadav",
    "op3": "Mayawati",
    "op4": "Rahul Gandhi",
    "ans": "Yogi Adityanath"
  },
  {
    "ques": "Which country is the largest producer of coffee?<br><br>",
    "quesType": "mcq",
    "op1": "Colombia",
    "op2": "Vietnam",
    "op3": "Brazil",
    "op4": "Ethiopia",
    "ans": "Brazil"
  },
  {
    "ques": "Who is the current CEO of Amazon?<br><br>",
    "quesType": "mcq",
    "op1": "Jeff Bezos",
    "op2": "Andy Jassy",
    "op3": "Elon Musk",
    "op4": "Satya Nadella",
    "ans": "Andy Jassy"
  },
  {
    "ques": "Which is the capital city of Canada?<br><br>",
    "quesType": "mcq",
    "op1": "Toronto",
    "op2": "Vancouver",
    "op3": "Ottawa",
    "op4": "Montreal",
    "ans": "Ottawa"
  },
  {
    "ques": "Which Indian city will host the G20 Summit 2024?<br><br>",
    "quesType": "mcq",
    "op1": "Delhi",
    "op2": "Hyderabad",
    "op3": "Mumbai",
    "op4": "Bangalore",
    "ans": "Delhi"
  },
  {
    "ques": "Who is the Governor of Maharashtra?<br><br>",
    "quesType": "mcq",
    "op1": "Bhagat Singh Koshyari",
    "op2": "Ramesh Bais",
    "op3": "Anandiben Patel",
    "op4": "Kalraj Mishra",
    "ans": "Ramesh Bais"
  },
  {
    "ques": "Who won the IPL 2024?<br><br>",
    "quesType": "mcq",
    "op1": "Mumbai Indians",
    "op2": "Chennai Super Kings",
    "op3": "Gujarat Titans",
    "op4": "Kolkata Knight Riders",
    "ans": "Chennai Super Kings"
  },
  {
    "ques": "Who is the chairman of ISRO?<br><br>",
    "quesType": "mcq",
    "op1": "K. Sivan",
    "op2": "S. Somanath",
    "op3": "A. S. Kiran Kumar",
    "op4": "G. Madhavan Nair",
    "ans": "S. Somanath"
  },
  {
    "ques": "Which company acquired Twitter in 2022?<br><br>",
    "quesType": "mcq",
    "op1": "Meta",
    "op2": "Tesla",
    "op3": "SpaceX",
    "op4": "Elon Musk",
    "ans": "Elon Musk"
  },
  {
    "ques": "Which country won the Hockey World Cup 2023?<br><br>",
    "quesType": "mcq",
    "op1": "India",
    "op2": "Belgium",
    "op3": "Australia",
    "op4": "Germany",
    "ans": "Germany"
  },
  {
    "ques": "Who is the current Railway Minister of India?<br><br>",
    "quesType": "mcq",
    "op1": "Nitin Gadkari",
    "op2": "Piyush Goyal",
    "op3": "Ashwini Vaishnaw",
    "op4": "Hardeep Singh Puri",
    "ans": "Ashwini Vaishnaw"
  },
  {
    "ques": "Which bank is the largest public sector bank in India?<br><br>",
    "quesType": "mcq",
    "op1": "HDFC Bank",
    "op2": "ICICI Bank",
    "op3": "SBI",
    "op4": "PNB",
    "ans": "SBI"
  },
  {
    "ques": "Where is the headquarters of UNESCO?<br><br>",
    "quesType": "mcq",
    "op1": "Geneva",
    "op2": "New York",
    "op3": "Paris",
    "op4": "London",
    "ans": "Paris"
  },
  {
    "ques": "Who is the current Health Minister of India?<br><br>",
    "quesType": "mcq",
    "op1": "Mansukh Mandaviya",
    "op2": "Harsh Vardhan",
    "op3": "Piyush Goyal",
    "op4": "Smriti Irani",
    "ans": "Mansukh Mandaviya"
  },
  {
    "ques": "Which Indian city is known as the 'Pink City'?<br><br>",
    "quesType": "mcq",
    "op1": "Jodhpur",
    "op2": "Jaipur",
    "op3": "Udaipur",
    "op4": "Agra",
    "ans": "Jaipur"
  },
  {
    "ques": "Who is the current Governor of RBI?<br><br>",
    "quesType": "mcq",
    "op1": "Urjit Patel",
    "op2": "Raghuram Rajan",
    "op3": "Shaktikanta Das",
    "op4": "Bimal Jalan",
    "ans": "Shaktikanta Das"
  },
  {
    "ques": "Which planet is known as the 'Red Planet'?<br><br>",
    "quesType": "mcq",
    "op1": "Venus",
    "op2": "Mars",
    "op3": "Jupiter",
    "op4": "Mercury",
    "ans": "Mars"
  },
  {
    "ques": "Which Indian state has the largest population?<br><br>",
    "quesType": "mcq",
    "op1": "Maharashtra",
    "op2": "Uttar Pradesh",
    "op3": "Bihar",
    "op4": "West Bengal",
    "ans": "Uttar Pradesh"
  },
  {
    "ques": "Who is the current Home Minister of India?<br><br>",
    "quesType": "mcq",
    "op1": "Nirmala Sitharaman",
    "op2": "Rajnath Singh",
    "op3": "Amit Shah",
    "op4": "Smriti Irani",
    "ans": "Amit Shah"
  },
  {
    "ques": "Which is the national sport of India?<br><br>",
    "quesType": "mcq",
    "op1": "Cricket",
    "op2": "Hockey",
    "op3": "Kabaddi",
    "op4": "Football",
    "ans": "Hockey"
  },
  {
    "ques": "Who is the captain of the Indian Men's Cricket Team in 2024?<br><br>",
    "quesType": "mcq",
    "op1": "Virat Kohli",
    "op2": "Rohit Sharma",
    "op3": "Shubman Gill",
    "op4": "Hardik Pandya",
    "ans": "Rohit Sharma"
  },
  {
    "ques": "Who is the CEO of Microsoft?<br><br>",
    "quesType": "mcq",
    "op1": "Tim Cook",
    "op2": "Sundar Pichai",
    "op3": "Satya Nadella",
    "op4": "Mark Zuckerberg",
    "ans": "Satya Nadella"
  },
  {
    "ques": "Which Indian airport is the busiest?<br><br>",
    "quesType": "mcq",
    "op1": "Bangalore International Airport",
    "op2": "Indira Gandhi International Airport",
    "op3": "Chhatrapati Shivaji International Airport",
    "op4": "Rajiv Gandhi International Airport",
    "ans": "Indira Gandhi International Airport"
  },
  {
    "ques": "Who is the current Education Minister of India?<br><br>",
    "quesType": "mcq",
    "op1": "Dharmendra Pradhan",
    "op2": "Smriti Irani",
    "op3": "Nirmala Sitharaman",
    "op4": "Ramesh Pokhriyal",
    "ans": "Dharmendra Pradhan"
  },
  {
    "ques": "Which is the largest river in India?<br><br>",
    "quesType": "mcq",
    "op1": "Yamuna",
    "op2": "Brahmaputra",
    "op3": "Godavari",
    "op4": "Ganga",
    "ans": "Ganga"
  },
  {
    "ques": "Who is the current Speaker of Lok Sabha?<br><br>",
    "quesType": "mcq",
    "op1": "Om Birla",
    "op2": "Sumitra Mahajan",
    "op3": "Venkaiah Naidu",
    "op4": "M. Venkaiah",
    "ans": "Om Birla"
  },
  {
    "ques": "Which Indian city is famous for the Golden Temple?<br><br>",
    "quesType": "mcq",
    "op1": "Delhi",
    "op2": "Amritsar",
    "op3": "Patna",
    "op4": "Lucknow",
    "ans": "Amritsar"
  },
  {
    "ques": "Who is the current Chief Minister of Tamil Nadu?<br><br>",
    "quesType": "mcq",
    "op1": "Edappadi K. Palaniswami",
    "op2": "M. K. Stalin",
    "op3": "O. Panneerselvam",
    "op4": "K. Anbazhagan",
    "ans": "M. K. Stalin"
  },
  {
    "ques": "Who is the CEO of Meta Platforms?<br><br>",
    "quesType": "mcq",
    "op1": "Elon Musk",
    "op2": "Tim Cook",
    "op3": "Mark Zuckerberg",
    "op4": "Sundar Pichai",
    "ans": "Mark Zuckerberg"
  },
  {
    "ques": "Which country hosted the 2023 Asian Games?<br><br>",
    "quesType": "mcq",
    "op1": "Japan",
    "op2": "China",
    "op3": "South Korea",
    "op4": "Thailand",
    "ans": "China"
  },
  {
    "ques": "Who is the Women and Child Development Minister of India?<br><br>",
    "quesType": "mcq",
    "op1": "Smriti Irani",
    "op2": "Nirmala Sitharaman",
    "op3": "Sonia Gandhi",
    "op4": "Meenakshi Lekhi",
    "ans": "Smriti Irani"
  },
  {
    "ques": "Which country recently launched its first space station module?<br><br>",
    "quesType": "mcq",
    "op1": "Japan",
    "op2": "India",
    "op3": "Russia",
    "op4": "China",
    "ans": "China"
  },
  {
    "ques": "Who is the Governor of the Reserve Bank of India as of 2025?<br><br>",
    "quesType": "mcq",
    "op1": "Raghuram Rajan",
    "op2": "Shaktikanta Das",
    "op3": "Urjit Patel",
    "op4": "Y.V. Reddy",
    "ans": "Shaktikanta Das"
  },
  {
    "ques": "Which Indian state is known as the 'Spice Garden of India'?<br><br>",
    "quesType": "mcq",
    "op1": "Kerala",
    "op2": "Tamil Nadu",
    "op3": "Assam",
    "op4": "Sikkim",
    "ans": "Kerala"
  },
  {
    "ques": "Which city will host the Commonwealth Games 2026?<br><br>",
    "quesType": "mcq",
    "op1": "Delhi",
    "op2": "London",
    "op3": "Melbourne",
    "op4": "Birmingham",
    "ans": "Melbourne"
  },
  {
    "ques": "Which country recently became a NATO member?<br><br>",
    "quesType": "mcq",
    "op1": "Ukraine",
    "op2": "Sweden",
    "op3": "Finland",
    "op4": "Georgia",
    "ans": "Finland"
  },
  {
    "ques": "Who is the current Chief Minister of West Bengal?<br><br>",
    "quesType": "mcq",
    "op1": "Mamata Banerjee",
    "op2": "Suvendu Adhikari",
    "op3": "Babul Supriyo",
    "op4": "Dilip Ghosh",
    "ans": "Mamata Banerjee"
  },
  {
    "ques": "Which Indian company launched 5G services first?<br><br>",
    "quesType": "mcq",
    "op1": "Airtel",
    "op2": "BSNL",
    "op3": "Vodafone Idea",
    "op4": "Jio",
    "ans": "Jio"
  },
  {
    "ques": "Which Indian city has the largest metro network?<br><br>",
    "quesType": "mcq",
    "op1": "Delhi",
    "op2": "Mumbai",
    "op3": "Bangalore",
    "op4": "Hyderabad",
    "ans": "Delhi"
  },
  {
    "ques": "Who is the current Chief Election Commissioner of India?<br><br>",
    "quesType": "mcq",
    "op1": "Sunil Arora",
    "op2": "Rajiv Kumar",
    "op3": "Sushil Chandra",
    "op4": "O.P. Rawat",
    "ans": "Rajiv Kumar"
  },
  {
    "ques": "Which Indian movie won the Best Original Song at the Oscars 2023?<br><br>",
    "quesType": "mcq",
    "op1": "RRR",
    "op2": "Gully Boy",
    "op3": "Lagaan",
    "op4": "Pushpa",
    "ans": "RRR"
  },
  {
    "ques": "Who is the first Indian to win two Olympic individual gold medals?<br><br>",
    "quesType": "mcq",
    "op1": "Abhinav Bindra",
    "op2": "Neeraj Chopra",
    "op3": "PV Sindhu",
    "op4": "Saina Nehwal",
    "ans": "Neeraj Chopra"
  },
  {
    "ques": "Which country has the world's largest population as of 2024?<br><br>",
    "quesType": "mcq",
    "op1": "USA",
    "op2": "India",
    "op3": "China",
    "op4": "Indonesia",
    "ans": "India"
  },
  {
    "ques": "Which Indian state recently passed the Uniform Civil Code Bill?<br><br>",
    "quesType": "mcq",
    "op1": "Gujarat",
    "op2": "Uttarakhand",
    "op3": "Madhya Pradesh",
    "op4": "Uttar Pradesh",
    "ans": "Uttarakhand"
  },
  {
    "ques": "Who is the Governor of the Bank of England?<br><br>",
    "quesType": "mcq",
    "op1": "Mark Carney",
    "op2": "Andrew Bailey",
    "op3": "Jerome Powell",
    "op4": "Christine Lagarde",
    "ans": "Andrew Bailey"
  },
  {
    "ques": "Which country recently became malaria-free?<br><br>",
    "quesType": "mcq",
    "op1": "Sri Lanka",
    "op2": "China",
    "op3": "Maldives",
    "op4": "Thailand",
    "ans": "China"
  },
  {
    "ques": "Who is the CEO of Amazon?<br><br>",
    "quesType": "mcq",
    "op1": "Andy Jassy",
    "op2": "Jeff Bezos",
    "op3": "Elon Musk",
    "op4": "Larry Page",
    "ans": "Andy Jassy"
  },
  {
    "ques": "Which Indian state has the highest literacy rate?<br><br>",
    "quesType": "mcq",
    "op1": "Kerala",
    "op2": "Goa",
    "op3": "Tamil Nadu",
    "op4": "Punjab",
    "ans": "Kerala"
  },
  {
    "ques": "Who is the current Science and Technology Minister of India?<br><br>",
    "quesType": "mcq",
    "op1": "Dr. Jitendra Singh",
    "op2": "Nirmala Sitharaman",
    "op3": "Smriti Irani",
    "op4": "Piyush Goyal",
    "ans": "Dr. Jitendra Singh"
  },
  {
    "ques": "Who won the ICC Emerging Cricketer of the Year 2023?<br><br>",
    "quesType": "mcq",
    "op1": "Shubman Gill",
    "op2": "Ishan Kishan",
    "op3": "Yashasvi Jaiswal",
    "op4": "Umran Malik",
    "ans": "Yashasvi Jaiswal"
  },
  {
    "ques": "Which Indian city hosted the Pravasi Bharatiya Divas 2023?<br><br>",
    "quesType": "mcq",
    "op1": "New Delhi",
    "op2": "Indore",
    "op3": "Ahmedabad",
    "op4": "Hyderabad",
    "ans": "Indore"
  },
  {
    "ques": "Who is the President of Sri Lanka?<br><br>",
    "quesType": "mcq",
    "op1": "Ranil Wickremesinghe",
    "op2": "Gotabaya Rajapaksa",
    "op3": "Mahinda Rajapaksa",
    "op4": "Maithripala Sirisena",
    "ans": "Ranil Wickremesinghe"
  },
  {
    "ques": "Who is the Director-General of WHO?<br><br>",
    "quesType": "mcq",
    "op1": "Tedros Adhanom Ghebreyesus",
    "op2": "Ban Ki-moon",
    "op3": "Antonio Guterres",
    "op4": "Kofi Annan",
    "ans": "Tedros Adhanom Ghebreyesus"
  },
  {
    "ques": "Which country recently banned cryptocurrency trading?<br><br>",
    "quesType": "mcq",
    "op1": "USA",
    "op2": "India",
    "op3": "China",
    "op4": "Japan",
    "ans": "China"
  },
  {
    "ques": "Who won the Nobel Prize in Physics 2023?<br><br>",
    "quesType": "mcq",
    "op1": "Alain Aspect",
    "op2": "Pierre Agostini",
    "op3": "Roger Penrose",
    "op4": "Syukuro Manabe",
    "ans": "Pierre Agostini"
  },
  {
    "ques": "Which state topped the SDG India Index 2024?<br><br>",
    "quesType": "mcq",
    "op1": "Tamil Nadu",
    "op2": "Kerala",
    "op3": "Haryana",
    "op4": "Karnataka",
    "ans": "Kerala"
  },
  {
  "ques": "Who is the current Chief Minister of Maharashtra?<br><br>",
  "quesType": "mcq",
  "op1": "Devendra Fadnavis",
  "op2": "Eknath Shinde",
  "op3": "Uddhav Thackeray",
  "op4": "Ajit Pawar",
  "ans": "Eknath Shinde"
},
{
  "ques": "Which Indian city hosted the Pravasi Bharatiya Divas 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Indore",
  "op2": "Delhi",
  "op3": "Ahmedabad",
  "op4": "Hyderabad",
  "ans": "Indore"
},
{
  "ques": "Which country will host the 2030 FIFA World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Spain, Portugal, Morocco",
  "op2": "USA, Canada, Mexico",
  "op3": "Argentina",
  "op4": "China",
  "ans": "Spain, Portugal, Morocco"
},
{
  "ques": "Who won the Best Actor award at Oscars 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Cillian Murphy",
  "op2": "Leonardo DiCaprio",
  "op3": "Brendan Fraser",
  "op4": "Brad Pitt",
  "ans": "Cillian Murphy"
},
{
  "ques": "Which state topped the NITI Aayog SDG Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Kerala",
  "op2": "Gujarat",
  "op3": "Maharashtra",
  "op4": "Tamil Nadu",
  "ans": "Kerala"
},
{
  "ques": "Which country is the largest coal producer?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "USA",
  "op3": "Australia",
  "op4": "China",
  "ans": "China"
},
{
  "ques": "Who is the new President of France?<br><br>",
  "quesType": "mcq",
  "op1": "Emmanuel Macron",
  "op2": "Marine Le Pen",
  "op3": "Nicolas Sarkozy",
  "op4": "Francois Hollande",
  "ans": "Emmanuel Macron"
},
{
  "ques": "Who won the Nobel Prize in Literature 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Annie Ernaux",
  "op2": "Jon Fosse",
  "op3": "Kazuo Ishiguro",
  "op4": "Olga Tokarczuk",
  "ans": "Jon Fosse"
},
{
  "ques": "Which city hosted the BRICS Summit 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Beijing",
  "op2": "New Delhi",
  "op3": "Johannesburg",
  "op4": "Moscow",
  "ans": "Johannesburg"
},
{
  "ques": "Which company is the parent of WhatsApp?<br><br>",
  "quesType": "mcq",
  "op1": "Google",
  "op2": "Meta",
  "op3": "Apple",
  "op4": "Microsoft",
  "ans": "Meta"
},
{
  "ques": "Who is the Speaker of Lok Sabha in India (2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Om Birla",
  "op2": "Sumitra Mahajan",
  "op3": "Meira Kumar",
  "op4": "Venkaiah Naidu",
  "ans": "Om Birla"
},
{
  "ques": "Which country is the largest gold producer?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "Russia",
  "op3": "China",
  "op4": "USA",
  "ans": "China"
},
{
  "ques": "Who is the Chief Minister of West Bengal?<br><br>",
  "quesType": "mcq",
  "op1": "Mamata Banerjee",
  "op2": "Suvendu Adhikari",
  "op3": "Abhishek Banerjee",
  "op4": "Dilip Ghosh",
  "ans": "Mamata Banerjee"
},
{
  "ques": "Which country hosted COP27?<br><br>",
  "quesType": "mcq",
  "op1": "UAE",
  "op2": "Egypt",
  "op3": "UK",
  "op4": "USA",
  "ans": "Egypt"
},
{
  "ques": "Who is the current Union Health Minister of India?<br><br>",
  "quesType": "mcq",
  "op1": "Dr. Harsh Vardhan",
  "op2": "Mansukh Mandaviya",
  "op3": "Nirmala Sitharaman",
  "op4": "Smriti Irani",
  "ans": "Mansukh Mandaviya"
},
{
  "ques": "Which country is the largest coffee producer?<br><br>",
  "quesType": "mcq",
  "op1": "Vietnam",
  "op2": "Colombia",
  "op3": "Brazil",
  "op4": "India",
  "ans": "Brazil"
},
{
  "ques": "Who won the Grammy for Album of the Year 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Adele",
  "op2": "Taylor Swift",
  "op3": "Harry Styles",
  "op4": "Beyoncé",
  "ans": "Taylor Swift"
},
{
  "ques": "Which Indian state has the highest literacy rate?<br><br>",
  "quesType": "mcq",
  "op1": "Mizoram",
  "op2": "Kerala",
  "op3": "Goa",
  "op4": "Sikkim",
  "ans": "Kerala"
},
{
  "ques": "Who won the ICC Women's T20 World Cup 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "England",
  "op3": "India",
  "op4": "South Africa",
  "ans": "Australia"
},
{
  "ques": "Which city hosted the 2023 ASEAN Summit?<br><br>",
  "quesType": "mcq",
  "op1": "Jakarta",
  "op2": "Bangkok",
  "op3": "Manila",
  "op4": "Hanoi",
  "ans": "Jakarta"
},
{
  "ques": "Who is the Union Minister of Road Transport & Highways?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Shah",
  "op2": "Piyush Goyal",
  "op3": "Nitin Gadkari",
  "op4": "Rajeev Chandrasekhar",
  "ans": "Nitin Gadkari"
},
{
  "ques": "Which country is the largest wheat exporter?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "USA",
  "op3": "Australia",
  "op4": "Russia",
  "ans": "Russia"
},
{
  "ques": "Which bank is India’s largest public sector bank?<br><br>",
  "quesType": "mcq",
  "op1": "ICICI Bank",
  "op2": "HDFC Bank",
  "op3": "Axis Bank",
  "op4": "State Bank of India",
  "ans": "State Bank of India"
},
{
  "ques": "Who is the current Governor of Maharashtra?<br><br>",
  "quesType": "mcq",
  "op1": "Bhagat Singh Koshyari",
  "op2": "Ramesh Bais",
  "op3": "Anandiben Patel",
  "op4": "Arif Mohammad Khan",
  "ans": "Ramesh Bais"
},
{
  "ques": "Which country is the largest iron ore producer?<br><br>",
  "quesType": "mcq",
  "op1": "China",
  "op2": "India",
  "op3": "Australia",
  "op4": "Brazil",
  "ans": "Australia"
},
{
  "ques": "Who is the current Chief Minister of Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Arvind Kejriwal",
  "op2": "Manish Sisodia",
  "op3": "Anil Baijal",
  "op4": "Kapil Mishra",
  "ans": "Arvind Kejriwal"
},
{
  "ques": "Who is the current President of Sri Lanka?<br><br>",
  "quesType": "mcq",
  "op1": "Gotabaya Rajapaksa",
  "op2": "Ranil Wickremesinghe",
  "op3": "Maithripala Sirisena",
  "op4": "Mahinda Rajapaksa",
  "ans": "Ranil Wickremesinghe"
},
{
  "ques": "Which state is the largest producer of tea in India?<br><br>",
  "quesType": "mcq",
  "op1": "West Bengal",
  "op2": "Kerala",
  "op3": "Assam",
  "op4": "Sikkim",
  "ans": "Assam"
},
{
  "ques": "Which company is the biggest electric car manufacturer?<br><br>",
  "quesType": "mcq",
  "op1": "Ford",
  "op2": "Toyota",
  "op3": "Tesla",
  "op4": "BMW",
  "ans": "Tesla"
},
{
  "ques": "Who is the Chairman of Tata Sons?<br><br>",
  "quesType": "mcq",
  "op1": "Ratan Tata",
  "op2": "Natarajan Chandrasekaran",
  "op3": "Cyrus Mistry",
  "op4": "Noel Tata",
  "ans": "Natarajan Chandrasekaran"
},
{
  "ques": "Which state launched the ‘Amma Canteen’ scheme?<br><br>",
  "quesType": "mcq",
  "op1": "Kerala",
  "op2": "Tamil Nadu",
  "op3": "Karnataka",
  "op4": "Odisha",
  "ans": "Tamil Nadu"
}
,
{
  "ques": "Who is the current Chief Minister of Tamil Nadu?<br><br>",
  "quesType": "mcq",
  "op1": "M.K. Stalin",
  "op2": "Edappadi K. Palaniswami",
  "op3": "O. Panneerselvam",
  "op4": "K. Anbazhagan",
  "ans": "M.K. Stalin"
},
{
  "ques": "Which Indian city hosted the Khelo India Youth Games 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Pune",
  "op2": "Bhubaneswar",
  "op3": "Chennai",
  "op4": "Guwahati",
  "ans": "Chennai"
},
{
  "ques": "Who is the current Governor of West Bengal?<br><br>",
  "quesType": "mcq",
  "op1": "Jagdeep Dhankhar",
  "op2": "C.V. Ananda Bose",
  "op3": "Arif Mohammad Khan",
  "op4": "Anusuiya Uikey",
  "ans": "C.V. Ananda Bose"
},
{
  "ques": "Who won the ICC Women's Cricketer of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Smriti Mandhana",
  "op2": "Mithali Raj",
  "op3": "Harmanpreet Kaur",
  "op4": "Deepti Sharma",
  "ans": "Harmanpreet Kaur"
},
{
  "ques": "Which country will host the FIFA World Cup 2026?<br><br>",
  "quesType": "mcq",
  "op1": "USA, Canada & Mexico",
  "op2": "Qatar",
  "op3": "Spain & Portugal",
  "op4": "Saudi Arabia",
  "ans": "USA, Canada & Mexico"
},
{
  "ques": "Who is the current Chief Minister of Rajasthan?<br><br>",
  "quesType": "mcq",
  "op1": "Ashok Gehlot",
  "op2": "Vasundhara Raje",
  "op3": "Bhajan Lal Sharma",
  "op4": "Sachin Pilot",
  "ans": "Bhajan Lal Sharma"
},
{
  "ques": "Who is the Union Minister for External Affairs?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Shah",
  "op2": "S. Jaishankar",
  "op3": "Rajnath Singh",
  "op4": "Nitin Gadkari",
  "ans": "S. Jaishankar"
},
{
  "ques": "Which country recently became a NATO member in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Sweden",
  "op2": "Finland",
  "op3": "Ukraine",
  "op4": "Georgia",
  "ans": "Sweden"
},
{
  "ques": "Which is the largest desert in the world?<br><br>",
  "quesType": "mcq",
  "op1": "Gobi",
  "op2": "Sahara",
  "op3": "Arabian",
  "op4": "Antarctic Desert",
  "ans": "Antarctic Desert"
},
{
  "ques": "Who is the Managing Director of IMF?<br><br>",
  "quesType": "mcq",
  "op1": "Christine Lagarde",
  "op2": "Kristalina Georgieva",
  "op3": "Janet Yellen",
  "op4": "Ngozi Okonjo-Iweala",
  "ans": "Kristalina Georgieva"
},
{
  "ques": "Which is the smallest state in India by area?<br><br>",
  "quesType": "mcq",
  "op1": "Goa",
  "op2": "Sikkim",
  "op3": "Tripura",
  "op4": "Mizoram",
  "ans": "Goa"
},
{
  "ques": "Who is the first Indian to win two Olympic medals in Badminton?<br><br>",
  "quesType": "mcq",
  "op1": "Saina Nehwal",
  "op2": "P.V. Sindhu",
  "op3": "Kidambi Srikanth",
  "op4": "Lakshya Sen",
  "ans": "P.V. Sindhu"
},
{
  "ques": "Which Indian state is the largest tea producer?<br><br>",
  "quesType": "mcq",
  "op1": "Assam",
  "op2": "West Bengal",
  "op3": "Kerala",
  "op4": "Tamil Nadu",
  "ans": "Assam"
},
{
  "ques": "Which city is called the Silicon Valley of India?<br><br>",
  "quesType": "mcq",
  "op1": "Hyderabad",
  "op2": "Chennai",
  "op3": "Pune",
  "op4": "Bangalore",
  "ans": "Bangalore"
},
{
  "ques": "Which Indian state launched the 'Anna Bhagya' scheme?<br><br>",
  "quesType": "mcq",
  "op1": "Kerala",
  "op2": "Karnataka",
  "op3": "Telangana",
  "op4": "Odisha",
  "ans": "Karnataka"
},
{
  "ques": "Who is the current Environment Minister of India?<br><br>",
  "quesType": "mcq",
  "op1": "Bhupender Yadav",
  "op2": "Prakash Javadekar",
  "op3": "Nitin Gadkari",
  "op4": "Piyush Goyal",
  "ans": "Bhupender Yadav"
},
{
  "ques": "Who won the Nobel Prize in Literature 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Annie Ernaux",
  "op2": "Jon Fosse",
  "op3": "Kazuo Ishiguro",
  "op4": "Olga Tokarczuk",
  "ans": "Jon Fosse"
},
{
  "ques": "Which city will host the Asian Games 2026?<br><br>",
  "quesType": "mcq",
  "op1": "Beijing",
  "op2": "Hangzhou",
  "op3": "Nagoya",
  "op4": "Jakarta",
  "ans": "Nagoya"
},
{
  "ques": "Who is the founder of SpaceX?<br><br>",
  "quesType": "mcq",
  "op1": "Jeff Bezos",
  "op2": "Richard Branson",
  "op3": "Elon Musk",
  "op4": "Larry Page",
  "ans": "Elon Musk"
},
{
  "ques": "Which is the largest continent?<br><br>",
  "quesType": "mcq",
  "op1": "Africa",
  "op2": "Europe",
  "op3": "Asia",
  "op4": "North America",
  "ans": "Asia"
},
{
  "ques": "Who is the Prime Minister of the UK?<br><br>",
  "quesType": "mcq",
  "op1": "Boris Johnson",
  "op2": "Liz Truss",
  "op3": "Rishi Sunak",
  "op4": "Keir Starmer",
  "ans": "Rishi Sunak"
},
{
  "ques": "Which Indian city is known as the City of Lakes?<br><br>",
  "quesType": "mcq",
  "op1": "Jaipur",
  "op2": "Jodhpur",
  "op3": "Udaipur",
  "op4": "Bhopal",
  "ans": "Udaipur"
},
{
  "ques": "Which company developed the COVID-19 vaccine Sputnik V?<br><br>",
  "quesType": "mcq",
  "op1": "Moderna",
  "op2": "Pfizer",
  "op3": "Gamaleeya Research Institute",
  "op4": "Johnson & Johnson",
  "ans": "Gamaleeya Research Institute"
},
{
  "ques": "Who is the Chairman of Tata Sons?<br><br>",
  "quesType": "mcq",
  "op1": "Cyrus Mistry",
  "op2": "Natarajan Chandrasekaran",
  "op3": "Ratan Tata",
  "op4": "Rajesh Gopinathan",
  "ans": "Natarajan Chandrasekaran"
},
{
  "ques": "Which Indian state has the highest forest cover?<br><br>",
  "quesType": "mcq",
  "op1": "Madhya Pradesh",
  "op2": "Arunachal Pradesh",
  "op3": "Chhattisgarh",
  "op4": "Odisha",
  "ans": "Madhya Pradesh"
},
{
  "ques": "Which river is known as the 'Sorrow of Bihar'?<br><br>",
  "quesType": "mcq",
  "op1": "Ganga",
  "op2": "Kosi",
  "op3": "Son",
  "op4": "Gandak",
  "ans": "Kosi"
},
{
  "ques": "Who is the founder of Facebook?<br><br>",
  "quesType": "mcq",
  "op1": "Sundar Pichai",
  "op2": "Jeff Bezos",
  "op3": "Mark Zuckerberg",
  "op4": "Jack Dorsey",
  "ans": "Mark Zuckerberg"
},
{
  "ques": "Which is the largest island in the world?<br><br>",
  "quesType": "mcq",
  "op1": "Madagascar",
  "op2": "Greenland",
  "op3": "New Guinea",
  "op4": "Borneo",
  "ans": "Greenland"
},
{
  "ques": "Which city is known as the Financial Capital of India?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Bangalore",
  "op3": "Hyderabad",
  "op4": "Mumbai",
  "ans": "Mumbai"
},
{
  "ques": "Who is the current Law Minister of India?<br><br>",
  "quesType": "mcq",
  "op1": "Arjun Ram Meghwal",
  "op2": "Kiren Rijiju",
  "op3": "Piyush Goyal",
  "op4": "Amit Shah",
  "ans": "Arjun Ram Meghwal"
}
,
{
  "ques": "Who is the current Chief Minister of Maharashtra?<br><br>",
  "quesType": "mcq",
  "op1": "Devendra Fadnavis",
  "op2": "Eknath Shinde",
  "op3": "Uddhav Thackeray",
  "op4": "Ajit Pawar",
  "ans": "Eknath Shinde"
},
{
  "ques": "Who is the CEO of SpaceX?<br><br>",
  "quesType": "mcq",
  "op1": "Jeff Bezos",
  "op2": "Elon Musk",
  "op3": "Sundar Pichai",
  "op4": "Tim Cook",
  "ans": "Elon Musk"
},
{
  "ques": "Which country will host the Winter Olympics 2026?<br><br>",
  "quesType": "mcq",
  "op1": "China",
  "op2": "Italy",
  "op3": "USA",
  "op4": "Russia",
  "ans": "Italy"
},
{
  "ques": "Who is the current Railway Minister of India?<br><br>",
  "quesType": "mcq",
  "op1": "Piyush Goyal",
  "op2": "Ashwini Vaishnaw",
  "op3": "Rajnath Singh",
  "op4": "Nitin Gadkari",
  "ans": "Ashwini Vaishnaw"
},
{
  "ques": "Which country topped the Human Development Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Switzerland",
  "op2": "Norway",
  "op3": "Sweden",
  "op4": "Finland",
  "ans": "Norway"
},
{
  "ques": "Who is the current Environment Minister of India?<br><br>",
  "quesType": "mcq",
  "op1": "Bhupender Yadav",
  "op2": "Nitin Gadkari",
  "op3": "Piyush Goyal",
  "op4": "Harsh Vardhan",
  "ans": "Bhupender Yadav"
},
{
  "ques": "Which Indian state has the largest coastline?<br><br>",
  "quesType": "mcq",
  "op1": "Kerala",
  "op2": "Tamil Nadu",
  "op3": "Gujarat",
  "op4": "Andhra Pradesh",
  "ans": "Gujarat"
},
{
  "ques": "Who won the Women's Singles Wimbledon 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Iga Swiatek",
  "op2": "Aryna Sabalenka",
  "op3": "Ons Jabeur",
  "op4": "Elena Rybakina",
  "ans": "Iga Swiatek"
},
{
  "ques": "Which country recently lifted the ban on women driving?<br><br>",
  "quesType": "mcq",
  "op1": "Iran",
  "op2": "Afghanistan",
  "op3": "Saudi Arabia",
  "op4": "Iraq",
  "ans": "Saudi Arabia"
},
{
  "ques": "Who is the current Sports Minister of India?<br><br>",
  "quesType": "mcq",
  "op1": "Anurag Thakur",
  "op2": "Kiren Rijiju",
  "op3": "Rajyavardhan Singh Rathore",
  "op4": "Smriti Irani",
  "ans": "Anurag Thakur"
},
{
  "ques": "Which city hosted the BRICS Summit 2024?<br><br>",
  "quesType": "mcq",
  "op1": "New Delhi",
  "op2": "Cape Town",
  "op3": "Moscow",
  "op4": "Brasilia",
  "ans": "Cape Town"
},
{
  "ques": "Who is the President of the World Bank?<br><br>",
  "quesType": "mcq",
  "op1": "David Malpass",
  "op2": "Ajay Banga",
  "op3": "Kristalina Georgieva",
  "op4": "Jim Yong Kim",
  "ans": "Ajay Banga"
},
{
  "ques": "Which Indian airport is the busiest by passenger traffic?<br><br>",
  "quesType": "mcq",
  "op1": "Bangalore",
  "op2": "Hyderabad",
  "op3": "Delhi IGI",
  "op4": "Mumbai CSIA",
  "ans": "Delhi IGI"
},
{
  "ques": "Which country ranks first in Global Innovation Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Germany",
  "op3": "Switzerland",
  "op4": "Sweden",
  "ans": "Switzerland"
},
{
  "ques": "Who is the Prime Minister of the UK?<br><br>",
  "quesType": "mcq",
  "op1": "Rishi Sunak",
  "op2": "Boris Johnson",
  "op3": "Liz Truss",
  "op4": "Keir Starmer",
  "ans": "Rishi Sunak"
},
{
  "ques": "Which country produces the most wheat?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "India",
  "op3": "China",
  "op4": "Russia",
  "ans": "China"
},
{
  "ques": "Who won the Pulitzer Prize for Fiction 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Barbara Kingsolver",
  "op2": "Colson Whitehead",
  "op3": "Hernan Diaz",
  "op4": "Paul Harding",
  "ans": "Hernan Diaz"
},
{
  "ques": "Which Indian state is the largest milk producer?<br><br>",
  "quesType": "mcq",
  "op1": "Punjab",
  "op2": "Uttar Pradesh",
  "op3": "Gujarat",
  "op4": "Rajasthan",
  "ans": "Uttar Pradesh"
},
{
  "ques": "Who is the Education Minister of India?<br><br>",
  "quesType": "mcq",
  "op1": "Dharmendra Pradhan",
  "op2": "Smriti Irani",
  "op3": "Ramesh Pokhriyal",
  "op4": "Piyush Goyal",
  "ans": "Dharmendra Pradhan"
},
{
  "ques": "Which country ranks first in the Global Peace Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Denmark",
  "op2": "Sweden",
  "op3": "Iceland",
  "op4": "New Zealand",
  "ans": "Iceland"
},
{
  "ques": "Who won the ICC Women's Cricketer of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Smriti Mandhana",
  "op2": "Meg Lanning",
  "op3": "Harmanpreet Kaur",
  "op4": "Alyssa Healy",
  "ans": "Harmanpreet Kaur"
},
{
  "ques": "Who is the CEO of Twitter?<br><br>",
  "quesType": "mcq",
  "op1": "Elon Musk",
  "op2": "Linda Yaccarino",
  "op3": "Jack Dorsey",
  "op4": "Parag Agrawal",
  "ans": "Linda Yaccarino"
},
{
  "ques": "Which country hosted the COP29 climate summit?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Brazil",
  "op3": "Azerbaijan",
  "op4": "Germany",
  "ans": "Azerbaijan"
},
{
  "ques": "Who is the President of Brazil?<br><br>",
  "quesType": "mcq",
  "op1": "Jair Bolsonaro",
  "op2": "Michel Temer",
  "op3": "Dilma Rousseff",
  "op4": "Luiz Inácio Lula da Silva",
  "ans": "Luiz Inácio Lula da Silva"
},
{
  "ques": "Which Indian city is known as the 'Silicon Valley of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Pune",
  "op2": "Hyderabad",
  "op3": "Bangalore",
  "op4": "Chennai",
  "ans": "Bangalore"
},
{
  "ques": "Who is the Minister of Road Transport & Highways in India?<br><br>",
  "quesType": "mcq",
  "op1": "Piyush Goyal",
  "op2": "Rajnath Singh",
  "op3": "Nitin Gadkari",
  "op4": "Smriti Irani",
  "ans": "Nitin Gadkari"
},
{
  "ques": "Which country is the largest steel producer?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Russia",
  "op3": "Japan",
  "op4": "China",
  "ans": "China"
},
{
  "ques": "Who is the President of Pakistan?<br><br>",
  "quesType": "mcq",
  "op1": "Imran Khan",
  "op2": "Shehbaz Sharif",
  "op3": "Arif Alvi",
  "op4": "Bilawal Bhutto",
  "ans": "Arif Alvi"
},
{
  "ques": "Who is the current Director General of the International Atomic Energy Agency (IAEA)?<br><br>",
  "quesType": "mcq",
  "op1": "Yukiya Amano",
  "op2": "Mohamed ElBaradei",
  "op3": "Rafael Grossi",
  "op4": "Ban Ki-moon",
  "ans": "Rafael Grossi"
},
{
  "ques": "Which country is the largest exporter of tea?<br><br>",
  "quesType": "mcq",
  "op1": "China",
  "op2": "India",
  "op3": "Sri Lanka",
  "op4": "Kenya",
  "ans": "China"
}
,
{
  "ques": "Who is the current Chief Minister of Karnataka?<br><br>",
  "quesType": "mcq",
  "op1": "B.S. Yediyurappa",
  "op2": "H.D. Kumaraswamy",
  "op3": "Siddaramaiah",
  "op4": "Basavaraj Bommai",
  "ans": "Siddaramaiah"
},
{
  "ques": "Who won the Best Director award at Oscars 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Christopher Nolan",
  "op2": "Steven Spielberg",
  "op3": "James Cameron",
  "op4": "Martin Scorsese",
  "ans": "Christopher Nolan"
},
{
  "ques": "Which country is the largest producer of crude oil?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "USA",
  "op3": "Saudi Arabia",
  "op4": "Iran",
  "ans": "USA"
},
{
  "ques": "Who is the current President of Russia?<br><br>",
  "quesType": "mcq",
  "op1": "Vladimir Putin",
  "op2": "Dmitry Medvedev",
  "op3": "Alexei Navalny",
  "op4": "Sergey Lavrov",
  "ans": "Vladimir Putin"
},
{
  "ques": "Which Indian won the Padma Vibhushan in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Ratan Tata",
  "op2": "Kumar Mangalam Birla",
  "op3": "M.S. Swaminathan",
  "op4": "Amitabh Bachchan",
  "ans": "Kumar Mangalam Birla"
},
{
  "ques": "Who won the ICC Emerging Player of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Shubman Gill",
  "op2": "Ishan Kishan",
  "op3": "Cameron Green",
  "op4": "Harry Brook",
  "ans": "Shubman Gill"
},
{
  "ques": "Who is the current Prime Minister of the UK?<br><br>",
  "quesType": "mcq",
  "op1": "Boris Johnson",
  "op2": "Rishi Sunak",
  "op3": "Keir Starmer",
  "op4": "Liz Truss",
  "ans": "Rishi Sunak"
},
{
  "ques": "Which city will host the 2028 Summer Olympics?<br><br>",
  "quesType": "mcq",
  "op1": "Paris",
  "op2": "Los Angeles",
  "op3": "Brisbane",
  "op4": "Tokyo",
  "ans": "Los Angeles"
},
{
  "ques": "Which Indian city hosted the Khelo India Youth Games 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Pune",
  "op2": "Guwahati",
  "op3": "Bhopal",
  "op4": "Chandigarh",
  "ans": "Chandigarh"
},
{
  "ques": "Who is the current MD & CEO of LIC?<br><br>",
  "quesType": "mcq",
  "op1": "M.R. Kumar",
  "op2": "Siddhartha Mohanty",
  "op3": "T.S. Vijayan",
  "op4": "V.K. Sharma",
  "ans": "Siddhartha Mohanty"
},
{
  "ques": "Who is the CEO of Twitter (X) as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Elon Musk",
  "op2": "Linda Yaccarino",
  "op3": "Jack Dorsey",
  "op4": "Sundar Pichai",
  "ans": "Linda Yaccarino"
},
{
  "ques": "Which state topped the Ease of Doing Business ranking in India 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Gujarat",
  "op2": "Andhra Pradesh",
  "op3": "Telangana",
  "op4": "Maharashtra",
  "ans": "Andhra Pradesh"
},
{
  "ques": "Who is the current President of Bangladesh?<br><br>",
  "quesType": "mcq",
  "op1": "Sheikh Hasina",
  "op2": "Mohammad Shahabuddin",
  "op3": "Abdul Hamid",
  "op4": "Khaleda Zia",
  "ans": "Mohammad Shahabuddin"
},
{
  "ques": "Which country is the largest natural gas producer?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "USA",
  "op3": "Iran",
  "op4": "China",
  "ans": "USA"
},
{
  "ques": "Which company developed the AI tool Gemini?<br><br>",
  "quesType": "mcq",
  "op1": "Microsoft",
  "op2": "Google",
  "op3": "OpenAI",
  "op4": "Meta",
  "ans": "Google"
},
{
  "ques": "Which city hosted the G7 Summit 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Rome",
  "op2": "Hiroshima",
  "op3": "London",
  "op4": "Toronto",
  "ans": "Hiroshima"
},
{
  "ques": "Who is the current Chief Minister of Rajasthan?<br><br>",
  "quesType": "mcq",
  "op1": "Ashok Gehlot",
  "op2": "Vasundhara Raje",
  "op3": "Sachin Pilot",
  "op4": "Bhajan Lal Sharma",
  "ans": "Bhajan Lal Sharma"
},
{
  "ques": "Who is the new US Vice President?<br><br>",
  "quesType": "mcq",
  "op1": "Kamala Harris",
  "op2": "Mike Pence",
  "op3": "Nancy Pelosi",
  "op4": "Ron DeSantis",
  "ans": "Kamala Harris"
},
{
  "ques": "Which is India’s first 5G service provider?<br><br>",
  "quesType": "mcq",
  "op1": "Airtel",
  "op2": "BSNL",
  "op3": "Jio",
  "op4": "Vodafone Idea",
  "ans": "Jio"
},
{
  "ques": "Which Indian state has the highest forest cover?<br><br>",
  "quesType": "mcq",
  "op1": "Kerala",
  "op2": "Arunachal Pradesh",
  "op3": "Madhya Pradesh",
  "op4": "Assam",
  "ans": "Madhya Pradesh"
},
{
  "ques": "Which Indian state launched the 'Mission Buniyaad'?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Uttar Pradesh",
  "op3": "Madhya Pradesh",
  "op4": "Bihar",
  "ans": "Delhi"
},
{
  "ques": "Who won the Miss World 2024 crown?<br><br>",
  "quesType": "mcq",
  "op1": "Karolina Bielawska",
  "op2": "Vanessa Ponce",
  "op3": "Sini Shetty",
  "op4": "Toni-Ann Singh",
  "ans": "Sini Shetty"
},
{
  "ques": "Who is the current Chairman of SEBI?<br><br>",
  "quesType": "mcq",
  "op1": "Ajay Tyagi",
  "op2": "Madhabi Puri Buch",
  "op3": "Subhash Chandra Khuntia",
  "op4": "Rajiv Kumar",
  "ans": "Madhabi Puri Buch"
},
{
  "ques": "Who is the current President of Pakistan?<br><br>",
  "quesType": "mcq",
  "op1": "Imran Khan",
  "op2": "Asif Ali Zardari",
  "op3": "Arif Alvi",
  "op4": "Shehbaz Sharif",
  "ans": "Asif Ali Zardari"
},
{
  "ques": "Which country launched the Artemis I mission?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "India",
  "op3": "China",
  "op4": "USA",
  "ans": "USA"
},
{
  "ques": "Who is the Chairman of Infosys?<br><br>",
  "quesType": "mcq",
  "op1": "Salil Parekh",
  "op2": "Nandan Nilekani",
  "op3": "Vishal Sikka",
  "op4": "Kris Gopalakrishnan",
  "ans": "Nandan Nilekani"
},
{
  "ques": "Who is the current Union Minister for Education?<br><br>",
  "quesType": "mcq",
  "op1": "Dharmendra Pradhan",
  "op2": "Piyush Goyal",
  "op3": "Smriti Irani",
  "op4": "Prakash Javadekar",
  "ans": "Dharmendra Pradhan"
},
{
  "ques": "Which Indian bank is the largest private sector bank?<br><br>",
  "quesType": "mcq",
  "op1": "SBI",
  "op2": "HDFC Bank",
  "op3": "ICICI Bank",
  "op4": "Axis Bank",
  "ans": "HDFC Bank"
},
{
  "ques": "Which country won the Asia Cup 2023 (Cricket)?<br><br>",
  "quesType": "mcq",
  "op1": "Pakistan",
  "op2": "India",
  "op3": "Sri Lanka",
  "op4": "Bangladesh",
  "ans": "India"
},
{
  "ques": "Who won the IPL 2024 season?<br><br>",
  "quesType": "mcq",
  "op1": "Chennai Super Kings",
  "op2": "Mumbai Indians",
  "op3": "Kolkata Knight Riders",
  "op4": "Gujarat Titans",
  "ans": "Chennai Super Kings"
}
,
{
  "ques": "Who is the current President of Russia?<br><br>",
  "quesType": "mcq",
  "op1": "Dmitry Medvedev",
  "op2": "Alexei Navalny",
  "op3": "Vladimir Putin",
  "op4": "Sergei Lavrov",
  "ans": "Vladimir Putin"
},
{
  "ques": "Which country won the ICC T20 World Cup 2022?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Australia",
  "op3": "England",
  "op4": "Pakistan",
  "ans": "England"
},
{
  "ques": "Who is the current Chief Minister of Maharashtra?<br><br>",
  "quesType": "mcq",
  "op1": "Devendra Fadnavis",
  "op2": "Uddhav Thackeray",
  "op3": "Eknath Shinde",
  "op4": "Ajit Pawar",
  "ans": "Eknath Shinde"
},
{
  "ques": "Which Indian city is known as the 'City of Joy'?<br><br>",
  "quesType": "mcq",
  "op1": "Kolkata",
  "op2": "Mumbai",
  "op3": "Chennai",
  "op4": "Lucknow",
  "ans": "Kolkata"
},
{
  "ques": "Who is the current Chief Minister of Kerala?<br><br>",
  "quesType": "mcq",
  "op1": "Pinarayi Vijayan",
  "op2": "Oommen Chandy",
  "op3": "V.S. Achuthanandan",
  "op4": "Ramesh Chennithala",
  "ans": "Pinarayi Vijayan"
},
{
  "ques": "Who is the President of China?<br><br>",
  "quesType": "mcq",
  "op1": "Hu Jintao",
  "op2": "Li Keqiang",
  "op3": "Xi Jinping",
  "op4": "Wen Jiabao",
  "ans": "Xi Jinping"
},
{
  "ques": "Which country will host the 2030 FIFA World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Spain, Portugal, Morocco",
  "op3": "China",
  "op4": "Argentina",
  "ans": "Spain, Portugal, Morocco"
},
{
  "ques": "Who is the current Chief Minister of Gujarat?<br><br>",
  "quesType": "mcq",
  "op1": "Vijay Rupani",
  "op2": "Bhupendra Patel",
  "op3": "Anandiben Patel",
  "op4": "Narendra Modi",
  "ans": "Bhupendra Patel"
},
{
  "ques": "Who is the CEO of Infosys?<br><br>",
  "quesType": "mcq",
  "op1": "Salil Parekh",
  "op2": "Nandan Nilekani",
  "op3": "Vishal Sikka",
  "op4": "Narayan Murthy",
  "ans": "Salil Parekh"
},
{
  "ques": "Which country has the largest population in the world?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "India",
  "op3": "China",
  "op4": "Indonesia",
  "ans": "India"
},
{
  "ques": "Who is the current CM of Punjab?<br><br>",
  "quesType": "mcq",
  "op1": "Amarinder Singh",
  "op2": "Charanjit Singh Channi",
  "op3": "Bhagwant Mann",
  "op4": "Parkash Singh Badal",
  "ans": "Bhagwant Mann"
},
{
  "ques": "Which state in India is known as the 'Land of Five Rivers'?<br><br>",
  "quesType": "mcq",
  "op1": "Punjab",
  "op2": "Haryana",
  "op3": "Uttar Pradesh",
  "op4": "Bihar",
  "ans": "Punjab"
},
{
  "ques": "Who is the first Indian woman to win an Olympic silver medal?<br><br>",
  "quesType": "mcq",
  "op1": "P.T. Usha",
  "op2": "Karnam Malleswari",
  "op3": "P.V. Sindhu",
  "op4": "Saina Nehwal",
  "ans": "P.V. Sindhu"
},
{
  "ques": "Which is the highest civilian award in India?<br><br>",
  "quesType": "mcq",
  "op1": "Padma Bhushan",
  "op2": "Padma Vibhushan",
  "op3": "Padma Shri",
  "op4": "Bharat Ratna",
  "ans": "Bharat Ratna"
},
{
  "ques": "Which city is the capital of Australia?<br><br>",
  "quesType": "mcq",
  "op1": "Sydney",
  "op2": "Melbourne",
  "op3": "Canberra",
  "op4": "Perth",
  "ans": "Canberra"
},
{
  "ques": "Who is the Chief Minister of Odisha?<br><br>",
  "quesType": "mcq",
  "op1": "Naveen Patnaik",
  "op2": "Biju Patnaik",
  "op3": "Dharmendra Pradhan",
  "op4": "Pradeep Jena",
  "ans": "Naveen Patnaik"
},
{
  "ques": "Which city is known as the 'Blue City' of India?<br><br>",
  "quesType": "mcq",
  "op1": "Jaisalmer",
  "op2": "Jodhpur",
  "op3": "Jaipur",
  "op4": "Udaipur",
  "ans": "Jodhpur"
},
{
  "ques": "Who is the current CM of Haryana?<br><br>",
  "quesType": "mcq",
  "op1": "Bhupinder Singh Hooda",
  "op2": "Manohar Lal Khattar",
  "op3": "Om Prakash Chautala",
  "op4": "Dushyant Chautala",
  "ans": "Manohar Lal Khattar"
},
{
  "ques": "Which country will host the 2032 Olympics?<br><br>",
  "quesType": "mcq",
  "op1": "Tokyo",
  "op2": "Brisbane",
  "op3": "Doha",
  "op4": "Istanbul",
  "ans": "Brisbane"
},
{
  "ques": "Who is the CEO of Facebook (Meta)?<br><br>",
  "quesType": "mcq",
  "op1": "Larry Page",
  "op2": "Sundar Pichai",
  "op3": "Tim Cook",
  "op4": "Mark Zuckerberg",
  "ans": "Mark Zuckerberg"
},
{
  "ques": "Which city is the capital of Canada?<br><br>",
  "quesType": "mcq",
  "op1": "Toronto",
  "op2": "Vancouver",
  "op3": "Montreal",
  "op4": "Ottawa",
  "ans": "Ottawa"
},
{
  "ques": "Who is the Union Minister for Road Transport & Highways?<br><br>",
  "quesType": "mcq",
  "op1": "Rajnath Singh",
  "op2": "Nitin Gadkari",
  "op3": "Amit Shah",
  "op4": "Dharmendra Pradhan",
  "ans": "Nitin Gadkari"
},
{
  "ques": "Which is the highest mountain peak in India?<br><br>",
  "quesType": "mcq",
  "op1": "Mount Everest",
  "op2": "Nanda Devi",
  "op3": "Kanchenjunga",
  "op4": "K2",
  "ans": "Kanchenjunga"
},
{
  "ques": "Which state is famous for its Backwaters?<br><br>",
  "quesType": "mcq",
  "op1": "Goa",
  "op2": "Kerala",
  "op3": "Tamil Nadu",
  "op4": "Andhra Pradesh",
  "ans": "Kerala"
},
{
  "ques": "Who is the current Chief Minister of West Bengal?<br><br>",
  "quesType": "mcq",
  "op1": "Suvendu Adhikari",
  "op2": "Mamata Banerjee",
  "op3": "Dilip Ghosh",
  "op4": "Abhishek Banerjee",
  "ans": "Mamata Banerjee"
},
{
  "ques": "Which is the largest state in India by area?<br><br>",
  "quesType": "mcq",
  "op1": "Madhya Pradesh",
  "op2": "Uttar Pradesh",
  "op3": "Rajasthan",
  "op4": "Maharashtra",
  "ans": "Rajasthan"
},
{
  "ques": "Who is the founder of Amazon?<br><br>",
  "quesType": "mcq",
  "op1": "Elon Musk",
  "op2": "Jeff Bezos",
  "op3": "Tim Cook",
  "op4": "Larry Page",
  "ans": "Jeff Bezos"
},
{
  "ques": "Which is the national animal of India?<br><br>",
  "quesType": "mcq",
  "op1": "Lion",
  "op2": "Tiger",
  "op3": "Elephant",
  "op4": "Leopard",
  "ans": "Tiger"
},
{
  "ques": "Which city is known as the 'Queen of the Hills'?<br><br>",
  "quesType": "mcq",
  "op1": "Shimla",
  "op2": "Mussoorie",
  "op3": "Darjeeling",
  "op4": "Nainital",
  "ans": "Mussoorie"
},
{
  "ques": "Which country is the largest producer of gold?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "China",
  "op3": "Russia",
  "op4": "South Africa",
  "ans": "China"
}
,
{
  "ques": "Who is the current Chief Minister of Uttar Pradesh?<br><br>",
  "quesType": "mcq",
  "op1": "Akhilesh Yadav",
  "op2": "Yogi Adityanath",
  "op3": "Mayawati",
  "op4": "Mulayam Singh Yadav",
  "ans": "Yogi Adityanath"
},
{
  "ques": "Which country won the ICC T20 World Cup 2024?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Australia",
  "op3": "England",
  "op4": "Pakistan",
  "ans": "India"
},
{
  "ques": "Who is the current Minister of External Affairs of India?<br><br>",
  "quesType": "mcq",
  "op1": "S. Jaishankar",
  "op2": "Subrahmanyam Swamy",
  "op3": "Nirmala Sitharaman",
  "op4": "Piyush Goyal",
  "ans": "S. Jaishankar"
},
{
  "ques": "Which country recently hosted the G7 Summit?<br><br>",
  "quesType": "mcq",
  "op1": "Italy",
  "op2": "Japan",
  "op3": "Germany",
  "op4": "Canada",
  "ans": "Italy"
},
{
  "ques": "Who is the President of France?<br><br>",
  "quesType": "mcq",
  "op1": "Emmanuel Macron",
  "op2": "Francois Hollande",
  "op3": "Nicolas Sarkozy",
  "op4": "Marine Le Pen",
  "ans": "Emmanuel Macron"
},
{
  "ques": "Which country is the world's largest coffee producer?<br><br>",
  "quesType": "mcq",
  "op1": "Colombia",
  "op2": "Vietnam",
  "op3": "Brazil",
  "op4": "Ethiopia",
  "ans": "Brazil"
},
{
  "ques": "Who won the Nobel Prize in Chemistry 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Carolyn Bertozzi",
  "op2": "Katalin Karikó",
  "op3": "Moungi Bawendi",
  "op4": "Roger Kornberg",
  "ans": "Moungi Bawendi"
},
{
  "ques": "Which country is the world's largest gold producer?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "USA",
  "op3": "China",
  "op4": "Russia",
  "ans": "China"
},
{
  "ques": "Who is the Minister of Health and Family Welfare of India?<br><br>",
  "quesType": "mcq",
  "op1": "Mansukh Mandaviya",
  "op2": "Harsh Vardhan",
  "op3": "Dharmendra Pradhan",
  "op4": "Smriti Irani",
  "ans": "Mansukh Mandaviya"
},
{
  "ques": "Which country launched the Artemis Moon Mission?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "China",
  "op3": "USA",
  "op4": "Japan",
  "ans": "USA"
},
{
  "ques": "Who is the CEO of OpenAI?<br><br>",
  "quesType": "mcq",
  "op1": "Mark Zuckerberg",
  "op2": "Satya Nadella",
  "op3": "Sam Altman",
  "op4": "Sundar Pichai",
  "ans": "Sam Altman"
},
{
  "ques": "Which Indian state is the largest producer of rice?<br><br>",
  "quesType": "mcq",
  "op1": "Punjab",
  "op2": "Uttar Pradesh",
  "op3": "West Bengal",
  "op4": "Andhra Pradesh",
  "ans": "West Bengal"
},
{
  "ques": "Who is the UN High Commissioner for Human Rights?<br><br>",
  "quesType": "mcq",
  "op1": "Antonio Guterres",
  "op2": "Volker Turk",
  "op3": "Michelle Bachelet",
  "op4": "Ban Ki-moon",
  "ans": "Volker Turk"
},
{
  "ques": "Which country produces the most natural gas?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Russia",
  "op3": "Iran",
  "op4": "Qatar",
  "ans": "USA"
},
{
  "ques": "Who is the current Home Minister of India?<br><br>",
  "quesType": "mcq",
  "op1": "Rajnath Singh",
  "op2": "Amit Shah",
  "op3": "Nitin Gadkari",
  "op4": "Piyush Goyal",
  "ans": "Amit Shah"
},
{
  "ques": "Who won the Best Actor Oscar 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Brendan Fraser",
  "op2": "Cillian Murphy",
  "op3": "Austin Butler",
  "op4": "Leonardo DiCaprio",
  "ans": "Cillian Murphy"
},
{
  "ques": "Which Indian city has the tallest statue?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai",
  "op2": "Vadodara",
  "op3": "Ahmedabad",
  "op4": "Surat",
  "ans": "Vadodara"
},
{
  "ques": "Who is the CEO of Microsoft?<br><br>",
  "quesType": "mcq",
  "op1": "Satya Nadella",
  "op2": "Sundar Pichai",
  "op3": "Tim Cook",
  "op4": "Jeff Bezos",
  "ans": "Satya Nadella"
},
{
  "ques": "Which country is the world's largest coal producer?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Russia",
  "op3": "USA",
  "op4": "China",
  "ans": "China"
},
{
  "ques": "Who won the Booker Prize 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Shehan Karunatilaka",
  "op2": "Damon Galgut",
  "op3": "Paul Lynch",
  "op4": "Marlon James",
  "ans": "Paul Lynch"
},
{
  "ques": "Which country hosted the FIFA Women's World Cup 2023?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "New Zealand & Australia",
  "op3": "Canada",
  "op4": "France",
  "ans": "New Zealand & Australia"
},
{
  "ques": "Who is the Governor of Jammu & Kashmir?<br><br>",
  "quesType": "mcq",
  "op1": "Manoj Sinha",
  "op2": "Satya Pal Malik",
  "op3": "Rajiv Mehrishi",
  "op4": "N.N. Vohra",
  "ans": "Manoj Sinha"
},
{
  "ques": "Who is the CEO of Reliance Industries Limited?<br><br>",
  "quesType": "mcq",
  "op1": "Mukesh Ambani",
  "op2": "Anil Ambani",
  "op3": "Nita Ambani",
  "op4": "Akash Ambani",
  "ans": "Mukesh Ambani"
},
{
  "ques": "Which Indian state is the largest cotton producer?<br><br>",
  "quesType": "mcq",
  "op1": "Maharashtra",
  "op2": "Gujarat",
  "op3": "Punjab",
  "op4": "Telangana",
  "ans": "Gujarat"
},
{
  "ques": "Which country is the world's largest copper producer?<br><br>",
  "quesType": "mcq",
  "op1": "Chile",
  "op2": "Peru",
  "op3": "China",
  "op4": "USA",
  "ans": "Chile"
},
{
  "ques": "Who is the Minister of Jal Shakti in India?<br><br>",
  "quesType": "mcq",
  "op1": "Gajendra Singh Shekhawat",
  "op2": "Nitin Gadkari",
  "op3": "Rajeev Chandrasekhar",
  "op4": "Piyush Goyal",
  "ans": "Gajendra Singh Shekhawat"
},
{
  "ques": "Which country is the largest diamond producer?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "Botswana",
  "op3": "Canada",
  "op4": "South Africa",
  "ans": "Russia"
},
{
  "ques": "Who is the current US Vice President?<br><br>",
  "quesType": "mcq",
  "op1": "Nancy Pelosi",
  "op2": "Kamala Harris",
  "op3": "Hillary Clinton",
  "op4": "Elizabeth Warren",
  "ans": "Kamala Harris"
},
{
  "ques": "Who is the current Lok Sabha Speaker?<br><br>",
  "quesType": "mcq",
  "op1": "Om Birla",
  "op2": "Sumitra Mahajan",
  "op3": "Meira Kumar",
  "op4": "Venkaiah Naidu",
  "ans": "Om Birla"
},
{
  "ques": "Which country is the largest LNG exporter?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "USA",
  "op3": "Qatar",
  "op4": "Russia",
  "ans": "Qatar"
}
,
{
  "ques": "Who is the current Chief Minister of Uttar Pradesh?<br><br>",
  "quesType": "mcq",
  "op1": "Yogi Adityanath",
  "op2": "Akhilesh Yadav",
  "op3": "Mayawati",
  "op4": "Keshav Prasad Maurya",
  "ans": "Yogi Adityanath"
},
{
  "ques": "Which country won the FIFA Women’s World Cup 2023?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Spain",
  "op3": "England",
  "op4": "Germany",
  "ans": "Spain"
},
{
  "ques": "Who is the Chairman of ISRO as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "K. Sivan",
  "op2": "S. Somanath",
  "op3": "A.S. Kiran Kumar",
  "op4": "G. Madhavan Nair",
  "ans": "S. Somanath"
},
{
  "ques": "Which country topped the Human Development Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Switzerland",
  "op2": "Norway",
  "op3": "Australia",
  "op4": "Germany",
  "ans": "Norway"
},
{
  "ques": "Who is the new CEO of OpenAI (2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Sam Altman",
  "op2": "Satya Nadella",
  "op3": "Elon Musk",
  "op4": "Mark Zuckerberg",
  "ans": "Sam Altman"
},
{
  "ques": "Which country has the largest population as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "China",
  "op2": "USA",
  "op3": "India",
  "op4": "Indonesia",
  "ans": "India"
},
{
  "ques": "Which country launched the Tianwen-3 Mars mission?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Russia",
  "op3": "China",
  "op4": "Japan",
  "ans": "China"
},
{
  "ques": "Who won the ICC Men's ODI World Cup 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "India",
  "op3": "New Zealand",
  "op4": "England",
  "ans": "Australia"
},
{
  "ques": "Who is the current President of Israel?<br><br>",
  "quesType": "mcq",
  "op1": "Benjamin Netanyahu",
  "op2": "Isaac Herzog",
  "op3": "Naftali Bennett",
  "op4": "Yair Lapid",
  "ans": "Isaac Herzog"
},
{
  "ques": "Which state started the 'Swasthya Sathi' health scheme?<br><br>",
  "quesType": "mcq",
  "op1": "Odisha",
  "op2": "Bihar",
  "op3": "West Bengal",
  "op4": "Jharkhand",
  "ans": "West Bengal"
},
{
  "ques": "Which city topped the Mercer Quality of Living Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Vienna",
  "op2": "Zurich",
  "op3": "Munich",
  "op4": "Auckland",
  "ans": "Vienna"
},
{
  "ques": "Who is the current Union Minister for Railways?<br><br>",
  "quesType": "mcq",
  "op1": "Piyush Goyal",
  "op2": "Ashwini Vaishnaw",
  "op3": "Suresh Prabhu",
  "op4": "Nitin Gadkari",
  "ans": "Ashwini Vaishnaw"
},
{
  "ques": "Who is the Governor of the Reserve Bank of Pakistan?<br><br>",
  "quesType": "mcq",
  "op1": "Shaktikanta Das",
  "op2": "Reza Baqir",
  "op3": "Jameel Ahmad",
  "op4": "Ishrat Husain",
  "ans": "Jameel Ahmad"
},
{
  "ques": "Which country hosted the SAARC Summit last?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Nepal",
  "op3": "Pakistan",
  "op4": "Bangladesh",
  "ans": "Nepal"
},
{
  "ques": "Who is the current Chief Justice of the Supreme Court of Pakistan?<br><br>",
  "quesType": "mcq",
  "op1": "Gulzar Ahmed",
  "op2": "Qazi Faez Isa",
  "op3": "Umar Ata Bandial",
  "op4": "Asif Saeed Khosa",
  "ans": "Qazi Faez Isa"
},
{
  "ques": "Who is the CEO of Meta?<br><br>",
  "quesType": "mcq",
  "op1": "Sundar Pichai",
  "op2": "Satya Nadella",
  "op3": "Mark Zuckerberg",
  "op4": "Elon Musk",
  "ans": "Mark Zuckerberg"
},
{
  "ques": "Who is the current Union Minister for Women & Child Development?<br><br>",
  "quesType": "mcq",
  "op1": "Nirmala Sitharaman",
  "op2": "Smriti Irani",
  "op3": "Meenakshi Lekhi",
  "op4": "Piyush Goyal",
  "ans": "Smriti Irani"
},
{
  "ques": "Which state recently launched the 'Gruha Jyothi' scheme?<br><br>",
  "quesType": "mcq",
  "op1": "Kerala",
  "op2": "Tamil Nadu",
  "op3": "Karnataka",
  "op4": "Telangana",
  "ans": "Karnataka"
},
{
  "ques": "Who is the current Chairman of BCCI?<br><br>",
  "quesType": "mcq",
  "op1": "Sourav Ganguly",
  "op2": "Roger Binny",
  "op3": "Jay Shah",
  "op4": "Anurag Thakur",
  "ans": "Roger Binny"
},
{
  "ques": "Who is the Managing Director of IMF?<br><br>",
  "quesType": "mcq",
  "op1": "Kristalina Georgieva",
  "op2": "Christine Lagarde",
  "op3": "Janet Yellen",
  "op4": "Ngozi Okonjo-Iweala",
  "ans": "Kristalina Georgieva"
},
{
  "ques": "Which company acquired Activision Blizzard?<br><br>",
  "quesType": "mcq",
  "op1": "Apple",
  "op2": "Amazon",
  "op3": "Microsoft",
  "op4": "Google",
  "ans": "Microsoft"
},
{
  "ques": "Who is the Prime Minister of Canada?<br><br>",
  "quesType": "mcq",
  "op1": "Justin Trudeau",
  "op2": "Andrew Scheer",
  "op3": "Jagmeet Singh",
  "op4": "Stephen Harper",
  "ans": "Justin Trudeau"
},
{
  "ques": "Who won the ICC Women's Cricketer of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Smriti Mandhana",
  "op2": "Meg Lanning",
  "op3": "Harmanpreet Kaur",
  "op4": "Ellyse Perry",
  "ans": "Nat Sciver-Brunt"
},
{
  "ques": "Which country is the largest producer of diamonds?<br><br>",
  "quesType": "mcq",
  "op1": "Botswana",
  "op2": "Russia",
  "op3": "South Africa",
  "op4": "Canada",
  "ans": "Russia"
},
{
  "ques": "Which company owns LinkedIn?<br><br>",
  "quesType": "mcq",
  "op1": "Google",
  "op2": "Microsoft",
  "op3": "Meta",
  "op4": "Amazon",
  "ans": "Microsoft"
},
{
  "ques": "Who is the current Union Minister for Environment, Forest and Climate Change?<br><br>",
  "quesType": "mcq",
  "op1": "Bhupender Yadav",
  "op2": "Piyush Goyal",
  "op3": "Prakash Javadekar",
  "op4": "R.K. Singh",
  "ans": "Bhupender Yadav"
},
{
  "ques": "Which country won the Thomas Cup 2024 (Badminton)?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "China",
  "op3": "Indonesia",
  "op4": "Japan",
  "ans": "China"
},
{
  "ques": "Who is the current Secretary General of NATO?<br><br>",
  "quesType": "mcq",
  "op1": "Jens Stoltenberg",
  "op2": "Ursula von der Leyen",
  "op3": "Charles Michel",
  "op4": "Josep Borrell",
  "ans": "Jens Stoltenberg"
},
{
  "ques": "Who is the Chief Minister of Telangana?<br><br>",
  "quesType": "mcq",
  "op1": "K. Chandrashekar Rao",
  "op2": "Revanth Reddy",
  "op3": "Etela Rajender",
  "op4": "K.T. Rama Rao",
  "ans": "Revanth Reddy"
},
{
  "ques": "Which Indian state declared itself a 'Har Ghar Jal' state?<br><br>",
  "quesType": "mcq",
  "op1": "Goa",
  "op2": "Kerala",
  "op3": "Haryana",
  "op4": "Punjab",
  "ans": "Goa"
}
,
{
  "ques": "Who is the Chief Minister of Uttar Pradesh?<br><br>",
  "quesType": "mcq",
  "op1": "Yogi Adityanath",
  "op2": "Akhilesh Yadav",
  "op3": "Mayawati",
  "op4": "Keshav Prasad Maurya",
  "ans": "Yogi Adityanath"
},
{
  "ques": "Who is the Governor of the Reserve Bank of India?<br><br>",
  "quesType": "mcq",
  "op1": "Raghuram Rajan",
  "op2": "Urjit Patel",
  "op3": "Shaktikanta Das",
  "op4": "Viral Acharya",
  "ans": "Shaktikanta Das"
},
{
  "ques": "Who is the current Home Minister of India?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Shah",
  "op2": "Rajnath Singh",
  "op3": "Nirmala Sitharaman",
  "op4": "Piyush Goyal",
  "ans": "Amit Shah"
},
{
  "ques": "Which Indian state is the largest producer of wheat?<br><br>",
  "quesType": "mcq",
  "op1": "Punjab",
  "op2": "Haryana",
  "op3": "Uttar Pradesh",
  "op4": "Madhya Pradesh",
  "ans": "Uttar Pradesh"
},
{
  "ques": "Who is the current Education Minister of India?<br><br>",
  "quesType": "mcq",
  "op1": "Dharmendra Pradhan",
  "op2": "Smriti Irani",
  "op3": "Prakash Javadekar",
  "op4": "Piyush Goyal",
  "ans": "Dharmendra Pradhan"
},
{
  "ques": "Which Indian city hosted the G20 Summit 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai",
  "op2": "New Delhi",
  "op3": "Hyderabad",
  "op4": "Bangalore",
  "ans": "New Delhi"
},
{
  "ques": "Which is the longest river in India?<br><br>",
  "quesType": "mcq",
  "op1": "Yamuna",
  "op2": "Godavari",
  "op3": "Ganga",
  "op4": "Brahmaputra",
  "ans": "Ganga"
},
{
  "ques": "Who is the President of Sri Lanka?<br><br>",
  "quesType": "mcq",
  "op1": "Gotabaya Rajapaksa",
  "op2": "Ranil Wickremesinghe",
  "op3": "Maithripala Sirisena",
  "op4": "Mahinda Rajapaksa",
  "ans": "Ranil Wickremesinghe"
},
{
  "ques": "Which country will host the ICC World Cup 2027?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Australia",
  "op3": "South Africa & Namibia",
  "op4": "England",
  "ans": "South Africa & Namibia"
},
{
  "ques": "Which Indian city is called the Pink City?<br><br>",
  "quesType": "mcq",
  "op1": "Jodhpur",
  "op2": "Jaipur",
  "op3": "Udaipur",
  "op4": "Bikaner",
  "ans": "Jaipur"
},
{
  "ques": "Who is the CM of Madhya Pradesh?<br><br>",
  "quesType": "mcq",
  "op1": "Shivraj Singh Chouhan",
  "op2": "Kamal Nath",
  "op3": "Digvijaya Singh",
  "op4": "Jyotiraditya Scindia",
  "ans": "Shivraj Singh Chouhan"
},
{
  "ques": "Which country produces the most coffee?<br><br>",
  "quesType": "mcq",
  "op1": "Colombia",
  "op2": "Ethiopia",
  "op3": "Vietnam",
  "op4": "Brazil",
  "ans": "Brazil"
},
{
  "ques": "Which country gifted the Statue of Liberty to the USA?<br><br>",
  "quesType": "mcq",
  "op1": "Germany",
  "op2": "France",
  "op3": "Italy",
  "op4": "Spain",
  "ans": "France"
},
{
  "ques": "Who is the current Railway Minister of India?<br><br>",
  "quesType": "mcq",
  "op1": "Piyush Goyal",
  "op2": "Ashwini Vaishnaw",
  "op3": "Dharmendra Pradhan",
  "op4": "Nitin Gadkari",
  "ans": "Ashwini Vaishnaw"
},
{
  "ques": "Who is the Chairman of ISRO?<br><br>",
  "quesType": "mcq",
  "op1": "Sivan K",
  "op2": "A. S. Kiran Kumar",
  "op3": "S. Somanath",
  "op4": "M. Annadurai",
  "ans": "S. Somanath"
},
{
  "ques": "Which is the national bird of India?<br><br>",
  "quesType": "mcq",
  "op1": "Sparrow",
  "op2": "Peacock",
  "op3": "Crow",
  "op4": "Kingfisher",
  "ans": "Peacock"
},
{
  "ques": "Who is the founder of Microsoft?<br><br>",
  "quesType": "mcq",
  "op1": "Steve Jobs",
  "op2": "Mark Zuckerberg",
  "op3": "Larry Page",
  "op4": "Bill Gates",
  "ans": "Bill Gates"
},
{
  "ques": "Which state is famous for its Tea Gardens?<br><br>",
  "quesType": "mcq",
  "op1": "Assam",
  "op2": "Kerala",
  "op3": "Sikkim",
  "op4": "Bihar",
  "ans": "Assam"
},
{
  "ques": "Which country is known as the Land of Rising Sun?<br><br>",
  "quesType": "mcq",
  "op1": "China",
  "op2": "Japan",
  "op3": "Thailand",
  "op4": "South Korea",
  "ans": "Japan"
},
{
  "ques": "Which city is known as the Garden City of India?<br><br>",
  "quesType": "mcq",
  "op1": "Mysore",
  "op2": "Hyderabad",
  "op3": "Bangalore",
  "op4": "Chandigarh",
  "ans": "Bangalore"
},
{
  "ques": "Who is the new Chief Justice of India?<br><br>",
  "quesType": "mcq",
  "op1": "D.Y. Chandrachud",
  "op2": "N.V. Ramana",
  "op3": "Ranjan Gogoi",
  "op4": "Sharad Bobde",
  "ans": "D.Y. Chandrachud"
},
{
  "ques": "Who is the Union Health Minister of India?<br><br>",
  "quesType": "mcq",
  "op1": "Harsh Vardhan",
  "op2": "Mansukh Mandaviya",
  "op3": "Ashwini Vaishnaw",
  "op4": "Rajnath Singh",
  "ans": "Mansukh Mandaviya"
},
{
  "ques": "Who is the current Chief Minister of Telangana?<br><br>",
  "quesType": "mcq",
  "op1": "K. Chandrashekar Rao",
  "op2": "Revanth Reddy",
  "op3": "Y.S. Jagan Mohan Reddy",
  "op4": "K.T. Rama Rao",
  "ans": "Revanth Reddy"
},
{
  "ques": "Which Indian state is called the Spice Garden?<br><br>",
  "quesType": "mcq",
  "op1": "Kerala",
  "op2": "Tamil Nadu",
  "op3": "Assam",
  "op4": "Goa",
  "ans": "Kerala"
},
{
  "ques": "Which is the largest freshwater lake in India?<br><br>",
  "quesType": "mcq",
  "op1": "Dal Lake",
  "op2": "Chilika Lake",
  "op3": "Vembanad Lake",
  "op4": "Wular Lake",
  "ans": "Wular Lake"
},
{
  "ques": "Who is the Minister of Women & Child Development?<br><br>",
  "quesType": "mcq",
  "op1": "Nirmala Sitharaman",
  "op2": "Smriti Irani",
  "op3": "Harsimrat Kaur Badal",
  "op4": "Anupriya Patel",
  "ans": "Smriti Irani"
},
{
  "ques": "Who is the CM of Bihar?<br><br>",
  "quesType": "mcq",
  "op1": "Nitish Kumar",
  "op2": "Tejashwi Yadav",
  "op3": "Lalu Prasad Yadav",
  "op4": "Sushil Modi",
  "ans": "Nitish Kumar"
},
{
  "ques": "Which city is famous for Diamond Polishing?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai",
  "op2": "Surat",
  "op3": "Jaipur",
  "op4": "Pune",
  "ans": "Surat"
},
{
  "ques": "Who is the Director General of WHO?<br><br>",
  "quesType": "mcq",
  "op1": "Tedros Adhanom Ghebreyesus",
  "op2": "António Guterres",
  "op3": "Ban Ki-moon",
  "op4": "David Malpass",
  "ans": "Tedros Adhanom Ghebreyesus"
}



]

let codingaffair2Arr=[
  {
  "ques": "Which Indian state became the first to implement a Uniform Civil Code (UCC) in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Uttar Pradesh",
  "op2": "Uttarakhand",
  "op3": "Gujarat",
  "op4": "Assam",
  "ans": "Uttarakhand"
},
{
  "ques": "Which country recently joined the NATO alliance?<br><br>",
  "quesType": "mcq",
  "op1": "Ukraine",
  "op2": "Finland",
  "op3": "Sweden",
  "op4": "Georgia",
  "ans": "Finland"
},
{
  "ques": "Which country signed the Artemis Accords with NASA in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "China",
  "op3": "India",
  "op4": "Japan",
  "ans": "India"
},
{
  "ques": "Which Indian state topped the SDG India Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Tamil Nadu",
  "op2": "Kerala",
  "op3": "Himachal Pradesh",
  "op4": "Maharashtra",
  "ans": "Kerala"
},
{
  "ques": "Which country hosted the 2024 World Economic Forum Annual Meeting?<br><br>",
  "quesType": "mcq",
  "op1": "Switzerland",
  "op2": "USA",
  "op3": "France",
  "op4": "Germany",
  "ans": "Switzerland"
},
{
  "ques": "Which company became the world’s largest EV manufacturer in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Tesla",
  "op2": "BYD",
  "op3": "Volkswagen",
  "op4": "Ford",
  "ans": "BYD"
},
{
  "ques": "Which country launched the world’s first 6G satellite in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "China",
  "op3": "Japan",
  "op4": "Russia",
  "ans": "China"
},
{
  "ques": "Which city won the UNESCO World Book Capital 2024 title?<br><br>",
  "quesType": "mcq",
  "op1": "Accra",
  "op2": "Guadalajara",
  "op3": "Strasbourg",
  "op4": "Kuala Lumpur",
  "ans": "Strasbourg"
},
{
  "ques": "Who is the current Chairperson of SEBI?<br><br>",
  "quesType": "mcq",
  "op1": "Ajay Tyagi",
  "op2": "Madhabi Puri Buch",
  "op3": "Subhash Chandra Khuntia",
  "op4": "Shaktikanta Das",
  "ans": "Madhabi Puri Buch"
},
{
  "ques": "Which country overtook China as the most populous country?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Indonesia",
  "op3": "Pakistan",
  "op4": "Bangladesh",
  "ans": "India"
},
{
  "ques": "Which country launched the world's first Digital Nomad Visa for remote workers?<br><br>",
  "quesType": "mcq",
  "op1": "Estonia",
  "op2": "Portugal",
  "op3": "Dubai",
  "op4": "Singapore",
  "ans": "Estonia"
},
{
  "ques": "Which country declared the first Climate Emergency?<br><br>",
  "quesType": "mcq",
  "op1": "New Zealand",
  "op2": "UK",
  "op3": "Canada",
  "op4": "Germany",
  "ans": "UK"
},
{
  "ques": "Which Indian city will host the 2036 Olympics bid?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai",
  "op2": "Ahmedabad",
  "op3": "Delhi",
  "op4": "Bengaluru",
  "ans": "Ahmedabad"
},
{
  "ques": "Which Indian PSU launched the 'Green Hydrogen Mobility' project?<br><br>",
  "quesType": "mcq",
  "op1": "ONGC",
  "op2": "GAIL",
  "op3": "NTPC",
  "op4": "IOCL",
  "ans": "NTPC"
},
{
  "ques": "Who became the first Indian woman to reach the final of the World Athletics Championships?<br><br>",
  "quesType": "mcq",
  "op1": "Anju Bobby George",
  "op2": "Hima Das",
  "op3": "Neeraj Chopra",
  "op4": "Parul Chaudhary",
  "ans": "Parul Chaudhary"
},
{
  "ques": "Which company acquired Activision Blizzard in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Sony",
  "op2": "Microsoft",
  "op3": "Amazon",
  "op4": "Meta",
  "ans": "Microsoft"
},
{
  "ques": "Which country became the 31st NATO member in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Finland",
  "op2": "Sweden",
  "op3": "Ukraine",
  "op4": "Georgia",
  "ans": "Sweden"
},
{
  "ques": "Which country topped the Global Gender Gap Report 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Finland",
  "op2": "Iceland",
  "op3": "Norway",
  "op4": "Denmark",
  "ans": "Iceland"
},
{
  "ques": "Which country launched the world’s first floating nuclear power plant?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "China",
  "op3": "USA",
  "op4": "France",
  "ans": "Russia"
},
{
  "ques": "Which country hosted the SCO Summit 2024?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Kazakhstan",
  "op3": "Uzbekistan",
  "op4": "Russia",
  "ans": "Kazakhstan"
},
{
  "ques": "Which Indian startup became the 100th unicorn?<br><br>",
  "quesType": "mcq",
  "op1": "Ola Electric",
  "op2": "PharmEasy",
  "op3": "Zetwerk",
  "op4": "Open",
  "ans": "Open"
},
{
  "ques": "Who won the Abel Prize 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Andrew Wiles",
  "op2": "Luis Caffarelli",
  "op3": "Terence Tao",
  "op4": "Manjul Bhargava",
  "ans": "Luis Caffarelli"
},
{
  "ques": "Which country is building the world’s largest offshore wind farm?<br><br>",
  "quesType": "mcq",
  "op1": "Norway",
  "op2": "UK",
  "op3": "Germany",
  "op4": "China",
  "ans": "UK"
},
{
  "ques": "Who is the President of the World Bank as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "David Malpass",
  "op2": "Ajay Banga",
  "op3": "Kristalina Georgieva",
  "op4": "Ngozi Okonjo-Iweala",
  "ans": "Ajay Banga"
},
{
  "ques": "Which country has the world’s largest proven oil reserves?<br><br>",
  "quesType": "mcq",
  "op1": "Saudi Arabia",
  "op2": "Russia",
  "op3": "USA",
  "op4": "Venezuela",
  "ans": "Venezuela"
},
{
  "ques": "Which space agency announced the Dragonfly mission to Titan?<br><br>",
  "quesType": "mcq",
  "op1": "ISRO",
  "op2": "NASA",
  "op3": "Roscosmos",
  "op4": "ESA",
  "ans": "NASA"
},
{
  "ques": "Which country hosted the Quad Summit 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Japan",
  "op2": "Australia",
  "op3": "USA",
  "op4": "India",
  "ans": "Japan"
},
{
  "ques": "Which city topped the Mercer Cost of Living Survey 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Zurich",
  "op2": "Hong Kong",
  "op3": "Singapore",
  "op4": "Geneva",
  "ans": "Hong Kong"
},
{
  "ques": "Which country announced the biggest sovereign wealth fund by 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Norway",
  "op2": "Saudi Arabia",
  "op3": "China",
  "op4": "UAE",
  "ans": "Norway"
},
{
  "ques": "Who is the Secretary-General of OPEC?<br><br>",
  "quesType": "mcq",
  "op1": "Mohammad Barkindo",
  "op2": "Haitham Al Ghais",
  "op3": "Abdallah Salem El-Badri",
  "op4": "Sultan Al Jaber",
  "ans": "Haitham Al Ghais"
}
,
{
  "ques": "Which Indian state recently became the first to implement the Uniform Civil Code (UCC)?<br><br>",
  "quesType": "mcq",
  "op1": "Goa",
  "op2": "Uttarakhand",
  "op3": "Gujarat",
  "op4": "Himachal Pradesh",
  "ans": "Uttarakhand"
},
{
  "ques": "In which city is India’s first underwater metro rail project located?<br><br>",
  "quesType": "mcq",
  "op1": "Kolkata",
  "op2": "Mumbai",
  "op3": "Chennai",
  "op4": "Kochi",
  "ans": "Kolkata"
},
{
  "ques": "Who is the current Chief Economic Advisor (CEA) to the Government of India?<br><br>",
  "quesType": "mcq",
  "op1": "Raghuram Rajan",
  "op2": "Krishnamurthy Subramanian",
  "op3": "V. Anantha Nageswaran",
  "op4": "Bibek Debroy",
  "ans": "V. Anantha Nageswaran"
},
{
  "ques": "Which country did India sign a Green Hydrogen cooperation agreement with in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Germany",
  "op2": "Japan",
  "op3": "Norway",
  "op4": "Australia",
  "ans": "Australia"
},
{
  "ques": "Which Indian state hosts the Hornbill Festival?<br><br>",
  "quesType": "mcq",
  "op1": "Assam",
  "op2": "Manipur",
  "op3": "Nagaland",
  "op4": "Meghalaya",
  "ans": "Nagaland"
},
{
  "ques": "Who is the first Indian woman to win the Pritzker Architecture Prize?<br><br>",
  "quesType": "mcq",
  "op1": "Anupama Kundoo",
  "op2": "Brinda Somaya",
  "op3": "B.V. Doshi",
  "op4": "Gita Balakrishnan",
  "ans": "No Indian woman yet; B.V. Doshi was the first Indian (male)"
},
{
  "ques": "Which country is developing the Neom smart city project?<br><br>",
  "quesType": "mcq",
  "op1": "UAE",
  "op2": "Qatar",
  "op3": "Saudi Arabia",
  "op4": "Bahrain",
  "ans": "Saudi Arabia"
},
{
  "ques": "Which Indian airport won the Best Airport in Asia-Pacific award 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi Airport",
  "op2": "Bangalore Airport",
  "op3": "Hyderabad Airport",
  "op4": "Mumbai Airport",
  "ans": "Delhi Airport"
},
{
  "ques": "What is the name of India’s first indigenously developed 700 MW nuclear reactor?<br><br>",
  "quesType": "mcq",
  "op1": "Kudankulam-1",
  "op2": "Tarapur-4",
  "op3": "Kakrapar Unit-3",
  "op4": "Narora-2",
  "ans": "Kakrapar Unit-3"
},
{
  "ques": "Which Indian state has the highest installed solar power capacity?<br><br>",
  "quesType": "mcq",
  "op1": "Maharashtra",
  "op2": "Gujarat",
  "op3": "Rajasthan",
  "op4": "Karnataka",
  "ans": "Rajasthan"
},
{
  "ques": "Who is the current Chairperson of NITI Aayog?<br><br>",
  "quesType": "mcq",
  "op1": "Amitabh Kant",
  "op2": "Narendra Modi",
  "op3": "Rajiv Kumar",
  "op4": "Suman Bery",
  "ans": "Narendra Modi (ex-officio)"
},
{
  "ques": "Which city will host the World Chess Championship 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Dubai",
  "op2": "Madrid",
  "op3": "Chennai",
  "op4": "New York",
  "ans": "Singapore"
},
{
  "ques": "Which Indian won the Ramon Magsaysay Award 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Sonam Wangchuk",
  "op2": "Annie Raja",
  "op3": "Bindeshwar Pathak",
  "op4": "Dr. Ravi Kannan R",
  "ans": "Dr. Ravi Kannan R"
},
{
  "ques": "Which Indian PSU recently became a Maharatna company?<br><br>",
  "quesType": "mcq",
  "op1": "ONGC",
  "op2": "REC Ltd",
  "op3": "NTPC",
  "op4": "Coal India",
  "ans": "REC Ltd"
},
{
  "ques": "What is the name of India’s first indigenous aircraft carrier?<br><br>",
  "quesType": "mcq",
  "op1": "INS Vikrant",
  "op2": "INS Viraat",
  "op3": "INS Arihant",
  "op4": "INS Shivalik",
  "ans": "INS Vikrant"
},
{
  "ques": "Which city hosted the SCO Summit 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Astana",
  "op2": "Samarkand",
  "op3": "New Delhi",
  "op4": "Bishkek",
  "ans": "New Delhi"
},
{
  "ques": "Which bank merged with HDFC Ltd in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "SBI",
  "op2": "HDFC Bank",
  "op3": "ICICI Bank",
  "op4": "Axis Bank",
  "ans": "HDFC Bank"
},
{
  "ques": "Who won the Jnanpith Award 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Gulzar",
  "op2": "Akkitham Achuthan Namboothiri",
  "op3": "Damodar Mauzo",
  "op4": "Vinod Kumar Shukla",
  "ans": "Vinod Kumar Shukla"
},
{
  "ques": "Which river is the Polavaram Project built on?<br><br>",
  "quesType": "mcq",
  "op1": "Krishna",
  "op2": "Godavari",
  "op3": "Cauvery",
  "op4": "Mahanadi",
  "ans": "Godavari"
},
{
  "ques": "Who is the Director General of WHO?<br><br>",
  "quesType": "mcq",
  "op1": "Tedros Adhanom Ghebreyesus",
  "op2": "Anthony Fauci",
  "op3": "Soumya Swaminathan",
  "op4": "Ngozi Okonjo-Iweala",
  "ans": "Tedros Adhanom Ghebreyesus"
},
{
  "ques": "Which Indian city hosts the annual Surajkund Mela?<br><br>",
  "quesType": "mcq",
  "op1": "Agra",
  "op2": "Faridabad",
  "op3": "Varanasi",
  "op4": "Jaipur",
  "ans": "Faridabad"
},
{
  "ques": "Who is the first Indian to win a Golden Globe award for Best Original Song?<br><br>",
  "quesType": "mcq",
  "op1": "A.R. Rahman",
  "op2": "Ilaiyaraaja",
  "op3": "M.M. Keeravani",
  "op4": "Vishal-Shekhar",
  "ans": "M.M. Keeravani"
},
{
  "ques": "Which state has the highest number of UNESCO World Heritage Sites in India?<br><br>",
  "quesType": "mcq",
  "op1": "Karnataka",
  "op2": "Maharashtra",
  "op3": "Uttar Pradesh",
  "op4": "Madhya Pradesh",
  "ans": "Maharashtra"
},
{
  "ques": "Which institute was ranked first in NIRF India Rankings 2023?<br><br>",
  "quesType": "mcq",
  "op1": "IIT Delhi",
  "op2": "IIT Madras",
  "op3": "IIT Bombay",
  "op4": "IISc Bangalore",
  "ans": "IIT Madras"
},
{
  "ques": "Which country is building the world’s largest offshore wind farm?<br><br>",
  "quesType": "mcq",
  "op1": "Norway",
  "op2": "Denmark",
  "op3": "UK",
  "op4": "Germany",
  "ans": "UK"
},
{
  "ques": "Who is the Managing Director of IMF?<br><br>",
  "quesType": "mcq",
  "op1": "Kristalina Georgieva",
  "op2": "Christine Lagarde",
  "op3": "Ngozi Okonjo-Iweala",
  "op4": "Gita Gopinath",
  "ans": "Kristalina Georgieva"
},
{
  "ques": "Which Indian won the Abel Prize in Mathematics 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Manjul Bhargava",
  "op2": "Akshay Venkatesh",
  "op3": "No Indian won",
  "op4": "S.R. Srinivasa Varadhan",
  "ans": "No Indian won"
},
{
  "ques": "Which country recently joined the NATO alliance in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Sweden",
  "op2": "Ukraine",
  "op3": "Finland",
  "op4": "Georgia",
  "ans": "Finland"
},
{
  "ques": "Which country launched the world’s first 6G satellite?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Japan",
  "op3": "China",
  "op4": "South Korea",
  "ans": "China"
}
,
{
  "ques": "Which country was removed from the FATF grey list in 2022?<br><br>",
  "quesType": "mcq",
  "op1": "Pakistan",
  "op2": "North Korea",
  "op3": "Myanmar",
  "op4": "Iran",
  "ans": "Pakistan"
},
{
  "ques": "Who was appointed as the first Chief of Defence Staff (CDS) of India?<br><br>",
  "quesType": "mcq",
  "op1": "Bipin Rawat",
  "op2": "Manoj Mukund Naravane",
  "op3": "Rakesh Kumar Singh Bhadauria",
  "op4": "Karambir Singh",
  "ans": "Bipin Rawat"
},
{
  "ques": "Which country is the largest exporter of crude oil to India?<br><br>",
  "quesType": "mcq",
  "op1": "Iran",
  "op2": "Russia",
  "op3": "Saudi Arabia",
  "op4": "Iraq",
  "ans": "Iraq"
},
{
  "ques": "Who won the Booker Prize 2022?<br><br>",
  "quesType": "mcq",
  "op1": "Damon Galgut",
  "op2": "Shehan Karunatilaka",
  "op3": "Bernardine Evaristo",
  "op4": "Margaret Atwood",
  "ans": "Shehan Karunatilaka"
},
{
  "ques": "Where is the headquarters of the International Solar Alliance?<br><br>",
  "quesType": "mcq",
  "op1": "New York",
  "op2": "Paris",
  "op3": "Gurugram",
  "op4": "Brussels",
  "ans": "Gurugram"
},
{
  "ques": "Which Indian state launched the 'One Family One Job' scheme?<br><br>",
  "quesType": "mcq",
  "op1": "Assam",
  "op2": "Sikkim",
  "op3": "Himachal Pradesh",
  "op4": "Tripura",
  "ans": "Sikkim"
},
{
  "ques": "Who is the current President of France?<br><br>",
  "quesType": "mcq",
  "op1": "François Hollande",
  "op2": "Nicolas Sarkozy",
  "op3": "Emmanuel Macron",
  "op4": "Marine Le Pen",
  "ans": "Emmanuel Macron"
},
{
  "ques": "Which city topped the EIU's Global Liveability Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Zurich",
  "op2": "Vienna",
  "op3": "Geneva",
  "op4": "Copenhagen",
  "ans": "Vienna"
},
{
  "ques": "Who is the current Comptroller and Auditor General (CAG) of India?<br><br>",
  "quesType": "mcq",
  "op1": "Rajiv Mehrishi",
  "op2": "Girish Chandra Murmu",
  "op3": "Vinod Rai",
  "op4": "Shashi Kant Sharma",
  "ans": "Girish Chandra Murmu"
},
{
  "ques": "Which country will host Expo 2030?<br><br>",
  "quesType": "mcq",
  "op1": "Saudi Arabia (Riyadh)",
  "op2": "South Korea",
  "op3": "Italy (Rome)",
  "op4": "Russia",
  "ans": "Saudi Arabia (Riyadh)"
},
{
  "ques": "Which Indian won the Ramon Magsaysay Award 2022?<br><br>",
  "quesType": "mcq",
  "op1": "Sonam Wangchuk",
  "op2": "Sandeep Pandey",
  "op3": "Palagummi Sainath",
  "op4": "None",
  "ans": "Palagummi Sainath"
},
{
  "ques": "Which country topped the Henley Passport Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Germany",
  "op2": "Japan",
  "op3": "Singapore",
  "op4": "South Korea",
  "ans": "Singapore"
},
{
  "ques": "Which Indian state has the highest number of UNESCO World Heritage Sites?<br><br>",
  "quesType": "mcq",
  "op1": "Madhya Pradesh",
  "op2": "Maharashtra",
  "op3": "Uttar Pradesh",
  "op4": "Karnataka",
  "ans": "Maharashtra"
},
{
  "ques": "Who is the Chairman of SEBI (as of 2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Ajay Tyagi",
  "op2": "Madhabi Puri Buch",
  "op3": "U.K. Sinha",
  "op4": "T.V. Mohandas Pai",
  "ans": "Madhabi Puri Buch"
},
{
  "ques": "Which country launched the 'Green Deal' for climate neutrality by 2050?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "India",
  "op3": "European Union",
  "op4": "Japan",
  "ans": "European Union"
},
{
  "ques": "Which state topped the SDG India Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Kerala",
  "op2": "Tamil Nadu",
  "op3": "Himachal Pradesh",
  "op4": "Punjab",
  "ans": "Kerala"
},
{
  "ques": "Which country hosted the 2023 SCO Summit?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "China",
  "op3": "Kazakhstan",
  "op4": "Uzbekistan",
  "ans": "India"
},
{
  "ques": "Who is the first woman Vice Chancellor of Delhi University?<br><br>",
  "quesType": "mcq",
  "op1": "Yogesh Singh",
  "op2": "Neena Gupta",
  "op3": "Renu Vig",
  "op4": "Naina Sharma",
  "ans": "Renu Vig"
},
{
  "ques": "Which Indian state topped the NITI Aayog Innovation Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Maharashtra",
  "op2": "Tamil Nadu",
  "op3": "Karnataka",
  "op4": "Telangana",
  "ans": "Karnataka"
},
{
  "ques": "Which Indian company became the first to launch a 5G private network?<br><br>",
  "quesType": "mcq",
  "op1": "Airtel",
  "op2": "Jio",
  "op3": "Tata Communications",
  "op4": "Bharti Enterprises",
  "ans": "Airtel"
},
{
  "ques": "Which city will host the Summer Olympics 2028?<br><br>",
  "quesType": "mcq",
  "op1": "Los Angeles",
  "op2": "Paris",
  "op3": "Tokyo",
  "op4": "Brisbane",
  "ans": "Los Angeles"
},
{
  "ques": "Which country launched the Artemis I mission?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "China",
  "op3": "India",
  "op4": "USA",
  "ans": "USA"
},
{
  "ques": "Which Indian won the Fields Medal in Mathematics?<br><br>",
  "quesType": "mcq",
  "op1": "Manjul Bhargava",
  "op2": "C.R. Rao",
  "op3": "S.R. Srinivasa Varadhan",
  "op4": "Vashishtha Narayan Singh",
  "ans": "Manjul Bhargava"
},
{
  "ques": "Who is the new CEO of Twitter?<br><br>",
  "quesType": "mcq",
  "op1": "Linda Yaccarino",
  "op2": "Elon Musk",
  "op3": "Parag Agrawal",
  "op4": "Jack Dorsey",
  "ans": "Linda Yaccarino"
},
{
  "ques": "Which country leads the world in Lithium production?<br><br>",
  "quesType": "mcq",
  "op1": "Chile",
  "op2": "Australia",
  "op3": "China",
  "op4": "Argentina",
  "ans": "Australia"
},
{
  "ques": "Which state hosts India’s only Golden Tiger?<br><br>",
  "quesType": "mcq",
  "op1": "Rajasthan",
  "op2": "West Bengal",
  "op3": "Assam",
  "op4": "Madhya Pradesh",
  "ans": "Assam"
},
{
  "ques": "Which Indian city was declared a UNESCO World Heritage City?<br><br>",
  "quesType": "mcq",
  "op1": "Jaipur",
  "op2": "Varanasi",
  "op3": "Ahmedabad",
  "op4": "Hyderabad",
  "ans": "Ahmedabad"
},
{
  "ques": "Which country topped the Global Hunger Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Yemen",
  "op2": "Somalia",
  "op3": "Chad",
  "op4": "Central African Republic",
  "ans": "Central African Republic"
},
{
  "ques": "Which company recently crossed $4 trillion market cap first?<br><br>",
  "quesType": "mcq",
  "op1": "Apple",
  "op2": "Microsoft",
  "op3": "Google",
  "op4": "Amazon",
  "ans": "Apple"
},
{
  "ques": "Who is the current Director General of the International Atomic Energy Agency (IAEA)?<br><br>",
  "quesType": "mcq",
  "op1": "Rafael Grossi",
  "op2": "Yukiya Amano",
  "op3": "Mohamed ElBaradei",
  "op4": "Hans Blix",
  "ans": "Rafael Grossi"
}
,
{
  "ques": "Which Indian state topped the NITI Aayog Export Preparedness Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Gujarat",
  "op2": "Maharashtra",
  "op3": "Tamil Nadu",
  "op4": "Karnataka",
  "ans": "Gujarat"
},
{
  "ques": "Which Indian city is hosting the World Chess Championship 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Chennai",
  "op2": "Delhi",
  "op3": "Mumbai",
  "op4": "Kolkata",
  "ans": "Chennai"
},
{
  "ques": "Who won the Ramon Magsaysay Award 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Sonam Wangchuk",
  "op2": "Ravi Kannan",
  "op3": "Kailash Satyarthi",
  "op4": "Dr. Devi Shetty",
  "ans": "Ravi Kannan"
},
{
  "ques": "Which country topped the Global Innovation Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Switzerland",
  "op2": "USA",
  "op3": "South Korea",
  "op4": "Germany",
  "ans": "Switzerland"
},
{
  "ques": "Which company launched the world’s first AI-powered humanoid robot for public services?<br><br>",
  "quesType": "mcq",
  "op1": "Google",
  "op2": "Tesla",
  "op3": "Samsung",
  "op4": "SoftBank",
  "ans": "Tesla"
},
{
  "ques": "Which country announced the ‘Green Deal Industrial Plan’ in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "UK",
  "op3": "Germany",
  "op4": "European Union",
  "ans": "European Union"
},
{
  "ques": "Who won the ICC Women’s Cricketer of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Smriti Mandhana",
  "op2": "Harmanpreet Kaur",
  "op3": "Deepti Sharma",
  "op4": "Ellyse Perry",
  "ans": "Deepti Sharma"
},
{
  "ques": "Which country became the first to approve a malaria vaccine for children?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Ghana",
  "op3": "Nigeria",
  "op4": "Kenya",
  "ans": "Ghana"
},
{
  "ques": "Which Indian airport ranked first in Skytrax World Airport Awards 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Mumbai",
  "op3": "Bangalore",
  "op4": "Hyderabad",
  "ans": "Delhi"
},
{
  "ques": "Who is the current CEO of Infosys?<br><br>",
  "quesType": "mcq",
  "op1": "Salil Parekh",
  "op2": "Nandan Nilekani",
  "op3": "Vishal Sikka",
  "op4": "Narayan Murthy",
  "ans": "Salil Parekh"
},
{
  "ques": "Which country launched the world’s first hydrogen-powered train?<br><br>",
  "quesType": "mcq",
  "op1": "Japan",
  "op2": "France",
  "op3": "Germany",
  "op4": "China",
  "ans": "Germany"
},
{
  "ques": "Which Indian state is the top milk producer?<br><br>",
  "quesType": "mcq",
  "op1": "Rajasthan",
  "op2": "Gujarat",
  "op3": "Uttar Pradesh",
  "op4": "Haryana",
  "ans": "Uttar Pradesh"
},
{
  "ques": "Who is the Secretary General of SAARC?<br><br>",
  "quesType": "mcq",
  "op1": "Esala Ruwan Weerakoon",
  "op2": "Amjad Hussain B Sial",
  "op3": "Le Luong Minh",
  "op4": "Sheikh Hasina",
  "ans": "Esala Ruwan Weerakoon"
},
{
  "ques": "Which country became the first cashless society?<br><br>",
  "quesType": "mcq",
  "op1": "Sweden",
  "op2": "Norway",
  "op3": "Singapore",
  "op4": "Finland",
  "ans": "Sweden"
},
{
  "ques": "Which Indian state launched the ‘School Chale Hum’ campaign?<br><br>",
  "quesType": "mcq",
  "op1": "Uttar Pradesh",
  "op2": "Madhya Pradesh",
  "op3": "Bihar",
  "op4": "Jharkhand",
  "ans": "Uttar Pradesh"
},
{
  "ques": "Which Indian company launched its own AI Chatbot ‘Hanooman’?<br><br>",
  "quesType": "mcq",
  "op1": "TCS",
  "op2": "Infosys",
  "op3": "Reliance",
  "op4": "5C Network",
  "ans": "5C Network"
},
{
  "ques": "Which Indian state launched Mission Buniyaad?<br><br>",
  "quesType": "mcq",
  "op1": "Haryana",
  "op2": "Uttar Pradesh",
  "op3": "Delhi",
  "op4": "Madhya Pradesh",
  "ans": "Delhi"
},
{
  "ques": "Which Indian city was named the UNESCO Creative City of Gastronomy?<br><br>",
  "quesType": "mcq",
  "op1": "Indore",
  "op2": "Ahmedabad",
  "op3": "Varanasi",
  "op4": "Hyderabad",
  "ans": "Hyderabad"
},
{
  "ques": "Who won the ICC Emerging Cricketer of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Shubman Gill",
  "op2": "Yashasvi Jaiswal",
  "op3": "Ruturaj Gaikwad",
  "op4": "Umran Malik",
  "ans": "Yashasvi Jaiswal"
},
{
  "ques": "Which Indian city is home to the new International Arbitration Centre?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Hyderabad",
  "op3": "Mumbai",
  "op4": "Bangalore",
  "ans": "Hyderabad"
},
{
  "ques": "Which country topped the Global Peace Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Denmark",
  "op2": "Iceland",
  "op3": "Finland",
  "op4": "New Zealand",
  "ans": "Iceland"
},
{
  "ques": "Which company introduced India’s first indigenous 5G core?<br><br>",
  "quesType": "mcq",
  "op1": "Jio",
  "op2": "BSNL",
  "op3": "Airtel",
  "op4": "ISRO",
  "ans": "Jio"
},
{
  "ques": "Who is the Director-General of the WHO?<br><br>",
  "quesType": "mcq",
  "op1": "Tedros Adhanom Ghebreyesus",
  "op2": "António Guterres",
  "op3": "Ban Ki-moon",
  "op4": "Ngozi Okonjo-Iweala",
  "ans": "Tedros Adhanom Ghebreyesus"
},
{
  "ques": "Which Indian city topped the Swachh Survekshan Awards 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Indore",
  "op2": "Surat",
  "op3": "Bhopal",
  "op4": "Ambikapur",
  "ans": "Indore"
},
{
  "ques": "Who won the Pritzker Architecture Prize 2024?<br><br>",
  "quesType": "mcq",
  "op1": "David Chipperfield",
  "op2": "Francis Kéré",
  "op3": "Diébédo Francis Kéré",
  "op4": "Riken Yamamoto",
  "ans": "Riken Yamamoto"
},
{
  "ques": "Which country ranks first in the World Happiness Report 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Norway",
  "op2": "Sweden",
  "op3": "Denmark",
  "op4": "Finland",
  "ans": "Finland"
},
{
  "ques": "Who is the current President of the Asian Development Bank?<br><br>",
  "quesType": "mcq",
  "op1": "Masatsugu Asakawa",
  "op2": "Kristalina Georgieva",
  "op3": "David Malpass",
  "op4": "Ajay Banga",
  "ans": "Masatsugu Asakawa"
},
{
  "ques": "Which Indian city hosted the G20 Startup20 Summit 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Hyderabad",
  "op2": "Ahmedabad",
  "op3": "Indore",
  "op4": "Goa",
  "ans": "Goa"
},
{
  "ques": "Who is the current head of the IMF?<br><br>",
  "quesType": "mcq",
  "op1": "Ngozi Okonjo-Iweala",
  "op2": "Kristalina Georgieva",
  "op3": "Ajay Banga",
  "op4": "António Guterres",
  "ans": "Kristalina Georgieva"
},
{
  "ques": "Which Indian state declared its entire area as ‘Open Defecation Free Plus’ in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Kerala",
  "op2": "Telangana",
  "op3": "Himachal Pradesh",
  "op4": "Sikkim",
  "ans": "Telangana"
}
,
{
  "ques": "Who is the current Director of the Central Bureau of Investigation (CBI)?<br><br>",
  "quesType": "mcq",
  "op1": "Rishi Kumar Shukla",
  "op2": "Subodh Kumar Jaiswal",
  "op3": "Alok Verma",
  "op4": "Nageswara Rao",
  "ans": "Subodh Kumar Jaiswal"
},
{
  "ques": "Which country hosted the 2024 ASEAN Summit?<br><br>",
  "quesType": "mcq",
  "op1": "Vietnam",
  "op2": "Thailand",
  "op3": "Indonesia",
  "op4": "Malaysia",
  "ans": "Indonesia"
},
{
  "ques": "Which Indian city will host the G20 Summit in 2026?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai",
  "op2": "Chennai",
  "op3": "Bengaluru",
  "op4": "Hyderabad",
  "ans": "Hyderabad"
},
{
  "ques": "Which country launched the world’s first commercial small modular nuclear reactor?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "China",
  "op3": "Russia",
  "op4": "France",
  "ans": "China"
},
{
  "ques": "Who won the Pulitzer Prize for Fiction in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Barbara Kingsolver",
  "op2": "George Saunders",
  "op3": "Colson Whitehead",
  "op4": "Richard Powers",
  "ans": "Barbara Kingsolver"
},
{
  "ques": "Which Indian state announced 'Mission Shakti' for women's safety?<br><br>",
  "quesType": "mcq",
  "op1": "Uttar Pradesh",
  "op2": "Bihar",
  "op3": "Madhya Pradesh",
  "op4": "Odisha",
  "ans": "Uttar Pradesh"
},
{
  "ques": "Which city became the world’s most polluted city in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Lahore",
  "op3": "Beijing",
  "op4": "Dhaka",
  "ans": "Lahore"
},
{
  "ques": "Which company became the first to launch a 2nm chip?<br><br>",
  "quesType": "mcq",
  "op1": "Intel",
  "op2": "Samsung",
  "op3": "TSMC",
  "op4": "IBM",
  "ans": "IBM"
},
{
  "ques": "Which bank topped the list of India’s most profitable PSUs in FY 2023?<br><br>",
  "quesType": "mcq",
  "op1": "SBI",
  "op2": "Punjab National Bank",
  "op3": "Bank of Baroda",
  "op4": "Canara Bank",
  "ans": "SBI"
},
{
  "ques": "Who won the Global Teacher Prize 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Ranjitsinh Disale",
  "op2": "Keishia Thorpe",
  "op3": "Veena George",
  "op4": "Agnes Chow",
  "ans": "Keishia Thorpe"
},
{
  "ques": "Which Indian city became the first to get a fully digital traffic management system?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai",
  "op2": "Bengaluru",
  "op3": "Hyderabad",
  "op4": "Chennai",
  "ans": "Bengaluru"
},
{
  "ques": "Which Indian port became the first to handle 300 million tonnes of cargo in a year?<br><br>",
  "quesType": "mcq",
  "op1": "Mundra Port",
  "op2": "JNPT",
  "op3": "Chennai Port",
  "op4": "Kandla Port",
  "ans": "Mundra Port"
},
{
  "ques": "Who won the ICC Emerging Cricketer of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Shubman Gill",
  "op2": "Harry Brook",
  "op3": "Cameron Green",
  "op4": "Marco Jansen",
  "ans": "Marco Jansen"
},
{
  "ques": "Who is the current Chief Minister of Punjab?<br><br>",
  "quesType": "mcq",
  "op1": "Charanjit Singh Channi",
  "op2": "Bhagwant Mann",
  "op3": "Amarinder Singh",
  "op4": "Sukhbir Singh Badal",
  "ans": "Bhagwant Mann"
},
{
  "ques": "Which Indian city hosted the World Book Fair 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Mumbai",
  "op3": "Kolkata",
  "op4": "Chennai",
  "ans": "Delhi"
},
{
  "ques": "Who is the current Chairman of SEBI?<br><br>",
  "quesType": "mcq",
  "op1": "Ajay Tyagi",
  "op2": "Madhabi Puri Buch",
  "op3": "Soma Mondal",
  "op4": "Rajesh Kumar",
  "ans": "Madhabi Puri Buch"
},
{
  "ques": "Which country launched the Artemis II lunar mission?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "China",
  "op3": "USA",
  "op4": "Japan",
  "ans": "USA"
},
{
  "ques": "Which Indian state topped the SDG India Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Kerala",
  "op2": "Tamil Nadu",
  "op3": "Himachal Pradesh",
  "op4": "Punjab",
  "ans": "Kerala"
},
{
  "ques": "Who won the ICC Spirit of Cricket Award 2023?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Kane Williamson",
  "op3": "Virat Kohli",
  "op4": "Aiden Markram",
  "ans": "Aiden Markram"
},
{
  "ques": "Which city hosted the COP29 climate summit?<br><br>",
  "quesType": "mcq",
  "op1": "Baku",
  "op2": "Glasgow",
  "op3": "Sharm El-Sheikh",
  "op4": "Rome",
  "ans": "Baku"
},
{
  "ques": "Who is the first woman pilot of Rafale in the Indian Air Force?<br><br>",
  "quesType": "mcq",
  "op1": "Avani Chaturvedi",
  "op2": "Mohana Singh",
  "op3": "Shivangi Singh",
  "op4": "Bhawana Kanth",
  "ans": "Shivangi Singh"
},
{
  "ques": "Which Indian city has the largest metro rail network?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Bangalore",
  "op3": "Hyderabad",
  "op4": "Kolkata",
  "ans": "Delhi"
},
{
  "ques": "Which company developed India’s first indigenous 5G test bed?<br><br>",
  "quesType": "mcq",
  "op1": "IIT Bombay",
  "op2": "IIT Madras",
  "op3": "IISc Bangalore",
  "op4": "DRDO",
  "ans": "IIT Madras"
},
{
  "ques": "Who is the current President of Sri Lanka?<br><br>",
  "quesType": "mcq",
  "op1": "Mahinda Rajapaksa",
  "op2": "Gotabaya Rajapaksa",
  "op3": "Ranil Wickremesinghe",
  "op4": "Sajith Premadasa",
  "ans": "Ranil Wickremesinghe"
},
{
  "ques": "Which Indian city was declared UNESCO World Heritage City in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Hyderabad",
  "op2": "Gwalior",
  "op3": "Varanasi",
  "op4": "Ahmedabad",
  "ans": "Varanasi"
},
{
  "ques": "Which state has the largest forest cover in India?<br><br>",
  "quesType": "mcq",
  "op1": "Madhya Pradesh",
  "op2": "Arunachal Pradesh",
  "op3": "Chhattisgarh",
  "op4": "Odisha",
  "ans": "Madhya Pradesh"
},
{
  "ques": "Which Indian city hosted the FIH Hockey World Cup 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Bhubaneswar",
  "op2": "Rourkela",
  "op3": "Chennai",
  "op4": "Both A and B",
  "ans": "Both A and B"
},
{
  "ques": "Who is the current Chairman of DRDO?<br><br>",
  "quesType": "mcq",
  "op1": "G. Satheesh Reddy",
  "op2": "Samir V Kamat",
  "op3": "S Christopher",
  "op4": "Avinash Chander",
  "ans": "Samir V Kamat"
},
{
  "ques": "Which country built the world’s first floating city prototype?<br><br>",
  "quesType": "mcq",
  "op1": "Japan",
  "op2": "South Korea",
  "op3": "Singapore",
  "op4": "Maldives",
  "ans": "South Korea"
},
{
  "ques": "Who won the Man Booker Prize 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Shehan Karunatilaka",
  "op2": "George Saunders",
  "op3": "Damon Galgut",
  "op4": "Bernardine Evaristo",
  "ans": "Shehan Karunatilaka"
}
,
{
  "ques": "Who is the current Director of the CBI (2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Subodh Kumar Jaiswal",
  "op2": "Rishi Kumar Shukla",
  "op3": "Alok Verma",
  "op4": "Nageswara Rao",
  "ans": "Subodh Kumar Jaiswal"
},
{
  "ques": "Which Indian airport won the 'Best Airport in India and South Asia' 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi IGI Airport",
  "op2": "Mumbai Airport",
  "op3": "Bangalore Airport",
  "op4": "Hyderabad Airport",
  "ans": "Delhi IGI Airport"
},
{
  "ques": "Which Indian state recently declared 'Dholavira' as a UNESCO World Heritage Site?<br><br>",
  "quesType": "mcq",
  "op1": "Rajasthan",
  "op2": "Gujarat",
  "op3": "Madhya Pradesh",
  "op4": "Maharashtra",
  "ans": "Gujarat"
},
{
  "ques": "Who won the Padma Vibhushan for Art in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Zakir Hussain",
  "op2": "Ustad Amjad Ali Khan",
  "op3": "Smt. Sonal Mansingh",
  "op4": "Dr. M. Balamuralikrishna",
  "ans": "Zakir Hussain"
},
{
  "ques": "Which Indian company launched India’s first 3D-printed rocket engine?<br><br>",
  "quesType": "mcq",
  "op1": "Skyroot Aerospace",
  "op2": "ISRO",
  "op3": "Agnikul Cosmos",
  "op4": "Bellatrix Aerospace",
  "ans": "Agnikul Cosmos"
},
{
  "ques": "Which Indian city hosted the International G20 Summit Startup20?<br><br>",
  "quesType": "mcq",
  "op1": "Ahmedabad",
  "op2": "Hyderabad",
  "op3": "Bangalore",
  "op4": "Guwahati",
  "ans": "Ahmedabad"
},
{
  "ques": "Which country became the first to approve a Malaria vaccine for children?<br><br>",
  "quesType": "mcq",
  "op1": "Nigeria",
  "op2": "Ghana",
  "op3": "Kenya",
  "op4": "Uganda",
  "ans": "Ghana"
},
{
  "ques": "Who became the first female Finance Minister of Pakistan?<br><br>",
  "quesType": "mcq",
  "op1": "Hina Rabbani Khar",
  "op2": "Sherry Rehman",
  "op3": "Hina Pervaiz Butt",
  "op4": "Ishrat Hussain",
  "ans": "Hina Rabbani Khar"
},
{
  "ques": "Which country launched the world’s first hydrogen-powered train?<br><br>",
  "quesType": "mcq",
  "op1": "France",
  "op2": "Japan",
  "op3": "Germany",
  "op4": "Canada",
  "ans": "Germany"
},
{
  "ques": "Who won the Laureus Sportsman of the Year 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Novak Djokovic",
  "op2": "Lionel Messi",
  "op3": "Lewis Hamilton",
  "op4": "Max Verstappen",
  "ans": "Lionel Messi"
},
{
  "ques": "Which country launched the Tianwen-2 asteroid mission?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "USA",
  "op3": "China",
  "op4": "Russia",
  "ans": "China"
},
{
  "ques": "Who is the head of NITI Aayog (2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Amitabh Kant",
  "op2": "Rajiv Kumar",
  "op3": "Suman Bery",
  "op4": "V.K. Saraswat",
  "ans": "Suman Bery"
},
{
  "ques": "Which country hosted the World Economic Forum 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Germany",
  "op2": "USA",
  "op3": "Switzerland",
  "op4": "Singapore",
  "ans": "Switzerland"
},
{
  "ques": "Which Indian scientist won the Templeton Prize 2023?<br><br>",
  "quesType": "mcq",
  "op1": "M.S. Swaminathan",
  "op2": "Sunita Narain",
  "op3": "Vandana Shiva",
  "op4": "Raj Reddy",
  "ans": "Vandana Shiva"
},
{
  "ques": "Which city has the world’s largest metro network?<br><br>",
  "quesType": "mcq",
  "op1": "Tokyo",
  "op2": "Shanghai",
  "op3": "Beijing",
  "op4": "New York",
  "ans": "Shanghai"
},
{
  "ques": "Which Indian river was declared a living entity?<br><br>",
  "quesType": "mcq",
  "op1": "Yamuna",
  "op2": "Narmada",
  "op3": "Ganga",
  "op4": "Godavari",
  "ans": "Ganga"
},
{
  "ques": "Which Indian state passed the 'Right to Health' Bill recently?<br><br>",
  "quesType": "mcq",
  "op1": "Karnataka",
  "op2": "Kerala",
  "op3": "Rajasthan",
  "op4": "Tamil Nadu",
  "ans": "Rajasthan"
},
{
  "ques": "Who won the ICC Emerging Player of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Shubman Gill",
  "op2": "Ishan Kishan",
  "op3": "Umran Malik",
  "op4": "Harry Brook",
  "ans": "Shubman Gill"
},
{
  "ques": "Which country declared a Climate Emergency in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Germany",
  "op2": "Australia",
  "op3": "New Zealand",
  "op4": "Canada",
  "ans": "New Zealand"
},
{
  "ques": "Which Indian company built India’s first semi-high-speed train?<br><br>",
  "quesType": "mcq",
  "op1": "BEML",
  "op2": "Integral Coach Factory",
  "op3": "Rail Coach Factory",
  "op4": "Titagarh Wagons",
  "ans": "Integral Coach Factory"
},
{
  "ques": "Who won the Miss World 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Karolina Bielawska",
  "op2": "Toni-Ann Singh",
  "op3": "Vanessa Ponce",
  "op4": "Krystyna Pyszková",
  "ans": "Krystyna Pyszková"
},
{
  "ques": "Who is the current head of IMF?<br><br>",
  "quesType": "mcq",
  "op1": "Christine Lagarde",
  "op2": "Kristalina Georgieva",
  "op3": "Ngozi Okonjo-Iweala",
  "op4": "Janet Yellen",
  "ans": "Kristalina Georgieva"
},
{
  "ques": "Which country became the first cashless society?<br><br>",
  "quesType": "mcq",
  "op1": "Norway",
  "op2": "Sweden",
  "op3": "Denmark",
  "op4": "Netherlands",
  "ans": "Sweden"
},
{
  "ques": "Which bank merged with HDFC Ltd in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "ICICI Bank",
  "op2": "Axis Bank",
  "op3": "HDFC Bank",
  "op4": "SBI",
  "ans": "HDFC Bank"
},
{
  "ques": "Who is the first Indian to win the Pritzker Architecture Prize?<br><br>",
  "quesType": "mcq",
  "op1": "Raj Rewal",
  "op2": "Charles Correa",
  "op3": "B.V. Doshi",
  "op4": "Hafeez Contractor",
  "ans": "B.V. Doshi"
},
{
  "ques": "Who is the world’s richest woman (2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Francoise Bettencourt Meyers",
  "op2": "Alice Walton",
  "op3": "MacKenzie Scott",
  "op4": "Julia Koch",
  "ans": "Francoise Bettencourt Meyers"
},
{
  "ques": "Which Indian state is the largest producer of spices?<br><br>",
  "quesType": "mcq",
  "op1": "Kerala",
  "op2": "Andhra Pradesh",
  "op3": "Tamil Nadu",
  "op4": "Karnataka",
  "ans": "Kerala"
},
{
  "ques": "Which international organization launched the 'One Health' initiative?<br><br>",
  "quesType": "mcq",
  "op1": "UNICEF",
  "op2": "WHO",
  "op3": "FAO",
  "op4": "UNEP",
  "ans": "WHO"
},
{
  "ques": "Which state hosts the Hornbill Festival?<br><br>",
  "quesType": "mcq",
  "op1": "Assam",
  "op2": "Meghalaya",
  "op3": "Nagaland",
  "op4": "Arunachal Pradesh",
  "ans": "Nagaland"
}
,
{
  "ques": "Which Indian state launched the 'Mukhyamantri Seekho-Kamao Yojana'?<br><br>",
  "quesType": "mcq",
  "op1": "Madhya Pradesh",
  "op2": "Bihar",
  "op3": "Odisha",
  "op4": "Jharkhand",
  "ans": "Madhya Pradesh"
},
{
  "ques": "Which country launched the Aditya-L1 solar mission?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Russia",
  "op3": "China",
  "op4": "India",
  "ans": "India"
},
{
  "ques": "Who won the Pulitzer Prize for Fiction 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Colson Whitehead",
  "op2": "Hernan Diaz",
  "op3": "Barbara Kingsolver",
  "op4": "Jennifer Egan",
  "ans": "Barbara Kingsolver"
},
{
  "ques": "Which country hosted the FIFA Women's World Cup 2023?<br><br>",
  "quesType": "mcq",
  "op1": "France",
  "op2": "USA",
  "op3": "Australia & New Zealand",
  "op4": "Canada",
  "ans": "Australia & New Zealand"
},
{
  "ques": "Which company is the world’s largest semiconductor manufacturer?<br><br>",
  "quesType": "mcq",
  "op1": "Intel",
  "op2": "AMD",
  "op3": "TSMC",
  "op4": "Samsung",
  "ans": "TSMC"
},
{
  "ques": "Who is the current Chairperson of NITI Aayog?<br><br>",
  "quesType": "mcq",
  "op1": "Amitabh Kant",
  "op2": "Suman Bery",
  "op3": "Rajiv Kumar",
  "op4": "Narendra Modi",
  "ans": "Narendra Modi"
},
{
  "ques": "Which country leads the Global Soft Power Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "UK",
  "op3": "Germany",
  "op4": "China",
  "ans": "USA"
},
{
  "ques": "Who won the Man Booker Prize 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Shehan Karunatilaka",
  "op2": "Bernardine Evaristo",
  "op3": "Douglas Stuart",
  "op4": "Paul Lynch",
  "ans": "Paul Lynch"
},
{
  "ques": "Which Indian state topped the Ease of Doing Business Rankings 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Andhra Pradesh",
  "op2": "Gujarat",
  "op3": "Telangana",
  "op4": "Maharashtra",
  "ans": "Andhra Pradesh"
},
{
  "ques": "Who is the current President of Sri Lanka?<br><br>",
  "quesType": "mcq",
  "op1": "Ranil Wickremesinghe",
  "op2": "Gotabaya Rajapaksa",
  "op3": "Maithripala Sirisena",
  "op4": "Mahinda Rajapaksa",
  "ans": "Ranil Wickremesinghe"
},
{
  "ques": "Which company launched India’s first 5G phone?<br><br>",
  "quesType": "mcq",
  "op1": "Apple",
  "op2": "Samsung",
  "op3": "OnePlus",
  "op4": "Xiaomi",
  "ans": "OnePlus"
},
{
  "ques": "Which country launched the 'Hope Probe' Mars Mission?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "India",
  "op3": "China",
  "op4": "UAE",
  "ans": "UAE"
},
{
  "ques": "Who is the current Union Minister for Education in India?<br><br>",
  "quesType": "mcq",
  "op1": "Dharmendra Pradhan",
  "op2": "Smriti Irani",
  "op3": "Prakash Javadekar",
  "op4": "Piyush Goyal",
  "ans": "Dharmendra Pradhan"
},
{
  "ques": "Which Indian city is called the Solar Capital of India?<br><br>",
  "quesType": "mcq",
  "op1": "Surat",
  "op2": "Rewa",
  "op3": "Bhadla",
  "op4": "Jaisalmer",
  "ans": "Rewa"
},
{
  "ques": "Which company developed ChatGPT?<br><br>",
  "quesType": "mcq",
  "op1": "Google",
  "op2": "OpenAI",
  "op3": "Meta",
  "op4": "IBM",
  "ans": "OpenAI"
},
{
  "ques": "Who won the ICC Men’s Test Cricketer of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Joe Root",
  "op2": "Pat Cummins",
  "op3": "Ben Stokes",
  "op4": "Ravichandran Ashwin",
  "ans": "Ravichandran Ashwin"
},
{
  "ques": "Which country produces the most coffee in the world?<br><br>",
  "quesType": "mcq",
  "op1": "Vietnam",
  "op2": "Colombia",
  "op3": "Brazil",
  "op4": "Indonesia",
  "ans": "Brazil"
},
{
  "ques": "Which Indian city hosted the SCO Foreign Ministers’ Meet 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Goa",
  "op2": "Delhi",
  "op3": "Jaipur",
  "op4": "Varanasi",
  "ans": "Goa"
},
{
  "ques": "Who won the Nobel Prize for Literature 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Annie Ernaux",
  "op2": "Jon Fosse",
  "op3": "Kazuo Ishiguro",
  "op4": "Peter Handke",
  "ans": "Jon Fosse"
},
{
  "ques": "Which Indian state produces the most wheat?<br><br>",
  "quesType": "mcq",
  "op1": "Punjab",
  "op2": "Haryana",
  "op3": "Uttar Pradesh",
  "op4": "Madhya Pradesh",
  "ans": "Uttar Pradesh"
},
{
  "ques": "Who is the Chief of Defence Staff of India as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "General Bipin Rawat",
  "op2": "General Anil Chauhan",
  "op3": "General MM Naravane",
  "op4": "General Manoj Pande",
  "ans": "General Anil Chauhan"
},
{
  "ques": "Which country is the largest producer of copper?<br><br>",
  "quesType": "mcq",
  "op1": "Peru",
  "op2": "China",
  "op3": "USA",
  "op4": "Chile",
  "ans": "Chile"
},
{
  "ques": "Who is the new Chairman of ISRO?<br><br>",
  "quesType": "mcq",
  "op1": "K Sivan",
  "op2": "S Somnath",
  "op3": "G Madhavan Nair",
  "op4": "A S Kiran Kumar",
  "ans": "S Somnath"
},
{
  "ques": "Which Indian state launched the Mission Basundhara?<br><br>",
  "quesType": "mcq",
  "op1": "West Bengal",
  "op2": "Assam",
  "op3": "Tripura",
  "op4": "Meghalaya",
  "ans": "Assam"
},
{
  "ques": "Which Indian city will host the IAAF World Athletics Championships 2025?<br><br>",
  "quesType": "mcq",
  "op1": "Bangalore",
  "op2": "Delhi",
  "op3": "Kolkata",
  "op4": "Tokyo",
  "ans": "Tokyo"
},
{
  "ques": "Who is the head of the UN Human Rights Council as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Volker Türk",
  "op2": "Michelle Bachelet",
  "op3": "Ban Ki-moon",
  "op4": "António Guterres",
  "ans": "Volker Türk"
},
{
  "ques": "Which Indian bank is the largest lender by market cap?<br><br>",
  "quesType": "mcq",
  "op1": "SBI",
  "op2": "HDFC Bank",
  "op3": "ICICI Bank",
  "op4": "Axis Bank",
  "ans": "HDFC Bank"
},
{
  "ques": "Who is the current head of the RBI Monetary Policy Committee?<br><br>",
  "quesType": "mcq",
  "op1": "Urjit Patel",
  "op2": "Raghuram Rajan",
  "op3": "Shaktikanta Das",
  "op4": "Nirmala Sitharaman",
  "ans": "Shaktikanta Das"
},
{
  "ques": "Which country produces the most rice globally?<br><br>",
  "quesType": "mcq",
  "op1": "Vietnam",
  "op2": "India",
  "op3": "Indonesia",
  "op4": "China",
  "ans": "China"
}
,
{
  "ques": "Who is the current Chairman of ISRO?<br><br>",
  "quesType": "mcq",
  "op1": "K. Sivan",
  "op2": "S. Somanath",
  "op3": "A.S. Kiran Kumar",
  "op4": "G. Madhavan Nair",
  "ans": "S. Somanath"
},
{
  "ques": "Which country recently declared a climate emergency?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "New Zealand",
  "op3": "Japan",
  "op4": "Australia",
  "ans": "New Zealand"
},
{
  "ques": "Who is the current Attorney General of India?<br><br>",
  "quesType": "mcq",
  "op1": "Mukul Rohatgi",
  "op2": "K.K. Venugopal",
  "op3": "R. Venkataramani",
  "op4": "G.E. Vahanvati",
  "ans": "R. Venkataramani"
},
{
  "ques": "Which country recently unveiled the world’s first wooden satellite?<br><br>",
  "quesType": "mcq",
  "op1": "Finland",
  "op2": "Japan",
  "op3": "USA",
  "op4": "Canada",
  "ans": "Japan"
},
{
  "ques": "Who is the current Union Minister for Road Transport and Highways?<br><br>",
  "quesType": "mcq",
  "op1": "Piyush Goyal",
  "op2": "Rajnath Singh",
  "op3": "Nitin Gadkari",
  "op4": "Amit Shah",
  "ans": "Nitin Gadkari"
},
{
  "ques": "Which country topped the Global Innovation Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Switzerland",
  "op3": "Sweden",
  "op4": "Singapore",
  "ans": "Switzerland"
},
{
  "ques": "Who is the new Chairman of the 16th Finance Commission?<br><br>",
  "quesType": "mcq",
  "op1": "Arvind Panagariya",
  "op2": "N.K. Singh",
  "op3": "Bibek Debroy",
  "op4": "Raghuram Rajan",
  "ans": "Arvind Panagariya"
},
{
  "ques": "Which country will host the Asian Games 2030?<br><br>",
  "quesType": "mcq",
  "op1": "Qatar",
  "op2": "Saudi Arabia",
  "op3": "India",
  "op4": "China",
  "ans": "Qatar"
},
{
  "ques": "Who won the Best Actor award at the Oscars 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Brendan Fraser",
  "op2": "Austin Butler",
  "op3": "Cillian Murphy",
  "op4": "Leonardo DiCaprio",
  "ans": "Cillian Murphy"
},
{
  "ques": "Who is the current Speaker of the Lok Sabha?<br><br>",
  "quesType": "mcq",
  "op1": "Om Birla",
  "op2": "Sumitra Mahajan",
  "op3": "Meira Kumar",
  "op4": "Ghulam Nabi Azad",
  "ans": "Om Birla"
},
{
  "ques": "Which country became the first to legalize lab-grown meat?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Singapore",
  "op3": "Israel",
  "op4": "Netherlands",
  "ans": "Singapore"
},
{
  "ques": "Who is the first female Director General of CSIR?<br><br>",
  "quesType": "mcq",
  "op1": "N. Kalaiselvi",
  "op2": "Tessy Thomas",
  "op3": "Gagandeep Kang",
  "op4": "Soumya Swaminathan",
  "ans": "N. Kalaiselvi"
},
{
  "ques": "Which Indian city has the country’s first waste-to-hydrogen plant?<br><br>",
  "quesType": "mcq",
  "op1": "Indore",
  "op2": "Pune",
  "op3": "Ahmedabad",
  "op4": "Delhi",
  "ans": "Indore"
},
{
  "ques": "Who is the new President of Taiwan elected in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Tsai Ing-wen",
  "op2": "Lai Ching-te",
  "op3": "Ma Ying-jeou",
  "op4": "Han Kuo-yu",
  "ans": "Lai Ching-te"
},
{
  "ques": "Which company launched the world’s first AI-generated news anchor?<br><br>",
  "quesType": "mcq",
  "op1": "BBC",
  "op2": "Xinhua",
  "op3": "CNN",
  "op4": "NDTV",
  "ans": "Xinhua"
},
{
  "ques": "Which state topped the Export Preparedness Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Tamil Nadu",
  "op2": "Maharashtra",
  "op3": "Gujarat",
  "op4": "Karnataka",
  "ans": "Tamil Nadu"
},
{
  "ques": "Who is the new head of UNESCO?<br><br>",
  "quesType": "mcq",
  "op1": "Audrey Azoulay",
  "op2": "Irina Bokova",
  "op3": "Koichiro Matsuura",
  "op4": "Kristalina Georgieva",
  "ans": "Audrey Azoulay"
},
{
  "ques": "Which city will host the Summer Olympics 2032?<br><br>",
  "quesType": "mcq",
  "op1": "Paris",
  "op2": "Los Angeles",
  "op3": "Brisbane",
  "op4": "Tokyo",
  "ans": "Brisbane"
},
{
  "ques": "Who won the ICC Women's Cricketer of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Smriti Mandhana",
  "op2": "Harmanpreet Kaur",
  "op3": "Sophie Ecclestone",
  "op4": "Beth Mooney",
  "ans": "Nat Sciver-Brunt"
},
{
  "ques": "Which state declared 'Jagananna Chedodu' scheme for tailors and barbers?<br><br>",
  "quesType": "mcq",
  "op1": "Telangana",
  "op2": "Karnataka",
  "op3": "Andhra Pradesh",
  "op4": "Kerala",
  "ans": "Andhra Pradesh"
},
{
  "ques": "Who is the youngest Grandmaster in chess from India?<br><br>",
  "quesType": "mcq",
  "op1": "Rameshbabu Praggnanandhaa",
  "op2": "Gukesh D",
  "op3": "Nihal Sarin",
  "op4": "Dommaraju Gukesh",
  "ans": "Dommaraju Gukesh"
},
{
  "ques": "Which bank launched India’s first green deposit program?<br><br>",
  "quesType": "mcq",
  "op1": "ICICI Bank",
  "op2": "SBI",
  "op3": "HSBC India",
  "op4": "HDFC Bank",
  "ans": "HSBC India"
},
{
  "ques": "Who is the first woman Vice-Chancellor of JNU?<br><br>",
  "quesType": "mcq",
  "op1": "Najma Akhtar",
  "op2": "Santishree Dhulipudi Pandit",
  "op3": "Rupa Vasudevan",
  "op4": "Anita Gupta",
  "ans": "Santishree Dhulipudi Pandit"
},
{
  "ques": "Which country became the world’s first malaria-free country in Asia?<br><br>",
  "quesType": "mcq",
  "op1": "Sri Lanka",
  "op2": "Bhutan",
  "op3": "Maldives",
  "op4": "Thailand",
  "ans": "Maldives"
},
{
  "ques": "Who is the new Chief Justice of Pakistan?<br><br>",
  "quesType": "mcq",
  "op1": "Gulzar Ahmed",
  "op2": "Umar Ata Bandial",
  "op3": "Qazi Faez Isa",
  "op4": "Asif Saeed Khosa",
  "ans": "Qazi Faez Isa"
},
{
  "ques": "Which state has the highest literacy rate in India as per 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Kerala",
  "op2": "Mizoram",
  "op3": "Tripura",
  "op4": "Goa",
  "ans": "Kerala"
},
{
  "ques": "Who is the CEO of OpenAI?<br><br>",
  "quesType": "mcq",
  "op1": "Mark Zuckerberg",
  "op2": "Satya Nadella",
  "op3": "Sam Altman",
  "op4": "Sundar Pichai",
  "ans": "Sam Altman"
},
{
  "ques": "Which Indian city won the Cleanest City award in Swachh Survekshan 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Indore",
  "op2": "Surat",
  "op3": "Mysuru",
  "op4": "Bhopal",
  "ans": "Indore"
},
{
  "ques": "Which Indian state launched the ‘Mission Buniyaad’?<br><br>",
  "quesType": "mcq",
  "op1": "Haryana",
  "op2": "Punjab",
  "op3": "Delhi",
  "op4": "Uttar Pradesh",
  "ans": "Delhi"
}
,
{
  "ques": "Which country will host the FIFA Women's World Cup 2027?<br><br>",
  "quesType": "mcq",
  "op1": "Brazil",
  "op2": "Germany",
  "op3": "South Africa",
  "op4": "Netherlands-Belgium-Germany",
  "ans": "Netherlands-Belgium-Germany"
},
{
  "ques": "Who is the new President of Bangladesh (2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Sheikh Hasina",
  "op2": "Mohammed Shahabuddin",
  "op3": "Abdul Hamid",
  "op4": "Khaleda Zia",
  "ans": "Mohammed Shahabuddin"
},
{
  "ques": "Which Indian state will host the National Games 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Goa",
  "op2": "Gujarat",
  "op3": "Uttarakhand",
  "op4": "Chhattisgarh",
  "ans": "Uttarakhand"
},
{
  "ques": "Who won the Nobel Prize for Literature 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Annie Ernaux",
  "op2": "Jon Fosse",
  "op3": "Kazuo Ishiguro",
  "op4": "Louise Glück",
  "ans": "Jon Fosse"
},
{
  "ques": "Which country ranked first in World Happiness Report 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Denmark",
  "op2": "Switzerland",
  "op3": "Finland",
  "op4": "Iceland",
  "ans": "Finland"
},
{
  "ques": "Who is the first woman President of Honduras?<br><br>",
  "quesType": "mcq",
  "op1": "Xiomy Castro",
  "op2": "Laura Chinchilla",
  "op3": "Cristina Fernández",
  "op4": "Dilma Rousseff",
  "ans": "Xiomy Castro"
},
{
  "ques": "Which country hosts the headquarters of BIMSTEC?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Sri Lanka",
  "op3": "Bangladesh",
  "op4": "Thailand",
  "ans": "Bangladesh"
},
{
  "ques": "Which city will host the Asian Games 2030?<br><br>",
  "quesType": "mcq",
  "op1": "Doha",
  "op2": "Riyadh",
  "op3": "Tokyo",
  "op4": "Kuala Lumpur",
  "ans": "Doha"
},
{
  "ques": "Which country topped the Global Innovation Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Germany",
  "op3": "Switzerland",
  "op4": "Sweden",
  "ans": "Switzerland"
},
{
  "ques": "Which bank merged with Kotak Mahindra Bank in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "IndusInd Bank",
  "op2": "ING Vysya Bank",
  "op3": "Axis Bank",
  "op4": "IDFC First Bank",
  "ans": "ING Vysya Bank"
},
{
  "ques": "Who is the chairman of ISRO (2024)?<br><br>",
  "quesType": "mcq",
  "op1": "K. Sivan",
  "op2": "S. Somanath",
  "op3": "A.S. Kiran Kumar",
  "op4": "G. Madhavan Nair",
  "ans": "S. Somanath"
},
{
  "ques": "Who won the ICC Spirit of Cricket Award 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Kane Williamson",
  "op2": "Jos Buttler",
  "op3": "Virat Kohli",
  "op4": "Pat Cummins",
  "ans": "Kane Williamson"
},
{
  "ques": "Which country launched the Aditya-L1 mission?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Japan",
  "op3": "China",
  "op4": "India",
  "ans": "India"
},
{
  "ques": "Who is the new Chairman of Railway Board (2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Vinay Kumar Tripathi",
  "op2": "A.K. Lahoti",
  "op3": "Suneet Sharma",
  "op4": "V.K. Yadav",
  "ans": "A.K. Lahoti"
},
{
  "ques": "Which city will host the Winter Olympics 2026?<br><br>",
  "quesType": "mcq",
  "op1": "Beijing",
  "op2": "Milan-Cortina",
  "op3": "Nagano",
  "op4": "Oslo",
  "ans": "Milan-Cortina"
},
{
  "ques": "Which country topped the Climate Change Performance Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Denmark",
  "op2": "Sweden",
  "op3": "Morocco",
  "op4": "Norway",
  "ans": "Denmark"
},
{
  "ques": "Which country hosted the ASEAN Summit 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Thailand",
  "op2": "Vietnam",
  "op3": "Indonesia",
  "op4": "Philippines",
  "ans": "Indonesia"
},
{
  "ques": "Who won the Golden Globe for Best Actor 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Austin Butler",
  "op2": "Brendan Fraser",
  "op3": "Cillian Murphy",
  "op4": "Colin Farrell",
  "ans": "Cillian Murphy"
},
{
  "ques": "Who is the new CEO of Starbucks (2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Howard Schultz",
  "op2": "Laxman Narasimhan",
  "op3": "Kevin Johnson",
  "op4": "Indra Nooyi",
  "ans": "Laxman Narasimhan"
},
{
  "ques": "Which city will host COP29 Climate Summit?<br><br>",
  "quesType": "mcq",
  "op1": "Baku",
  "op2": "Dubai",
  "op3": "New Delhi",
  "op4": "Warsaw",
  "ans": "Baku"
},
{
  "ques": "Which country became the 31st member of NATO?<br><br>",
  "quesType": "mcq",
  "op1": "Ukraine",
  "op2": "Finland",
  "op3": "Sweden",
  "op4": "Georgia",
  "ans": "Finland"
},
{
  "ques": "Who is the current Chairman of CBDT (2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Nitin Gupta",
  "op2": "Sangeeta Singh",
  "op3": "Pramod Chandra Mody",
  "op4": "Sushil Chandra",
  "ans": "Nitin Gupta"
},
{
  "ques": "Which country won the ICC Women's T20 World Cup 2023?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Australia",
  "op3": "England",
  "op4": "New Zealand",
  "ans": "Australia"
},
{
  "ques": "Which is India’s first underwater metro rail project city?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai",
  "op2": "Chennai",
  "op3": "Kolkata",
  "op4": "Bangalore",
  "ans": "Kolkata"
},
{
  "ques": "Who won the Abel Prize 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Luis Caffarelli",
  "op2": "Andrew Wiles",
  "op3": "Jean-Pierre Serre",
  "op4": "Grigori Perelman",
  "ans": "Luis Caffarelli"
},
{
  "ques": "Which country is the largest producer of wheat?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Russia",
  "op3": "China",
  "op4": "USA",
  "ans": "China"
},
{
  "ques": "Which company developed ChatGPT?<br><br>",
  "quesType": "mcq",
  "op1": "Google",
  "op2": "Microsoft",
  "op3": "OpenAI",
  "op4": "Meta",
  "ans": "OpenAI"
},
{
  "ques": "Who is the new US Secretary of State (2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Antony Blinken",
  "op2": "Mike Pompeo",
  "op3": "John Kerry",
  "op4": "Rex Tillerson",
  "ans": "Antony Blinken"
},
{
  "ques": "Who is the current Lok Sabha Speaker (2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Sumitra Mahajan",
  "op2": "Om Birla",
  "op3": "Meira Kumar",
  "op4": "M. Thambidurai",
  "ans": "Om Birla"
},
{
  "ques": "Which is India’s largest tiger reserve?<br><br>",
  "quesType": "mcq",
  "op1": "Kaziranga",
  "op2": "Nagarhole",
  "op3": "Corbett",
  "op4": "Nagarjunsagar-Srisailam",
  "ans": "Nagarjunsagar-Srisailam"
}
,
{
  "ques": "Which country hosted the World Economic Forum 2024 Annual Meeting?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Switzerland",
  "op3": "Germany",
  "op4": "France",
  "ans": "Switzerland"
},
{
  "ques": "Who is the President of Iran as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Hassan Rouhani",
  "op2": "Ebrahim Raisi",
  "op3": "Ali Khamenei",
  "op4": "Mohammad Khatami",
  "ans": "Ebrahim Raisi"
},
{
  "ques": "Which Indian state launched the 'One Family One Job' scheme?<br><br>",
  "quesType": "mcq",
  "op1": "Assam",
  "op2": "Sikkim",
  "op3": "Mizoram",
  "op4": "Nagaland",
  "ans": "Sikkim"
},
{
  "ques": "Who won the Australian Open 2024 Women’s Singles title?<br><br>",
  "quesType": "mcq",
  "op1": "Iga Swiatek",
  "op2": "Aryna Sabalenka",
  "op3": "Ons Jabeur",
  "op4": "Naomi Osaka",
  "ans": "Aryna Sabalenka"
},
{
  "ques": "Which city will host the 2032 Summer Olympics?<br><br>",
  "quesType": "mcq",
  "op1": "Los Angeles",
  "op2": "Paris",
  "op3": "Brisbane",
  "op4": "Berlin",
  "ans": "Brisbane"
},
{
  "ques": "Who is the Governor of the Bank of England?<br><br>",
  "quesType": "mcq",
  "op1": "Mark Carney",
  "op2": "Andrew Bailey",
  "op3": "Rishi Sunak",
  "op4": "Kristalina Georgieva",
  "ans": "Andrew Bailey"
},
{
  "ques": "Which Indian city hosted the Pravasi Bharatiya Divas 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Indore",
  "op2": "Varanasi",
  "op3": "Bangalore",
  "op4": "Ahmedabad",
  "ans": "Indore"
},
{
  "ques": "Who won the Grammy for Album of the Year 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Beyoncé",
  "op2": "Taylor Swift",
  "op3": "Adele",
  "op4": "Harry Styles",
  "ans": "Taylor Swift"
},
{
  "ques": "Which Indian city topped the Urban Cleanliness Rankings 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Surat",
  "op2": "Indore",
  "op3": "Bhopal",
  "op4": "Mysore",
  "ans": "Indore"
},
{
  "ques": "Which country launched the Artemis lunar mission?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "China",
  "op3": "USA",
  "op4": "Japan",
  "ans": "USA"
},
{
  "ques": "Who is the Chief of Naval Staff of India as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Admiral Karambir Singh",
  "op2": "Admiral R Hari Kumar",
  "op3": "Admiral Sunil Lanba",
  "op4": "Admiral Robin Dhowan",
  "ans": "Admiral R Hari Kumar"
},
{
  "ques": "Which Indian city is known as the Startup Capital?<br><br>",
  "quesType": "mcq",
  "op1": "Hyderabad",
  "op2": "Gurugram",
  "op3": "Bangalore",
  "op4": "Pune",
  "ans": "Bangalore"
},
{
  "ques": "Who is the current UN High Commissioner for Refugees?<br><br>",
  "quesType": "mcq",
  "op1": "Filippo Grandi",
  "op2": "Antonio Guterres",
  "op3": "Michelle Bachelet",
  "op4": "Kristalina Georgieva",
  "ans": "Filippo Grandi"
},
{
  "ques": "Which Indian state launched 'Mukhya Mantri Ghar Ghar Ration Yojana'?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Punjab",
  "op3": "Uttar Pradesh",
  "op4": "Bihar",
  "ans": "Delhi"
},
{
  "ques": "Which is India’s first carbon-neutral state?<br><br>",
  "quesType": "mcq",
  "op1": "Goa",
  "op2": "Kerala",
  "op3": "Sikkim",
  "op4": "Himachal Pradesh",
  "ans": "Sikkim"
},
{
  "ques": "Who won the 2024 Oscar for Best Director?<br><br>",
  "quesType": "mcq",
  "op1": "Steven Spielberg",
  "op2": "Christopher Nolan",
  "op3": "Martin Scorsese",
  "op4": "Jane Campion",
  "ans": "Christopher Nolan"
},
{
  "ques": "Which country is the largest producer of gold?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Russia",
  "op3": "China",
  "op4": "Australia",
  "ans": "China"
},
{
  "ques": "Which country ranked first in the Global Firepower Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "China",
  "op3": "USA",
  "op4": "India",
  "ans": "USA"
},
{
  "ques": "Who is the Chairperson of SEBI as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Ajay Tyagi",
  "op2": "Madhabi Puri Buch",
  "op3": "Nirmala Sitharaman",
  "op4": "Subhash Chandra Khuntia",
  "ans": "Madhabi Puri Buch"
},
{
  "ques": "Which country produces the most steel globally?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Russia",
  "op3": "China",
  "op4": "Japan",
  "ans": "China"
},
{
  "ques": "Which city will host the ICC Men’s T20 World Cup 2024 Final?<br><br>",
  "quesType": "mcq",
  "op1": "Ahmedabad",
  "op2": "Mumbai",
  "op3": "New York",
  "op4": "Dubai",
  "ans": "New York"
},
{
  "ques": "Who won the Miss World 2024 crown?<br><br>",
  "quesType": "mcq",
  "op1": "Karolina Bielawska",
  "op2": "Toni-Ann Singh",
  "op3": "Sini Shetty",
  "op4": "Krystyna Pyszková",
  "ans": "Krystyna Pyszková"
},
{
  "ques": "Which Indian city is the headquarters of Coal India Limited?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Mumbai",
  "op3": "Kolkata",
  "op4": "Ranchi",
  "ans": "Kolkata"
},
{
  "ques": "Which country leads the World Press Freedom Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Norway",
  "op2": "Finland",
  "op3": "Sweden",
  "op4": "Denmark",
  "ans": "Norway"
},
{
  "ques": "Which country recently joined NATO?<br><br>",
  "quesType": "mcq",
  "op1": "Ukraine",
  "op2": "Finland",
  "op3": "Sweden",
  "op4": "Georgia",
  "ans": "Sweden"
},
{
  "ques": "Which Indian state topped the Sustainable Development Goals Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Kerala",
  "op2": "Himachal Pradesh",
  "op3": "Tamil Nadu",
  "op4": "Punjab",
  "ans": "Kerala"
},
{
  "ques": "Who is the current head of the World Bank?<br><br>",
  "quesType": "mcq",
  "op1": "David Malpass",
  "op2": "Ajay Banga",
  "op3": "Kristalina Georgieva",
  "op4": "Ngozi Okonjo-Iweala",
  "ans": "Ajay Banga"
},
{
  "ques": "Which country topped the Human Development Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Switzerland",
  "op2": "Norway",
  "op3": "Finland",
  "op4": "Ireland",
  "ans": "Switzerland"
},
{
  "ques": "Who is the current Speaker of Lok Sabha?<br><br>",
  "quesType": "mcq",
  "op1": "Om Birla",
  "op2": "Venkaiah Naidu",
  "op3": "Jagdeep Dhankhar",
  "op4": "Piyush Goyal",
  "ans": "Om Birla"
},
{
  "ques": "Which country became malaria-free as certified by WHO in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Sri Lanka",
  "op2": "China",
  "op3": "El Salvador",
  "op4": "Azerbaijan",
  "ans": "Azerbaijan"
}
,
{
  "ques": "Who is the current CEO of Twitter (X) as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Jack Dorsey",
  "op2": "Elon Musk",
  "op3": "Linda Yaccarino",
  "op4": "Sundar Pichai",
  "ans": "Linda Yaccarino"
},
{
  "ques": "Which Indian state topped the NITI Aayog Health Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Kerala",
  "op2": "Tamil Nadu",
  "op3": "Maharashtra",
  "op4": "Karnataka",
  "ans": "Kerala"
},
{
  "ques": "Who is the current President of Iran?<br><br>",
  "quesType": "mcq",
  "op1": "Hassan Rouhani",
  "op2": "Ebrahim Raisi",
  "op3": "Ali Khamenei",
  "op4": "Mohammad Khatami",
  "ans": "Ebrahim Raisi"
},
{
  "ques": "Which country will host the FIFA Women's World Cup 2027?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Australia",
  "op3": "Brazil",
  "op4": "Germany",
  "ans": "Brazil"
},
{
  "ques": "Who is the new MD & CEO of Infosys?<br><br>",
  "quesType": "mcq",
  "op1": "Salil Parekh",
  "op2": "Nandan Nilekani",
  "op3": "Vishal Sikka",
  "op4": "S. Gopalakrishnan",
  "ans": "Salil Parekh"
},
{
  "ques": "Which country launched the world’s first fully digital currency?<br><br>",
  "quesType": "mcq",
  "op1": "China",
  "op2": "USA",
  "op3": "Sweden",
  "op4": "Japan",
  "ans": "China"
},
{
  "ques": "Who is the Chief of the Indian Navy?<br><br>",
  "quesType": "mcq",
  "op1": "R. Hari Kumar",
  "op2": "Karambir Singh",
  "op3": "Sunil Lanba",
  "op4": "D.K. Joshi",
  "ans": "R. Hari Kumar"
},
{
  "ques": "Which country topped the Global Democracy Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Finland",
  "op2": "Norway",
  "op3": "Sweden",
  "op4": "Denmark",
  "ans": "Norway"
},
{
  "ques": "Who won the Nobel Prize in Literature 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Jon Fosse",
  "op2": "Annie Ernaux",
  "op3": "Kazuo Ishiguro",
  "op4": "Bob Dylan",
  "ans": "Jon Fosse"
},
{
  "ques": "Which Indian company launched India’s first hydrogen-powered train?<br><br>",
  "quesType": "mcq",
  "op1": "BHEL",
  "op2": "IRCTC",
  "op3": "Indian Railways",
  "op4": "Tata Steel",
  "ans": "Indian Railways"
},
{
  "ques": "Who won the ICC U19 Cricket World Cup 2024?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Australia",
  "op3": "England",
  "op4": "Pakistan",
  "ans": "Australia"
},
{
  "ques": "Which city hosted the World Economic Forum 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Paris",
  "op2": "Davos",
  "op3": "Geneva",
  "op4": "New York",
  "ans": "Davos"
},
{
  "ques": "Who is the current Governor of the Reserve Bank of Australia?<br><br>",
  "quesType": "mcq",
  "op1": "Philip Lowe",
  "op2": "Michele Bullock",
  "op3": "Mark Carney",
  "op4": "Adrian Orr",
  "ans": "Michele Bullock"
},
{
  "ques": "Which Indian state declared the 'Mukhyamantri Seekho Kamao Yojana'?<br><br>",
  "quesType": "mcq",
  "op1": "Uttar Pradesh",
  "op2": "Madhya Pradesh",
  "op3": "Odisha",
  "op4": "Gujarat",
  "ans": "Madhya Pradesh"
},
{
  "ques": "Who is the CEO of Meta?<br><br>",
  "quesType": "mcq",
  "op1": "Elon Musk",
  "op2": "Tim Cook",
  "op3": "Mark Zuckerberg",
  "op4": "Sundar Pichai",
  "ans": "Mark Zuckerberg"
},
{
  "ques": "Who won the Nobel Prize for Economics in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Ben Bernanke",
  "op2": "David Card",
  "op3": "Claudia Goldin",
  "op4": "Paul Krugman",
  "ans": "Claudia Goldin"
},
{
  "ques": "Which Indian company crossed the $200 billion market cap in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Reliance Industries",
  "op2": "TCS",
  "op3": "HDFC Bank",
  "op4": "Infosys",
  "ans": "Reliance Industries"
},
{
  "ques": "Who is the first Indian woman to win a medal at World Wrestling Championships?<br><br>",
  "quesType": "mcq",
  "op1": "Sakshi Malik",
  "op2": "Vinesh Phogat",
  "op3": "Geeta Phogat",
  "op4": "Anshu Malik",
  "ans": "Anshu Malik"
},
{
  "ques": "Which country hosts the headquarters of BRICS Bank?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "China",
  "op3": "South Africa",
  "op4": "Brazil",
  "ans": "China"
},
{
  "ques": "Who is the Chairman of Tata Sons?<br><br>",
  "quesType": "mcq",
  "op1": "Ratan Tata",
  "op2": "N. Chandrasekaran",
  "op3": "Cyrus Mistry",
  "op4": "Mistry Pallonji",
  "ans": "N. Chandrasekaran"
},
{
  "ques": "Which city is India’s first UNESCO World Heritage City?<br><br>",
  "quesType": "mcq",
  "op1": "Jaipur",
  "op2": "Delhi",
  "op3": "Ahmedabad",
  "op4": "Varanasi",
  "ans": "Ahmedabad"
},
{
  "ques": "Which Indian state launched the ‘Mukhya Mantri Udyam Kranti Yojana’?<br><br>",
  "quesType": "mcq",
  "op1": "Gujarat",
  "op2": "Madhya Pradesh",
  "op3": "Punjab",
  "op4": "Rajasthan",
  "ans": "Madhya Pradesh"
},
{
  "ques": "Which country leads the Global Happiness Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Finland",
  "op2": "Denmark",
  "op3": "Iceland",
  "op4": "Norway",
  "ans": "Finland"
},
{
  "ques": "Who is the first female President of Honduras?<br><br>",
  "quesType": "mcq",
  "op1": "Xiomara Castro",
  "op2": "Isabel Perón",
  "op3": "Dilma Rousseff",
  "op4": "Cristina Fernández",
  "ans": "Xiomara Castro"
},
{
  "ques": "Who is the new Chairman of SBI?<br><br>",
  "quesType": "mcq",
  "op1": "Dinesh Kumar Khara",
  "op2": "Rajnish Kumar",
  "op3": "Arundhati Bhattacharya",
  "op4": "Pratip Chaudhuri",
  "ans": "Dinesh Kumar Khara"
},
{
  "ques": "Who is the Managing Director of IMF?<br><br>",
  "quesType": "mcq",
  "op1": "Christine Lagarde",
  "op2": "Kristalina Georgieva",
  "op3": "Janet Yellen",
  "op4": "Ngozi Okonjo-Iweala",
  "ans": "Kristalina Georgieva"
},
{
  "ques": "Which city hosted the G7 Summit 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Berlin",
  "op2": "London",
  "op3": "Hiroshima",
  "op4": "Paris",
  "ans": "Hiroshima"
},
{
  "ques": "Which Indian startup became the first to launch a private rocket?<br><br>",
  "quesType": "mcq",
  "op1": "Skyroot Aerospace",
  "op2": "Agnikul Cosmos",
  "op3": "Pixxel",
  "op4": "Dhruva Space",
  "ans": "Skyroot Aerospace"
},
{
  "ques": "Which country hosts the headquarters of WHO?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "France",
  "op3": "Switzerland",
  "op4": "Germany",
  "ans": "Switzerland"
}
,
{
  "ques": "Which country will host the BRICS Summit 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "India",
  "op3": "China",
  "op4": "South Africa",
  "ans": "Russia"
},
{
  "ques": "Which Indian city will host the 2036 Olympic Games (proposed)?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Mumbai",
  "op3": "Ahmedabad",
  "op4": "Bangalore",
  "ans": "Ahmedabad"
},
{
  "ques": "Who won the Nobel Prize for Physics 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Alain Aspect",
  "op2": "Anne L'Huillier",
  "op3": "Roger Penrose",
  "op4": "Reinhard Genzel",
  "ans": "Anne L'Huillier"
},
{
  "ques": "Which country has the world's highest GDP growth forecast for 2024?<br><br>",
  "quesType": "mcq",
  "op1": "China",
  "op2": "India",
  "op3": "Vietnam",
  "op4": "Bangladesh",
  "ans": "India"
},
{
  "ques": "Who is the current Chairperson of SEBI (2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Ajay Tyagi",
  "op2": "Madhabi Puri Buch",
  "op3": "U.K. Sinha",
  "op4": "C.B. Bhave",
  "ans": "Madhabi Puri Buch"
},
{
  "ques": "Which country hosts the headquarters of INTERPOL?<br><br>",
  "quesType": "mcq",
  "op1": "France",
  "op2": "USA",
  "op3": "Switzerland",
  "op4": "Germany",
  "ans": "France"
},
{
  "ques": "Who is the first woman astronaut from Saudi Arabia?<br><br>",
  "quesType": "mcq",
  "op1": "Mishaal Ashemimry",
  "op2": "Rayyanah Barnawi",
  "op3": "Reema Juffali",
  "op4": "Fatimah Baeshen",
  "ans": "Rayyanah Barnawi"
},
{
  "ques": "Which country built the world’s largest radio telescope?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "China",
  "op3": "Russia",
  "op4": "Australia",
  "ans": "China"
},
{
  "ques": "Which Indian city hosted the SCO Summit 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Varanasi",
  "op2": "Goa",
  "op3": "Jaipur",
  "op4": "Ahmedabad",
  "ans": "Goa"
},
{
  "ques": "Who won the Rajiv Gandhi Khel Ratna Award 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Neeraj Chopra",
  "op2": "Lovlina Borgohain",
  "op3": "PV Sindhu",
  "op4": "Ravi Kumar Dahiya",
  "ans": "Neeraj Chopra"
},
{
  "ques": "Which Indian city ranked as the cleanest in Swachh Survekshan 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Surat",
  "op2": "Indore",
  "op3": "Bhopal",
  "op4": "Ahmedabad",
  "ans": "Indore"
},
{
  "ques": "Which Indian startup became a unicorn in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Zepto",
  "op2": "Groww",
  "op3": "CRED",
  "op4": "Razorpay",
  "ans": "Zepto"
},
{
  "ques": "Who is the President of the World Bank (2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Ajay Banga",
  "op2": "David Malpass",
  "op3": "Jim Yong Kim",
  "op4": "Kristalina Georgieva",
  "ans": "Ajay Banga"
},
{
  "ques": "Which state launched the 'Mission Shakti' program?<br><br>",
  "quesType": "mcq",
  "op1": "Madhya Pradesh",
  "op2": "Odisha",
  "op3": "Uttar Pradesh",
  "op4": "Bihar",
  "ans": "Uttar Pradesh"
},
{
  "ques": "Who is the new President of Nigeria (2023)?<br><br>",
  "quesType": "mcq",
  "op1": "Muhammadu Buhari",
  "op2": "Goodluck Jonathan",
  "op3": "Bola Ahmed Tinubu",
  "op4": "Atiku Abubakar",
  "ans": "Bola Ahmed Tinubu"
},
{
  "ques": "Who won the Miss Earth 2023 title?<br><br>",
  "quesType": "mcq",
  "op1": "Destiny Wagner",
  "op2": "Nadeen Ayoub",
  "op3": "Drita Ziri",
  "op4": "Lindsey Coffey",
  "ans": "Drita Ziri"
},
{
  "ques": "Which country recently launched the Lunar Gateway project?<br><br>",
  "quesType": "mcq",
  "op1": "China",
  "op2": "USA",
  "op3": "Russia",
  "op4": "Japan",
  "ans": "USA"
},
{
  "ques": "Who won the Grammy for Album of the Year 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Harry Styles",
  "op2": "Taylor Swift",
  "op3": "Beyoncé",
  "op4": "Adele",
  "ans": "Taylor Swift"
},
{
  "ques": "Which city was named UNESCO World Book Capital 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Accra",
  "op2": "Strasbourg",
  "op3": "Guadalajara",
  "op4": "Bangkok",
  "ans": "Strasbourg"
},
{
  "ques": "Which state topped the India Innovation Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Maharashtra",
  "op2": "Karnataka",
  "op3": "Tamil Nadu",
  "op4": "Gujarat",
  "ans": "Karnataka"
},
{
  "ques": "Who won the Pulitzer Prize for Fiction 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Hernan Diaz",
  "op2": "Colson Whitehead",
  "op3": "Jhumpa Lahiri",
  "op4": "Richard Powers",
  "ans": "Hernan Diaz"
},
{
  "ques": "Which Indian state is the largest producer of coal?<br><br>",
  "quesType": "mcq",
  "op1": "Odisha",
  "op2": "Jharkhand",
  "op3": "Chhattisgarh",
  "op4": "West Bengal",
  "ans": "Jharkhand"
},
{
  "ques": "Who is the new President of Iran (2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Hassan Rouhani",
  "op2": "Ebrahim Raisi",
  "op3": "Mohammad Khatami",
  "op4": "Ali Larijani",
  "ans": "Ebrahim Raisi"
},
{
  "ques": "Which country launched the Artemis I mission?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "USA",
  "op3": "China",
  "op4": "Japan",
  "ans": "USA"
},
{
  "ques": "Which Indian state launched 'Mukhya Mantri Seekho Kamao Yojana'?<br><br>",
  "quesType": "mcq",
  "op1": "Madhya Pradesh",
  "op2": "Rajasthan",
  "op3": "Bihar",
  "op4": "Haryana",
  "ans": "Madhya Pradesh"
},
{
  "ques": "Which city hosted the Global Bio-India 2023 Summit?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Hyderabad",
  "op3": "Pune",
  "op4": "Bangalore",
  "ans": "New Delhi"
},
{
  "ques": "Who is the current Chief of Army Staff (2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Bipin Rawat",
  "op2": "M.M. Naravane",
  "op3": "Manoj Pande",
  "op4": "Dalbir Singh Suhag",
  "ans": "Manoj Pande"
},
{
  "ques": "Which Indian won the ICC Emerging Player of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Ishan Kishan",
  "op2": "Ruturaj Gaikwad",
  "op3": "Tilak Varma",
  "op4": "Yashasvi Jaiswal",
  "ans": "Yashasvi Jaiswal"
},
{
  "ques": "Which city topped the Mercer Quality of Living Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Vienna",
  "op2": "Zurich",
  "op3": "Vancouver",
  "op4": "Auckland",
  "ans": "Vienna"
},
{
  "ques": "Which country became the first to grant citizenship to a robot?<br><br>",
  "quesType": "mcq",
  "op1": "Japan",
  "op2": "China",
  "op3": "USA",
  "op4": "Saudi Arabia",
  "ans": "Saudi Arabia"
}

]

let codingaffair3Arr=[
  {
  "ques": "Which Indian scientist was awarded the Templeton Prize 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Venki Ramakrishnan",
  "op2": "Abhay Ashtekar",
  "op3": "Sudhir Kakar",
  "op4": "Abhay Bang",
  "ans": "Abhay Ashtekar"
},
{
  "ques": "Which country topped the Climate Change Performance Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Sweden",
  "op2": "Denmark",
  "op3": "India",
  "op4": "Norway",
  "ans": "Denmark"
},
{
  "ques": "Who was elected as the new President of Nigeria in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Goodluck Jonathan",
  "op2": "Muhammadu Buhari",
  "op3": "Bola Tinubu",
  "op4": "Atiku Abubakar",
  "ans": "Bola Tinubu"
},
{
  "ques": "Which Indian state declared itself as India’s first 'Har Ghar Jal' certified state?<br><br>",
  "quesType": "mcq",
  "op1": "Goa",
  "op2": "Telangana",
  "op3": "Kerala",
  "op4": "Punjab",
  "ans": "Goa"
},
{
  "ques": "Which country recently launched the Xuntian Space Telescope?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "China",
  "op3": "Japan",
  "op4": "South Korea",
  "ans": "China"
},
{
  "ques": "Who is the Director General of the International Labour Organization (ILO) as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Guy Ryder",
  "op2": "Gilbert Houngbo",
  "op3": "Kristalina Georgieva",
  "op4": "Tedros Adhanom",
  "ans": "Gilbert Houngbo"
},
{
  "ques": "Which river was declared as a Living Entity by a High Court in India recently?<br><br>",
  "quesType": "mcq",
  "op1": "Ganga",
  "op2": "Yamuna",
  "op3": "Narmada",
  "op4": "Saryu",
  "ans": "Saryu"
},
{
  "ques": "Which country recently opened the world's largest offshore wind farm?<br><br>",
  "quesType": "mcq",
  "op1": "Germany",
  "op2": "UK",
  "op3": "Denmark",
  "op4": "Netherlands",
  "ans": "UK"
},
{
  "ques": "Who won the Abel Prize 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Luis Caffarelli",
  "op2": "Andrew Wiles",
  "op3": "Terence Tao",
  "op4": "Ingrid Daubechies",
  "ans": "Luis Caffarelli"
},
{
  "ques": "Which country released the first central bank digital currency (CBDC) for retail use?<br><br>",
  "quesType": "mcq",
  "op1": "China",
  "op2": "USA",
  "op3": "Japan",
  "op4": "Sweden",
  "ans": "China"
},
{
  "ques": "Which Indian city will host the Asian Games 2030?<br><br>",
  "quesType": "mcq",
  "op1": "Ahmedabad",
  "op2": "Delhi",
  "op3": "Doha",
  "op4": "Riyadh",
  "ans": "Doha"
},
{
  "ques": "Who is the Chairperson of the Competition Commission of India (CCI) as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Ashok Kumar Gupta",
  "op2": "Sangeeta Verma",
  "op3": "C K Mishra",
  "op4": "Vikas Sheel",
  "ans": "Sangeeta Verma"
},
{
  "ques": "Which country launched the 'Lunar Polar Exploration Mission' with India?<br><br>",
  "quesType": "mcq",
  "op1": "Japan",
  "op2": "USA",
  "op3": "Russia",
  "op4": "Israel",
  "ans": "Japan"
},
{
  "ques": "Which Indian wildlife sanctuary was declared a UNESCO World Heritage Site in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Kaziranga",
  "op2": "Sundarbans",
  "op3": "Satpura",
  "op4": "Wild Ass Sanctuary, Little Rann of Kutch",
  "ans": "Wild Ass Sanctuary, Little Rann of Kutch"
},
{
  "ques": "Who won the Pritzker Architecture Prize 2024?<br><br>",
  "quesType": "mcq",
  "op1": "David Adjaye",
  "op2": "Diébédo Francis Kéré",
  "op3": "Riken Yamamoto",
  "op4": "Anne Lacaton",
  "ans": "Riken Yamamoto"
},
{
  "ques": "Which country launched the world's first drone carrier ship?<br><br>",
  "quesType": "mcq",
  "op1": "China",
  "op2": "USA",
  "op3": "UK",
  "op4": "Israel",
  "ans": "China"
},
{
  "ques": "Which country hosted the International Solar Alliance Summit 2024?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "France",
  "op3": "UAE",
  "op4": "Australia",
  "ans": "India"
},
{
  "ques": "Who won the Turing Award 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Geoffrey Hinton",
  "op2": "Yann LeCun",
  "op3": "John C. Mather",
  "op4": "Shafi Goldwasser",
  "ans": "Yann LeCun"
},
{
  "ques": "Which country is the top lithium producer as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "China",
  "op2": "Chile",
  "op3": "Australia",
  "op4": "Argentina",
  "ans": "Australia"
},
{
  "ques": "Who is the first female President of Slovakia elected in 2019 and still in office?<br><br>",
  "quesType": "mcq",
  "op1": "Kolinda Grabar-Kitarović",
  "op2": "Zuzana Čaputová",
  "op3": "Sanna Marin",
  "op4": "Kaja Kallas",
  "ans": "Zuzana Čaputová"
},
{
  "ques": "Which country became the first to legalize lab-grown meat for commercial sale?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Singapore",
  "op3": "Netherlands",
  "op4": "Israel",
  "ans": "Singapore"
},
{
  "ques": "Which country leads the Global Innovation Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Sweden",
  "op3": "Switzerland",
  "op4": "Singapore",
  "ans": "Switzerland"
},
{
  "ques": "Which country discovered the world's largest lithium reserves in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Argentina",
  "op2": "India",
  "op3": "Chile",
  "op4": "USA",
  "ans": "India"
},
{
  "ques": "Which country signed the Artemis Accords in 2023 to join NASA’s lunar mission?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "China",
  "op3": "Russia",
  "op4": "France",
  "ans": "India"
},
{
  "ques": "Who is the current head of Intergovernmental Panel on Climate Change (IPCC)?<br><br>",
  "quesType": "mcq",
  "op1": "Hoesung Lee",
  "op2": "Jim Skea",
  "op3": "Tedros Adhanom",
  "op4": "Kristalina Georgieva",
  "ans": "Jim Skea"
},
{
  "ques": "Which city will host the BRICS Summit 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Beijing",
  "op2": "Moscow",
  "op3": "Durban",
  "op4": "Brasilia",
  "ans": "Durban"
},
{
  "ques": "Which is the world's first country to launch a digital nomad visa?<br><br>",
  "quesType": "mcq",
  "op1": "Estonia",
  "op2": "Portugal",
  "op3": "Singapore",
  "op4": "UAE",
  "ans": "Estonia"
},
{
  "ques": "Who won the World Food Prize 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Rattan Lal",
  "op2": "Swapan Datta",
  "op3": "Simon Groot",
  "op4": "Heidi Kühn",
  "ans": "Heidi Kühn"
},
{
  "ques": "Which Indian state launched 'Mission Buniyaad'?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Haryana",
  "op3": "Punjab",
  "op4": "Uttar Pradesh",
  "ans": "Delhi"
}
,
{
  "ques": "Which Indian scientist won the 2023 VinFuture Grand Prize?<br><br>",
  "quesType": "mcq",
  "op1": "C.N.R. Rao",
  "op2": "A.G. Ramakrishnan",
  "op3": "Manindra Agrawal",
  "op4": "Nitin Tandon",
  "ans": "Nitin Tandon"
},
{
  "ques": "Which country launched the world’s first digital nomad visa?<br><br>",
  "quesType": "mcq",
  "op1": "Portugal",
  "op2": "Estonia",
  "op3": "Georgia",
  "op4": "Thailand",
  "ans": "Estonia"
},
{
  "ques": "Which Indian startup became the first unicorn of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Zetwerk",
  "op2": "InMobi",
  "op3": "Porter",
  "op4": "Perfios",
  "ans": "Perfios"
},
{
  "ques": "Who won the Abel Prize 2024 for Mathematics?<br><br>",
  "quesType": "mcq",
  "op1": "Luis Caffarelli",
  "op2": "Jean-Pierre Serre",
  "op3": "Andrew Wiles",
  "op4": "Terence Tao",
  "ans": "Luis Caffarelli"
},
{
  "ques": "Who was appointed India’s first woman permanent representative to the UN?<br><br>",
  "quesType": "mcq",
  "op1": "Syeda Hameed",
  "op2": "Ruchira Kamboj",
  "op3": "Preeti Saran",
  "op4": "Nirupama Rao",
  "ans": "Ruchira Kamboj"
},
{
  "ques": "Which country launched the first 6G test satellite?<br><br>",
  "quesType": "mcq",
  "op1": "Japan",
  "op2": "China",
  "op3": "USA",
  "op4": "South Korea",
  "ans": "China"
},
{
  "ques": "Who won the Pritzker Architecture Prize 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Diébédo Francis Kéré",
  "op2": "David Chipperfield",
  "op3": "Toyo Ito",
  "op4": "Shigeru Ban",
  "ans": "David Chipperfield"
},
{
  "ques": "Who is the new Chairperson of SEBI as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Ajay Tyagi",
  "op2": "Madhabi Puri Buch",
  "op3": "U.K. Sinha",
  "op4": "T.V. Mohandas Pai",
  "ans": "Madhabi Puri Buch"
},
{
  "ques": "Which country became the first to approve a crypto ETF?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Canada",
  "op3": "Switzerland",
  "op4": "Singapore",
  "ans": "Canada"
},
{
  "ques": "Which Indian author won the 2023 International Booker Prize?<br><br>",
  "quesType": "mcq",
  "op1": "Perumal Murugan",
  "op2": "Geetanjali Shree",
  "op3": "M.T. Vasudevan Nair",
  "op4": "Salman Rushdie",
  "ans": "Geetanjali Shree"
},
{
  "ques": "Who became the first woman to officiate in a men’s ICC event final?<br><br>",
  "quesType": "mcq",
  "op1": "Jacqueline Williams",
  "op2": "Kim Cotton",
  "op3": "Claire Polosak",
  "op4": "Kathy Cross",
  "ans": "Kim Cotton"
},
{
  "ques": "Which country launched the world’s first malaria vaccine?<br><br>",
  "quesType": "mcq",
  "op1": "Ghana",
  "op2": "India",
  "op3": "Kenya",
  "op4": "Malawi",
  "ans": "Ghana"
},
{
  "ques": "Who is the first woman director of the Vikram Sarabhai Space Centre?<br><br>",
  "quesType": "mcq",
  "op1": "Nigar Shaji",
  "op2": "Ritu Karidhal",
  "op3": "K.S. Vanitha",
  "op4": "S. Somanath",
  "ans": "Nigar Shaji"
},
{
  "ques": "Which Indian city hosted the World Design Assembly 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Chennai",
  "op2": "Hyderabad",
  "op3": "Goa",
  "op4": "Bengaluru",
  "ans": "Hyderabad"
},
{
  "ques": "Which country developed the first inhaled COVID-19 vaccine?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "China",
  "op3": "USA",
  "op4": "UK",
  "ans": "China"
},
{
  "ques": "Which Indian scientist won the Shanti Swarup Bhatnagar Prize in Mathematical Sciences 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Neena Gupta",
  "op2": "Sourav Chatterjee",
  "op3": "Mahan Mj",
  "op4": "Manindra Agrawal",
  "ans": "Neena Gupta"
},
{
  "ques": "Which country is building the world’s first AI city?<br><br>",
  "quesType": "mcq",
  "op1": "Saudi Arabia",
  "op2": "Singapore",
  "op3": "China",
  "op4": "Japan",
  "ans": "Saudi Arabia"
},
{
  "ques": "Who won the 2024 Templeton Prize?<br><br>",
  "quesType": "mcq",
  "op1": "Jane Goodall",
  "op2": "Francis Collins",
  "op3": "Tenzin Gyatso",
  "op4": "Eckhart Tolle",
  "ans": "Francis Collins"
},
{
  "ques": "Which country launched the Artemis 1 mission?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "USA",
  "op3": "China",
  "op4": "Japan",
  "ans": "USA"
},
{
  "ques": "Who is the current head of the WTO?<br><br>",
  "quesType": "mcq",
  "op1": "Kristalina Georgieva",
  "op2": "Ngozi Okonjo-Iweala",
  "op3": "Christine Lagarde",
  "op4": "Gita Gopinath",
  "ans": "Ngozi Okonjo-Iweala"
},
{
  "ques": "Which Indian film won the Golden Globe for Best Original Song 2023?<br><br>",
  "quesType": "mcq",
  "op1": "RRR",
  "op2": "Kantara",
  "op3": "Pushpa",
  "op4": "Pathaan",
  "ans": "RRR"
},
{
  "ques": "Who is the current President of the European Commission?<br><br>",
  "quesType": "mcq",
  "op1": "Angela Merkel",
  "op2": "Christine Lagarde",
  "op3": "Ursula von der Leyen",
  "op4": "Emmanuel Macron",
  "ans": "Ursula von der Leyen"
},
{
  "ques": "Which country developed the world’s first 3D printed rocket?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "China",
  "op3": "Russia",
  "op4": "France",
  "ans": "USA"
},
{
  "ques": "Who is the new CEO of Starbucks as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Kevin Johnson",
  "op2": "Howard Schultz",
  "op3": "Laxman Narasimhan",
  "op4": "Indra Nooyi",
  "ans": "Laxman Narasimhan"
},
{
  "ques": "Which country launched the James Webb Space Telescope?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "USA",
  "op3": "China",
  "op4": "France",
  "ans": "USA"
},
{
  "ques": "Which Indian woman won the International Women of Courage Award 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Vijaya Lakshmi Pandit",
  "op2": "Ruchira Kamboj",
  "op3": "Binalakshmi Nepram",
  "op4": "Jyoti Nisha",
  "ans": "Binalakshmi Nepram"
},
{
  "ques": "Who is the first female president of the World Bank?<br><br>",
  "quesType": "mcq",
  "op1": "Kristalina Georgieva",
  "op2": "Ngozi Okonjo-Iweala",
  "op3": "Ajay Banga",
  "op4": "No woman yet",
  "ans": "No woman yet"
},
{
  "ques": "Which country leads the Global Cybersecurity Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "UK",
  "op3": "Singapore",
  "op4": "India",
  "ans": "UK"
},
{
  "ques": "Who won the ICC Emerging Player of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Shubman Gill",
  "op2": "Harry Brook",
  "op3": "Cameron Green",
  "op4": "Tristan Stubbs",
  "ans": "Harry Brook"
},
{
  "ques": "Which city hosted the 2023 SCO Summit?<br><br>",
  "quesType": "mcq",
  "op1": "Astana",
  "op2": "Samarkand",
  "op3": "New Delhi",
  "op4": "Tashkent",
  "ans": "New Delhi"
}
,
{
  "ques": "Which country was removed from the UN Human Rights Council in 2022?<br><br>",
  "quesType": "mcq",
  "op1": "North Korea",
  "op2": "Russia",
  "op3": "Iran",
  "op4": "Myanmar",
  "ans": "Russia"
},
{
  "ques": "Which country became the newest NATO member in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Sweden",
  "op2": "Finland",
  "op3": "Ukraine",
  "op4": "Georgia",
  "ans": "Finland"
},
{
  "ques": "Which Indian city was declared India’s first UNESCO World Heritage City?<br><br>",
  "quesType": "mcq",
  "op1": "Jaipur",
  "op2": "Ahmedabad",
  "op3": "Varanasi",
  "op4": "Hampi",
  "ans": "Ahmedabad"
},
{
  "ques": "Who won the Abel Prize for Mathematics in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Luis Caffarelli",
  "op2": "Andrew Wiles",
  "op3": "Jean-Pierre Serre",
  "op4": "Terence Tao",
  "ans": "Luis Caffarelli"
},
{
  "ques": "Who authored the book ‘The Light We Carry’?<br><br>",
  "quesType": "mcq",
  "op1": "Barack Obama",
  "op2": "Michelle Obama",
  "op3": "Malala Yousafzai",
  "op4": "Oprah Winfrey",
  "ans": "Michelle Obama"
},
{
  "ques": "Which Asian country declared 2023 as the 'Year of Sustainability'?<br><br>",
  "quesType": "mcq",
  "op1": "Qatar",
  "op2": "Saudi Arabia",
  "op3": "UAE",
  "op4": "Oman",
  "ans": "UAE"
},
{
  "ques": "Who became the first female President of Slovenia?<br><br>",
  "quesType": "mcq",
  "op1": "Alenka Bratušek",
  "op2": "Nataša Pirc Musar",
  "op3": "Borut Pahor",
  "op4": "Marjan Šarec",
  "ans": "Nataša Pirc Musar"
},
{
  "ques": "Which country hosted the World Economic Forum Annual Meeting 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Switzerland",
  "op2": "France",
  "op3": "Germany",
  "op4": "UK",
  "ans": "Switzerland"
},
{
  "ques": "Which Indian state produces the highest amount of renewable energy?<br><br>",
  "quesType": "mcq",
  "op1": "Tamil Nadu",
  "op2": "Karnataka",
  "op3": "Gujarat",
  "op4": "Maharashtra",
  "ans": "Tamil Nadu"
},
{
  "ques": "Who is the youngest recipient of the Bharat Ratna?<br><br>",
  "quesType": "mcq",
  "op1": "Rajiv Gandhi",
  "op2": "Indira Gandhi",
  "op3": "Sachin Tendulkar",
  "op4": "Atal Bihari Vajpayee",
  "ans": "Rajiv Gandhi"
},
{
  "ques": "Which country legalized Bitcoin as legal tender first?<br><br>",
  "quesType": "mcq",
  "op1": "Venezuela",
  "op2": "El Salvador",
  "op3": "Argentina",
  "op4": "Nigeria",
  "ans": "El Salvador"
},
{
  "ques": "Who is the first female Finance Minister of UK?<br><br>",
  "quesType": "mcq",
  "op1": "Theresa May",
  "op2": "Liz Truss",
  "op3": "Rishi Sunak",
  "op4": "Nadhim Zahawi",
  "ans": "Liz Truss"
},
{
  "ques": "Which Indian state launched the ‘Surakshit Matritva Aashwasan’ (SUMAN) initiative?<br><br>",
  "quesType": "mcq",
  "op1": "Odisha",
  "op2": "Assam",
  "op3": "Madhya Pradesh",
  "op4": "All India",
  "ans": "All India"
},
{
  "ques": "Who became the world’s youngest chess grandmaster in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Abhimanyu Mishra",
  "op2": "R Praggnanandhaa",
  "op3": "Nodirbek Abdusattorov",
  "op4": "Gukesh D",
  "ans": "Abhimanyu Mishra"
},
{
  "ques": "Which country has the world’s largest proven lithium reserves?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "Chile",
  "op3": "Argentina",
  "op4": "China",
  "ans": "Chile"
},
{
  "ques": "Which country launched the Tianwen-1 Mars mission?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "India",
  "op3": "Japan",
  "op4": "China",
  "ans": "China"
},
{
  "ques": "Which Indian state is the top producer of millets?<br><br>",
  "quesType": "mcq",
  "op1": "Maharashtra",
  "op2": "Karnataka",
  "op3": "Rajasthan",
  "op4": "Odisha",
  "ans": "Rajasthan"
},
{
  "ques": "Who was the first non-European Pope?<br><br>",
  "quesType": "mcq",
  "op1": "Pope Benedict XVI",
  "op2": "Pope Pius XII",
  "op3": "Pope John Paul II",
  "op4": "Pope Francis",
  "ans": "Pope John Paul II"
},
{
  "ques": "Which island nation moved its capital to avoid rising sea levels?<br><br>",
  "quesType": "mcq",
  "op1": "Maldives",
  "op2": "Kiribati",
  "op3": "Tuvalu",
  "op4": "Fiji",
  "ans": "Kiribati"
},
{
  "ques": "Who is the current Director-General of WHO?<br><br>",
  "quesType": "mcq",
  "op1": "Tedros Adhanom Ghebreyesus",
  "op2": "Ban Ki-moon",
  "op3": "Kristalina Georgieva",
  "op4": "António Guterres",
  "ans": "Tedros Adhanom Ghebreyesus"
},
{
  "ques": "Which city is the headquarters of the International Criminal Court?<br><br>",
  "quesType": "mcq",
  "op1": "Brussels",
  "op2": "Vienna",
  "op3": "The Hague",
  "op4": "Geneva",
  "ans": "The Hague"
},
{
  "ques": "Which Indian state topped NITI Aayog’s SDG Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Kerala",
  "op2": "Tamil Nadu",
  "op3": "Himachal Pradesh",
  "op4": "Punjab",
  "ans": "Kerala"
},
{
  "ques": "Which is the largest hydroelectric power station in the world?<br><br>",
  "quesType": "mcq",
  "op1": "Itaipu Dam",
  "op2": "Grand Coulee Dam",
  "op3": "Three Gorges Dam",
  "op4": "Hoover Dam",
  "ans": "Three Gorges Dam"
},
{
  "ques": "Which country is the largest emitter of methane gas?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "USA",
  "op3": "India",
  "op4": "China",
  "ans": "China"
},
{
  "ques": "Which Nobel Laureate is also an education activist from Iraq?<br><br>",
  "quesType": "mcq",
  "op1": "Malala Yousafzai",
  "op2": "Tawakkol Karman",
  "op3": "Nadia Murad",
  "op4": "Leymah Gbowee",
  "ans": "Nadia Murad"
},
{
  "ques": "Who became the first woman referee in a men’s FIFA World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Stéphanie Frappart",
  "op2": "Bibiana Steinhaus",
  "op3": "Kateryna Monzul",
  "op4": "Salima Mukansanga",
  "ans": "Stéphanie Frappart"
},
{
  "ques": "Which country is the largest producer of cobalt?<br><br>",
  "quesType": "mcq",
  "op1": "Zambia",
  "op2": "Russia",
  "op3": "Canada",
  "op4": "Democratic Republic of the Congo",
  "ans": "Democratic Republic of the Congo"
},
{
  "ques": "Who is the first Indian to win the Pritzker Architecture Prize?<br><br>",
  "quesType": "mcq",
  "op1": "Charles Correa",
  "op2": "B.V. Doshi",
  "op3": "Raj Rewal",
  "op4": "Hafeez Contractor",
  "ans": "B.V. Doshi"
},
{
  "ques": "Which country won the maximum Oscars in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "UK",
  "op3": "Germany",
  "op4": "South Korea",
  "ans": "USA"
},
{
  "ques": "Which country will host the Expo 2030?<br><br>",
  "quesType": "mcq",
  "op1": "Italy",
  "op2": "South Korea",
  "op3": "Saudi Arabia",
  "op4": "Russia",
  "ans": "Saudi Arabia"
}
,
{
  "ques": "Who became the first woman to head the World Trade Organization?<br><br>",
  "quesType": "mcq",
  "op1": "Kristalina Georgieva",
  "op2": "Ngozi Okonjo-Iweala",
  "op3": "Christine Lagarde",
  "op4": "Jacinda Ardern",
  "ans": "Ngozi Okonjo-Iweala"
},
{
  "ques": "Which country unveiled the world's first 6G test satellite?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "China",
  "op3": "Japan",
  "op4": "South Korea",
  "ans": "China"
},
{
  "ques": "Who won the Fields Medal 2022 for advances in combinatorics?<br><br>",
  "quesType": "mcq",
  "op1": "Manjul Bhargava",
  "op2": "Maryna Viazovska",
  "op3": "James Maynard",
  "op4": "Hugo Duminil-Copin",
  "ans": "James Maynard"
},
{
  "ques": "Which Indian state declared the 'Mission Shakti' scheme for women empowerment?<br><br>",
  "quesType": "mcq",
  "op1": "Uttar Pradesh",
  "op2": "Madhya Pradesh",
  "op3": "Odisha",
  "op4": "Bihar",
  "ans": "Uttar Pradesh"
},
{
  "ques": "Who is the Secretary-General of OPEC?<br><br>",
  "quesType": "mcq",
  "op1": "Mohammad Barkindo",
  "op2": "Haitham Al Ghais",
  "op3": "Suhail Al Mazrouei",
  "op4": "Sultan Al Jaber",
  "ans": "Haitham Al Ghais"
},
{
  "ques": "Which country recently launched the ‘Shenzhou-16’ crewed mission?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "China",
  "op3": "Japan",
  "op4": "South Korea",
  "ans": "China"
},
{
  "ques": "Who won the World Athletics Female Athlete of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Shelly-Ann Fraser-Pryce",
  "op2": "Sydney McLaughlin",
  "op3": "Faith Kipyegon",
  "op4": "Elaine Thompson-Herah",
  "ans": "Faith Kipyegon"
},
{
  "ques": "Which city hosted the APEC Summit 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Bangkok",
  "op2": "San Francisco",
  "op3": "Kuala Lumpur",
  "op4": "Manila",
  "ans": "San Francisco"
},
{
  "ques": "Which country has the world's largest proven oil reserves?<br><br>",
  "quesType": "mcq",
  "op1": "Saudi Arabia",
  "op2": "Iran",
  "op3": "Venezuela",
  "op4": "Russia",
  "ans": "Venezuela"
},
{
  "ques": "Which Indian state launched 'Kisan Rin Portal' for farmers?<br><br>",
  "quesType": "mcq",
  "op1": "Uttar Pradesh",
  "op2": "Haryana",
  "op3": "Punjab",
  "op4": "Madhya Pradesh",
  "ans": "Madhya Pradesh"
},
{
  "ques": "Who won the Pulitzer Prize for Fiction 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Barbara Kingsolver",
  "op2": "George Saunders",
  "op3": "Colson Whitehead",
  "op4": "Hernan Diaz",
  "ans": "Hernan Diaz"
},
{
  "ques": "Which country topped the Global Gender Gap Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Norway",
  "op2": "Iceland",
  "op3": "Sweden",
  "op4": "Finland",
  "ans": "Iceland"
},
{
  "ques": "Who is the Director-General of the IAEA?<br><br>",
  "quesType": "mcq",
  "op1": "Rafael Grossi",
  "op2": "António Guterres",
  "op3": "Tedros Adhanom",
  "op4": "Kristalina Georgieva",
  "ans": "Rafael Grossi"
},
{
  "ques": "Which city hosted the World Hydrogen Summit 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Dubai",
  "op2": "Rotterdam",
  "op3": "Tokyo",
  "op4": "Berlin",
  "ans": "Rotterdam"
},
{
  "ques": "Which Indian state launched the 'Mukhyamantri Seekho Kamao Yojana'?<br><br>",
  "quesType": "mcq",
  "op1": "Haryana",
  "op2": "Madhya Pradesh",
  "op3": "Chhattisgarh",
  "op4": "Odisha",
  "ans": "Madhya Pradesh"
},
{
  "ques": "Who won the ICC Women's Cricketer of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Smriti Mandhana",
  "op2": "Harmanpreet Kaur",
  "op3": "Beth Mooney",
  "op4": "Nat Sciver-Brunt",
  "ans": "Nat Sciver-Brunt"
},
{
  "ques": "Who is the President of the European Central Bank?<br><br>",
  "quesType": "mcq",
  "op1": "Christine Lagarde",
  "op2": "Ursula von der Leyen",
  "op3": "Kristalina Georgieva",
  "op4": "Janet Yellen",
  "ans": "Christine Lagarde"
},
{
  "ques": "Which country recently hosted the SCO Summit 2024?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Kazakhstan",
  "op3": "Russia",
  "op4": "Uzbekistan",
  "ans": "Kazakhstan"
},
{
  "ques": "Which Indian city will host the G20 Summit 2026?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai",
  "op2": "Hyderabad",
  "op3": "Chennai",
  "op4": "Bangalore",
  "ans": "Hyderabad"
},
{
  "ques": "Who won the Laureus World Sportsman of the Year 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Novak Djokovic",
  "op2": "Lionel Messi",
  "op3": "Max Verstappen",
  "op4": "Kylian Mbappé",
  "ans": "Novak Djokovic"
},
{
  "ques": "Which country produces the most uranium globally?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "Canada",
  "op3": "Kazakhstan",
  "op4": "Russia",
  "ans": "Kazakhstan"
},
{
  "ques": "Who is the current President of Brazil?<br><br>",
  "quesType": "mcq",
  "op1": "Jair Bolsonaro",
  "op2": "Luiz Inácio Lula da Silva",
  "op3": "Dilma Rousseff",
  "op4": "Fernando Haddad",
  "ans": "Luiz Inácio Lula da Silva"
},
{
  "ques": "Who won the ICC Emerging Player of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Yashasvi Jaiswal",
  "op2": "Shubman Gill",
  "op3": "Harry Brook",
  "op4": "Cameron Green",
  "ans": "Yashasvi Jaiswal"
},
{
  "ques": "Which city topped the QS World University Rankings 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Harvard",
  "op2": "MIT",
  "op3": "Stanford",
  "op4": "Cambridge",
  "ans": "MIT"
},
{
  "ques": "Who is the Chief Economist of the IMF?<br><br>",
  "quesType": "mcq",
  "op1": "Pierre-Olivier Gourinchas",
  "op2": "Kristalina Georgieva",
  "op3": "Ngozi Okonjo-Iweala",
  "op4": "Ursula von der Leyen",
  "ans": "Pierre-Olivier Gourinchas"
},
{
  "ques": "Which country became the first to launch a commercial lunar lander in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Japan",
  "op2": "USA",
  "op3": "China",
  "op4": "Israel",
  "ans": "Japan"
},
{
  "ques": "Which country approved the world's first gene-editing therapy?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "China",
  "op3": "UK",
  "op4": "Germany",
  "ans": "UK"
},
{
  "ques": "Who won the Sahitya Akademi Award for Hindi 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Geet Chaturvedi",
  "op2": "Nand Bhardwaj",
  "op3": "Leeladhar Jagoori",
  "op4": "Anamika",
  "ans": "Nand Bhardwaj"
},
{
  "ques": "Which country approved the first malaria vaccine rollout?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Ghana",
  "op3": "Kenya",
  "op4": "Nigeria",
  "ans": "Ghana"
}
,
{
  "ques": "Which Indian was elected as the President of the International Chess Federation (FIDE) in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Vishwanathan Anand",
  "op2": "D.V. Sundar",
  "op3": "Nitin Narang",
  "op4": "Arkady Dvorkovich",
  "ans": "Arkady Dvorkovich"
},
{
  "ques": "Which company became the first Indian startup to list on NASDAQ in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Zomato",
  "op2": "Paytm",
  "op3": "OYO",
  "op4": "Mobikwik",
  "ans": "OYO"
},
{
  "ques": "Which African nation became a full member of BRICS in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Ethiopia",
  "op2": "Nigeria",
  "op3": "Kenya",
  "op4": "South Sudan",
  "ans": "Ethiopia"
},
{
  "ques": "Which city will host the 2025 World Expo?<br><br>",
  "quesType": "mcq",
  "op1": "Dubai",
  "op2": "Osaka",
  "op3": "Rome",
  "op4": "Busan",
  "ans": "Osaka"
},
{
  "ques": "Who is the first woman pilot to fly the Rafale fighter jet in India?<br><br>",
  "quesType": "mcq",
  "op1": "Avani Chaturvedi",
  "op2": "Shivangi Singh",
  "op3": "Bhawana Kanth",
  "op4": "Mohana Singh",
  "ans": "Shivangi Singh"
},
{
  "ques": "Who is the current Director-General of the International Atomic Energy Agency (IAEA)?<br><br>",
  "quesType": "mcq",
  "op1": "Yukiya Amano",
  "op2": "Rafael Grossi",
  "op3": "Hans Blix",
  "op4": "Mohamed ElBaradei",
  "ans": "Rafael Grossi"
},
{
  "ques": "Which country built the world’s largest radio telescope?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "China",
  "op3": "Russia",
  "op4": "Australia",
  "ans": "China"
},
{
  "ques": "Who won the 2023 International Booker Prize for the novel ‘Time Shelter’?<br><br>",
  "quesType": "mcq",
  "op1": "Geetanjali Shree",
  "op2": "Olga Tokarczuk",
  "op3": "Georgi Gospodinov",
  "op4": "Ismail Kadare",
  "ans": "Georgi Gospodinov"
},
{
  "ques": "Which country ranked highest in the Global Innovation Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Germany",
  "op2": "USA",
  "op3": "Switzerland",
  "op4": "Japan",
  "ans": "Switzerland"
},
{
  "ques": "Who won the Pulitzer Prize for Fiction in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Barbara Kingsolver",
  "op2": "Colson Whitehead",
  "op3": "Richard Powers",
  "op4": "Tayari Jones",
  "ans": "Barbara Kingsolver"
},
{
  "ques": "Who is the first woman to head the National Stock Exchange (NSE) of India?<br><br>",
  "quesType": "mcq",
  "op1": "Ashu Suyash",
  "op2": "Chitra Ramkrishna",
  "op3": "Anuradha Rao",
  "op4": "Madhabi Puri Buch",
  "ans": "Chitra Ramkrishna"
},
{
  "ques": "Which country approved the first lab-grown meat for sale?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Singapore",
  "op3": "Netherlands",
  "op4": "Australia",
  "ans": "Singapore"
},
{
  "ques": "Who is the new President of Nigeria as of 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Goodluck Jonathan",
  "op2": "Muhammadu Buhari",
  "op3": "Bola Tinubu",
  "op4": "Yemi Osinbajo",
  "ans": "Bola Tinubu"
},
{
  "ques": "Which Indian state declared the new 'Green Hydrogen Policy'?<br><br>",
  "quesType": "mcq",
  "op1": "Rajasthan",
  "op2": "Gujarat",
  "op3": "Karnataka",
  "op4": "Maharashtra",
  "ans": "Gujarat"
},
{
  "ques": "Who is the current Director-General of UNESCO?<br><br>",
  "quesType": "mcq",
  "op1": "Irina Bokova",
  "op2": "Audrey Azoulay",
  "op3": "Kristalina Georgieva",
  "op4": "Helen Clark",
  "ans": "Audrey Azoulay"
},
{
  "ques": "Which country topped the Global Energy Transition Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Norway",
  "op2": "Germany",
  "op3": "Sweden",
  "op4": "Denmark",
  "ans": "Sweden"
},
{
  "ques": "Who became the youngest Grandmaster in India in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "R Praggnanandhaa",
  "op2": "D Gukesh",
  "op3": "Leon Mendonca",
  "op4": "Raunak Sadhwani",
  "ans": "Leon Mendonca"
},
{
  "ques": "Who won the Man Booker Prize 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Shehan Karunatilaka",
  "op2": "Bernardine Evaristo",
  "op3": "Douglas Stuart",
  "op4": "Paul Lynch",
  "ans": "Paul Lynch"
},
{
  "ques": "Which city topped the Global Startup Ecosystem Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Beijing",
  "op2": "San Francisco",
  "op3": "London",
  "op4": "Bangalore",
  "ans": "San Francisco"
},
{
  "ques": "Which country hosted the first Global AI Safety Summit 2023?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "UK",
  "op3": "China",
  "op4": "Singapore",
  "ans": "UK"
},
{
  "ques": "Which country declared a 'Climate Emergency' for the first time?<br><br>",
  "quesType": "mcq",
  "op1": "Germany",
  "op2": "France",
  "op3": "New Zealand",
  "op4": "Australia",
  "ans": "New Zealand"
},
{
  "ques": "Which Indian state became the first to implement a Uniform Civil Code?<br><br>",
  "quesType": "mcq",
  "op1": "Uttar Pradesh",
  "op2": "Goa",
  "op3": "Uttarakhand",
  "op4": "Gujarat",
  "ans": "Uttarakhand"
},
{
  "ques": "Who won the ICC Spirit of Cricket Award 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Babar Azam",
  "op2": "Kane Williamson",
  "op3": "Rohit Sharma",
  "op4": "Ben Stokes",
  "ans": "Kane Williamson"
},
{
  "ques": "Which is the first country to ban the use of mercury in dental fillings?<br><br>",
  "quesType": "mcq",
  "op1": "Norway",
  "op2": "Denmark",
  "op3": "Sweden",
  "op4": "Finland",
  "ans": "Sweden"
},
{
  "ques": "Who is the current President of the Asian Development Bank (ADB)?<br><br>",
  "quesType": "mcq",
  "op1": "Takehiko Nakao",
  "op2": "Haruhiko Kuroda",
  "op3": "Masatsugu Asakawa",
  "op4": "Kim Jim Yong",
  "ans": "Masatsugu Asakawa"
},
{
  "ques": "Which country passed the world’s first law on Deepfake content?<br><br>",
  "quesType": "mcq",
  "op1": "China",
  "op2": "USA",
  "op3": "UK",
  "op4": "South Korea",
  "ans": "China"
},
{
  "ques": "Which Indian state launched the 'Mission Shakti Scooter Yojana'?<br><br>",
  "quesType": "mcq",
  "op1": "Odisha",
  "op2": "Tamil Nadu",
  "op3": "Uttar Pradesh",
  "op4": "Bihar",
  "ans": "Odisha"
},
{
  "ques": "Which company became India’s first green hydrogen-powered steel producer?<br><br>",
  "quesType": "mcq",
  "op1": "JSW Steel",
  "op2": "Tata Steel",
  "op3": "SAIL",
  "op4": "ArcelorMittal",
  "ans": "JSW Steel"
},
{
  "ques": "Who won the Golden Peacock Global Award for Sustainability 2023?<br><br>",
  "quesType": "mcq",
  "op1": "TCS",
  "op2": "Infosys",
  "op3": "Wipro",
  "op4": "HCL",
  "ans": "Infosys"
},
{
  "ques": "Who is the first Indian-origin woman to fly into space with Blue Origin?<br><br>",
  "quesType": "mcq",
  "op1": "Kalpana Chawla",
  "op2": "Sirisha Bandla",
  "op3": "Sunita Williams",
  "op4": "Anousheh Ansari",
  "ans": "Sirisha Bandla"
}
,
{
  "ques": "Which country became the first to approve lab-grown meat for sale?<br><br>",
  "quesType": "mcq",
  "op1": "Singapore",
  "op2": "USA",
  "op3": "Israel",
  "op4": "Netherlands",
  "ans": "Singapore"
},
{
  "ques": "Who is the current President of Ukraine?<br><br>",
  "quesType": "mcq",
  "op1": "Petro Poroshenko",
  "op2": "Viktor Yanukovych",
  "op3": "Volodymyr Zelenskyy",
  "op4": "Yulia Tymoshenko",
  "ans": "Volodymyr Zelenskyy"
},
{
  "ques": "Which country became the 31st NATO member in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Ukraine",
  "op2": "Sweden",
  "op3": "Moldova",
  "op4": "Georgia",
  "ans": "Sweden"
},
{
  "ques": "Who won the Pulitzer Prize for Public Service 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Washington Post",
  "op2": "New York Times",
  "op3": "Los Angeles Times",
  "op4": "Associated Press",
  "ans": "Associated Press"
},
{
  "ques": "Which company is developing the first flying car approved by FAA?<br><br>",
  "quesType": "mcq",
  "op1": "Tesla",
  "op2": "Alef Aeronautics",
  "op3": "Uber",
  "op4": "SpaceX",
  "ans": "Alef Aeronautics"
},
{
  "ques": "Who is the Director-General of IAEA (International Atomic Energy Agency)?<br><br>",
  "quesType": "mcq",
  "op1": "Yukiya Amano",
  "op2": "Rafael Grossi",
  "op3": "Hans Blix",
  "op4": "Mohamed ElBaradei",
  "ans": "Rafael Grossi"
},
{
  "ques": "Which African country launched its first satellite in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Nigeria",
  "op2": "Ghana",
  "op3": "Kenya",
  "op4": "Angola",
  "ans": "Kenya"
},
{
  "ques": "Who is the first female leader of the European Central Bank?<br><br>",
  "quesType": "mcq",
  "op1": "Angela Merkel",
  "op2": "Ursula von der Leyen",
  "op3": "Christine Lagarde",
  "op4": "Sanna Marin",
  "ans": "Christine Lagarde"
},
{
  "ques": "Which country recently declared crypto currency as legal tender besides El Salvador?<br><br>",
  "quesType": "mcq",
  "op1": "Panama",
  "op2": "Central African Republic",
  "op3": "Venezuela",
  "op4": "Malta",
  "ans": "Central African Republic"
},
{
  "ques": "Which country ranks first in the Global Gender Gap Report 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Norway",
  "op2": "Finland",
  "op3": "Iceland",
  "op4": "New Zealand",
  "ans": "Iceland"
},
{
  "ques": "Which Indian scientist won the Templeton Prize in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Venki Ramakrishnan",
  "op2": "Abhay Bang",
  "op3": "Sudha Murthy",
  "op4": "None",
  "ans": "None"
},
{
  "ques": "Which country unveiled the world’s first AI anchor for 24x7 news?<br><br>",
  "quesType": "mcq",
  "op1": "South Korea",
  "op2": "Japan",
  "op3": "China",
  "op4": "USA",
  "ans": "China"
},
{
  "ques": "Who is the Prime Minister of Israel as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Naftali Bennett",
  "op2": "Yair Lapid",
  "op3": "Benjamin Netanyahu",
  "op4": "Isaac Herzog",
  "ans": "Benjamin Netanyahu"
},
{
  "ques": "Which country is building the world’s largest offshore wind farm?<br><br>",
  "quesType": "mcq",
  "op1": "Norway",
  "op2": "UK",
  "op3": "China",
  "op4": "Denmark",
  "ans": "UK"
},
{
  "ques": "Which country launched the BRI (Belt and Road Initiative)?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Russia",
  "op3": "China",
  "op4": "Japan",
  "ans": "China"
},
{
  "ques": "Who is the youngest ever Prime Minister of Finland?<br><br>",
  "quesType": "mcq",
  "op1": "Sanna Marin",
  "op2": "Sauli Niinistö",
  "op3": "Alexander Stubb",
  "op4": "Anneli Jäätteenmäki",
  "ans": "Sanna Marin"
},
{
  "ques": "Which international airport won the Skytrax World’s Best Airport Award 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Singapore Changi",
  "op2": "Doha Hamad",
  "op3": "Tokyo Haneda",
  "op4": "Incheon",
  "ans": "Singapore Changi"
},
{
  "ques": "Who won the Booker Prize 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Shehan Karunatilaka",
  "op2": "Damon Galgut",
  "op3": "Bernardine Evaristo",
  "op4": "Geetanjali Shree",
  "ans": "Shehan Karunatilaka"
},
{
  "ques": "Which country hosts the headquarters of OPEC?<br><br>",
  "quesType": "mcq",
  "op1": "UAE",
  "op2": "Saudi Arabia",
  "op3": "Austria",
  "op4": "Kuwait",
  "ans": "Austria"
},
{
  "ques": "Which country has the largest share in global diamond production?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "Botswana",
  "op3": "South Africa",
  "op4": "Canada",
  "ans": "Russia"
},
{
  "ques": "Who is the first female PM of Italy?<br><br>",
  "quesType": "mcq",
  "op1": "Laura Boldrini",
  "op2": "Emma Bonino",
  "op3": "Giorgia Meloni",
  "op4": "Luigi Di Maio",
  "ans": "Giorgia Meloni"
},
{
  "ques": "Which Indian bank launched India's first Green Fixed Deposit?<br><br>",
  "quesType": "mcq",
  "op1": "SBI",
  "op2": "HDFC",
  "op3": "Axis Bank",
  "op4": "IndusInd Bank",
  "ans": "HDFC"
},
{
  "ques": "Which nation developed the 'Digital Silk Road' project?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Japan",
  "op3": "China",
  "op4": "India",
  "ans": "China"
},
{
  "ques": "Which nation has the largest reserves of rare earth minerals?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Russia",
  "op3": "China",
  "op4": "Australia",
  "ans": "China"
},
{
  "ques": "Who is the first female head of IMF?<br><br>",
  "quesType": "mcq",
  "op1": "Kristalina Georgieva",
  "op2": "Christine Lagarde",
  "op3": "Ursula von der Leyen",
  "op4": "Ngozi Okonjo-Iweala",
  "ans": "Christine Lagarde"
},
{
  "ques": "Who is the current WTO Director-General?<br><br>",
  "quesType": "mcq",
  "op1": "Roberto Azevêdo",
  "op2": "Pascal Lamy",
  "op3": "Ngozi Okonjo-Iweala",
  "op4": "Kristalina Georgieva",
  "ans": "Ngozi Okonjo-Iweala"
},
{
  "ques": "Which city topped the Global Smart City Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Singapore",
  "op2": "Zurich",
  "op3": "Oslo",
  "op4": "Helsinki",
  "ans": "Singapore"
},
{
  "ques": "Which company launched India’s first quantum computing cloud service?<br><br>",
  "quesType": "mcq",
  "op1": "Wipro",
  "op2": "TCS",
  "op3": "Infosys",
  "op4": "Tech Mahindra",
  "ans": "TCS"
},
{
  "ques": "Who won the Ballon d'Or Féminin 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Alexia Putellas",
  "op2": "Aitana Bonmatí",
  "op3": "Sam Kerr",
  "op4": "Megan Rapinoe",
  "ans": "Aitana Bonmatí"
},
{
  "ques": "Which country topped the E-Government Development Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Denmark",
  "op2": "Finland",
  "op3": "Sweden",
  "op4": "Estonia",
  "ans": "Denmark"
}
,
{
  "ques": "Who became the first female Prime Minister of Italy?<br><br>",
  "quesType": "mcq",
  "op1": "Angela Merkel",
  "op2": "Sanna Marin",
  "op3": "Giorgia Meloni",
  "op4": "Marine Le Pen",
  "ans": "Giorgia Meloni"
},
{
  "ques": "Which country hosted the World Economic Forum 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Germany",
  "op2": "Switzerland",
  "op3": "UAE",
  "op4": "USA",
  "ans": "Switzerland"
},
{
  "ques": "Which country launched the 'One Sun One World One Grid' initiative with India?<br><br>",
  "quesType": "mcq",
  "op1": "France",
  "op2": "UK",
  "op3": "Germany",
  "op4": "Japan",
  "ans": "UK"
},
{
  "ques": "Which city will host the International Olympiad on Astronomy and Astrophysics 2024?<br><br>",
  "quesType": "mcq",
  "op1": "New Delhi",
  "op2": "Dubai",
  "op3": "Paris",
  "op4": "Bangkok",
  "ans": "Bangkok"
},
{
  "ques": "Who won the International Booker Prize 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Geetanjali Shree",
  "op2": "Jokha Alharthi",
  "op3": "Georgi Gospodinov",
  "op4": "Han Kang",
  "ans": "Georgi Gospodinov"
},
{
  "ques": "Who is the Chairman of the Securities and Exchange Board of India (SEBI) as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Ajay Tyagi",
  "op2": "Madhabi Puri Buch",
  "op3": "Nirmala Sitharaman",
  "op4": "Shaktikanta Das",
  "ans": "Madhabi Puri Buch"
},
{
  "ques": "Which country announced the ‘Golden Visa’ for investors and professionals?<br><br>",
  "quesType": "mcq",
  "op1": "Singapore",
  "op2": "UAE",
  "op3": "USA",
  "op4": "UK",
  "ans": "UAE"
},
{
  "ques": "Who is the President of the African Union as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Moussa Faki Mahamat",
  "op2": "Cyril Ramaphosa",
  "op3": "William Ruto",
  "op4": "Abdel Fattah el-Sisi",
  "ans": "Moussa Faki Mahamat"
},
{
  "ques": "Which country hosts the headquarters of the World Meteorological Organization?<br><br>",
  "quesType": "mcq",
  "op1": "France",
  "op2": "Switzerland",
  "op3": "USA",
  "op4": "Germany",
  "ans": "Switzerland"
},
{
  "ques": "Which Indian city is declared the first UNESCO World Heritage City in India?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Jaipur",
  "op3": "Ahmedabad",
  "op4": "Varanasi",
  "ans": "Ahmedabad"
},
{
  "ques": "Who won the Jnanpith Award 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Damodar Mauzo",
  "op2": "Nilmani Phookan",
  "op3": "Gulzar",
  "op4": "Pratibha Ray",
  "ans": "Gulzar"
},
{
  "ques": "Who is the President of South Korea as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Moon Jae-in",
  "op2": "Yoon Suk-yeol",
  "op3": "Lee Nak-yon",
  "op4": "Kim Jong-un",
  "ans": "Yoon Suk-yeol"
},
{
  "ques": "Which country has the largest reserves of rare earth metals?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "USA",
  "op3": "China",
  "op4": "Russia",
  "ans": "China"
},
{
  "ques": "Who is the current head of the World Intellectual Property Organization?<br><br>",
  "quesType": "mcq",
  "op1": "Daren Tang",
  "op2": "Francis Gurry",
  "op3": "Ngozi Okonjo-Iweala",
  "op4": "Guy Ryder",
  "ans": "Daren Tang"
},
{
  "ques": "Which Indian scheme aims to reach carbon neutrality by 2070?<br><br>",
  "quesType": "mcq",
  "op1": "Mission LiFE",
  "op2": "Atmanirbhar Bharat",
  "op3": "PM-KUSUM",
  "op4": "Make in India",
  "ans": "Mission LiFE"
},
{
  "ques": "Who won the UNESCO Peace Prize 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Greta Thunberg",
  "op2": "Angela Merkel",
  "op3": "David Attenborough",
  "op4": "Narges Mohammadi",
  "ans": "Angela Merkel"
},
{
  "ques": "Which country is building the world's longest undersea power cable with the UK?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Norway",
  "op3": "Iceland",
  "op4": "Morocco",
  "ans": "Morocco"
},
{
  "ques": "Which Indian scientist was appointed as Principal Scientific Advisor in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Ajay Sood",
  "op2": "K. VijayRaghavan",
  "op3": "Soumya Swaminathan",
  "op4": "Raghunath Mashelkar",
  "ans": "Ajay Sood"
},
{
  "ques": "Which city hosted the Women20 Summit under India’s G20 Presidency?<br><br>",
  "quesType": "mcq",
  "op1": "Bhopal",
  "op2": "Jaipur",
  "op3": "Indore",
  "op4": "Lucknow",
  "ans": "Bhopal"
},
{
  "ques": "Who is the current CEO of Twitter (X) as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Parag Agrawal",
  "op2": "Linda Yaccarino",
  "op3": "Elon Musk",
  "op4": "Sheryl Sandberg",
  "ans": "Linda Yaccarino"
},
{
  "ques": "Which country launched the first national digital nomad village?<br><br>",
  "quesType": "mcq",
  "op1": "Portugal",
  "op2": "Estonia",
  "op3": "Spain",
  "op4": "Thailand",
  "ans": "Portugal"
},
{
  "ques": "Which Indian city topped the Swachh Survekshan 2024 rankings?<br><br>",
  "quesType": "mcq",
  "op1": "Surat",
  "op2": "Indore",
  "op3": "Mysuru",
  "op4": "Bhopal",
  "ans": "Indore"
},
{
  "ques": "Who won the Man Booker Prize 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Shehan Karunatilaka",
  "op2": "Bernardine Evaristo",
  "op3": "Paul Lynch",
  "op4": "Douglas Stuart",
  "ans": "Paul Lynch"
},
{
  "ques": "Which country leads the world in hydrogen fuel cell vehicles?<br><br>",
  "quesType": "mcq",
  "op1": "Japan",
  "op2": "USA",
  "op3": "Germany",
  "op4": "South Korea",
  "ans": "South Korea"
},
{
  "ques": "Which Indian state launched the 'Parivartan Yatra' scheme?<br><br>",
  "quesType": "mcq",
  "op1": "Uttar Pradesh",
  "op2": "Rajasthan",
  "op3": "Bihar",
  "op4": "Haryana",
  "ans": "Rajasthan"
},
{
  "ques": "Who won the ICC Men's Test Cricketer of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Joe Root",
  "op2": "Ben Stokes",
  "op3": "Pat Cummins",
  "op4": "Ravindra Jadeja",
  "ans": "Ben Stokes"
},
{
  "ques": "Which company launched the world’s first AI-powered satellite in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "SpaceX",
  "op2": "Google",
  "op3": "IBM",
  "op4": "OpenAI",
  "ans": "IBM"
},
{
  "ques": "Who is the current Chairman of ISRO?<br><br>",
  "quesType": "mcq",
  "op1": "K. Sivan",
  "op2": "S. Somanath",
  "op3": "G. Madhavan Nair",
  "op4": "A. S. Kiran Kumar",
  "ans": "S. Somanath"
},
{
  "ques": "Who won the Abel Prize 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Luis Caffarelli",
  "op2": "Terence Tao",
  "op3": "Andrew Wiles",
  "op4": "Maryna Viazovska",
  "ans": "Luis Caffarelli"
}
,
{
  "ques": "Which city will host the Summer Olympics in 2028?<br><br>",
  "quesType": "mcq",
  "op1": "Paris",
  "op2": "Los Angeles",
  "op3": "Brisbane",
  "op4": "Tokyo",
  "ans": "Los Angeles"
},
{
  "ques": "Who is the current Director-General of the World Trade Organization (WTO)?<br><br>",
  "quesType": "mcq",
  "op1": "Kristalina Georgieva",
  "op2": "Ngozi Okonjo-Iweala",
  "op3": "Tedros Adhanom",
  "op4": "Pascal Lamy",
  "ans": "Ngozi Okonjo-Iweala"
},
{
  "ques": "Which country became the first to make Bitcoin a legal tender?<br><br>",
  "quesType": "mcq",
  "op1": "Malta",
  "op2": "El Salvador",
  "op3": "Panama",
  "op4": "Switzerland",
  "ans": "El Salvador"
},
{
  "ques": "Who won the Laureus World Sportsman of the Year Award 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Novak Djokovic",
  "op2": "Lionel Messi",
  "op3": "Kylian Mbappé",
  "op4": "Lewis Hamilton",
  "ans": "Lionel Messi"
},
{
  "ques": "Which country built the world's longest suspension bridge?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Japan",
  "op3": "Turkey",
  "op4": "China",
  "ans": "Turkey"
},
{
  "ques": "Which country recently passed a 'Right to Repair' law?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "UK",
  "op3": "France",
  "op4": "Germany",
  "ans": "France"
},
{
  "ques": "Who is the current Secretary-General of NATO?<br><br>",
  "quesType": "mcq",
  "op1": "António Guterres",
  "op2": "Jens Stoltenberg",
  "op3": "Ursula von der Leyen",
  "op4": "Charles Michel",
  "ans": "Jens Stoltenberg"
},
{
  "ques": "Which city topped the Global Financial Centres Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "New York",
  "op2": "London",
  "op3": "Shanghai",
  "op4": "Singapore",
  "ans": "New York"
},
{
  "ques": "Which Indian won the Global Teacher Prize 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Ranjitsinh Disale",
  "op2": "Keisham Suryamani",
  "op3": "Jasbeer Kaur",
  "op4": "Veena Nair",
  "ans": "Veena Nair"
},
{
  "ques": "Which Indian city hosted the G20 Summit 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai",
  "op2": "Delhi",
  "op3": "Bangalore",
  "op4": "Hyderabad",
  "ans": "Delhi"
},
{
  "ques": "Who is the first Indian to win the Pritzker Architecture Prize?<br><br>",
  "quesType": "mcq",
  "op1": "B.V. Doshi",
  "op2": "Charles Correa",
  "op3": "Laurie Baker",
  "op4": "Hafeez Contractor",
  "ans": "B.V. Doshi"
},
{
  "ques": "Which state became the first in India to legalize same-sex civil unions?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Goa",
  "op3": "Kerala",
  "op4": "No state yet",
  "ans": "No state yet"
},
{
  "ques": "Who won the 2023 Nobel Prize in Literature?<br><br>",
  "quesType": "mcq",
  "op1": "Annie Ernaux",
  "op2": "Jon Fosse",
  "op3": "Kazuo Ishiguro",
  "op4": "Olga Tokarczuk",
  "ans": "Jon Fosse"
},
{
  "ques": "Which country became the first in the world to vaccinate against dengue using Qdenga?<br><br>",
  "quesType": "mcq",
  "op1": "Brazil",
  "op2": "India",
  "op3": "Philippines",
  "op4": "Thailand",
  "ans": "Brazil"
},
{
  "ques": "Which country launched the world’s first wooden satellite?<br><br>",
  "quesType": "mcq",
  "op1": "Finland",
  "op2": "Japan",
  "op3": "South Korea",
  "op4": "New Zealand",
  "ans": "Finland"
},
{
  "ques": "Who is the new Chairman of ISRO as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "K. Sivan",
  "op2": "S. Somanath",
  "op3": "Mylswamy Annadurai",
  "op4": "Shantanu Bhatawdekar",
  "ans": "S. Somanath"
},
{
  "ques": "Which country hosts the headquarters of the International Renewable Energy Agency (IRENA)?<br><br>",
  "quesType": "mcq",
  "op1": "Germany",
  "op2": "UAE",
  "op3": "Denmark",
  "op4": "Norway",
  "ans": "UAE"
},
{
  "ques": "Who won the Nobel Prize in Physics 2023 for attosecond pulses of light?<br><br>",
  "quesType": "mcq",
  "op1": "Pierre Agostini",
  "op2": "Alain Aspect",
  "op3": "Giorgio Parisi",
  "op4": "Syukuro Manabe",
  "ans": "Pierre Agostini"
},
{
  "ques": "Which country became the first to grant legal rights to glaciers?<br><br>",
  "quesType": "mcq",
  "op1": "New Zealand",
  "op2": "Ecuador",
  "op3": "Chile",
  "op4": "Peru",
  "ans": "Ecuador"
},
{
  "ques": "Which country launched the ‘One Sun, One World, One Grid’ initiative with India?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "UK",
  "op3": "Australia",
  "op4": "Germany",
  "ans": "UK"
},
{
  "ques": "Which country is developing the world’s first floating city?<br><br>",
  "quesType": "mcq",
  "op1": "Maldives",
  "op2": "South Korea",
  "op3": "Netherlands",
  "op4": "Japan",
  "ans": "South Korea"
},
{
  "ques": "Who won the ICC Women's Cricketer of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Smriti Mandhana",
  "op2": "Meg Lanning",
  "op3": "Nat Sciver-Brunt",
  "op4": "Ellyse Perry",
  "ans": "Nat Sciver-Brunt"
},
{
  "ques": "Which country topped the Global Gender Gap Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Finland",
  "op2": "Norway",
  "op3": "Iceland",
  "op4": "Sweden",
  "ans": "Iceland"
},
{
  "ques": "Who won the Fields Medal 2022 in Mathematics?<br><br>",
  "quesType": "mcq",
  "op1": "Hugo Duminil-Copin",
  "op2": "Manjul Bhargava",
  "op3": "Maryna Viazovska",
  "op4": "Both A and C",
  "ans": "Both A and C"
},
{
  "ques": "Which country declared 2023 as the Year of Sustainability?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "UAE",
  "op3": "Singapore",
  "op4": "Denmark",
  "ans": "UAE"
},
{
  "ques": "Which state launched the ‘Mission Basundhara 2.0’?<br><br>",
  "quesType": "mcq",
  "op1": "Odisha",
  "op2": "Assam",
  "op3": "Jharkhand",
  "op4": "Tripura",
  "ans": "Assam"
},
{
  "ques": "Who is the current President of the Maldives?<br><br>",
  "quesType": "mcq",
  "op1": "Ibrahim Mohamed Solih",
  "op2": "Mohamed Muizzu",
  "op3": "Abdulla Yameen",
  "op4": "Maumoon Abdul Gayoom",
  "ans": "Mohamed Muizzu"
},
{
  "ques": "Who won the Golden Globe for Best Actor 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Austin Butler",
  "op2": "Cillian Murphy",
  "op3": "Brendan Fraser",
  "op4": "Leonardo DiCaprio",
  "ans": "Cillian Murphy"
},
{
  "ques": "Which Indian airport ranked among the top 10 busiest airports globally in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi IGI Airport",
  "op2": "Mumbai Airport",
  "op3": "Bangalore Airport",
  "op4": "Hyderabad Airport",
  "ans": "Delhi IGI Airport"
},
{
  "ques": "Which country is building the first carbon-neutral city?<br><br>",
  "quesType": "mcq",
  "op1": "UAE",
  "op2": "Saudi Arabia",
  "op3": "Denmark",
  "op4": "Netherlands",
  "ans": "Saudi Arabia"
}
,
{
  "ques": "Which country built the first floating nuclear power plant?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Russia",
  "op3": "China",
  "op4": "France",
  "ans": "Russia"
},
{
  "ques": "Who won the 2023 Nobel Prize in Literature?<br><br>",
  "quesType": "mcq",
  "op1": "Annie Ernaux",
  "op2": "Jon Fosse",
  "op3": "Kazuo Ishiguro",
  "op4": "Olga Tokarczuk",
  "ans": "Jon Fosse"
},
{
  "ques": "Which country was the top recipient of remittances in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "China",
  "op2": "Philippines",
  "op3": "Mexico",
  "op4": "India",
  "ans": "India"
},
{
  "ques": "Who is the current Chancellor of Germany?<br><br>",
  "quesType": "mcq",
  "op1": "Angela Merkel",
  "op2": "Olaf Scholz",
  "op3": "Frank-Walter Steinmeier",
  "op4": "Annalena Baerbock",
  "ans": "Olaf Scholz"
},
{
  "ques": "Which country won the Thomas Cup 2022 (Badminton)?<br><br>",
  "quesType": "mcq",
  "op1": "Indonesia",
  "op2": "China",
  "op3": "India",
  "op4": "Japan",
  "ans": "India"
},
{
  "ques": "Which country developed the world’s first malaria vaccine?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Germany",
  "op3": "India",
  "op4": "UK",
  "ans": "UK"
},
{
  "ques": "Which Indian state launched the 'Mission Shakti' scheme?<br><br>",
  "quesType": "mcq",
  "op1": "Bihar",
  "op2": "Odisha",
  "op3": "Maharashtra",
  "op4": "Madhya Pradesh",
  "ans": "Odisha"
},
{
  "ques": "Who was awarded the Fields Medal in 2022?<br><br>",
  "quesType": "mcq",
  "op1": "Maryna Viazovska",
  "op2": "Manjul Bhargava",
  "op3": "Akshay Venkatesh",
  "op4": "Terence Tao",
  "ans": "Maryna Viazovska"
},
{
  "ques": "Which company launched Starlink satellite internet?<br><br>",
  "quesType": "mcq",
  "op1": "Blue Origin",
  "op2": "NASA",
  "op3": "SpaceX",
  "op4": "Virgin Galactic",
  "ans": "SpaceX"
},
{
  "ques": "Which country hosted the World Athletics Championships 2023?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Hungary",
  "op3": "Qatar",
  "op4": "UK",
  "ans": "Hungary"
},
{
  "ques": "Who won the ICC Women’s Cricketer of the Year 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Smriti Mandhana",
  "op2": "Alyssa Healy",
  "op3": "Nat Sciver-Brunt",
  "op4": "Harmanpreet Kaur",
  "ans": "Nat Sciver-Brunt"
},
{
  "ques": "Which city is known as the world’s first hydrogen-powered city?<br><br>",
  "quesType": "mcq",
  "op1": "Oslo",
  "op2": "Abu Dhabi",
  "op3": "Neom",
  "op4": "Copenhagen",
  "ans": "Neom"
},
{
  "ques": "Which country is building the world’s largest solar park?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "China",
  "op3": "UAE",
  "op4": "Saudi Arabia",
  "ans": "India"
},
{
  "ques": "Who became the first black woman on the US Supreme Court?<br><br>",
  "quesType": "mcq",
  "op1": "Kamala Harris",
  "op2": "Ketanji Brown Jackson",
  "op3": "Michelle Obama",
  "op4": "Oprah Winfrey",
  "ans": "Ketanji Brown Jackson"
},
{
  "ques": "Which country topped the Global Innovation Index 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Germany",
  "op2": "USA",
  "op3": "Switzerland",
  "op4": "Japan",
  "ans": "Switzerland"
},
{
  "ques": "Who is the CEO of OpenAI?<br><br>",
  "quesType": "mcq",
  "op1": "Sundar Pichai",
  "op2": "Satya Nadella",
  "op3": "Sam Altman",
  "op4": "Elon Musk",
  "ans": "Sam Altman"
},
{
  "ques": "Which country has the world’s largest proven oil reserves?<br><br>",
  "quesType": "mcq",
  "op1": "Saudi Arabia",
  "op2": "Iran",
  "op3": "USA",
  "op4": "Venezuela",
  "ans": "Venezuela"
},
{
  "ques": "Who won the Pritzker Prize 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Francis Kéré",
  "op2": "David Chipperfield",
  "op3": "B.V. Doshi",
  "op4": "Norman Foster",
  "ans": "David Chipperfield"
},
{
  "ques": "Which company announced the first foldable laptop?<br><br>",
  "quesType": "mcq",
  "op1": "Dell",
  "op2": "HP",
  "op3": "Asus",
  "op4": "Lenovo",
  "ans": "Lenovo"
},
{
  "ques": "Who is the current President of South Africa?<br><br>",
  "quesType": "mcq",
  "op1": "Jacob Zuma",
  "op2": "Cyril Ramaphosa",
  "op3": "Nelson Mandela",
  "op4": "Thabo Mbeki",
  "ans": "Cyril Ramaphosa"
},
{
  "ques": "Which city won the title of World Book Capital 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Tbilisi",
  "op2": "Accra",
  "op3": "Doha",
  "op4": "Sharjah",
  "ans": "Accra"
},
{
  "ques": "Which country has the highest military spending in the world?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "China",
  "op3": "India",
  "op4": "USA",
  "ans": "USA"
},
{
  "ques": "Who won the ICC Spirit of Cricket Award 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Babar Azam",
  "op2": "Ben Stokes",
  "op3": "Kane Williamson",
  "op4": "MS Dhoni",
  "ans": "Kane Williamson"
},
{
  "ques": "Which country hosts the headquarters of the Asian Infrastructure Investment Bank?<br><br>",
  "quesType": "mcq",
  "op1": "Singapore",
  "op2": "China",
  "op3": "India",
  "op4": "Japan",
  "ans": "China"
},
{
  "ques": "Who became the first woman astronaut to spend 300 days in space on a single mission?<br><br>",
  "quesType": "mcq",
  "op1": "Sunita Williams",
  "op2": "Christina Koch",
  "op3": "Jessica Meir",
  "op4": "Peggy Whitson",
  "ans": "Christina Koch"
},
{
  "ques": "Which country won the 2024 Asian Cup football tournament?<br><br>",
  "quesType": "mcq",
  "op1": "Japan",
  "op2": "Qatar",
  "op3": "South Korea",
  "op4": "Australia",
  "ans": "Qatar"
},
{
  "ques": "Which country leads in global avocado exports?<br><br>",
  "quesType": "mcq",
  "op1": "Chile",
  "op2": "Peru",
  "op3": "Mexico",
  "op4": "Kenya",
  "ans": "Mexico"
},
{
  "ques": "Which country hosted the Asia-Pacific Economic Cooperation (APEC) summit 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Vietnam",
  "op2": "USA",
  "op3": "Thailand",
  "op4": "Indonesia",
  "ans": "USA"
},
{
  "ques": "Who won the Nobel Prize for Economics in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Ben Bernanke",
  "op2": "Paul Krugman",
  "op3": "Claudia Goldin",
  "op4": "Esther Duflo",
  "ans": "Claudia Goldin"
},
{
  "ques": "Which country topped the Environmental Performance Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Sweden",
  "op2": "Denmark",
  "op3": "Switzerland",
  "op4": "Finland",
  "ans": "Denmark"
}
,
{
  "ques": "Who won the Pritzker Architecture Prize 2023?<br><br>",
  "quesType": "mcq",
  "op1": "David Chipperfield",
  "op2": "Balkrishna Doshi",
  "op3": "Rem Koolhaas",
  "op4": "Shigeru Ban",
  "ans": "David Chipperfield"
},
{
  "ques": "Who is the new Chief of Defence Staff (CDS) of India as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "General Bipin Rawat",
  "op2": "General Anil Chauhan",
  "op3": "General M.M. Naravane",
  "op4": "General Manoj Pande",
  "ans": "General Anil Chauhan"
},
{
  "ques": "Which country launched the 'Green Grids Initiative' with India?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "UK",
  "op3": "Germany",
  "op4": "France",
  "ans": "UK"
},
{
  "ques": "Which country hosted the World Sustainable Development Summit 2024?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "UAE",
  "op3": "Switzerland",
  "op4": "Denmark",
  "ans": "India"
},
{
  "ques": "Who won the International Emmy Award for Best Actor 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Nawazuddin Siddiqui",
  "op2": "Martin Freeman",
  "op3": "Dougray Scott",
  "op4": "Billy Barratt",
  "ans": "Dougray Scott"
},
{
  "ques": "Which country has the largest installed capacity of offshore wind power?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "China",
  "op3": "Germany",
  "op4": "UK",
  "ans": "China"
},
{
  "ques": "Who won the Turing Award 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Yoshua Bengio",
  "op2": "Geoffrey Hinton",
  "op3": "Demis Hassabis",
  "op4": "Bob Metcalfe",
  "ans": "Bob Metcalfe"
},
{
  "ques": "Which Indian city will host the UNESCO World Heritage Committee meeting 2025?<br><br>",
  "quesType": "mcq",
  "op1": "Varanasi",
  "op2": "Jaipur",
  "op3": "Hyderabad",
  "op4": "Mumbai",
  "ans": "Varanasi"
},
{
  "ques": "Which country launched the world’s first hydrogen-powered passenger train?<br><br>",
  "quesType": "mcq",
  "op1": "France",
  "op2": "Germany",
  "op3": "Japan",
  "op4": "UK",
  "ans": "Germany"
},
{
  "ques": "Who is the President of the International Olympic Committee (IOC)?<br><br>",
  "quesType": "mcq",
  "op1": "Thomas Bach",
  "op2": "Sebastian Coe",
  "op3": "Gianni Infantino",
  "op4": "Craig Reedie",
  "ans": "Thomas Bach"
},
{
  "ques": "Which country hosted the Nuclear Non-Proliferation Treaty Review Conference 2024?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Austria",
  "op3": "Russia",
  "op4": "Japan",
  "ans": "USA"
},
{
  "ques": "Which Indian airport won the ACI World's Best Airport Award 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Mumbai",
  "op3": "Bangalore",
  "op4": "Hyderabad",
  "ans": "Delhi"
},
{
  "ques": "Who won the Sahitya Akademi Fellowship 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Ruskin Bond",
  "op2": "Amitav Ghosh",
  "op3": "Gulzar",
  "op4": "Shashi Tharoor",
  "ans": "Amitav Ghosh"
},
{
  "ques": "Which country topped the World Press Freedom Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Norway",
  "op2": "Finland",
  "op3": "Sweden",
  "op4": "Denmark",
  "ans": "Norway"
},
{
  "ques": "Which Indian state leads in solar energy installed capacity as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Rajasthan",
  "op2": "Gujarat",
  "op3": "Tamil Nadu",
  "op4": "Karnataka",
  "ans": "Rajasthan"
},
{
  "ques": "Who is the President of the Asian Infrastructure Investment Bank (AIIB)?<br><br>",
  "quesType": "mcq",
  "op1": "Jin Liqun",
  "op2": "Takehiko Nakao",
  "op3": "David Malpass",
  "op4": "Ngozi Okonjo-Iweala",
  "ans": "Jin Liqun"
},
{
  "ques": "Which country recently built the world’s tallest dam?<br><br>",
  "quesType": "mcq",
  "op1": "China",
  "op2": "Switzerland",
  "op3": "Tajikistan",
  "op4": "Nepal",
  "ans": "Tajikistan"
},
{
  "ques": "Which Indian state launched the 'Mukhyamantri Seekho Kamao Yojana'?<br><br>",
  "quesType": "mcq",
  "op1": "Uttar Pradesh",
  "op2": "Rajasthan",
  "op3": "Madhya Pradesh",
  "op4": "Odisha",
  "ans": "Madhya Pradesh"
},
{
  "ques": "Who is the Chairperson of Competition Commission of India (CCI) as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Ashok Kumar Gupta",
  "op2": "Rohit Kumar Singh",
  "op3": "Sangeeta Verma",
  "op4": "Nidhi Khare",
  "ans": "Sangeeta Verma"
},
{
  "ques": "Which country topped the Global Innovation Index 2024?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Switzerland",
  "op3": "Sweden",
  "op4": "Singapore",
  "ans": "Switzerland"
},
{
  "ques": "Which country launched the world’s first digital currency backed by its central bank?<br><br>",
  "quesType": "mcq",
  "op1": "China",
  "op2": "USA",
  "op3": "Sweden",
  "op4": "Bahamas",
  "ans": "Bahamas"
},
{
  "ques": "Who won the Nobel Prize in Chemistry 2023 for quantum dots?<br><br>",
  "quesType": "mcq",
  "op1": "Pierre Agostini",
  "op2": "Moungi Bawendi",
  "op3": "Anne L’Huillier",
  "op4": "Ferenc Krausz",
  "ans": "Moungi Bawendi"
},
{
  "ques": "Which Indian company joined the Fortune Global 500 list in 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Adani Group",
  "op2": "Reliance Industries",
  "op3": "Tata Motors",
  "op4": "HCL Technologies",
  "ans": "Adani Group"
},
{
  "ques": "Who won the Templeton Prize 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Jane Goodall",
  "op2": "Francis Collins",
  "op3": "N.T. Wright",
  "op4": "Frank Wilczek",
  "ans": "Frank Wilczek"
},
{
  "ques": "Which country hosts the headquarters of Interpol?<br><br>",
  "quesType": "mcq",
  "op1": "France",
  "op2": "Switzerland",
  "op3": "USA",
  "op4": "Germany",
  "ans": "France"
},
{
  "ques": "Who won the ICC Emerging Player of the Year 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Ruturaj Gaikwad",
  "op2": "Yashasvi Jaiswal",
  "op3": "Harry Brook",
  "op4": "Cameron Green",
  "ans": "Yashasvi Jaiswal"
},
{
  "ques": "Who is the current CEO of Intel as of 2024?<br><br>",
  "quesType": "mcq",
  "op1": "Pat Gelsinger",
  "op2": "Satya Nadella",
  "op3": "Sundar Pichai",
  "op4": "Arvind Krishna",
  "ans": "Pat Gelsinger"
},
{
  "ques": "Which Indian state launched 'Mission Basundhara 2.0'?<br><br>",
  "quesType": "mcq",
  "op1": "Assam",
  "op2": "West Bengal",
  "op3": "Odisha",
  "op4": "Jharkhand",
  "ans": "Assam"
},
{
  "ques": "Which Indian received the Ramon Magsaysay Award 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Ravish Kumar",
  "op2": "Bindeshwar Pathak",
  "op3": "Vivek Sagar",
  "op4": "Kailash Satyarthi",
  "ans": "Bindeshwar Pathak"
}

]

let affairIncorrectAnswers = [];

let affairTimerId = "";
let affairSkip = document.getElementById("affairSkip");
let codingaffairQues = document.getElementById("codingaffairQues");
let mcqaffair = document.getElementById("mcqaffair");
let affairQuestionNumber = document.getElementById("affairQuestionNumber");
let affairQuestionCount = 2;
let affairScore = 0;
let affairScoreDisplay = document.getElementById("affairScoreDisplay");
let affairScoreShow = document.getElementById("affairScoreShow");
let affairSkip2 = document.getElementById("affairSkip2");

let affairFillAns = document.getElementById("affairFillAns");
let affairStatus1 = document.getElementById("affairStatus1");
let affairStatus2 = document.getElementById("affairStatus2");
let affairStatus3 = document.getElementById("affairStatus3");
let affairCheckFill = document.getElementById("affairCheckFill");

let codingResultaffair = document.getElementById("codingResultaffair");

let affairIncorrectAnswersDisplay = document.getElementById("affairIncorrectAnswersDisplay");
let affairScoreBelow70 = document.getElementById("affairScoreBelow70");
let affairScore100 = document.getElementById("affairScore100");

let affairResult1 = document.getElementById("affairResult1");
let affairResult2 = document.getElementById("affairResult2");
let affairResult3 = document.getElementById("affairResult3");
let affairResult4 = document.getElementById("affairResult4");
let affairResult5 = document.getElementById("affairResult5");
let affairBg1 = document.getElementById("affairBg1");


function codingaffairStart(){
  codingaffairHide.classList.add("d-none");
codingaffairShow.classList.remove("d-none");

let fillBlankaffair = document.getElementById("fillBlankaffair");
let op1affair = document.getElementById("op1affair");
let op2affair = document.getElementById("op2affair");
let op3affair = document.getElementById("op3affair");
let op4affair = document.getElementById("op4affair");

let affairFillAns = document.getElementById("affairFillAns");
let affairStatus1 = document.getElementById("affairStatus1");
let affairStatus2 = document.getElementById("affairStatus2");
let affairStatus3 = document.getElementById("affairStatus3");
let affairCheckFill = document.getElementById("affairCheckFill");

affairFillAns.disabled = false;
affairStatus1.classList.remove("d-none");
affairStatus2.classList.add("d-none");
affairStatus3.classList.add("d-none");
affairFillAns.value = "";
affairSkip2.textContent = "Skip";
affairSkip2.style.backgroundColor = "orange";
affairSkip2.style.borderColor = "orange";

affairSkip.textContent = "Skip";
affairSkip.style.backgroundColor = "orange";
affairSkip.style.borderColor = "orange";
affairScoreShow.textContent = "";
affairTimer.style.color = "black";

if (affairLevel === 1) {
  let affairRandom = Math.floor(Math.random() * codingaffair1Arr.length);
  let y = codingaffair1Arr[affairRandom];
  affairTimer.textContent = "20";
  affairTime = 20;

  affairTimerId = setInterval(function () {
    affairTime = affairTime - 1;
    if (affairTime == 0) {
      clearInterval(affairTimerId);
      affairQuestionNumber.textContent = "Question:" + affairQuestionCount + "/10";
      affairQuestionCount = affairQuestionCount + 1;
      affairTime = 20;
      codingaffairStart();
    }
    if (affairTime <= 5) {
      affairTimer.style.color = "red";
      affairTimer.textContent = affairTime;
    } else {
      affairTimer.textContent = affairTime;
    }
  }, 1000);

  if (affairQuestionCount == 12) {
    clearInterval(affairTimerId);
    mcqaffair.classList.add("d-none");
    document.getElementById("affairScoreEnd").textContent = affairScoreDisplay.textContent;
    fillBlankaffair.classList.add("d-none");
    codingaffairShow.classList.add("d-none");
    codingResultaffair.classList.remove("d-none");

    if (affairScore < 70) {
      affairScoreBelow70.classList.remove("d-none");
      affairScore100.classList.add("d-none");
      sectionCodingaffair.classList.add("back15");

      affairResult1.textContent = "Test finished!!";
      affairResult2.textContent = "😓 Oops! Not quite right.";
      affairResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      affairResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      affairIncorrectAnswersDisplay.appendChild(h2);

      for (let z of affairIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        affairIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (affairScore < 100) {
      affairScoreBelow70.classList.remove("d-none");
      affairScore100.classList.add("d-none");
      sectionCodingaffair.classList.add("back15");

      affairResult1.textContent = "Test finished!!";
      affairResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      affairResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      affairResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      affairIncorrectAnswersDisplay.appendChild(h2);

      for (let z of affairIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        affairIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (affairScore === 100) {
      document.getElementById("sectionCodingaffair").classList.add("back14");
      affairScore100.classList.remove("d-none");
      affairScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqaffair.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingaffairQues.innerHTML = formattedQuestion;

    fillBlankaffair.classList.add("d-none");
    op1affair.textContent = y.op1;
    op2affair.textContent = y.op2;
    op3affair.textContent = y.op3;
    op4affair.textContent = y.op4;

    const allOps = [op1affair, op2affair, op3affair, op4affair];
    allOps.forEach((op, i) => {
      op.onclick = function () {
        allOps.forEach(o => (o.disabled = true));
        clearInterval(affairTimerId);
        affairTime = 20;

        if (op.textContent === y.ans) {
          op.style.backgroundColor = "green";
          affairScore += 10;
          affairScoreShow.textContent = "+10";
          affairScoreShow.style.color = "green";
        } else {
          op.style.backgroundColor = "red";
          affairScore -= 5;
          affairScoreShow.textContent = "-5";
          affairScoreShow.style.color = "red";
          let wrong_answer = { ques: y.ques, correct: y.ans, wrong: op.textContent };
          affairIncorrectAnswers.push(wrong_answer);
        }

        affairScoreDisplay.textContent = "Score: " + affairScore + "/100";

        affairSkip.textContent = "Next";
        affairSkip.style.backgroundColor = "#23ebdd";
        affairSkip.style.borderColor = "#23ebdd";

        affairSkip.onclick = function () {
          affairQuestionNumber.textContent = "Question:" + affairQuestionCount + "/10";
          affairQuestionCount += 1;
          allOps.forEach(o => {
            o.disabled = false;
            o.style.backgroundColor = "white";
          });
          codingaffairStart();
        };
      };
    });

    affairSkip.onclick = function () {
      clearInterval(affairTimerId);
      affairTime = 20;
      affairQuestionNumber.textContent = "Question:" + affairQuestionCount + "/10";
      affairQuestionCount += 1;
      allOps.forEach(o => {
        o.disabled = false;
        o.style.backgroundColor = "white";
      });
      let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
      affairIncorrectAnswers.push(wrong_answer);
      codingaffairStart();
    };
  }
}
else if (affairLevel === 2) {
  let affairRandom = Math.floor(Math.random() * codingaffair2Arr.length);
  let y = codingaffair2Arr[affairRandom];
  affairTimer.textContent = "25";
  affairTime = 25;

  affairTimerId = setInterval(function () {
    affairTime = affairTime - 1;
    if (affairTime == 0) {
      clearInterval(affairTimerId);
      affairQuestionNumber.textContent = "Question:" + affairQuestionCount + "/10";
      affairQuestionCount = affairQuestionCount + 1;
      affairTime = 25;
      codingaffairStart();
    }
    if (affairTime <= 5) {
      affairTimer.style.color = "red";
      affairTimer.textContent = affairTime;
    } else {
      affairTimer.textContent = affairTime;
    }
  }, 1000);

  if (affairQuestionCount == 12) {
    clearInterval(affairTimerId);
    mcqaffair.classList.add("d-none");
    document.getElementById("affairScoreEnd").textContent = affairScoreDisplay.textContent;
    fillBlankaffair.classList.add("d-none");
    codingaffairShow.classList.add("d-none");
    codingResultaffair.classList.remove("d-none");

    if (affairScore < 70) {
      affairScoreBelow70.classList.remove("d-none");
      affairScore100.classList.add("d-none");
      sectionCodingaffair.classList.add("back15");

      affairResult1.textContent = "Test finished!!";
      affairResult2.textContent = "😓 Oops! Not quite right.";
      affairResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      affairResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      affairIncorrectAnswersDisplay.appendChild(h2);

      for (let z of affairIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        affairIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (affairScore < 100) {
      affairScoreBelow70.classList.remove("d-none");
      affairScore100.classList.add("d-none");
      sectionCodingaffair.classList.add("back15");

      affairResult1.textContent = "Test finished!!";
      affairResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      affairResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      affairResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      affairIncorrectAnswersDisplay.appendChild(h2);

      for (let z of affairIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        affairIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (affairScore === 100) {
      document.getElementById("sectionCodingaffair").classList.add("back14");
      affairScore100.classList.remove("d-none");
      affairScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqaffair.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingaffairQues.innerHTML = formattedQuestion;
    fillBlankaffair.classList.add("d-none");
    op1affair.textContent = y.op1;
    op2affair.textContent = y.op2;
    op3affair.textContent = y.op3;
    op4affair.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(affairTimerId);
      affairTime = 25;
      affairSkip.textContent = "Next";
      affairSkip.style.backgroundColor = "#23ebdd";
      affairSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        affairScore += 10;
        affairScoreShow.textContent = "+10";
        affairScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        affairScore -= 5;
        affairScoreShow.textContent = "-5";
        affairScoreShow.style.color = "red";
        affairIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      affairScoreDisplay.textContent = "Score: " + affairScore + "/100";
    }

    op1affair.onclick = () => handleOptionClick(op1affair, [op2affair, op3affair, op4affair]);
    op2affair.onclick = () => handleOptionClick(op2affair, [op1affair, op3affair, op4affair]);
    op3affair.onclick = () => handleOptionClick(op3affair, [op1affair, op2affair, op4affair]);
    op4affair.onclick = () => handleOptionClick(op4affair, [op1affair, op2affair, op3affair]);

    affairSkip.onclick = function () {
      clearInterval(affairTimerId);
      affairTime = 25;
      affairQuestionNumber.textContent = "Question:" + affairQuestionCount + "/10";
      affairQuestionCount++;
      [op1affair, op2affair, op3affair, op4affair].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      affairIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingaffairStart();
    };
  }
}
else if (affairLevel === 3) {
  let affairRandom = Math.floor(Math.random() * codingaffair3Arr.length);
  let y = codingaffair3Arr[affairRandom];
  affairTimer.textContent = "30";
  affairTime = 30;

  affairTimerId = setInterval(function () {
    affairTime = affairTime - 1;
    if (affairTime == 0) {
      clearInterval(affairTimerId);
      affairQuestionNumber.textContent = "Question:" + affairQuestionCount + "/10";
      affairQuestionCount = affairQuestionCount + 1;
      affairTime = 30;
      codingaffairStart();
    }
    if (affairTime <= 5) {
      affairTimer.style.color = "red";
      affairTimer.textContent = affairTime;
    } else {
      affairTimer.textContent = affairTime;
    }
  }, 1000);

  if (affairQuestionCount == 12) {
    clearInterval(affairTimerId);
    mcqaffair.classList.add("d-none");
    document.getElementById("affairScoreEnd").textContent = affairScoreDisplay.textContent;
    fillBlankaffair.classList.add("d-none");
    codingaffairShow.classList.add("d-none");
    codingResultaffair.classList.remove("d-none");

    if (affairScore < 70) {
      affairScoreBelow70.classList.remove("d-none");
      affairScore100.classList.add("d-none");
      sectionCodingaffair.classList.add("back15");

      affairResult1.textContent = "Test finished!!";
      affairResult2.textContent = "😓 Oops! Not quite right.";
      affairResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      affairResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      affairIncorrectAnswersDisplay.appendChild(h2);

      for (let z of affairIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        affairIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (affairScore < 100) {
      affairScoreBelow70.classList.remove("d-none");
      affairScore100.classList.add("d-none");
      sectionCodingaffair.classList.add("back15");

      affairResult1.textContent = "Test finished!!";
      affairResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      affairResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      affairResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      affairIncorrectAnswersDisplay.appendChild(h2);

      for (let z of affairIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        affairIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (affairScore === 100) {
      document.getElementById("sectionCodingaffair").classList.add("back14");
      affairScore100.classList.remove("d-none");
      affairScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqaffair.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingaffairQues.innerHTML = formattedQuestion;
    fillBlankaffair.classList.add("d-none");
    op1affair.textContent = y.op1;
    op2affair.textContent = y.op2;
    op3affair.textContent = y.op3;
    op4affair.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(affairTimerId);
      affairTime = 30;
      affairSkip.textContent = "Next";
      affairSkip.style.backgroundColor = "#23ebdd";
      affairSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        affairScore += 10;
        affairScoreShow.textContent = "+10";
        affairScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        affairScore -= 5;
        affairScoreShow.textContent = "-5";
        affairScoreShow.style.color = "red";
        affairIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      affairScoreDisplay.textContent = "Score: " + affairScore + "/100";
    }

    op1affair.onclick = () => handleOptionClick(op1affair, [op2affair, op3affair, op4affair]);
    op2affair.onclick = () => handleOptionClick(op2affair, [op1affair, op3affair, op4affair]);
    op3affair.onclick = () => handleOptionClick(op3affair, [op1affair, op2affair, op4affair]);
    op4affair.onclick = () => handleOptionClick(op4affair, [op1affair, op2affair, op3affair]);

    affairSkip.onclick = function () {
      clearInterval(affairTimerId);
      affairTime = 30;
      affairQuestionNumber.textContent = "Question:" + affairQuestionCount + "/10";
      affairQuestionCount++;
      [op1affair, op2affair, op3affair, op4affair].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      affairIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingaffairStart();
    };
  }
}


}

function resetCodingaffair() {
  document.getElementById("codingaffairShow").classList.add("d-none");
  document.getElementById("codingResultaffair").classList.add("d-none");
  document.getElementById("codingaffairHide").classList.remove("d-none");

  document.getElementById("affairQuestionNumber").innerText = "Question: 1/10";
  document.getElementById("affairScoreDisplay").innerText = "Score: 0/100";
  document.getElementById("affairScoreShow").innerText = "";
  document.getElementById("affairTimer").innerText = "00";
  document.getElementById("codingaffairQues").innerText = "";

  document.getElementById("op1affair").innerText = "option1";
  document.getElementById("op2affair").innerText = "option2";
  document.getElementById("op3affair").innerText = "option3";
  document.getElementById("op4affair").innerText = "option4";

  affairIncorrectAnswers = [];
  document.getElementById("affairIncorrectAnswersDisplay").innerHTML = "";

  affairScore100.classList.add("d-none");
  affairScoreBelow70.classList.add("d-none");

  affairResult1.textContent = "";
  affairResult2.textContent = "";
  affairResult3.src = "";
  affairResult4.textContent = "";

  sectionCodingaffair.classList.remove("back14");
  sectionCodingaffair.classList.remove("back15");

  document.getElementById("affairFillAns").value = "";
  document.getElementById("fillBlankaffair").style.display = "none";
  document.getElementById("mcqaffair").style.display = "block";

  document.getElementById("affairStatus1").classList.remove("d-none");
  document.getElementById("affairStatus2").classList.add("d-none");
  document.getElementById("affairStatus3").classList.add("d-none");

  if (typeof affairTimerId !== "undefined") {
    clearInterval(affairTimerId);
  }
  affairTime = 20;
  affairQuestionCount = 2;
  affairScore = 0;
}

function affairResetLevel() {
  affairButton1.disabled = false;
  affairButton2.disabled = false;
  affairButton3.disabled = false;
  affairButton.classList.add("d-none");
  affairIncorrectAnswers = [];
}


// movie and cinema
let movieButton = document.getElementById("movieButton");
let movieButton1 = document.getElementById("movieButton1");
let movieButton2 = document.getElementById("movieButton2");
let movieButton3 = document.getElementById("movieButton3");
let movieLevel = 0;
let movieCodingTest = document.getElementById("movieCodingTest");
let movieTimer = document.getElementById("movieTimer");

movieButton1.onclick = function () {
  movieButton2.disabled = true;
  movieButton3.disabled = true;
  movieLevel = 1;

  movieButton.classList.remove("d-none");
  movieButton.classList.add("d-block");
};

movieButton2.onclick = function () {
  movieButton1.disabled = true;
  movieButton3.disabled = true;
  movieLevel = 2;

  movieButton.classList.remove("d-none");
  movieButton.classList.add("d-block");
};

movieButton3.onclick = function () {
  movieButton2.disabled = true;
  movieButton1.disabled = true;
  movieLevel = 3;

  movieButton.classList.remove("d-none");
  movieButton.classList.add("d-block");
};

let movieTime = 0;

let codingmovieShow = document.getElementById("codingmovieShow");
let codingmovieHide = document.getElementById("codingmovieHide");
let codingmovieBack = document.getElementById("codingmovieBack");

codingmovieBack.onclick = function () {
  codingmovieShow.classList.add("d-none");
  codingmovieHide.classList.remove("d-none");
};

let codingmovie1Arr=[
  {
  "ques": "Who is known as the 'Power Star' of Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "Jr. NTR",
  "op3": "Pawan Kalyan",
  "op4": "Prabhas",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Who directed the movie *Baahubali*?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Trivikram Srinivas",
  "op3": "Rajamouli",
  "op4": "Koratala Siva",
  "ans": "Rajamouli"
},
{
  "ques": "Which actor is known as the 'Prince' of Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Mahesh Babu",
  "op3": "Allu Arjun",
  "op4": "Nani",
  "ans": "Mahesh Babu"
},
{
  "ques": "Who played the lead role in *Pushpa*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Ram Pothineni",
  "op3": "Allu Arjun",
  "op4": "Nithiin",
  "ans": "Allu Arjun"
},
{
  "ques": "Which actor is nicknamed 'Young Tiger'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Nani",
  "op3": "Ram Charan",
  "op4": "Jr. NTR",
  "ans": "Jr. NTR"
},
{
  "ques": "Which actress starred opposite Mahesh Babu in *Srimanthudu*?<br><br>",
  "quesType": "mcq",
  "op1": "Rakul Preet Singh",
  "op2": "Samantha",
  "op3": "Shruti Haasan",
  "op4": "Anushka Shetty",
  "ans": "Shruti Haasan"
},
{
  "ques": "Who is the music director for most of Trivikram’s movies?<br><br>",
  "quesType": "mcq",
  "op1": "Anirudh",
  "op2": "DSP",
  "op3": "Thaman S",
  "op4": "Harris Jayaraj",
  "ans": "DSP"
},
{
  "ques": "Which movie is known for the dialogue 'Cheppanu Brother'?<br><br>",
  "quesType": "mcq",
  "op1": "Arya",
  "op2": "Sarrainodu",
  "op3": "Race Gurram",
  "op4": "Julayi",
  "ans": "Race Gurram"
},
{
  "ques": "Which Tollywood movie won the National Award for Best Popular Film Providing Wholesome Entertainment?<br><br>",
  "quesType": "mcq",
  "op1": "Baahubali",
  "op2": "Eega",
  "op3": "Magadheera",
  "op4": "Arjun Reddy",
  "ans": "Baahubali"
},
{
  "ques": "Who played Devasena in *Baahubali*?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Kajal Aggarwal",
  "op3": "Anushka Shetty",
  "op4": "Samantha",
  "ans": "Anushka Shetty"
},
{
  "ques": "Who is the father of Ram Charan?<br><br>",
  "quesType": "mcq",
  "op1": "Nandamuri Balakrishna",
  "op2": "Pawan Kalyan",
  "op3": "Chiranjeevi",
  "op4": "Nagarjuna",
  "ans": "Chiranjeevi"
},
{
  "ques": "Which movie is directed by Sukumar and stars Allu Arjun?<br><br>",
  "quesType": "mcq",
  "op1": "DJ",
  "op2": "S/O Satyamurthy",
  "op3": "Pushpa",
  "op4": "Ala Vaikunthapurramuloo",
  "ans": "Pushpa"
},
{
  "ques": "Who is the female lead in *Ala Vaikunthapurramuloo*?<br><br>",
  "quesType": "mcq",
  "op1": "Kajal Aggarwal",
  "op2": "Rakul Preet Singh",
  "op3": "Pooja Hegde",
  "op4": "Tamannaah",
  "ans": "Pooja Hegde"
},
{
  "ques": "Which actor starred in *Geetha Govindam*?<br><br>",
  "quesType": "mcq",
  "op1": "Vijay Deverakonda",
  "op2": "Ram Charan",
  "op3": "Nani",
  "op4": "Nikhil",
  "ans": "Vijay Deverakonda"
},
{
  "ques": "Which Tollywood actor is called 'Rebel Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Jr. NTR",
  "op2": "Ram Charan",
  "op3": "Prabhas",
  "op4": "Ravi Teja",
  "ans": "Prabhas"
},
{
  "ques": "Which movie features the song 'Butta Bomma'?<br><br>",
  "quesType": "mcq",
  "op1": "Sarileru Neekevvaru",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "DJ",
  "op4": "Pushpa",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who directed *Magadheera*?<br><br>",
  "quesType": "mcq",
  "op1": "Puri Jagannadh",
  "op2": "Sukumar",
  "op3": "Rajamouli",
  "op4": "Boyapati Srinu",
  "ans": "Rajamouli"
},
{
  "ques": "Which Tollywood star is also called 'Natural Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Pothineni",
  "op2": "Nani",
  "op3": "Nithiin",
  "op4": "Vijay Deverakonda",
  "ans": "Nani"
},
{
  "ques": "Which film marked Jr. NTR's debut as a child artist?<br><br>",
  "quesType": "mcq",
  "op1": "Ramayanam",
  "op2": "Student No.1",
  "op3": "Simhadri",
  "op4": "Yamadonga",
  "ans": "Ramayanam"
},
{
  "ques": "Who starred as 'DJ' in *Duvvada Jagannadham*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Mahesh Babu",
  "op3": "Allu Arjun",
  "op4": "Nani",
  "ans": "Allu Arjun"
},
{
  "ques": "Which movie features the character 'Rowdy'?<br><br>",
  "quesType": "mcq",
  "op1": "Arjun Reddy",
  "op2": "Geetha Govindam",
  "op3": "Dear Comrade",
  "op4": "Taxiwala",
  "ans": "Arjun Reddy"
},
{
  "ques": "Who played the lead in *Eega*?<br><br>",
  "quesType": "mcq",
  "op1": "Rana Daggubati",
  "op2": "Nani",
  "op3": "Siddharth",
  "op4": "Ram Charan",
  "ans": "Nani"
},
{
  "ques": "Which movie features the line 'Ee Cinema Ki Hero Nene'?<br><br>",
  "quesType": "mcq",
  "op1": "Temper",
  "op2": "Gabbar Singh",
  "op3": "Race Gurram",
  "op4": "Pokiri",
  "ans": "Gabbar Singh"
},
{
  "ques": "Who is the music composer of *Pushpa*?<br><br>",
  "quesType": "mcq",
  "op1": "Thaman S",
  "op2": "DSP",
  "op3": "Anirudh",
  "op4": "Mani Sharma",
  "ans": "DSP"
},
{
  "ques": "Which movie is known for the song 'Saaho Saaho'?<br><br>",
  "quesType": "mcq",
  "op1": "Baahubali",
  "op2": "Mirchi",
  "op3": "Darling",
  "op4": "Saaho",
  "ans": "Saaho"
},
{
  "ques": "Which actor is the 'Mass Maharaja'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Nani",
  "op3": "Ravi Teja",
  "op4": "Nithiin",
  "ans": "Ravi Teja"
},
{
  "ques": "Who starred in *Temper*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Mahesh Babu",
  "op3": "Jr. NTR",
  "op4": "Prabhas",
  "ans": "Jr. NTR"
},
{
  "ques": "Who directed *Pokiri*?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram",
  "op2": "Puri Jagannadh",
  "op3": "Sukumar",
  "op4": "Boyapati Srinu",
  "ans": "Puri Jagannadh"
},
{
  "ques": "Which actress starred in *Mahanati*?<br><br>",
  "quesType": "mcq",
  "op1": "Anushka Shetty",
  "op2": "Tamannaah",
  "op3": "Keerthy Suresh",
  "op4": "Samantha",
  "ans": "Keerthy Suresh"
}
,
{
  "ques": "Who is known as the 'Superstar' of Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "Prabhas",
  "op3": "Chiranjeevi",
  "op4": "Nagarjuna",
  "ans": "Chiranjeevi"
},
{
  "ques": "Which Tollywood actor is known as 'Prince'?<br><br>",
  "quesType": "mcq",
  "op1": "Allu Arjun",
  "op2": "Ram Charan",
  "op3": "Mahesh Babu",
  "op4": "Nani",
  "ans": "Mahesh Babu"
},
{
  "ques": "Who directed 'Baahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Trivikram Srinivas",
  "op3": "Rajamouli",
  "op4": "Puri Jagannadh",
  "ans": "Rajamouli"
},
{
  "ques": "Which movie gave Prabhas pan-India fame?<br><br>",
  "quesType": "mcq",
  "op1": "Saaho",
  "op2": "Mirchi",
  "op3": "Baahubali",
  "op4": "Radhe Shyam",
  "ans": "Baahubali"
},
{
  "ques": "Who is the 'Stylish Star' of Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "NTR Jr.",
  "op2": "Ram Charan",
  "op3": "Nani",
  "op4": "Allu Arjun",
  "ans": "Allu Arjun"
},
{
  "ques": "Who played Pushpa Raj in 'Pushpa'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Nani",
  "op3": "Allu Arjun",
  "op4": "NTR Jr.",
  "ans": "Allu Arjun"
},
{
  "ques": "Which actress starred opposite Mahesh Babu in 'Srimanthudu'?<br><br>",
  "quesType": "mcq",
  "op1": "Kajal Aggarwal",
  "op2": "Samantha",
  "op3": "Shruti Haasan",
  "op4": "Rakul Preet",
  "ans": "Shruti Haasan"
},
{
  "ques": "Which movie is known for the song 'Butta Bomma'?<br><br>",
  "quesType": "mcq",
  "op1": "DJ",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "Sarrainodu",
  "op4": "Race Gurram",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who is Nandamuri Balakrishna’s father?<br><br>",
  "quesType": "mcq",
  "op1": "NTR Jr.",
  "op2": "Nandamuri Kalyan Ram",
  "op3": "N.T. Rama Rao",
  "op4": "Nagarjuna",
  "ans": "N.T. Rama Rao"
},
{
  "ques": "Which Tollywood hero is called 'Natural Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Allu Arjun",
  "op2": "Nani",
  "op3": "Ram Pothineni",
  "op4": "Sai Dharam Tej",
  "ans": "Nani"
},
{
  "ques": "Who directed 'Arjun Reddy'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Vijay Deverakonda",
  "op3": "Sandeep Reddy Vanga",
  "op4": "Puri Jagannadh",
  "ans": "Sandeep Reddy Vanga"
},
{
  "ques": "Which Tollywood actor is Vijay Deverakonda’s blockbuster debut hero role?<br><br>",
  "quesType": "mcq",
  "op1": "Dear Comrade",
  "op2": "Geetha Govindam",
  "op3": "Arjun Reddy",
  "op4": "Taxiwaala",
  "ans": "Arjun Reddy"
},
{
  "ques": "Which film stars Ram Charan and Jr. NTR together?<br><br>",
  "quesType": "mcq",
  "op1": "Magadheera",
  "op2": "Rangasthalam",
  "op3": "RRR",
  "op4": "Dhruva",
  "ans": "RRR"
},
{
  "ques": "Which Telugu actress is also called 'Milky Beauty'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Tamannaah",
  "op3": "Anushka Shetty",
  "op4": "Kajal Aggarwal",
  "ans": "Tamannaah"
},
{
  "ques": "Which movie gave NTR Jr. the title 'Young Tiger'?<br><br>",
  "quesType": "mcq",
  "op1": "Janatha Garage",
  "op2": "Simhadri",
  "op3": "Temper",
  "op4": "Brindavanam",
  "ans": "Simhadri"
},
{
  "ques": "Who is the famous Tollywood music director duo?<br><br>",
  "quesType": "mcq",
  "op1": "Devi Sri Prasad",
  "op2": "Thaman S",
  "op3": "Mani Sharma",
  "op4": "Raj–Koti",
  "ans": "Raj–Koti"
},
{
  "ques": "Which hero played Bheem in 'RRR'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Prabhas",
  "op3": "Nani",
  "op4": "NTR Jr.",
  "ans": "NTR Jr."
},
{
  "ques": "Which Tollywood movie was India’s Oscar entry in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "RRR",
  "op2": "Pushpa",
  "op3": "Kantara",
  "op4": "The Kashmir Files",
  "ans": "RRR"
},
{
  "ques": "Which actor is Megastar Chiranjeevi’s son?<br><br>",
  "quesType": "mcq",
  "op1": "Naga Chaitanya",
  "op2": "Ram Charan",
  "op3": "Sai Dharam Tej",
  "op4": "Nithiin",
  "ans": "Ram Charan"
},
{
  "ques": "Who is known for mass dance in Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "Prabhas",
  "op3": "Allu Arjun",
  "op4": "Ravi Teja",
  "ans": "Allu Arjun"
},
{
  "ques": "Who directed 'Rangasthalam'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Rajamouli",
  "op3": "Puri Jagannadh",
  "op4": "Trivikram Srinivas",
  "ans": "Sukumar"
},
{
  "ques": "Who starred in 'Gabbar Singh'?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "NTR Jr.",
  "op3": "Ram Charan",
  "op4": "Pawan Kalyan",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Which hero is nicknamed 'Mass Maharaja'?<br><br>",
  "quesType": "mcq",
  "op1": "Ravi Teja",
  "op2": "Allu Arjun",
  "op3": "Nani",
  "op4": "Nithiin",
  "ans": "Ravi Teja"
},
{
  "ques": "Who directed 'Athadu'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Trivikram Srinivas",
  "op3": "Rajamouli",
  "op4": "Harish Shankar",
  "ans": "Trivikram Srinivas"
},
{
  "ques": "Who is the hero in 'Eega'?<br><br>",
  "quesType": "mcq",
  "op1": "Suriya",
  "op2": "Nani",
  "op3": "NTR Jr.",
  "op4": "Ram Pothineni",
  "ans": "Nani"
},
{
  "ques": "Which hero played DJ in 'Duvvada Jagannadham'?<br><br>",
  "quesType": "mcq",
  "op1": "NTR Jr.",
  "op2": "Prabhas",
  "op3": "Ram Charan",
  "op4": "Allu Arjun",
  "ans": "Allu Arjun"
},
{
  "ques": "Which movie stars Prabhas as a rebel leader?<br><br>",
  "quesType": "mcq",
  "op1": "Radhe Shyam",
  "op2": "Saaho",
  "op3": "Rebel",
  "op4": "Mirchi",
  "ans": "Rebel"
},
{
  "ques": "Who is the heroine in 'Geetha Govindam'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Rashmika Mandanna",
  "op3": "Kajal Aggarwal",
  "op4": "Tamannaah",
  "ans": "Rashmika Mandanna"
},
{
  "ques": "Who is the 'Power Star' of Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Pawan Kalyan",
  "op2": "Ram Charan",
  "op3": "NTR Jr.",
  "op4": "Ravi Teja",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Which Tollywood film inspired Bollywood's 'Kabir Singh'?<br><br>",
  "quesType": "mcq",
  "op1": "Geetha Govindam",
  "op2": "Taxiwaala",
  "op3": "Dear Comrade",
  "op4": "Arjun Reddy",
  "ans": "Arjun Reddy"
}
,
{
  "ques": "Who is known as the 'Megastar' of Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "Prabhas",
  "op3": "Chiranjeevi",
  "op4": "Nagarjuna",
  "ans": "Chiranjeevi"
},
{
  "ques": "Who played Baahubali in the movie 'Baahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Rana Daggubati",
  "op3": "Mahesh Babu",
  "op4": "Allu Arjun",
  "ans": "Prabhas"
},
{
  "ques": "Which director is famous for directing 'RRR'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Trivikram",
  "op3": "Rajamouli",
  "op4": "Puri Jagannadh",
  "ans": "Rajamouli"
},
{
  "ques": "Who is called the 'Stylish Star' in Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Allu Arjun",
  "op3": "Ram Charan",
  "op4": "Nithiin",
  "ans": "Allu Arjun"
},
{
  "ques": "Which actor is known as 'Prince' in Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Mahesh Babu",
  "op3": "Ram Pothineni",
  "op4": "Vijay Deverakonda",
  "ans": "Mahesh Babu"
},
{
  "ques": "Who played Bhallaladeva in 'Baahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "Nagarjuna",
  "op2": "Jr NTR",
  "op3": "Rana Daggubati",
  "op4": "Ram Charan",
  "ans": "Rana Daggubati"
},
{
  "ques": "Who directed 'Pushpa: The Rise'?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Sukumar",
  "op3": "Boyapati Srinu",
  "op4": "Koratala Siva",
  "ans": "Sukumar"
},
{
  "ques": "Which Tollywood actor is nicknamed 'Power Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Pawan Kalyan",
  "op2": "Ram Charan",
  "op3": "Prabhas",
  "op4": "Nani",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Who is the father of actor Ram Charan?<br><br>",
  "quesType": "mcq",
  "op1": "Nagarjuna",
  "op2": "Chiranjeevi",
  "op3": "Krishna",
  "op4": "Mohan Babu",
  "ans": "Chiranjeevi"
},
{
  "ques": "Which movie marked Mahesh Babu's debut as a lead actor?<br><br>",
  "quesType": "mcq",
  "op1": "Okkadu",
  "op2": "Murari",
  "op3": "Raja Kumarudu",
  "op4": "Pokiri",
  "ans": "Raja Kumarudu"
},
{
  "ques": "Who played the lead role in 'Arjun Reddy'?<br><br>",
  "quesType": "mcq",
  "op1": "Naga Chaitanya",
  "op2": "Vijay Deverakonda",
  "op3": "Nani",
  "op4": "Ram Pothineni",
  "ans": "Vijay Deverakonda"
},
{
  "ques": "Which Tollywood film won the National Award for Best Popular Film in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "RRR",
  "op2": "Pushpa",
  "op3": "Sita Ramam",
  "op4": "Ala Vaikunthapurramuloo",
  "ans": "RRR"
},
{
  "ques": "Who directed the film 'Pokiri'?<br><br>",
  "quesType": "mcq",
  "op1": "Puri Jagannadh",
  "op2": "Trivikram",
  "op3": "Sukumar",
  "op4": "Krish",
  "ans": "Puri Jagannadh"
},
{
  "ques": "Which actor is known as the 'Natural Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Nani",
  "op3": "Akhil Akkineni",
  "op4": "Sharwanand",
  "ans": "Nani"
},
{
  "ques": "Which Tollywood actress starred in 'Geetha Govindam'?<br><br>",
  "quesType": "mcq",
  "op1": "Rashmika Mandanna",
  "op2": "Pooja Hegde",
  "op3": "Samantha",
  "op4": "Kajal Aggarwal",
  "ans": "Rashmika Mandanna"
},
{
  "ques": "Who composed the music for 'Baahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "Devi Sri Prasad",
  "op2": "Harris Jayaraj",
  "op3": "Anirudh Ravichander",
  "op4": "M.M. Keeravani",
  "ans": "M.M. Keeravani"
},
{
  "ques": "Who is the hero of 'DJ: Duvvada Jagannadham'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Ram Charan",
  "op3": "Allu Arjun",
  "op4": "Jr NTR",
  "ans": "Allu Arjun"
},
{
  "ques": "Which actor is the son of veteran actor Akkineni Nagarjuna?<br><br>",
  "quesType": "mcq",
  "op1": "Naga Babu",
  "op2": "Naga Chaitanya",
  "op3": "Ram Charan",
  "op4": "Varun Tej",
  "ans": "Naga Chaitanya"
},
{
  "ques": "Who played the villain in 'Eega'?<br><br>",
  "quesType": "mcq",
  "op1": "Sudeep",
  "op2": "Prakash Raj",
  "op3": "Jagapathi Babu",
  "op4": "Sonu Sood",
  "ans": "Sudeep"
},
{
  "ques": "Who is the director of 'Ala Vaikunthapurramuloo'?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram Srinivas",
  "op2": "Rajamouli",
  "op3": "Boyapati Srinu",
  "op4": "Vamshi Paidipally",
  "ans": "Trivikram Srinivas"
},
{
  "ques": "Which Tollywood hero acted in 'Gabbar Singh'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Nani",
  "op3": "Pawan Kalyan",
  "op4": "Prabhas",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Which Tollywood star is called 'Young Tiger'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Prabhas",
  "op3": "Nani",
  "op4": "Jr NTR",
  "ans": "Jr NTR"
},
{
  "ques": "Who acted in 'Majili' along with Samantha?<br><br>",
  "quesType": "mcq",
  "op1": "Naga Chaitanya",
  "op2": "Vijay Deverakonda",
  "op3": "Ram Pothineni",
  "op4": "Nithiin",
  "ans": "Naga Chaitanya"
},
{
  "ques": "Which movie is known for the song 'Butta Bomma'?<br><br>",
  "quesType": "mcq",
  "op1": "Pushpa",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "Geetha Govindam",
  "op4": "DJ",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who is the heroine in 'Pushpa'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Rashmika Mandanna",
  "op3": "Kajal Aggarwal",
  "op4": "Tamannaah",
  "ans": "Rashmika Mandanna"
},
{
  "ques": "Who directed 'Magadheera'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Rajamouli",
  "op3": "Trivikram",
  "op4": "Boyapati Srinu",
  "ans": "Rajamouli"
},
{
  "ques": "Which Tollywood hero starred in 'Nannaku Prematho'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Jr NTR",
  "op3": "Nani",
  "op4": "Mahesh Babu",
  "ans": "Jr NTR"
},
{
  "ques": "Which hero is known for the film 'Khaleja'?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "Ram Charan",
  "op3": "Prabhas",
  "op4": "Naga Chaitanya",
  "ans": "Mahesh Babu"
},
{
  "ques": "Who is the heroine of 'Ye Maaya Chesave'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Kajal Aggarwal",
  "op3": "Samantha",
  "op4": "Pooja Hegde",
  "ans": "Samantha"
}
,
{
  "ques": "Who is the director of *RRR*?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram",
  "op2": "Sukumar",
  "op3": "Rajamouli",
  "op4": "Boyapati Srinu",
  "ans": "Rajamouli"
},
{
  "ques": "Who played Komaram Bheem in *RRR*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Jr. NTR",
  "op3": "Prabhas",
  "op4": "Vijay Deverakonda",
  "ans": "Jr. NTR"
},
{
  "ques": "Who is called 'Stylish Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Allu Arjun",
  "op2": "Mahesh Babu",
  "op3": "Nithiin",
  "op4": "Nani",
  "ans": "Allu Arjun"
},
{
  "ques": "Which actress starred with Prabhas in *Mirchi*?<br><br>",
  "quesType": "mcq",
  "op1": "Anushka Shetty",
  "op2": "Tamannaah",
  "op3": "Kajal Aggarwal",
  "op4": "Pooja Hegde",
  "ans": "Anushka Shetty"
},
{
  "ques": "Who is the lead in *Arjun Reddy*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Nani",
  "op3": "Vijay Deverakonda",
  "op4": "Ram Pothineni",
  "ans": "Vijay Deverakonda"
},
{
  "ques": "Who directed *Julayi*?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Trivikram",
  "op3": "Sukumar",
  "op4": "Koratala Siva",
  "ans": "Trivikram"
},
{
  "ques": "Which movie has the dialogue 'Attarintiki Daredi'?<br><br>",
  "quesType": "mcq",
  "op1": "Gabbar Singh",
  "op2": "Agnyaathavaasi",
  "op3": "Attarintiki Daredi",
  "op4": "DJ",
  "ans": "Attarintiki Daredi"
},
{
  "ques": "Who is the female lead in *RRR* opposite Ram Charan?<br><br>",
  "quesType": "mcq",
  "op1": "Kajal Aggarwal",
  "op2": "Samantha",
  "op3": "Alia Bhatt",
  "op4": "Pooja Hegde",
  "ans": "Alia Bhatt"
},
{
  "ques": "Who is the 'Megastar' of Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Chiranjeevi",
  "op2": "Balakrishna",
  "op3": "Nagarjuna",
  "op4": "Venkatesh",
  "ans": "Chiranjeevi"
},
{
  "ques": "Who played the lead role in *Sye*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Nithiin",
  "op3": "Jr. NTR",
  "op4": "Ram Charan",
  "ans": "Nithiin"
},
{
  "ques": "Which movie made Prabhas a pan-India star?<br><br>",
  "quesType": "mcq",
  "op1": "Mirchi",
  "op2": "Darling",
  "op3": "Baahubali",
  "op4": "Saaho",
  "ans": "Baahubali"
},
{
  "ques": "Which movie stars Ram Charan and Samantha?<br><br>",
  "quesType": "mcq",
  "op1": "Rangasthalam",
  "op2": "Dhruva",
  "op3": "Yevadu",
  "op4": "Bruce Lee",
  "ans": "Rangasthalam"
},
{
  "ques": "Who is known as 'Victory' Venkatesh?<br><br>",
  "quesType": "mcq",
  "op1": "Venkatesh",
  "op2": "Nagarjuna",
  "op3": "Balakrishna",
  "op4": "Chiranjeevi",
  "ans": "Venkatesh"
},
{
  "ques": "Which movie has the song 'Seeti Maar'?<br><br>",
  "quesType": "mcq",
  "op1": "DJ",
  "op2": "Pushpa",
  "op3": "Ala Vaikunthapurramuloo",
  "op4": "Sarrainodu",
  "ans": "DJ"
},
{
  "ques": "Who acted as Balu in *Pokiri*?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "Allu Arjun",
  "op3": "Prabhas",
  "op4": "Ram Charan",
  "ans": "Mahesh Babu"
},
{
  "ques": "Which actor starred in *Hello Brother*?<br><br>",
  "quesType": "mcq",
  "op1": "Chiranjeevi",
  "op2": "Venkatesh",
  "op3": "Nagarjuna",
  "op4": "Balakrishna",
  "ans": "Nagarjuna"
},
{
  "ques": "Who directed *Aarya*?<br><br>",
  "quesType": "mcq",
  "op1": "Koratala Siva",
  "op2": "Sukumar",
  "op3": "Trivikram",
  "op4": "Boyapati Srinu",
  "ans": "Sukumar"
},
{
  "ques": "Who is the lead in *Hello* (2017)?<br><br>",
  "quesType": "mcq",
  "op1": "Naga Chaitanya",
  "op2": "Akhil Akkineni",
  "op3": "Nithiin",
  "op4": "Nani",
  "ans": "Akhil Akkineni"
},
{
  "ques": "Which movie is about boxing starring Varun Tej?<br><br>",
  "quesType": "mcq",
  "op1": "Gaddalakonda Ganesh",
  "op2": "Fidaa",
  "op3": "Ghani",
  "op4": "Tholi Prema",
  "ans": "Ghani"
},
{
  "ques": "Who played the villain in *Businessman*?<br><br>",
  "quesType": "mcq",
  "op1": "Prakash Raj",
  "op2": "Nassar",
  "op3": "Sonu Sood",
  "op4": "Ajay",
  "ans": "Nassar"
},
{
  "ques": "Who is the female lead in *Gabbar Singh*?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Shruti Haasan",
  "op3": "Samantha",
  "op4": "Kajal Aggarwal",
  "ans": "Shruti Haasan"
},
{
  "ques": "Which actor is called 'King' in Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Nagarjuna",
  "op2": "Venkatesh",
  "op3": "Balakrishna",
  "op4": "Chiranjeevi",
  "ans": "Nagarjuna"
},
{
  "ques": "Which movie stars Sai Dharam Tej as the hero?<br><br>",
  "quesType": "mcq",
  "op1": "Subramanyam for Sale",
  "op2": "Sarrainodu",
  "op3": "Arya 2",
  "op4": "Pokiri",
  "ans": "Subramanyam for Sale"
},
{
  "ques": "Who directed *Sarrainodu*?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Boyapati Srinu",
  "op3": "Trivikram",
  "op4": "Rajamouli",
  "ans": "Boyapati Srinu"
},
{
  "ques": "Which Tollywood movie is inspired by Robin Hood?<br><br>",
  "quesType": "mcq",
  "op1": "Dhee",
  "op2": "Kick",
  "op3": "Don Seenu",
  "op4": "Race Gurram",
  "ans": "Kick"
},
{
  "ques": "Who played the lead in *Rangasthalam*?<br><br>",
  "quesType": "mcq",
  "op1": "Allu Arjun",
  "op2": "Ram Charan",
  "op3": "Jr. NTR",
  "op4": "Prabhas",
  "ans": "Ram Charan"
},
{
  "ques": "Which movie features the song 'Blockbuster'?<br><br>",
  "quesType": "mcq",
  "op1": "Sarrainodu",
  "op2": "DJ",
  "op3": "Ala Vaikunthapurramuloo",
  "op4": "Pushpa",
  "ans": "Sarrainodu"
},
{
  "ques": "Who is the lead in *Nenu Local*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Pothineni",
  "op2": "Nani",
  "op3": "Vijay Deverakonda",
  "op4": "Nithiin",
  "ans": "Nani"
},
{
  "ques": "Who played the lead in *Khaidi No.150*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Pawan Kalyan",
  "op3": "Nagarjuna",
  "op4": "Chiranjeevi",
  "ans": "Chiranjeevi"
}
,
{
  "ques": "Who is the lead actor in 'Sye'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "NTR Jr.",
  "op3": "Nithiin",
  "op4": "Nagarjuna",
  "ans": "NTR Jr."
},
{
  "ques": "Who is the director of 'Magadheera'?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Sukumar",
  "op3": "Trivikram Srinivas",
  "op4": "Puri Jagannadh",
  "ans": "Rajamouli"
},
{
  "ques": "Who is called 'Rebel Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Nagarjuna",
  "op2": "Prabhas",
  "op3": "Balakrishna",
  "op4": "Krishnam Raju",
  "ans": "Krishnam Raju"
},
{
  "ques": "Which movie stars Mahesh Babu as a spy?<br><br>",
  "quesType": "mcq",
  "op1": "Businessman",
  "op2": "Bharat Ane Nenu",
  "op3": "Spyder",
  "op4": "Srimanthudu",
  "ans": "Spyder"
},
{
  "ques": "Who played Bhallaladeva in Baahubali?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Rana Daggubati",
  "op3": "NTR Jr.",
  "op4": "Ram Charan",
  "ans": "Rana Daggubati"
},
{
  "ques": "Which Tollywood hero starred in 'Nenokkadine'?<br><br>",
  "quesType": "mcq",
  "op1": "NTR Jr.",
  "op2": "Mahesh Babu",
  "op3": "Ram Charan",
  "op4": "Allu Arjun",
  "ans": "Mahesh Babu"
},
{
  "ques": "Who is known as 'King' in Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Nagarjuna",
  "op2": "Chiranjeevi",
  "op3": "Prabhas",
  "op4": "Balakrishna",
  "ans": "Nagarjuna"
},
{
  "ques": "Who directed 'Pokiri'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Trivikram",
  "op3": "Puri Jagannadh",
  "op4": "Rajamouli",
  "ans": "Puri Jagannadh"
},
{
  "ques": "Which Tollywood movie features the dialogue 'Mind Block'?<br><br>",
  "quesType": "mcq",
  "op1": "Sarileru Neekevvaru",
  "op2": "Bharat Ane Nenu",
  "op3": "Maharshi",
  "op4": "Dookudu",
  "ans": "Sarileru Neekevvaru"
},
{
  "ques": "Who is the lead actress in 'Rangasthalam'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Rakul Preet",
  "op3": "Samantha",
  "op4": "Shruti Haasan",
  "ans": "Samantha"
},
{
  "ques": "Who played the villain in 'Temper'?<br><br>",
  "quesType": "mcq",
  "op1": "Prakash Raj",
  "op2": "Posani Krishna Murali",
  "op3": "Pradeep Rawat",
  "op4": "Prakash Raj",
  "ans": "Prakash Raj"
},
{
  "ques": "Who starred as 'Bunny' in the movie 'Bunny'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Allu Arjun",
  "op3": "Mahesh Babu",
  "op4": "NTR Jr.",
  "ans": "Allu Arjun"
},
{
  "ques": "Who is called 'Energetic Star' in Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Ram Pothineni",
  "op3": "Sai Dharam Tej",
  "op4": "Ravi Teja",
  "ans": "Ram Pothineni"
},
{
  "ques": "Which film stars Nani as a cricketer?<br><br>",
  "quesType": "mcq",
  "op1": "Jersey",
  "op2": "Bhale Bhale Magadivoy",
  "op3": "Eega",
  "op4": "Krishna Gaadi Veera Prema Gaadha",
  "ans": "Jersey"
},
{
  "ques": "Who composed music for 'Pushpa'?<br><br>",
  "quesType": "mcq",
  "op1": "Thaman S",
  "op2": "Devi Sri Prasad",
  "op3": "Anirudh",
  "op4": "Mani Sharma",
  "ans": "Devi Sri Prasad"
},
{
  "ques": "Who is the hero in 'Gharana Mogudu'?<br><br>",
  "quesType": "mcq",
  "op1": "Nagarjuna",
  "op2": "Chiranjeevi",
  "op3": "NTR Jr.",
  "op4": "Prabhas",
  "ans": "Chiranjeevi"
},
{
  "ques": "Who is NTR Jr.'s grandfather?<br><br>",
  "quesType": "mcq",
  "op1": "Nagarjuna",
  "op2": "NTR Sr.",
  "op3": "Chiranjeevi",
  "op4": "Krishna",
  "ans": "NTR Sr."
},
{
  "ques": "Who starred opposite Prabhas in 'Mirchi'?<br><br>",
  "quesType": "mcq",
  "op1": "Kajal Aggarwal",
  "op2": "Anushka Shetty",
  "op3": "Tamannaah",
  "op4": "Shraddha Kapoor",
  "ans": "Anushka Shetty"
},
{
  "ques": "Who directed 'Julayi'?<br><br>",
  "quesType": "mcq",
  "op1": "Puri Jagannadh",
  "op2": "Rajamouli",
  "op3": "Trivikram Srinivas",
  "op4": "Sukumar",
  "ans": "Trivikram Srinivas"
},
{
  "ques": "Who is the hero in 'Pokiri'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "NTR Jr.",
  "op3": "Mahesh Babu",
  "op4": "Allu Arjun",
  "ans": "Mahesh Babu"
},
{
  "ques": "Which movie is famous for the song 'Pakka Local'?<br><br>",
  "quesType": "mcq",
  "op1": "Temper",
  "op2": "Janatha Garage",
  "op3": "Brindavanam",
  "op4": "Baadshah",
  "ans": "Janatha Garage"
},
{
  "ques": "Who starred in 'Race Gurram'?<br><br>",
  "quesType": "mcq",
  "op1": "Allu Arjun",
  "op2": "Ram Charan",
  "op3": "Mahesh Babu",
  "op4": "NTR Jr.",
  "ans": "Allu Arjun"
},
{
  "ques": "Which Tollywood movie was dubbed as 'Makkhi' in Hindi?<br><br>",
  "quesType": "mcq",
  "op1": "Eega",
  "op2": "Baahubali",
  "op3": "Magadheera",
  "op4": "Arundhati",
  "ans": "Eega"
},
{
  "ques": "Who is the lead actor in 'Yevadu'?<br><br>",
  "quesType": "mcq",
  "op1": "NTR Jr.",
  "op2": "Ram Charan",
  "op3": "Prabhas",
  "op4": "Mahesh Babu",
  "ans": "Ram Charan"
},
{
  "ques": "Who is the 'Mega Power Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Allu Arjun",
  "op3": "Sai Dharam Tej",
  "op4": "Varun Tej",
  "ans": "Ram Charan"
},
{
  "ques": "Who is the heroine in 'Arya 2'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Kajal Aggarwal",
  "op3": "Samantha",
  "op4": "Shruti Haasan",
  "ans": "Kajal Aggarwal"
},
{
  "ques": "Who directed 'Bharat Ane Nenu'?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram",
  "op2": "Sukumar",
  "op3": "Koratala Siva",
  "op4": "Rajamouli",
  "ans": "Koratala Siva"
},
{
  "ques": "Who played the lead role in 'Attarintiki Daredi'?<br><br>",
  "quesType": "mcq",
  "op1": "Allu Arjun",
  "op2": "Ram Charan",
  "op3": "Pawan Kalyan",
  "op4": "Nithiin",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Who is the lead in 'Businessman'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Ram Charan",
  "op3": "Mahesh Babu",
  "op4": "NTR Jr.",
  "ans": "Mahesh Babu"
},
{
  "ques": "Who played 'Seethamma' in 'Seethamma Vakitlo Sirimalle Chettu'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Tamannaah",
  "op3": "Anushka Shetty",
  "op4": "Shruti Haasan",
  "ans": "Samantha"
}
,
{
  "ques": "Who is the music director known as 'Rockstar DSP'?<br><br>",
  "quesType": "mcq",
  "op1": "M.M. Keeravani",
  "op2": "Anirudh Ravichander",
  "op3": "Devi Sri Prasad",
  "op4": "Thaman S",
  "ans": "Devi Sri Prasad"
},
{
  "ques": "Who played the female lead in 'Attarintiki Daredi'?<br><br>",
  "quesType": "mcq",
  "op1": "Kajal Aggarwal",
  "op2": "Samantha",
  "op3": "Tamannaah",
  "op4": "Rakul Preet Singh",
  "ans": "Samantha"
},
{
  "ques": "Which movie features the famous song 'Mind Block'?<br><br>",
  "quesType": "mcq",
  "op1": "Sarileru Neekevvaru",
  "op2": "Aagadu",
  "op3": "Pokiri",
  "op4": "Spyder",
  "ans": "Sarileru Neekevvaru"
},
{
  "ques": "Which actor is known as 'Rowdy' in Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Jr NTR",
  "op3": "Vijay Deverakonda",
  "op4": "Prabhas",
  "ans": "Vijay Deverakonda"
},
{
  "ques": "Who directed 'Bharat Ane Nenu'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Rajamouli",
  "op3": "Koratala Siva",
  "op4": "Trivikram",
  "ans": "Koratala Siva"
},
{
  "ques": "Who played the lead role in 'Hello'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Akhil Akkineni",
  "op3": "Naga Chaitanya",
  "op4": "Ram Pothineni",
  "ans": "Akhil Akkineni"
},
{
  "ques": "Which movie did Jr NTR play triple roles in?<br><br>",
  "quesType": "mcq",
  "op1": "Temper",
  "op2": "Janatha Garage",
  "op3": "Jai Lava Kusa",
  "op4": "Aravinda Sametha",
  "ans": "Jai Lava Kusa"
},
{
  "ques": "Which actress starred in 'Rangasthalam'?<br><br>",
  "quesType": "mcq",
  "op1": "Kajal Aggarwal",
  "op2": "Pooja Hegde",
  "op3": "Samantha",
  "op4": "Tamannaah",
  "ans": "Samantha"
},
{
  "ques": "Which Tollywood hero starred in 'Sarrainodu'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Allu Arjun",
  "op3": "Prabhas",
  "op4": "Jr NTR",
  "ans": "Allu Arjun"
},
{
  "ques": "Who directed the movie 'Legend'?<br><br>",
  "quesType": "mcq",
  "op1": "Boyapati Srinu",
  "op2": "Trivikram",
  "op3": "Sukumar",
  "op4": "Krish",
  "ans": "Boyapati Srinu"
},
{
  "ques": "Who played the female lead in 'Fidaa'?<br><br>",
  "quesType": "mcq",
  "op1": "Rakul Preet Singh",
  "op2": "Tamannaah",
  "op3": "Sai Pallavi",
  "op4": "Pooja Hegde",
  "ans": "Sai Pallavi"
},
{
  "ques": "Which hero is called 'Supreme Hero'?<br><br>",
  "quesType": "mcq",
  "op1": "Varun Tej",
  "op2": "Sai Dharam Tej",
  "op3": "Nithiin",
  "op4": "Sharwanand",
  "ans": "Sai Dharam Tej"
},
{
  "ques": "Which movie is a remake of 'Theri' in Telugu?<br><br>",
  "quesType": "mcq",
  "op1": "Bheeshma",
  "op2": "Whistle",
  "op3": "Vakeel Saab",
  "op4": "Hello Guru Prema Kosame",
  "ans": "Whistle"
},
{
  "ques": "Who played the hero in 'Bheeshma'?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Nani",
  "op3": "Vijay Deverakonda",
  "op4": "Varun Tej",
  "ans": "Nithiin"
},
{
  "ques": "Who is the director of 'Jersey'?<br><br>",
  "quesType": "mcq",
  "op1": "Gowtam Tinnanuri",
  "op2": "Sukumar",
  "op3": "Rajamouli",
  "op4": "Krish",
  "ans": "Gowtam Tinnanuri"
},
{
  "ques": "Which actor is known for 'Middle Class Abbayi'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Nithiin",
  "op3": "Ram Pothineni",
  "op4": "Sharwanand",
  "ans": "Nani"
},
{
  "ques": "Who is the hero of 'Hello Guru Prema Kosame'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Pothineni",
  "op2": "Nani",
  "op3": "Akhil Akkineni",
  "op4": "Nithiin",
  "ans": "Ram Pothineni"
},
{
  "ques": "Which movie stars Ram Charan as a deaf village youth?<br><br>",
  "quesType": "mcq",
  "op1": "Dhruva",
  "op2": "Rangasthalam",
  "op3": "Yevadu",
  "op4": "Govindudu Andarivadele",
  "ans": "Rangasthalam"
},
{
  "ques": "Which hero is called 'Mega Power Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Varun Tej",
  "op2": "Ram Charan",
  "op3": "Sai Dharam Tej",
  "op4": "Akhil",
  "ans": "Ram Charan"
},
{
  "ques": "Which hero starred in 'Dhruva'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Jr NTR",
  "op3": "Nani",
  "op4": "Nithiin",
  "ans": "Ram Charan"
},
{
  "ques": "Who directed 'Arya'?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Sukumar",
  "op3": "Trivikram",
  "op4": "Boyapati Srinu",
  "ans": "Sukumar"
},
{
  "ques": "Who played the lead in 'Gangleader'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Pothineni",
  "op2": "Nani",
  "op3": "Vijay Deverakonda",
  "op4": "Nithiin",
  "ans": "Nani"
},
{
  "ques": "Which hero starred in 'Vakeel Saab'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Pawan Kalyan",
  "op3": "Ram Charan",
  "op4": "Jr NTR",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Who directed 'Orange'?<br><br>",
  "quesType": "mcq",
  "op1": "Bhaskar",
  "op2": "Trivikram",
  "op3": "Sukumar",
  "op4": "Krish",
  "ans": "Bhaskar"
},
{
  "ques": "Which Tollywood hero starred in 'Ready'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Pothineni",
  "op2": "Nithiin",
  "op3": "Ram Charan",
  "op4": "Prabhas",
  "ans": "Ram Pothineni"
},
{
  "ques": "Who played the heroine in 'Nenu Local'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Kajal Aggarwal",
  "op3": "Keerthy Suresh",
  "op4": "Samantha",
  "ans": "Keerthy Suresh"
},
{
  "ques": "Which movie is known for the song 'Ramulo Ramulaa'?<br><br>",
  "quesType": "mcq",
  "op1": "Pushpa",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "DJ",
  "op4": "Sarrainodu",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Which movie is a remake of 'Pink' in Telugu?<br><br>",
  "quesType": "mcq",
  "op1": "Vakeel Saab",
  "op2": "Whistle",
  "op3": "Fidaa",
  "op4": "Jersey",
  "ans": "Vakeel Saab"
},
{
  "ques": "Who is the hero of 'Mr. Majnu'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Akhil Akkineni",
  "op3": "Naga Chaitanya",
  "op4": "Nithiin",
  "ans": "Akhil Akkineni"
},
{
  "ques": "Which actor starred in 'Solo Brathuke So Better'?<br><br>",
  "quesType": "mcq",
  "op1": "Varun Tej",
  "op2": "Sai Dharam Tej",
  "op3": "Nithiin",
  "op4": "Ram Pothineni",
  "ans": "Sai Dharam Tej"
}
,
{
  "ques": "Which actor is called 'Power Star' in Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Nagarjuna",
  "op3": "Pawan Kalyan",
  "op4": "Balakrishna",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Who played the female lead in *Baahubali*?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Anushka Shetty",
  "op3": "Kajal Aggarwal",
  "op4": "Pooja Hegde",
  "ans": "Tamannaah"
},
{
  "ques": "Who is Mahesh Babu’s father, also a superstar?<br><br>",
  "quesType": "mcq",
  "op1": "NTR",
  "op2": "Krishna",
  "op3": "Nagarjuna",
  "op4": "Chiranjeevi",
  "ans": "Krishna"
},
{
  "ques": "Which movie marked Jr. NTR’s debut?<br><br>",
  "quesType": "mcq",
  "op1": "Aadi",
  "op2": "Student No.1",
  "op3": "Simhadri",
  "op4": "Yamadonga",
  "ans": "Student No.1"
},
{
  "ques": "Who directed *Pushpa*?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Boyapati Srinu",
  "op3": "Sukumar",
  "op4": "Trivikram",
  "ans": "Sukumar"
},
{
  "ques": "Which film has the song 'Butta Bomma'?<br><br>",
  "quesType": "mcq",
  "op1": "Ala Vaikunthapurramuloo",
  "op2": "Pushpa",
  "op3": "DJ",
  "op4": "Julayi",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Which actor is known as 'Natural Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Vijay Deverakonda",
  "op3": "Nithiin",
  "op4": "Sharwanand",
  "ans": "Nani"
},
{
  "ques": "Who played Geetha Govindam hero?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Vijay Deverakonda",
  "op3": "Nani",
  "op4": "Ram Charan",
  "ans": "Vijay Deverakonda"
},
{
  "ques": "Which film has the famous line 'Cheppanu Brother'?<br><br>",
  "quesType": "mcq",
  "op1": "Gabbar Singh",
  "op2": "Race Gurram",
  "op3": "Arya 2",
  "op4": "Julayi",
  "ans": "Race Gurram"
},
{
  "ques": "Who is the heroine in *Ala Vaikunthapurramuloo*?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Kajal Aggarwal",
  "op3": "Pooja Hegde",
  "op4": "Tamannaah",
  "ans": "Pooja Hegde"
},
{
  "ques": "Who is the lead actor in *Spyder*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Allu Arjun",
  "op3": "Mahesh Babu",
  "op4": "Prabhas",
  "ans": "Mahesh Babu"
},
{
  "ques": "Which movie is a hit remake of *Thuppakki*?<br><br>",
  "quesType": "mcq",
  "op1": "Dhruva",
  "op2": "Spyder",
  "op3": "Vakeel Saab",
  "op4": "Bharat Ane Nenu",
  "ans": "Spyder"
},
{
  "ques": "Who played the villain in *Eega*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Sudeep",
  "op3": "Sonu Sood",
  "op4": "Prakash Raj",
  "ans": "Sudeep"
},
{
  "ques": "Who is the female lead in *Dookudu*?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Tamannaah",
  "op3": "Kajal Aggarwal",
  "op4": "Pooja Hegde",
  "ans": "Samantha"
},
{
  "ques": "Who is the hero in *Hello Guru Prema Kosame*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Nithiin",
  "op3": "Ram Pothineni",
  "op4": "Sharwanand",
  "ans": "Ram Pothineni"
},
{
  "ques": "Who directed *Athadu*?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Sukumar",
  "op3": "Trivikram",
  "op4": "Boyapati Srinu",
  "ans": "Trivikram"
},
{
  "ques": "Who acted as Bujji in *Bujjigadu*?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Allu Arjun",
  "op3": "Ram Charan",
  "op4": "Mahesh Babu",
  "ans": "Prabhas"
},
{
  "ques": "Which film stars Ravi Teja as an encounter specialist?<br><br>",
  "quesType": "mcq",
  "op1": "Kick",
  "op2": "Don Seenu",
  "op3": "Power",
  "op4": "Balupu",
  "ans": "Power"
},
{
  "ques": "Which movie is known for the song 'Srivalli'?<br><br>",
  "quesType": "mcq",
  "op1": "Pushpa",
  "op2": "DJ",
  "op3": "Ala Vaikunthapurramuloo",
  "op4": "Sarrainodu",
  "ans": "Pushpa"
},
{
  "ques": "Who is the lead in *Gaddalakonda Ganesh*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Ram Charan",
  "op3": "Varun Tej",
  "op4": "Vijay Deverakonda",
  "ans": "Varun Tej"
},
{
  "ques": "Who is the lead in *Bhale Bhale Magadivoy*?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Nani",
  "op3": "Sharwanand",
  "op4": "Ram Pothineni",
  "ans": "Nani"
},
{
  "ques": "Who directed *Baadshah*?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Trivikram",
  "op3": "Sreenu Vaitla",
  "op4": "Sukumar",
  "ans": "Sreenu Vaitla"
},
{
  "ques": "Who is the female lead in *Sye Raa Narasimha Reddy*?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Samantha",
  "op3": "Kajal Aggarwal",
  "op4": "Pooja Hegde",
  "ans": "Tamannaah"
},
{
  "ques": "Which hero starred in *Manam* with Nagarjuna?<br><br>",
  "quesType": "mcq",
  "op1": "Naga Chaitanya",
  "op2": "Nithiin",
  "op3": "Nani",
  "op4": "Ram Charan",
  "ans": "Naga Chaitanya"
},
{
  "ques": "Who is the director of *Magadheera*?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Sukumar",
  "op3": "Trivikram",
  "op4": "Boyapati Srinu",
  "ans": "Rajamouli"
},
{
  "ques": "Who is the heroine in *Ye Maaya Chesave*?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Kajal Aggarwal",
  "op3": "Samantha",
  "op4": "Shruti Haasan",
  "ans": "Samantha"
},
{
  "ques": "Who played the lead in *Premam* (Telugu)?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Sharwanand",
  "op3": "Naga Chaitanya",
  "op4": "Nani",
  "ans": "Naga Chaitanya"
},
{
  "ques": "Who is the hero in *Red*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Ram Pothineni",
  "op3": "Nithiin",
  "op4": "Nani",
  "ans": "Ram Pothineni"
},
{
  "ques": "Which hero acted in *Middle Class Abbayi (MCA)*?<br><br>",
  "quesType": "mcq",
  "op1": "Sharwanand",
  "op2": "Nani",
  "op3": "Nithiin",
  "op4": "Naga Chaitanya",
  "ans": "Nani"
}
,
{
  "ques": "Who directed the movie 'Bahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Rajamouli",
  "op3": "Koratala Siva",
  "op4": "Boyapati Srinu",
  "ans": "Rajamouli"
},
{
  "ques": "Who is the lead actor in 'Srimanthudu'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Ram Charan",
  "op3": "Mahesh Babu",
  "op4": "Allu Arjun",
  "ans": "Mahesh Babu"
},
{
  "ques": "Which movie is known for the song 'Butta Bomma'?<br><br>",
  "quesType": "mcq",
  "op1": "Arya 2",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "Sarrainodu",
  "op4": "Pushpa",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who is known as 'Mass Maharaja'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Ravi Teja",
  "op3": "Nithiin",
  "op4": "Ram",
  "ans": "Ravi Teja"
},
{
  "ques": "Who is the lead actress in 'Geetha Govindam'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Kajal Aggarwal",
  "op3": "Rashmika Mandanna",
  "op4": "Tamannaah",
  "ans": "Rashmika Mandanna"
},
{
  "ques": "Which film stars Vijay Deverakonda as Arjun Reddy?<br><br>",
  "quesType": "mcq",
  "op1": "Dear Comrade",
  "op2": "World Famous Lover",
  "op3": "Arjun Reddy",
  "op4": "Taxiwaala",
  "ans": "Arjun Reddy"
},
{
  "ques": "Who is the director of 'Pushpa'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Trivikram",
  "op3": "Rajamouli",
  "op4": "Boyapati Srinu",
  "ans": "Sukumar"
},
{
  "ques": "Who is the hero in 'Gabbar Singh'?<br><br>",
  "quesType": "mcq",
  "op1": "Pawan Kalyan",
  "op2": "Ram Charan",
  "op3": "NTR Jr.",
  "op4": "Mahesh Babu",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Which movie has the dialogue 'Nuvvu Naku Nachav'?<br><br>",
  "quesType": "mcq",
  "op1": "Nuvvu Naaku Nachav",
  "op2": "Athadu",
  "op3": "Pokiri",
  "op4": "Arya",
  "ans": "Nuvvu Naaku Nachav"
},
{
  "ques": "Who is the lead in 'Badri'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Allu Arjun",
  "op3": "Mahesh Babu",
  "op4": "Pawan Kalyan",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Who is the lead actress in 'DJ: Duvvada Jagannadham'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Pooja Hegde",
  "op3": "Kajal Aggarwal",
  "op4": "Tamannaah",
  "ans": "Pooja Hegde"
},
{
  "ques": "Which Tollywood actor is known as 'Natural Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Nani",
  "op3": "Allu Arjun",
  "op4": "Prabhas",
  "ans": "Nani"
},
{
  "ques": "Who directed 'Eega'?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram",
  "op2": "Sukumar",
  "op3": "Rajamouli",
  "op4": "Boyapati Srinu",
  "ans": "Rajamouli"
},
{
  "ques": "Who is the lead actor in 'Hello'?<br><br>",
  "quesType": "mcq",
  "op1": "Naga Chaitanya",
  "op2": "Akhil Akkineni",
  "op3": "Ram Pothineni",
  "op4": "Nithiin",
  "ans": "Akhil Akkineni"
},
{
  "ques": "Who is the lead actor in 'RX 100'?<br><br>",
  "quesType": "mcq",
  "op1": "Vijay Deverakonda",
  "op2": "Nithiin",
  "op3": "Kartikeya",
  "op4": "Nikhil",
  "ans": "Kartikeya"
},
{
  "ques": "Who directed 'Athadu'?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram",
  "op2": "Sukumar",
  "op3": "Rajamouli",
  "op4": "Puri Jagannadh",
  "ans": "Trivikram"
},
{
  "ques": "Who played the female lead in 'Fidaa'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Rashmika Mandanna",
  "op3": "Samantha",
  "op4": "Sai Pallavi",
  "ans": "Sai Pallavi"
},
{
  "ques": "Who starred in 'Krishnarjuna Yuddham'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Ram Charan",
  "op3": "Nithiin",
  "op4": "Allu Arjun",
  "ans": "Nani"
},
{
  "ques": "Who is known as 'Victory Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Venkatesh",
  "op2": "Nagarjuna",
  "op3": "Chiranjeevi",
  "op4": "Balakrishna",
  "ans": "Venkatesh"
},
{
  "ques": "Who starred as 'DJ' in 'Duvvada Jagannadham'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Allu Arjun",
  "op3": "Mahesh Babu",
  "op4": "NTR Jr.",
  "ans": "Allu Arjun"
},
{
  "ques": "Who directed 'Legend'?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Boyapati Srinu",
  "op3": "Trivikram",
  "op4": "Sukumar",
  "ans": "Boyapati Srinu"
},
{
  "ques": "Who is the hero in 'Chitralahari'?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Sai Dharam Tej",
  "op3": "Nani",
  "op4": "Naga Chaitanya",
  "ans": "Sai Dharam Tej"
},
{
  "ques": "Who starred in 'Khaidi No. 150'?<br><br>",
  "quesType": "mcq",
  "op1": "Balakrishna",
  "op2": "Chiranjeevi",
  "op3": "NTR Jr.",
  "op4": "Prabhas",
  "ans": "Chiranjeevi"
},
{
  "ques": "Who is the lead in 'Mr. Perfect'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Ram Charan",
  "op3": "Mahesh Babu",
  "op4": "Allu Arjun",
  "ans": "Prabhas"
},
{
  "ques": "Who is the lead actress in 'Ninnu Kori'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Anushka Shetty",
  "op3": "Nivetha Thomas",
  "op4": "Rashmika Mandanna",
  "ans": "Nivetha Thomas"
},
{
  "ques": "Who directed 'Ismart Shankar'?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram",
  "op2": "Sukumar",
  "op3": "Puri Jagannadh",
  "op4": "Boyapati Srinu",
  "ans": "Puri Jagannadh"
},
{
  "ques": "Who is the lead actor in 'Bheeshma'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Ram Pothineni",
  "op3": "Nithiin",
  "op4": "Vijay Deverakonda",
  "ans": "Nithiin"
},
{
  "ques": "Who is the lead in 'Goodachari'?<br><br>",
  "quesType": "mcq",
  "op1": "Adivi Sesh",
  "op2": "Nani",
  "op3": "Ram",
  "op4": "Naga Chaitanya",
  "ans": "Adivi Sesh"
},
{
  "ques": "Who played the heroine in 'Hello Guru Prema Kosame'?<br><br>",
  "quesType": "mcq",
  "op1": "Rashmika Mandanna",
  "op2": "Tamannaah",
  "op3": "Anupama Parameswaran",
  "op4": "Kajal Aggarwal",
  "ans": "Anupama Parameswaran"
},
{
  "ques": "Who starred as the hero in 'Nannaku Prematho'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "NTR Jr.",
  "op3": "Prabhas",
  "op4": "Mahesh Babu",
  "ans": "NTR Jr."
}
,
{
  "ques": "Which actor is called 'Mega Power Star' in Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Varun Tej",
  "op3": "Allu Arjun",
  "op4": "Sai Dharam Tej",
  "ans": "Ram Charan"
},
{
  "ques": "Which movie features the song 'Seeti Maar'?<br><br>",
  "quesType": "mcq",
  "op1": "DJ",
  "op2": "Sarrainodu",
  "op3": "Race Gurram",
  "op4": "Pushpa",
  "ans": "DJ"
},
{
  "ques": "Who is the director of *Aravinda Sametha*?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Trivikram",
  "op3": "Boyapati Srinu",
  "op4": "Rajamouli",
  "ans": "Trivikram"
},
{
  "ques": "Which hero starred in *Fidaa*?<br><br>",
  "quesType": "mcq",
  "op1": "Varun Tej",
  "op2": "Naga Chaitanya",
  "op3": "Nithiin",
  "op4": "Ram Charan",
  "ans": "Varun Tej"
},
{
  "ques": "Which actress starred in *Geetha Govindam*?<br><br>",
  "quesType": "mcq",
  "op1": "Rashmika Mandanna",
  "op2": "Pooja Hegde",
  "op3": "Tamannaah",
  "op4": "Samantha",
  "ans": "Rashmika Mandanna"
},
{
  "ques": "Who is known as 'Stylish Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Allu Arjun",
  "op3": "Nani",
  "op4": "Nithiin",
  "ans": "Allu Arjun"
},
{
  "ques": "Which movie has the famous dialogue 'Taggede Le'?<br><br>",
  "quesType": "mcq",
  "op1": "Pushpa",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "DJ",
  "op4": "Julayi",
  "ans": "Pushpa"
},
{
  "ques": "Who played the villain in *Temper*?<br><br>",
  "quesType": "mcq",
  "op1": "Prakash Raj",
  "op2": "Posani Krishna Murali",
  "op3": "Kajal Aggarwal",
  "op4": "Pradeep Rawat",
  "ans": "Prakash Raj"
},
{
  "ques": "Which hero starred in *Hello* (2017)?<br><br>",
  "quesType": "mcq",
  "op1": "Akhil Akkineni",
  "op2": "Naga Chaitanya",
  "op3": "Ram Pothineni",
  "op4": "Nithiin",
  "ans": "Akhil Akkineni"
},
{
  "ques": "Which movie marked Vijay Deverakonda’s major breakthrough?<br><br>",
  "quesType": "mcq",
  "op1": "Arjun Reddy",
  "op2": "Geetha Govindam",
  "op3": "Dear Comrade",
  "op4": "Taxiwaala",
  "ans": "Arjun Reddy"
},
{
  "ques": "Which hero is known for the title 'Rebel Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Gopichand",
  "op3": "Allu Arjun",
  "op4": "Ravi Teja",
  "ans": "Prabhas"
},
{
  "ques": "Who directed *Julayi*?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram",
  "op2": "Sukumar",
  "op3": "Rajamouli",
  "op4": "Boyapati Srinu",
  "ans": "Trivikram"
},
{
  "ques": "Which movie features the song 'Samajavaragamana'?<br><br>",
  "quesType": "mcq",
  "op1": "DJ",
  "op2": "Pushpa",
  "op3": "Ala Vaikunthapurramuloo",
  "op4": "Sarrainodu",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who is the hero in *iSmart Shankar*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Pothineni",
  "op2": "Nani",
  "op3": "Sharwanand",
  "op4": "Nithiin",
  "ans": "Ram Pothineni"
},
{
  "ques": "Which hero starred in *Gabbar Singh*?<br><br>",
  "quesType": "mcq",
  "op1": "Pawan Kalyan",
  "op2": "Allu Arjun",
  "op3": "Ram Charan",
  "op4": "Nagarjuna",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Who composed music for *Baahubali*?<br><br>",
  "quesType": "mcq",
  "op1": "Thaman S",
  "op2": "Devi Sri Prasad",
  "op3": "M. M. Keeravani",
  "op4": "Anirudh",
  "ans": "M. M. Keeravani"
},
{
  "ques": "Which movie stars Mahesh Babu as Chief Minister?<br><br>",
  "quesType": "mcq",
  "op1": "Spyder",
  "op2": "Bharat Ane Nenu",
  "op3": "Srimanthudu",
  "op4": "Maharshi",
  "ans": "Bharat Ane Nenu"
},
{
  "ques": "Which hero acted in *Nenu Sailaja*?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Ram Pothineni",
  "op3": "Nani",
  "op4": "Sharwanand",
  "ans": "Ram Pothineni"
},
{
  "ques": "Who played the hero in *Srimanthudu*?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "Ram Charan",
  "op3": "NTR",
  "op4": "Allu Arjun",
  "ans": "Mahesh Babu"
},
{
  "ques": "Who directed *Eega*?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram",
  "op2": "Rajamouli",
  "op3": "Sukumar",
  "op4": "Boyapati Srinu",
  "ans": "Rajamouli"
},
{
  "ques": "Which film is about boxing starring Varun Tej?<br><br>",
  "quesType": "mcq",
  "op1": "Fidaa",
  "op2": "Gaddalakonda Ganesh",
  "op3": "Ghani",
  "op4": "Loafer",
  "ans": "Ghani"
},
{
  "ques": "Who starred as hero in *Uppena*?<br><br>",
  "quesType": "mcq",
  "op1": "Vijay Deverakonda",
  "op2": "Sai Dharam Tej",
  "op3": "Vaisshnav Tej",
  "op4": "Nithiin",
  "ans": "Vaisshnav Tej"
},
{
  "ques": "Who directed *Sarrainodu*?<br><br>",
  "quesType": "mcq",
  "op1": "Boyapati Srinu",
  "op2": "Sukumar",
  "op3": "Rajamouli",
  "op4": "Trivikram",
  "ans": "Boyapati Srinu"
},
{
  "ques": "Which hero acted in *Majili*?<br><br>",
  "quesType": "mcq",
  "op1": "Naga Chaitanya",
  "op2": "Nani",
  "op3": "Sharwanand",
  "op4": "Nithiin",
  "ans": "Naga Chaitanya"
},
{
  "ques": "Which film features the song 'Vachinde'?<br><br>",
  "quesType": "mcq",
  "op1": "Fidaa",
  "op2": "Geetha Govindam",
  "op3": "DJ",
  "op4": "Pushpa",
  "ans": "Fidaa"
},
{
  "ques": "Who is the hero of *Dhruva*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Nithiin",
  "op3": "Allu Arjun",
  "op4": "Mahesh Babu",
  "ans": "Ram Charan"
},
{
  "ques": "Who played hero in *Jersey*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Nithiin",
  "op3": "Sharwanand",
  "op4": "Ram Pothineni",
  "ans": "Nani"
},
{
  "ques": "Which movie stars Allu Arjun as a DJ?<br><br>",
  "quesType": "mcq",
  "op1": "Sarrainodu",
  "op2": "DJ",
  "op3": "Julayi",
  "op4": "Race Gurram",
  "ans": "DJ"
},
{
  "ques": "Who directed *Arya*?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Sukumar",
  "op3": "Trivikram",
  "op4": "Boyapati Srinu",
  "ans": "Sukumar"
},
{
  "ques": "Which hero starred in *Rangasthalam*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Ram Charan",
  "op3": "Allu Arjun",
  "op4": "Mahesh Babu",
  "ans": "Ram Charan"
}
,
{
  "ques": "Who played the title role in 'Magadheera'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Allu Arjun",
  "op3": "Prabhas",
  "op4": "NTR Jr.",
  "ans": "Ram Charan"
},
{
  "ques": "Who directed 'Arya'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Trivikram",
  "op3": "Rajamouli",
  "op4": "Puri Jagannadh",
  "ans": "Sukumar"
},
{
  "ques": "Which movie stars Ram Charan and Samantha?<br><br>",
  "quesType": "mcq",
  "op1": "Yevadu",
  "op2": "Rangasthalam",
  "op3": "Dhruva",
  "op4": "Govindudu Andarivadele",
  "ans": "Rangasthalam"
},
{
  "ques": "Who is the heroine in 'Julayi'?<br><br>",
  "quesType": "mcq",
  "op1": "Ileana D'Cruz",
  "op2": "Kajal Aggarwal",
  "op3": "Samantha",
  "op4": "Tamannaah",
  "ans": "Ileana D'Cruz"
},
{
  "ques": "Which film features the song 'Pakka Local'?<br><br>",
  "quesType": "mcq",
  "op1": "Janatha Garage",
  "op2": "Temper",
  "op3": "Baadshah",
  "op4": "Brindavanam",
  "ans": "Janatha Garage"
},
{
  "ques": "Who directed 'Pokiri'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Puri Jagannadh",
  "op3": "Trivikram",
  "op4": "Boyapati Srinu",
  "ans": "Puri Jagannadh"
},
{
  "ques": "Who is the music director of 'Ala Vaikunthapurramuloo'?<br><br>",
  "quesType": "mcq",
  "op1": "Devi Sri Prasad",
  "op2": "Thaman S",
  "op3": "Mani Sharma",
  "op4": "M.M. Keeravani",
  "ans": "Thaman S"
},
{
  "ques": "Who starred in 'Orange'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "NTR Jr.",
  "op3": "Mahesh Babu",
  "op4": "Allu Arjun",
  "ans": "Ram Charan"
},
{
  "ques": "Who is the lead actress in 'Race Gurram'?<br><br>",
  "quesType": "mcq",
  "op1": "Shruti Haasan",
  "op2": "Tamannaah",
  "op3": "Samantha",
  "op4": "Kajal Aggarwal",
  "ans": "Shruti Haasan"
},
{
  "ques": "Who played the role of 'Bheem' in 'RRR'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "NTR Jr.",
  "op3": "Prabhas",
  "op4": "Allu Arjun",
  "ans": "NTR Jr."
},
{
  "ques": "Which film is known for the dialogue 'Mind Block'?<br><br>",
  "quesType": "mcq",
  "op1": "Sarileru Neekevvaru",
  "op2": "Maharshi",
  "op3": "Bharat Ane Nenu",
  "op4": "Spyder",
  "ans": "Sarileru Neekevvaru"
},
{
  "ques": "Who directed 'Jalsa'?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram",
  "op2": "Sukumar",
  "op3": "Puri Jagannadh",
  "op4": "Rajamouli",
  "ans": "Trivikram"
},
{
  "ques": "Who is the lead actor in 'Sarrainodu'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "NTR Jr.",
  "op3": "Allu Arjun",
  "op4": "Mahesh Babu",
  "ans": "Allu Arjun"
},
{
  "ques": "Who played the female lead in 'Eega'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Tamannaah",
  "op3": "Kajal Aggarwal",
  "op4": "Rakul Preet Singh",
  "ans": "Samantha"
},
{
  "ques": "Which actor starred in 'Gabbar Singh'?<br><br>",
  "quesType": "mcq",
  "op1": "Pawan Kalyan",
  "op2": "Ram Charan",
  "op3": "NTR Jr.",
  "op4": "Mahesh Babu",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Who directed 'Attarintiki Daredi'?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram",
  "op2": "Sukumar",
  "op3": "Rajamouli",
  "op4": "Puri Jagannadh",
  "ans": "Trivikram"
},
{
  "ques": "Who is known as 'Rebel Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Allu Arjun",
  "op3": "Ram Charan",
  "op4": "NTR Jr.",
  "ans": "Prabhas"
},
{
  "ques": "Who starred in 'Businessman'?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "Ram Charan",
  "op3": "NTR Jr.",
  "op4": "Allu Arjun",
  "ans": "Mahesh Babu"
},
{
  "ques": "Which movie features the song 'Ramulo Ramulaa'?<br><br>",
  "quesType": "mcq",
  "op1": "Ala Vaikunthapurramuloo",
  "op2": "Sarileru Neekevvaru",
  "op3": "Pushpa",
  "op4": "Sarrainodu",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who played the female lead in 'Nannaku Prematho'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Rakul Preet Singh",
  "op3": "Samantha",
  "op4": "Anushka Shetty",
  "ans": "Rakul Preet Singh"
},
{
  "ques": "Who directed 'Dhruva'?<br><br>",
  "quesType": "mcq",
  "op1": "Surender Reddy",
  "op2": "Sukumar",
  "op3": "Boyapati Srinu",
  "op4": "Trivikram",
  "ans": "Surender Reddy"
},
{
  "ques": "Who played the hero in 'Hello'?<br><br>",
  "quesType": "mcq",
  "op1": "Akhil Akkineni",
  "op2": "Naga Chaitanya",
  "op3": "Ram Pothineni",
  "op4": "Nithiin",
  "ans": "Akhil Akkineni"
},
{
  "ques": "Which actor is called 'Stylish Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Allu Arjun",
  "op3": "NTR Jr.",
  "op4": "Mahesh Babu",
  "ans": "Allu Arjun"
},
{
  "ques": "Who directed 'Bahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Rajamouli",
  "op3": "Boyapati Srinu",
  "op4": "Trivikram",
  "ans": "Rajamouli"
},
{
  "ques": "Who played the role of 'Komaram Bheem' in 'RRR'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "NTR Jr.",
  "op3": "Prabhas",
  "op4": "Allu Arjun",
  "ans": "NTR Jr."
},
{
  "ques": "Who is the lead actor in 'Vakeel Saab'?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "Pawan Kalyan",
  "op3": "Ram Charan",
  "op4": "Allu Arjun",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Which movie is known for the song 'Seeti Maar'?<br><br>",
  "quesType": "mcq",
  "op1": "DJ: Duvvada Jagannadham",
  "op2": "Race Gurram",
  "op3": "Sarrainodu",
  "op4": "Ala Vaikunthapurramuloo",
  "ans": "DJ: Duvvada Jagannadham"
},
{
  "ques": "Who starred in 'Srimanthudu'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Mahesh Babu",
  "op3": "Allu Arjun",
  "op4": "NTR Jr.",
  "ans": "Mahesh Babu"
},
{
  "ques": "Who is the music director of 'Pushpa'?<br><br>",
  "quesType": "mcq",
  "op1": "Devi Sri Prasad",
  "op2": "Thaman S",
  "op3": "Mani Sharma",
  "op4": "Anirudh",
  "ans": "Devi Sri Prasad"
},
{
  "ques": "Who played the heroine in 'Majili'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Tamannaah",
  "op3": "Rakul Preet Singh",
  "op4": "Anushka Shetty",
  "ans": "Samantha"
},
{
  "ques": "Who played the hero in 'Jersey'?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Nani",
  "op3": "Ram",
  "op4": "Akhil Akkineni",
  "ans": "Nani"
}
,
{
  "ques": "Which Tollywood movie was India's official entry to the Oscars 2022?<br><br>",
  "quesType": "mcq",
  "op1": "Pushpa",
  "op2": "Jersey",
  "op3": "RRR",
  "op4": "Cinema Bandi",
  "ans": "Cinema Bandi"
},
{
  "ques": "Who directed the blockbuster movie 'Pushpa: The Rise'?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram Srinivas",
  "op2": "Sukumar",
  "op3": "Boyapati Srinu",
  "op4": "Koratala Siva",
  "ans": "Sukumar"
},
{
  "ques": "Which actor is known for the dialogue 'Taggede Le' from 'Pushpa'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Allu Arjun",
  "op3": "Ram Charan",
  "op4": "Nani",
  "ans": "Allu Arjun"
},
{
  "ques": "Who played the heroine in the movie 'Geetha Govindam'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Rashmika Mandanna",
  "op3": "Tamannaah",
  "op4": "Pooja Hegde",
  "ans": "Rashmika Mandanna"
},
{
  "ques": "Which movie features the famous song 'Butta Bomma'?<br><br>",
  "quesType": "mcq",
  "op1": "Sarileru Neekevvaru",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "DJ",
  "op4": "Aravinda Sametha",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who is the director of 'Eega', a film where the hero is reborn as a fly?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Rajamouli",
  "op3": "Trivikram",
  "op4": "Boyapati Srinu",
  "ans": "Rajamouli"
},
{
  "ques": "Which actor starred in the title role of 'Bhagavanth Kesari'?<br><br>",
  "quesType": "mcq",
  "op1": "Balakrishna",
  "op2": "Chiranjeevi",
  "op3": "Venkatesh",
  "op4": "Nagarjuna",
  "ans": "Balakrishna"
},
{
  "ques": "Who played the lead in 'Love Story' (2021)?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Naga Chaitanya",
  "op3": "Ram Pothineni",
  "op4": "Nani",
  "ans": "Naga Chaitanya"
},
{
  "ques": "Which Tollywood movie's background score became a viral dance trend on reels?<br><br>",
  "quesType": "mcq",
  "op1": "RRR",
  "op2": "Pushpa",
  "op3": "Sarkaru Vaari Paata",
  "op4": "Radhe Shyam",
  "ans": "Pushpa"
},
{
  "ques": "Who is known as 'Natural Star' in Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Ram Charan",
  "op3": "Prabhas",
  "op4": "Nithiin",
  "ans": "Nani"
},
{
  "ques": "Which film marked Mahesh Babu's debut as a child artist?<br><br>",
  "quesType": "mcq",
  "op1": "Rajakumarudu",
  "op2": "Needa",
  "op3": "Murari",
  "op4": "Bobby",
  "ans": "Needa"
},
{
  "ques": "Which Tollywood actor owns the production house G. Mahesh Babu Entertainment?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Mahesh Babu",
  "op3": "Naga Chaitanya",
  "op4": "Nithiin",
  "ans": "Mahesh Babu"
},
{
  "ques": "Who composed music for 'Baahubali' series?<br><br>",
  "quesType": "mcq",
  "op1": "Anirudh Ravichander",
  "op2": "M.M. Keeravani",
  "op3": "Devi Sri Prasad",
  "op4": "Thaman S",
  "ans": "M.M. Keeravani"
},
{
  "ques": "In which movie did Prabhas play dual roles named 'Shivudu' and 'Mahendra Baahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "Mirchi",
  "op2": "Saaho",
  "op3": "Baahubali",
  "op4": "Rebel",
  "ans": "Baahubali"
},
{
  "ques": "Which film features Allu Arjun as 'Pushpa Raj'?<br><br>",
  "quesType": "mcq",
  "op1": "Ala Vaikunthapurramuloo",
  "op2": "Pushpa: The Rise",
  "op3": "DJ",
  "op4": "Sarrainodu",
  "ans": "Pushpa: The Rise"
},
{
  "ques": "Who played the female lead in 'Radhe Shyam'?<br><br>",
  "quesType": "mcq",
  "op1": "Rashmika Mandanna",
  "op2": "Pooja Hegde",
  "op3": "Tamannaah",
  "op4": "Samantha",
  "ans": "Pooja Hegde"
},
{
  "ques": "Which actor starred in 'Goodachari', a spy thriller?<br><br>",
  "quesType": "mcq",
  "op1": "Naga Chaitanya",
  "op2": "Adivi Sesh",
  "op3": "Nithiin",
  "op4": "Nani",
  "ans": "Adivi Sesh"
},
{
  "ques": "Which hero is known as 'Rebel Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Allu Arjun",
  "op3": "Ram Charan",
  "op4": "Naga Chaitanya",
  "ans": "Prabhas"
},
{
  "ques": "Who is the director of 'RRR'?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Sukumar",
  "op3": "Trivikram",
  "op4": "Boyapati Srinu",
  "ans": "Rajamouli"
},
{
  "ques": "Which actor played the role of Komaram Bheem in 'RRR'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Prabhas",
  "op3": "Jr NTR",
  "op4": "Allu Arjun",
  "ans": "Jr NTR"
},
{
  "ques": "In which film did Nani play the role of a cricketer?<br><br>",
  "quesType": "mcq",
  "op1": "MCA",
  "op2": "Jersey",
  "op3": "Ninnu Kori",
  "op4": "Bhale Bhale Magadivoy",
  "ans": "Jersey"
},
{
  "ques": "Which hero is also known as 'Power Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Nithiin",
  "op3": "Pawan Kalyan",
  "op4": "Sai Dharam Tej",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Which movie is a sports drama starring Naga Chaitanya and Sai Pallavi?<br><br>",
  "quesType": "mcq",
  "op1": "Love Story",
  "op2": "Majili",
  "op3": "Venky Mama",
  "op4": "Thank You",
  "ans": "Love Story"
},
{
  "ques": "Which film's tagline is 'Yuddham Sharanam Gachchami'?<br><br>",
  "quesType": "mcq",
  "op1": "Baahubali",
  "op2": "Sye",
  "op3": "Magadheera",
  "op4": "Chatrapathi",
  "ans": "Baahubali"
},
{
  "ques": "Which hero played the role of 'DJ' in the movie 'DJ: Duvvada Jagannadham'?<br><br>",
  "quesType": "mcq",
  "op1": "Allu Arjun",
  "op2": "Ram Charan",
  "op3": "Nani",
  "op4": "Jr NTR",
  "ans": "Allu Arjun"
},
{
  "ques": "Who is the heroine of 'Sarileru Neekevvaru'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Rashmika Mandanna",
  "op3": "Tamannaah",
  "op4": "Pooja Hegde",
  "ans": "Rashmika Mandanna"
},
{
  "ques": "Which film won the National Award for Best Popular Film in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "RRR",
  "op2": "Pushpa",
  "op3": "Major",
  "op4": "Love Story",
  "ans": "RRR"
},
{
  "ques": "Who played the villain in 'Ala Vaikunthapurramuloo'?<br><br>",
  "quesType": "mcq",
  "op1": "Sushanth",
  "op2": "Samuthirakani",
  "op3": "Jayaram",
  "op4": "Murali Sharma",
  "ans": "Samuthirakani"
},
{
  "ques": "Which hero starred in 'Venky Mama' along with Venkatesh?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Naga Chaitanya",
  "op3": "Nithiin",
  "op4": "Sai Dharam Tej",
  "ans": "Naga Chaitanya"
},
{
  "ques": "Which movie was directed by Hanu Raghavapudi and stars Dulquer Salmaan?<br><br>",
  "quesType": "mcq",
  "op1": "Mahanati",
  "op2": "Sita Ramam",
  "op3": "Lie",
  "op4": "Krishna Gaadi Veera Prema Gaadha",
  "ans": "Sita Ramam"
}
,
{
  "ques": "Which actor is known as 'Natural Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Nithiin",
  "op3": "Sharwanand",
  "op4": "Akhil",
  "ans": "Nani"
},
{
  "ques": "Who directed *Pokiri*?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Puri Jagannadh",
  "op3": "Trivikram",
  "op4": "Boyapati Srinu",
  "ans": "Puri Jagannadh"
},
{
  "ques": "Who is the heroine of *Pokiri*?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Ileana",
  "op3": "Tamannaah",
  "op4": "Kajal Aggarwal",
  "ans": "Ileana"
},
{
  "ques": "Which hero acted in *Bheeshma*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Nithiin",
  "op3": "Ram Pothineni",
  "op4": "Sharwanand",
  "ans": "Nithiin"
},
{
  "ques": "Which movie has the tagline 'The Businessman'?<br><br>",
  "quesType": "mcq",
  "op1": "Pokiri",
  "op2": "Temper",
  "op3": "Businessman",
  "op4": "Dhruva",
  "ans": "Businessman"
},
{
  "ques": "Who played the lead in *Orange*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Naga Chaitanya",
  "op3": "Allu Arjun",
  "op4": "Nithiin",
  "ans": "Ram Charan"
},
{
  "ques": "Which film stars Mahesh Babu and Samantha?<br><br>",
  "quesType": "mcq",
  "op1": "Dookudu",
  "op2": "Srimanthudu",
  "op3": "Maharshi",
  "op4": "Spyder",
  "ans": "Dookudu"
},
{
  "ques": "Who directed *Rangasthalam*?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram",
  "op2": "Rajamouli",
  "op3": "Sukumar",
  "op4": "Puri Jagannadh",
  "ans": "Sukumar"
},
{
  "ques": "Which movie is known for the dialogue 'Cheppanu Brother'?<br><br>",
  "quesType": "mcq",
  "op1": "Sarrainodu",
  "op2": "DJ",
  "op3": "Race Gurram",
  "op4": "Julayi",
  "ans": "Race Gurram"
},
{
  "ques": "Who starred in *Yevadu*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Allu Arjun",
  "op3": "Ram Charan",
  "op4": "Mahesh Babu",
  "ans": "Ram Charan"
},
{
  "ques": "Which hero acted in *Akhanda*?<br><br>",
  "quesType": "mcq",
  "op1": "NTR",
  "op2": "Balakrishna",
  "op3": "Nagarjuna",
  "op4": "Chiranjeevi",
  "ans": "Balakrishna"
},
{
  "ques": "Which film is *Prabhas* debut?<br><br>",
  "quesType": "mcq",
  "op1": "Varsham",
  "op2": "Eeswar",
  "op3": "Chatrapathi",
  "op4": "Darling",
  "ans": "Eeswar"
},
{
  "ques": "Who starred in *Nannaku Prematho*?<br><br>",
  "quesType": "mcq",
  "op1": "Allu Arjun",
  "op2": "NTR",
  "op3": "Ram Charan",
  "op4": "Mahesh Babu",
  "ans": "NTR"
},
{
  "ques": "Who is the heroine of *S/O Satyamurthy*?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Kajal Aggarwal",
  "op3": "Ileana",
  "op4": "Tamannaah",
  "ans": "Samantha"
},
{
  "ques": "Who directed *Legend*?<br><br>",
  "quesType": "mcq",
  "op1": "Boyapati Srinu",
  "op2": "Sukumar",
  "op3": "Trivikram",
  "op4": "Puri Jagannadh",
  "ans": "Boyapati Srinu"
},
{
  "ques": "Which movie is the remake of *Thani Oruvan*?<br><br>",
  "quesType": "mcq",
  "op1": "Dhruva",
  "op2": "Spyder",
  "op3": "Sarrainodu",
  "op4": "Nenu Local",
  "ans": "Dhruva"
},
{
  "ques": "Which hero starred in *Sita Ramam*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Dulquer Salmaan",
  "op3": "Sharwanand",
  "op4": "Nithiin",
  "ans": "Dulquer Salmaan"
},
{
  "ques": "Who is the hero of *Pelli Choopulu*?<br><br>",
  "quesType": "mcq",
  "op1": "Naga Chaitanya",
  "op2": "Nani",
  "op3": "Vijay Deverakonda",
  "op4": "Sharwanand",
  "ans": "Vijay Deverakonda"
},
{
  "ques": "Which movie has the famous song 'Butta Bomma'?<br><br>",
  "quesType": "mcq",
  "op1": "DJ",
  "op2": "Pushpa",
  "op3": "Ala Vaikunthapurramuloo",
  "op4": "Geetha Govindam",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who starred in *Gentleman* (2016)?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Sharwanand",
  "op3": "Nani",
  "op4": "Akhil",
  "ans": "Nani"
},
{
  "ques": "Who is the hero of *Venky Mama*?<br><br>",
  "quesType": "mcq",
  "op1": "Venkatesh & Naga Chaitanya",
  "op2": "Venkatesh & Nani",
  "op3": "Nagarjuna & Naga Chaitanya",
  "op4": "Nithiin & Ram Pothineni",
  "ans": "Venkatesh & Naga Chaitanya"
},
{
  "ques": "Who directed *Idiot*?<br><br>",
  "quesType": "mcq",
  "op1": "Puri Jagannadh",
  "op2": "Trivikram",
  "op3": "Rajamouli",
  "op4": "Sukumar",
  "ans": "Puri Jagannadh"
},
{
  "ques": "Which hero starred in *Kushi* (2023)?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Naga Chaitanya",
  "op3": "Sharwanand",
  "op4": "Vijay Deverakonda",
  "ans": "Vijay Deverakonda"
},
{
  "ques": "Who starred in *Rowdy Fellow*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Nara Rohit",
  "op3": "Nithiin",
  "op4": "Sharwanand",
  "ans": "Nara Rohit"
},
{
  "ques": "Who is the hero of *Oopiri*?<br><br>",
  "quesType": "mcq",
  "op1": "Nagarjuna & Karthi",
  "op2": "Nani & Nithiin",
  "op3": "Sharwanand & Ram",
  "op4": "Naga Chaitanya & Akhil",
  "ans": "Nagarjuna & Karthi"
},
{
  "ques": "Who directed *Chandramukhi*?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Sukumar",
  "op3": "P. Vasu",
  "op4": "Puri Jagannadh",
  "ans": "P. Vasu"
},
{
  "ques": "Which hero starred in *Bommarillu*?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Nagarjuna",
  "op3": "Siddharth",
  "op4": "Ram Charan",
  "ans": "Siddharth"
},
{
  "ques": "Who starred in *Tholi Prema* (2018)?<br><br>",
  "quesType": "mcq",
  "op1": "Varun Tej",
  "op2": "Ram Pothineni",
  "op3": "Nithiin",
  "op4": "Sharwanand",
  "ans": "Varun Tej"
},
{
  "ques": "Who is the heroine of *Majili*?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Rashmika Mandanna",
  "op3": "Samantha",
  "op4": "Kajal Aggarwal",
  "ans": "Samantha"
},
{
  "ques": "Who starred in *Taxiwaala*?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Vijay Deverakonda",
  "op3": "Nani",
  "op4": "Ram Charan",
  "ans": "Vijay Deverakonda"
}
,
{
  "ques": "Who played the lead in 'Temper'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Allu Arjun",
  "op3": "NTR Jr.",
  "op4": "Mahesh Babu",
  "ans": "NTR Jr."
},
{
  "ques": "Who directed 'Temper'?<br><br>",
  "quesType": "mcq",
  "op1": "Puri Jagannadh",
  "op2": "Trivikram",
  "op3": "Sukumar",
  "op4": "Rajamouli",
  "ans": "Puri Jagannadh"
},
{
  "ques": "Which actress starred in 'Geetha Govindam'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Rashmika Mandanna",
  "op3": "Tamannaah",
  "op4": "Kajal Aggarwal",
  "ans": "Rashmika Mandanna"
},
{
  "ques": "Who is known as 'Natural Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Ram Charan",
  "op3": "NTR Jr.",
  "op4": "Mahesh Babu",
  "ans": "Nani"
},
{
  "ques": "Who directed 'Fidaa'?<br><br>",
  "quesType": "mcq",
  "op1": "Sekhar Kammula",
  "op2": "Trivikram",
  "op3": "Rajamouli",
  "op4": "Sukumar",
  "ans": "Sekhar Kammula"
},
{
  "ques": "Who played the heroine in 'Fidaa'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Sai Pallavi",
  "op3": "Samantha",
  "op4": "Kajal Aggarwal",
  "ans": "Sai Pallavi"
},
{
  "ques": "Which movie features the song 'Vachinde'?<br><br>",
  "quesType": "mcq",
  "op1": "Fidaa",
  "op2": "Arjun Reddy",
  "op3": "Geetha Govindam",
  "op4": "Majili",
  "ans": "Fidaa"
},
{
  "ques": "Who is the hero of 'Arjun Reddy'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Vijay Deverakonda",
  "op3": "Ram",
  "op4": "Nithiin",
  "ans": "Vijay Deverakonda"
},
{
  "ques": "Who directed 'Arjun Reddy'?<br><br>",
  "quesType": "mcq",
  "op1": "Sandeep Reddy Vanga",
  "op2": "Trivikram",
  "op3": "Sekhar Kammula",
  "op4": "Rajamouli",
  "ans": "Sandeep Reddy Vanga"
},
{
  "ques": "Which film stars Naga Chaitanya and Samantha together?<br><br>",
  "quesType": "mcq",
  "op1": "Majili",
  "op2": "100% Love",
  "op3": "Ye Maaya Chesave",
  "op4": "All of the above",
  "ans": "All of the above"
},
{
  "ques": "Who played the hero in 'Goodachari'?<br><br>",
  "quesType": "mcq",
  "op1": "Adivi Sesh",
  "op2": "Nani",
  "op3": "Nithiin",
  "op4": "Ram Pothineni",
  "ans": "Adivi Sesh"
},
{
  "ques": "Who directed 'Goodachari'?<br><br>",
  "quesType": "mcq",
  "op1": "Sashi Kiran Tikka",
  "op2": "Sandeep Reddy Vanga",
  "op3": "Trivikram",
  "op4": "Puri Jagannadh",
  "ans": "Sashi Kiran Tikka"
},
{
  "ques": "Which film is known for the song 'Samajavaragamana'?<br><br>",
  "quesType": "mcq",
  "op1": "Sarileru Neekevvaru",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "DJ",
  "op4": "Pushpa",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who is the lead actor in 'Krack'?<br><br>",
  "quesType": "mcq",
  "op1": "Venkatesh",
  "op2": "Ravi Teja",
  "op3": "Balakrishna",
  "op4": "Nagarjuna",
  "ans": "Ravi Teja"
},
{
  "ques": "Who directed 'Krack'?<br><br>",
  "quesType": "mcq",
  "op1": "Gopichand Malineni",
  "op2": "Boyapati Srinu",
  "op3": "Trivikram",
  "op4": "Rajamouli",
  "ans": "Gopichand Malineni"
},
{
  "ques": "Who starred in 'Disco Raja'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram",
  "op2": "Ravi Teja",
  "op3": "Nithiin",
  "op4": "Nani",
  "ans": "Ravi Teja"
},
{
  "ques": "Who directed 'Disco Raja'?<br><br>",
  "quesType": "mcq",
  "op1": "Vi Anand",
  "op2": "Gopichand Malineni",
  "op3": "Trivikram",
  "op4": "Sekhar Kammula",
  "ans": "Vi Anand"
},
{
  "ques": "Who played the lead in 'Middle Class Abbayi (MCA)'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Nithiin",
  "op3": "Ram",
  "op4": "Naga Chaitanya",
  "ans": "Nani"
},
{
  "ques": "Which actress starred opposite Nani in 'MCA'?<br><br>",
  "quesType": "mcq",
  "op1": "Rashmika Mandanna",
  "op2": "Sai Pallavi",
  "op3": "Tamannaah",
  "op4": "Kajal Aggarwal",
  "ans": "Sai Pallavi"
},
{
  "ques": "Who is the lead actor in 'Chitralahari'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Sai Dharam Tej",
  "op3": "Ram",
  "op4": "Nithiin",
  "ans": "Sai Dharam Tej"
},
{
  "ques": "Who starred in 'Supreme'?<br><br>",
  "quesType": "mcq",
  "op1": "Varun Tej",
  "op2": "Sai Dharam Tej",
  "op3": "Ram Charan",
  "op4": "Naga Chaitanya",
  "ans": "Sai Dharam Tej"
},
{
  "ques": "Who is known as 'Mega Prince'?<br><br>",
  "quesType": "mcq",
  "op1": "Varun Tej",
  "op2": "Ram Charan",
  "op3": "Allu Arjun",
  "op4": "Nithiin",
  "ans": "Varun Tej"
},
{
  "ques": "Who directed 'F3'?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Ravipudi",
  "op2": "Trivikram",
  "op3": "Rajamouli",
  "op4": "Boyapati Srinu",
  "ans": "Anil Ravipudi"
},
{
  "ques": "Which film stars Venkatesh and Varun Tej together?<br><br>",
  "quesType": "mcq",
  "op1": "F2",
  "op2": "F3",
  "op3": "Both F2 and F3",
  "op4": "None",
  "ans": "Both F2 and F3"
},
{
  "ques": "Who is the lead actress in 'F2'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Kajal Aggarwal",
  "op3": "Rashmika Mandanna",
  "op4": "Sai Pallavi",
  "ans": "Tamannaah"
},
{
  "ques": "Who played the hero in 'iSmart Shankar'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Pothineni",
  "op2": "Nithiin",
  "op3": "Nani",
  "op4": "Akhil",
  "ans": "Ram Pothineni"
},
{
  "ques": "Who directed 'iSmart Shankar'?<br><br>",
  "quesType": "mcq",
  "op1": "Puri Jagannadh",
  "op2": "Trivikram",
  "op3": "Rajamouli",
  "op4": "Boyapati Srinu",
  "ans": "Puri Jagannadh"
},
{
  "ques": "Which film features the character 'Pandaga Chesko'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Pothineni",
  "op2": "Nithiin",
  "op3": "Sai Dharam Tej",
  "op4": "Varun Tej",
  "ans": "Ram Pothineni"
},
{
  "ques": "Who starred in 'Hello Guru Prema Kosame'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Pothineni",
  "op2": "Nithiin",
  "op3": "Nani",
  "op4": "Akhil Akkineni",
  "ans": "Ram Pothineni"
},
{
  "ques": "Who played the heroine in 'Hello Guru Prema Kosame'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Rashmika Mandanna",
  "op3": "Anupama Parameswaran",
  "op4": "Samantha",
  "ans": "Anupama Parameswaran"
}
,

]

let codingmovie2Arr=[
  {
  "ques": "Which film marked Mahesh Babu’s debut as a lead actor?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Kumarudu",
  "op2": "Murari",
  "op3": "Okkadu",
  "op4": "Vamsi",
  "ans": "Raja Kumarudu"
},
{
  "ques": "Who composed the music for *Ala Vaikunthapurramuloo*?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Thaman S",
  "op3": "Anirudh",
  "op4": "Harris Jayaraj",
  "ans": "Thaman S"
},
{
  "ques": "Who played the antagonist in *Temper*?<br><br>",
  "quesType": "mcq",
  "op1": "Prakash Raj",
  "op2": "Sonu Sood",
  "op3": "Rahul Dev",
  "op4": "Sayaji Shinde",
  "ans": "Prakash Raj"
},
{
  "ques": "Which Tollywood film inspired the Hindi film *Rowdy Rathore*?<br><br>",
  "quesType": "mcq",
  "op1": "Vikramarkudu",
  "op2": "Kick",
  "op3": "Chatrapathi",
  "op4": "Yamadonga",
  "ans": "Vikramarkudu"
},
{
  "ques": "Which movie features the famous dialogue 'Nenu Local'?<br><br>",
  "quesType": "mcq",
  "op1": "Nenu Sailaja",
  "op2": "Nenu Local",
  "op3": "Nani’s Gang Leader",
  "op4": "Majnu",
  "ans": "Nenu Local"
},
{
  "ques": "Which hero played dual roles in *Adhurs*?<br><br>",
  "quesType": "mcq",
  "op1": "NTR Jr.",
  "op2": "Ram Charan",
  "op3": "Prabhas",
  "op4": "Allu Arjun",
  "ans": "NTR Jr."
},
{
  "ques": "Which movie was dubbed in Hindi as *The Return of Rebel*?<br><br>",
  "quesType": "mcq",
  "op1": "Chatrapathi",
  "op2": "Billa",
  "op3": "Rebel",
  "op4": "Saaho",
  "ans": "Rebel"
},
{
  "ques": "Who is the director of *Swamy Ra Ra*?<br><br>",
  "quesType": "mcq",
  "op1": "Sudeer Varma",
  "op2": "Krish",
  "op3": "Koratala Siva",
  "op4": "Sekhar Kammula",
  "ans": "Sudeer Varma"
},
{
  "ques": "Which hero starred in *Jersey*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram",
  "op2": "Nani",
  "op3": "Nithiin",
  "op4": "Akhil",
  "ans": "Nani"
},
{
  "ques": "Who played the villain in *Sarrainodu*?<br><br>",
  "quesType": "mcq",
  "op1": "Aadhi Pinisetty",
  "op2": "Arvind Swami",
  "op3": "Jagapathi Babu",
  "op4": "Rahul Dev",
  "ans": "Aadhi Pinisetty"
},
{
  "ques": "Who composed music for *Pushpa*?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Anirudh",
  "op3": "Gopi Sundar",
  "op4": "Harris Jayaraj",
  "ans": "DSP"
},
{
  "ques": "Who was the heroine of *Julayi*?<br><br>",
  "quesType": "mcq",
  "op1": "Ileana",
  "op2": "Tamannaah",
  "op3": "Kajal Aggarwal",
  "op4": "Samantha",
  "ans": "Ileana"
},
{
  "ques": "Which film has the hit song 'Samajavaragamana'?<br><br>",
  "quesType": "mcq",
  "op1": "DJ",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "Pushpa",
  "op4": "Sarrainodu",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who played the female lead in *Geetha Govindam*?<br><br>",
  "quesType": "mcq",
  "op1": "Rashmika Mandanna",
  "op2": "Samantha",
  "op3": "Tamannaah",
  "op4": "Anupama Parameswaran",
  "ans": "Rashmika Mandanna"
},
{
  "ques": "Who directed *Arya*?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Boyapati Srinu",
  "op3": "Sukumar",
  "op4": "Trivikram",
  "ans": "Sukumar"
},
{
  "ques": "Who played the main villain in *Dhruva*?<br><br>",
  "quesType": "mcq",
  "op1": "Arvind Swami",
  "op2": "Aadhi",
  "op3": "Prakash Raj",
  "op4": "Rao Ramesh",
  "ans": "Arvind Swami"
},
{
  "ques": "Who directed *Gamyam*?<br><br>",
  "quesType": "mcq",
  "op1": "Koratala Siva",
  "op2": "Krish",
  "op3": "Trivikram",
  "op4": "Sukumar",
  "ans": "Krish"
},
{
  "ques": "Who composed music for *Eega*?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "M.M. Keeravani",
  "op3": "Anirudh",
  "op4": "Harris Jayaraj",
  "ans": "M.M. Keeravani"
},
{
  "ques": "Who played the lead in *Manam*?<br><br>",
  "quesType": "mcq",
  "op1": "Nagarjuna",
  "op2": "Naga Chaitanya",
  "op3": "Both Nagarjuna & Naga Chaitanya",
  "op4": "Akhil",
  "ans": "Both Nagarjuna & Naga Chaitanya"
},
{
  "ques": "Who directed *Mirchi*?<br><br>",
  "quesType": "mcq",
  "op1": "Koratala Siva",
  "op2": "Sukumar",
  "op3": "Boyapati Srinu",
  "op4": "Trivikram",
  "ans": "Koratala Siva"
},
{
  "ques": "Which movie was remade in Hindi as *Jersey*?<br><br>",
  "quesType": "mcq",
  "op1": "Jersey",
  "op2": "Majili",
  "op3": "Nani's Gang Leader",
  "op4": "MCA",
  "ans": "Jersey"
},
{
  "ques": "Who played the heroine in *DJ*?<br><br>",
  "quesType": "mcq",
  "op1": "Rashmika Mandanna",
  "op2": "Pooja Hegde",
  "op3": "Kajal Aggarwal",
  "op4": "Tamannaah",
  "ans": "Pooja Hegde"
},
{
  "ques": "Who played *Gona Ganna Reddy* in *Rudhramadevi*?<br><br>",
  "quesType": "mcq",
  "op1": "Rana Daggubati",
  "op2": "NTR Jr.",
  "op3": "Allu Arjun",
  "op4": "Prabhas",
  "ans": "Allu Arjun"
},
{
  "ques": "Who is the music director of *Tholi Prema* (2018)?<br><br>",
  "quesType": "mcq",
  "op1": "Thaman S",
  "op2": "DSP",
  "op3": "Anirudh",
  "op4": "Gopi Sundar",
  "ans": "Thaman S"
},
{
  "ques": "Who directed *Leader*?<br><br>",
  "quesType": "mcq",
  "op1": "Shekhar Kammula",
  "op2": "Krish",
  "op3": "Sukumar",
  "op4": "Rajamouli",
  "ans": "Shekhar Kammula"
},
{
  "ques": "Which hero starred in *Ek Mini Katha*?<br><br>",
  "quesType": "mcq",
  "op1": "Santosh Shoban",
  "op2": "Sree Vishnu",
  "op3": "Satyadev",
  "op4": "Adivi Sesh",
  "ans": "Santosh Shoban"
},
{
  "ques": "Who played *Subramanyam* in *Subramanyam for Sale*?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Ram Pothineni",
  "op3": "Sai Dharam Tej",
  "op4": "Sharwanand",
  "ans": "Sai Dharam Tej"
},
{
  "ques": "Which movie is based on boxing and starred Varun Tej?<br><br>",
  "quesType": "mcq",
  "op1": "Tholi Prema",
  "op2": "Fidaa",
  "op3": "Gaddalakonda Ganesh",
  "op4": "Ghani",
  "ans": "Ghani"
},
{
  "ques": "Which movie has the lead pair meeting at a wedding event?<br><br>",
  "quesType": "mcq",
  "op1": "Ninnu Kori",
  "op2": "Sammohanam",
  "op3": "Most Eligible Bachelor",
  "op4": "Tholi Prema",
  "ans": "Most Eligible Bachelor"
},
{
  "ques": "Who composed music for *Sarkaru Vaari Paata*?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Thaman S",
  "op3": "Anirudh",
  "op4": "Mani Sharma",
  "ans": "Thaman S"
}
,
{
  "ques": "Who composed the music for 'Ala Vaikunthapurramuloo'?<br><br>",
  "quesType": "mcq",
  "op1": "Thaman S",
  "op2": "Devi Sri Prasad",
  "op3": "Anirudh",
  "op4": "Mani Sharma",
  "ans": "Thaman S"
},
{
  "ques": "Who played the antagonist in 'Pushpa: The Rise'?<br><br>",
  "quesType": "mcq",
  "op1": "Fahadh Faasil",
  "op2": "Prakash Raj",
  "op3": "Jagapathi Babu",
  "op4": "Rao Ramesh",
  "ans": "Fahadh Faasil"
},
{
  "ques": "Who directed 'Eega'?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Sukumar",
  "op3": "Trivikram",
  "op4": "Vamsi Paidipally",
  "ans": "Rajamouli"
},
{
  "ques": "What is the character name of Mahesh Babu in 'Pokiri'?<br><br>",
  "quesType": "mcq",
  "op1": "Gautham",
  "op2": "Pandugadu",
  "op3": "Krishna",
  "op4": "Pandugadu / Pandu",
  "ans": "Pandugadu / Pandu"
},
{
  "ques": "Which Tollywood movie was dubbed into Tamil as 'Maattrraan'?<br><br>",
  "quesType": "mcq",
  "op1": "Eega",
  "op2": "Brothers",
  "op3": "Businessman",
  "op4": "Baahubali",
  "ans": "Brothers"
},
{
  "ques": "Who played the female lead in 'Legend'?<br><br>",
  "quesType": "mcq",
  "op1": "Anushka Shetty",
  "op2": "Rakul Preet Singh",
  "op3": "Sonal Chauhan",
  "op4": "Tamannaah",
  "ans": "Sonal Chauhan"
},
{
  "ques": "Which movie marked Allu Arjun's debut?<br><br>",
  "quesType": "mcq",
  "op1": "Gangotri",
  "op2": "Arya",
  "op3": "Bunny",
  "op4": "Happy",
  "ans": "Gangotri"
},
{
  "ques": "Who directed 'Mirchi'?<br><br>",
  "quesType": "mcq",
  "op1": "Koratala Siva",
  "op2": "Boyapati Srinu",
  "op3": "Vamsi Paidipally",
  "op4": "Sukumar",
  "ans": "Koratala Siva"
},
{
  "ques": "Which is the first movie in the 'Gabbar Singh' franchise?<br><br>",
  "quesType": "mcq",
  "op1": "Gabbar Singh",
  "op2": "Sardaar Gabbar Singh",
  "op3": "Jalsa",
  "op4": "Attarintiki Daredi",
  "ans": "Gabbar Singh"
},
{
  "ques": "Who composed the music for 'Attarintiki Daredi'?<br><br>",
  "quesType": "mcq",
  "op1": "Mani Sharma",
  "op2": "Thaman S",
  "op3": "Anirudh",
  "op4": "Devi Sri Prasad",
  "ans": "Devi Sri Prasad"
},
{
  "ques": "Which actor did the movie 'Karthikeya 2' star?<br><br>",
  "quesType": "mcq",
  "op1": "Vijay Deverakonda",
  "op2": "Nikhil Siddharth",
  "op3": "Nithiin",
  "op4": "Nani",
  "ans": "Nikhil Siddharth"
},
{
  "ques": "Who directed 'Jersey'?<br><br>",
  "quesType": "mcq",
  "op1": "Sandeep Vanga",
  "op2": "Gowtam Tinnanuri",
  "op3": "Krish",
  "op4": "Sekhar Kammula",
  "ans": "Gowtam Tinnanuri"
},
{
  "ques": "Which movie is based on a chess player?<br><br>",
  "quesType": "mcq",
  "op1": "Oopiri",
  "op2": "Yevade Subramanyam",
  "op3": "Gambler",
  "op4": "Maharshi",
  "ans": "Gambler"
},
{
  "ques": "Who starred as 'Bhishma'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram",
  "op2": "Nithiin",
  "op3": "Nani",
  "op4": "Akhil",
  "ans": "Nithiin"
},
{
  "ques": "Who directed 'Srimanthudu'?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Boyapati Srinu",
  "op3": "Koratala Siva",
  "op4": "Trivikram",
  "ans": "Koratala Siva"
},
{
  "ques": "Who played the villain in 'Race Gurram'?<br><br>",
  "quesType": "mcq",
  "op1": "Prakash Raj",
  "op2": "Ravi Kishan",
  "op3": "Jagapathi Babu",
  "op4": "Mukesh Rishi",
  "ans": "Ravi Kishan"
},
{
  "ques": "Which movie features the character 'Subramanyam'?<br><br>",
  "quesType": "mcq",
  "op1": "Subramanyam For Sale",
  "op2": "Bhale Bhale Magadivoy",
  "op3": "Yevadu",
  "op4": "Kumari 21F",
  "ans": "Subramanyam For Sale"
},
{
  "ques": "Who played the hero in 'Oopiri'?<br><br>",
  "quesType": "mcq",
  "op1": "Venkatesh",
  "op2": "Nagarjuna",
  "op3": "Ram Charan",
  "op4": "NTR Jr.",
  "ans": "Nagarjuna"
},
{
  "ques": "Which actress played the female lead in 'Bhale Bhale Magadivoy'?<br><br>",
  "quesType": "mcq",
  "op1": "Kajal Aggarwal",
  "op2": "Tamannaah",
  "op3": "Lavanya Tripathi",
  "op4": "Rashmika Mandanna",
  "ans": "Lavanya Tripathi"
},
{
  "ques": "Who directed 'Sye'?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Boyapati Srinu",
  "op3": "Koratala Siva",
  "op4": "Sukumar",
  "ans": "Rajamouli"
},
{
  "ques": "Which movie features the character 'Bujji'?<br><br>",
  "quesType": "mcq",
  "op1": "Bujjigadu",
  "op2": "Darling",
  "op3": "Arya 2",
  "op4": "Happy",
  "ans": "Bujjigadu"
},
{
  "ques": "Who is the music composer for 'Pushpa'?<br><br>",
  "quesType": "mcq",
  "op1": "Anirudh",
  "op2": "DSP",
  "op3": "Thaman S",
  "op4": "GV Prakash",
  "ans": "DSP"
},
{
  "ques": "Which movie is set in the backdrop of Rayalaseema faction?<br><br>",
  "quesType": "mcq",
  "op1": "Legend",
  "op2": "Simha",
  "op3": "Narasimha Naidu",
  "op4": "All of the above",
  "ans": "All of the above"
},
{
  "ques": "Who played the female lead in 'DJ: Duvvada Jagannadham'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Pooja Hegde",
  "op3": "Kajal Aggarwal",
  "op4": "Tamannaah",
  "ans": "Pooja Hegde"
},
{
  "ques": "Who directed 'DJ: Duvvada Jagannadham'?<br><br>",
  "quesType": "mcq",
  "op1": "Harish Shankar",
  "op2": "Trivikram",
  "op3": "Sukumar",
  "op4": "Rajamouli",
  "ans": "Harish Shankar"
},
{
  "ques": "Which film has the dialogue 'Taggede Le'?<br><br>",
  "quesType": "mcq",
  "op1": "Pushpa",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "DJ",
  "op4": "Race Gurram",
  "ans": "Pushpa"
},
{
  "ques": "Who composed the music for 'Rangasthalam'?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Thaman S",
  "op3": "Anirudh",
  "op4": "GV Prakash",
  "ans": "DSP"
},
{
  "ques": "Who played the heroine in 'Ninnu Kori'?<br><br>",
  "quesType": "mcq",
  "op1": "Kajal Aggarwal",
  "op2": "Nivetha Thomas",
  "op3": "Rashmika Mandanna",
  "op4": "Tamannaah",
  "ans": "Nivetha Thomas"
},
{
  "ques": "Who starred as 'Surya' in 'Naa Peru Surya'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Allu Arjun",
  "op3": "NTR Jr.",
  "op4": "Mahesh Babu",
  "ans": "Allu Arjun"
}
,
{
  "ques": "Which Tollywood film was the first to gross over 200 crores worldwide?<br><br>",
  "quesType": "mcq",
  "op1": "Magadheera",
  "op2": "Baahubali: The Beginning",
  "op3": "Srimanthudu",
  "op4": "Attarintiki Daredi",
  "ans": "Baahubali: The Beginning"
},
{
  "ques": "Which hero turned director with the movie 'Manam'?<br><br>",
  "quesType": "mcq",
  "op1": "Nagarjuna",
  "op2": "Naga Chaitanya",
  "op3": "Vikram Kumar",
  "op4": "Akhil Akkineni",
  "ans": "Vikram Kumar"
},
{
  "ques": "Which of these movies is NOT directed by Trivikram Srinivas?<br><br>",
  "quesType": "mcq",
  "op1": "Ala Vaikunthapurramuloo",
  "op2": "Aravinda Sametha",
  "op3": "Attarintiki Daredi",
  "op4": "Baahubali",
  "ans": "Baahubali"
},
{
  "ques": "Who composed the music for 'Pushpa: The Rise'?<br><br>",
  "quesType": "mcq",
  "op1": "Devi Sri Prasad",
  "op2": "Thaman S",
  "op3": "Anirudh Ravichander",
  "op4": "M.M. Keeravani",
  "ans": "Devi Sri Prasad"
},
{
  "ques": "Which actress debuted with the film 'Chalo'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Pooja Hegde",
  "op3": "Rashmika Mandanna",
  "op4": "Tamannaah",
  "ans": "Rashmika Mandanna"
},
{
  "ques": "Who played the main villain in 'Sye'?<br><br>",
  "quesType": "mcq",
  "op1": "Prakash Raj",
  "op2": "Rahul Dev",
  "op3": "Mukesh Rishi",
  "op4": "Jagapathi Babu",
  "ans": "Prakash Raj"
},
{
  "ques": "Which movie is set in the backdrop of Rayalaseema faction wars?<br><br>",
  "quesType": "mcq",
  "op1": "Arya 2",
  "op2": "Aravinda Sametha Veera Raghava",
  "op3": "S/o Satyamurthy",
  "op4": "Julayi",
  "ans": "Aravinda Sametha Veera Raghava"
},
{
  "ques": "Which Tollywood star is also called 'Stylish Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Allu Arjun",
  "op3": "Prabhas",
  "op4": "Nani",
  "ans": "Allu Arjun"
},
{
  "ques": "Which movie was inspired by the Indian badminton player Pullela Gopichand?<br><br>",
  "quesType": "mcq",
  "op1": "Guru",
  "op2": "Jersey",
  "op3": "Gopichand",
  "op4": "Yevade Subramanyam",
  "ans": "Gopichand"
},
{
  "ques": "Which actor sang the popular song 'Peniviti' for his movie?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Vijay Deverakonda",
  "op3": "Jr NTR",
  "op4": "Ram Charan",
  "ans": "Jr NTR"
},
{
  "ques": "Which director is known for socio-fantasy films like 'Magadheera' and 'Eega'?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram Srinivas",
  "op2": "Sukumar",
  "op3": "Rajamouli",
  "op4": "Puri Jagannadh",
  "ans": "Rajamouli"
},
{
  "ques": "Which movie is known for the famous interval fight 'Kondi Scene'?<br><br>",
  "quesType": "mcq",
  "op1": "Simhadri",
  "op2": "Pokiri",
  "op3": "Businessman",
  "op4": "Temper",
  "ans": "Simhadri"
},
{
  "ques": "Which heroine starred opposite Mahesh Babu in 'Bharat Ane Nenu'?<br><br>",
  "quesType": "mcq",
  "op1": "Kiara Advani",
  "op2": "Pooja Hegde",
  "op3": "Rashmika Mandanna",
  "op4": "Tamannaah",
  "ans": "Kiara Advani"
},
{
  "ques": "Which movie is based on the life of Major Sandeep Unnikrishnan?<br><br>",
  "quesType": "mcq",
  "op1": "Goodachari",
  "op2": "Major",
  "op3": "Raja Vikramarka",
  "op4": "PSV Garuda Vega",
  "ans": "Major"
},
{
  "ques": "Who played the role of 'Bhadrudu' in the film 'Baahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Rana Daggubati",
  "op3": "Adivi Sesh",
  "op4": "Nassar",
  "ans": "Adivi Sesh"
},
{
  "ques": "Which movie was the first collaboration of Ram Charan and Sukumar?<br><br>",
  "quesType": "mcq",
  "op1": "Rangasthalam",
  "op2": "Magadheera",
  "op3": "Yevadu",
  "op4": "Dhruva",
  "ans": "Rangasthalam"
},
{
  "ques": "Which hero is famous for the punch dialogue 'Evadu kodithe dimma tirigi mind block avuthundo vaade Pandu Gadu'?<br><br>",
  "quesType": "mcq",
  "op1": "Pawan Kalyan",
  "op2": "Ram Charan",
  "op3": "Mahesh Babu",
  "op4": "NTR",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Which Tollywood hero played the role of a CBI officer in 'Sarkaru Vaari Paata'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Mahesh Babu",
  "op3": "Ram Charan",
  "op4": "Nithiin",
  "ans": "Mahesh Babu"
},
{
  "ques": "Which actor turned producer for the movie 'Ganga'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Nani",
  "op3": "Lawrence",
  "op4": "Adivi Sesh",
  "ans": "Lawrence"
},
{
  "ques": "Which film was remade in Hindi as 'Kabir Singh'?<br><br>",
  "quesType": "mcq",
  "op1": "Arjun Reddy",
  "op2": "Geetha Govindam",
  "op3": "Dear Comrade",
  "op4": "Taxiwaala",
  "ans": "Arjun Reddy"
}
,
{
  "ques": "Which Tollywood movie is known for the dialogue 'Cheppanu Brother'?<br><br>",
  "quesType": "mcq",
  "op1": "Attarintiki Daredi",
  "op2": "S/o Satyamurthy",
  "op3": "Nannaku Prematho",
  "op4": "Temper",
  "ans": "Attarintiki Daredi"
},
{
  "ques": "Who played the role of Sivagami in *Baahubali* series?<br><br>",
  "quesType": "mcq",
  "op1": "Anushka Shetty",
  "op2": "Ramya Krishna",
  "op3": "Nadhiya",
  "op4": "Radhika",
  "ans": "Ramya Krishna"
},
{
  "ques": "Which movie did Pawan Kalyan direct?<br><br>",
  "quesType": "mcq",
  "op1": "Sardaar Gabbar Singh",
  "op2": "Johnny",
  "op3": "Katamarayudu",
  "op4": "Vakeel Saab",
  "ans": "Johnny"
},
{
  "ques": "Who composed music for *Sarileru Neekevvaru*?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Thaman S",
  "op3": "Gopi Sundar",
  "op4": "Anirudh",
  "ans": "DSP"
},
{
  "ques": "Who directed *Nannaku Prematho*?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Trivikram",
  "op3": "VV Vinayak",
  "op4": "Koratala Siva",
  "ans": "Sukumar"
},
{
  "ques": "Which hero played the role of Arjun in *Arjun Suravaram*?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Nikhil Siddhartha",
  "op3": "Nani",
  "op4": "Sharwanand",
  "ans": "Nikhil Siddhartha"
},
{
  "ques": "Who is the heroine in *Majili*?<br><br>",
  "quesType": "mcq",
  "op1": "Rashmika Mandanna",
  "op2": "Samantha",
  "op3": "Tamannaah",
  "op4": "Kajal Aggarwal",
  "ans": "Samantha"
},
{
  "ques": "Which movie marked Anushka Shetty’s solo hit as a warrior queen?<br><br>",
  "quesType": "mcq",
  "op1": "Baahubali",
  "op2": "Rudhramadevi",
  "op3": "Arundhati",
  "op4": "Size Zero",
  "ans": "Rudhramadevi"
},
{
  "ques": "Who played the antagonist in *Race Gurram*?<br><br>",
  "quesType": "mcq",
  "op1": "Ravi Kishan",
  "op2": "Mukesh Rishi",
  "op3": "Prakash Raj",
  "op4": "Rahul Dev",
  "ans": "Ravi Kishan"
},
{
  "ques": "Which movie features the popular song 'Butta Bomma'?<br><br>",
  "quesType": "mcq",
  "op1": "DJ",
  "op2": "Pushpa",
  "op3": "Ala Vaikunthapurramuloo",
  "op4": "Julayi",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who is the director of *Temper*?<br><br>",
  "quesType": "mcq",
  "op1": "Puri Jagannadh",
  "op2": "Trivikram",
  "op3": "VV Vinayak",
  "op4": "Boyapati Srinu",
  "ans": "Puri Jagannadh"
},
{
  "ques": "Which movie is about horse racing and betting?<br><br>",
  "quesType": "mcq",
  "op1": "Race Gurram",
  "op2": "Gentleman",
  "op3": "Athadu",
  "op4": "Rakshasudu",
  "ans": "Gentleman"
},
{
  "ques": "Who played the lead in *Karthikeya*?<br><br>",
  "quesType": "mcq",
  "op1": "Adivi Sesh",
  "op2": "Nikhil Siddhartha",
  "op3": "Nani",
  "op4": "Nithiin",
  "ans": "Nikhil Siddhartha"
},
{
  "ques": "Which heroine debuted opposite Naga Chaitanya in *Ye Maaya Chesave*?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Tamannaah",
  "op3": "Kajal Aggarwal",
  "op4": "Anushka Shetty",
  "ans": "Samantha"
},
{
  "ques": "Who directed *Hello* starring Akhil Akkineni?<br><br>",
  "quesType": "mcq",
  "op1": "Vikram Kumar",
  "op2": "Sekhar Kammula",
  "op3": "Trivikram",
  "op4": "Koratala Siva",
  "ans": "Vikram Kumar"
},
{
  "ques": "Which film features a hero fighting for farmers’ rights?<br><br>",
  "quesType": "mcq",
  "op1": "Srimanthudu",
  "op2": "Bharat Ane Nenu",
  "op3": "Maharshi",
  "op4": "Aravinda Sametha",
  "ans": "Maharshi"
},
{
  "ques": "Who played villain in *Spyder*?<br><br>",
  "quesType": "mcq",
  "op1": "S.J. Suryah",
  "op2": "Aadhi Pinisetty",
  "op3": "Prakash Raj",
  "op4": "Jagapathi Babu",
  "ans": "S.J. Suryah"
},
{
  "ques": "Which actor starred in *Krishna Gaadi Veera Prema Gaadha*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Nithiin",
  "op3": "Sharwanand",
  "op4": "Sai Dharam Tej",
  "ans": "Nani"
},
{
  "ques": "Which movie has the tagline ‘Daring and Dashing’ for the hero?<br><br>",
  "quesType": "mcq",
  "op1": "Dammu",
  "op2": "Temper",
  "op3": "Bruce Lee",
  "op4": "Gabbar Singh",
  "ans": "Gabbar Singh"
},
{
  "ques": "Who directed *Goodachari*?<br><br>",
  "quesType": "mcq",
  "op1": "Sashi Kiran Tikka",
  "op2": "Koratala Siva",
  "op3": "Krish",
  "op4": "Sukumar",
  "ans": "Sashi Kiran Tikka"
},
{
  "ques": "Who was the music director for *Krack*?<br><br>",
  "quesType": "mcq",
  "op1": "Thaman S",
  "op2": "DSP",
  "op3": "Anirudh",
  "op4": "Gopi Sundar",
  "ans": "Thaman S"
},
{
  "ques": "Which movie features Nani as a cricketer turned coach?<br><br>",
  "quesType": "mcq",
  "op1": "Majnu",
  "op2": "Jersey",
  "op3": "MCA",
  "op4": "V",
  "ans": "Jersey"
},
{
  "ques": "Which movie was Puri Jagannadh’s comeback with Vijay Deverakonda?<br><br>",
  "quesType": "mcq",
  "op1": "World Famous Lover",
  "op2": "Dear Comrade",
  "op3": "Liger",
  "op4": "NOTA",
  "ans": "Liger"
},
{
  "ques": "Which hero starred in *Agent Sai Srinivasa Athreya*?<br><br>",
  "quesType": "mcq",
  "op1": "Sree Vishnu",
  "op2": "Nikhil Siddhartha",
  "op3": "Naveen Polishetty",
  "op4": "Nani",
  "ans": "Naveen Polishetty"
},
{
  "ques": "Who composed music for *Uppena*?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Anirudh",
  "op3": "Gopi Sundar",
  "op4": "Thaman S",
  "ans": "DSP"
},
{
  "ques": "Which movie’s famous line is ‘Em Cheppanu Brother’?<br><br>",
  "quesType": "mcq",
  "op1": "Race Gurram",
  "op2": "Attarintiki Daredi",
  "op3": "Julayi",
  "op4": "S/o Satyamurthy",
  "ans": "Attarintiki Daredi"
},
{
  "ques": "Who starred in *Gaddalakonda Ganesh*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Varun Tej",
  "op3": "Vishwak Sen",
  "op4": "Naga Chaitanya",
  "ans": "Varun Tej"
},
{
  "ques": "Who directed *Saaho*?<br><br>",
  "quesType": "mcq",
  "op1": "Sujeeth",
  "op2": "Krish",
  "op3": "Koratala Siva",
  "op4": "Boyapati Srinu",
  "ans": "Sujeeth"
},
{
  "ques": "Which movie’s story revolves around a barber’s life?<br><br>",
  "quesType": "mcq",
  "op1": "Leader",
  "op2": "Vedam",
  "op3": "Maharshi",
  "op4": "Katha Nayakudu",
  "ans": "Katha Nayakudu"
},
{
  "ques": "Who played villain in *Aravinda Sametha*?<br><br>",
  "quesType": "mcq",
  "op1": "Jagapathi Babu",
  "op2": "Prakash Raj",
  "op3": "Rao Ramesh",
  "op4": "Aadhi Pinisetty",
  "ans": "Jagapathi Babu"
}
,
{
  "ques": "Who directed the blockbuster film 'Magadheera'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Rajamouli",
  "op3": "Trivikram",
  "op4": "Krish",
  "ans": "Rajamouli"
},
{
  "ques": "Who is the heroine in 'Magadheera'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Kajal Aggarwal",
  "op3": "Anushka Shetty",
  "op4": "Samantha",
  "ans": "Kajal Aggarwal"
},
{
  "ques": "Who composed the music for 'Baahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Thaman S",
  "op3": "M.M. Keeravani",
  "op4": "Anirudh",
  "ans": "M.M. Keeravani"
},
{
  "ques": "Which movie is based on the life of a fisherman?<br><br>",
  "quesType": "mcq",
  "op1": "Mukkabaaz",
  "op2": "Narappa",
  "op3": "Upena",
  "op4": "Vakeel Saab",
  "ans": "Upena"
},
{
  "ques": "Who played the main villain in 'Sye'?<br><br>",
  "quesType": "mcq",
  "op1": "Pradeep Rawat",
  "op2": "Prakash Raj",
  "op3": "Mukesh Rishi",
  "op4": "Sonu Sood",
  "ans": "Pradeep Rawat"
},
{
  "ques": "Which movie features the popular song 'Butta Bomma'?<br><br>",
  "quesType": "mcq",
  "op1": "Pushpa",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "DJ",
  "op4": "Bheeshma",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who starred opposite Nani in 'Shyam Singha Roy'?<br><br>",
  "quesType": "mcq",
  "op1": "Nivetha Thomas",
  "op2": "Krithi Shetty",
  "op3": "Ritu Varma",
  "op4": "Keerthy Suresh",
  "ans": "Krithi Shetty"
},
{
  "ques": "Which movie is known for the song 'Samajavaragamana'?<br><br>",
  "quesType": "mcq",
  "op1": "Pushpa",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "Geetha Govindam",
  "op4": "DJ",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who directed 'Arjun Reddy'?<br><br>",
  "quesType": "mcq",
  "op1": "Sandeep Reddy Vanga",
  "op2": "Sukumar",
  "op3": "Trivikram",
  "op4": "Koratala Siva",
  "ans": "Sandeep Reddy Vanga"
},
{
  "ques": "Who played the heroine in 'Arjun Reddy'?<br><br>",
  "quesType": "mcq",
  "op1": "Shalini Pandey",
  "op2": "Rashmika Mandanna",
  "op3": "Nivetha Thomas",
  "op4": "Kajal Aggarwal",
  "ans": "Shalini Pandey"
},
{
  "ques": "Who is the director of 'Geetha Govindam'?<br><br>",
  "quesType": "mcq",
  "op1": "Parasuram",
  "op2": "Sukumar",
  "op3": "Koratala Siva",
  "op4": "Trivikram",
  "ans": "Parasuram"
},
{
  "ques": "Which movie is also known as 'RRR'?<br><br>",
  "quesType": "mcq",
  "op1": "Roudram Ranam Rudhiram",
  "op2": "Raghu Romeo Ranga",
  "op3": "Rama Rajyam Ranga",
  "op4": "Rajamouli Rajya Rashtra",
  "ans": "Roudram Ranam Rudhiram"
},
{
  "ques": "Who starred in 'RRR' alongside NTR Jr.?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "Ram Charan",
  "op3": "Prabhas",
  "op4": "Allu Arjun",
  "ans": "Ram Charan"
},
{
  "ques": "Which actress starred in 'RRR'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Kajal Aggarwal",
  "op3": "Alia Bhatt",
  "op4": "Tamannaah",
  "ans": "Alia Bhatt"
},
{
  "ques": "Who composed the background score for 'RRR'?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "M.M. Keeravani",
  "op3": "Thaman S",
  "op4": "Anirudh",
  "ans": "M.M. Keeravani"
},
{
  "ques": "Who played the villain in 'Akhanda'?<br><br>",
  "quesType": "mcq",
  "op1": "Prakash Raj",
  "op2": "Jagapathi Babu",
  "op3": "Srikanth",
  "op4": "Sonu Sood",
  "ans": "Srikanth"
},
{
  "ques": "Which film features the line 'Mind Block'?<br><br>",
  "quesType": "mcq",
  "op1": "Sarkaru Vaari Paata",
  "op2": "Sarileru Neekevvaru",
  "op3": "Bharat Ane Nenu",
  "op4": "Maharshi",
  "ans": "Sarileru Neekevvaru"
},
{
  "ques": "Who played the heroine in 'Sarileru Neekevvaru'?<br><br>",
  "quesType": "mcq",
  "op1": "Pooja Hegde",
  "op2": "Rashmika Mandanna",
  "op3": "Tamannaah",
  "op4": "Keerthy Suresh",
  "ans": "Rashmika Mandanna"
},
{
  "ques": "Which movie's story is about a CM's son? <br><br>",
  "quesType": "mcq",
  "op1": "Maharshi",
  "op2": "Sarkaru Vaari Paata",
  "op3": "Bharat Ane Nenu",
  "op4": "Spyder",
  "ans": "Bharat Ane Nenu"
},
{
  "ques": "Who directed 'Spyder'?<br><br>",
  "quesType": "mcq",
  "op1": "AR Murugadoss",
  "op2": "Sukumar",
  "op3": "Trivikram",
  "op4": "Parasuram",
  "ans": "AR Murugadoss"
},
{
  "ques": "Which movie has Mahesh Babu as an army major?<br><br>",
  "quesType": "mcq",
  "op1": "Spyder",
  "op2": "Sarileru Neekevvaru",
  "op3": "Maharshi",
  "op4": "Bharat Ane Nenu",
  "ans": "Sarileru Neekevvaru"
},
{
  "ques": "Who starred opposite Mahesh Babu in 'Maharshi'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Pooja Hegde",
  "op3": "Rakul Preet Singh",
  "op4": "Keerthy Suresh",
  "ans": "Pooja Hegde"
},
{
  "ques": "Who directed 'Maharshi'?<br><br>",
  "quesType": "mcq",
  "op1": "Vamshi Paidipally",
  "op2": "Trivikram",
  "op3": "AR Murugadoss",
  "op4": "Koratala Siva",
  "ans": "Vamshi Paidipally"
},
{
  "ques": "Which movie stars NTR Jr. as a bank manager?<br><br>",
  "quesType": "mcq",
  "op1": "Aravinda Sametha",
  "op2": "Janatha Garage",
  "op3": "Temper",
  "op4": "Nannaku Prematho",
  "ans": "Nannaku Prematho"
},
{
  "ques": "Which film features the famous dialogue 'I don't care'?<br><br>",
  "quesType": "mcq",
  "op1": "Temper",
  "op2": "Aravinda Sametha",
  "op3": "Nannaku Prematho",
  "op4": "Baadshah",
  "ans": "Nannaku Prematho"
},
{
  "ques": "Who composed the music for 'Nannaku Prematho'?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Thaman S",
  "op3": "M.M. Keeravani",
  "op4": "Anirudh",
  "ans": "DSP"
},
{
  "ques": "Who played the villain in 'Temper'?<br><br>",
  "quesType": "mcq",
  "op1": "Prakash Raj",
  "op2": "Sonu Sood",
  "op3": "Pradeep Rawat",
  "op4": "Prakash Raj",
  "ans": "Prakash Raj"
},
{
  "ques": "Which movie has the theme of saving trees?<br><br>",
  "quesType": "mcq",
  "op1": "Sye",
  "op2": "Janatha Garage",
  "op3": "Baadshah",
  "op4": "Temper",
  "ans": "Janatha Garage"
},
{
  "ques": "Who directed 'Janatha Garage'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Koratala Siva",
  "op3": "Trivikram",
  "op4": "Boyapati Srinu",
  "ans": "Koratala Siva"
}
,
{
  "ques": "Who played the role of Rudramadevi in the movie 'Rudhramadevi'?<br><br>",
  "quesType": "mcq",
  "op1": "Anushka Shetty",
  "op2": "Kajal Aggarwal",
  "op3": "Tamannaah",
  "op4": "Samantha",
  "ans": "Anushka Shetty"
},
{
  "ques": "Which Tollywood actor owns the production house 'G. Mahesh Babu Entertainment'?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "Prabhas",
  "op3": "Nani",
  "op4": "Ram Charan",
  "ans": "Mahesh Babu"
},
{
  "ques": "Which movie’s tagline was 'Celebration of Being Alive'?<br><br>",
  "quesType": "mcq",
  "op1": "Life is Beautiful",
  "op2": "Happy Days",
  "op3": "Bommarillu",
  "op4": "Yevade Subramanyam",
  "ans": "Life is Beautiful"
},
{
  "ques": "Which director is known for the film 'Pelli Choopulu'?<br><br>",
  "quesType": "mcq",
  "op1": "Vikram Kumar",
  "op2": "Vamsi Paidipally",
  "op3": "Tharun Bhascker",
  "op4": "Krish",
  "ans": "Tharun Bhascker"
},
{
  "ques": "Which hero played dual roles in the film 'Adhurs'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Allu Arjun",
  "op3": "Jr NTR",
  "op4": "Ravi Teja",
  "ans": "Jr NTR"
},
{
  "ques": "Which film is considered the breakthrough for Vijay Deverakonda?<br><br>",
  "quesType": "mcq",
  "op1": "Dear Comrade",
  "op2": "Geetha Govindam",
  "op3": "Pelli Choopulu",
  "op4": "Arjun Reddy",
  "ans": "Arjun Reddy"
},
{
  "ques": "Which movie features the iconic song 'Butta Bomma'?<br><br>",
  "quesType": "mcq",
  "op1": "Sarrainodu",
  "op2": "DJ",
  "op3": "Ala Vaikunthapurramuloo",
  "op4": "Pushpa",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Which movie is based on the theme of reincarnation?<br><br>",
  "quesType": "mcq",
  "op1": "Eega",
  "op2": "Magadheera",
  "op3": "Arya",
  "op4": "Vedam",
  "ans": "Magadheera"
},
{
  "ques": "Who played the villain in 'Dhruva'?<br><br>",
  "quesType": "mcq",
  "op1": "Aravind Swamy",
  "op2": "Jagapathi Babu",
  "op3": "Prakash Raj",
  "op4": "Rao Ramesh",
  "ans": "Aravind Swamy"
},
{
  "ques": "Which movie has the famous line 'Cheppanu Brother'?<br><br>",
  "quesType": "mcq",
  "op1": "Race Gurram",
  "op2": "Julayi",
  "op3": "Sarrainodu",
  "op4": "DJ",
  "ans": "Race Gurram"
},
{
  "ques": "Which hero made his debut with the film 'Akhil'?<br><br>",
  "quesType": "mcq",
  "op1": "Naga Chaitanya",
  "op2": "Akhil Akkineni",
  "op3": "Sai Dharam Tej",
  "op4": "Varun Tej",
  "ans": "Akhil Akkineni"
},
{
  "ques": "Which heroine starred with Vijay Deverakonda in 'Geetha Govindam'?<br><br>",
  "quesType": "mcq",
  "op1": "Rashmika Mandanna",
  "op2": "Pooja Hegde",
  "op3": "Tamannaah",
  "op4": "Samantha",
  "ans": "Rashmika Mandanna"
},
{
  "ques": "Which Tollywood movie features the song 'Nee Kallu Neeli Samudram'?<br><br>",
  "quesType": "mcq",
  "op1": "Uppena",
  "op2": "Sarileru Neekevvaru",
  "op3": "Fidaa",
  "op4": "DJ",
  "ans": "Uppena"
},
{
  "ques": "Which hero is known for the character name 'DJ'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Allu Arjun",
  "op3": "Mahesh Babu",
  "op4": "Nani",
  "ans": "Allu Arjun"
},
{
  "ques": "Who directed the movie 'Ghazi'?<br><br>",
  "quesType": "mcq",
  "op1": "Krish",
  "op2": "Sankalp Reddy",
  "op3": "Sandeep Vanga",
  "op4": "Sukumar",
  "ans": "Sankalp Reddy"
},
{
  "ques": "Which hero's real name is Konidela Kalyan Babu?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Pawan Kalyan",
  "op3": "Allu Arjun",
  "op4": "Sai Dharam Tej",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Which movie popularized the phrase 'Blockbuster Ka Baap'?<br><br>",
  "quesType": "mcq",
  "op1": "Pokiri",
  "op2": "Sarrainodu",
  "op3": "Attarintiki Daredi",
  "op4": "Baahubali",
  "ans": "Baahubali"
},
{
  "ques": "Which film’s music was composed by Anirudh Ravichander for Tollywood debut?<br><br>",
  "quesType": "mcq",
  "op1": "Agnyaathavaasi",
  "op2": "Sarkaru Vaari Paata",
  "op3": "Pushpa",
  "op4": "Beast",
  "ans": "Agnyaathavaasi"
},
{
  "ques": "Which heroine starred in 'Ye Maya Chesave'?<br><br>",
  "quesType": "mcq",
  "op1": "Nayanthara",
  "op2": "Samantha",
  "op3": "Tamannaah",
  "op4": "Ileana",
  "ans": "Samantha"
},
{
  "ques": "Which movie has the iconic line 'Cheliya Cheliya'?<br><br>",
  "quesType": "mcq",
  "op1": "Arya 2",
  "op2": "Magadheera",
  "op3": "Orange",
  "op4": "Jalsa",
  "ans": "Orange"
}
,
{
  "ques": "Which movie is known for the song 'Kalusukovalani'?<br><br>",
  "quesType": "mcq",
  "op1": "Nuvvu Nenu",
  "op2": "Nuvvostanante Nenoddantana",
  "op3": "Arya",
  "op4": "Happy",
  "ans": "Nuvvu Nenu"
},
{
  "ques": "Who played the female lead in *Arya 2*?<br><br>",
  "quesType": "mcq",
  "op1": "Ileana",
  "op2": "Kajal Aggarwal",
  "op3": "Tamannaah",
  "op4": "Shraddha Das",
  "ans": "Kajal Aggarwal"
},
{
  "ques": "Which actor debuted as hero in *Chirutha*?<br><br>",
  "quesType": "mcq",
  "op1": "Naga Chaitanya",
  "op2": "Ram Charan",
  "op3": "Varun Tej",
  "op4": "Allu Sirish",
  "ans": "Ram Charan"
},
{
  "ques": "Who is the director of *Oopiri*?<br><br>",
  "quesType": "mcq",
  "op1": "Krish",
  "op2": "Vamshi Paidipally",
  "op3": "Sukumar",
  "op4": "Trivikram",
  "ans": "Vamshi Paidipally"
},
{
  "ques": "Which hero starred in *Run Raja Run*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Sharwanand",
  "op3": "Nikhil",
  "op4": "Aadi",
  "ans": "Sharwanand"
},
{
  "ques": "Which movie’s tagline is 'The Power Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Gabbar Singh",
  "op2": "Sardaar Gabbar Singh",
  "op3": "Attarintiki Daredi",
  "op4": "Khushi",
  "ans": "Gabbar Singh"
},
{
  "ques": "Who directed *Julayi*?<br><br>",
  "quesType": "mcq",
  "op1": "VV Vinayak",
  "op2": "Sukumar",
  "op3": "Trivikram",
  "op4": "Puri Jagannadh",
  "ans": "Trivikram"
},
{
  "ques": "Which movie’s story revolves around the robbery of a temple idol?<br><br>",
  "quesType": "mcq",
  "op1": "Swamy Ra Ra",
  "op2": "Goodachari",
  "op3": "Kshanam",
  "op4": "Gentleman",
  "ans": "Swamy Ra Ra"
},
{
  "ques": "Which heroine starred in *DJ* opposite Allu Arjun?<br><br>",
  "quesType": "mcq",
  "op1": "Rakul Preet Singh",
  "op2": "Pooja Hegde",
  "op3": "Samantha",
  "op4": "Tamannaah",
  "ans": "Pooja Hegde"
},
{
  "ques": "Which movie is a remake of *3 Idiots* in Telugu?<br><br>",
  "quesType": "mcq",
  "op1": "Student No. 1",
  "op2": "Snehitudu",
  "op3": "Happy Days",
  "op4": "Bommarillu",
  "ans": "Snehitudu"
},
{
  "ques": "Who played villain in *Yevadu*?<br><br>",
  "quesType": "mcq",
  "op1": "Prakash Raj",
  "op2": "Rahul Dev",
  "op3": "Sai Kumar",
  "op4": "Jagapathi Babu",
  "ans": "Sai Kumar"
},
{
  "ques": "Which hero made a cameo in *Life is Beautiful*?<br><br>",
  "quesType": "mcq",
  "op1": "Rana Daggubati",
  "op2": "Nagarjuna",
  "op3": "Nani",
  "op4": "Mahesh Babu",
  "ans": "Nagarjuna"
},
{
  "ques": "Which movie’s hit dialogue is 'Nuvvu naku nachav'?<br><br>",
  "quesType": "mcq",
  "op1": "Nuvvu Naku Nachav",
  "op2": "Nuvvostanante Nenoddantana",
  "op3": "Manmadhudu",
  "op4": "Arya",
  "ans": "Nuvvu Naku Nachav"
},
{
  "ques": "Which hero starred in *Hello Guru Prema Kosame*?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Ram Pothineni",
  "op3": "Sai Dharam Tej",
  "op4": "Allu Sirish",
  "ans": "Ram Pothineni"
},
{
  "ques": "Who directed *Leader* starring Rana?<br><br>",
  "quesType": "mcq",
  "op1": "Koratala Siva",
  "op2": "Sekhar Kammula",
  "op3": "Vamshi Paidipally",
  "op4": "Sukumar",
  "ans": "Sekhar Kammula"
},
{
  "ques": "Which hero starred in *Venky*?<br><br>",
  "quesType": "mcq",
  "op1": "Venkatesh",
  "op2": "Nagarjuna",
  "op3": "Mahesh Babu",
  "op4": "Ravi Teja",
  "ans": "Ravi Teja"
},
{
  "ques": "Who is the music director of *Orange*?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Harris Jayaraj",
  "op3": "Anirudh",
  "op4": "Thaman S",
  "ans": "Harris Jayaraj"
},
{
  "ques": "Which film is based on time travel?<br><br>",
  "quesType": "mcq",
  "op1": "24",
  "op2": "1 Nenokkadine",
  "op3": "Eega",
  "op4": "Malli Raava",
  "ans": "24"
},
{
  "ques": "Who played the female lead in *MCA*?<br><br>",
  "quesType": "mcq",
  "op1": "Rashmika Mandanna",
  "op2": "Samantha",
  "op3": "Sai Pallavi",
  "op4": "Tamannaah",
  "ans": "Sai Pallavi"
},
{
  "ques": "Who directed *Kanche*?<br><br>",
  "quesType": "mcq",
  "op1": "Krish",
  "op2": "Sukumar",
  "op3": "VV Vinayak",
  "op4": "Trivikram",
  "ans": "Krish"
},
{
  "ques": "Which hero starred in *Awe!*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Nithiin",
  "op3": "Ravi Teja",
  "op4": "Kajal Aggarwal",
  "ans": "Nani"
},
{
  "ques": "Which movie is about a fisherman’s son turning into a don?<br><br>",
  "quesType": "mcq",
  "op1": "Pokiri",
  "op2": "Jagadam",
  "op3": "Prasthanam",
  "op4": "Uppena",
  "ans": "Uppena"
},
{
  "ques": "Who starred in *Prati Roju Pandage*?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Sharwanand",
  "op3": "Sai Dharam Tej",
  "op4": "Nikhil",
  "ans": "Sai Dharam Tej"
},
{
  "ques": "Who directed *Gamyam*?<br><br>",
  "quesType": "mcq",
  "op1": "Krish",
  "op2": "VV Vinayak",
  "op3": "Sekhar Kammula",
  "op4": "Boyapati Srinu",
  "ans": "Krish"
},
{
  "ques": "Which hero is called 'Natural Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Nani",
  "op3": "Sharwanand",
  "op4": "Naga Chaitanya",
  "ans": "Nani"
},
{
  "ques": "Who is the villain in *Bharat Ane Nenu*?<br><br>",
  "quesType": "mcq",
  "op1": "Rao Ramesh",
  "op2": "Prakash Raj",
  "op3": "Sarath Kumar",
  "op4": "Jagapathi Babu",
  "ans": "Prakash Raj"
},
{
  "ques": "Who played the female lead in *Geetha Govindam*?<br><br>",
  "quesType": "mcq",
  "op1": "Rashmika Mandanna",
  "op2": "Samantha",
  "op3": "Kajal Aggarwal",
  "op4": "Tamannaah",
  "ans": "Rashmika Mandanna"
},
{
  "ques": "Which movie marked Chiranjeevi’s comeback after a long gap?<br><br>",
  "quesType": "mcq",
  "op1": "Acharya",
  "op2": "Sye Raa Narasimha Reddy",
  "op3": "Khaidi No. 150",
  "op4": "Godfather",
  "ans": "Khaidi No. 150"
},
{
  "ques": "Which movie features Vijay Deverakonda as a doctor?<br><br>",
  "quesType": "mcq",
  "op1": "World Famous Lover",
  "op2": "Dear Comrade",
  "op3": "Arjun Reddy",
  "op4": "NOTA",
  "ans": "Arjun Reddy"
}
,
{
  "ques": "Who is known as 'Power Star' in Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "Pawan Kalyan",
  "op3": "Allu Arjun",
  "op4": "NTR Jr.",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Which film marked Pawan Kalyan’s comeback after a political break?<br><br>",
  "quesType": "mcq",
  "op1": "Vakeel Saab",
  "op2": "Sardaar Gabbar Singh",
  "op3": "Agnyaathavaasi",
  "op4": "Katamarayudu",
  "ans": "Vakeel Saab"
},
{
  "ques": "Who directed 'Vakeel Saab'?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram",
  "op2": "Venu Sriram",
  "op3": "Harish Shankar",
  "op4": "Koratala Siva",
  "ans": "Venu Sriram"
},
{
  "ques": "Which Tollywood actor is nicknamed 'Stylish Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "NTR Jr.",
  "op3": "Allu Arjun",
  "op4": "Prabhas",
  "ans": "Allu Arjun"
},
{
  "ques": "Which film features Allu Arjun as a lorry driver?<br><br>",
  "quesType": "mcq",
  "op1": "Pushpa",
  "op2": "Julayi",
  "op3": "Sarrainodu",
  "op4": "DJ",
  "ans": "Pushpa"
},
{
  "ques": "Who composed the chartbuster songs for 'Pushpa'?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Thaman S",
  "op3": "M.M. Keeravani",
  "op4": "Anirudh",
  "ans": "DSP"
},
{
  "ques": "Which is Mahesh Babu's debut film as a lead hero?<br><br>",
  "quesType": "mcq",
  "op1": "Rajakumarudu",
  "op2": "Murari",
  "op3": "Okkadu",
  "op4": "Takkari Donga",
  "ans": "Rajakumarudu"
},
{
  "ques": "Which movie earned Mahesh Babu the title 'Prince'?<br><br>",
  "quesType": "mcq",
  "op1": "Okkadu",
  "op2": "Pokiri",
  "op3": "Murari",
  "op4": "Dookudu",
  "ans": "Okkadu"
},
{
  "ques": "Who played the villain opposite Mahesh in 'Pokiri'?<br><br>",
  "quesType": "mcq",
  "op1": "Prakash Raj",
  "op2": "Sonu Sood",
  "op3": "Mukesh Rishi",
  "op4": "Jagapathi Babu",
  "ans": "Prakash Raj"
},
{
  "ques": "Which is the debut film of Jr. NTR?<br><br>",
  "quesType": "mcq",
  "op1": "Student No.1",
  "op2": "Simhadri",
  "op3": "Ninnu Choodalani",
  "op4": "Aadi",
  "ans": "Ninnu Choodalani"
},
{
  "ques": "Who directed Jr. NTR’s hit film 'Simhadri'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Rajamouli",
  "op3": "Boyapati Srinu",
  "op4": "Koratala Siva",
  "ans": "Rajamouli"
},
{
  "ques": "Which film is known for Jr. NTR’s famous 'Adhurs' role?<br><br>",
  "quesType": "mcq",
  "op1": "Baadshah",
  "op2": "Adhurs",
  "op3": "Brindavanam",
  "op4": "Temper",
  "ans": "Adhurs"
},
{
  "ques": "Who played the female lead in 'Adhurs'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Nayanthara",
  "op3": "Samantha",
  "op4": "Kajal Aggarwal",
  "ans": "Nayanthara"
},
{
  "ques": "Which film marked Prabhas’s pan-India breakthrough?<br><br>",
  "quesType": "mcq",
  "op1": "Mirchi",
  "op2": "Darling",
  "op3": "Baahubali",
  "op4": "Saaho",
  "ans": "Baahubali"
},
{
  "ques": "Who played Devasena in 'Baahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Anushka Shetty",
  "op3": "Kajal Aggarwal",
  "op4": "Samantha",
  "ans": "Anushka Shetty"
},
{
  "ques": "Which actress played Avantika in 'Baahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Anushka Shetty",
  "op3": "Shruti Haasan",
  "op4": "Kajal Aggarwal",
  "ans": "Tamannaah"
},
{
  "ques": "Who directed 'Mirchi'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Boyapati Srinu",
  "op3": "Koratala Siva",
  "op4": "Vamsi Paidipally",
  "ans": "Koratala Siva"
},
{
  "ques": "Who composed music for 'Saaho'?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Thaman S",
  "op3": "M.M. Keeravani",
  "op4": "Ghibran",
  "ans": "Ghibran"
},
{
  "ques": "Which film features Prabhas as a cop undercover?<br><br>",
  "quesType": "mcq",
  "op1": "Darling",
  "op2": "Saaho",
  "op3": "Billa",
  "op4": "Mirchi",
  "ans": "Saaho"
},
{
  "ques": "Which actor starred as 'Gabbar Singh'?<br><br>",
  "quesType": "mcq",
  "op1": "NTR Jr.",
  "op2": "Ram Charan",
  "op3": "Pawan Kalyan",
  "op4": "Allu Arjun",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Who was the heroine in 'Gabbar Singh'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Shruti Haasan",
  "op3": "Tamannaah",
  "op4": "Rakul Preet Singh",
  "ans": "Shruti Haasan"
},
{
  "ques": "Who directed 'Gabbar Singh'?<br><br>",
  "quesType": "mcq",
  "op1": "Harish Shankar",
  "op2": "Sukumar",
  "op3": "Trivikram",
  "op4": "Boyapati Srinu",
  "ans": "Harish Shankar"
},
{
  "ques": "Which movie features the iconic song 'Seeti Maar'?<br><br>",
  "quesType": "mcq",
  "op1": "DJ",
  "op2": "Gabbar Singh",
  "op3": "Ala Vaikunthapurramuloo",
  "op4": "Pushpa",
  "ans": "DJ"
},
{
  "ques": "Who played the villain in 'DJ'?<br><br>",
  "quesType": "mcq",
  "op1": "Rao Ramesh",
  "op2": "Jagapathi Babu",
  "op3": "Prakash Raj",
  "op4": "Mukesh Rishi",
  "ans": "Rao Ramesh"
},
{
  "ques": "Which movie’s story revolves around a sincere police officer?<br><br>",
  "quesType": "mcq",
  "op1": "Temper",
  "op2": "Pokiri",
  "op3": "Gabbar Singh",
  "op4": "All of these",
  "ans": "All of these"
},
{
  "ques": "Who composed the music for 'Temper'?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Thaman S",
  "op3": "Keeravani",
  "op4": "Anirudh",
  "ans": "Anirudh"
},
{
  "ques": "Which actor played the lead in 'Krishna'?<br><br>",
  "quesType": "mcq",
  "op1": "Pawan Kalyan",
  "op2": "Venkatesh",
  "op3": "Balakrishna",
  "op4": "Ravi Teja",
  "ans": "Ravi Teja"
},
{
  "ques": "Who directed Ravi Teja’s hit 'Kick'?<br><br>",
  "quesType": "mcq",
  "op1": "Surender Reddy",
  "op2": "Harish Shankar",
  "op3": "Trivikram",
  "op4": "Sukumar",
  "ans": "Surender Reddy"
},
{
  "ques": "Who starred opposite Ravi Teja in 'Kick'?<br><br>",
  "quesType": "mcq",
  "op1": "Kajal Aggarwal",
  "op2": "Ileana D'Cruz",
  "op3": "Tamannaah",
  "op4": "Shruti Haasan",
  "ans": "Ileana D'Cruz"
},
{
  "ques": "Who directed 'Race Gurram'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Surender Reddy",
  "op3": "Boyapati Srinu",
  "op4": "Trivikram",
  "ans": "Surender Reddy"
}
,
{
  "ques": "Which Tollywood actor starred in the remake of the Tamil movie 'Theri' called 'Whistle'?<br><br>",
  "quesType": "mcq",
  "op1": "Vijay Deverakonda",
  "op2": "Nani",
  "op3": "Mahesh Babu",
  "op4": "Thalapathy Vijay",
  "ans": "Thalapathy Vijay"
},
{
  "ques": "Which hero is known by the nickname 'Natural Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Pothineni",
  "op2": "Nani",
  "op3": "Sai Dharam Tej",
  "op4": "Vishwak Sen",
  "ans": "Nani"
},
{
  "ques": "Which Tollywood movie was India’s official entry for Oscars 2022?<br><br>",
  "quesType": "mcq",
  "op1": "RRR",
  "op2": "Pushpa",
  "op3": "Vikram",
  "op4": "Jersey",
  "ans": "RRR"
},
{
  "ques": "Who played the female lead opposite Jr NTR in 'Temper'?<br><br>",
  "quesType": "mcq",
  "op1": "Ileana",
  "op2": "Kajal Aggarwal",
  "op3": "Samantha",
  "op4": "Kajal Aggarwal",
  "ans": "Kajal Aggarwal"
},
{
  "ques": "Which movie featured the hit song 'Samajavaragamana'?<br><br>",
  "quesType": "mcq",
  "op1": "DJ",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "Sarrainodu",
  "op4": "Race Gurram",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Which actor turned producer with the film 'HIT'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Vijay Deverakonda",
  "op3": "Ram Charan",
  "op4": "Naga Chaitanya",
  "ans": "Nani"
},
{
  "ques": "Which Tollywood movie is about a man who can’t lie for a day?<br><br>",
  "quesType": "mcq",
  "op1": "Gentleman",
  "op2": "Bhale Bhale Magadivoy",
  "op3": "Eega",
  "op4": "Krishna Gaadi Veera Prema Gaadha",
  "ans": "Bhale Bhale Magadivoy"
},
{
  "ques": "Which director is known for blending science fiction and fantasy in Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Trivikram Srinivas",
  "op3": "S.S. Rajamouli",
  "op4": "Boyapati Srinu",
  "ans": "S.S. Rajamouli"
},
{
  "ques": "Which heroine starred opposite Prabhas in 'Mirchi'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Anushka Shetty",
  "op3": "Kajal Aggarwal",
  "op4": "Samantha",
  "ans": "Anushka Shetty"
},
{
  "ques": "Who composed the soundtrack for 'Rangasthalam'?<br><br>",
  "quesType": "mcq",
  "op1": "Thaman S",
  "op2": "Devi Sri Prasad",
  "op3": "Anirudh Ravichander",
  "op4": "M.M. Keeravani",
  "ans": "Devi Sri Prasad"
},
{
  "ques": "Which actor starred in 'Middle Class Abbayi' (MCA)?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Pothineni",
  "op2": "Naga Chaitanya",
  "op3": "Nani",
  "op4": "Sai Dharam Tej",
  "ans": "Nani"
},
{
  "ques": "Which movie is known for the dialogue 'Taggede Le'?<br><br>",
  "quesType": "mcq",
  "op1": "Pushpa",
  "op2": "Arya 2",
  "op3": "DJ",
  "op4": "Sarrainodu",
  "ans": "Pushpa"
},
{
  "ques": "Who played the lead in the movie 'Evaru'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Adivi Sesh",
  "op3": "Naga Chaitanya",
  "op4": "Vijay Deverakonda",
  "ans": "Adivi Sesh"
},
{
  "ques": "Which film features a story based on the Kolar Gold Fields (KGF)?<br><br>",
  "quesType": "mcq",
  "op1": "Saaho",
  "op2": "Aravinda Sametha",
  "op3": "KGF",
  "op4": "Pushpa",
  "ans": "KGF"
},
{
  "ques": "Which Tollywood hero is also called 'Mega Power Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Allu Arjun",
  "op2": "Ram Charan",
  "op3": "Varun Tej",
  "op4": "Sai Dharam Tej",
  "ans": "Ram Charan"
},
{
  "ques": "Which actress starred in 'Krishnagadi Veera Prema Gaadha'?<br><br>",
  "quesType": "mcq",
  "op1": "Mehreen Pirzada",
  "op2": "Rashmika Mandanna",
  "op3": "Lavanya Tripathi",
  "op4": "Nivetha Thomas",
  "ans": "Mehreen Pirzada"
},
{
  "ques": "Which Tollywood movie title means ‘soldier’ in English?<br><br>",
  "quesType": "mcq",
  "op1": "Sainikudu",
  "op2": "Okkadu",
  "op3": "Pokiri",
  "op4": "Agnyaathavaasi",
  "ans": "Sainikudu"
},
{
  "ques": "Who played the villain in 'Aravinda Sametha'?<br><br>",
  "quesType": "mcq",
  "op1": "Jagapathi Babu",
  "op2": "Prakash Raj",
  "op3": "Mukesh Rishi",
  "op4": "Rao Ramesh",
  "ans": "Jagapathi Babu"
},
{
  "ques": "Which actor is known for the role 'Malli Reddy' in 'Pushpa'?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil",
  "op2": "Jagapathi Babu",
  "op3": "Rao Ramesh",
  "op4": "Anasuya",
  "ans": "Sunil"
},
{
  "ques": "Which movie’s famous dialogue is 'Mind block'?<br><br>",
  "quesType": "mcq",
  "op1": "Sarrainodu",
  "op2": "Sarileru Neekevvaru",
  "op3": "Ala Vaikunthapurramuloo",
  "op4": "Pushpa",
  "ans": "Sarileru Neekevvaru"
},
{
  "ques": "Which Tollywood film is inspired by the Hollywood movie 'Knight and Day'?<br><br>",
  "quesType": "mcq",
  "op1": "Sarrainodu",
  "op2": "Naa Peru Surya",
  "op3": "Bheemla Nayak",
  "op4": "Bang Bang",
  "ans": "Bheemla Nayak"
},
{
  "ques": "Who directed the film *Temper* starring Jr. NTR?<br><br>",
  "quesType": "mcq",
  "op1": "Puri Jagannadh",
  "op2": "Sukumar",
  "op3": "VV Vinayak",
  "op4": "Trivikram",
  "ans": "Puri Jagannadh"
},
{
  "ques": "Who played the heroine in *Maharshi*?<br><br>",
  "quesType": "mcq",
  "op1": "Pooja Hegde",
  "op2": "Kiara Advani",
  "op3": "Samantha",
  "op4": "Rakul Preet Singh",
  "ans": "Pooja Hegde"
},
{
  "ques": "Who composed the music for *1 Nenokkadine*?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Thaman S",
  "op3": "Harris Jayaraj",
  "op4": "Gopi Sundar",
  "ans": "DSP"
},
{
  "ques": "Which hero starred in *Hello* directed by Vikram Kumar?<br><br>",
  "quesType": "mcq",
  "op1": "Naga Chaitanya",
  "op2": "Akhil Akkineni",
  "op3": "Ram Pothineni",
  "op4": "Nithiin",
  "ans": "Akhil Akkineni"
},
{
  "ques": "Who directed *Krishnarjuna Yuddham*?<br><br>",
  "quesType": "mcq",
  "op1": "Merlapaka Gandhi",
  "op2": "Hanu Raghavapudi",
  "op3": "Sandeep Reddy Vanga",
  "op4": "Srinivas Avasarala",
  "ans": "Merlapaka Gandhi"
},
{
  "ques": "Which film’s famous line is 'Cheppanu Brother'?<br><br>",
  "quesType": "mcq",
  "op1": "Dookudu",
  "op2": "Businessman",
  "op3": "Pokiri",
  "op4": "Athadu",
  "ans": "Businessman"
},
{
  "ques": "Who played the female lead in *Majili*?<br><br>",
  "quesType": "mcq",
  "op1": "Sai Pallavi",
  "op2": "Samantha",
  "op3": "Anupama Parameswaran",
  "op4": "Shruti Haasan",
  "ans": "Samantha"
},
{
  "ques": "Which hero starred in *Agent Sai Srinivasa Athreya*?<br><br>",
  "quesType": "mcq",
  "op1": "Vishwak Sen",
  "op2": "Adivi Sesh",
  "op3": "Naveen Polishetty",
  "op4": "Rahul Ramakrishna",
  "ans": "Naveen Polishetty"
},
{
  "ques": "Which is the first Indian film to release in 4K HD format?<br><br>",
  "quesType": "mcq",
  "op1": "Magadheera",
  "op2": "Baahubali: The Beginning",
  "op3": "Eega",
  "op4": "Sye",
  "ans": "Baahubali: The Beginning"
},
{
  "ques": "Which movie had the tagline 'His Story'?<br><br>",
  "quesType": "mcq",
  "op1": "Janatha Garage",
  "op2": "Aravinda Sametha",
  "op3": "Maharshi",
  "op4": "Srimanthudu",
  "ans": "Maharshi"
},
{
  "ques": "Which hero starred in *Bhale Bhale Magadivoy*?<br><br>",
  "quesType": "mcq",
  "op1": "Sharwanand",
  "op2": "Nani",
  "op3": "Nithiin",
  "op4": "Ram",
  "ans": "Nani"
},
{
  "ques": "Which film features the song 'Butta Bomma'?<br><br>",
  "quesType": "mcq",
  "op1": "Ala Vaikunthapurramuloo",
  "op2": "Sarileru Neekevvaru",
  "op3": "DJ",
  "op4": "Sarrainodu",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who directed *Goodachari*?<br><br>",
  "quesType": "mcq",
  "op1": "Sashi Kiran Tikka",
  "op2": "Sujeeth",
  "op3": "Hanu Raghavapudi",
  "op4": "Sandeep Reddy Vanga",
  "ans": "Sashi Kiran Tikka"
},
{
  "ques": "Which movie stars Pawan Kalyan as a software engineer?<br><br>",
  "quesType": "mcq",
  "op1": "Khushi",
  "op2": "Jalsa",
  "op3": "Balu",
  "op4": "Teenmaar",
  "ans": "Jalsa"
},
{
  "ques": "Which actor appeared in *Rangasthalam* as Chitti Babu?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Allu Arjun",
  "op3": "Ram Charan",
  "op4": "Ravi Teja",
  "ans": "Ram Charan"
},
{
  "ques": "Who is the music director for *Sarileru Neekevvaru*?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Thaman S",
  "op3": "Harris Jayaraj",
  "op4": "Mani Sharma",
  "ans": "Thaman S"
},
{
  "ques": "Who played the female lead in *Ninnu Kori*?<br><br>",
  "quesType": "mcq",
  "op1": "Sai Pallavi",
  "op2": "Keerthy Suresh",
  "op3": "Nivetha Thomas",
  "op4": "Tamannaah",
  "ans": "Nivetha Thomas"
},
{
  "ques": "Which movie had a theme about an aspiring chef?<br><br>",
  "quesType": "mcq",
  "op1": "Chef",
  "op2": "Uppena",
  "op3": "U Turn",
  "op4": "Jersey",
  "ans": "Chef"
},
{
  "ques": "Which movie did Varun Tej star in as a boxer?<br><br>",
  "quesType": "mcq",
  "op1": "Valmiki",
  "op2": "Gaddalakonda Ganesh",
  "op3": "Ghani",
  "op4": "Antariksham",
  "ans": "Ghani"
},
{
  "ques": "Which movie’s plot revolves around a journalist’s murder mystery?<br><br>",
  "quesType": "mcq",
  "op1": "Kshanam",
  "op2": "PSV Garuda Vega",
  "op3": "Anukokunda Oka Roju",
  "op4": "Goodachari",
  "ans": "PSV Garuda Vega"
},
{
  "ques": "Which film features the iconic line 'Okka Adugu Munduku'?<br><br>",
  "quesType": "mcq",
  "op1": "Leader",
  "op2": "Bharat Ane Nenu",
  "op3": "Srimanthudu",
  "op4": "Seethamma Vakitlo Sirimalle Chettu",
  "ans": "Bharat Ane Nenu"
},
{
  "ques": "Who directed *Middle Class Abbayi (MCA)*?<br><br>",
  "quesType": "mcq",
  "op1": "Venu Sriram",
  "op2": "Anil Ravipudi",
  "op3": "Hanu Raghavapudi",
  "op4": "Sukumar",
  "ans": "Venu Sriram"
},
{
  "ques": "Which Tollywood hero starred in *Jersey*?<br><br>",
  "quesType": "mcq",
  "op1": "Sharwanand",
  "op2": "Nani",
  "op3": "Nithiin",
  "op4": "Akhil",
  "ans": "Nani"
},
{
  "ques": "Which movie is known for the hit song 'Samajavaragamana'?<br><br>",
  "quesType": "mcq",
  "op1": "Sarileru Neekevvaru",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "DJ",
  "op4": "Fidaa",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who starred as a scientist in *Eega*?<br><br>",
  "quesType": "mcq",
  "op1": "Sudeep",
  "op2": "Nani",
  "op3": "Kiccha Sudeep",
  "op4": "Samantha",
  "ans": "Nani"
},
{
  "ques": "Who played villain in *Race Gurram*?<br><br>",
  "quesType": "mcq",
  "op1": "Mukesh Rishi",
  "op2": "Prakash Raj",
  "op3": "Ravi Kishan",
  "op4": "Jagapathi Babu",
  "ans": "Ravi Kishan"
},
{
  "ques": "Which film features the friendship between a hero and a cow? <br><br>",
  "quesType": "mcq",
  "op1": "Sye",
  "op2": "Eega",
  "op3": "Chanti",
  "op4": "Okkadu",
  "ans": "Chanti"
},
{
  "ques": "Who is the director of *Venky Mama*?<br><br>",
  "quesType": "mcq",
  "op1": "Bobby",
  "op2": "Venu Sriram",
  "op3": "Anil Ravipudi",
  "op4": "Krish",
  "ans": "Bobby"
}
,
{
  "ques": "Who played the role of 'Chitti' in the movie Robo?<br><br>",
  "quesType": "mcq",
  "op1": "Nagarjuna",
  "op2": "Rajinikanth",
  "op3": "Chiranjeevi",
  "op4": "Prabhas",
  "ans": "Rajinikanth"
},
{
  "ques": "Who is the music director for 'Ala Vaikunthapurramuloo'?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Thaman S",
  "op3": "Anirudh",
  "op4": "Keeravani",
  "ans": "Thaman S"
},
{
  "ques": "Which film features the famous song 'Butta Bomma'?<br><br>",
  "quesType": "mcq",
  "op1": "DJ",
  "op2": "Sarrainodu",
  "op3": "Ala Vaikunthapurramuloo",
  "op4": "Pushpa",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Which actor is known as 'Victory'?<br><br>",
  "quesType": "mcq",
  "op1": "Venkatesh",
  "op2": "Ravi Teja",
  "op3": "Nagarjuna",
  "op4": "Balakrishna",
  "ans": "Venkatesh"
},
{
  "ques": "Who directed the movie 'Arjun Reddy'?<br><br>",
  "quesType": "mcq",
  "op1": "Sandeep Reddy Vanga",
  "op2": "Trivikram",
  "op3": "Koratala Siva",
  "op4": "Harish Shankar",
  "ans": "Sandeep Reddy Vanga"
},
{
  "ques": "Which actor rose to fame with 'Arjun Reddy'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Vijay Deverakonda",
  "op3": "Sharwanand",
  "op4": "Nikhil",
  "ans": "Vijay Deverakonda"
},
{
  "ques": "Who starred opposite Vijay in 'Geetha Govindam'?<br><br>",
  "quesType": "mcq",
  "op1": "Rashmika Mandanna",
  "op2": "Samantha",
  "op3": "Tamannaah",
  "op4": "Kajal Aggarwal",
  "ans": "Rashmika Mandanna"
},
{
  "ques": "Who directed 'Geetha Govindam'?<br><br>",
  "quesType": "mcq",
  "op1": "Parasuram",
  "op2": "Harish Shankar",
  "op3": "Sukumar",
  "op4": "Boyapati Srinu",
  "ans": "Parasuram"
},
{
  "ques": "Which film is known for the dialogue 'Em Jaruguthundi?'<br><br>",
  "quesType": "mcq",
  "op1": "Arjun Reddy",
  "op2": "Jersey",
  "op3": "Dear Comrade",
  "op4": "Geetha Govindam",
  "ans": "Arjun Reddy"
},
{
  "ques": "Who acted as the cricket player in 'Jersey'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Vijay Deverakonda",
  "op3": "Ram Charan",
  "op4": "NTR Jr.",
  "ans": "Nani"
},
{
  "ques": "Who directed 'Jersey'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Gowtam Tinnanuri",
  "op3": "Trivikram",
  "op4": "Parasuram",
  "ans": "Gowtam Tinnanuri"
},
{
  "ques": "Which actress was the lead in 'Jersey'?<br><br>",
  "quesType": "mcq",
  "op1": "Rashmika Mandanna",
  "op2": "Shraddha Srinath",
  "op3": "Tamannaah",
  "op4": "Kajal Aggarwal",
  "ans": "Shraddha Srinath"
},
{
  "ques": "Which Nani movie involves time travel?<br><br>",
  "quesType": "mcq",
  "op1": "Gentleman",
  "op2": "Bhale Bhale Magadivoy",
  "op3": "Jersey",
  "op4": "Adhurs",
  "ans": "Gentleman"
},
{
  "ques": "Who played a dual role in 'Gentleman'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Sharwanand",
  "op3": "Ram Pothineni",
  "op4": "Nikhil",
  "ans": "Nani"
},
{
  "ques": "Which is the debut movie of Rashmika Mandanna in Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Pushpa",
  "op2": "Geetha Govindam",
  "op3": "Chalo",
  "op4": "Dear Comrade",
  "ans": "Chalo"
},
{
  "ques": "Who directed 'Chalo'?<br><br>",
  "quesType": "mcq",
  "op1": "Parasuram",
  "op2": "Venky Kudumula",
  "op3": "Trivikram",
  "op4": "Sukumar",
  "ans": "Venky Kudumula"
},
{
  "ques": "Who was the lead in 'Chalo'?<br><br>",
  "quesType": "mcq",
  "op1": "Vijay Deverakonda",
  "op2": "Nikhil",
  "op3": "Naga Shaurya",
  "op4": "Sharwanand",
  "ans": "Naga Shaurya"
},
{
  "ques": "Which actor is famous for the title 'Natural Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Vijay Deverakonda",
  "op3": "Ravi Teja",
  "op4": "Ram Charan",
  "ans": "Nani"
},
{
  "ques": "Who directed 'Bhale Bhale Magadivoy'?<br><br>",
  "quesType": "mcq",
  "op1": "Parasuram",
  "op2": "Maruthi",
  "op3": "Trivikram",
  "op4": "Sukumar",
  "ans": "Maruthi"
},
{
  "ques": "Which movie features Nani with Lavanya Tripathi?<br><br>",
  "quesType": "mcq",
  "op1": "Jersey",
  "op2": "Gentleman",
  "op3": "Bhale Bhale Magadivoy",
  "op4": "Krishna Gadi Veera Prema Gaadha",
  "ans": "Bhale Bhale Magadivoy"
},
{
  "ques": "Which film is based on a psychological thriller starring Nani?<br><br>",
  "quesType": "mcq",
  "op1": "Eega",
  "op2": "Gentleman",
  "op3": "Krishna Gadi Veera Prema Gaadha",
  "op4": "Tuck Jagadish",
  "ans": "Gentleman"
},
{
  "ques": "Who played the lead in 'Savyasachi'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Naga Chaitanya",
  "op3": "Ram Pothineni",
  "op4": "Nikhil",
  "ans": "Naga Chaitanya"
},
{
  "ques": "Who starred opposite Naga Chaitanya in 'Majili'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Samantha",
  "op3": "Rashmika Mandanna",
  "op4": "Shruti Haasan",
  "ans": "Samantha"
},
{
  "ques": "Which film was Naga Chaitanya and Samantha’s first movie together?<br><br>",
  "quesType": "mcq",
  "op1": "Majili",
  "op2": "Ye Maaya Chesave",
  "op3": "Autonagar Surya",
  "op4": "Manam",
  "ans": "Ye Maaya Chesave"
},
{
  "ques": "Who directed 'Ye Maaya Chesave'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Gautham Menon",
  "op3": "Trivikram",
  "op4": "Parasuram",
  "ans": "Gautham Menon"
},
{
  "ques": "Who played the lead in 'Eega'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Naga Chaitanya",
  "op3": "Nikhil",
  "op4": "Sharwanand",
  "ans": "Nani"
},
{
  "ques": "Who was the antagonist in 'Eega'?<br><br>",
  "quesType": "mcq",
  "op1": "Prakash Raj",
  "op2": "Sonu Sood",
  "op3": "Sudeep",
  "op4": "Mukesh Rishi",
  "ans": "Sudeep"
},
{
  "ques": "Who directed the blockbuster movie 'Eega'?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Sukumar",
  "op3": "Trivikram",
  "op4": "Harish Shankar",
  "ans": "Rajamouli"
},
{
  "ques": "Which actress acted opposite Nani in 'Eega'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Tamannaah",
  "op3": "Rakul Preet Singh",
  "op4": "Kajal Aggarwal",
  "ans": "Samantha"
}
,
{
  "ques": "Which movie stars Mahesh Babu as an army major named Ajay Krishna?<br><br>",
  "quesType": "mcq",
  "op1": "Spyder",
  "op2": "Sarileru Neekevvaru",
  "op3": "Bharat Ane Nenu",
  "op4": "Maharshi",
  "ans": "Sarileru Neekevvaru"
},
{
  "ques": "Which heroine starred opposite Allu Arjun in 'Sarrainodu'?<br><br>",
  "quesType": "mcq",
  "op1": "Rakul Preet Singh",
  "op2": "Samantha",
  "op3": "Kajal Aggarwal",
  "op4": "Tamannaah",
  "ans": "Rakul Preet Singh"
},
{
  "ques": "Which Tollywood movie is based on the life of mathematician Anand Kumar?<br><br>",
  "quesType": "mcq",
  "op1": "Genius",
  "op2": "Super 30",
  "op3": "Shakuntala Devi",
  "op4": "Jersey",
  "ans": "Super 30"
},
{
  "ques": "Who directed the movie 'Jersey'?<br><br>",
  "quesType": "mcq",
  "op1": "Krish",
  "op2": "Gowtam Tinnanuri",
  "op3": "Vamsi Paidipally",
  "op4": "Sukumar",
  "ans": "Gowtam Tinnanuri"
},
{
  "ques": "Which movie’s tagline is 'Emotion & Action'?<br><br>",
  "quesType": "mcq",
  "op1": "Akhanda",
  "op2": "Pushpa",
  "op3": "Vakeel Saab",
  "op4": "Ala Vaikunthapurramuloo",
  "ans": "Akhanda"
},
{
  "ques": "Who played the female lead in 'Goodachari'?<br><br>",
  "quesType": "mcq",
  "op1": "Aditi Rao Hydari",
  "op2": "Sobhita Dhulipala",
  "op3": "Regina Cassandra",
  "op4": "Rashmika Mandanna",
  "ans": "Sobhita Dhulipala"
},
{
  "ques": "Which hero played a RAW agent in 'Spyder'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Mahesh Babu",
  "op3": "Jr NTR",
  "op4": "Prabhas",
  "ans": "Mahesh Babu"
},
{
  "ques": "Which movie features the hit song 'Inkem Inkem Inkem Kaavaale'?<br><br>",
  "quesType": "mcq",
  "op1": "Arjun Reddy",
  "op2": "Geetha Govindam",
  "op3": "Dear Comrade",
  "op4": "World Famous Lover",
  "ans": "Geetha Govindam"
},
{
  "ques": "Who played the role of Bhallaladeva in Baahubali?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Rana Daggubati",
  "op3": "Nassar",
  "op4": "Sudeep",
  "ans": "Rana Daggubati"
},
{
  "ques": "Which actor appeared in 'Julayi' and 'Ala Vaikunthapurramuloo'?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "Allu Arjun",
  "op3": "Ram Charan",
  "op4": "Jr NTR",
  "ans": "Allu Arjun"
},
{
  "ques": "Which movie is about the smuggling of red sandalwood?<br><br>",
  "quesType": "mcq",
  "op1": "Pushpa",
  "op2": "Rangasthalam",
  "op3": "Saaho",
  "op4": "Aravinda Sametha",
  "ans": "Pushpa"
},
{
  "ques": "Which Tollywood film has a hero with short-term memory loss?<br><br>",
  "quesType": "mcq",
  "op1": "Gentleman",
  "op2": "Ghajini",
  "op3": "Bhale Bhale Magadivoy",
  "op4": "Nannaku Prematho",
  "ans": "Bhale Bhale Magadivoy"
},
{
  "ques": "Who played the lead role in 'Vinaya Vidheya Rama'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Allu Arjun",
  "op3": "Mahesh Babu",
  "op4": "Jr NTR",
  "ans": "Ram Charan"
},
{
  "ques": "Which movie is known for the song 'Seeti Maar'?<br><br>",
  "quesType": "mcq",
  "op1": "Duvvada Jagannadham",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "Sarrainodu",
  "op4": "Race Gurram",
  "ans": "Duvvada Jagannadham"
},
{
  "ques": "Who directed 'Nannaku Prematho'?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram Srinivas",
  "op2": "Sukumar",
  "op3": "Vamsi Paidipally",
  "op4": "Krish",
  "ans": "Sukumar"
},
{
  "ques": "Which hero is known for the catchphrase 'Power Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Pawan Kalyan",
  "op3": "Allu Arjun",
  "op4": "Mahesh Babu",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Which heroine starred in 'Bharat Ane Nenu'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Kajal Aggarwal",
  "op3": "Kiara Advani",
  "op4": "Samantha",
  "ans": "Kiara Advani"
},
{
  "ques": "Which Tollywood movie shows a story inspired by the Rayalaseema faction backdrop?<br><br>",
  "quesType": "mcq",
  "op1": "Nannaku Prematho",
  "op2": "Aravinda Sametha",
  "op3": "DJ",
  "op4": "Julayi",
  "ans": "Aravinda Sametha"
},
{
  "ques": "Who is the hero of 'Krack'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Ravi Teja",
  "op3": "Ram Charan",
  "op4": "Prabhas",
  "ans": "Ravi Teja"
},
{
  "ques": "Which movie shows the famous dialogue 'Nuvvu Naaku Nachav'?<br><br>",
  "quesType": "mcq",
  "op1": "Nuvvu Naaku Nachav",
  "op2": "Bommarillu",
  "op3": "Arya",
  "op4": "Race Gurram",
  "ans": "Nuvvu Naaku Nachav"
}



]

let codingmovie3Arr=[
  {
  "ques": "Which classic Telugu movie won the National Award for Best Feature Film in Telugu in 1983?<br><br>",
  "quesType": "mcq",
  "op1": "Sagara Sangamam",
  "op2": "Swathi Muthyam",
  "op3": "Meghasandesam",
  "op4": "Sankarabharanam",
  "ans": "Meghasandesam"
},
{
  "ques": "Who wrote the dialogues for the film *Khaidi* (1983)?<br><br>",
  "quesType": "mcq",
  "op1": "Paruchuri Brothers",
  "op2": "Jandhyala",
  "op3": "Trivikram",
  "op4": "Posani Krishna Murali",
  "ans": "Paruchuri Brothers"
},
{
  "ques": "Which Telugu director is nicknamed 'Creative Genius'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Gopal Varma",
  "op2": "Krishna Vamsi",
  "op3": "Sukumar",
  "op4": "Trivikram",
  "ans": "Krishna Vamsi"
},
{
  "ques": "Which Chiranjeevi movie was remade in Hindi as *Pratibandh*?<br><br>",
  "quesType": "mcq",
  "op1": "Rudraveena",
  "op2": "State Rowdy",
  "op3": "Kondaveeti Donga",
  "op4": "Ankusam",
  "ans": "Ankusam"
},
{
  "ques": "Who produced *Bommarillu*?<br><br>",
  "quesType": "mcq",
  "op1": "Allu Aravind",
  "op2": "Dil Raju",
  "op3": "Nagarjuna",
  "op4": "Suresh Babu",
  "ans": "Dil Raju"
},
{
  "ques": "Which movie had the tagline 'Class lo Mass'?<br><br>",
  "quesType": "mcq",
  "op1": "Happy Days",
  "op2": "Arya",
  "op3": "S/o Satyamurthy",
  "op4": "Julayi",
  "ans": "Arya"
},
{
  "ques": "Who was the cinematographer for *Baahubali* series?<br><br>",
  "quesType": "mcq",
  "op1": "Senthil Kumar",
  "op2": "Madhie",
  "op3": "K. K. Senthil Kumar",
  "op4": "Ravi K Chandran",
  "ans": "K. K. Senthil Kumar"
},
{
  "ques": "Which Tollywood movie inspired the Tamil movie *Mugavari*?<br><br>",
  "quesType": "mcq",
  "op1": "Swathi Muthyam",
  "op2": "Sagara Sangamam",
  "op3": "Shiva",
  "op4": "Geethanjali",
  "ans": "Geethanjali"
},
{
  "ques": "Who played the role of Bhairava in *Jagadeka Veerudu Athiloka Sundari*?<br><br>",
  "quesType": "mcq",
  "op1": "Amrish Puri",
  "op2": "Rao Gopal Rao",
  "op3": "Nutan Prasad",
  "op4": "Satyanarayana",
  "ans": "Amrish Puri"
},
{
  "ques": "Which film has the iconic song 'Ee Reyi Teeyanidi'?<br><br>",
  "quesType": "mcq",
  "op1": "Gang Leader",
  "op2": "Khaidi",
  "op3": "Challenge",
  "op4": "Abhilasha",
  "ans": "Challenge"
},
{
  "ques": "Which hero turned director with the film *Okkadunnadu*?<br><br>",
  "quesType": "mcq",
  "op1": "Gopichand",
  "op2": "Mahesh Babu",
  "op3": "Kiran Kumar",
  "op4": "Charmi Kaur",
  "ans": "Kiran Kumar"
},
{
  "ques": "Which Telugu actor is also known as *Collection King*?<br><br>",
  "quesType": "mcq",
  "op1": "Mohan Babu",
  "op2": "Krishna",
  "op3": "Nagarjuna",
  "op4": "M. S. Narayana",
  "ans": "Mohan Babu"
},
{
  "ques": "Who directed the thriller *Anukokunda Oka Roju*?<br><br>",
  "quesType": "mcq",
  "op1": "Krishna Vamsi",
  "op2": "Chandrasekhar Yeleti",
  "op3": "Sekhar Kammula",
  "op4": "Deva Katta",
  "ans": "Chandrasekhar Yeleti"
},
{
  "ques": "Which film is known as the first Telugu neo-noir thriller?<br><br>",
  "quesType": "mcq",
  "op1": "Evaru",
  "op2": "Kshanam",
  "op3": "Aithe",
  "op4": "1 Nenokkadine",
  "ans": "Aithe"
},
{
  "ques": "Which actor starred in the multi-lingual movie *Vishwaroopam*?<br><br>",
  "quesType": "mcq",
  "op1": "Kamal Haasan",
  "op2": "Prakash Raj",
  "op3": "Sarath Kumar",
  "op4": "Jagapathi Babu",
  "ans": "Kamal Haasan"
},
{
  "ques": "Who wrote the dialogues for *Manam*?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram",
  "op2": "Harsha Vardhan",
  "op3": "Kona Venkat",
  "op4": "BVS Ravi",
  "ans": "Harsha Vardhan"
},
{
  "ques": "Which actor played the role of a classical dancer in *Sagara Sangamam*?<br><br>",
  "quesType": "mcq",
  "op1": "Akkineni Nageswara Rao",
  "op2": "Kamal Haasan",
  "op3": "Krishna",
  "op4": "Chiranjeevi",
  "ans": "Kamal Haasan"
},
{
  "ques": "Which director is known for the cult film *Kshana Kshanam*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Gopal Varma",
  "op2": "Krishna Vamsi",
  "op3": "Teja",
  "op4": "Chandra Siddhartha",
  "ans": "Ram Gopal Varma"
},
{
  "ques": "Who composed music for *Shiva* (1989)?<br><br>",
  "quesType": "mcq",
  "op1": "Ilaiyaraaja",
  "op2": "Keeravani",
  "op3": "Ramesh Naidu",
  "op4": "M. M. Keeravani",
  "ans": "Ilaiyaraaja"
},
{
  "ques": "Who played antagonist in *Tagore*?<br><br>",
  "quesType": "mcq",
  "op1": "Prakash Raj",
  "op2": "Sayaji Shinde",
  "op3": "Mukesh Rishi",
  "op4": "Ashish Vidyarthi",
  "ans": "Sayaji Shinde"
},
{
  "ques": "Who was the producer of *Leader*?<br><br>",
  "quesType": "mcq",
  "op1": "D. Suresh Babu",
  "op2": "Raju Sundaram",
  "op3": "Allu Aravind",
  "op4": "Dil Raju",
  "ans": "D. Suresh Babu"
},
{
  "ques": "Which film marked the debut of Venkatesh Daggubati?<br><br>",
  "quesType": "mcq",
  "op1": "Kaliyuga Pandavulu",
  "op2": "Prema",
  "op3": "Bobbili Raja",
  "op4": "Coolie No. 1",
  "ans": "Kaliyuga Pandavulu"
},
{
  "ques": "Who played the title role in *Sankarabharanam*?<br><br>",
  "quesType": "mcq",
  "op1": "J. V. Somayajulu",
  "op2": "Akkineni Nageswara Rao",
  "op3": "Sivaji Ganesan",
  "op4": "Satyanarayana",
  "ans": "J. V. Somayajulu"
},
{
  "ques": "Which lyricist wrote *Sankarabharanam* songs?<br><br>",
  "quesType": "mcq",
  "op1": "Sirivennela",
  "op2": "Veturi Sundararama Murthy",
  "op3": "Atreya",
  "op4": "Chandrabose",
  "ans": "Veturi Sundararama Murthy"
},
{
  "ques": "Which film won Chiranjeevi his first Filmfare Award?<br><br>",
  "quesType": "mcq",
  "op1": "Swayamkrushi",
  "op2": "Subhalekha",
  "op3": "Rudraveena",
  "op4": "Khaidi",
  "ans": "Swayamkrushi"
},
{
  "ques": "Who played the lead in *Bobbili Raja*?<br><br>",
  "quesType": "mcq",
  "op1": "Nagarjuna",
  "op2": "Venkatesh",
  "op3": "Balakrishna",
  "op4": "Chiranjeevi",
  "ans": "Venkatesh"
},
{
  "ques": "Which hero starred in *Sahasam Swasaga Sagipo*?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Naga Chaitanya",
  "op3": "Ram",
  "op4": "Sharwanand",
  "ans": "Naga Chaitanya"
},
{
  "ques": "Who directed *Anthuleni Katha* starring Jayaprada?<br><br>",
  "quesType": "mcq",
  "op1": "K. Viswanath",
  "op2": "Bapu",
  "op3": "Dasari Narayana Rao",
  "op4": "K. Balachander",
  "ans": "K. Balachander"
},
{
  "ques": "Which film features the iconic dialogue 'Manishi ki Gunam Important'?<br><br>",
  "quesType": "mcq",
  "op1": "Tagore",
  "op2": "Shankar Dada MBBS",
  "op3": "Indra",
  "op4": "Gang Leader",
  "ans": "Indra"
},
{
  "ques": "Which hero played a triple role in *Mugguru Monagallu*?<br><br>",
  "quesType": "mcq",
  "op1": "Balakrishna",
  "op2": "Venkatesh",
  "op3": "Chiranjeevi",
  "op4": "Nagarjuna",
  "ans": "Chiranjeevi"
}
,
{
  "ques": "Which was the first Telugu film to win the National Film Award for Best Feature Film?<br><br>",
  "quesType": "mcq",
  "op1": "Malliswari",
  "op2": "Pathala Bhairavi",
  "op3": "Shankarabharanam",
  "op4": "Mayabazar",
  "ans": "Shankarabharanam"
},
{
  "ques": "Who directed the Telugu cult classic 'Sankarabharanam'?<br><br>",
  "quesType": "mcq",
  "op1": "Bapu",
  "op2": "K. Vishwanath",
  "op3": "Raghavendra Rao",
  "op4": "Dasari Narayana Rao",
  "ans": "K. Vishwanath"
},
{
  "ques": "Who played the lead role in 'Sankarabharanam'?<br><br>",
  "quesType": "mcq",
  "op1": "Akkineni Nageswara Rao",
  "op2": "J.V. Somayajulu",
  "op3": "Chiranjeevi",
  "op4": "N. T. Rama Rao",
  "ans": "J.V. Somayajulu"
},
{
  "ques": "Which Telugu film won the Best Popular Film Providing Wholesome Entertainment National Award in 1981?<br><br>",
  "quesType": "mcq",
  "op1": "Sankarabharanam",
  "op2": "Sagara Sangamam",
  "op3": "Meghasandesam",
  "op4": "Saptapadi",
  "ans": "Sagara Sangamam"
},
{
  "ques": "Who is the music director for 'Baahubali' series?<br><br>",
  "quesType": "mcq",
  "op1": "M.M. Keeravani",
  "op2": "Devi Sri Prasad",
  "op3": "Ilaiyaraaja",
  "op4": "Harris Jayaraj",
  "ans": "M.M. Keeravani"
},
{
  "ques": "Who was the producer of 'Baahubali' series?<br><br>",
  "quesType": "mcq",
  "op1": "Dil Raju",
  "op2": "Allu Aravind",
  "op3": "D. Suresh Babu",
  "op4": "Shobu Yarlagadda",
  "ans": "Shobu Yarlagadda"
},
{
  "ques": "Which film marked Mahesh Babu's debut as a lead actor?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Kumarudu",
  "op2": "Murari",
  "op3": "Okkadu",
  "op4": "Nijam",
  "ans": "Raja Kumarudu"
},
{
  "ques": "Who choreographed the song 'Butta Bomma' from 'Ala Vaikunthapurramuloo'?<br><br>",
  "quesType": "mcq",
  "op1": "Sekhar Master",
  "op2": "Jani Master",
  "op3": "Raghava Lawrence",
  "op4": "Sundaram Master",
  "ans": "Sekhar Master"
},
{
  "ques": "Who wrote the dialogues for 'Magadheera'?<br><br>",
  "quesType": "mcq",
  "op1": "Koratala Siva",
  "op2": "Trivikram Srinivas",
  "op3": "V. Vijayendra Prasad",
  "op4": "S. S. Rajamouli",
  "ans": "V. Vijayendra Prasad"
},
{
  "ques": "Which film is known as the first Telugu science fiction film?<br><br>",
  "quesType": "mcq",
  "op1": "Aditya 369",
  "op2": "Jagadeka Veerudu Athiloka Sundari",
  "op3": "Eega",
  "op4": "Robot",
  "ans": "Aditya 369"
},
{
  "ques": "Who played the villain in 'Eega'?<br><br>",
  "quesType": "mcq",
  "op1": "Sudeep",
  "op2": "Nani",
  "op3": "Jagapathi Babu",
  "op4": "Prakash Raj",
  "ans": "Sudeep"
},
{
  "ques": "Who composed the music for 'Pushpa: The Rise'?<br><br>",
  "quesType": "mcq",
  "op1": "Thaman S",
  "op2": "M.M. Keeravani",
  "op3": "Anirudh Ravichander",
  "op4": "Devi Sri Prasad",
  "ans": "Devi Sri Prasad"
},
{
  "ques": "Which Tollywood actor holds a Guinness World Record for playing the most dual roles?<br><br>",
  "quesType": "mcq",
  "op1": "Nandamuri Balakrishna",
  "op2": "Chiranjeevi",
  "op3": "N.T. Rama Rao",
  "op4": "Nagarjuna",
  "ans": "N.T. Rama Rao"
},
{
  "ques": "Which Telugu film was India's official entry to Oscars in 2022?<br><br>",
  "quesType": "mcq",
  "op1": "RRR",
  "op2": "Jersey",
  "op3": "Vakeel Saab",
  "op4": "Gatham",
  "ans": "RRR"
},
{
  "ques": "Who directed the movie 'Agent Sai Srinivasa Athreya'?<br><br>",
  "quesType": "mcq",
  "op1": "Sandeep Raj",
  "op2": "Swaroop RSJ",
  "op3": "Prasanth Varma",
  "op4": "Sriram Adittya",
  "ans": "Swaroop RSJ"
},
{
  "ques": "Who played the lead role in the biopic 'Mahanati'?<br><br>",
  "quesType": "mcq",
  "op1": "Kajal Aggarwal",
  "op2": "Samantha",
  "op3": "Keerthy Suresh",
  "op4": "Anushka Shetty",
  "ans": "Keerthy Suresh"
},
{
  "ques": "Who directed 'Awe', the anthology film?<br><br>",
  "quesType": "mcq",
  "op1": "Praveen Sattaru",
  "op2": "Sandeep Vanga",
  "op3": "Prasanth Varma",
  "op4": "Nag Ashwin",
  "ans": "Prasanth Varma"
},
{
  "ques": "Who was the lead in 'Karthikeya 2'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Nikhil Siddharth",
  "op3": "Vijay Deverakonda",
  "op4": "Sudheer Babu",
  "ans": "Nikhil Siddharth"
},
{
  "ques": "Which film was dubbed as Tollywood’s answer to 'Bahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "Sye",
  "op2": "Magadheera",
  "op3": "Arundhati",
  "op4": "Bimbisara",
  "ans": "Arundhati"
},
{
  "ques": "Who composed music for 'Arjun Reddy'?<br><br>",
  "quesType": "mcq",
  "op1": "Radhan",
  "op2": "Gopi Sundar",
  "op3": "Vishal Chandrashekhar",
  "op4": "Thaman S",
  "ans": "Radhan"
},
{
  "ques": "Which movie has Allu Arjun as a DJ? <br><br>",
  "quesType": "mcq",
  "op1": "Race Gurram",
  "op2": "Julayi",
  "op3": "DJ: Duvvada Jagannadham",
  "op4": "Sarrainodu",
  "ans": "DJ: Duvvada Jagannadham"
},
{
  "ques": "Who is the dialogue writer for 'Ala Vaikunthapurramuloo'?<br><br>",
  "quesType": "mcq",
  "op1": "Koratala Siva",
  "op2": "Trivikram Srinivas",
  "op3": "Harish Shankar",
  "op4": "Sukumar",
  "ans": "Trivikram Srinivas"
},
{
  "ques": "Which Tollywood actor starred in the Hindi remake of his own film 'Arjun Reddy'?<br><br>",
  "quesType": "mcq",
  "op1": "Vijay Deverakonda",
  "op2": "Naga Chaitanya",
  "op3": "No one, different actor",
  "op4": "Ram Pothineni",
  "ans": "No one, different actor"
},
{
  "ques": "Who is the lead actress in 'Pushpa: The Rise'?<br><br>",
  "quesType": "mcq",
  "op1": "Pooja Hegde",
  "op2": "Rashmika Mandanna",
  "op3": "Keerthy Suresh",
  "op4": "Tamannaah Bhatia",
  "ans": "Rashmika Mandanna"
},
{
  "ques": "Who was the director of 'Yevade Subramanyam'?<br><br>",
  "quesType": "mcq",
  "op1": "Nag Ashwin",
  "op2": "Vivek Athreya",
  "op3": "Tharun Bhascker",
  "op4": "Gautham Tinnanuri",
  "ans": "Nag Ashwin"
},
{
  "ques": "Who composed the music for 'Jersey'?<br><br>",
  "quesType": "mcq",
  "op1": "Gopi Sundar",
  "op2": "Anirudh Ravichander",
  "op3": "Thaman S",
  "op4": "Radhan",
  "ans": "Anirudh Ravichander"
},
{
  "ques": "Who starred as the lead in 'Uppena'?<br><br>",
  "quesType": "mcq",
  "op1": "Vaishnav Tej",
  "op2": "Naga Shaurya",
  "op3": "Nikhil Siddharth",
  "op4": "Raj Tarun",
  "ans": "Vaishnav Tej"
},
{
  "ques": "Which Telugu movie features the character Bhallaladeva?<br><br>",
  "quesType": "mcq",
  "op1": "Magadheera",
  "op2": "Baahubali",
  "op3": "Rudhramadevi",
  "op4": "Sye",
  "ans": "Baahubali"
},
{
  "ques": "Which Tollywood star is nicknamed 'Prince'?<br><br>",
  "quesType": "mcq",
  "op1": "Allu Arjun",
  "op2": "Ram Charan",
  "op3": "Mahesh Babu",
  "op4": "Naga Chaitanya",
  "ans": "Mahesh Babu"
}
,
{
  "ques": "Who is known as the 'Megastar' of Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Nagarjuna",
  "op2": "Venkatesh",
  "op3": "Chiranjeevi",
  "op4": "Balakrishna",
  "ans": "Chiranjeevi"
},
{
  "ques": "Which director is famous for the 'Baahubali' series?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "SS Rajamouli",
  "op3": "Trivikram Srinivas",
  "op4": "Krish",
  "ans": "SS Rajamouli"
},
{
  "ques": "Which movie is the debut film of Mahesh Babu as a lead actor?<br><br>",
  "quesType": "mcq",
  "op1": "Murari",
  "op2": "Raja Kumarudu",
  "op3": "Okkadu",
  "op4": "Athadu",
  "ans": "Raja Kumarudu"
},
{
  "ques": "Which actor is known as 'Power Star' in Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "NTR Jr.",
  "op3": "Allu Arjun",
  "op4": "Pawan Kalyan",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Which movie is NOT directed by Sukumar?<br><br>",
  "quesType": "mcq",
  "op1": "Arya",
  "op2": "1: Nenokkadine",
  "op3": "Pushpa",
  "op4": "Baahubali",
  "ans": "Baahubali"
},
{
  "ques": "Which actress is known as the 'Queen of Tollywood' during the 2000s?<br><br>",
  "quesType": "mcq",
  "op1": "Kajal Aggarwal",
  "op2": "Samantha",
  "op3": "Anushka Shetty",
  "op4": "Ileana D'Cruz",
  "ans": "Ileana D'Cruz"
},
{
  "ques": "What is the first Telugu film to win the National Award for Best Feature Film?<br><br>",
  "quesType": "mcq",
  "op1": "Mayabazar",
  "op2": "Pathala Bhairavi",
  "op3": "Shankarabharanam",
  "op4": "Rudraveena",
  "ans": "Shankarabharanam"
},
{
  "ques": "Which hero is nicknamed 'Young Tiger'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "NTR Jr.",
  "op3": "Nani",
  "op4": "Allu Sirish",
  "ans": "NTR Jr."
},
{
  "ques": "Which movie marked the comeback of Chiranjeevi after a decade?<br><br>",
  "quesType": "mcq",
  "op1": "Khaidi No. 150",
  "op2": "Sye Raa Narasimha Reddy",
  "op3": "Acharya",
  "op4": "Indra",
  "ans": "Khaidi No. 150"
},
{
  "ques": "Which Tollywood movie was India’s official entry for Oscars 2022?<br><br>",
  "quesType": "mcq",
  "op1": "Pushpa",
  "op2": "RRR",
  "op3": "Major",
  "op4": "Jersey",
  "ans": "RRR"
},
{
  "ques": "Who composed music for the movie 'Ala Vaikunthapurramuloo'?<br><br>",
  "quesType": "mcq",
  "op1": "Devi Sri Prasad",
  "op2": "Thaman S",
  "op3": "Mani Sharma",
  "op4": "Gopi Sundar",
  "ans": "Thaman S"
},
{
  "ques": "Which movie is known for the famous dialogue 'Taggede Le'?<br><br>",
  "quesType": "mcq",
  "op1": "Arya",
  "op2": "Pushpa",
  "op3": "Rangasthalam",
  "op4": "Sarrainodu",
  "ans": "Pushpa"
},
{
  "ques": "Which hero is fondly called 'Stylish Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "NTR Jr.",
  "op3": "Allu Arjun",
  "op4": "Vijay Deverakonda",
  "ans": "Allu Arjun"
},
{
  "ques": "Who directed the blockbuster 'Magadheera'?<br><br>",
  "quesType": "mcq",
  "op1": "Puri Jagannadh",
  "op2": "VV Vinayak",
  "op3": "SS Rajamouli",
  "op4": "Boyapati Srinu",
  "ans": "SS Rajamouli"
},
{
  "ques": "Which was the first Telugu 100 crore movie?<br><br>",
  "quesType": "mcq",
  "op1": "Pokiri",
  "op2": "Magadheera",
  "op3": "Baahubali",
  "op4": "Race Gurram",
  "ans": "Magadheera"
},
{
  "ques": "Who played the role of Bhallaladeva in 'Baahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Satyaraj",
  "op3": "Rana Daggubati",
  "op4": "Nani",
  "ans": "Rana Daggubati"
},
{
  "ques": "Which actor starred in the movie 'Arjun Reddy'?<br><br>",
  "quesType": "mcq",
  "op1": "Naga Chaitanya",
  "op2": "Vijay Deverakonda",
  "op3": "Ram Pothineni",
  "op4": "Nani",
  "ans": "Vijay Deverakonda"
},
{
  "ques": "Which legendary actor was also called 'Natasarvabhouma'?<br><br>",
  "quesType": "mcq",
  "op1": "Akkineni Nageswara Rao",
  "op2": "Nandamuri Taraka Rama Rao (NTR Sr.)",
  "op3": "Krishna",
  "op4": "Sobhan Babu",
  "ans": "Nandamuri Taraka Rama Rao (NTR Sr.)"
},
{
  "ques": "Which movie is considered the first Telugu Pan-India hit?<br><br>",
  "quesType": "mcq",
  "op1": "Baahubali",
  "op2": "Magadheera",
  "op3": "Eega",
  "op4": "Shankar Dada MBBS",
  "ans": "Baahubali"
},
{
  "ques": "Which director made the cult classic 'Happy Days'?<br><br>",
  "quesType": "mcq",
  "op1": "Shekhar Kammula",
  "op2": "Maruthi",
  "op3": "Krish",
  "op4": "Anil Ravipudi",
  "ans": "Shekhar Kammula"
},
{
  "ques": "Which movie popularized 'Jai Balayya' chant?<br><br>",
  "quesType": "mcq",
  "op1": "Simha",
  "op2": "Legend",
  "op3": "Akhanda",
  "op4": "Lion",
  "ans": "Akhanda"
},
{
  "ques": "Which Tollywood movie featured the song 'Butta Bomma'?<br><br>",
  "quesType": "mcq",
  "op1": "Sarileru Neekevvaru",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "Pushpa",
  "op4": "DJ",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who is the lead actor in the film 'Jersey'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Nani",
  "op3": "Vijay Deverakonda",
  "op4": "Varun Tej",
  "ans": "Nani"
},
{
  "ques": "Who directed 'Rangasthalam'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Trivikram",
  "op3": "Boyapati Srinu",
  "op4": "Koratal Siva",
  "ans": "Sukumar"
},
{
  "ques": "Which hero is nicknamed 'Natural Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Ram",
  "op3": "Vijay Deverakonda",
  "op4": "Allu Arjun",
  "ans": "Nani"
},
{
  "ques": "Which movie features the iconic 'Panchadara Bomma' song?<br><br>",
  "quesType": "mcq",
  "op1": "Pokiri",
  "op2": "Magadheera",
  "op3": "Arundhati",
  "op4": "Bommarillu",
  "ans": "Magadheera"
},
{
  "ques": "Who produced 'Baahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "Aswini Dutt",
  "op2": "Dil Raju",
  "op3": "Allu Aravind",
  "op4": "Shobu Yarlagadda",
  "ans": "Shobu Yarlagadda"
},
{
  "ques": "Who directed the movie 'Eega'?<br><br>",
  "quesType": "mcq",
  "op1": "Krish",
  "op2": "SS Rajamouli",
  "op3": "Vamshi Paidipally",
  "op4": "Sukumar",
  "ans": "SS Rajamouli"
},
{
  "ques": "Which hero played dual roles in 'Adhurs'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Mahesh Babu",
  "op3": "NTR Jr.",
  "op4": "Allu Arjun",
  "ans": "NTR Jr."
}
,
{
  "ques": "Which Tollywood actor is known as 'Mega Power Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Pawan Kalyan",
  "op2": "Ram Charan",
  "op3": "Varun Tej",
  "op4": "Sai Dharam Tej",
  "ans": "Ram Charan"
},
{
  "ques": "Who directed the film *Magadheera*?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Trivikram",
  "op3": "Sukumar",
  "op4": "Boyapati Srinu",
  "ans": "Rajamouli"
},
{
  "ques": "Who composed music for *Pushpa: The Rise*?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Thaman S",
  "op3": "Anirudh",
  "op4": "Keeravani",
  "ans": "DSP"
},
{
  "ques": "Which actress starred opposite Mahesh Babu in *Bharat Ane Nenu*?<br><br>",
  "quesType": "mcq",
  "op1": "Kajal Aggarwal",
  "op2": "Rakul Preet Singh",
  "op3": "Keerthy Suresh",
  "op4": "Kiara Advani",
  "ans": "Kiara Advani"
},
{
  "ques": "Who is the lead actor in *Arjun Reddy*?<br><br>",
  "quesType": "mcq",
  "op1": "Naga Chaitanya",
  "op2": "Vijay Deverakonda",
  "op3": "Sharwanand",
  "op4": "Nani",
  "ans": "Vijay Deverakonda"
},
{
  "ques": "Which Tollywood movie is set in the fictional village *Rangasthalam*?<br><br>",
  "quesType": "mcq",
  "op1": "Rangasthalam",
  "op2": "Pushpa",
  "op3": "Ala Vaikunthapurramuloo",
  "op4": "Janatha Garage",
  "ans": "Rangasthalam"
},
{
  "ques": "Who directed *Ala Vaikunthapurramuloo*?<br><br>",
  "quesType": "mcq",
  "op1": "Rajamouli",
  "op2": "Sukumar",
  "op3": "Trivikram",
  "op4": "Koratal Siva",
  "ans": "Trivikram"
},
{
  "ques": "Which hero starred in *Goodachari*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Adivi Sesh",
  "op3": "Sharwanand",
  "op4": "Naga Shaurya",
  "ans": "Adivi Sesh"
},
{
  "ques": "Which actor played dual roles in *DJ - Duvvada Jagannadham*?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "Jr NTR",
  "op3": "Allu Arjun",
  "op4": "Ram Pothineni",
  "ans": "Allu Arjun"
},
{
  "ques": "Who played the female lead in *Fidaa*?<br><br>",
  "quesType": "mcq",
  "op1": "Kajal Aggarwal",
  "op2": "Rashmika Mandanna",
  "op3": "Sai Pallavi",
  "op4": "Tamannaah",
  "ans": "Sai Pallavi"
},
{
  "ques": "Which movie is based on the life of *Y. S. Rajasekhara Reddy*?<br><br>",
  "quesType": "mcq",
  "op1": "Leader",
  "op2": "Yatra",
  "op3": "Maharshi",
  "op4": "Srimanthudu",
  "ans": "Yatra"
},
{
  "ques": "Who directed the movie *Ghazi*?<br><br>",
  "quesType": "mcq",
  "op1": "Sankalp Reddy",
  "op2": "Krish",
  "op3": "Deva Katta",
  "op4": "Sekhar Kammula",
  "ans": "Sankalp Reddy"
},
{
  "ques": "Which actor played *Malli* in *Baahubali*?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Rana Daggubati",
  "op3": "Nassar",
  "op4": "Prabhakar",
  "ans": "Prabhakar"
},
{
  "ques": "Which hero’s real name is Ghattamaneni Mahesh Babu?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "Nani",
  "op3": "Vijay Deverakonda",
  "op4": "Nagarjuna",
  "ans": "Mahesh Babu"
},
{
  "ques": "Which Tollywood film was India’s official entry to Oscars 2021?<br><br>",
  "quesType": "mcq",
  "op1": "Vakeel Saab",
  "op2": "Jersey",
  "op3": "Jallikattu",
  "op4": "Care of Kancharapalem",
  "ans": "Jallikattu"
},
{
  "ques": "Which movie has the song *Butta Bomma*?<br><br>",
  "quesType": "mcq",
  "op1": "Sarrainodu",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "Pushpa",
  "op4": "DJ",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who directed *Agent Sai Srinivasa Athreya*?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Ravindran",
  "op2": "Swaroop RSJ",
  "op3": "Sandeep Raj",
  "op4": "Krishna Vamsi",
  "ans": "Swaroop RSJ"
},
{
  "ques": "Who played *Raghava* in *Eega*?<br><br>",
  "quesType": "mcq",
  "op1": "Sudeep",
  "op2": "Nani",
  "op3": "Rana",
  "op4": "Ajay",
  "ans": "Sudeep"
},
{
  "ques": "Which film has the tagline 'Manam Andaram Okate'?<br><br>",
  "quesType": "mcq",
  "op1": "Brindavanam",
  "op2": "Adhurs",
  "op3": "S/o Satyamurthy",
  "op4": "Attarintiki Daredi",
  "ans": "Attarintiki Daredi"
},
{
  "ques": "Who is the director of *Sye*?<br><br>",
  "quesType": "mcq",
  "op1": "Sekhar Kammula",
  "op2": "Rajamouli",
  "op3": "Krish",
  "op4": "Boyapati Srinu",
  "ans": "Rajamouli"
},
{
  "ques": "Which hero starred in *Yevadu*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Prabhas",
  "op3": "Mahesh Babu",
  "op4": "Nithiin",
  "ans": "Ram Charan"
},
{
  "ques": "Which Tollywood actor is nicknamed *Natural Star*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Sharwanand",
  "op3": "Naga Chaitanya",
  "op4": "Ram",
  "ans": "Nani"
},
{
  "ques": "Who is the lead actress in *Geetha Govindam*?<br><br>",
  "quesType": "mcq",
  "op1": "Rashmika Mandanna",
  "op2": "Kajal Aggarwal",
  "op3": "Tamannaah",
  "op4": "Pooja Hegde",
  "ans": "Rashmika Mandanna"
},
{
  "ques": "Who composed music for *RRR*?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Anirudh",
  "op3": "M. M. Keeravani",
  "op4": "Thaman S",
  "ans": "M. M. Keeravani"
},
{
  "ques": "Which film won Nani the Nandi Award for Best Actor?<br><br>",
  "quesType": "mcq",
  "op1": "Eega",
  "op2": "Yeto Vellipoyindhi Manasu",
  "op3": "Bhale Bhale Magadivoy",
  "op4": "MCA",
  "ans": "Yeto Vellipoyindhi Manasu"
},
{
  "ques": "Which film features the song *Samajavaragamana*?<br><br>",
  "quesType": "mcq",
  "op1": "Pushpa",
  "op2": "Sarrainodu",
  "op3": "Ala Vaikunthapurramuloo",
  "op4": "DJ",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who directed *F3*?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Ravipudi",
  "op2": "Sreenu Vaitla",
  "op3": "Krish",
  "op4": "Boyapati Srinu",
  "ans": "Anil Ravipudi"
},
{
  "ques": "Who starred in *Majili*?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Naga Chaitanya",
  "op3": "Sharwanand",
  "op4": "Ram",
  "ans": "Naga Chaitanya"
},
{
  "ques": "Which movie stars Vijay Deverakonda as a boxer?<br><br>",
  "quesType": "mcq",
  "op1": "Arjun Reddy",
  "op2": "Liger",
  "op3": "Taxiwaala",
  "op4": "Dear Comrade",
  "ans": "Liger"
},
{
  "ques": "Which Tollywood hero acted in the Hindi film *War*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Prabhas",
  "op3": "Jr NTR",
  "op4": "None",
  "ans": "None"
}
,
{
  "ques": "Who directed the blockbuster 'Athadu'?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram Srinivas",
  "op2": "Sukumar",
  "op3": "Koratala Siva",
  "op4": "Boyapati Srinu",
  "ans": "Trivikram Srinivas"
},
{
  "ques": "Who played the antagonist in the movie 'Pokiri'?<br><br>",
  "quesType": "mcq",
  "op1": "Prakash Raj",
  "op2": "Ashish Vidyarthi",
  "op3": "Sayaji Shinde",
  "op4": "Mukesh Rishi",
  "ans": "Ashish Vidyarthi"
},
{
  "ques": "Which is the first Telugu film to gross over ₹100 crores worldwide?<br><br>",
  "quesType": "mcq",
  "op1": "Magadheera",
  "op2": "Baahubali: The Beginning",
  "op3": "Attarintiki Daredi",
  "op4": "Gabbar Singh",
  "ans": "Magadheera"
},
{
  "ques": "Who composed the music for 'Srimanthudu'?<br><br>",
  "quesType": "mcq",
  "op1": "Devi Sri Prasad",
  "op2": "Thaman S",
  "op3": "Gopi Sundar",
  "op4": "Radhan",
  "ans": "Devi Sri Prasad"
},
{
  "ques": "Who played the role of Rudhramadevi in the movie 'Rudhramadevi'?<br><br>",
  "quesType": "mcq",
  "op1": "Nayanthara",
  "op2": "Anushka Shetty",
  "op3": "Tamannaah Bhatia",
  "op4": "Keerthy Suresh",
  "ans": "Anushka Shetty"
},
{
  "ques": "Who directed 'Manam', a movie starring three generations of Akkineni family?<br><br>",
  "quesType": "mcq",
  "op1": "Kalyan Krishna",
  "op2": "Vikram Kumar",
  "op3": "Nag Ashwin",
  "op4": "Praveen Sattaru",
  "ans": "Vikram Kumar"
},
{
  "ques": "Which film featured Chiranjeevi in a dual role for the first time?<br><br>",
  "quesType": "mcq",
  "op1": "Khaidi",
  "op2": "Donga Mogudu",
  "op3": "Gang Leader",
  "op4": "Indra",
  "ans": "Donga Mogudu"
},
{
  "ques": "Who produced 'Gabbar Singh'?<br><br>",
  "quesType": "mcq",
  "op1": "Dil Raju",
  "op2": "Allu Aravind",
  "op3": "Bandla Ganesh",
  "op4": "Suresh Babu",
  "ans": "Bandla Ganesh"
},
{
  "ques": "Which movie marked Vijay Deverakonda’s first blockbuster hit?<br><br>",
  "quesType": "mcq",
  "op1": "Geetha Govindam",
  "op2": "Pelli Choopulu",
  "op3": "Taxiwaala",
  "op4": "Dear Comrade",
  "ans": "Pelli Choopulu"
},
{
  "ques": "Who directed the hit film 'Arya'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Trivikram Srinivas",
  "op3": "Harish Shankar",
  "op4": "Sreenu Vaitla",
  "ans": "Sukumar"
},
{
  "ques": "Who played the female lead opposite Ram Charan in 'Magadheera'?<br><br>",
  "quesType": "mcq",
  "op1": "Kajal Aggarwal",
  "op2": "Tamannaah",
  "op3": "Anushka Shetty",
  "op4": "Samantha",
  "ans": "Kajal Aggarwal"
},
{
  "ques": "Which actor portrayed a boxer in the movie 'Ghani'?<br><br>",
  "quesType": "mcq",
  "op1": "Varun Tej",
  "op2": "Nani",
  "op3": "Vijay Deverakonda",
  "op4": "Sudheer Babu",
  "ans": "Varun Tej"
},
{
  "ques": "Which was Nagarjuna’s debut film?<br><br>",
  "quesType": "mcq",
  "op1": "Vikram",
  "op2": "Majnu",
  "op3": "Siva",
  "op4": "Shiva",
  "ans": "Vikram"
},
{
  "ques": "Who composed music for 'RRR'?<br><br>",
  "quesType": "mcq",
  "op1": "Thaman S",
  "op2": "Devi Sri Prasad",
  "op3": "Anirudh Ravichander",
  "op4": "M.M. Keeravani",
  "ans": "M.M. Keeravani"
},
{
  "ques": "Who is the director of 'Goodachari'?<br><br>",
  "quesType": "mcq",
  "op1": "Praveen Sattaru",
  "op2": "Sashi Kiran Tikka",
  "op3": "Swaroop RSJ",
  "op4": "Nag Ashwin",
  "ans": "Sashi Kiran Tikka"
},
{
  "ques": "Which film has the iconic dialogue: 'Nenu Saitham Edi Modhalu Pettanu'?<br><br>",
  "quesType": "mcq",
  "op1": "Indra",
  "op2": "Tagore",
  "op3": "Athadu",
  "op4": "Shankar Dada MBBS",
  "ans": "Tagore"
},
{
  "ques": "Who is the music composer for 'Attarintiki Daredi'?<br><br>",
  "quesType": "mcq",
  "op1": "Thaman S",
  "op2": "Devi Sri Prasad",
  "op3": "Anup Rubens",
  "op4": "Gopi Sundar",
  "ans": "Devi Sri Prasad"
},
{
  "ques": "Who starred as the lead in 'Swathi Muthyam'?<br><br>",
  "quesType": "mcq",
  "op1": "Nagarjuna",
  "op2": "N.T. Rama Rao",
  "op3": "Kamal Haasan",
  "op4": "Chiranjeevi",
  "ans": "Kamal Haasan"
},
{
  "ques": "Which actor is called 'Mass Maharaja'?<br><br>",
  "quesType": "mcq",
  "op1": "Nandamuri Balakrishna",
  "op2": "Venkatesh",
  "op3": "Ravi Teja",
  "op4": "Nani",
  "ans": "Ravi Teja"
},
{
  "ques": "Who played the villain in 'Akhanda'?<br><br>",
  "quesType": "mcq",
  "op1": "Prakash Raj",
  "op2": "Jagapathi Babu",
  "op3": "Srikanth",
  "op4": "Mukesh Rishi",
  "ans": "Srikanth"
},
{
  "ques": "Which film is based on the life of Uyyalawada Narasimha Reddy?<br><br>",
  "quesType": "mcq",
  "op1": "Sye Raa Narasimha Reddy",
  "op2": "Khaidi No.150",
  "op3": "Indra",
  "op4": "Stalin",
  "ans": "Sye Raa Narasimha Reddy"
},
{
  "ques": "Which movie has the tagline 'The Power Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Jalsa",
  "op2": "Gabbar Singh",
  "op3": "Bharat Ane Nenu",
  "op4": "Panjaa",
  "ans": "Gabbar Singh"
},
{
  "ques": "Who wrote the dialogues for 'Khaleja'?<br><br>",
  "quesType": "mcq",
  "op1": "Koratala Siva",
  "op2": "Sukumar",
  "op3": "Trivikram Srinivas",
  "op4": "Harish Shankar",
  "ans": "Trivikram Srinivas"
},
{
  "ques": "Who directed 'Fidaa'?<br><br>",
  "quesType": "mcq",
  "op1": "Sekhar Kammula",
  "op2": "Koratala Siva",
  "op3": "Trivikram Srinivas",
  "op4": "Sukumar",
  "ans": "Sekhar Kammula"
},
{
  "ques": "Which Tollywood actor is nicknamed 'Natural Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Ravi Teja",
  "op2": "Nani",
  "op3": "Ram Pothineni",
  "op4": "Varun Tej",
  "ans": "Nani"
},
{
  "ques": "Who composed music for 'Bimbisara'?<br><br>",
  "quesType": "mcq",
  "op1": "Mickey J Meyer",
  "op2": "M.M. Keeravani",
  "op3": "Chirantan Bhatt",
  "op4": "Thaman S",
  "ans": "Chirantan Bhatt"
},
{
  "ques": "Who directed 'Shyam Singha Roy'?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Sankrityan",
  "op2": "Nag Ashwin",
  "op3": "Praveen Sattaru",
  "op4": "Swaroop RSJ",
  "ans": "Rahul Sankrityan"
},
{
  "ques": "Which movie has the famous dialogue 'Okka Chance Istava'?<br><br>",
  "quesType": "mcq",
  "op1": "Pokiri",
  "op2": "Gabbar Singh",
  "op3": "Athadu",
  "op4": "Businessman",
  "ans": "Pokiri"
},
{
  "ques": "Who starred as 'Bhishma' in the movie 'Bheeshma'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Nithiin",
  "op3": "Ram Pothineni",
  "op4": "Sudheer Babu",
  "ans": "Nithiin"
},
{
  "ques": "Which film has the tagline 'Yuddham Shuru'?<br><br>",
  "quesType": "mcq",
  "op1": "Akhanda",
  "op2": "Sye",
  "op3": "Narasimha Naidu",
  "op4": "Rangasthalam",
  "ans": "Akhanda"
}
,
{
  "ques": "Which actor is called 'Rebel Star' in Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "NTR Jr.",
  "op3": "Allu Arjun",
  "op4": "Ram Charan",
  "ans": "Prabhas"
},
{
  "ques": "Who directed the film 'Athadu'?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram Srinivas",
  "op2": "Sukumar",
  "op3": "VV Vinayak",
  "op4": "SS Rajamouli",
  "ans": "Trivikram Srinivas"
},
{
  "ques": "Which Tollywood movie is known for the dialogue 'Cheppanu Brother'?<br><br>",
  "quesType": "mcq",
  "op1": "Arya",
  "op2": "Julayi",
  "op3": "Gabbar Singh",
  "op4": "Race Gurram",
  "ans": "Arya"
},
{
  "ques": "Who composed the music for 'Baahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "Harris Jayaraj",
  "op2": "Thaman S",
  "op3": "Devi Sri Prasad",
  "op4": "MM Keeravani",
  "ans": "MM Keeravani"
},
{
  "ques": "Which actress played the lead opposite Mahesh Babu in 'Pokiri'?<br><br>",
  "quesType": "mcq",
  "op1": "Trisha",
  "op2": "Ileana D'Cruz",
  "op3": "Anushka Shetty",
  "op4": "Samantha",
  "ans": "Ileana D'Cruz"
},
{
  "ques": "Who is the lead actor in 'Evaru'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Vijay Deverakonda",
  "op3": "Adivi Sesh",
  "op4": "Sudheer Babu",
  "ans": "Adivi Sesh"
},
{
  "ques": "Who is the director of 'Arjun Reddy'?<br><br>",
  "quesType": "mcq",
  "op1": "Vamshi Paidipally",
  "op2": "Sandeep Reddy Vanga",
  "op3": "Krish",
  "op4": "Puri Jagannadh",
  "ans": "Sandeep Reddy Vanga"
},
{
  "ques": "Who played the female lead in 'Rangasthalam'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Rakul Preet Singh",
  "op3": "Samantha",
  "op4": "Kajal Aggarwal",
  "ans": "Samantha"
},
{
  "ques": "Which movie is known for the song 'Top Lesipoddi'?<br><br>",
  "quesType": "mcq",
  "op1": "Temper",
  "op2": "Race Gurram",
  "op3": "Arya 2",
  "op4": "Kick",
  "ans": "Iddarammayilatho"
},
{
  "ques": "Which actor starred in 'Nannaku Prematho'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Ram Charan",
  "op3": "NTR Jr.",
  "op4": "Mahesh Babu",
  "ans": "NTR Jr."
},
{
  "ques": "Which Tollywood film was originally titled 'Gharana Mogudu' in Hindi?<br><br>",
  "quesType": "mcq",
  "op1": "Gentleman",
  "op2": "Indra",
  "op3": "Shankar Dada MBBS",
  "op4": "None of these",
  "ans": "None of these"
},
{
  "ques": "Which movie features the popular line 'Nu Vantinti Vadu Kadura'?<br><br>",
  "quesType": "mcq",
  "op1": "Pokiri",
  "op2": "Businessman",
  "op3": "Sye",
  "op4": "Temper",
  "ans": "Pokiri"
},
{
  "ques": "Who is the director of 'Businessman'?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram",
  "op2": "Sukumar",
  "op3": "Puri Jagannadh",
  "op4": "VV Vinayak",
  "ans": "Puri Jagannadh"
},
{
  "ques": "Who played Bujji in the film 'Bujjigadu'?<br><br>",
  "quesType": "mcq",
  "op1": "NTR Jr.",
  "op2": "Prabhas",
  "op3": "Ram Charan",
  "op4": "Allu Arjun",
  "ans": "Prabhas"
},
{
  "ques": "Who directed 'Temper'?<br><br>",
  "quesType": "mcq",
  "op1": "Puri Jagannadh",
  "op2": "Trivikram Srinivas",
  "op3": "Boyapati Srinu",
  "op4": "Krish",
  "ans": "Puri Jagannadh"
},
{
  "ques": "Which actress starred in 'Julayi'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Tamannaah",
  "op3": "Ileana D'Cruz",
  "op4": "Kajal Aggarwal",
  "ans": "Ileana D'Cruz"
},
{
  "ques": "Which movie has the famous song 'Pilla' sung by Haricharan?<br><br>",
  "quesType": "mcq",
  "op1": "Gabbar Singh",
  "op2": "Attarintiki Daredi",
  "op3": "Arya 2",
  "op4": "Race Gurram",
  "ans": "Gabbar Singh"
},
{
  "ques": "Who played dual roles in 'S/O Satyamurthy'?<br><br>",
  "quesType": "mcq",
  "op1": "NTR Jr.",
  "op2": "Allu Arjun",
  "op3": "Ram Charan",
  "op4": "None",
  "ans": "None"
},
{
  "ques": "Which Tollywood movie features the song 'Samajavaragamana'?<br><br>",
  "quesType": "mcq",
  "op1": "Ala Vaikunthapurramuloo",
  "op2": "Pushpa",
  "op3": "DJ",
  "op4": "Sarrainodu",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who is the director of 'DJ Duvvada Jagannadham'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Harish Shankar",
  "op3": "Trivikram",
  "op4": "VV Vinayak",
  "ans": "Harish Shankar"
},
{
  "ques": "Which movie is Mahesh Babu's first film with Koratala Siva?<br><br>",
  "quesType": "mcq",
  "op1": "Srimanthudu",
  "op2": "Bharat Ane Nenu",
  "op3": "Maharshi",
  "op4": "Spyder",
  "ans": "Srimanthudu"
},
{
  "ques": "Which movie stars Allu Arjun as an ex-army man?<br><br>",
  "quesType": "mcq",
  "op1": "Race Gurram",
  "op2": "Naa Peru Surya",
  "op3": "Julayi",
  "op4": "Sarrainodu",
  "ans": "Naa Peru Surya"
},
{
  "ques": "Which actress starred in 'Goodachari'?<br><br>",
  "quesType": "mcq",
  "op1": "Lavanya Tripathi",
  "op2": "Rakul Preet Singh",
  "op3": "Sobhita Dhulipala",
  "op4": "Tamannaah",
  "ans": "Sobhita Dhulipala"
},
{
  "ques": "Who played the antagonist in 'Sarileru Neekevvaru'?<br><br>",
  "quesType": "mcq",
  "op1": "Prakash Raj",
  "op2": "Vijayashanti",
  "op3": "Jagapathi Babu",
  "op4": "Rao Ramesh",
  "ans": "Prakash Raj"
},
{
  "ques": "Which movie is about farmers and has Mahesh Babu in lead?<br><br>",
  "quesType": "mcq",
  "op1": "Bharat Ane Nenu",
  "op2": "Maharshi",
  "op3": "Srimanthudu",
  "op4": "Spyder",
  "ans": "Maharshi"
},
{
  "ques": "Who is known for the dialogue 'Adugaduguna Aadadi'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Mahesh Babu",
  "op3": "Pawan Kalyan",
  "op4": "NTR Jr.",
  "ans": "Mahesh Babu"
},
{
  "ques": "Who directed 'Krack'?<br><br>",
  "quesType": "mcq",
  "op1": "Gopichand Malineni",
  "op2": "Anil Ravipudi",
  "op3": "Trivikram",
  "op4": "Boyapati Srinu",
  "ans": "Gopichand Malineni"
},
{
  "ques": "Which movie stars Nani as a cricketer?<br><br>",
  "quesType": "mcq",
  "op1": "Gang Leader",
  "op2": "Jersey",
  "op3": "Eega",
  "op4": "Ninnu Kori",
  "ans": "Jersey"
},
{
  "ques": "Which actress starred in 'Geetha Govindam'?<br><br>",
  "quesType": "mcq",
  "op1": "Kajal Aggarwal",
  "op2": "Rashmika Mandanna",
  "op3": "Samantha",
  "op4": "Tamannaah",
  "ans": "Rashmika Mandanna"
}
,
{
  "ques": "Which Tollywood director is known as the 'Creative Director'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Krish",
  "op3": "Krishna Vamsi",
  "op4": "Trivikram",
  "ans": "Krishna Vamsi"
},
{
  "ques": "Which hero is known as 'Young Tiger'?<br><br>",
  "quesType": "mcq",
  "op1": "Allu Arjun",
  "op2": "Ram Charan",
  "op3": "NTR Jr.",
  "op4": "Mahesh Babu",
  "ans": "NTR Jr."
},
{
  "ques": "Who composed the music for *Khaleja*?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Thaman S",
  "op3": "Harris Jayaraj",
  "op4": "Keeravani",
  "ans": "Mani Sharma"
},
{
  "ques": "Which movie features the song *Ramuloo Ramulaa*?<br><br>",
  "quesType": "mcq",
  "op1": "Sarrainodu",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "Pushpa",
  "op4": "DJ",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Which Tollywood film was the first to collect ₹200 crores?<br><br>",
  "quesType": "mcq",
  "op1": "Magadheera",
  "op2": "Baahubali: The Beginning",
  "op3": "Baahubali: The Conclusion",
  "op4": "RRR",
  "ans": "Baahubali: The Beginning"
},
{
  "ques": "Who played the role of Dev Sena in Baahubali?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Anushka Shetty",
  "op3": "Rakul Preet Singh",
  "op4": "Kajal Aggarwal",
  "ans": "Anushka Shetty"
},
{
  "ques": "Which hero played three roles in *Jai Lava Kusa*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Prabhas",
  "op3": "NTR Jr.",
  "op4": "Allu Arjun",
  "ans": "NTR Jr."
},
{
  "ques": "Which movie is directed by Koratala Siva and stars Mahesh Babu?<br><br>",
  "quesType": "mcq",
  "op1": "Srimanthudu",
  "op2": "Maharshi",
  "op3": "Dookudu",
  "op4": "Spyder",
  "ans": "Srimanthudu"
},
{
  "ques": "Which film did Pawan Kalyan remake from a Hindi blockbuster?<br><br>",
  "quesType": "mcq",
  "op1": "Gabbar Singh",
  "op2": "Attarintiki Daredi",
  "op3": "Katamarayudu",
  "op4": "Vakeel Saab",
  "ans": "Gabbar Singh"
},
{
  "ques": "Who is the villain in *Kick*?<br><br>",
  "quesType": "mcq",
  "op1": "Shaam",
  "op2": "Prakash Raj",
  "op3": "Ravi Teja",
  "op4": "Brahmanandam",
  "ans": "Shaam"
},
{
  "ques": "Which director is famous for *Mirchi* and *Srimanthudu*?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Boyapati Srinu",
  "op3": "Trivikram",
  "op4": "Koratala Siva",
  "ans": "Koratala Siva"
},
{
  "ques": "Who starred opposite Samantha in *Eega*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Prabhas",
  "op3": "Rana",
  "op4": "Sharwanand",
  "ans": "Nani"
},
{
  "ques": "Which movie marked the debut of Rashmika Mandanna in Telugu?<br><br>",
  "quesType": "mcq",
  "op1": "Geetha Govindam",
  "op2": "Chalo",
  "op3": "Bheeshma",
  "op4": "Sarileru Neekevvaru",
  "ans": "Chalo"
},
{
  "ques": "Which hero starred in *Krishna Gaadi Veera Prema Gaadha*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Naga Chaitanya",
  "op3": "Ram",
  "op4": "Sharwanand",
  "ans": "Nani"
},
{
  "ques": "Which Tollywood star is nicknamed *Stylish Star*?<br><br>",
  "quesType": "mcq",
  "op1": "Allu Arjun",
  "op2": "Ram Charan",
  "op3": "NTR Jr.",
  "op4": "Mahesh Babu",
  "ans": "Allu Arjun"
},
{
  "ques": "Which actress played the lead in *Mahanati*?<br><br>",
  "quesType": "mcq",
  "op1": "Rakul Preet Singh",
  "op2": "Tamannaah",
  "op3": "Keerthy Suresh",
  "op4": "Samantha",
  "ans": "Keerthy Suresh"
},
{
  "ques": "Which actor starred in *Pelli Choopulu*?<br><br>",
  "quesType": "mcq",
  "op1": "Sharwanand",
  "op2": "Vijay Deverakonda",
  "op3": "Nithiin",
  "op4": "Naga Shaurya",
  "ans": "Vijay Deverakonda"
},
{
  "ques": "Who directed *Anthariksham 9000 KMPH*?<br><br>",
  "quesType": "mcq",
  "op1": "Sankalp Reddy",
  "op2": "Krish",
  "op3": "Sandeep Vanga",
  "op4": "Deva Katta",
  "ans": "Sankalp Reddy"
},
{
  "ques": "Which film was Samantha's debut in Tollywood?<br><br>",
  "quesType": "mcq",
  "op1": "Ye Maaya Chesave",
  "op2": "Dookudu",
  "op3": "Brindavanam",
  "op4": "Eega",
  "ans": "Ye Maaya Chesave"
},
{
  "ques": "Which Tollywood movie is inspired by the story of Srikanth Bolla?<br><br>",
  "quesType": "mcq",
  "op1": "Maharshi",
  "op2": "Leader",
  "op3": "Srikanth",
  "op4": "Naa Peru Surya",
  "ans": "Srikanth"
},
{
  "ques": "Which hero is called *Rebel Star*?<br><br>",
  "quesType": "mcq",
  "op1": "Nagarjuna",
  "op2": "Prabhas",
  "op3": "Balakrishna",
  "op4": "Nithiin",
  "ans": "Prabhas"
},
{
  "ques": "Which movie stars Mahesh Babu as a spy?<br><br>",
  "quesType": "mcq",
  "op1": "Businessman",
  "op2": "Spyder",
  "op3": "Dookudu",
  "op4": "1 Nenokkadine",
  "ans": "Spyder"
},
{
  "ques": "Which Tollywood movie is a biopic of a badminton player?<br><br>",
  "quesType": "mcq",
  "op1": "Goodachari",
  "op2": "Mahanati",
  "op3": "Gopichand",
  "op4": "Jersey",
  "ans": "Gopichand"
},
{
  "ques": "Who played the role of Bhallaladeva?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Rana Daggubati",
  "op3": "Nassar",
  "op4": "Sudeep",
  "ans": "Rana Daggubati"
},
{
  "ques": "Who composed the background score for *Eega*?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Thaman",
  "op3": "Keeravani",
  "op4": "Anirudh",
  "ans": "Keeravani"
},
{
  "ques": "Which film features the song *Inkem Inkem Inkem Kaavaale*?<br><br>",
  "quesType": "mcq",
  "op1": "Mahanati",
  "op2": "Geetha Govindam",
  "op3": "Arjun Reddy",
  "op4": "Taxiwaala",
  "ans": "Geetha Govindam"
},
{
  "ques": "Which hero’s real name is Konidela Kalyan Babu?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Chiranjeevi",
  "op3": "Pawan Kalyan",
  "op4": "Allu Arjun",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Which movie did Sukumar direct starring Jr NTR?<br><br>",
  "quesType": "mcq",
  "op1": "Janatha Garage",
  "op2": "Nannaku Prematho",
  "op3": "Temper",
  "op4": "Aravinda Sametha",
  "ans": "Nannaku Prematho"
},
{
  "ques": "Who played the hero in *A Aa*?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Naga Chaitanya",
  "op3": "Nani",
  "op4": "Varun Tej",
  "ans": "Nithiin"
},
{
  "ques": "Who is known as *Mass Maharaja*?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Prabhas",
  "op3": "Ravi Teja",
  "op4": "Jr NTR",
  "ans": "Ravi Teja"
}
,
{
  "ques": "Who is the director of 'Pushpa: The Rise'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Trivikram Srinivas",
  "op3": "Boyapati Srinu",
  "op4": "Vamsi Paidipally",
  "ans": "Sukumar"
},
{
  "ques": "Who played the female lead in 'Aravinda Sametha Veera Raghava'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Pooja Hegde",
  "op3": "Rakul Preet Singh",
  "op4": "Tamannaah",
  "ans": "Pooja Hegde"
},
{
  "ques": "Which film did Ram Charan win his first Filmfare Best Actor award for?<br><br>",
  "quesType": "mcq",
  "op1": "Chirutha",
  "op2": "Magadheera",
  "op3": "Orange",
  "op4": "Racha",
  "ans": "Magadheera"
},
{
  "ques": "Who composed the music for 'Geetha Govindam'?<br><br>",
  "quesType": "mcq",
  "op1": "Thaman S",
  "op2": "Anirudh Ravichander",
  "op3": "Gopi Sundar",
  "op4": "Devi Sri Prasad",
  "ans": "Gopi Sundar"
},
{
  "ques": "Which movie features the song 'Butta Bomma'?<br><br>",
  "quesType": "mcq",
  "op1": "Aravinda Sametha",
  "op2": "Pushpa",
  "op3": "Ala Vaikunthapurramuloo",
  "op4": "Sarrainodu",
  "ans": "Ala Vaikunthapurramuloo"
},
{
  "ques": "Who directed the movie 'Majili'?<br><br>",
  "quesType": "mcq",
  "op1": "Vikram Kumar",
  "op2": "Shiva Nirvana",
  "op3": "Parasuram",
  "op4": "Maruthi",
  "ans": "Shiva Nirvana"
},
{
  "ques": "Who played the villain in the movie 'Businessman'?<br><br>",
  "quesType": "mcq",
  "op1": "Prakash Raj",
  "op2": "Sayaji Shinde",
  "op3": "Nassar",
  "op4": "Rao Ramesh",
  "ans": "Sayaji Shinde"
},
{
  "ques": "Which movie is known for the famous dialogue 'Mind Block'?<br><br>",
  "quesType": "mcq",
  "op1": "Sarrainodu",
  "op2": "Maharshi",
  "op3": "Sarileru Neekevvaru",
  "op4": "Spyder",
  "ans": "Sarileru Neekevvaru"
},
{
  "ques": "Which actress starred with Mahesh Babu in '1: Nenokkadine'?<br><br>",
  "quesType": "mcq",
  "op1": "Kriti Sanon",
  "op2": "Kajal Aggarwal",
  "op3": "Tamannaah",
  "op4": "Samantha",
  "ans": "Kriti Sanon"
},
{
  "ques": "Who is the director of the movie 'Jersey'?<br><br>",
  "quesType": "mcq",
  "op1": "Vikram Kumar",
  "op2": "Shiva Nirvana",
  "op3": "Gowtam Tinnanuri",
  "op4": "Praveen Sattaru",
  "ans": "Gowtam Tinnanuri"
},
{
  "ques": "Who played the villain in the movie 'Eega'?<br><br>",
  "quesType": "mcq",
  "op1": "Sudeep",
  "op2": "Jagapathi Babu",
  "op3": "Prakash Raj",
  "op4": "Mukesh Rishi",
  "ans": "Sudeep"
},
{
  "ques": "Who was the female lead in the movie 'Dookudu'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Kajal Aggarwal",
  "op3": "Tamannaah",
  "op4": "Shruti Haasan",
  "ans": "Samantha"
},
{
  "ques": "Who directed the movie 'Ye Maaya Chesave'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Koratala Siva",
  "op3": "Gautham Vasudev Menon",
  "op4": "Trivikram Srinivas",
  "ans": "Gautham Vasudev Menon"
},
{
  "ques": "Which film is known for the song 'Pilla Nuvvu Leni Jeevitam'?<br><br>",
  "quesType": "mcq",
  "op1": "Gabbar Singh",
  "op2": "Attarintiki Daredi",
  "op3": "Sardaar Gabbar Singh",
  "op4": "Jalsa",
  "ans": "Gabbar Singh"
},
{
  "ques": "Which actress played lead opposite Jr. NTR in 'Temper'?<br><br>",
  "quesType": "mcq",
  "op1": "Rakul Preet Singh",
  "op2": "Kajal Aggarwal",
  "op3": "Tamannaah",
  "op4": "Samantha",
  "ans": "Kajal Aggarwal"
},
{
  "ques": "Who directed 'Khaidi No. 150'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "V.V. Vinayak",
  "op3": "Boyapati Srinu",
  "op4": "Trivikram Srinivas",
  "ans": "V.V. Vinayak"
},
{
  "ques": "Which actor appeared as a RAW agent in 'Goodachari'?<br><br>",
  "quesType": "mcq",
  "op1": "Adivi Sesh",
  "op2": "Rana Daggubati",
  "op3": "Allu Sirish",
  "op4": "Sudheer Babu",
  "ans": "Adivi Sesh"
},
{
  "ques": "Which movie starred Nani and Sai Pallavi together?<br><br>",
  "quesType": "mcq",
  "op1": "Ninnu Kori",
  "op2": "MCA",
  "op3": "Shyam Singha Roy",
  "op4": "Jersey",
  "ans": "MCA"
},
{
  "ques": "Who composed the music for 'Akhanda'?<br><br>",
  "quesType": "mcq",
  "op1": "Devi Sri Prasad",
  "op2": "Thaman S",
  "op3": "Gopi Sundar",
  "op4": "Mickey J Meyer",
  "ans": "Thaman S"
},
{
  "ques": "Who starred as the lead in 'Panjaa'?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "Allu Arjun",
  "op3": "Pawan Kalyan",
  "op4": "Ram Charan",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Who is the director of 'Leader'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Sekhar Kammula",
  "op3": "Koratala Siva",
  "op4": "Vamsi Paidipally",
  "ans": "Sekhar Kammula"
},
{
  "ques": "Which film marked Sai Dharam Tej’s debut?<br><br>",
  "quesType": "mcq",
  "op1": "Pilla Nuvvu Leni Jeevitam",
  "op2": "Subramanyam For Sale",
  "op3": "Supreme",
  "op4": "Rey",
  "ans": "Rey"
},
{
  "ques": "Who played the antagonist in 'Race Gurram'?<br><br>",
  "quesType": "mcq",
  "op1": "Ravi Kishan",
  "op2": "Mukesh Rishi",
  "op3": "Prakash Raj",
  "op4": "Sudeep",
  "ans": "Ravi Kishan"
},
{
  "ques": "Which movie features the character 'DJ'?<br><br>",
  "quesType": "mcq",
  "op1": "Julayi",
  "op2": "Sarrainodu",
  "op3": "DJ: Duvvada Jagannadham",
  "op4": "Race Gurram",
  "ans": "DJ: Duvvada Jagannadham"
},
{
  "ques": "Who directed 'Oopiri'?<br><br>",
  "quesType": "mcq",
  "op1": "Praveen Sattaru",
  "op2": "Vamsi Paidipally",
  "op3": "Sekhar Kammula",
  "op4": "Sukumar",
  "ans": "Vamsi Paidipally"
},
{
  "ques": "Which Tollywood actor starred in the Hindi film 'Student of the Year'?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Mahesh Babu",
  "op3": "Vijay Deverakonda",
  "op4": "Siddharth Malhotra",
  "ans": "Siddharth Malhotra"
},
{
  "ques": "Which actress starred in both 'Arya 2' and 'Race Gurram'?<br><br>",
  "quesType": "mcq",
  "op1": "Kajal Aggarwal",
  "op2": "Tamannaah",
  "op3": "Samantha",
  "op4": "Shruti Haasan",
  "ans": "Shruti Haasan"
},
{
  "ques": "Which movie is a remake of Tamil film 'Thani Oruvan'?<br><br>",
  "quesType": "mcq",
  "op1": "Dhruva",
  "op2": "Bruce Lee",
  "op3": "Sye Raa",
  "op4": "Yevadu",
  "ans": "Dhruva"
},
{
  "ques": "Who composed the music for 'Sye'?<br><br>",
  "quesType": "mcq",
  "op1": "Keeravani",
  "op2": "Mani Sharma",
  "op3": "Devi Sri Prasad",
  "op4": "Thaman S",
  "ans": "M.M. Keeravani"
}
,
{
  "ques": "Who played the role of Devasena in 'Baahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Kajal Aggarwal",
  "op3": "Anushka Shetty",
  "op4": "Rakul Preet Singh",
  "ans": "Anushka Shetty"
},
{
  "ques": "Which movie is also known as the 'first Telugu pan-India hit'?<br><br>",
  "quesType": "mcq",
  "op1": "Baahubali",
  "op2": "Magadheera",
  "op3": "Arya",
  "op4": "Pokiri",
  "ans": "Baahubali"
},
{
  "ques": "Which actor is known as 'Stylish Star'?<br><br>",
  "quesType": "mcq",
  "op1": "Mahesh Babu",
  "op2": "Allu Arjun",
  "op3": "Ram Charan",
  "op4": "NTR Jr.",
  "ans": "Allu Arjun"
},
{
  "ques": "Who directed 'Magadheera'?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram",
  "op2": "Sukumar",
  "op3": "SS Rajamouli",
  "op4": "Krish",
  "ans": "SS Rajamouli"
},
{
  "ques": "Which actress starred in 'Bommarillu'?<br><br>",
  "quesType": "mcq",
  "op1": "Genelia D'Souza",
  "op2": "Tamannaah",
  "op3": "Kajal Aggarwal",
  "op4": "Samantha",
  "ans": "Genelia D'Souza"
},
{
  "ques": "Which film has the song 'Ammayi Kitiki Pakkana'?<br><br>",
  "quesType": "mcq",
  "op1": "Arya 2",
  "op2": "Gabbar Singh",
  "op3": "Sye",
  "op4": "Pokiri",
  "ans": "Gabbar Singh"
},
{
  "ques": "Which actor played Bhallaladeva in 'Baahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "Prabhas",
  "op2": "Rana Daggubati",
  "op3": "NTR Jr.",
  "op4": "Ram Charan",
  "ans": "Rana Daggubati"
},
{
  "ques": "Who directed 'Pushpa: The Rise'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Trivikram",
  "op3": "VV Vinayak",
  "op4": "Krish",
  "ans": "Sukumar"
},
{
  "ques": "Which movie features the line 'Taggede Le'?<br><br>",
  "quesType": "mcq",
  "op1": "Pushpa",
  "op2": "Ala Vaikunthapurramuloo",
  "op3": "DJ",
  "op4": "Sarrainodu",
  "ans": "Pushpa"
},
{
  "ques": "Which actor is known as 'Power Star'?<br><br>",
  "quesType": "mcq",
  "op1": "NTR Jr.",
  "op2": "Ram Charan",
  "op3": "Pawan Kalyan",
  "op4": "Allu Arjun",
  "ans": "Pawan Kalyan"
},
{
  "ques": "Who played the lead female in 'Orange'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Genelia D'Souza",
  "op3": "Tamannaah",
  "op4": "Kajal Aggarwal",
  "ans": "Genelia D'Souza"
},
{
  "ques": "Which movie is known for the song 'Pakka Local'?<br><br>",
  "quesType": "mcq",
  "op1": "Janatha Garage",
  "op2": "Temper",
  "op3": "Sarrainodu",
  "op4": "DJ",
  "ans": "Janatha Garage"
},
{
  "ques": "Who played the villain in 'Bharat Ane Nenu'?<br><br>",
  "quesType": "mcq",
  "op1": "Jagapathi Babu",
  "op2": "Prakash Raj",
  "op3": "Rao Ramesh",
  "op4": "Aadhi Pinisetty",
  "ans": "Prakash Raj"
},
{
  "ques": "Which actress starred in 'Fidaa'?<br><br>",
  "quesType": "mcq",
  "op1": "Samantha",
  "op2": "Sai Pallavi",
  "op3": "Tamannaah",
  "op4": "Kajal Aggarwal",
  "ans": "Sai Pallavi"
},
{
  "ques": "Which movie stars Prabhas as a bounty hunter?<br><br>",
  "quesType": "mcq",
  "op1": "Mirchi",
  "op2": "Billa",
  "op3": "Rebel",
  "op4": "Saaho",
  "ans": "Saaho"
},
{
  "ques": "Who directed 'Gabbar Singh'?<br><br>",
  "quesType": "mcq",
  "op1": "Harish Shankar",
  "op2": "Trivikram",
  "op3": "VV Vinayak",
  "op4": "Sukumar",
  "ans": "Harish Shankar"
},
{
  "ques": "Which film stars Ram Charan as a stuntman?<br><br>",
  "quesType": "mcq",
  "op1": "Bruce Lee - The Fighter",
  "op2": "Yevadu",
  "op3": "Dhruva",
  "op4": "Orange",
  "ans": "Bruce Lee - The Fighter"
},
{
  "ques": "Who composed music for 'Pushpa'?<br><br>",
  "quesType": "mcq",
  "op1": "Thaman S",
  "op2": "Anirudh Ravichander",
  "op3": "Devi Sri Prasad",
  "op4": "MM Keeravani",
  "ans": "Devi Sri Prasad"
},
{
  "ques": "Which actor starred in 'Rakshasudu'?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Adivi Sesh",
  "op3": "Bellamkonda Srinivas",
  "op4": "Sudheer Babu",
  "ans": "Bellamkonda Srinivas"
},
{
  "ques": "Which actress played the lead in 'Gang Leader' (2019)?<br><br>",
  "quesType": "mcq",
  "op1": "Keerthy Suresh",
  "op2": "Rashmika Mandanna",
  "op3": "Samantha",
  "op4": "Tamannaah",
  "ans": "Rashmika Mandanna"
},
{
  "ques": "Which actor played dual roles in 'Yevadu'?<br><br>",
  "quesType": "mcq",
  "op1": "Allu Arjun",
  "op2": "Ram Charan",
  "op3": "NTR Jr.",
  "op4": "Prabhas",
  "ans": "Ram Charan"
},
{
  "ques": "Which film features the line 'Oka Manchi Roju'?<br><br>",
  "quesType": "mcq",
  "op1": "Eega",
  "op2": "Goodachari",
  "op3": "One",
  "op4": "Oka Manchi Roju",
  "ans": "Oka Manchi Roju"
},
{
  "ques": "Who starred as the hero in 'Middle Class Abbayi' (MCA)?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "Nithiin",
  "op3": "Ram",
  "op4": "Vijay Deverakonda",
  "ans": "Nani"
},
{
  "ques": "Which movie features 'Blockbuster' song?<br><br>",
  "quesType": "mcq",
  "op1": "Sarrainodu",
  "op2": "DJ",
  "op3": "Pushpa",
  "op4": "Ala Vaikunthapurramuloo",
  "ans": "Sarrainodu"
},
{
  "ques": "Who directed 'Fidaa'?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Sekhar Kammula",
  "op3": "Harish Shankar",
  "op4": "VV Vinayak",
  "ans": "Sekhar Kammula"
},
{
  "ques": "Who starred in 'Eega' as the hero?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "NTR Jr.",
  "op3": "Ram Charan",
  "op4": "Nithiin",
  "ans": "Nani"
},
{
  "ques": "Who played villain in 'Eega'?<br><br>",
  "quesType": "mcq",
  "op1": "Prakash Raj",
  "op2": "Jagapathi Babu",
  "op3": "Sudeep",
  "op4": "Aadhi Pinisetty",
  "ans": "Sudeep"
},
{
  "ques": "Which movie stars Vijay Deverakonda as a bodyguard?<br><br>",
  "quesType": "mcq",
  "op1": "Geetha Govindam",
  "op2": "World Famous Lover",
  "op3": "Dear Comrade",
  "op4": "Taxiwaala",
  "ans": "World Famous Lover"
},
{
  "ques": "Which Tollywood movie is an official remake of Tamil 'Theri'?<br><br>",
  "quesType": "mcq",
  "op1": "Sarkar",
  "op2": "Bharat Ane Nenu",
  "op3": "Whistle",
  "op4": "None",
  "ans": "Whistle"
},
{
  "ques": "Who directed 'Whistle'?<br><br>",
  "quesType": "mcq",
  "op1": "Atlee",
  "op2": "Vamshi Paidipally",
  "op3": "Anil Ravipudi",
  "op4": "Sekhar Kammula",
  "ans": "Atlee"
}
,
{
  "ques": "Which movie earned Mahesh Babu his first Filmfare Best Actor award?<br><br>",
  "quesType": "mcq",
  "op1": "Okkadu",
  "op2": "Pokiri",
  "op3": "Murari",
  "op4": "Athadu",
  "ans": "Okkadu"
},
{
  "ques": "Who directed the movie *Temper*?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram",
  "op2": "Puri Jagannadh",
  "op3": "Koratala Siva",
  "op4": "Boyapati Srinu",
  "ans": "Puri Jagannadh"
},
{
  "ques": "Which movie marked Prabhas's debut as a hero?<br><br>",
  "quesType": "mcq",
  "op1": "Varsham",
  "op2": "Eeswar",
  "op3": "Chatrapathi",
  "op4": "Raghavendra",
  "ans": "Eeswar"
},
{
  "ques": "Who played the female lead in *Pokiri*?<br><br>",
  "quesType": "mcq",
  "op1": "Ileana D'Cruz",
  "op2": "Samantha",
  "op3": "Kajal Aggarwal",
  "op4": "Tamannaah",
  "ans": "Ileana D'Cruz"
},
{
  "ques": "Which blockbuster had the tagline 'Maverick Director's Masterpiece'?<br><br>",
  "quesType": "mcq",
  "op1": "Athadu",
  "op2": "Pokiri",
  "op3": "Arya",
  "op4": "Magadheera",
  "ans": "Arya"
},
{
  "ques": "Who is the music director for *DJ Duvvada Jagannadham*?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Thaman S",
  "op3": "Keeravani",
  "op4": "Gopi Sundar",
  "ans": "DSP"
},
{
  "ques": "Who wrote dialogues for *Baahubali*?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Vijayendra Prasad",
  "op3": "Rajamouli",
  "op4": "Koratala Siva",
  "ans": "Vijayendra Prasad"
},
{
  "ques": "Which actress made her Tollywood debut with *Chirutha*?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Ileana D'Cruz",
  "op3": "Neha Sharma",
  "op4": "Kajal Aggarwal",
  "ans": "Neha Sharma"
},
{
  "ques": "Who is the director of *Legend* starring Balakrishna?<br><br>",
  "quesType": "mcq",
  "op1": "Boyapati Srinu",
  "op2": "Krish",
  "op3": "VV Vinayak",
  "op4": "Sreenu Vaitla",
  "ans": "Boyapati Srinu"
},
{
  "ques": "Who composed music for *Rangasthalam*?<br><br>",
  "quesType": "mcq",
  "op1": "Thaman",
  "op2": "DSP",
  "op3": "Harris Jayaraj",
  "op4": "Keeravani",
  "ans": "DSP"
},
{
  "ques": "Which movie features the famous dialogue 'Taggede Le'?<br><br>",
  "quesType": "mcq",
  "op1": "Pushpa",
  "op2": "Sarrainodu",
  "op3": "Ala Vaikunthapurramuloo",
  "op4": "Race Gurram",
  "ans": "Pushpa"
},
{
  "ques": "Which actor made his debut in *Leader*?<br><br>",
  "quesType": "mcq",
  "op1": "Rana Daggubati",
  "op2": "Sharwanand",
  "op3": "Aadi Saikumar",
  "op4": "Varun Tej",
  "ans": "Rana Daggubati"
},
{
  "ques": "Which hero is nicknamed *Energetic Star*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Pothineni",
  "op2": "Nithiin",
  "op3": "Naga Chaitanya",
  "op4": "Sharwanand",
  "ans": "Ram Pothineni"
},
{
  "ques": "Which movie did Chiranjeevi make his comeback with after 9 years?<br><br>",
  "quesType": "mcq",
  "op1": "Acharya",
  "op2": "Khaidi No. 150",
  "op3": "Sye Raa Narasimha Reddy",
  "op4": "Godfather",
  "ans": "Khaidi No. 150"
},
{
  "ques": "Which director is famous for the film *Aithe*?<br><br>",
  "quesType": "mcq",
  "op1": "Sekhar Kammula",
  "op2": "Chandrashekar Yeleti",
  "op3": "Deva Katta",
  "op4": "Krish",
  "ans": "Chandrashekar Yeleti"
},
{
  "ques": "Who starred in *Bommarillu*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Nithiin",
  "op3": "Siddharth",
  "op4": "Tarun",
  "ans": "Siddharth"
},
{
  "ques": "Which film's story revolves around the 'Red Sanders' smuggling?<br><br>",
  "quesType": "mcq",
  "op1": "Aravinda Sametha",
  "op2": "Pushpa",
  "op3": "Akhanda",
  "op4": "Gabbar Singh",
  "ans": "Pushpa"
},
{
  "ques": "Who is known as *Mega Power Star*?<br><br>",
  "quesType": "mcq",
  "op1": "Pawan Kalyan",
  "op2": "Chiranjeevi",
  "op3": "Ram Charan",
  "op4": "Allu Arjun",
  "ans": "Ram Charan"
},
{
  "ques": "Which movie features the character Bhaskar in a humorous lead role?<br><br>",
  "quesType": "mcq",
  "op1": "Venky",
  "op2": "Kick",
  "op3": "Ready",
  "op4": "Bindaas",
  "ans": "Ready"
},
{
  "ques": "Which film had the song 'Nee Kallu Neeli Samudram'?<br><br>",
  "quesType": "mcq",
  "op1": "Uppena",
  "op2": "Sye",
  "op3": "MCA",
  "op4": "Vakeel Saab",
  "ans": "Uppena"
},
{
  "ques": "Who produced *Arjun Reddy*?<br><br>",
  "quesType": "mcq",
  "op1": "Allu Aravind",
  "op2": "Ashwini Dutt",
  "op3": "Sandeep Vanga",
  "op4": "Pranay Vanga",
  "ans": "Pranay Vanga"
},
{
  "ques": "Who is the lead in *Goodachari*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram",
  "op2": "Nithiin",
  "op3": "Adivi Sesh",
  "op4": "Sharwanand",
  "ans": "Adivi Sesh"
},
{
  "ques": "Who is the director of *Ye Maaya Chesave*?<br><br>",
  "quesType": "mcq",
  "op1": "Sukumar",
  "op2": "Krish",
  "op3": "Gautham Menon",
  "op4": "Sekhar Kammula",
  "ans": "Gautham Menon"
},
{
  "ques": "Which Tollywood film inspired by real life won a National Award?<br><br>",
  "quesType": "mcq",
  "op1": "Mahanati",
  "op2": "Geetha Govindam",
  "op3": "Arjun Reddy",
  "op4": "Leader",
  "ans": "Mahanati"
},
{
  "ques": "Which hero was launched by Puri Jagannadh in *Devadasu*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Pothineni",
  "op2": "Nithiin",
  "op3": "Naga Chaitanya",
  "op4": "Sharwanand",
  "ans": "Ram Pothineni"
},
{
  "ques": "Who composed music for *Ala Vaikunthapurramuloo*?<br><br>",
  "quesType": "mcq",
  "op1": "DSP",
  "op2": "Thaman S",
  "op3": "Keeravani",
  "op4": "Anirudh",
  "ans": "Thaman S"
},
{
  "ques": "Who starred as the female lead in *Hello*?<br><br>",
  "quesType": "mcq",
  "op1": "Tamannaah",
  "op2": "Kajal Aggarwal",
  "op3": "Rakul Preet Singh",
  "op4": "Kalyani Priyadarshan",
  "ans": "Kalyani Priyadarshan"
},
{
  "ques": "Which star hero’s father is actor-producer Allu Aravind?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Allu Arjun",
  "op3": "Nithiin",
  "op4": "Naga Chaitanya",
  "ans": "Allu Arjun"
},
{
  "ques": "Who was the hero in *Prathi Roju Pandage*?<br><br>",
  "quesType": "mcq",
  "op1": "Nithiin",
  "op2": "Sharwanand",
  "op3": "Sai Dharam Tej",
  "op4": "Ram",
  "ans": "Sai Dharam Tej"
},
{
  "ques": "Which actor starred in *Venky Mama*?<br><br>",
  "quesType": "mcq",
  "op1": "Ram Charan",
  "op2": "Venkatesh",
  "op3": "Nagarjuna",
  "op4": "Balakrishna",
  "ans": "Venkatesh"
}
,
{
  "ques": "In which movie did Allu Arjun play a double role for the first time?<br><br>",
  "quesType": "mcq",
  "op1": "Arya 2",
  "op2": "Vedam",
  "op3": "Julayi",
  "op4": "Bunny",
  "ans": "Vedam"
},
{
  "ques": "Who wrote the dialogues for the movie 'Gabbar Singh'?<br><br>",
  "quesType": "mcq",
  "op1": "Harish Shankar",
  "op2": "Trivikram Srinivas",
  "op3": "Koratala Siva",
  "op4": "Sukumar",
  "ans": "Harish Shankar"
},
{
  "ques": "Which movie features NTR Jr as a boxer?<br><br>",
  "quesType": "mcq",
  "op1": "Temper",
  "op2": "Rabhasa",
  "op3": "Ashok",
  "op4": "Yamadonga",
  "ans": "Ashok"
},
{
  "ques": "Who choreographed 'Butta Bomma' song?<br><br>",
  "quesType": "mcq",
  "op1": "Sekhar Master",
  "op2": "Raju Sundaram",
  "op3": "Prabhu Deva",
  "op4": "Ganesh Acharya",
  "ans": "Sekhar Master"
},
{
  "ques": "Which movie is known for the cult dialogue 'Cheppanu Brother'?<br><br>",
  "quesType": "mcq",
  "op1": "Attarintiki Daredi",
  "op2": "Gabbar Singh",
  "op3": "Sardaar Gabbar Singh",
  "op4": "Jalsa",
  "ans": "Attarintiki Daredi"
},
{
  "ques": "Which Tollywood film was India’s official entry to the Oscars in 2013?<br><br>",
  "quesType": "mcq",
  "op1": "Eega",
  "op2": "Leader",
  "op3": "Baahubali",
  "op4": "Jersey",
  "ans": "Eega"
},
{
  "ques": "Which film marked the debut of Anushka Shetty?<br><br>",
  "quesType": "mcq",
  "op1": "Super",
  "op2": "Arundhati",
  "op3": "Vikramarkudu",
  "op4": "Lakshyam",
  "ans": "Super"
},
{
  "ques": "Who played Mahesh Babu’s father in 'Srimanthudu'?<br><br>",
  "quesType": "mcq",
  "op1": "Jagapathi Babu",
  "op2": "Prakash Raj",
  "op3": "Mukesh Rishi",
  "op4": "Rao Ramesh",
  "ans": "Jagapathi Babu"
},
{
  "ques": "What is the name of Chiranjeevi’s character in 'Indra'?<br><br>",
  "quesType": "mcq",
  "op1": "Shankar",
  "op2": "Indrasena Reddy",
  "op3": "Ram Charan",
  "op4": "Suryam",
  "ans": "Indrasena Reddy"
},
{
  "ques": "Who composed the background score for 'Arjun Reddy'?<br><br>",
  "quesType": "mcq",
  "op1": "Radhan",
  "op2": "Gopi Sundar",
  "op3": "Harshavardhan Rameshwar",
  "op4": "Thaman S",
  "ans": "Harshavardhan Rameshwar"
},
{
  "ques": "Who directed 'Happy Days'?<br><br>",
  "quesType": "mcq",
  "op1": "Sekhar Kammula",
  "op2": "Koratala Siva",
  "op3": "Trivikram Srinivas",
  "op4": "Sukumar",
  "ans": "Sekhar Kammula"
},
{
  "ques": "In which movie does Nagarjuna play a don turned chef?<br><br>",
  "quesType": "mcq",
  "op1": "Manam",
  "op2": "King",
  "op3": "Soggade Chinni Nayana",
  "op4": "Don",
  "ans": "Don"
},
{
  "ques": "Which was the first Telugu film shot in IMAX format?<br><br>",
  "quesType": "mcq",
  "op1": "Baahubali 2",
  "op2": "Saaho",
  "op3": "Sye Raa Narasimha Reddy",
  "op4": "RRR",
  "ans": "Baahubali 2"
},
{
  "ques": "Who played the villain 'Bhairava' in 'Baahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "Rana Daggubati",
  "op2": "Prabhakar",
  "op3": "Sudeep",
  "op4": "Nassar",
  "ans": "Prabhakar"
},
{
  "ques": "Which movie has the tagline 'Expect the unexpected'?<br><br>",
  "quesType": "mcq",
  "op1": "Julayi",
  "op2": "Temper",
  "op3": "Dookudu",
  "op4": "Aagadu",
  "ans": "Julayi"
},
{
  "ques": "Who composed the music for 'Pokiri'?<br><br>",
  "quesType": "mcq",
  "op1": "Mani Sharma",
  "op2": "Devi Sri Prasad",
  "op3": "Keeravani",
  "op4": "Harris Jayaraj",
  "ans": "Mani Sharma"
},
{
  "ques": "Which film marked Sukumar’s directorial debut?<br><br>",
  "quesType": "mcq",
  "op1": "Jagadam",
  "op2": "Arya",
  "op3": "100% Love",
  "op4": "Nannaku Prematho",
  "ans": "Arya"
},
{
  "ques": "Which movie won the Nandi Award for Best Feature Film in 2016?<br><br>",
  "quesType": "mcq",
  "op1": "Pelli Choopulu",
  "op2": "Arjun Reddy",
  "op3": "Mahanati",
  "op4": "Ghazi",
  "ans": "Pelli Choopulu"
},
{
  "ques": "Who produced 'Baahubali' series?<br><br>",
  "quesType": "mcq",
  "op1": "Allu Aravind",
  "op2": "Daggubati Suresh Babu",
  "op3": "Shobu Yarlagadda",
  "op4": "Dil Raju",
  "ans": "Shobu Yarlagadda"
},
{
  "ques": "Which actress played the role of Geetha in 'Geetha Govindam'?<br><br>",
  "quesType": "mcq",
  "op1": "Rashmika Mandanna",
  "op2": "Kajal Aggarwal",
  "op3": "Tamannaah",
  "op4": "Pooja Hegde",
  "ans": "Rashmika Mandanna"
},
{
  "ques": "Which Tollywood movie inspired the Bollywood film 'Ghajini'?<br><br>",
  "quesType": "mcq",
  "op1": "Tagore",
  "op2": "Ghajini",
  "op3": "Vikramarkudu",
  "op4": "Pokiri",
  "ans": "Ghajini"
},
{
  "ques": "Who directed 'Vedam'?<br><br>",
  "quesType": "mcq",
  "op1": "Trivikram Srinivas",
  "op2": "Krish",
  "op3": "Sukumar",
  "op4": "Harish Shankar",
  "ans": "Krish"
},
{
  "ques": "Which movie has the dialogue 'Guns don’t kill people, I kill people'?<br><br>",
  "quesType": "mcq",
  "op1": "Gabbar Singh",
  "op2": "Businessman",
  "op3": "Temper",
  "op4": "Don",
  "ans": "Businessman"
},
{
  "ques": "What is Mahesh Babu’s production house called?<br><br>",
  "quesType": "mcq",
  "op1": "MB Productions",
  "op2": "GMB Entertainment",
  "op3": "Mahesh Babu Films",
  "op4": "AMR Films",
  "ans": "GMB Entertainment"
},
{
  "ques": "Who played the cameo in 'Fidaa'?<br><br>",
  "quesType": "mcq",
  "op1": "Rana Daggubati",
  "op2": "Allu Arjun",
  "op3": "Nithiin",
  "op4": "Varun Tej",
  "ans": "Nithiin"
},
{
  "ques": "Which movie featured a hero named 'Subramanyam'?<br><br>",
  "quesType": "mcq",
  "op1": "Subramanyam For Sale",
  "op2": "Supreme",
  "op3": "Srinivasa Kalyanam",
  "op4": "Sarrainodu",
  "ans": "Subramanyam For Sale"
},
{
  "ques": "Who played the father role in 'Mahanati'?<br><br>",
  "quesType": "mcq",
  "op1": "Rajendra Prasad",
  "op2": "Mohan Babu",
  "op3": "Suman",
  "op4": "Nassar",
  "ans": "Rajendra Prasad"
},
{
  "ques": "Who dubbed for the heroine in 'Baahubali'?<br><br>",
  "quesType": "mcq",
  "op1": "Ramya Krishna",
  "op2": "Sunitha",
  "op3": "Chinmayi",
  "op4": "Nithya Menen",
  "ans": "Chinmayi"
},
{
  "ques": "Which film features the song 'Blockbuster'?<br><br>",
  "quesType": "mcq",
  "op1": "Janatha Garage",
  "op2": "Sarrainodu",
  "op3": "DJ: Duvvada Jagannadham",
  "op4": "Race Gurram",
  "ans": "Sarrainodu"
}
,
{
  "ques": "Which film was the directorial debut of Sukumar?<br><br>",
  "quesType": "mcq",
  "op1": "Arya",
  "op2": "100% Love",
  "op3": "Jagadam",
  "op4": "Kumari 21F",
  "ans": "Arya"
},
{
  "ques": "In which movie did Mahesh Babu play dual roles for the first time?<br><br>",
  "quesType": "mcq",
  "op1": "Nani",
  "op2": "1: Nenokkadine",
  "op3": "Businessman",
  "op4": "Dookudu",
  "ans": "Nani"
},
{
  "ques": "Which was Allu Arjun's first movie as a lead hero?<br><br>",
  "quesType": "mcq",
  "op1": "Arya",
  "op2": "Gangotri",
  "op3": "Happy",
  "op4": "Bunny",
  "ans": "Gangotri"
},
{
  "ques": "Who was the music director for 'Khaleja'?<br><br>",
  "quesType": "mcq",
  "op1": "Mani Sharma",
  "op2": "Thaman S",
  "op3": "Harris Jayaraj",
  "op4": "Devi Sri Prasad",
  "ans": "Mani Sharma"
},
{
  "ques": "Who played the antagonist in 'Julayi'?<br><br>",
  "quesType": "mcq",
  "op1": "Sonu Sood",
  "op2": "Rahul Dev",
  "op3": "Jagapathi Babu",
  "op4": "Rao Ramesh",
  "ans": "Sonu Sood"
},
{
  "ques": "Which movie was dubbed into Japanese as 'Baahubali: The Beginning'?<br><br>",
  "quesType": "mcq",
  "op1": "Magadheera",
  "op2": "Baahubali",
  "op3": "Eega",
  "op4": "Sye",
  "ans": "Baahubali"
},
{
  "ques": "Who played the role of Satya in 'Pokiri'?<br><br>",
  "quesType": "mcq",
  "op1": "Brahmanandam",
  "op2": "Ali",
  "op3": "Prakash Raj",
  "op4": "Sayaji Shinde",
  "ans": "Prakash Raj"
},
{
  "ques": "Who composed music for 'Happy Days'?<br><br>",
  "quesType": "mcq",
  "op1": "Koti",
  "op2": "Mickey J Meyer",
  "op3": "Yuvan Shankar Raja",
  "op4": "R P Patnaik",
  "ans": "Mickey J Meyer"
},
{
  "ques": "In 'Bommarillu', what was Siddhu's profession?<br><br>",
  "quesType": "mcq",
  "op1": "Engineer",
  "op2": "Doctor",
  "op3": "Businessman",
  "op4": "Software Developer",
  "ans": "Software Developer"
},
{
  "ques": "Which movie won National Award for Best Feature Film in Telugu in 2017?<br><br>",
  "quesType": "mcq",
  "op1": "Arjun Reddy",
  "op2": "Baahubali 2",
  "op3": "Pelli Choopulu",
  "op4": "Mahanati",
  "ans": "Baahubali 2"
},
{
  "ques": "Who is the father of actor Rana Daggubati?<br><br>",
  "quesType": "mcq",
  "op1": "K. Raghavendra Rao",
  "op2": "Suresh Babu",
  "op3": "D. Suresh Naidu",
  "op4": "D. Ramanaidu",
  "ans": "Suresh Babu"
},
{
  "ques": "Which was the debut film of Nani as a lead actor?<br><br>",
  "quesType": "mcq",
  "op1": "Ashta Chamma",
  "op2": "Ride",
  "op3": "Eega",
  "op4": "Pilla Zamindar",
  "ans": "Ashta Chamma"
},
{
  "ques": "Which Tollywood movie was remade as 'Remo' in Tamil?<br><br>",
  "quesType": "mcq",
  "op1": "Bommarillu",
  "op2": "Happy",
  "op3": "Geetha Govindam",
  "op4": "None",
  "ans": "None"
},
{
  "ques": "Which film did Samantha debut with in Telugu?<br><br>",
  "quesType": "mcq",
  "op1": "Ye Maaya Chesave",
  "op2": "Brindavanam",
  "op3": "Dookudu",
  "op4": "Eega",
  "ans": "Ye Maaya Chesave"
},
{
  "ques": "Which movie features the iconic song 'Vaana Vaana Velluvaye'?<br><br>",
  "quesType": "mcq",
  "op1": "Indra",
  "op2": "Gangotri",
  "op3": "Shankar Dada MBBS",
  "op4": "Gang Leader",
  "ans": "Indra"
},
{
  "ques": "Who directed 'Jersey'?<br><br>",
  "quesType": "mcq",
  "op1": "Sandeep Reddy Vanga",
  "op2": "Gowtam Tinnanuri",
  "op3": "Krish",
  "op4": "Vikram Kumar",
  "ans": "Gowtam Tinnanuri"
},
{
  "ques": "Which film's story revolves around a fly seeking revenge?<br><br>",
  "quesType": "mcq",
  "op1": "Eega",
  "op2": "Makhi",
  "op3": "Both",
  "op4": "None",
  "ans": "Both"
},
{
  "ques": "In which movie does Allu Arjun play a DJ? <br><br>",
  "quesType": "mcq",
  "op1": "DJ: Duvvada Jagannadham",
  "op2": "Julayi",
  "op3": "Race Gurram",
  "op4": "S/O Satyamurthy",
  "ans": "DJ: Duvvada Jagannadham"
},
{
  "ques": "Which movie did Mahesh Babu produce under his banner? <br><br>",
  "quesType": "mcq",
  "op1": "Srimanthudu",
  "op2": "Brahmotsavam",
  "op3": "Spyder",
  "op4": "Maharshi",
  "ans": "Srimanthudu"
},
{
  "ques": "Which was the first Telugu movie dubbed into Russian? <br><br>",
  "quesType": "mcq",
  "op1": "Baahubali",
  "op2": "Sankarabharanam",
  "op3": "Magadheera",
  "op4": "Eega",
  "ans": "Sankarabharanam"
},
{
  "ques": "Who was the first Telugu actor to receive the Padma Vibhushan?<br><br>",
  "quesType": "mcq",
  "op1": "NTR",
  "op2": "ANR",
  "op3": "Chiranjeevi",
  "op4": "Krishna",
  "ans": "ANR"
},
{
  "ques": "Which classic film marked Bapu’s directorial debut?<br><br>",
  "quesType": "mcq",
  "op1": "Sampoorna Ramayanam",
  "op2": "Sakshi",
  "op3": "Mutyala Muggu",
  "op4": "Pelli Pusthakam",
  "ans": "Sakshi"
},
{
  "ques": "In which film did Nagarjuna play a dual role for the first time?<br><br>",
  "quesType": "mcq",
  "op1": "Hello Brother",
  "op2": "Criminal",
  "op3": "Mass",
  "op4": "Allari Alludu",
  "ans": "Hello Brother"
},
{
  "ques": "Who composed music for the classic *Shankarabharanam*?<br><br>",
  "quesType": "mcq",
  "op1": "Ilaiyaraaja",
  "op2": "K.V. Mahadevan",
  "op3": "M.S. Viswanathan",
  "op4": "Chakravarthy",
  "ans": "K.V. Mahadevan"
},
{
  "ques": "Which movie is considered the first Telugu talkie?<br><br>",
  "quesType": "mcq",
  "op1": "Bhakta Prahlada",
  "op2": "Malliswari",
  "op3": "Pathala Bhairavi",
  "op4": "Mayabazar",
  "ans": "Bhakta Prahlada"
},
{
  "ques": "Which film won NTR his only National Film Award for Best Actor (Special Jury)?<br><br>",
  "quesType": "mcq",
  "op1": "Dana Veera Soora Karna",
  "op2": "Bobbili Puli",
  "op3": "Lava Kusa",
  "op4": "Brahmashri Vishwamitra",
  "ans": "Bobbili Puli"
},
{
  "ques": "Which Tollywood actress was awarded the Padma Shri in 1986?<br><br>",
  "quesType": "mcq",
  "op1": "Savitri",
  "op2": "Jamuna",
  "op3": "Bhanumathi Ramakrishna",
  "op4": "Vanisri",
  "ans": "Bhanumathi Ramakrishna"
},
{
  "ques": "Who directed the cult film *Sagara Sangamam*?<br><br>",
  "quesType": "mcq",
  "op1": "Bapu",
  "op2": "K. Viswanath",
  "op3": "Dasari Narayana Rao",
  "op4": "Raghavendra Rao",
  "ans": "K. Viswanath"
},
{
  "ques": "Which movie was the Telugu remake of *Don* starring Chiranjeevi?<br><br>",
  "quesType": "mcq",
  "op1": "Mugguru Monagallu",
  "op2": "Rakta Sindhuram",
  "op3": "Yamudiki Mogudu",
  "op4": "Khaidi No. 786",
  "ans": "Mugguru Monagallu"
},
{
  "ques": "Which film features Kamal Haasan in a Telugu full-length role for K. Viswanath?<br><br>",
  "quesType": "mcq",
  "op1": "Swathi Muthyam",
  "op2": "Sagara Sangamam",
  "op3": "Akali Rajyam",
  "op4": "Subha Sankalpam",
  "ans": "Swathi Muthyam"
},
{
  "ques": "Which film marked the Telugu debut of Rajinikanth?<br><br>",
  "quesType": "mcq",
  "op1": "Anthuleni Katha",
  "op2": "Dharma Daata",
  "op3": "Katha Sangama",
  "op4": "Andamaina Anubhavam",
  "ans": "Anthuleni Katha"
},
{
  "ques": "Which legendary singer-actor holds the record for most Telugu songs sung by a male singer?<br><br>",
  "quesType": "mcq",
  "op1": "Ghantasala",
  "op2": "S.P. Balasubrahmanyam",
  "op3": "K.J. Yesudas",
  "op4": "Hariharan",
  "ans": "S.P. Balasubrahmanyam"
},
{
  "ques": "Who was the cinematographer for *Mayabazar*?<br><br>",
  "quesType": "mcq",
  "op1": "Marcus Bartley",
  "op2": "Balu Mahendra",
  "op3": "P.C. Sreeram",
  "op4": "Ashok Kumar",
  "ans": "Marcus Bartley"
},
{
  "ques": "Which Chiranjeevi movie was India’s official entry to Oscars?<br><br>",
  "quesType": "mcq",
  "op1": "Rudraveena",
  "op2": "Swayamkrushi",
  "op3": "Aapadbandhavudu",
  "op4": "Tagore",
  "ans": "Swayamkrushi"
},
{
  "ques": "Which film had music composed by both Ilaiyaraaja and M.M. Keeravani?<br><br>",
  "quesType": "mcq",
  "op1": "Criminal",
  "op2": "Gangotri",
  "op3": "Sri Ramadasu",
  "op4": "Jagadeka Veerudu Athiloka Sundari",
  "ans": "Criminal"
},
{
  "ques": "Which director is called *Navarasa Brahma*?<br><br>",
  "quesType": "mcq",
  "op1": "K. Viswanath",
  "op2": "Bapu",
  "op3": "Dasari Narayana Rao",
  "op4": "Kodi Ramakrishna",
  "ans": "K. Viswanath"
},
{
  "ques": "In which movie did NTR play Duryodhana most iconically?<br><br>",
  "quesType": "mcq",
  "op1": "Maya Bazaar",
  "op2": "Sri Krishna Pandaveeyam",
  "op3": "Dana Veera Soora Karna",
  "op4": "Lava Kusa",
  "ans": "Dana Veera Soora Karna"
},
{
  "ques": "Which mythological movie was NTR’s directorial debut?<br><br>",
  "quesType": "mcq",
  "op1": "Sri Krishna Pandaveeyam",
  "op2": "Dana Veera Soora Karna",
  "op3": "Lava Kusa",
  "op4": "Sri Venkateswara Mahatyam",
  "ans": "Dana Veera Soora Karna"
},
{
  "ques": "Who was the first female superstar of Telugu cinema?<br><br>",
  "quesType": "mcq",
  "op1": "Savitri",
  "op2": "Bhanumathi",
  "op3": "Jamuna",
  "op4": "Anjali Devi",
  "ans": "Savitri"
},
{
  "ques": "Which Telugu movie was the first to be dubbed into Russian?<br><br>",
  "quesType": "mcq",
  "op1": "Malliswari",
  "op2": "Mayabazar",
  "op3": "Pathala Bhairavi",
  "op4": "Lava Kusa",
  "ans": "Pathala Bhairavi"
},
{
  "ques": "Which movie was the comeback for Akkineni Nageswara Rao in the 80s?<br><br>",
  "quesType": "mcq",
  "op1": "Premabhishekam",
  "op2": "Megha Sandesham",
  "op3": "Devadasu",
  "op4": "Aradhana",
  "ans": "Premabhishekam"
},
{
  "ques": "Who was the heroine in *Swathi Kiranam*?<br><br>",
  "quesType": "mcq",
  "op1": "Radhika",
  "op2": "Raadhika Sarathkumar",
  "op3": "Madhavi",
  "op4": "Bhanupriya",
  "ans": "Bhanupriya"
},
{
  "ques": "Which classic film had the famous song 'Vivaha Bhojanambu'?<br><br>",
  "quesType": "mcq",
  "op1": "Gundamma Katha",
  "op2": "Missamma",
  "op3": "Maya Bazaar",
  "op4": "Lava Kusa",
  "ans": "Maya Bazaar"
},
{
  "ques": "Who was the music director for *Geethanjali*?<br><br>",
  "quesType": "mcq",
  "op1": "Ilaiyaraaja",
  "op2": "K.V. Mahadevan",
  "op3": "Chakravarthy",
  "op4": "M.M. Keeravani",
  "ans": "Ilaiyaraaja"
},
{
  "ques": "Which actress was called *Mahanati*?<br><br>",
  "quesType": "mcq",
  "op1": "Jamuna",
  "op2": "Anjali Devi",
  "op3": "Savitri",
  "op4": "Vanisri",
  "ans": "Savitri"
},
{
  "ques": "Which Telugu movie won the President’s Gold Medal in the 50s?<br><br>",
  "quesType": "mcq",
  "op1": "Malliswari",
  "op2": "Pathala Bhairavi",
  "op3": "Mayabazar",
  "op4": "Missamma",
  "ans": "Malliswari"
},
{
  "ques": "Which veteran director made *Manchi Manasulu*?<br><br>",
  "quesType": "mcq",
  "op1": "Adurthi Subba Rao",
  "op2": "K. Viswanath",
  "op3": "Dasari Narayana Rao",
  "op4": "Bapu",
  "ans": "Adurthi Subba Rao"
},
{
  "ques": "Which movie made SP Balasubrahmanyam’s singing debut in Telugu?<br><br>",
  "quesType": "mcq",
  "op1": "Sri Sri Sri Maryada Ramanna",
  "op2": "Sankarabharanam",
  "op3": "Ramudu Bheemudu",
  "op4": "Gudachari 116",
  "ans": "Sri Sri Sri Maryada Ramanna"
},
{
  "ques": "Which movie introduced director Krishna Vamsi?<br><br>",
  "quesType": "mcq",
  "op1": "Sindhooram",
  "op2": "Ninne Pelladata",
  "op3": "Gulabi",
  "op4": "Murari",
  "ans": "Gulabi"
},
{
  "ques": "Which NTR film was made in colour for the first time?<br><br>",
  "quesType": "mcq",
  "op1": "Pathala Bhairavi",
  "op2": "Mayabazar",
  "op3": "Lava Kusa",
  "op4": "Dana Veera Soora Karna",
  "ans": "Lava Kusa"
}


]


let movieIncorrectAnswers = [];

let movieTimerId = "";
let movieSkip = document.getElementById("movieSkip");
let codingmovieQues = document.getElementById("codingmovieQues");
let mcqmovie = document.getElementById("mcqmovie");
let movieQuestionNumber = document.getElementById("movieQuestionNumber");
let movieQuestionCount = 2;
let movieScore = 0;
let movieScoreDisplay = document.getElementById("movieScoreDisplay");
let movieScoreShow = document.getElementById("movieScoreShow");
let movieSkip2 = document.getElementById("movieSkip2");

let movieFillAns = document.getElementById("movieFillAns");
let movieStatus1 = document.getElementById("movieStatus1");
let movieStatus2 = document.getElementById("movieStatus2");
let movieStatus3 = document.getElementById("movieStatus3");
let movieCheckFill = document.getElementById("movieCheckFill");

let codingResultmovie = document.getElementById("codingResultmovie");

let movieIncorrectAnswersDisplay = document.getElementById("movieIncorrectAnswersDisplay");
let movieScoreBelow70 = document.getElementById("movieScoreBelow70");
let movieScore100 = document.getElementById("movieScore100");

let movieResult1 = document.getElementById("movieResult1");
let movieResult2 = document.getElementById("movieResult2");
let movieResult3 = document.getElementById("movieResult3");
let movieResult4 = document.getElementById("movieResult4");
let movieResult5 = document.getElementById("movieResult5");
let movieBg1 = document.getElementById("movieBg1");


function codingmovieStart(){
  codingmovieHide.classList.add("d-none");
codingmovieShow.classList.remove("d-none");

let fillBlankmovie = document.getElementById("fillBlankmovie");
let op1movie = document.getElementById("op1movie");
let op2movie = document.getElementById("op2movie");
let op3movie = document.getElementById("op3movie");
let op4movie = document.getElementById("op4movie");

let movieFillAns = document.getElementById("movieFillAns");
let movieStatus1 = document.getElementById("movieStatus1");
let movieStatus2 = document.getElementById("movieStatus2");
let movieStatus3 = document.getElementById("movieStatus3");
let movieCheckFill = document.getElementById("movieCheckFill");

movieFillAns.disabled = false;
movieStatus1.classList.remove("d-none");
movieStatus2.classList.add("d-none");
movieStatus3.classList.add("d-none");
movieFillAns.value = "";
movieSkip2.textContent = "Skip";
movieSkip2.style.backgroundColor = "orange";
movieSkip2.style.borderColor = "orange";

movieSkip.textContent = "Skip";
movieSkip.style.backgroundColor = "orange";
movieSkip.style.borderColor = "orange";
movieScoreShow.textContent = "";
movieTimer.style.color = "black";

if (movieLevel === 1) {
  let movieRandom = Math.floor(Math.random() * codingmovie1Arr.length);
  let y = codingmovie1Arr[movieRandom];
  movieTimer.textContent = "20";
  movieTime = 20;

  movieTimerId = setInterval(function () {
    movieTime = movieTime - 1;
    if (movieTime == 0) {
      clearInterval(movieTimerId);
      movieQuestionNumber.textContent = "Question:" + movieQuestionCount + "/10";
      movieQuestionCount = movieQuestionCount + 1;
      movieTime = 20;
      codingmovieStart();
    }
    if (movieTime <= 5) {
      movieTimer.style.color = "red";
      movieTimer.textContent = movieTime;
    } else {
      movieTimer.textContent = movieTime;
    }
  }, 1000);

  if (movieQuestionCount == 12) {
    clearInterval(movieTimerId);
    mcqmovie.classList.add("d-none");
    document.getElementById("movieScoreEnd").textContent = movieScoreDisplay.textContent;
    fillBlankmovie.classList.add("d-none");
    codingmovieShow.classList.add("d-none");
    codingResultmovie.classList.remove("d-none");

    if (movieScore < 70) {
      movieScoreBelow70.classList.remove("d-none");
      movieScore100.classList.add("d-none");
      sectionCodingmovie.classList.add("back15");

      movieResult1.textContent = "Test finished!!";
      movieResult2.textContent = "😓 Oops! Not quite right.";
      movieResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      movieResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      movieIncorrectAnswersDisplay.appendChild(h2);

      for (let z of movieIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        movieIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (movieScore < 100) {
      movieScoreBelow70.classList.remove("d-none");
      movieScore100.classList.add("d-none");
      sectionCodingmovie.classList.add("back15");

      movieResult1.textContent = "Test finished!!";
      movieResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      movieResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      movieResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      movieIncorrectAnswersDisplay.appendChild(h2);

      for (let z of movieIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        movieIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (movieScore === 100) {
      document.getElementById("sectionCodingmovie").classList.add("back14");
      movieScore100.classList.remove("d-none");
      movieScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqmovie.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingmovieQues.innerHTML = formattedQuestion;

    fillBlankmovie.classList.add("d-none");
    op1movie.textContent = y.op1;
    op2movie.textContent = y.op2;
    op3movie.textContent = y.op3;
    op4movie.textContent = y.op4;

    const allOps = [op1movie, op2movie, op3movie, op4movie];
    allOps.forEach((op, i) => {
      op.onclick = function () {
        allOps.forEach(o => (o.disabled = true));
        clearInterval(movieTimerId);
        movieTime = 20;

        if (op.textContent === y.ans) {
          op.style.backgroundColor = "green";
          movieScore += 10;
          movieScoreShow.textContent = "+10";
          movieScoreShow.style.color = "green";
        } else {
          op.style.backgroundColor = "red";
          movieScore -= 5;
          movieScoreShow.textContent = "-5";
          movieScoreShow.style.color = "red";
          let wrong_answer = { ques: y.ques, correct: y.ans, wrong: op.textContent };
          movieIncorrectAnswers.push(wrong_answer);
        }

        movieScoreDisplay.textContent = "Score: " + movieScore + "/100";

        movieSkip.textContent = "Next";
        movieSkip.style.backgroundColor = "#23ebdd";
        movieSkip.style.borderColor = "#23ebdd";

        movieSkip.onclick = function () {
          movieQuestionNumber.textContent = "Question:" + movieQuestionCount + "/10";
          movieQuestionCount += 1;
          allOps.forEach(o => {
            o.disabled = false;
            o.style.backgroundColor = "white";
          });
          codingmovieStart();
        };
      };
    });

    movieSkip.onclick = function () {
      clearInterval(movieTimerId);
      movieTime = 20;
      movieQuestionNumber.textContent = "Question:" + movieQuestionCount + "/10";
      movieQuestionCount += 1;
      allOps.forEach(o => {
        o.disabled = false;
        o.style.backgroundColor = "white";
      });
      let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
      movieIncorrectAnswers.push(wrong_answer);
      codingmovieStart();
    };
  }
}
else if (movieLevel === 2) {
  let movieRandom = Math.floor(Math.random() * codingmovie2Arr.length);
  let y = codingmovie2Arr[movieRandom];
  movieTimer.textContent = "25";
  movieTime = 25;

  movieTimerId = setInterval(function () {
    movieTime = movieTime - 1;
    if (movieTime == 0) {
      clearInterval(movieTimerId);
      movieQuestionNumber.textContent = "Question:" + movieQuestionCount + "/10";
      movieQuestionCount = movieQuestionCount + 1;
      movieTime = 25;
      codingmovieStart();
    }
    if (movieTime <= 5) {
      movieTimer.style.color = "red";
      movieTimer.textContent = movieTime;
    } else {
      movieTimer.textContent = movieTime;
    }
  }, 1000);

  if (movieQuestionCount == 12) {
    clearInterval(movieTimerId);
    mcqmovie.classList.add("d-none");
    document.getElementById("movieScoreEnd").textContent = movieScoreDisplay.textContent;
    fillBlankmovie.classList.add("d-none");
    codingmovieShow.classList.add("d-none");
    codingResultmovie.classList.remove("d-none");

    if (movieScore < 70) {
      movieScoreBelow70.classList.remove("d-none");
      movieScore100.classList.add("d-none");
      sectionCodingmovie.classList.add("back15");

      movieResult1.textContent = "Test finished!!";
      movieResult2.textContent = "😓 Oops! Not quite right.";
      movieResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      movieResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      movieIncorrectAnswersDisplay.appendChild(h2);

      for (let z of movieIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        movieIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (movieScore < 100) {
      movieScoreBelow70.classList.remove("d-none");
      movieScore100.classList.add("d-none");
      sectionCodingmovie.classList.add("back15");

      movieResult1.textContent = "Test finished!!";
      movieResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      movieResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      movieResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      movieIncorrectAnswersDisplay.appendChild(h2);

      for (let z of movieIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        movieIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (movieScore === 100) {
      document.getElementById("sectionCodingmovie").classList.add("back14");
      movieScore100.classList.remove("d-none");
      movieScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqmovie.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingmovieQues.innerHTML = formattedQuestion;
    fillBlankmovie.classList.add("d-none");
    op1movie.textContent = y.op1;
    op2movie.textContent = y.op2;
    op3movie.textContent = y.op3;
    op4movie.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(movieTimerId);
      movieTime = 25;
      movieSkip.textContent = "Next";
      movieSkip.style.backgroundColor = "#23ebdd";
      movieSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        movieScore += 10;
        movieScoreShow.textContent = "+10";
        movieScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        movieScore -= 5;
        movieScoreShow.textContent = "-5";
        movieScoreShow.style.color = "red";
        movieIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      movieScoreDisplay.textContent = "Score: " + movieScore + "/100";
    }

    op1movie.onclick = () => handleOptionClick(op1movie, [op2movie, op3movie, op4movie]);
    op2movie.onclick = () => handleOptionClick(op2movie, [op1movie, op3movie, op4movie]);
    op3movie.onclick = () => handleOptionClick(op3movie, [op1movie, op2movie, op4movie]);
    op4movie.onclick = () => handleOptionClick(op4movie, [op1movie, op2movie, op3movie]);

    movieSkip.onclick = function () {
      clearInterval(movieTimerId);
      movieTime = 25;
      movieQuestionNumber.textContent = "Question:" + movieQuestionCount + "/10";
      movieQuestionCount++;
      [op1movie, op2movie, op3movie, op4movie].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      movieIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingmovieStart();
    };
  }
}
else if (movieLevel === 3) {
  let movieRandom = Math.floor(Math.random() * codingmovie3Arr.length);
  let y = codingmovie3Arr[movieRandom];
  movieTimer.textContent = "30";
  movieTime = 30;

  movieTimerId = setInterval(function () {
    movieTime = movieTime - 1;
    if (movieTime == 0) {
      clearInterval(movieTimerId);
      movieQuestionNumber.textContent = "Question:" + movieQuestionCount + "/10";
      movieQuestionCount = movieQuestionCount + 1;
      movieTime = 30;
      codingmovieStart();
    }
    if (movieTime <= 5) {
      movieTimer.style.color = "red";
      movieTimer.textContent = movieTime;
    } else {
      movieTimer.textContent = movieTime;
    }
  }, 1000);

  if (movieQuestionCount == 12) {
    clearInterval(movieTimerId);
    mcqmovie.classList.add("d-none");
    document.getElementById("movieScoreEnd").textContent = movieScoreDisplay.textContent;
    fillBlankmovie.classList.add("d-none");
    codingmovieShow.classList.add("d-none");
    codingResultmovie.classList.remove("d-none");

    if (movieScore < 70) {
      movieScoreBelow70.classList.remove("d-none");
      movieScore100.classList.add("d-none");
      sectionCodingmovie.classList.add("back15");

      movieResult1.textContent = "Test finished!!";
      movieResult2.textContent = "😓 Oops! Not quite right.";
      movieResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      movieResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      movieIncorrectAnswersDisplay.appendChild(h2);

      for (let z of movieIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        movieIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (movieScore < 100) {
      movieScoreBelow70.classList.remove("d-none");
      movieScore100.classList.add("d-none");
      sectionCodingmovie.classList.add("back15");

      movieResult1.textContent = "Test finished!!";
      movieResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      movieResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      movieResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      movieIncorrectAnswersDisplay.appendChild(h2);

      for (let z of movieIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        movieIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (movieScore === 100) {
      document.getElementById("sectionCodingmovie").classList.add("back14");
      movieScore100.classList.remove("d-none");
      movieScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqmovie.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingmovieQues.innerHTML = formattedQuestion;
    fillBlankmovie.classList.add("d-none");
    op1movie.textContent = y.op1;
    op2movie.textContent = y.op2;
    op3movie.textContent = y.op3;
    op4movie.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(movieTimerId);
      movieTime = 30;
      movieSkip.textContent = "Next";
      movieSkip.style.backgroundColor = "#23ebdd";
      movieSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        movieScore += 10;
        movieScoreShow.textContent = "+10";
        movieScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        movieScore -= 5;
        movieScoreShow.textContent = "-5";
        movieScoreShow.style.color = "red";
        movieIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      movieScoreDisplay.textContent = "Score: " + movieScore + "/100";
    }

    op1movie.onclick = () => handleOptionClick(op1movie, [op2movie, op3movie, op4movie]);
    op2movie.onclick = () => handleOptionClick(op2movie, [op1movie, op3movie, op4movie]);
    op3movie.onclick = () => handleOptionClick(op3movie, [op1movie, op2movie, op4movie]);
    op4movie.onclick = () => handleOptionClick(op4movie, [op1movie, op2movie, op3movie]);

    movieSkip.onclick = function () {
      clearInterval(movieTimerId);
      movieTime = 30;
      movieQuestionNumber.textContent = "Question:" + movieQuestionCount + "/10";
      movieQuestionCount++;
      [op1movie, op2movie, op3movie, op4movie].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      movieIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingmovieStart();
    };
  }
}



}

function resetCodingmovie() {
  document.getElementById("codingmovieShow").classList.add("d-none");
  document.getElementById("codingResultmovie").classList.add("d-none");
  document.getElementById("codingmovieHide").classList.remove("d-none");

  document.getElementById("movieQuestionNumber").innerText = "Question: 1/10";
  document.getElementById("movieScoreDisplay").innerText = "Score: 0/100";
  document.getElementById("movieScoreShow").innerText = "";
  document.getElementById("movieTimer").innerText = "00";
  document.getElementById("codingmovieQues").innerText = "";

  document.getElementById("op1movie").innerText = "option1";
  document.getElementById("op2movie").innerText = "option2";
  document.getElementById("op3movie").innerText = "option3";
  document.getElementById("op4movie").innerText = "option4";

  movieIncorrectAnswers = [];
  document.getElementById("movieIncorrectAnswersDisplay").innerHTML = "";

  movieScore100.classList.add("d-none");
  movieScoreBelow70.classList.add("d-none");

  movieResult1.textContent = "";
  movieResult2.textContent = "";
  movieResult3.src = "";
  movieResult4.textContent = "";

  sectionCodingmovie.classList.remove("back14");
  sectionCodingmovie.classList.remove("back15");

  document.getElementById("movieFillAns").value = "";
  document.getElementById("fillBlankmovie").style.display = "none";
  document.getElementById("mcqmovie").style.display = "block";

  document.getElementById("movieStatus1").classList.remove("d-none");
  document.getElementById("movieStatus2").classList.add("d-none");
  document.getElementById("movieStatus3").classList.add("d-none");

  if (typeof movieTimerId !== "undefined") {
    clearInterval(movieTimerId);
  }
  movieTime = 20;
  movieQuestionCount = 2;
  movieScore = 0;
}

function movieResetLevel() {
  movieButton1.disabled = false;
  movieButton2.disabled = false;
  movieButton3.disabled = false;
  movieButton.classList.add("d-none");
  movieIncorrectAnswers = [];
}

// history


let historyButton = document.getElementById("historyButton");
let historyButton1 = document.getElementById("historyButton1");
let historyButton2 = document.getElementById("historyButton2");
let historyButton3 = document.getElementById("historyButton3");
let historyLevel = 0;
let historyCodingTest = document.getElementById("historyCodingTest");
let historyTimer = document.getElementById("historyTimer");

historyButton1.onclick = function () {
  historyButton2.disabled = true;
  historyButton3.disabled = true;
  historyLevel = 1;

  historyButton.classList.remove("d-none");
  historyButton.classList.add("d-block");
};

historyButton2.onclick = function () {
  historyButton1.disabled = true;
  historyButton3.disabled = true;
  historyLevel = 2;

  historyButton.classList.remove("d-none");
  historyButton.classList.add("d-block");
};

historyButton3.onclick = function () {
  historyButton2.disabled = true;
  historyButton1.disabled = true;
  historyLevel = 3;

  historyButton.classList.remove("d-none");
  historyButton.classList.add("d-block");
};

let historyTime = 0;

let codinghistoryShow = document.getElementById("codinghistoryShow");
let codinghistoryHide = document.getElementById("codinghistoryHide");
let codinghistoryBack = document.getElementById("codinghistoryBack");

codinghistoryBack.onclick = function () {
  codinghistoryShow.classList.add("d-none");
  codinghistoryHide.classList.remove("d-none");
};


let codinghistory1Arr=[
  {
    "ques": "Who was the first President of independent India?<br><br>",
    "quesType": "mcq",
    "op1": "Dr. B. R. Ambedkar",
    "op2": "Jawaharlal Nehru",
    "op3": "Dr. Rajendra Prasad",
    "op4": "Sardar Patel",
    "ans": "Dr. Rajendra Prasad"
  },
  {
    "ques": "Who was known as the Father of the Nation?<br><br>",
    "quesType": "mcq",
    "op1": "Subhas Chandra Bose",
    "op2": "Mahatma Gandhi",
    "op3": "Bhagat Singh",
    "op4": "Jawaharlal Nehru",
    "ans": "Mahatma Gandhi"
  },
  {
    "ques": "Who gave the slogan 'Jai Jawan Jai Kisan'?<br><br>",
    "quesType": "mcq",
    "op1": "Indira Gandhi",
    "op2": "Lal Bahadur Shastri",
    "op3": "Mahatma Gandhi",
    "op4": "Rajiv Gandhi",
    "ans": "Lal Bahadur Shastri"
  },
  {
    "ques": "In which year did India become a republic?<br><br>",
    "quesType": "mcq",
    "op1": "1947",
    "op2": "1950",
    "op3": "1952",
    "op4": "1949",
    "ans": "1950"
  },
  {
    "ques": "Who was the first Prime Minister of India?<br><br>",
    "quesType": "mcq",
    "op1": "Mahatma Gandhi",
    "op2": "Rajendra Prasad",
    "op3": "Jawaharlal Nehru",
    "op4": "Sardar Patel",
    "ans": "Jawaharlal Nehru"
  },
  {
    "ques": "Which leader is known as the Iron Man of India?<br><br>",
    "quesType": "mcq",
    "op1": "Bhagat Singh",
    "op2": "Lal Bahadur Shastri",
    "op3": "Sardar Vallabhbhai Patel",
    "op4": "Rajendra Prasad",
    "ans": "Sardar Vallabhbhai Patel"
  },
  {
    "ques": "Who founded the Indian National Congress?<br><br>",
    "quesType": "mcq",
    "op1": "A.O. Hume",
    "op2": "Mahatma Gandhi",
    "op3": "Dadabhai Naoroji",
    "op4": "Bipin Chandra Pal",
    "ans": "A.O. Hume"
  },
  {
    "ques": "When did the Jallianwala Bagh massacre happen?<br><br>",
    "quesType": "mcq",
    "op1": "1919",
    "op2": "1920",
    "op3": "1917",
    "op4": "1922",
    "ans": "1919"
  },
  {
    "ques": "Who was the last Governor-General of independent India?<br><br>",
    "quesType": "mcq",
    "op1": "C. Rajagopalachari",
    "op2": "Lord Mountbatten",
    "op3": "Jawaharlal Nehru",
    "op4": "Dr. Rajendra Prasad",
    "ans": "C. Rajagopalachari"
  },
  {
    "ques": "Who led the Salt March?<br><br>",
    "quesType": "mcq",
    "op1": "Jawaharlal Nehru",
    "op2": "Subhas Chandra Bose",
    "op3": "Mahatma Gandhi",
    "op4": "Lal Bahadur Shastri",
    "ans": "Mahatma Gandhi"
  },
  {
    "ques": "Who was the first Mughal Emperor of India?<br><br>",
    "quesType": "mcq",
    "op1": "Akbar",
    "op2": "Babur",
    "op3": "Humayun",
    "op4": "Aurangzeb",
    "ans": "Babur"
  },
  {
    "ques": "Who was known as the 'Nightingale of India'?<br><br>",
    "quesType": "mcq",
    "op1": "Annie Besant",
    "op2": "Indira Gandhi",
    "op3": "Sarojini Naidu",
    "op4": "Vijaya Lakshmi Pandit",
    "ans": "Sarojini Naidu"
  },
  {
    "ques": "Which city was the capital of the Maurya Empire?<br><br>",
    "quesType": "mcq",
    "op1": "Delhi",
    "op2": "Taxila",
    "op3": "Patliputra",
    "op4": "Kanchipuram",
    "ans": "Patliputra"
  },
  {
    "ques": "Who was the first woman ruler of Delhi?<br><br>",
    "quesType": "mcq",
    "op1": "Rani Lakshmi Bai",
    "op2": "Razia Sultana",
    "op3": "Noor Jahan",
    "op4": "Indira Gandhi",
    "ans": "Razia Sultana"
  },
  {
    "ques": "Who was the last Viceroy of India?<br><br>",
    "quesType": "mcq",
    "op1": "Lord Irwin",
    "op2": "Lord Wavell",
    "op3": "Lord Mountbatten",
    "op4": "Lord Curzon",
    "ans": "Lord Mountbatten"
  },
  {
    "ques": "Who was the founder of the Sikh Empire?<br><br>",
    "quesType": "mcq",
    "op1": "Guru Gobind Singh",
    "op2": "Guru Nanak",
    "op3": "Ranjit Singh",
    "op4": "Lala Lajpat Rai",
    "ans": "Ranjit Singh"
  },
  {
    "ques": "Where did Mahatma Gandhi first use Satyagraha?<br><br>",
    "quesType": "mcq",
    "op1": "India",
    "op2": "South Africa",
    "op3": "England",
    "op4": "Burma",
    "ans": "South Africa"
  },
  {
    "ques": "Who wrote the book 'Discovery of India'?<br><br>",
    "quesType": "mcq",
    "op1": "Subhas Chandra Bose",
    "op2": "Jawaharlal Nehru",
    "op3": "Rabindranath Tagore",
    "op4": "Dr. B. R. Ambedkar",
    "ans": "Jawaharlal Nehru"
  },
  {
    "ques": "Who formed the Azad Hind Fauj?<br><br>",
    "quesType": "mcq",
    "op1": "Mahatma Gandhi",
    "op2": "Bhagat Singh",
    "op3": "Subhas Chandra Bose",
    "op4": "Sardar Patel",
    "ans": "Subhas Chandra Bose"
  },
  {
    "ques": "Who was the first Indian to win Nobel Prize?<br><br>",
    "quesType": "mcq",
    "op1": "C. V. Raman",
    "op2": "Hargobind Khorana",
    "op3": "Rabindranath Tagore",
    "op4": "Amartya Sen",
    "ans": "Rabindranath Tagore"
  },
  {
    "ques": "In which year did the Sepoy Mutiny take place?<br><br>",
    "quesType": "mcq",
    "op1": "1757",
    "op2": "1857",
    "op3": "1905",
    "op4": "1942",
    "ans": "1857"
  },
  {
    "ques": "Who was the first Governor-General of India?<br><br>",
    "quesType": "mcq",
    "op1": "Lord Mountbatten",
    "op2": "Warren Hastings",
    "op3": "Lord Curzon",
    "op4": "Lord Ripon",
    "ans": "Warren Hastings"
  },
  {
    "ques": "Where did the Quit India Movement start?<br><br>",
    "quesType": "mcq",
    "op1": "Bombay",
    "op2": "Delhi",
    "op3": "Calcutta",
    "op4": "Ahmedabad",
    "ans": "Bombay"
  },
  {
    "ques": "Who was the first Indian woman to become a Prime Minister?<br><br>",
    "quesType": "mcq",
    "op1": "Sarojini Naidu",
    "op2": "Vijaya Lakshmi Pandit",
    "op3": "Indira Gandhi",
    "op4": "Pratibha Patil",
    "ans": "Indira Gandhi"
  },
  {
    "ques": "Which Mughal ruler built the Taj Mahal?<br><br>",
    "quesType": "mcq",
    "op1": "Akbar",
    "op2": "Aurangzeb",
    "op3": "Shah Jahan",
    "op4": "Humayun",
    "ans": "Shah Jahan"
  },
  {
    "ques": "Who was the founder of Arya Samaj?<br><br>",
    "quesType": "mcq",
    "op1": "Swami Vivekananda",
    "op2": "Dayananda Saraswati",
    "op3": "Raja Ram Mohan Roy",
    "op4": "Ramanuja",
    "ans": "Dayananda Saraswati"
  },
  {
    "ques": "Who was the first Indian to go to space?<br><br>",
    "quesType": "mcq",
    "op1": "Kalpana Chawla",
    "op2": "Rakesh Sharma",
    "op3": "Vikram Sarabhai",
    "op4": "Satish Dhawan",
    "ans": "Rakesh Sharma"
  },
  {
    "ques": "Who was known as 'Punjab Kesari'?<br><br>",
    "quesType": "mcq",
    "op1": "Bhagat Singh",
    "op2": "Bal Gangadhar Tilak",
    "op3": "Lala Lajpat Rai",
    "op4": "Bipin Chandra Pal",
    "ans": "Lala Lajpat Rai"
  },
  {
    "ques": "Who gave the slogan 'Swaraj is my birthright'?<br><br>",
    "quesType": "mcq",
    "op1": "Lala Lajpat Rai",
    "op2": "Bal Gangadhar Tilak",
    "op3": "Mahatma Gandhi",
    "op4": "Jawaharlal Nehru",
    "ans": "Bal Gangadhar Tilak"
  },
  {
    "ques": "Which movement was led by Vinoba Bhave?<br><br>",
    "quesType": "mcq",
    "op1": "Quit India Movement",
    "op2": "Non-Cooperation Movement",
    "op3": "Bhoodan Movement",
    "op4": "Civil Disobedience Movement",
    "ans": "Bhoodan Movement"
  },
  {
    "ques": "Who was the first Mughal Emperor of India?<br><br>",
    "quesType": "mcq",
    "op1": "Akbar",
    "op2": "Babur",
    "op3": "Aurangzeb",
    "op4": "Shah Jahan",
    "ans": "Babur"
  },
  {
    "ques": "Who was known as the 'Father of the Nation' in India?<br><br>",
    "quesType": "mcq",
    "op1": "Subhash Chandra Bose",
    "op2": "Jawaharlal Nehru",
    "op3": "Mahatma Gandhi",
    "op4": "Sardar Patel",
    "ans": "Mahatma Gandhi"
  },
  {
    "ques": "Which movement was led by Mahatma Gandhi in 1942?<br><br>",
    "quesType": "mcq",
    "op1": "Civil Disobedience Movement",
    "op2": "Non-Cooperation Movement",
    "op3": "Quit India Movement",
    "op4": "Swadeshi Movement",
    "ans": "Quit India Movement"
  },
  {
    "ques": "When did India gain independence?<br><br>",
    "quesType": "mcq",
    "op1": "1945",
    "op2": "1946",
    "op3": "1947",
    "op4": "1948",
    "ans": "1947"
  },
  {
    "ques": "Who was the first President of independent India?<br><br>",
    "quesType": "mcq",
    "op1": "Jawaharlal Nehru",
    "op2": "Rajendra Prasad",
    "op3": "B. R. Ambedkar",
    "op4": "C. Rajagopalachari",
    "ans": "Rajendra Prasad"
  },
  {
    "ques": "Which emperor built the Taj Mahal?<br><br>",
    "quesType": "mcq",
    "op1": "Akbar",
    "op2": "Babur",
    "op3": "Shah Jahan",
    "op4": "Aurangzeb",
    "ans": "Shah Jahan"
  },
  {
    "ques": "Who wrote the Indian National Anthem?<br><br>",
    "quesType": "mcq",
    "op1": "Rabindranath Tagore",
    "op2": "Bankim Chandra Chatterjee",
    "op3": "Subramania Bharati",
    "op4": "Sarojini Naidu",
    "ans": "Rabindranath Tagore"
  },
  {
    "ques": "Who was the founder of the Maurya Empire?<br><br>",
    "quesType": "mcq",
    "op1": "Ashoka",
    "op2": "Bindusara",
    "op3": "Chandragupta Maurya",
    "op4": "Harsha",
    "ans": "Chandragupta Maurya"
  },
  {
    "ques": "Who was known as the 'Iron Man of India'?<br><br>",
    "quesType": "mcq",
    "op1": "Lal Bahadur Shastri",
    "op2": "Jawaharlal Nehru",
    "op3": "B. R. Ambedkar",
    "op4": "Sardar Patel",
    "ans": "Sardar Patel"
  },
  {
    "ques": "Which is the oldest civilization of India?<br><br>",
    "quesType": "mcq",
    "op1": "Maurya",
    "op2": "Gupta",
    "op3": "Indus Valley Civilization",
    "op4": "Vedic Civilization",
    "ans": "Indus Valley Civilization"
  },
  {
    "ques": "Who founded the Sikh religion?<br><br>",
    "quesType": "mcq",
    "op1": "Guru Gobind Singh",
    "op2": "Guru Arjan Dev",
    "op3": "Guru Angad",
    "op4": "Guru Nanak",
    "ans": "Guru Nanak"
  },
  {
    "ques": "Who was the first Governor-General of India?<br><br>",
    "quesType": "mcq",
    "op1": "Lord Dalhousie",
    "op2": "Warren Hastings",
    "op3": "Lord Wellesley",
    "op4": "Lord Cornwallis",
    "ans": "Warren Hastings"
  },
  {
    "ques": "In which year did the Sepoy Mutiny take place?<br><br>",
    "quesType": "mcq",
    "op1": "1757",
    "op2": "1806",
    "op3": "1857",
    "op4": "1905",
    "ans": "1857"
  },
  {
    "ques": "Who was the founder of the Mughal Empire?<br><br>",
    "quesType": "mcq",
    "op1": "Akbar",
    "op2": "Babur",
    "op3": "Humayun",
    "op4": "Jahangir",
    "ans": "Babur"
  },
  {
    "ques": "Who was the last Governor-General of India?<br><br>",
    "quesType": "mcq",
    "op1": "Lord Mountbatten",
    "op2": "Lord Dalhousie",
    "op3": "Lord Canning",
    "op4": "Lord Curzon",
    "ans": "Lord Mountbatten"
  },
  {
    "ques": "Which ancient Indian text is known as the 'Fifth Veda'?<br><br>",
    "quesType": "mcq",
    "op1": "Ramayana",
    "op2": "Mahabharata",
    "op3": "Bhagavad Gita",
    "op4": "Puranas",
    "ans": "Mahabharata"
  },
  {
    "ques": "Who founded the Indian National Congress?<br><br>",
    "quesType": "mcq",
    "op1": "Dadabhai Naoroji",
    "op2": "A.O. Hume",
    "op3": "Gopal Krishna Gokhale",
    "op4": "Bipin Chandra Pal",
    "ans": "A.O. Hume"
  },
  {
    "ques": "Where did Mahatma Gandhi first use Satyagraha?<br><br>",
    "quesType": "mcq",
    "op1": "India",
    "op2": "England",
    "op3": "South Africa",
    "op4": "Egypt",
    "ans": "South Africa"
  },
  {
    "ques": "Who was the first woman ruler of Delhi?<br><br>",
    "quesType": "mcq",
    "op1": "Razia Sultana",
    "op2": "Nur Jahan",
    "op3": "Rani Lakshmi Bai",
    "op4": "Jodha Bai",
    "ans": "Razia Sultana"
  },
  {
    "ques": "Which dynasty built the Khajuraho Temples?<br><br>",
    "quesType": "mcq",
    "op1": "Maurya",
    "op2": "Chola",
    "op3": "Chalukya",
    "op4": "Chandela",
    "ans": "Chandela"
  },
  {
    "ques": "Which Indian king defeated Alexander’s general Seleucus?<br><br>",
    "quesType": "mcq",
    "op1": "Chandragupta Maurya",
    "op2": "Ashoka",
    "op3": "Bindusara",
    "op4": "Harsha",
    "ans": "Chandragupta Maurya"
  },
  {
    "ques": "Who introduced the Permanent Settlement?<br><br>",
    "quesType": "mcq",
    "op1": "Lord Dalhousie",
    "op2": "Lord Cornwallis",
    "op3": "Lord Wellesley",
    "op4": "Lord Ripon",
    "ans": "Lord Cornwallis"
  },
  {
    "ques": "Who composed the patriotic song 'Vande Mataram'?<br><br>",
    "quesType": "mcq",
    "op1": "Rabindranath Tagore",
    "op2": "Bankim Chandra Chatterjee",
    "op3": "Sarojini Naidu",
    "op4": "Subramania Bharati",
    "ans": "Bankim Chandra Chatterjee"
  },
  {
    "ques": "Who led the Dandi March?<br><br>",
    "quesType": "mcq",
    "op1": "Subhash Chandra Bose",
    "op2": "Bal Gangadhar Tilak",
    "op3": "Mahatma Gandhi",
    "op4": "Lala Lajpat Rai",
    "ans": "Mahatma Gandhi"
  },
  {
    "ques": "Where did Buddha attain enlightenment?<br><br>",
    "quesType": "mcq",
    "op1": "Varanasi",
    "op2": "Bodh Gaya",
    "op3": "Kushinagar",
    "op4": "Lumbini",
    "ans": "Bodh Gaya"
  },
  {
    "ques": "Who was the first Indian woman to become the President of India?<br><br>",
    "quesType": "mcq",
    "op1": "Indira Gandhi",
    "op2": "Sarojini Naidu",
    "op3": "Pratibha Patil",
    "op4": "Sushma Swaraj",
    "ans": "Pratibha Patil"
  },
  {
    "ques": "Which Indian leader formed the Azad Hind Fauj?<br><br>",
    "quesType": "mcq",
    "op1": "Mahatma Gandhi",
    "op2": "Bhagat Singh",
    "op3": "Subhash Chandra Bose",
    "op4": "Chandrasekhar Azad",
    "ans": "Subhash Chandra Bose"
  },
  {
    "ques": "Which Indian monument is also called 'The Symbol of Love'?<br><br>",
    "quesType": "mcq",
    "op1": "Qutub Minar",
    "op2": "Red Fort",
    "op3": "Charminar",
    "op4": "Taj Mahal",
    "ans": "Taj Mahal"
  },
  {
    "ques": "Who was the last ruler of the Mughal Dynasty?<br><br>",
    "quesType": "mcq",
    "op1": "Akbar",
    "op2": "Bahadur Shah II",
    "op3": "Aurangzeb",
    "op4": "Shah Jahan",
    "ans": "Bahadur Shah II"
  },
  {
    "ques": "Who was the first President of independent India?<br><br>",
    "quesType": "mcq",
    "op1": "Dr. B. R. Ambedkar",
    "op2": "Jawaharlal Nehru",
    "op3": "Dr. Rajendra Prasad",
    "op4": "Sardar Patel",
    "ans": "Dr. Rajendra Prasad"
  },
  {
    "ques": "Who was known as the 'Iron Man of India'?<br><br>",
    "quesType": "mcq",
    "op1": "Subhash Chandra Bose",
    "op2": "Sardar Vallabhbhai Patel",
    "op3": "Lal Bahadur Shastri",
    "op4": "Bhagat Singh",
    "ans": "Sardar Vallabhbhai Patel"
  },
  {
    "ques": "Who was the first Prime Minister of India?<br><br>",
    "quesType": "mcq",
    "op1": "Rajendra Prasad",
    "op2": "Mahatma Gandhi",
    "op3": "Jawaharlal Nehru",
    "op4": "Indira Gandhi",
    "ans": "Jawaharlal Nehru"
  },
  {
    "ques": "Who is known as the 'Father of the Nation' in India?<br><br>",
    "quesType": "mcq",
    "op1": "Jawaharlal Nehru",
    "op2": "B. R. Ambedkar",
    "op3": "Mahatma Gandhi",
    "op4": "Sardar Patel",
    "ans": "Mahatma Gandhi"
  },
  {
    "ques": "Who founded the Indian National Congress?<br><br>",
    "quesType": "mcq",
    "op1": "Dadabhai Naoroji",
    "op2": "A. O. Hume",
    "op3": "Bal Gangadhar Tilak",
    "op4": "Gopal Krishna Gokhale",
    "ans": "A. O. Hume"
  },
  {
    "ques": "When did India gain independence from British rule?<br><br>",
    "quesType": "mcq",
    "op1": "1945",
    "op2": "1946",
    "op3": "1947",
    "op4": "1950",
    "ans": "1947"
  },
  {
    "ques": "Which Mughal emperor built the Taj Mahal?<br><br>",
    "quesType": "mcq",
    "op1": "Akbar",
    "op2": "Aurangzeb",
    "op3": "Shah Jahan",
    "op4": "Babur",
    "ans": "Shah Jahan"
  },
  {
    "ques": "Who was the last Governor-General of independent India?<br><br>",
    "quesType": "mcq",
    "op1": "Lord Mountbatten",
    "op2": "C. Rajagopalachari",
    "op3": "Lord Wavell",
    "op4": "Lord Linlithgow",
    "ans": "C. Rajagopalachari"
  },
  {
    "ques": "Who was the first woman Prime Minister of India?<br><br>",
    "quesType": "mcq",
    "op1": "Sarojini Naidu",
    "op2": "Indira Gandhi",
    "op3": "Sonia Gandhi",
    "op4": "Pratibha Patil",
    "ans": "Indira Gandhi"
  },
  {
    "ques": "Who led the Salt March in 1930?<br><br>",
    "quesType": "mcq",
    "op1": "Sardar Patel",
    "op2": "Subhash Chandra Bose",
    "op3": "Jawaharlal Nehru",
    "op4": "Mahatma Gandhi",
    "ans": "Mahatma Gandhi"
  },
  {
    "ques": "Who was the founder of the Maurya Dynasty?<br><br>",
    "quesType": "mcq",
    "op1": "Ashoka",
    "op2": "Bindusara",
    "op3": "Chandragupta Maurya",
    "op4": "Bimbisara",
    "ans": "Chandragupta Maurya"
  },
  {
    "ques": "Which Indian king is known for the spread of Buddhism?<br><br>",
    "quesType": "mcq",
    "op1": "Ashoka",
    "op2": "Harsha",
    "op3": "Chandragupta Maurya",
    "op4": "Bindusara",
    "ans": "Ashoka"
  },
  {
    "ques": "Who wrote the book 'Discovery of India'?<br><br>",
    "quesType": "mcq",
    "op1": "B. R. Ambedkar",
    "op2": "Mahatma Gandhi",
    "op3": "Jawaharlal Nehru",
    "op4": "Rabindranath Tagore",
    "ans": "Jawaharlal Nehru"
  },
  {
    "ques": "Who was the first woman President of India?<br><br>",
    "quesType": "mcq",
    "op1": "Sarojini Naidu",
    "op2": "Pratibha Patil",
    "op3": "Indira Gandhi",
    "op4": "Sonia Gandhi",
    "ans": "Pratibha Patil"
  },
  {
    "ques": "Who gave the slogan 'Do or Die' during Quit India Movement?<br><br>",
    "quesType": "mcq",
    "op1": "Subhash Chandra Bose",
    "op2": "Bhagat Singh",
    "op3": "Jawaharlal Nehru",
    "op4": "Mahatma Gandhi",
    "ans": "Mahatma Gandhi"
  },
  {
    "ques": "Who was the founder of Sikhism?<br><br>",
    "quesType": "mcq",
    "op1": "Guru Nanak",
    "op2": "Guru Gobind Singh",
    "op3": "Guru Arjan Dev",
    "op4": "Guru Tegh Bahadur",
    "ans": "Guru Nanak"
  },
  {
    "ques": "Where did Mahatma Gandhi first use Satyagraha?<br><br>",
    "quesType": "mcq",
    "op1": "Champaran",
    "op2": "Dandi",
    "op3": "South Africa",
    "op4": "Ahmedabad",
    "ans": "South Africa"
  },
  {
    "ques": "Who was the first Indian to win Nobel Prize?<br><br>",
    "quesType": "mcq",
    "op1": "C. V. Raman",
    "op2": "Rabindranath Tagore",
    "op3": "Amartya Sen",
    "op4": "Mother Teresa",
    "ans": "Rabindranath Tagore"
  },
  {
    "ques": "Who was called Netaji?<br><br>",
    "quesType": "mcq",
    "op1": "Mahatma Gandhi",
    "op2": "Bhagat Singh",
    "op3": "Subhash Chandra Bose",
    "op4": "Jawaharlal Nehru",
    "ans": "Subhash Chandra Bose"
  },
  {
    "ques": "Who wrote the national anthem of India?<br><br>",
    "quesType": "mcq",
    "op1": "Bankim Chandra Chatterjee",
    "op2": "Rabindranath Tagore",
    "op3": "Sarojini Naidu",
    "op4": "B. R. Ambedkar",
    "ans": "Rabindranath Tagore"
  },
  {
    "ques": "Who founded Arya Samaj?<br><br>",
    "quesType": "mcq",
    "op1": "Raja Ram Mohan Roy",
    "op2": "Swami Vivekananda",
    "op3": "Dayanand Saraswati",
    "op4": "Bal Gangadhar Tilak",
    "ans": "Dayanand Saraswati"
  },
  {
    "ques": "Which king built the Qutub Minar?<br><br>",
    "quesType": "mcq",
    "op1": "Qutb-ud-din Aibak",
    "op2": "Iltutmish",
    "op3": "Alauddin Khilji",
    "op4": "Firoz Shah Tughlaq",
    "ans": "Qutb-ud-din Aibak"
  },
  {
    "ques": "Who led the Revolt of 1857 in Jhansi?<br><br>",
    "quesType": "mcq",
    "op1": "Begum Hazrat Mahal",
    "op2": "Rani Laxmi Bai",
    "op3": "Bahadur Shah Zafar",
    "op4": "Tantia Tope",
    "ans": "Rani Laxmi Bai"
  },
  {
    "ques": "Who was the first Governor-General of India?<br><br>",
    "quesType": "mcq",
    "op1": "Lord Dalhousie",
    "op2": "Lord Curzon",
    "op3": "Warren Hastings",
    "op4": "Lord Cornwallis",
    "ans": "Warren Hastings"
  },
  {
    "ques": "Who gave the slogan 'Swaraj is my birthright'?<br><br>",
    "quesType": "mcq",
    "op1": "Mahatma Gandhi",
    "op2": "Jawaharlal Nehru",
    "op3": "Bal Gangadhar Tilak",
    "op4": "Lala Lajpat Rai",
    "ans": "Bal Gangadhar Tilak"
  },
  {
    "ques": "Where did Buddha attain enlightenment?<br><br>",
    "quesType": "mcq",
    "op1": "Sarnath",
    "op2": "Kushinagar",
    "op3": "Lumbini",
    "op4": "Bodh Gaya",
    "ans": "Bodh Gaya"
  },
  {
    "ques": "Who built the Red Fort in Delhi?<br><br>",
    "quesType": "mcq",
    "op1": "Akbar",
    "op2": "Shah Jahan",
    "op3": "Humayun",
    "op4": "Babur",
    "ans": "Shah Jahan"
  },
  {
    "ques": "Who was the first Mughal emperor?<br><br>",
    "quesType": "mcq",
    "op1": "Akbar",
    "op2": "Babur",
    "op3": "Humayun",
    "op4": "Aurangzeb",
    "ans": "Babur"
  },
  {
    "ques": "When was the Battle of Plassey fought?<br><br>",
    "quesType": "mcq",
    "op1": "1757",
    "op2": "1764",
    "op3": "1857",
    "op4": "1773",
    "ans": "1757"
  },
  {
    "ques": "Who was the last Mughal emperor?<br><br>",
    "quesType": "mcq",
    "op1": "Bahadur Shah Zafar",
    "op2": "Akbar II",
    "op3": "Shah Alam II",
    "op4": "Aurangzeb",
    "ans": "Bahadur Shah Zafar"
  },
  {
  "ques": "Who was the founder of the Maurya Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Chandragupta Maurya",
  "op3": "Bindusara",
  "op4": "Bimbisara",
  "ans": "Chandragupta Maurya"
},
{
  "ques": "Who wrote Arthashastra?<br><br>",
  "quesType": "mcq",
  "op1": "Kalidasa",
  "op2": "Chanakya",
  "op3": "Banabhatta",
  "op4": "Patanjali",
  "ans": "Chanakya"
},
{
  "ques": "Which dynasty built the famous Ajanta Caves?<br><br>",
  "quesType": "mcq",
  "op1": "Gupta",
  "op2": "Maurya",
  "op3": "Satavahana",
  "op4": "Chola",
  "ans": "Satavahana"
},
{
  "ques": "Who was the famous ruler of the Kushan dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Kanishka",
  "op2": "Ashoka",
  "op3": "Chandragupta II",
  "op4": "Harsha",
  "ans": "Kanishka"
},
{
  "ques": "Who built the Iron Pillar of Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Chandragupta Maurya",
  "op3": "Chandragupta II",
  "op4": "Harsha",
  "ans": "Chandragupta II"
},
{
  "ques": "Which Gupta king is known as 'Napoleon of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta I",
  "op2": "Samudragupta",
  "op3": "Skandagupta",
  "op4": "Chandragupta II",
  "ans": "Samudragupta"
},
{
  "ques": "Who was the Chinese traveller who visited Harsha’s court?<br><br>",
  "quesType": "mcq",
  "op1": "Ibn Battuta",
  "op2": "Fa-Hien",
  "op3": "Hiuen Tsang",
  "op4": "Megasthenes",
  "ans": "Hiuen Tsang"
},
{
  "ques": "Which king is known for the rock-cut caves of Ellora?<br><br>",
  "quesType": "mcq",
  "op1": "Rashtrakuta kings",
  "op2": "Gupta kings",
  "op3": "Maurya kings",
  "op4": "Mughal emperors",
  "ans": "Rashtrakuta kings"
},
{
  "ques": "Who was the founder of the Chola dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Rajaraja Chola I",
  "op2": "Rajendra Chola",
  "op3": "Vijayalaya Chola",
  "op4": "Kulothunga Chola",
  "ans": "Vijayalaya Chola"
},
{
  "ques": "Who built the Brihadeeswara Temple?<br><br>",
  "quesType": "mcq",
  "op1": "Rajendra Chola",
  "op2": "Rajaraja Chola I",
  "op3": "Kulothunga Chola",
  "op4": "Aditya Chola",
  "ans": "Rajaraja Chola I"
},
{
  "ques": "Which empire was ruled by Harshavardhana?<br><br>",
  "quesType": "mcq",
  "op1": "Maurya Empire",
  "op2": "Gupta Empire",
  "op3": "Pushyabhuti Dynasty",
  "op4": "Kushan Empire",
  "ans": "Pushyabhuti Dynasty"
},
{
  "ques": "Who built the Sanchi Stupa?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Chandragupta Maurya",
  "op3": "Bindusara",
  "op4": "Samudragupta",
  "ans": "Ashoka"
},
{
  "ques": "Which king embraced Buddhism after the Kalinga War?<br><br>",
  "quesType": "mcq",
  "op1": "Bindusara",
  "op2": "Chandragupta Maurya",
  "op3": "Ashoka",
  "op4": "Kanishka",
  "ans": "Ashoka"
},
{
  "ques": "Who was the founder of the Vijayanagar Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Krishnadevaraya",
  "op2": "Harihara I",
  "op3": "Bukkaraya I",
  "op4": "Devaraya II",
  "ans": "Harihara I"
},
{
  "ques": "Who wrote Meghaduta?<br><br>",
  "quesType": "mcq",
  "op1": "Kalidasa",
  "op2": "Banabhatta",
  "op3": "Valmiki",
  "op4": "Vatsyayana",
  "ans": "Kalidasa"
},
{
  "ques": "Who founded Nalanda University?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Harsha",
  "op3": "Kumaragupta I",
  "op4": "Samudragupta",
  "ans": "Kumaragupta I"
},
{
  "ques": "Who was the greatest king of the Chalukya dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Pulakesin I",
  "op2": "Pulakesin II",
  "op3": "Vikramaditya I",
  "op4": "Kirtivarman I",
  "ans": "Pulakesin II"
},
{
  "ques": "Who built the Konark Sun Temple?<br><br>",
  "quesType": "mcq",
  "op1": "Anantavarman",
  "op2": "Narasimhadeva I",
  "op3": "Kapilendra Deva",
  "op4": "Prithvi Deva",
  "ans": "Narasimhadeva I"
},
{
  "ques": "Which ancient city was the capital of the Satavahana dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Taxila",
  "op2": "Pataliputra",
  "op3": "Pratishthana",
  "op4": "Ujjain",
  "ans": "Pratishthana"
},
{
  "ques": "Who composed the Allahabad Pillar Inscription?<br><br>",
  "quesType": "mcq",
  "op1": "Kalidasa",
  "op2": "Harishena",
  "op3": "Banabhatta",
  "op4": "Vatsyayana",
  "ans": "Harishena"
},
{
  "ques": "Who defeated Harsha on the banks of the Narmada?<br><br>",
  "quesType": "mcq",
  "op1": "Pulakesin II",
  "op2": "Rajaraja Chola",
  "op3": "Samudragupta",
  "op4": "Kanishka",
  "ans": "Pulakesin II"
},
{
  "ques": "Who wrote Harshacharita?<br><br>",
  "quesType": "mcq",
  "op1": "Kalidasa",
  "op2": "Banabhatta",
  "op3": "Aryabhata",
  "op4": "Vatsyayana",
  "ans": "Banabhatta"
},
{
  "ques": "Who was the founder of the Pala dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Dharampala",
  "op2": "Gopala",
  "op3": "Mahipala",
  "op4": "Devapala",
  "ans": "Gopala"
},
{
  "ques": "Who was the first ruler of Magadha?<br><br>",
  "quesType": "mcq",
  "op1": "Bimbisara",
  "op2": "Ajatashatru",
  "op3": "Chandragupta Maurya",
  "op4": "Mahapadma Nanda",
  "ans": "Bimbisara"
},
{
  "ques": "Who composed Panchatantra?<br><br>",
  "quesType": "mcq",
  "op1": "Vishnu Sharma",
  "op2": "Kalidasa",
  "op3": "Chanakya",
  "op4": "Banabhatta",
  "ans": "Vishnu Sharma"
},
{
  "ques": "Which ruler performed Ashwamedha Yajna?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Samudragupta",
  "op3": "Chandragupta Maurya",
  "op4": "Bimbisara",
  "ans": "Samudragupta"
},
{
  "ques": "Which dynasty ruled Kanauj after Harsha?<br><br>",
  "quesType": "mcq",
  "op1": "Pala",
  "op2": "Pratihara",
  "op3": "Chola",
  "op4": "Rashtrakuta",
  "ans": "Pratihara"
},
{
  "ques": "Who was known as the 'Second Ashoka'?<br><br>",
  "quesType": "mcq",
  "op1": "Kanishka",
  "op2": "Chandragupta I",
  "op3": "Harsha",
  "op4": "Samudragupta",
  "ans": "Kanishka"
},
{
  "ques": "Which ancient text is a treatise on sexology?<br><br>",
  "quesType": "mcq",
  "op1": "Panchatantra",
  "op2": "Arthashastra",
  "op3": "Meghaduta",
  "op4": "Kamasutra",
  "ans": "Kamasutra"
},
{
  "ques": "Who was the last great Hindu king of northern India?<br><br>",
  "quesType": "mcq",
  "op1": "Harsha",
  "op2": "Samudragupta",
  "op3": "Prithviraj Chauhan",
  "op4": "Pulakesin II",
  "ans": "Prithviraj Chauhan"
}
,
{
  "ques": "When did the Battle of Plassey take place?<br><br>",
  "quesType": "mcq",
  "op1": "1757",
  "op2": "1761",
  "op3": "1857",
  "op4": "1773",
  "ans": "1757"
},
{
  "ques": "Who was the first Sultan of Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Qutb-ud-din Aibak",
  "op2": "Iltutmish",
  "op3": "Balban",
  "op4": "Alauddin Khilji",
  "ans": "Qutb-ud-din Aibak"
},
{
  "ques": "Who defeated Muhammad Ghori in the first battle of Tarain?<br><br>",
  "quesType": "mcq",
  "op1": "Prithviraj Chauhan",
  "op2": "Raja Raja Chola",
  "op3": "Rana Pratap",
  "op4": "Chandragupta",
  "ans": "Prithviraj Chauhan"
},
{
  "ques": "Who was the founder of the Gupta Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Samudragupta",
  "op2": "Chandragupta I",
  "op3": "Chandragupta II",
  "op4": "Skandagupta",
  "ans": "Chandragupta I"
},
{
  "ques": "Which king is known as the 'Napoleon of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Samudragupta",
  "op3": "Harsha",
  "op4": "Chandragupta Maurya",
  "ans": "Samudragupta"
},
{
  "ques": "The capital of the Pallava dynasty was?<br><br>",
  "quesType": "mcq",
  "op1": "Kanchipuram",
  "op2": "Madurai",
  "op3": "Thanjavur",
  "op4": "Hampi",
  "ans": "Kanchipuram"
},
{
  "ques": "Who built the Qutub Minar?<br><br>",
  "quesType": "mcq",
  "op1": "Qutb-ud-din Aibak",
  "op2": "Iltutmish",
  "op3": "Alauddin Khilji",
  "op4": "Balban",
  "ans": "Qutb-ud-din Aibak"
},
{
  "ques": "Who was the last ruler of the Maurya Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Bindusara",
  "op2": "Ashoka",
  "op3": "Brihadratha",
  "op4": "Chandragupta",
  "ans": "Brihadratha"
},
{
  "ques": "Who introduced Persian as the court language of the Mughal Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Babur",
  "op3": "Humayun",
  "op4": "Aurangzeb",
  "ans": "Akbar"
},
{
  "ques": "Who led the Revolt of 1857 in Kanpur?<br><br>",
  "quesType": "mcq",
  "op1": "Bahadur Shah Zafar",
  "op2": "Rani Lakshmibai",
  "op3": "Nana Sahib",
  "op4": "Mangal Pandey",
  "ans": "Nana Sahib"
},
{
  "ques": "Which ancient city was excavated in Punjab?<br><br>",
  "quesType": "mcq",
  "op1": "Lothal",
  "op2": "Mohenjo-daro",
  "op3": "Harappa",
  "op4": "Kalibangan",
  "ans": "Harappa"
},
{
  "ques": "Who was the founder of the Chola Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Raja Chola I",
  "op2": "Rajendra Chola I",
  "op3": "Vijayalaya Chola",
  "op4": "Kulothunga Chola I",
  "ans": "Vijayalaya Chola"
},
{
  "ques": "Who wrote Arthashastra?<br><br>",
  "quesType": "mcq",
  "op1": "Kalidasa",
  "op2": "Chanakya",
  "op3": "Patanjali",
  "op4": "Valmiki",
  "ans": "Chanakya"
},
{
  "ques": "Who was the ruler of Mewar famous for fighting Akbar?<br><br>",
  "quesType": "mcq",
  "op1": "Maharana Pratap",
  "op2": "Rana Sanga",
  "op3": "Rana Kumbha",
  "op4": "Rana Hammir",
  "ans": "Maharana Pratap"
},
{
  "ques": "Who was the founder of the Slave Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Qutb-ud-din Aibak",
  "op2": "Iltutmish",
  "op3": "Balban",
  "op4": "Alauddin Khilji",
  "ans": "Qutb-ud-din Aibak"
},
{
  "ques": "Who defeated the Marathas in the Third Battle of Panipat?<br><br>",
  "quesType": "mcq",
  "op1": "Nadir Shah",
  "op2": "Ahmad Shah Abdali",
  "op3": "Aurangzeb",
  "op4": "Akbar II",
  "ans": "Ahmad Shah Abdali"
},
{
  "ques": "Who was the first Indian ruler who had a navy?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Chandragupta Maurya",
  "op3": "Samudragupta",
  "op4": "Chola Kings",
  "ans": "Chola Kings"
},
{
  "ques": "Who was the founder of the Vijayanagara Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Harihara I",
  "op2": "Krishnadevaraya",
  "op3": "Bukkaraya I",
  "op4": "Devaraya II",
  "ans": "Harihara I"
},
{
  "ques": "Where was Ashoka’s inscription found with 'Kalinga War' details?<br><br>",
  "quesType": "mcq",
  "op1": "Sarnath",
  "op2": "Dhauli",
  "op3": "Sanchi",
  "op4": "Nalanda",
  "ans": "Dhauli"
},
{
  "ques": "Which city was the capital of Chandragupta Maurya?<br><br>",
  "quesType": "mcq",
  "op1": "Pataliputra",
  "op2": "Magadha",
  "op3": "Ujjain",
  "op4": "Taxila",
  "ans": "Pataliputra"
},
{
  "ques": "Which ancient Indian university attracted scholars from abroad?<br><br>",
  "quesType": "mcq",
  "op1": "Nalanda",
  "op2": "Takshashila",
  "op3": "Vikramashila",
  "op4": "All of the above",
  "ans": "All of the above"
},
{
  "ques": "Which ruler is known for rock-cut caves in Ajanta?<br><br>",
  "quesType": "mcq",
  "op1": "Gupta Kings",
  "op2": "Satavahanas",
  "op3": "Pallavas",
  "op4": "Mauryas",
  "ans": "Satavahanas"
},
{
  "ques": "Which dynasty ruled over Magadha after the Mauryas?<br><br>",
  "quesType": "mcq",
  "op1": "Sungas",
  "op2": "Guptas",
  "op3": "Cholas",
  "op4": "Chalukyas",
  "ans": "Sungas"
},
{
  "ques": "Who founded the Pala Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Gopala",
  "op2": "Dharampala",
  "op3": "Mahipala",
  "op4": "Vigrahapala",
  "ans": "Gopala"
},
{
  "ques": "Who was the ruler during the Second Battle of Tarain?<br><br>",
  "quesType": "mcq",
  "op1": "Prithviraj Chauhan",
  "op2": "Raja Raja Chola",
  "op3": "Rana Pratap",
  "op4": "Raja Bhoj",
  "ans": "Prithviraj Chauhan"
},
{
  "ques": "Who established the Bahmani Kingdom?<br><br>",
  "quesType": "mcq",
  "op1": "Alauddin Bahman Shah",
  "op2": "Firuz Shah",
  "op3": "Humayun",
  "op4": "Sher Shah",
  "ans": "Alauddin Bahman Shah"
},
{
  "ques": "Where was Harappan Civilization located?<br><br>",
  "quesType": "mcq",
  "op1": "Ganga Valley",
  "op2": "Indus Valley",
  "op3": "Krishna Valley",
  "op4": "Narmada Valley",
  "ans": "Indus Valley"
},
{
  "ques": "Who was known as the 'Light of Asia'?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Buddha",
  "op3": "Mahavira",
  "op4": "Chanakya",
  "ans": "Buddha"
},
{
  "ques": "Who was the founder of Jainism?<br><br>",
  "quesType": "mcq",
  "op1": "Gautam Buddha",
  "op2": "Mahavira",
  "op3": "Ashoka",
  "op4": "Chanakya",
  "ans": "Mahavira"
},
{
  "ques": "Who was the first Sultan to invade South India?<br><br>",
  "quesType": "mcq",
  "op1": "Alauddin Khilji",
  "op2": "Muhammad Ghori",
  "op3": "Qutb-ud-din Aibak",
  "op4": "Balban",
  "ans": "Alauddin Khilji"
},
{
  "ques": "Who was the founder of the Maurya Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Bindusara",
  "op3": "Chandragupta Maurya",
  "op4": "Bimbisara",
  "ans": "Chandragupta Maurya"
},
{
  "ques": "Which Indian emperor is known for spreading Buddhism?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Harsha",
  "op3": "Chandragupta Maurya",
  "op4": "Bindusara",
  "ans": "Ashoka"
},
{
  "ques": "Who wrote the book 'Discovery of India'?<br><br>",
  "quesType": "mcq",
  "op1": "B. R. Ambedkar",
  "op2": "Mahatma Gandhi",
  "op3": "Jawaharlal Nehru",
  "op4": "Rabindranath Tagore",
  "ans": "Jawaharlal Nehru"
},
{
  "ques": "Who was the first woman President of India?<br><br>",
  "quesType": "mcq",
  "op1": "Sarojini Naidu",
  "op2": "Pratibha Patil",
  "op3": "Indira Gandhi",
  "op4": "Sonia Gandhi",
  "ans": "Pratibha Patil"
},
{
  "ques": "Who gave the slogan 'Do or Die' during the Quit India Movement?<br><br>",
  "quesType": "mcq",
  "op1": "Subhash Chandra Bose",
  "op2": "Bhagat Singh",
  "op3": "Jawaharlal Nehru",
  "op4": "Mahatma Gandhi",
  "ans": "Mahatma Gandhi"
},
{
  "ques": "Who founded Sikhism?<br><br>",
  "quesType": "mcq",
  "op1": "Guru Nanak",
  "op2": "Guru Gobind Singh",
  "op3": "Guru Arjan Dev",
  "op4": "Guru Tegh Bahadur",
  "ans": "Guru Nanak"
},
{
  "ques": "Where did Mahatma Gandhi first use Satyagraha?<br><br>",
  "quesType": "mcq",
  "op1": "Champaran",
  "op2": "Dandi",
  "op3": "South Africa",
  "op4": "Ahmedabad",
  "ans": "South Africa"
},
{
  "ques": "Who was the first Indian to win a Nobel Prize?<br><br>",
  "quesType": "mcq",
  "op1": "C. V. Raman",
  "op2": "Rabindranath Tagore",
  "op3": "Amartya Sen",
  "op4": "Mother Teresa",
  "ans": "Rabindranath Tagore"
},
{
  "ques": "Who was known as 'Netaji'?<br><br>",
  "quesType": "mcq",
  "op1": "Mahatma Gandhi",
  "op2": "Bhagat Singh",
  "op3": "Subhash Chandra Bose",
  "op4": "Jawaharlal Nehru",
  "ans": "Subhash Chandra Bose"
},
{
  "ques": "Who wrote the national anthem of India?<br><br>",
  "quesType": "mcq",
  "op1": "Bankim Chandra Chatterjee",
  "op2": "Rabindranath Tagore",
  "op3": "Sarojini Naidu",
  "op4": "B. R. Ambedkar",
  "ans": "Rabindranath Tagore"
},
{
  "ques": "Who founded the Arya Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Swami Vivekananda",
  "op3": "Dayanand Saraswati",
  "op4": "Bal Gangadhar Tilak",
  "ans": "Dayanand Saraswati"
},
{
  "ques": "Which ruler built the Qutub Minar?<br><br>",
  "quesType": "mcq",
  "op1": "Qutb-ud-din Aibak",
  "op2": "Iltutmish",
  "op3": "Alauddin Khilji",
  "op4": "Firoz Shah Tughlaq",
  "ans": "Qutb-ud-din Aibak"
},
{
  "ques": "Who led the Revolt of 1857 in Jhansi?<br><br>",
  "quesType": "mcq",
  "op1": "Begum Hazrat Mahal",
  "op2": "Rani Laxmi Bai",
  "op3": "Bahadur Shah Zafar",
  "op4": "Tantia Tope",
  "ans": "Rani Laxmi Bai"
},
{
  "ques": "Who was the first Governor-General of India?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Dalhousie",
  "op2": "Lord Curzon",
  "op3": "Warren Hastings",
  "op4": "Lord Cornwallis",
  "ans": "Warren Hastings"
},
{
  "ques": "Who gave the slogan 'Swaraj is my birthright'?<br><br>",
  "quesType": "mcq",
  "op1": "Mahatma Gandhi",
  "op2": "Jawaharlal Nehru",
  "op3": "Bal Gangadhar Tilak",
  "op4": "Lala Lajpat Rai",
  "ans": "Bal Gangadhar Tilak"
},
{
  "ques": "Where did Buddha attain enlightenment?<br><br>",
  "quesType": "mcq",
  "op1": "Sarnath",
  "op2": "Kushinagar",
  "op3": "Lumbini",
  "op4": "Bodh Gaya",
  "ans": "Bodh Gaya"
},
{
  "ques": "Who built the Red Fort in Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Shah Jahan",
  "op3": "Humayun",
  "op4": "Babur",
  "ans": "Shah Jahan"
},
{
  "ques": "Who was the first Mughal emperor?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Babur",
  "op3": "Humayun",
  "op4": "Aurangzeb",
  "ans": "Babur"
},
{
  "ques": "When was the Battle of Plassey fought?<br><br>",
  "quesType": "mcq",
  "op1": "1757",
  "op2": "1764",
  "op3": "1857",
  "op4": "1773",
  "ans": "1757"
},
{
  "ques": "Who was the last Mughal emperor?<br><br>",
  "quesType": "mcq",
  "op1": "Bahadur Shah Zafar",
  "op2": "Akbar II",
  "op3": "Shah Alam II",
  "op4": "Aurangzeb",
  "ans": "Bahadur Shah Zafar"
},
{
  "ques": "Who established the 'Servants of India Society'?<br><br>",
  "quesType": "mcq",
  "op1": "Bal Gangadhar Tilak",
  "op2": "Gopal Krishna Gokhale",
  "op3": "Dadabhai Naoroji",
  "op4": "Annie Besant",
  "ans": "Gopal Krishna Gokhale"
},
{
  "ques": "Who composed 'Vande Mataram'?<br><br>",
  "quesType": "mcq",
  "op1": "Rabindranath Tagore",
  "op2": "Bankim Chandra Chatterjee",
  "op3": "Sarojini Naidu",
  "op4": "B. R. Ambedkar",
  "ans": "Bankim Chandra Chatterjee"
},
{
  "ques": "Who founded the Brahmo Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Swami Dayanand Saraswati",
  "op2": "Raja Ram Mohan Roy",
  "op3": "Swami Vivekananda",
  "op4": "Rabindranath Tagore",
  "ans": "Raja Ram Mohan Roy"
},
{
  "ques": "Who was the Viceroy of India during the Partition of Bengal (1905)?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Curzon",
  "op2": "Lord Minto",
  "op3": "Lord Ripon",
  "op4": "Lord Mountbatten",
  "ans": "Lord Curzon"
},
{
  "ques": "When did the Jallianwala Bagh massacre take place?<br><br>",
  "quesType": "mcq",
  "op1": "1917",
  "op2": "1919",
  "op3": "1921",
  "op4": "1923",
  "ans": "1919"
},
{
  "ques": "Which Mughal emperor was called 'Zinda Pir' (living saint)?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Humayun",
  "op3": "Akbar",
  "op4": "Aurangzeb",
  "ans": "Aurangzeb"
},
{
  "ques": "Who was the founder of the Gupta Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta I",
  "op2": "Samudragupta",
  "op3": "Chandragupta II",
  "op4": "Skandagupta",
  "ans": "Chandragupta I"
},
{
  "ques": "Who built the Sanchi Stupa?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta Maurya",
  "op2": "Ashoka",
  "op3": "Bindusara",
  "op4": "Kanishka",
  "ans": "Ashoka"
},
{
  "ques": "Who was the last ruler of the Maurya Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Brihadratha",
  "op3": "Chandragupta Maurya",
  "op4": "Bindusara",
  "ans": "Brihadratha"
},
{
  "ques": "Who led the Azad Hind Fauj?<br><br>",
  "quesType": "mcq",
  "op1": "Sardar Patel",
  "op2": "Mahatma Gandhi",
  "op3": "Subhash Chandra Bose",
  "op4": "Jawaharlal Nehru",
  "ans": "Subhash Chandra Bose"
}
,
{
  "ques": "Who was the founder of the Mughal Empire in India?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Akbar",
  "op3": "Aurangzeb",
  "op4": "Humayun",
  "ans": "Babur"
},
{
  "ques": "When did Vasco da Gama first come to India?<br><br>",
  "quesType": "mcq",
  "op1": "1492",
  "op2": "1498",
  "op3": "1505",
  "op4": "1526",
  "ans": "1498"
},
{
  "ques": "Which emperor built the Red Fort in Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Shah Jahan",
  "op2": "Akbar",
  "op3": "Jahangir",
  "op4": "Aurangzeb",
  "ans": "Shah Jahan"
},
{
  "ques": "The capital of Chandragupta Maurya was?<br><br>",
  "quesType": "mcq",
  "op1": "Pataliputra",
  "op2": "Ujjain",
  "op3": "Taxila",
  "op4": "Kanauj",
  "ans": "Pataliputra"
},
{
  "ques": "Who defeated Humayun at the Battle of Chausa?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Sher Shah Suri",
  "op3": "Akbar",
  "op4": "Rana Sanga",
  "ans": "Sher Shah Suri"
},
{
  "ques": "In which year did the First Battle of Panipat take place?<br><br>",
  "quesType": "mcq",
  "op1": "1526",
  "op2": "1556",
  "op3": "1761",
  "op4": "1576",
  "ans": "1526"
},
{
  "ques": "Who was the greatest ruler of the Chalukya dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Pulakeshin II",
  "op2": "Vikramaditya VI",
  "op3": "Kirtivarman I",
  "op4": "Mangalesha",
  "ans": "Pulakeshin II"
},
{
  "ques": "Which Mughal ruler built the Jama Masjid in Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Shah Jahan",
  "op3": "Aurangzeb",
  "op4": "Humayun",
  "ans": "Shah Jahan"
},
{
  "ques": "Who was the founder of the Rashtrakuta dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Dantidurga",
  "op2": "Krishna I",
  "op3": "Govinda III",
  "op4": "Amoghavarsha",
  "ans": "Dantidurga"
},
{
  "ques": "Where is the famous Sun Temple of Konark located?<br><br>",
  "quesType": "mcq",
  "op1": "Odisha",
  "op2": "Gujarat",
  "op3": "Madhya Pradesh",
  "op4": "Tamil Nadu",
  "ans": "Odisha"
},
{
  "ques": "Who introduced Din-i Ilahi?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Akbar",
  "op3": "Humayun",
  "op4": "Aurangzeb",
  "ans": "Akbar"
},
{
  "ques": "Which dynasty built the famous Kailasa Temple at Ellora?<br><br>",
  "quesType": "mcq",
  "op1": "Pallava",
  "op2": "Chalukya",
  "op3": "Rashtrakuta",
  "op4": "Gupta",
  "ans": "Rashtrakuta"
},
{
  "ques": "Who wrote 'Prithviraj Raso'?<br><br>",
  "quesType": "mcq",
  "op1": "Chand Bardai",
  "op2": "Kalidasa",
  "op3": "Bana Bhatta",
  "op4": "Tulsidas",
  "ans": "Chand Bardai"
},
{
  "ques": "Who was the last ruler of the Mughal Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Bahadur Shah I",
  "op2": "Akbar II",
  "op3": "Bahadur Shah Zafar",
  "op4": "Shah Alam II",
  "ans": "Bahadur Shah Zafar"
},
{
  "ques": "Who was the founder of the Satavahana dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Simuka",
  "op2": "Gautamiputra Satakarni",
  "op3": "Pulumavi",
  "op4": "Yajna Sri Satakarni",
  "ans": "Simuka"
},
{
  "ques": "Which king built the famous Brihadeeswara Temple?<br><br>",
  "quesType": "mcq",
  "op1": "Rajaraja Chola I",
  "op2": "Rajendra Chola I",
  "op3": "Kulothunga Chola",
  "op4": "Karikala Chola",
  "ans": "Rajaraja Chola I"
},
{
  "ques": "Who was the most famous king of the Kushan dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Vima Kadphises",
  "op2": "Kanishka",
  "op3": "Huvishka",
  "op4": "Vasudeva I",
  "ans": "Kanishka"
},
{
  "ques": "Which ancient port was famous during the Sangam age?<br><br>",
  "quesType": "mcq",
  "op1": "Kaveripattinam",
  "op2": "Lothal",
  "op3": "Muziris",
  "op4": "Tamralipta",
  "ans": "Muziris"
},
{
  "ques": "Who built the famous Sanchi Stupa?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta Maurya",
  "op2": "Bindusara",
  "op3": "Ashoka",
  "op4": "Samudragupta",
  "ans": "Ashoka"
},
{
  "ques": "Which Gupta ruler adopted the title 'Vikramaditya'?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta I",
  "op2": "Chandragupta II",
  "op3": "Samudragupta",
  "op4": "Skandagupta",
  "ans": "Chandragupta II"
},
{
  "ques": "In which state is the ancient site of Kalibangan located?<br><br>",
  "quesType": "mcq",
  "op1": "Punjab",
  "op2": "Haryana",
  "op3": "Rajasthan",
  "op4": "Gujarat",
  "ans": "Rajasthan"
},
{
  "ques": "Who defeated Harsha on the banks of the Narmada?<br><br>",
  "quesType": "mcq",
  "op1": "Pulakeshin II",
  "op2": "Kirtivarman I",
  "op3": "Mangalesha",
  "op4": "Vikramaditya II",
  "ans": "Pulakeshin II"
},
{
  "ques": "The capital of the Pallava kings was?<br><br>",
  "quesType": "mcq",
  "op1": "Madurai",
  "op2": "Kanchipuram",
  "op3": "Thanjavur",
  "op4": "Gangaikonda Cholapuram",
  "ans": "Kanchipuram"
},
{
  "ques": "Who led the revolt of 1857 in Jhansi?<br><br>",
  "quesType": "mcq",
  "op1": "Tantia Tope",
  "op2": "Bahadur Shah Zafar",
  "op3": "Rani Lakshmibai",
  "op4": "Nana Sahib",
  "ans": "Rani Lakshmibai"
},
{
  "ques": "Which Mughal ruler is known for religious tolerance?<br><br>",
  "quesType": "mcq",
  "op1": "Aurangzeb",
  "op2": "Akbar",
  "op3": "Jahangir",
  "op4": "Babur",
  "ans": "Akbar"
},
{
  "ques": "Who was the founder of the Sikh Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Ranjit Singh",
  "op2": "Guru Gobind Singh",
  "op3": "Banda Singh Bahadur",
  "op4": "Guru Nanak",
  "ans": "Ranjit Singh"
},
{
  "ques": "Who was the founder of the Gahadavala dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Govindachandra",
  "op2": "Chandradeva",
  "op3": "Jayachandra",
  "op4": "Harishchandra",
  "ans": "Chandradeva"
},
{
  "ques": "Who shifted his capital from Delhi to Daulatabad?<br><br>",
  "quesType": "mcq",
  "op1": "Alauddin Khilji",
  "op2": "Ghiyasuddin Tughlaq",
  "op3": "Muhammad bin Tughlaq",
  "op4": "Firoz Shah Tughlaq",
  "ans": "Muhammad bin Tughlaq"
},
{
  "ques": "The famous 'Iron Pillar' near Qutub Minar was built by?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Chandragupta II",
  "op3": "Harsha",
  "op4": "Skandagupta",
  "ans": "Chandragupta II"
},
{
  "ques": "Where is the ancient city of Taxila located today?<br><br>",
  "quesType": "mcq",
  "op1": "Afghanistan",
  "op2": "Pakistan",
  "op3": "India",
  "op4": "Bangladesh",
  "ans": "Pakistan"
}
,
{
  "ques": "Who is known as the Father of the Indian Nation?<br><br>",
  "quesType": "mcq",
  "op1": "Subhas Chandra Bose",
  "op2": "Jawaharlal Nehru",
  "op3": "Sardar Patel",
  "op4": "Mahatma Gandhi",
  "ans": "Mahatma Gandhi"
},
{
  "ques": "Who was the first President of independent India?<br><br>",
  "quesType": "mcq",
  "op1": "Rajendra Prasad",
  "op2": "Sarvepalli Radhakrishnan",
  "op3": "Jawaharlal Nehru",
  "op4": "B. R. Ambedkar",
  "ans": "Rajendra Prasad"
},
{
  "ques": "Who was the first Prime Minister of India?<br><br>",
  "quesType": "mcq",
  "op1": "Indira Gandhi",
  "op2": "Jawaharlal Nehru",
  "op3": "Rajiv Gandhi",
  "op4": "Mahatma Gandhi",
  "ans": "Jawaharlal Nehru"
},
{
  "ques": "Which empire built the Taj Mahal?<br><br>",
  "quesType": "mcq",
  "op1": "Maurya Empire",
  "op2": "Mughal Empire",
  "op3": "Gupta Empire",
  "op4": "Chola Empire",
  "ans": "Mughal Empire"
},
{
  "ques": "Who was the founder of the Maurya Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Chandragupta Maurya",
  "op3": "Bindusara",
  "op4": "Harsha",
  "ans": "Chandragupta Maurya"
},
{
  "ques": "Who was the first Governor-General of independent India?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Mountbatten",
  "op2": "C. Rajagopalachari",
  "op3": "Lord Wellesley",
  "op4": "Lord Curzon",
  "ans": "Lord Mountbatten"
},
{
  "ques": "Who gave the slogan 'Jai Jawan Jai Kisan'?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Indira Gandhi",
  "op3": "Lal Bahadur Shastri",
  "op4": "Mahatma Gandhi",
  "ans": "Lal Bahadur Shastri"
},
{
  "ques": "Who was known as the Iron Man of India?<br><br>",
  "quesType": "mcq",
  "op1": "Bhagat Singh",
  "op2": "Jawaharlal Nehru",
  "op3": "Sardar Vallabhbhai Patel",
  "op4": "Subhas Chandra Bose",
  "ans": "Sardar Vallabhbhai Patel"
},
{
  "ques": "Where did the Jallianwala Bagh Massacre happen?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Amritsar",
  "op3": "Kolkata",
  "op4": "Lucknow",
  "ans": "Amritsar"
},
{
  "ques": "Who wrote the book 'Discovery of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Mahatma Gandhi",
  "op2": "B. R. Ambedkar",
  "op3": "Jawaharlal Nehru",
  "op4": "Rabindranath Tagore",
  "ans": "Jawaharlal Nehru"
},
{
  "ques": "Who gave the slogan 'Quit India'?<br><br>",
  "quesType": "mcq",
  "op1": "Subhas Chandra Bose",
  "op2": "Jawaharlal Nehru",
  "op3": "Sardar Patel",
  "op4": "Mahatma Gandhi",
  "ans": "Mahatma Gandhi"
},
{
  "ques": "Who was the founder of the Sikh Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ranjit Singh",
  "op2": "Guru Gobind Singh",
  "op3": "Guru Nanak",
  "op4": "Guru Arjan Dev",
  "ans": "Raja Ranjit Singh"
},
{
  "ques": "Which Mughal emperor was known as 'Zinda Pir'?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Aurangzeb",
  "op3": "Babur",
  "op4": "Shah Jahan",
  "ans": "Aurangzeb"
},
{
  "ques": "Who founded the Indian National Congress?<br><br>",
  "quesType": "mcq",
  "op1": "Bal Gangadhar Tilak",
  "op2": "Dadabhai Naoroji",
  "op3": "A. O. Hume",
  "op4": "Gopal Krishna Gokhale",
  "ans": "A. O. Hume"
},
{
  "ques": "Who is known as 'Punjab Kesari'?<br><br>",
  "quesType": "mcq",
  "op1": "Bhagat Singh",
  "op2": "Lala Lajpat Rai",
  "op3": "Bal Gangadhar Tilak",
  "op4": "Sukhdev",
  "ans": "Lala Lajpat Rai"
},
{
  "ques": "Who was called 'Lokmanya'?<br><br>",
  "quesType": "mcq",
  "op1": "Lala Lajpat Rai",
  "op2": "Bipin Chandra Pal",
  "op3": "Bal Gangadhar Tilak",
  "op4": "Dadabhai Naoroji",
  "ans": "Bal Gangadhar Tilak"
},
{
  "ques": "Who abolished Sati system?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Cornwallis",
  "op2": "Lord Wellesley",
  "op3": "Lord Bentinck",
  "op4": "Lord Dalhousie",
  "ans": "Lord Bentinck"
},
{
  "ques": "Who was the first Indian woman to become President of the INC?<br><br>",
  "quesType": "mcq",
  "op1": "Sarojini Naidu",
  "op2": "Annie Besant",
  "op3": "Indira Gandhi",
  "op4": "Vijaya Lakshmi Pandit",
  "ans": "Annie Besant"
},
{
  "ques": "Who composed India's national song 'Vande Mataram'?<br><br>",
  "quesType": "mcq",
  "op1": "Rabindranath Tagore",
  "op2": "Bankim Chandra Chatterjee",
  "op3": "Subramania Bharati",
  "op4": "Sarojini Naidu",
  "ans": "Bankim Chandra Chatterjee"
},
{
  "ques": "Who gave the slogan 'Swaraj is my birthright'?<br><br>",
  "quesType": "mcq",
  "op1": "Subhas Chandra Bose",
  "op2": "Bal Gangadhar Tilak",
  "op3": "Bhagat Singh",
  "op4": "Jawaharlal Nehru",
  "ans": "Bal Gangadhar Tilak"
},
{
  "ques": "Who was the last Governor-General of independent India?<br><br>",
  "quesType": "mcq",
  "op1": "C. Rajagopalachari",
  "op2": "Lord Mountbatten",
  "op3": "Lord Linlithgow",
  "op4": "Lord Wellesley",
  "ans": "C. Rajagopalachari"
},
{
  "ques": "In which year did India get independence?<br><br>",
  "quesType": "mcq",
  "op1": "1945",
  "op2": "1946",
  "op3": "1947",
  "op4": "1948",
  "ans": "1947"
},
{
  "ques": "Who was the first Indian to win Nobel Prize?<br><br>",
  "quesType": "mcq",
  "op1": "C. V. Raman",
  "op2": "Rabindranath Tagore",
  "op3": "Amartya Sen",
  "op4": "Mother Teresa",
  "ans": "Rabindranath Tagore"
},
{
  "ques": "Who was the leader of 1857 revolt in Kanpur?<br><br>",
  "quesType": "mcq",
  "op1": "Rani Laxmi Bai",
  "op2": "Bahadur Shah Zafar",
  "op3": "Tantia Tope",
  "op4": "Nana Sahib",
  "ans": "Nana Sahib"
},
{
  "ques": "Where did the first session of INC take place?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai",
  "op2": "Kolkata",
  "op3": "Delhi",
  "op4": "Pune",
  "ans": "Mumbai"
},
{
  "ques": "Which king adopted Buddhism after the Kalinga war?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta Maurya",
  "op2": "Harsha",
  "op3": "Ashoka",
  "op4": "Bindusara",
  "ans": "Ashoka"
},
{
  "ques": "Who was the first Indian Governor-General of independent India?<br><br>",
  "quesType": "mcq",
  "op1": "C. Rajagopalachari",
  "op2": "Lord Mountbatten",
  "op3": "Rajendra Prasad",
  "op4": "Jawaharlal Nehru",
  "ans": "C. Rajagopalachari"
},
{
  "ques": "Which dynasty built the famous Khajuraho temples?<br><br>",
  "quesType": "mcq",
  "op1": "Maurya",
  "op2": "Gupta",
  "op3": "Chola",
  "op4": "Chandela",
  "ans": "Chandela"
},
{
  "ques": "Who was the Viceroy during Partition of Bengal in 1905?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Curzon",
  "op2": "Lord Canning",
  "op3": "Lord Ripon",
  "op4": "Lord Wellesley",
  "ans": "Lord Curzon"
}
,
{
  "ques": "Who was the first Governor-General of independent India?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Mountbatten",
  "op2": "C. Rajagopalachari",
  "op3": "Warren Hastings",
  "op4": "Lord Wavell",
  "ans": "Lord Mountbatten"
},
{
  "ques": "Who gave the slogan 'Inquilab Zindabad'?<br><br>",
  "quesType": "mcq",
  "op1": "Bhagat Singh",
  "op2": "Subhash Chandra Bose",
  "op3": "Bal Gangadhar Tilak",
  "op4": "Lala Lajpat Rai",
  "ans": "Bhagat Singh"
},
{
  "ques": "Who was called the 'Nightingale of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Indira Gandhi",
  "op2": "Sarojini Naidu",
  "op3": "Mother Teresa",
  "op4": "Annie Besant",
  "ans": "Sarojini Naidu"
},
{
  "ques": "Where was Mahatma Gandhi born?<br><br>",
  "quesType": "mcq",
  "op1": "Porbandar",
  "op2": "Ahmedabad",
  "op3": "Wardha",
  "op4": "Rajkot",
  "ans": "Porbandar"
},
{
  "ques": "Who formed the Forward Bloc?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Bhagat Singh",
  "op3": "Subhash Chandra Bose",
  "op4": "Sardar Patel",
  "ans": "Subhash Chandra Bose"
},
{
  "ques": "Who was the first Indian woman to go to prison in freedom struggle?<br><br>",
  "quesType": "mcq",
  "op1": "Sarojini Naidu",
  "op2": "Aruna Asaf Ali",
  "op3": "Annie Besant",
  "op4": "Kasturba Gandhi",
  "ans": "Annie Besant"
},
{
  "ques": "When did the Non-Cooperation Movement start?<br><br>",
  "quesType": "mcq",
  "op1": "1915",
  "op2": "1919",
  "op3": "1920",
  "op4": "1922",
  "ans": "1920"
},
{
  "ques": "Who was the political guru of Mahatma Gandhi?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Gopal Krishna Gokhale",
  "op3": "Bal Gangadhar Tilak",
  "op4": "Lala Lajpat Rai",
  "ans": "Gopal Krishna Gokhale"
},
{
  "ques": "Who was the first Indian Governor-General of independent India?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Mountbatten",
  "op2": "C. Rajagopalachari",
  "op3": "Sardar Patel",
  "op4": "Jawaharlal Nehru",
  "ans": "C. Rajagopalachari"
},
{
  "ques": "Who gave the slogan 'Jai Jawan Jai Kisan'?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Indira Gandhi",
  "op3": "Lal Bahadur Shastri",
  "op4": "Sardar Patel",
  "ans": "Lal Bahadur Shastri"
},
{
  "ques": "Who founded the Ramakrishna Mission?<br><br>",
  "quesType": "mcq",
  "op1": "Swami Vivekananda",
  "op2": "Dayanand Saraswati",
  "op3": "Raja Ram Mohan Roy",
  "op4": "Rabindranath Tagore",
  "ans": "Swami Vivekananda"
},
{
  "ques": "Who introduced the Subsidiary Alliance system in India?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Wellesley",
  "op2": "Lord Cornwallis",
  "op3": "Lord Dalhousie",
  "op4": "Warren Hastings",
  "ans": "Lord Wellesley"
},
{
  "ques": "Which Indian leader is known as 'Punjab Kesari'?<br><br>",
  "quesType": "mcq",
  "op1": "Bal Gangadhar Tilak",
  "op2": "Gopal Krishna Gokhale",
  "op3": "Lala Lajpat Rai",
  "op4": "Bhagat Singh",
  "ans": "Lala Lajpat Rai"
},
{
  "ques": "Who was the last Viceroy of British India?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Wavell",
  "op2": "Lord Linlithgow",
  "op3": "Lord Mountbatten",
  "op4": "Lord Irwin",
  "ans": "Lord Mountbatten"
},
{
  "ques": "Who started the Home Rule League Movement in India?<br><br>",
  "quesType": "mcq",
  "op1": "Mahatma Gandhi",
  "op2": "Jawaharlal Nehru",
  "op3": "Annie Besant",
  "op4": "Sardar Patel",
  "ans": "Annie Besant"
},
{
  "ques": "Who is known as the 'Grand Old Man of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Bal Gangadhar Tilak",
  "op2": "Dadabhai Naoroji",
  "op3": "Gopal Krishna Gokhale",
  "op4": "Lala Lajpat Rai",
  "ans": "Dadabhai Naoroji"
},
{
  "ques": "Who was the first Indian to join the ICS?<br><br>",
  "quesType": "mcq",
  "op1": "Satyendranath Tagore",
  "op2": "Rabindranath Tagore",
  "op3": "Dadabhai Naoroji",
  "op4": "Gopal Krishna Gokhale",
  "ans": "Satyendranath Tagore"
},
{
  "ques": "Who designed the Indian National Flag?<br><br>",
  "quesType": "mcq",
  "op1": "Pingali Venkayya",
  "op2": "Bankim Chandra Chatterjee",
  "op3": "Rabindranath Tagore",
  "op4": "Sarojini Naidu",
  "ans": "Pingali Venkayya"
},
{
  "ques": "Who was known as 'Frontier Gandhi'?<br><br>",
  "quesType": "mcq",
  "op1": "Mahatma Gandhi",
  "op2": "Khan Abdul Ghaffar Khan",
  "op3": "Sardar Patel",
  "op4": "Bhagat Singh",
  "ans": "Khan Abdul Ghaffar Khan"
},
{
  "ques": "Who founded the Theosophical Society in India?<br><br>",
  "quesType": "mcq",
  "op1": "Annie Besant",
  "op2": "Madam Blavatsky",
  "op3": "Raja Ram Mohan Roy",
  "op4": "Swami Vivekananda",
  "ans": "Annie Besant"
},
{
  "ques": "Which movement was started by Vinoba Bhave?<br><br>",
  "quesType": "mcq",
  "op1": "Bhoodan Movement",
  "op2": "Quit India Movement",
  "op3": "Non-Cooperation Movement",
  "op4": "Swadeshi Movement",
  "ans": "Bhoodan Movement"
},
{
  "ques": "Who was the leader of Bardoli Satyagraha?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Sardar Vallabhbhai Patel",
  "op3": "Mahatma Gandhi",
  "op4": "Bal Gangadhar Tilak",
  "ans": "Sardar Vallabhbhai Patel"
},
{
  "ques": "Who is called the 'Liberator of Indian Press'?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Dalhousie",
  "op2": "Lord Ripon",
  "op3": "Lord Curzon",
  "op4": "Lord Wellesley",
  "ans": "Lord Ripon"
},
{
  "ques": "Who was the founder of the Satya Shodhak Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Jyotirao Phule",
  "op2": "Dayanand Saraswati",
  "op3": "Swami Vivekananda",
  "op4": "Raja Ram Mohan Roy",
  "ans": "Jyotirao Phule"
},
{
  "ques": "Who introduced Permanent Settlement in Bengal?<br><br>",
  "quesType": "mcq",
  "op1": "Warren Hastings",
  "op2": "Lord Cornwallis",
  "op3": "Lord Curzon",
  "op4": "Lord Dalhousie",
  "ans": "Lord Cornwallis"
},
{
  "ques": "Who was the first woman Governor of an Indian state?<br><br>",
  "quesType": "mcq",
  "op1": "Sarojini Naidu",
  "op2": "Indira Gandhi",
  "op3": "Pratibha Patil",
  "op4": "Annie Besant",
  "ans": "Sarojini Naidu"
},
{
  "ques": "Who founded the Aligarh Movement?<br><br>",
  "quesType": "mcq",
  "op1": "Sir Syed Ahmed Khan",
  "op2": "Maulana Abul Kalam Azad",
  "op3": "Lala Lajpat Rai",
  "op4": "Sardar Patel",
  "ans": "Sir Syed Ahmed Khan"
},
{
  "ques": "Who was the founder of Banaras Hindu University?<br><br>",
  "quesType": "mcq",
  "op1": "Madan Mohan Malaviya",
  "op2": "Rabindranath Tagore",
  "op3": "Swami Vivekananda",
  "op4": "Dayanand Saraswati",
  "ans": "Madan Mohan Malaviya"
},
{
  "ques": "Which Mughal emperor was known as Akbar the Great?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Akbar",
  "op3": "Aurangzeb",
  "op4": "Shah Jahan",
  "ans": "Akbar"
},
{
  "ques": "Who gave the slogan 'Garibi Hatao'?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Indira Gandhi",
  "op3": "Lal Bahadur Shastri",
  "op4": "Rajiv Gandhi",
  "ans": "Indira Gandhi"
}
,
{
  "ques": "Who was the first Sultan of Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Iltutmish",
  "op2": "Qutb-ud-din Aibak",
  "op3": "Razia Sultana",
  "op4": "Balban",
  "ans": "Qutb-ud-din Aibak"
},
{
  "ques": "Who was known as the 'Napoleon of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Samudragupta",
  "op2": "Chandragupta Maurya",
  "op3": "Bindusara",
  "op4": "Skandagupta",
  "ans": "Samudragupta"
},
{
  "ques": "Which Indian king defeated Alexander's general Seleucus?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta Maurya",
  "op2": "Ashoka",
  "op3": "Bindusara",
  "op4": "Harsha",
  "ans": "Chandragupta Maurya"
},
{
  "ques": "The Harappan site Lothal is in which present-day state?<br><br>",
  "quesType": "mcq",
  "op1": "Rajasthan",
  "op2": "Punjab",
  "op3": "Gujarat",
  "op4": "Haryana",
  "ans": "Gujarat"
},
{
  "ques": "Which Mauryan ruler sent missionaries to Sri Lanka?<br><br>",
  "quesType": "mcq",
  "op1": "Bindusara",
  "op2": "Ashoka",
  "op3": "Chandragupta Maurya",
  "op4": "Dasaratha Maurya",
  "ans": "Ashoka"
},
{
  "ques": "Who was the first woman ruler of Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Nur Jahan",
  "op2": "Razia Sultana",
  "op3": "Rani Durgavati",
  "op4": "Chand Bibi",
  "ans": "Razia Sultana"
},
{
  "ques": "Who wrote the Arthashastra?<br><br>",
  "quesType": "mcq",
  "op1": "Kalidasa",
  "op2": "Panini",
  "op3": "Chanakya",
  "op4": "Vishnu Sharma",
  "ans": "Chanakya"
},
{
  "ques": "Who founded the Vijayanagara Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Harihara and Bukka",
  "op2": "Krishnadevaraya",
  "op3": "Deva Raya",
  "op4": "Saluva Narasimha",
  "ans": "Harihara and Bukka"
},
{
  "ques": "Where did Buddha attain enlightenment?<br><br>",
  "quesType": "mcq",
  "op1": "Lumbini",
  "op2": "Sarnath",
  "op3": "Kushinagar",
  "op4": "Bodh Gaya",
  "ans": "Bodh Gaya"
},
{
  "ques": "The Battle of Talikota led to the fall of which empire?<br><br>",
  "quesType": "mcq",
  "op1": "Mughal",
  "op2": "Delhi Sultanate",
  "op3": "Vijayanagara",
  "op4": "Maratha",
  "ans": "Vijayanagara"
},
{
  "ques": "Who was the last ruler of the Maurya dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Bindusara",
  "op3": "Brihadratha",
  "op4": "Dasharatha",
  "ans": "Brihadratha"
},
{
  "ques": "Which ruler fought the Battle of Haldighati?<br><br>",
  "quesType": "mcq",
  "op1": "Maharana Pratap",
  "op2": "Akbar",
  "op3": "Rana Sanga",
  "op4": "Sher Shah Suri",
  "ans": "Maharana Pratap"
},
{
  "ques": "Who composed the Allahabad Pillar Inscription?<br><br>",
  "quesType": "mcq",
  "op1": "Kalidasa",
  "op2": "Banabhatta",
  "op3": "Harishena",
  "op4": "Vishakhadatta",
  "ans": "Harishena"
},
{
  "ques": "Who built the Qutub Minar?<br><br>",
  "quesType": "mcq",
  "op1": "Qutb-ud-din Aibak",
  "op2": "Iltutmish",
  "op3": "Balban",
  "op4": "Alauddin Khilji",
  "ans": "Qutb-ud-din Aibak"
},
{
  "ques": "Who is known as the 'Father of Indian Renaissance'?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Dadabhai Naoroji",
  "op3": "Swami Vivekananda",
  "op4": "Mahatma Gandhi",
  "ans": "Raja Ram Mohan Roy"
},
{
  "ques": "Where is the Khajuraho Temple situated?<br><br>",
  "quesType": "mcq",
  "op1": "Rajasthan",
  "op2": "Madhya Pradesh",
  "op3": "Uttar Pradesh",
  "op4": "Bihar",
  "ans": "Madhya Pradesh"
},
{
  "ques": "Which Gupta ruler is known for performing Ashvamedha Yajna?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta I",
  "op2": "Samudragupta",
  "op3": "Chandragupta II",
  "op4": "Skandagupta",
  "ans": "Samudragupta"
},
{
  "ques": "Who discovered the Indus Valley Civilization?<br><br>",
  "quesType": "mcq",
  "op1": "John Marshall",
  "op2": "Alexander Cunningham",
  "op3": "Dayaram Sahni",
  "op4": "Mortimer Wheeler",
  "ans": "Dayaram Sahni"
},
{
  "ques": "Who was the founder of the Chola dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Karikala Chola",
  "op2": "Rajaraja Chola I",
  "op3": "Rajendra Chola I",
  "op4": "Vijayalaya Chola",
  "ans": "Vijayalaya Chola"
},
{
  "ques": "Which emperor called himself 'Jagat Guru'?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Aurangzeb",
  "op3": "Harsha",
  "op4": "Krishnadevaraya",
  "ans": "Krishnadevaraya"
},
{
  "ques": "Who founded the Bahmani Kingdom?<br><br>",
  "quesType": "mcq",
  "op1": "Alauddin Bahman Shah",
  "op2": "Muhammad Shah",
  "op3": "Firoz Shah Bahmani",
  "op4": "Ahmad Shah Wali",
  "ans": "Alauddin Bahman Shah"
},
{
  "ques": "The famous Bibi Ka Maqbara is in which city?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Aurangabad",
  "op3": "Hyderabad",
  "op4": "Agra",
  "ans": "Aurangabad"
},
{
  "ques": "Where did Mahavira attain Nirvana?<br><br>",
  "quesType": "mcq",
  "op1": "Rajgir",
  "op2": "Vaishali",
  "op3": "Pawapuri",
  "op4": "Kushinagar",
  "ans": "Pawapuri"
},
{
  "ques": "Who founded the Sayyid dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Khizr Khan",
  "op2": "Mubarak Shah",
  "op3": "Muhammad Shah",
  "op4": "Alauddin Alam Shah",
  "ans": "Khizr Khan"
},
{
  "ques": "Which Mughal ruler banned music?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Jahangir",
  "op3": "Shah Jahan",
  "op4": "Aurangzeb",
  "ans": "Aurangzeb"
},
{
  "ques": "Which was the first capital of the Mughals in India?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Agra",
  "op3": "Fatehpur Sikri",
  "op4": "Lahore",
  "ans": "Agra"
},
{
  "ques": "Who was the last independent ruler of the Punjab?<br><br>",
  "quesType": "mcq",
  "op1": "Guru Gobind Singh",
  "op2": "Ranjit Singh",
  "op3": "Duleep Singh",
  "op4": "Sher Singh",
  "ans": "Ranjit Singh"
},
{
  "ques": "Where is the famous Fort of Golkonda located?<br><br>",
  "quesType": "mcq",
  "op1": "Karnataka",
  "op2": "Tamil Nadu",
  "op3": "Telangana",
  "op4": "Madhya Pradesh",
  "ans": "Telangana"
},
{
  "ques": "Who led the Santhal Rebellion?<br><br>",
  "quesType": "mcq",
  "op1": "Sidhu and Kanhu",
  "op2": "Birsa Munda",
  "op3": "Kunwar Singh",
  "op4": "Mangal Pandey",
  "ans": "Sidhu and Kanhu"
},
{
  "ques": "Who was the author of Rajatarangini?<br><br>",
  "quesType": "mcq",
  "op1": "Kalhana",
  "op2": "Kalidasa",
  "op3": "Bana Bhatta",
  "op4": "Vishakhadatta",
  "ans": "Kalhana"
}
,
{
  "ques": "Which freedom fighter is known as 'Netaji'?<br><br>",
  "quesType": "mcq",
  "op1": "Bhagat Singh",
  "op2": "Lala Lajpat Rai",
  "op3": "Subhas Chandra Bose",
  "op4": "Chandra Shekhar Azad",
  "ans": "Subhas Chandra Bose"
},
{
  "ques": "Who was the first Indian woman to become Prime Minister?<br><br>",
  "quesType": "mcq",
  "op1": "Vijaya Lakshmi Pandit",
  "op2": "Sarojini Naidu",
  "op3": "Indira Gandhi",
  "op4": "Pratibha Patil",
  "ans": "Indira Gandhi"
},
{
  "ques": "Who was known as 'Frontier Gandhi'?<br><br>",
  "quesType": "mcq",
  "op1": "Khan Abdul Ghaffar Khan",
  "op2": "Ashfaqulla Khan",
  "op3": "Maulana Azad",
  "op4": "Syed Ahmed Khan",
  "ans": "Khan Abdul Ghaffar Khan"
},
{
  "ques": "Who was the founder of Arya Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Dayanand Saraswati",
  "op2": "Raja Ram Mohan Roy",
  "op3": "Swami Vivekananda",
  "op4": "Ramkrishna Paramhansa",
  "ans": "Dayanand Saraswati"
},
{
  "ques": "In which year did the Jallianwala Bagh massacre take place?<br><br>",
  "quesType": "mcq",
  "op1": "1917",
  "op2": "1919",
  "op3": "1921",
  "op4": "1925",
  "ans": "1919"
},
{
  "ques": "Who introduced the Permanent Settlement in India?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Cornwallis",
  "op2": "Lord Curzon",
  "op3": "Lord Dalhousie",
  "op4": "Lord Ripon",
  "ans": "Lord Cornwallis"
},
{
  "ques": "Which Indian freedom fighter formed the Azad Hind Fauj?<br><br>",
  "quesType": "mcq",
  "op1": "Chandra Shekhar Azad",
  "op2": "Bhagat Singh",
  "op3": "Subhas Chandra Bose",
  "op4": "Rajguru",
  "ans": "Subhas Chandra Bose"
},
{
  "ques": "Who was the first Indian to travel to space?<br><br>",
  "quesType": "mcq",
  "op1": "Kalpana Chawla",
  "op2": "Sunita Williams",
  "op3": "Rakesh Sharma",
  "op4": "Vikram Sarabhai",
  "ans": "Rakesh Sharma"
},
{
  "ques": "Where was Mahatma Gandhi born?<br><br>",
  "quesType": "mcq",
  "op1": "Porbandar",
  "op2": "Rajkot",
  "op3": "Sabarmati",
  "op4": "Ahmedabad",
  "ans": "Porbandar"
},
{
  "ques": "Which leader is known for his role in the Salt March?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Subhas Chandra Bose",
  "op3": "Mahatma Gandhi",
  "op4": "Sardar Patel",
  "ans": "Mahatma Gandhi"
},
{
  "ques": "Which Mughal emperor ruled the longest?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Aurangzeb",
  "op3": "Shah Jahan",
  "op4": "Babur",
  "ans": "Aurangzeb"
},
{
  "ques": "Who was the founder of the Brahmo Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Swami Vivekananda",
  "op2": "Ram Mohan Roy",
  "op3": "Dayanand Saraswati",
  "op4": "Ishwar Chandra Vidyasagar",
  "ans": "Ram Mohan Roy"
},
{
  "ques": "Who was the first Indian woman to win the Nobel Prize?<br><br>",
  "quesType": "mcq",
  "op1": "Kalpana Chawla",
  "op2": "Indira Gandhi",
  "op3": "Mother Teresa",
  "op4": "Sarojini Naidu",
  "ans": "Mother Teresa"
},
{
  "ques": "Who gave the slogan 'Inquilab Zindabad'?<br><br>",
  "quesType": "mcq",
  "op1": "Bhagat Singh",
  "op2": "Subhas Chandra Bose",
  "op3": "Chandra Shekhar Azad",
  "op4": "Sukhdev",
  "ans": "Bhagat Singh"
},
{
  "ques": "Who wrote the National Anthem of India?<br><br>",
  "quesType": "mcq",
  "op1": "Bankim Chandra Chatterjee",
  "op2": "Rabindranath Tagore",
  "op3": "Subramania Bharati",
  "op4": "Sarojini Naidu",
  "ans": "Rabindranath Tagore"
},
{
  "ques": "When was the Quit India Movement launched?<br><br>",
  "quesType": "mcq",
  "op1": "1940",
  "op2": "1942",
  "op3": "1945",
  "op4": "1947",
  "ans": "1942"
},
{
  "ques": "Who led the revolt of 1857 in Jhansi?<br><br>",
  "quesType": "mcq",
  "op1": "Begum Hazrat Mahal",
  "op2": "Nana Sahib",
  "op3": "Rani Laxmi Bai",
  "op4": "Bahadur Shah Zafar",
  "ans": "Rani Laxmi Bai"
},
{
  "ques": "Who was the first Mughal emperor?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Babur",
  "op3": "Aurangzeb",
  "op4": "Humayun",
  "ans": "Babur"
},
{
  "ques": "Who was called the Nightingale of India?<br><br>",
  "quesType": "mcq",
  "op1": "Indira Gandhi",
  "op2": "Sarojini Naidu",
  "op3": "Annie Besant",
  "op4": "Mother Teresa",
  "ans": "Sarojini Naidu"
},
{
  "ques": "Which king is famous for his rock edicts?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta Maurya",
  "op2": "Ashoka",
  "op3": "Harsha",
  "op4": "Bindusara",
  "ans": "Ashoka"
},
{
  "ques": "Who is known as the 'Grand Old Man of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Gopal Krishna Gokhale",
  "op3": "Lala Lajpat Rai",
  "op4": "Bal Gangadhar Tilak",
  "ans": "Dadabhai Naoroji"
},
{
  "ques": "Which leader is associated with the Swadeshi Movement?<br><br>",
  "quesType": "mcq",
  "op1": "Subhas Chandra Bose",
  "op2": "Gopal Krishna Gokhale",
  "op3": "Bal Gangadhar Tilak",
  "op4": "Dadabhai Naoroji",
  "ans": "Bal Gangadhar Tilak"
},
{
  "ques": "Where was the capital of the Maurya Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Pataliputra",
  "op3": "Kannauj",
  "op4": "Madurai",
  "ans": "Pataliputra"
},
{
  "ques": "Which dynasty built the Sun Temple at Konark?<br><br>",
  "quesType": "mcq",
  "op1": "Maurya",
  "op2": "Chola",
  "op3": "Ganga",
  "op4": "Gupta",
  "ans": "Ganga"
},
{
  "ques": "Who was the founder of the Gupta dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta I",
  "op2": "Samudragupta",
  "op3": "Chandragupta II",
  "op4": "Skandagupta",
  "ans": "Chandragupta I"
},
{
  "ques": "Which battle laid the foundation of Mughal rule?<br><br>",
  "quesType": "mcq",
  "op1": "Battle of Panipat (1526)",
  "op2": "Battle of Plassey",
  "op3": "Battle of Buxar",
  "op4": "Battle of Haldighati",
  "ans": "Battle of Panipat (1526)"
},
{
  "ques": "Who was the last ruler of the Maurya dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Bindusara",
  "op2": "Ashoka",
  "op3": "Brihadratha",
  "op4": "Chandragupta Maurya",
  "ans": "Brihadratha"
},
{
  "ques": "Who led the Revolt of 1857 in Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Bahadur Shah Zafar",
  "op2": "Rani Laxmi Bai",
  "op3": "Tantia Tope",
  "op4": "Nana Sahib",
  "ans": "Bahadur Shah Zafar"
},
{
  "ques": "Which is the oldest Veda?<br><br>",
  "quesType": "mcq",
  "op1": "Rigveda",
  "op2": "Samaveda",
  "op3": "Yajurveda",
  "op4": "Atharvaveda",
  "ans": "Rigveda"
}


]

let codinghistory2Arr=[
  {
  "ques": "Who was the founder of the Chola Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Rajaraja Chola I",
  "op2": "Rajendra Chola I",
  "op3": "Vijayalaya Chola",
  "op4": "Kulottunga Chola I",
  "ans": "Vijayalaya Chola"
},
{
  "ques": "Which battle marked the beginning of Mughal rule in India?<br><br>",
  "quesType": "mcq",
  "op1": "Battle of Khanwa",
  "op2": "Battle of Panipat (1526)",
  "op3": "Battle of Talikota",
  "op4": "Battle of Buxar",
  "ans": "Battle of Panipat (1526)"
},
{
  "ques": "Who was the ruler of Mysore during the Anglo-Mysore Wars?<br><br>",
  "quesType": "mcq",
  "op1": "Haider Ali",
  "op2": "Tipu Sultan",
  "op3": "Krishnadevaraya",
  "op4": "Rani Chennamma",
  "ans": "Tipu Sultan"
},
{
  "ques": "Who was known as 'Lokmanya'?<br><br>",
  "quesType": "mcq",
  "op1": "Bal Gangadhar Tilak",
  "op2": "Dadabhai Naoroji",
  "op3": "Gopal Krishna Gokhale",
  "op4": "Lala Lajpat Rai",
  "ans": "Bal Gangadhar Tilak"
},
{
  "ques": "Who was the first Indian woman to become President of the Indian National Congress?<br><br>",
  "quesType": "mcq",
  "op1": "Sarojini Naidu",
  "op2": "Annie Besant",
  "op3": "Indira Gandhi",
  "op4": "Vijaya Lakshmi Pandit",
  "ans": "Annie Besant"
},
{
  "ques": "Where was the first session of the Indian National Congress held?<br><br>",
  "quesType": "mcq",
  "op1": "Bombay",
  "op2": "Calcutta",
  "op3": "Delhi",
  "op4": "Pune",
  "ans": "Bombay"
},
{
  "ques": "Who led the Salt Satyagraha from Tamil Nadu?<br><br>",
  "quesType": "mcq",
  "op1": "Rajaji (C. Rajagopalachari)",
  "op2": "Subramania Bharati",
  "op3": "Periyar E.V. Ramasamy",
  "op4": "K. Kamaraj",
  "ans": "Rajaji (C. Rajagopalachari)"
},
{
  "ques": "Who established the Paika Rebellion against the British?<br><br>",
  "quesType": "mcq",
  "op1": "Birsa Munda",
  "op2": "Jayee Rajguru",
  "op3": "Buxi Jagabandhu",
  "op4": "Kunwar Singh",
  "ans": "Buxi Jagabandhu"
},
{
  "ques": "Who was the Viceroy of India during the 1857 Revolt?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Dalhousie",
  "op2": "Lord Canning",
  "op3": "Lord Curzon",
  "op4": "Lord Ripon",
  "ans": "Lord Canning"
},
{
  "ques": "Who was the first Indian woman to preside over the UN General Assembly?<br><br>",
  "quesType": "mcq",
  "op1": "Sarojini Naidu",
  "op2": "Indira Gandhi",
  "op3": "Vijaya Lakshmi Pandit",
  "op4": "Pratibha Patil",
  "ans": "Vijaya Lakshmi Pandit"
},
{
  "ques": "Who abolished Sati in India?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Lord Bentinck",
  "op3": "Lord Ripon",
  "op4": "Dayanand Saraswati",
  "ans": "Lord Bentinck"
},
{
  "ques": "Who was the commander of Maratha forces in the Third Battle of Panipat?<br><br>",
  "quesType": "mcq",
  "op1": "Baji Rao I",
  "op2": "Sadashivrao Bhau",
  "op3": "Balaji Vishwanath",
  "op4": "Mahadji Shinde",
  "ans": "Sadashivrao Bhau"
},
{
  "ques": "Who was the editor of the newspaper 'Kesari'?<br><br>",
  "quesType": "mcq",
  "op1": "Mahatma Gandhi",
  "op2": "Bal Gangadhar Tilak",
  "op3": "Gopal Krishna Gokhale",
  "op4": "Lala Lajpat Rai",
  "ans": "Bal Gangadhar Tilak"
},
{
  "ques": "Who established the Vedanta College in Calcutta?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Swami Vivekananda",
  "op3": "Dayanand Saraswati",
  "op4": "Ishwar Chandra Vidyasagar",
  "ans": "Raja Ram Mohan Roy"
},
{
  "ques": "Which king started the Kalinga War?<br><br>",
  "quesType": "mcq",
  "op1": "Bindusara",
  "op2": "Chandragupta Maurya",
  "op3": "Ashoka",
  "op4": "Harsha",
  "ans": "Ashoka"
},
{
  "ques": "Who established the Banaras Hindu University?<br><br>",
  "quesType": "mcq",
  "op1": "Madan Mohan Malaviya",
  "op2": "Gopal Krishna Gokhale",
  "op3": "Rabindranath Tagore",
  "op4": "Dadabhai Naoroji",
  "ans": "Madan Mohan Malaviya"
},
{
  "ques": "Who founded the Indian Association in 1876?<br><br>",
  "quesType": "mcq",
  "op1": "Surendranath Banerjee",
  "op2": "Dadabhai Naoroji",
  "op3": "A. O. Hume",
  "op4": "Mahatma Gandhi",
  "ans": "Surendranath Banerjee"
},
{
  "ques": "Which battle ended the Maratha Confederacy?<br><br>",
  "quesType": "mcq",
  "op1": "Battle of Plassey",
  "op2": "Third Battle of Panipat",
  "op3": "Battle of Buxar",
  "op4": "Third Anglo-Maratha War",
  "ans": "Third Anglo-Maratha War"
},
{
  "ques": "Who led the Santhal Rebellion?<br><br>",
  "quesType": "mcq",
  "op1": "Sidhu and Kanhu Murmu",
  "op2": "Birsa Munda",
  "op3": "Kunwar Singh",
  "op4": "Tantia Tope",
  "ans": "Sidhu and Kanhu Murmu"
},
{
  "ques": "Who started the newspaper 'Young India'?<br><br>",
  "quesType": "mcq",
  "op1": "Gopal Krishna Gokhale",
  "op2": "Subhash Chandra Bose",
  "op3": "Mahatma Gandhi",
  "op4": "Bal Gangadhar Tilak",
  "ans": "Mahatma Gandhi"
},
{
  "ques": "Who gave the title 'Mahatma' to Gandhi?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Rabindranath Tagore",
  "op3": "Gopal Krishna Gokhale",
  "op4": "Subhash Chandra Bose",
  "ans": "Rabindranath Tagore"
},
{
  "ques": "Where did the Indigo Revolt start?<br><br>",
  "quesType": "mcq",
  "op1": "Bihar",
  "op2": "Bengal",
  "op3": "Maharashtra",
  "op4": "Punjab",
  "ans": "Bengal"
},
{
  "ques": "Which session of the INC passed the resolution for 'Poorna Swaraj'?<br><br>",
  "quesType": "mcq",
  "op1": "Lahore Session 1929",
  "op2": "Calcutta Session 1906",
  "op3": "Surat Session 1907",
  "op4": "Bombay Session 1918",
  "ans": "Lahore Session 1929"
},
{
  "ques": "Who composed 'Saare Jahan Se Achha'?<br><br>",
  "quesType": "mcq",
  "op1": "Rabindranath Tagore",
  "op2": "Bankim Chandra Chatterjee",
  "op3": "Allama Iqbal",
  "op4": "Sarojini Naidu",
  "ans": "Allama Iqbal"
},
{
  "ques": "Which Act transferred the power from Company to Crown?<br><br>",
  "quesType": "mcq",
  "op1": "Regulating Act, 1773",
  "op2": "Charter Act, 1833",
  "op3": "Government of India Act, 1858",
  "op4": "Indian Councils Act, 1861",
  "ans": "Government of India Act, 1858"
},
{
  "ques": "Who started the 'Prarthana Samaj'?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Atmaram Pandurang",
  "op3": "Dayanand Saraswati",
  "op4": "Swami Vivekananda",
  "ans": "Atmaram Pandurang"
},
{
  "ques": "Who was the first Indian to qualify ICS examination?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Surendranath Banerjee",
  "op3": "Satyendranath Tagore",
  "op4": "Gopal Krishna Gokhale",
  "ans": "Satyendranath Tagore"
},
{
  "ques": "Who established the 'Servants of Society' organization?<br><br>",
  "quesType": "mcq",
  "op1": "Annie Besant",
  "op2": "Gopal Krishna Gokhale",
  "op3": "Bal Gangadhar Tilak",
  "op4": "Dadabhai Naoroji",
  "ans": "Gopal Krishna Gokhale"
},
{
  "ques": "Who signed the Treaty of Salbai?<br><br>",
  "quesType": "mcq",
  "op1": "Marathas and British",
  "op2": "Sikhs and Mughals",
  "op3": "Mughals and British",
  "op4": "Hyderabad Nizam and British",
  "ans": "Marathas and British"
},
{
  "ques": "Which leader founded the 'Self Respect Movement'?<br><br>",
  "quesType": "mcq",
  "op1": "Periyar E.V. Ramasamy",
  "op2": "C. Rajagopalachari",
  "op3": "Subramania Bharati",
  "op4": "K. Kamaraj",
  "ans": "Periyar E.V. Ramasamy"
}
,
{
  "ques": "Who composed the famous work 'Ain-i-Akbari'?<br><br>",
  "quesType": "mcq",
  "op1": "Abul Fazl",
  "op2": "Faizi",
  "op3": "Badauni",
  "op4": "Amir Khusrau",
  "ans": "Abul Fazl"
},
{
  "ques": "Which battle marked the beginning of Mughal rule in India?<br><br>",
  "quesType": "mcq",
  "op1": "First Battle of Panipat",
  "op2": "Battle of Khanwa",
  "op3": "Battle of Talikota",
  "op4": "Second Battle of Panipat",
  "ans": "First Battle of Panipat"
},
{
  "ques": "Who was the only Hindu king to sit on the throne of Delhi after the Delhi Sultanate was established?<br><br>",
  "quesType": "mcq",
  "op1": "Prithviraj Chauhan",
  "op2": "Hemu",
  "op3": "Rana Sanga",
  "op4": "Maharana Pratap",
  "ans": "Hemu"
},
{
  "ques": "Where did the Jallianwala Bagh massacre take place?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Lahore",
  "op3": "Amritsar",
  "op4": "Lucknow",
  "ans": "Amritsar"
},
{
  "ques": "Who abolished the Dual Government introduced by Robert Clive?<br><br>",
  "quesType": "mcq",
  "op1": "Warren Hastings",
  "op2": "Cornwallis",
  "op3": "William Bentinck",
  "op4": "Lord Curzon",
  "ans": "Warren Hastings"
},
{
  "ques": "The Treaty of Seringapatam was signed after which Anglo-Mysore war?<br><br>",
  "quesType": "mcq",
  "op1": "First",
  "op2": "Second",
  "op3": "Third",
  "op4": "Fourth",
  "ans": "Third"
},
{
  "ques": "Who introduced the Subsidiary Alliance system?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Cornwallis",
  "op2": "Lord Hastings",
  "op3": "Lord Wellesley",
  "op4": "Robert Clive",
  "ans": "Lord Wellesley"
},
{
  "ques": "Which Mughal emperor transferred the capital from Agra to Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Aurangzeb",
  "op3": "Shah Jahan",
  "op4": "Jahangir",
  "ans": "Shah Jahan"
},
{
  "ques": "Which ruler is associated with the construction of the Grand Trunk Road?<br><br>",
  "quesType": "mcq",
  "op1": "Sher Shah Suri",
  "op2": "Akbar",
  "op3": "Ashoka",
  "op4": "Chandragupta Maurya",
  "ans": "Sher Shah Suri"
},
{
  "ques": "Who led the revolt in 1857 in Kanpur?<br><br>",
  "quesType": "mcq",
  "op1": "Bahadur Shah Zafar",
  "op2": "Rani Lakshmibai",
  "op3": "Nana Sahib",
  "op4": "Kunwar Singh",
  "ans": "Nana Sahib"
},
{
  "ques": "Who was the founder of the Sikh Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Guru Nanak",
  "op2": "Guru Gobind Singh",
  "op3": "Ranjit Singh",
  "op4": "Banda Singh Bahadur",
  "ans": "Ranjit Singh"
},
{
  "ques": "The Battle of Buxar was fought in which year?<br><br>",
  "quesType": "mcq",
  "op1": "1757",
  "op2": "1764",
  "op3": "1772",
  "op4": "1784",
  "ans": "1764"
},
{
  "ques": "Which Maratha ruler signed the Treaty of Salbai?<br><br>",
  "quesType": "mcq",
  "op1": "Balaji Baji Rao",
  "op2": "Madhav Rao I",
  "op3": "Raghunath Rao",
  "op4": "Mahadji Scindia",
  "ans": "Madhav Rao I"
},
{
  "ques": "Who was the Mughal emperor during the Third Battle of Panipat?<br><br>",
  "quesType": "mcq",
  "op1": "Aurangzeb",
  "op2": "Shah Alam II",
  "op3": "Bahadur Shah I",
  "op4": "Farrukhsiyar",
  "ans": "Shah Alam II"
},
{
  "ques": "Where did Chandragupta Maurya spend his last days?<br><br>",
  "quesType": "mcq",
  "op1": "Patliputra",
  "op2": "Takshashila",
  "op3": "Shravanabelagola",
  "op4": "Nalanda",
  "ans": "Shravanabelagola"
},
{
  "ques": "Which Mughal emperor was called 'Zinda Pir'?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Babur",
  "op3": "Aurangzeb",
  "op4": "Jahangir",
  "ans": "Aurangzeb"
},
{
  "ques": "Who was the founder of the Pala dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Gopala",
  "op2": "Dharmapala",
  "op3": "Devapala",
  "op4": "Mahipala",
  "ans": "Gopala"
},
{
  "ques": "Who led the Khilafat Movement?<br><br>",
  "quesType": "mcq",
  "op1": "Maulana Abul Kalam Azad",
  "op2": "Ali Brothers",
  "op3": "Syed Ahmed Khan",
  "op4": "Badruddin Tyabji",
  "ans": "Ali Brothers"
},
{
  "ques": "Which Delhi Sultan introduced the practice of Sijda?<br><br>",
  "quesType": "mcq",
  "op1": "Iltutmish",
  "op2": "Alauddin Khilji",
  "op3": "Balban",
  "op4": "Muhammad bin Tughlaq",
  "ans": "Balban"
},
{
  "ques": "Who defeated Humayun and captured Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Sher Shah Suri",
  "op3": "Bahadur Shah",
  "op4": "Rana Sanga",
  "ans": "Sher Shah Suri"
},
{
  "ques": "Who established the Forward Bloc?<br><br>",
  "quesType": "mcq",
  "op1": "Subhas Chandra Bose",
  "op2": "Bhagat Singh",
  "op3": "Lala Lajpat Rai",
  "op4": "Jawaharlal Nehru",
  "ans": "Subhas Chandra Bose"
},
{
  "ques": "Who presided over the Lahore Session of 1929 where Purna Swaraj was declared?<br><br>",
  "quesType": "mcq",
  "op1": "Motilal Nehru",
  "op2": "Sardar Patel",
  "op3": "Jawaharlal Nehru",
  "op4": "Mahatma Gandhi",
  "ans": "Jawaharlal Nehru"
},
{
  "ques": "Where did the Chauri Chaura incident occur?<br><br>",
  "quesType": "mcq",
  "op1": "Bihar",
  "op2": "Uttar Pradesh",
  "op3": "Maharashtra",
  "op4": "Punjab",
  "ans": "Uttar Pradesh"
},
{
  "ques": "Who was the leader of the Extremists in Indian National Congress?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Gopal Krishna Gokhale",
  "op3": "Bal Gangadhar Tilak",
  "op4": "Feroz Shah Mehta",
  "ans": "Bal Gangadhar Tilak"
},
{
  "ques": "Who was the first Governor-General of India?<br><br>",
  "quesType": "mcq",
  "op1": "Robert Clive",
  "op2": "Warren Hastings",
  "op3": "Lord Dalhousie",
  "op4": "Lord Curzon",
  "ans": "Warren Hastings"
},
{
  "ques": "Which Act is known as the Magna Carta of English Education in India?<br><br>",
  "quesType": "mcq",
  "op1": "Regulating Act",
  "op2": "Charter Act of 1813",
  "op3": "Pitts India Act",
  "op4": "Act of 1858",
  "ans": "Charter Act of 1813"
},
{
  "ques": "Who was the first Governor-General of Independent India?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Mountbatten",
  "op2": "C Rajagopalachari",
  "op3": "Jawaharlal Nehru",
  "op4": "Sardar Patel",
  "ans": "Lord Mountbatten"
},
{
  "ques": "Who was the founder of Arya Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Swami Vivekananda",
  "op3": "Swami Dayananda Saraswati",
  "op4": "Syed Ahmed Khan",
  "ans": "Swami Dayananda Saraswati"
},
{
  "ques": "Which rebellion is also known as the Sepoy Mutiny?<br><br>",
  "quesType": "mcq",
  "op1": "Santhal Rebellion",
  "op2": "Indigo Revolt",
  "op3": "1857 Revolt",
  "op4": "Munda Rebellion",
  "ans": "1857 Revolt"
}
,
{
  "ques": "Which treaty ended the First Anglo-Maratha War?<br><br>",
  "quesType": "mcq",
  "op1": "Treaty of Purandar",
  "op2": "Treaty of Salbai",
  "op3": "Treaty of Seringapatam",
  "op4": "Treaty of Bassein",
  "ans": "Treaty of Salbai"
},
{
  "ques": "Who was the first Governor-General of independent India?<br><br>",
  "quesType": "mcq",
  "op1": "C. Rajagopalachari",
  "op2": "Lord Mountbatten",
  "op3": "Lord Wavell",
  "op4": "Lord Linlithgow",
  "ans": "Lord Mountbatten"
},
{
  "ques": "Who wrote 'Hind Swaraj'?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Mahatma Gandhi",
  "op3": "Bal Gangadhar Tilak",
  "op4": "Dadabhai Naoroji",
  "ans": "Mahatma Gandhi"
},
{
  "ques": "Who established the Satya Shodhak Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Jyotirao Phule",
  "op2": "Raja Ram Mohan Roy",
  "op3": "Swami Vivekananda",
  "op4": "Ishwar Chandra Vidyasagar",
  "ans": "Jyotirao Phule"
},
{
  "ques": "The Simon Commission was boycotted because it had no ______.<br><br>",
  "quesType": "mcq",
  "op1": "Muslim representation",
  "op2": "Indian members",
  "op3": "Women members",
  "op4": "Dalit representation",
  "ans": "Indian members"
},
{
  "ques": "Who founded the Banaras Hindu University?<br><br>",
  "quesType": "mcq",
  "op1": "Rabindranath Tagore",
  "op2": "Pandit Madan Mohan Malaviya",
  "op3": "Annie Besant",
  "op4": "Bal Gangadhar Tilak",
  "ans": "Pandit Madan Mohan Malaviya"
},
{
  "ques": "The slogan 'Swaraj is my birthright' was given by?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Lala Lajpat Rai",
  "op3": "Bal Gangadhar Tilak",
  "op4": "Bipin Chandra Pal",
  "ans": "Bal Gangadhar Tilak"
},
{
  "ques": "Who was the Viceroy during the Quit India Movement?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Linlithgow",
  "op2": "Lord Wavell",
  "op3": "Lord Mountbatten",
  "op4": "Lord Irwin",
  "ans": "Lord Linlithgow"
},
{
  "ques": "Which British Governor-General is associated with the Doctrine of Lapse?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Dalhousie",
  "op2": "Lord Curzon",
  "op3": "Lord Canning",
  "op4": "Lord Ripon",
  "ans": "Lord Dalhousie"
},
{
  "ques": "The Battle of Buxar was fought in?<br><br>",
  "quesType": "mcq",
  "op1": "1757",
  "op2": "1764",
  "op3": "1799",
  "op4": "1857",
  "ans": "1764"
},
{
  "ques": "Who was the first President of the Indian National Congress?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "W.C. Bonnerjee",
  "op3": "S.N. Banerjee",
  "op4": "A.O. Hume",
  "ans": "W.C. Bonnerjee"
},
{
  "ques": "Where did Mahatma Gandhi first use the method of hunger strike?<br><br>",
  "quesType": "mcq",
  "op1": "Champaran",
  "op2": "Ahmedabad",
  "op3": "Kheda",
  "op4": "Dandi",
  "ans": "Ahmedabad"
},
{
  "ques": "The Poona Pact was signed between Gandhi and whom?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "B.R. Ambedkar",
  "op3": "Subhas Chandra Bose",
  "op4": "Sardar Patel",
  "ans": "B.R. Ambedkar"
},
{
  "ques": "The First Round Table Conference was held in which year?<br><br>",
  "quesType": "mcq",
  "op1": "1927",
  "op2": "1930",
  "op3": "1932",
  "op4": "1935",
  "ans": "1930"
},
{
  "ques": "Who founded the Aligarh Muslim University?<br><br>",
  "quesType": "mcq",
  "op1": "Sir Syed Ahmed Khan",
  "op2": "Hakim Ajmal Khan",
  "op3": "Maulana Azad",
  "op4": "Abul Kalam Azad",
  "ans": "Sir Syed Ahmed Khan"
},
{
  "ques": "Which leader was popularly known as the Lion of Punjab?<br><br>",
  "quesType": "mcq",
  "op1": "Bhagat Singh",
  "op2": "Lala Lajpat Rai",
  "op3": "Sukhdev",
  "op4": "Rajguru",
  "ans": "Lala Lajpat Rai"
},
{
  "ques": "Who was the founder of the Servants of India Society?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Gopal Krishna Gokhale",
  "op3": "Raja Ram Mohan Roy",
  "op4": "Bal Gangadhar Tilak",
  "ans": "Gopal Krishna Gokhale"
},
{
  "ques": "Who was the first woman President of the Indian National Congress?<br><br>",
  "quesType": "mcq",
  "op1": "Annie Besant",
  "op2": "Sarojini Naidu",
  "op3": "Indira Gandhi",
  "op4": "Vijaya Lakshmi Pandit",
  "ans": "Annie Besant"
},
{
  "ques": "Who was the first Indian to be elected to the British Parliament?<br><br>",
  "quesType": "mcq",
  "op1": "Mahatma Gandhi",
  "op2": "Dadabhai Naoroji",
  "op3": "Gopal Krishna Gokhale",
  "op4": "Jawaharlal Nehru",
  "ans": "Dadabhai Naoroji"
},
{
  "ques": "The Khilafat Movement was led by which brothers?<br><br>",
  "quesType": "mcq",
  "op1": "Ali and Babar",
  "op2": "Khan and Azad",
  "op3": "Ali and Shaukat Ali",
  "op4": "Azad and Khan",
  "ans": "Ali and Shaukat Ali"
},
{
  "ques": "Who wrote the book 'Discovery of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Subhas Chandra Bose",
  "op2": "Jawaharlal Nehru",
  "op3": "Mahatma Gandhi",
  "op4": "Rajendra Prasad",
  "ans": "Jawaharlal Nehru"
},
{
  "ques": "Who was the first Indian ICS officer?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Satyendranath Tagore",
  "op3": "C. Rajagopalachari",
  "op4": "Gopal Krishna Gokhale",
  "ans": "Satyendranath Tagore"
},
{
  "ques": "Who was the first Sultan of Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Qutb-ud-din Aibak",
  "op2": "Iltutmish",
  "op3": "Balban",
  "op4": "Alauddin Khilji",
  "ans": "Qutb-ud-din Aibak"
},
{
  "ques": "Who was the founder of the Chola dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Rajaraja Chola I",
  "op2": "Karikala Chola",
  "op3": "Rajendra Chola I",
  "op4": "Kulottunga Chola I",
  "ans": "Karikala Chola"
},
{
  "ques": "Which Mughal ruler built the Peacock Throne?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Aurangzeb",
  "op3": "Shah Jahan",
  "op4": "Babur",
  "ans": "Shah Jahan"
},
{
  "ques": "Who translated the Bhagavad Gita into English?<br><br>",
  "quesType": "mcq",
  "op1": "Max Muller",
  "op2": "Charles Wilkins",
  "op3": "James Mill",
  "op4": "William Jones",
  "ans": "Charles Wilkins"
},
{
  "ques": "Who was the founder of the Sikh Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Guru Nanak",
  "op2": "Guru Gobind Singh",
  "op3": "Ranjit Singh",
  "op4": "Banda Singh Bahadur",
  "ans": "Ranjit Singh"
},
{
  "ques": "Which Maratha ruler fought the Third Battle of Panipat?<br><br>",
  "quesType": "mcq",
  "op1": "Shivaji",
  "op2": "Baji Rao I",
  "op3": "Balaji Baji Rao",
  "op4": "Raghunath Rao",
  "ans": "Balaji Baji Rao"
},
{
  "ques": "Who established the Vijayanagara Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Harihara I and Bukka Raya I",
  "op2": "Krishnadevaraya",
  "op3": "Deva Raya",
  "op4": "Achyuta Raya",
  "ans": "Harihara I and Bukka Raya I"
}
,
{
  "ques": "Who was the founder of the Sikh Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Guru Gobind Singh",
  "op2": "Ranjit Singh",
  "op3": "Guru Nanak",
  "op4": "Banda Singh Bahadur",
  "ans": "Ranjit Singh"
},
{
  "ques": "Which Mughal ruler built the Peacock Throne?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Shah Jahan",
  "op3": "Jahangir",
  "op4": "Aurangzeb",
  "ans": "Shah Jahan"
},
{
  "ques": "Who was the first woman ruler of Delhi Sultanate?<br><br>",
  "quesType": "mcq",
  "op1": "Raziyya Sultan",
  "op2": "Nur Jahan",
  "op3": "Jahanara Begum",
  "op4": "Mumtaz Mahal",
  "ans": "Raziyya Sultan"
},
{
  "ques": "Who was the founder of the Rashtrakuta Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Dantidurga",
  "op2": "Amoghavarsha I",
  "op3": "Krishna I",
  "op4": "Govinda III",
  "ans": "Dantidurga"
},
{
  "ques": "Which king is known as the 'Napoleon of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta Maurya",
  "op2": "Ashoka",
  "op3": "Samudragupta",
  "op4": "Harsha",
  "ans": "Samudragupta"
},
{
  "ques": "Who founded the Bahmani Kingdom?<br><br>",
  "quesType": "mcq",
  "op1": "Firuz Shah Bahmani",
  "op2": "Alauddin Bahman Shah",
  "op3": "Sikandar Bahmani",
  "op4": "Mahmud Gawan",
  "ans": "Alauddin Bahman Shah"
},
{
  "ques": "Which battle led to the establishment of British rule in Bengal?<br><br>",
  "quesType": "mcq",
  "op1": "Battle of Buxar",
  "op2": "Battle of Plassey",
  "op3": "Battle of Wandiwash",
  "op4": "Battle of Panipat",
  "ans": "Battle of Plassey"
},
{
  "ques": "Who was known as the 'Tiger of Mysore'?<br><br>",
  "quesType": "mcq",
  "op1": "Haider Ali",
  "op2": "Tipu Sultan",
  "op3": "Krishnadevaraya",
  "op4": "Rani Chennamma",
  "ans": "Tipu Sultan"
},
{
  "ques": "Who was the last Mughal Emperor?<br><br>",
  "quesType": "mcq",
  "op1": "Bahadur Shah I",
  "op2": "Shah Alam II",
  "op3": "Bahadur Shah II",
  "op4": "Aurangzeb",
  "ans": "Bahadur Shah II"
},
{
  "ques": "Who was the ruler of Delhi when Timur invaded India?<br><br>",
  "quesType": "mcq",
  "op1": "Muhammad bin Tughlaq",
  "op2": "Firoz Shah Tughlaq",
  "op3": "Ghiyasuddin Tughlaq",
  "op4": "Sultan Nasir-ud-din Mahmud",
  "ans": "Sultan Nasir-ud-din Mahmud"
},
{
  "ques": "Who was the founder of Arya Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Swami Vivekananda",
  "op3": "Dayanand Saraswati",
  "op4": "Ishwar Chandra Vidyasagar",
  "ans": "Dayanand Saraswati"
},
{
  "ques": "Which Viceroy partitioned Bengal in 1905?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Curzon",
  "op2": "Lord Ripon",
  "op3": "Lord Lytton",
  "op4": "Lord Minto",
  "ans": "Lord Curzon"
},
{
  "ques": "Who was the founder of the Maurya Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Bindusara",
  "op2": "Ashoka",
  "op3": "Chandragupta Maurya",
  "op4": "Chandragupta II",
  "ans": "Chandragupta Maurya"
},
{
  "ques": "Who composed the national song 'Vande Mataram'?<br><br>",
  "quesType": "mcq",
  "op1": "Rabindranath Tagore",
  "op2": "Bankim Chandra Chatterjee",
  "op3": "Ishwar Chandra Vidyasagar",
  "op4": "Allama Iqbal",
  "ans": "Bankim Chandra Chatterjee"
},
{
  "ques": "Which Mughal emperor assumed the title Alamgir?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Shah Jahan",
  "op3": "Jahangir",
  "op4": "Aurangzeb",
  "ans": "Aurangzeb"
},
{
  "ques": "Who led the revolt in Kanpur during 1857?<br><br>",
  "quesType": "mcq",
  "op1": "Nana Sahib",
  "op2": "Tatya Tope",
  "op3": "Kunwar Singh",
  "op4": "Rani Lakshmibai",
  "ans": "Nana Sahib"
},
{
  "ques": "Who wrote 'Hind Swaraj'?<br><br>",
  "quesType": "mcq",
  "op1": "Subhash Chandra Bose",
  "op2": "Jawaharlal Nehru",
  "op3": "Mahatma Gandhi",
  "op4": "Bal Gangadhar Tilak",
  "ans": "Mahatma Gandhi"
},
{
  "ques": "Who founded the Vijayanagara Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Harihara I and Bukka Raya I",
  "op2": "Krishnadevaraya",
  "op3": "Deva Raya II",
  "op4": "Achyuta Deva Raya",
  "ans": "Harihara I and Bukka Raya I"
},
{
  "ques": "Who founded the Ghadar Party?<br><br>",
  "quesType": "mcq",
  "op1": "Lala Lajpat Rai",
  "op2": "Rash Behari Bose",
  "op3": "Sohan Singh Bhakna",
  "op4": "Bhagat Singh",
  "ans": "Sohan Singh Bhakna"
},
{
  "ques": "Who was the Governor-General during the Doctrine of Lapse?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Ripon",
  "op2": "Lord Curzon",
  "op3": "Lord Dalhousie",
  "op4": "Lord Canning",
  "ans": "Lord Dalhousie"
},
{
  "ques": "Which Mughal ruler was called Zinda Pir?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Aurangzeb",
  "op3": "Jahangir",
  "op4": "Babur",
  "ans": "Aurangzeb"
},
{
  "ques": "Who was the only Indian Governor-General of independent India?<br><br>",
  "quesType": "mcq",
  "op1": "Rajendra Prasad",
  "op2": "C. Rajagopalachari",
  "op3": "Sarvepalli Radhakrishnan",
  "op4": "Zakir Husain",
  "ans": "C. Rajagopalachari"
},
{
  "ques": "Who published the newspaper 'The Hindu'?<br><br>",
  "quesType": "mcq",
  "op1": "M. G. Ranade",
  "op2": "G. Subramania Iyer",
  "op3": "Surendranath Banerjee",
  "op4": "Dadabhai Naoroji",
  "ans": "G. Subramania Iyer"
},
{
  "ques": "Who was the first Indian woman to climb Mount Everest?<br><br>",
  "quesType": "mcq",
  "op1": "Kalpana Chawla",
  "op2": "Bachendri Pal",
  "op3": "Sunita Williams",
  "op4": "Santosh Yadav",
  "ans": "Bachendri Pal"
},
{
  "ques": "Where was the first British factory established in India?<br><br>",
  "quesType": "mcq",
  "op1": "Calcutta",
  "op2": "Madras",
  "op3": "Surat",
  "op4": "Bombay",
  "ans": "Surat"
},
{
  "ques": "Who wrote 'Discovery of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Mahatma Gandhi",
  "op3": "Subhash Chandra Bose",
  "op4": "Sarojini Naidu",
  "ans": "Jawaharlal Nehru"
},
{
  "ques": "Who was the founder of the Gupta Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta I",
  "op2": "Samudragupta",
  "op3": "Chandragupta II",
  "op4": "Skandagupta",
  "ans": "Chandragupta I"
},
{
  "ques": "Which ruler shifted his capital from Delhi to Daulatabad?<br><br>",
  "quesType": "mcq",
  "op1": "Iltutmish",
  "op2": "Ghiyasuddin Tughlaq",
  "op3": "Muhammad bin Tughlaq",
  "op4": "Firoz Shah Tughlaq",
  "ans": "Muhammad bin Tughlaq"
},
{
  "ques": "Who is known as the father of Indian Renaissance?<br><br>",
  "quesType": "mcq",
  "op1": "Dayanand Saraswati",
  "op2": "Swami Vivekananda",
  "op3": "Raja Ram Mohan Roy",
  "op4": "Rabindranath Tagore",
  "ans": "Raja Ram Mohan Roy"
}
,
{
  "ques": "Who was the first Indian to qualify for the Indian Civil Services?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Surendranath Banerjee",
  "op3": "Raja Ram Mohan Roy",
  "op4": "Gopal Krishna Gokhale",
  "ans": "Surendranath Banerjee"
},
{
  "ques": "Who founded the Ramakrishna Mission?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Swami Vivekananda",
  "op3": "Dayananda Saraswati",
  "op4": "Ishwar Chandra Vidyasagar",
  "ans": "Swami Vivekananda"
},
{
  "ques": "Who introduced the Vernacular Press Act?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Curzon",
  "op2": "Lord Ripon",
  "op3": "Lord Lytton",
  "op4": "Lord Canning",
  "ans": "Lord Lytton"
},
{
  "ques": "Who was the last Mughal emperor?<br><br>",
  "quesType": "mcq",
  "op1": "Bahadur Shah I",
  "op2": "Aurangzeb",
  "op3": "Shah Alam II",
  "op4": "Bahadur Shah Zafar",
  "ans": "Bahadur Shah Zafar"
},
{
  "ques": "Who was the first President of the Indian National Congress?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "W C Bannerjee",
  "op3": "Badruddin Tyabji",
  "op4": "Surendranath Banerjee",
  "ans": "W C Bannerjee"
},
{
  "ques": "Who was the founder of the Banaras Hindu University?<br><br>",
  "quesType": "mcq",
  "op1": "Gopal Krishna Gokhale",
  "op2": "Madan Mohan Malaviya",
  "op3": "Annie Besant",
  "op4": "Motilal Nehru",
  "ans": "Madan Mohan Malaviya"
},
{
  "ques": "Where was Tipu Sultan killed?<br><br>",
  "quesType": "mcq",
  "op1": "Seringapatam",
  "op2": "Mysore",
  "op3": "Arcot",
  "op4": "Trichinopoly",
  "ans": "Seringapatam"
},
{
  "ques": "Which Mughal ruler faced the invasion of Nadir Shah?<br><br>",
  "quesType": "mcq",
  "op1": "Bahadur Shah I",
  "op2": "Farrukhsiyar",
  "op3": "Muhammad Shah",
  "op4": "Shah Alam II",
  "ans": "Muhammad Shah"
},
{
  "ques": "Who is called the 'Father of Indian Renaissance'?<br><br>",
  "quesType": "mcq",
  "op1": "Swami Vivekananda",
  "op2": "Raja Ram Mohan Roy",
  "op3": "Ishwar Chandra Vidyasagar",
  "op4": "Bal Gangadhar Tilak",
  "ans": "Raja Ram Mohan Roy"
},
{
  "ques": "Which Sultan shifted the capital from Delhi to Daulatabad?<br><br>",
  "quesType": "mcq",
  "op1": "Iltutmish",
  "op2": "Ghiyasuddin Tughlaq",
  "op3": "Muhammad bin Tughlaq",
  "op4": "Firoz Shah Tughlaq",
  "ans": "Muhammad bin Tughlaq"
},
{
  "ques": "Who founded the Aligarh Muslim University?<br><br>",
  "quesType": "mcq",
  "op1": "Sir Syed Ahmed Khan",
  "op2": "Maulana Azad",
  "op3": "Badruddin Tyabji",
  "op4": "Zakir Hussain",
  "ans": "Sir Syed Ahmed Khan"
},
{
  "ques": "Who started the Home Rule Movement along with Annie Besant?<br><br>",
  "quesType": "mcq",
  "op1": "Bal Gangadhar Tilak",
  "op2": "Dadabhai Naoroji",
  "op3": "Gopal Krishna Gokhale",
  "op4": "Lala Lajpat Rai",
  "ans": "Bal Gangadhar Tilak"
},
{
  "ques": "Which Viceroy is associated with the Ilbert Bill controversy?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Ripon",
  "op2": "Lord Lytton",
  "op3": "Lord Curzon",
  "op4": "Lord Dufferin",
  "ans": "Lord Ripon"
},
{
  "ques": "Who led the Revolt of 1857 in Bareilly?<br><br>",
  "quesType": "mcq",
  "op1": "Kunwar Singh",
  "op2": "Khan Bahadur Khan",
  "op3": "Tantia Tope",
  "op4": "Mangal Pandey",
  "ans": "Khan Bahadur Khan"
},
{
  "ques": "Which social reformer worked for widow remarriage?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Swami Vivekananda",
  "op3": "Ishwar Chandra Vidyasagar",
  "op4": "Gopal Krishna Gokhale",
  "ans": "Ishwar Chandra Vidyasagar"
},
{
  "ques": "Who was the first Indian to become a member of the British Parliament?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "W C Bannerjee",
  "op3": "Mahatma Gandhi",
  "op4": "Gopal Krishna Gokhale",
  "ans": "Dadabhai Naoroji"
},
{
  "ques": "Which Mughal ruler built the Peacock Throne?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Jahangir",
  "op3": "Shah Jahan",
  "op4": "Aurangzeb",
  "ans": "Shah Jahan"
},
{
  "ques": "Who founded the 'Servants of India Society'?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Bal Gangadhar Tilak",
  "op3": "Gopal Krishna Gokhale",
  "op4": "Lala Lajpat Rai",
  "ans": "Gopal Krishna Gokhale"
},
{
  "ques": "Which act ended the monopoly of East India Company?<br><br>",
  "quesType": "mcq",
  "op1": "Regulating Act, 1773",
  "op2": "Pitt's India Act",
  "op3": "Charter Act of 1813",
  "op4": "Act of 1858",
  "ans": "Charter Act of 1813"
},
{
  "ques": "Who founded the Brahmo Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Swami Vivekananda",
  "op2": "Raja Ram Mohan Roy",
  "op3": "Swami Dayananda Saraswati",
  "op4": "Gopal Krishna Gokhale",
  "ans": "Raja Ram Mohan Roy"
},
{
  "ques": "Who was the first Indian to win a Nobel Prize?<br><br>",
  "quesType": "mcq",
  "op1": "Rabindranath Tagore",
  "op2": "C V Raman",
  "op3": "S Chandrashekhar",
  "op4": "Amartya Sen",
  "ans": "Rabindranath Tagore"
},
{
  "ques": "Who wrote the book 'Hind Swaraj'?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Bal Gangadhar Tilak",
  "op3": "Mahatma Gandhi",
  "op4": "Lala Lajpat Rai",
  "ans": "Mahatma Gandhi"
},
{
  "ques": "Which governor-general is known for the Doctrine of Lapse?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Dalhousie",
  "op2": "Lord Canning",
  "op3": "Lord Cornwallis",
  "op4": "Lord Wellesley",
  "ans": "Lord Dalhousie"
},
{
  "ques": "Who was known as the Grand Old Man of India?<br><br>",
  "quesType": "mcq",
  "op1": "Gopal Krishna Gokhale",
  "op2": "Bal Gangadhar Tilak",
  "op3": "Dadabhai Naoroji",
  "op4": "Sardar Patel",
  "ans": "Dadabhai Naoroji"
},
{
  "ques": "Who led the Santhal Rebellion?<br><br>",
  "quesType": "mcq",
  "op1": "Sidhu and Kanhu",
  "op2": "Birsa Munda",
  "op3": "Tantia Tope",
  "op4": "Kunwar Singh",
  "ans": "Sidhu and Kanhu"
},
{
  "ques": "Which Governor General introduced Permanent Settlement?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Cornwallis",
  "op2": "Lord Wellesley",
  "op3": "Lord Dalhousie",
  "op4": "Lord Ripon",
  "ans": "Lord Cornwallis"
},
{
  "ques": "Who was known as Lokmanya?<br><br>",
  "quesType": "mcq",
  "op1": "Lala Lajpat Rai",
  "op2": "Gopal Krishna Gokhale",
  "op3": "Bal Gangadhar Tilak",
  "op4": "Dadabhai Naoroji",
  "ans": "Bal Gangadhar Tilak"
},
{
  "ques": "Which freedom fighter founded 'Azad Hind Fauj'?<br><br>",
  "quesType": "mcq",
  "op1": "Bhagat Singh",
  "op2": "Jawaharlal Nehru",
  "op3": "Subhas Chandra Bose",
  "op4": "Sardar Patel",
  "ans": "Subhas Chandra Bose"
},
{
  "ques": "Which viceroy is associated with the Partition of Bengal?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Curzon",
  "op2": "Lord Ripon",
  "op3": "Lord Lytton",
  "op4": "Lord Hardinge",
  "ans": "Lord Curzon"
}
,
{
  "ques": "Which Mughal Emperor shifted his capital from Agra to Delhi permanently?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Akbar",
  "op3": "Shah Jahan",
  "op4": "Aurangzeb",
  "ans": "Shah Jahan"
},
{
  "ques": "Who was the founder of the Maurya Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Bindusara",
  "op3": "Chandragupta Maurya",
  "op4": "Bimbisara",
  "ans": "Chandragupta Maurya"
},
{
  "ques": "The famous Dandi March was started from which place?<br><br>",
  "quesType": "mcq",
  "op1": "Sabarmati Ashram",
  "op2": "Wardha",
  "op3": "Sevagram",
  "op4": "Ahmedabad",
  "ans": "Sabarmati Ashram"
},
{
  "ques": "Who gave the title 'Mahatma' to Gandhi?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Rabindranath Tagore",
  "op3": "Gopal Krishna Gokhale",
  "op4": "Bipin Chandra Pal",
  "ans": "Rabindranath Tagore"
},
{
  "ques": "Who led the revolt of 1857 at Kanpur?<br><br>",
  "quesType": "mcq",
  "op1": "Bahadur Shah Zafar",
  "op2": "Rani Laxmibai",
  "op3": "Tantia Tope",
  "op4": "Nana Sahib",
  "ans": "Nana Sahib"
},
{
  "ques": "The Partition of Bengal took place in which year?<br><br>",
  "quesType": "mcq",
  "op1": "1903",
  "op2": "1905",
  "op3": "1907",
  "op4": "1911",
  "ans": "1905"
},
{
  "ques": "Who founded the Arya Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Dayanand Saraswati",
  "op2": "Swami Vivekananda",
  "op3": "Raja Ram Mohan Roy",
  "op4": "Gopal Krishna Gokhale",
  "ans": "Dayanand Saraswati"
},
{
  "ques": "Who was the last Governor-General of India?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Mountbatten",
  "op2": "C. Rajagopalachari",
  "op3": "Lord Wavell",
  "op4": "Lord Linlithgow",
  "ans": "C. Rajagopalachari"
},
{
  "ques": "Which freedom fighter established the Home Rule League?<br><br>",
  "quesType": "mcq",
  "op1": "Mahatma Gandhi",
  "op2": "Bal Gangadhar Tilak",
  "op3": "Jawaharlal Nehru",
  "op4": "Bipin Chandra Pal",
  "ans": "Bal Gangadhar Tilak"
},
{
  "ques": "Who started the newspaper 'Kesari'?<br><br>",
  "quesType": "mcq",
  "op1": "Lala Lajpat Rai",
  "op2": "Bal Gangadhar Tilak",
  "op3": "Dadabhai Naoroji",
  "op4": "Bipin Chandra Pal",
  "ans": "Bal Gangadhar Tilak"
},
{
  "ques": "Where did the Jallianwala Bagh massacre take place?<br><br>",
  "quesType": "mcq",
  "op1": "Lucknow",
  "op2": "Delhi",
  "op3": "Amritsar",
  "op4": "Lahore",
  "ans": "Amritsar"
},
{
  "ques": "Which Mughal Emperor was also known as Alamgir?<br><br>",
  "quesType": "mcq",
  "op1": "Humayun",
  "op2": "Akbar",
  "op3": "Jahangir",
  "op4": "Aurangzeb",
  "ans": "Aurangzeb"
},
{
  "ques": "Who built the Grand Trunk Road?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Sher Shah Suri",
  "op3": "Babur",
  "op4": "Shah Jahan",
  "ans": "Sher Shah Suri"
},
{
  "ques": "Which Indian freedom fighter was hanged in the Kakori Conspiracy?<br><br>",
  "quesType": "mcq",
  "op1": "Bhagat Singh",
  "op2": "Ram Prasad Bismil",
  "op3": "Rajguru",
  "op4": "Sukhdev",
  "ans": "Ram Prasad Bismil"
},
{
  "ques": "Who introduced Permanent Settlement in Bengal?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Cornwallis",
  "op2": "Lord Dalhousie",
  "op3": "Lord Wellesley",
  "op4": "Lord Curzon",
  "ans": "Lord Cornwallis"
},
{
  "ques": "Who composed Vande Mataram?<br><br>",
  "quesType": "mcq",
  "op1": "Rabindranath Tagore",
  "op2": "Bankim Chandra Chatterjee",
  "op3": "Subramania Bharati",
  "op4": "Bipin Chandra Pal",
  "ans": "Bankim Chandra Chatterjee"
},
{
  "ques": "Where was Mahatma Gandhi born?<br><br>",
  "quesType": "mcq",
  "op1": "Porbandar",
  "op2": "Sabarmati",
  "op3": "Rajkot",
  "op4": "Wardha",
  "ans": "Porbandar"
},
{
  "ques": "Who abolished Sati system?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Dalhousie",
  "op2": "Lord William Bentinck",
  "op3": "Lord Ripon",
  "op4": "Lord Curzon",
  "ans": "Lord William Bentinck"
},
{
  "ques": "Who founded the Ramakrishna Mission?<br><br>",
  "quesType": "mcq",
  "op1": "Dayanand Saraswati",
  "op2": "Raja Ram Mohan Roy",
  "op3": "Swami Vivekananda",
  "op4": "Ishwar Chandra Vidyasagar",
  "ans": "Swami Vivekananda"
},
{
  "ques": "Which king is known as 'Napoleon of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Samudragupta",
  "op2": "Chandragupta I",
  "op3": "Chandragupta Maurya",
  "op4": "Ashoka",
  "ans": "Samudragupta"
},
{
  "ques": "The Rowlatt Act was passed in which year?<br><br>",
  "quesType": "mcq",
  "op1": "1917",
  "op2": "1919",
  "op3": "1921",
  "op4": "1923",
  "ans": "1919"
},
{
  "ques": "Who led the Salt Satyagraha from Tamil Nadu?<br><br>",
  "quesType": "mcq",
  "op1": "C. Rajagopalachari",
  "op2": "Subhas Chandra Bose",
  "op3": "Sardar Vallabhbhai Patel",
  "op4": "Annie Besant",
  "ans": "C. Rajagopalachari"
},
{
  "ques": "Who was the founder of Fatehpur Sikri?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Jahangir",
  "op3": "Babur",
  "op4": "Aurangzeb",
  "ans": "Akbar"
},
{
  "ques": "Who was the Prime Minister when Goa was liberated from Portuguese?<br><br>",
  "quesType": "mcq",
  "op1": "Lal Bahadur Shastri",
  "op2": "Indira Gandhi",
  "op3": "Jawaharlal Nehru",
  "op4": "Rajiv Gandhi",
  "ans": "Jawaharlal Nehru"
},
{
  "ques": "The founder of the Mughal Dynasty was?<br><br>",
  "quesType": "mcq",
  "op1": "Humayun",
  "op2": "Babur",
  "op3": "Akbar",
  "op4": "Aurangzeb",
  "ans": "Babur"
},
{
  "ques": "Which social reformer worked for widow remarriage?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Swami Vivekananda",
  "op3": "Ishwar Chandra Vidyasagar",
  "op4": "Dayanand Saraswati",
  "ans": "Ishwar Chandra Vidyasagar"
},
{
  "ques": "Which king was known for the Kalinga War?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Chandragupta Maurya",
  "op3": "Bimbisara",
  "op4": "Ajatashatru",
  "ans": "Ashoka"
},
{
  "ques": "Who was the founder of the Mauryan Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Bindusara",
  "op3": "Chandragupta Maurya",
  "op4": "Bimbisara",
  "ans": "Chandragupta Maurya"
},
{
  "ques": "Who designed the Indian National Flag?<br><br>",
  "quesType": "mcq",
  "op1": "Pingali Venkayya",
  "op2": "Subhas Chandra Bose",
  "op3": "Mahatma Gandhi",
  "op4": "Jawaharlal Nehru",
  "ans": "Pingali Venkayya"
}
,
{
  "ques": "Who is known as the 'Frontier Gandhi'?<br><br>",
  "quesType": "mcq",
  "op1": "Khan Abdul Ghaffar Khan",
  "op2": "Maulana Azad",
  "op3": "Sardar Patel",
  "op4": "Subhash Chandra Bose",
  "ans": "Khan Abdul Ghaffar Khan"
},
{
  "ques": "Which dynasty built the famous Konark Sun Temple?<br><br>",
  "quesType": "mcq",
  "op1": "Maurya",
  "op2": "Chola",
  "op3": "Ganga",
  "op4": "Pala",
  "ans": "Ganga"
},
{
  "ques": "Who started the Home Rule Movement in India?<br><br>",
  "quesType": "mcq",
  "op1": "Gopal Krishna Gokhale",
  "op2": "Bal Gangadhar Tilak",
  "op3": "Dadabhai Naoroji",
  "op4": "Raja Ram Mohan Roy",
  "ans": "Bal Gangadhar Tilak"
},
{
  "ques": "Who was the founder of the Satavahana Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Simuka",
  "op2": "Satakarni",
  "op3": "Gautamiputra Satakarni",
  "op4": "Pulumavi",
  "ans": "Simuka"
},
{
  "ques": "Who founded the Ramakrishna Mission?<br><br>",
  "quesType": "mcq",
  "op1": "Swami Vivekananda",
  "op2": "Dayanand Saraswati",
  "op3": "Raja Ram Mohan Roy",
  "op4": "Rabindranath Tagore",
  "ans": "Swami Vivekananda"
},
{
  "ques": "Who built the city of Fatehpur Sikri?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Humayun",
  "op3": "Akbar",
  "op4": "Shah Jahan",
  "ans": "Akbar"
},
{
  "ques": "Who was known as the 'Grand Old Man of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Bal Gangadhar Tilak",
  "op3": "Gopal Krishna Gokhale",
  "op4": "Motilal Nehru",
  "ans": "Dadabhai Naoroji"
},
{
  "ques": "Who was the first Governor General of independent India?<br><br>",
  "quesType": "mcq",
  "op1": "C. Rajagopalachari",
  "op2": "Lord Mountbatten",
  "op3": "Rajendra Prasad",
  "op4": "Jawaharlal Nehru",
  "ans": "Lord Mountbatten"
},
{
  "ques": "Which Viceroy introduced the system of 'Budget' in India?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Canning",
  "op2": "Lord Ripon",
  "op3": "Lord Mayo",
  "op4": "Lord Canning",
  "ans": "Lord Canning"
},
{
  "ques": "Who was the founder of the Indian National Army (INA)?<br><br>",
  "quesType": "mcq",
  "op1": "Rash Behari Bose",
  "op2": "Subhash Chandra Bose",
  "op3": "Bhagat Singh",
  "op4": "Mahatma Gandhi",
  "ans": "Rash Behari Bose"
},
{
  "ques": "Who abolished the Dual Government in Bengal?<br><br>",
  "quesType": "mcq",
  "op1": "Warren Hastings",
  "op2": "Robert Clive",
  "op3": "Lord Cornwallis",
  "op4": "Lord Curzon",
  "ans": "Warren Hastings"
},
{
  "ques": "Who founded the Bhoodan Movement?<br><br>",
  "quesType": "mcq",
  "op1": "Mahatma Gandhi",
  "op2": "Vinoba Bhave",
  "op3": "Jayaprakash Narayan",
  "op4": "Sardar Patel",
  "ans": "Vinoba Bhave"
},
{
  "ques": "Who was the first Indian Nobel Laureate?<br><br>",
  "quesType": "mcq",
  "op1": "C.V. Raman",
  "op2": "Amartya Sen",
  "op3": "Rabindranath Tagore",
  "op4": "Mother Teresa",
  "ans": "Rabindranath Tagore"
},
{
  "ques": "Which Gupta ruler is known for extensive coins and gold currency?<br><br>",
  "quesType": "mcq",
  "op1": "Samudragupta",
  "op2": "Chandragupta I",
  "op3": "Chandragupta II",
  "op4": "Kumaragupta",
  "ans": "Chandragupta II"
},
{
  "ques": "Who led the Bardoli Satyagraha?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Mahatma Gandhi",
  "op3": "Sardar Vallabhbhai Patel",
  "op4": "Rajendra Prasad",
  "ans": "Sardar Vallabhbhai Patel"
},
{
  "ques": "Who was the founder of Aligarh Muslim University?<br><br>",
  "quesType": "mcq",
  "op1": "Sir Syed Ahmed Khan",
  "op2": "Maulana Azad",
  "op3": "Aga Khan",
  "op4": "Mirza Ghalib",
  "ans": "Sir Syed Ahmed Khan"
},
{
  "ques": "Who founded the Swadeshi Steam Navigation Company?<br><br>",
  "quesType": "mcq",
  "op1": "Bal Gangadhar Tilak",
  "op2": "Subramania Bharati",
  "op3": "V.O. Chidambaram Pillai",
  "op4": "C. Rajagopalachari",
  "ans": "V.O. Chidambaram Pillai"
},
{
  "ques": "Who established the Central Hindu College in Varanasi?<br><br>",
  "quesType": "mcq",
  "op1": "Madan Mohan Malaviya",
  "op2": "Annie Besant",
  "op3": "Rabindranath Tagore",
  "op4": "Dadabhai Naoroji",
  "ans": "Annie Besant"
},
{
  "ques": "Who founded the Servants of India Society?<br><br>",
  "quesType": "mcq",
  "op1": "Mahatma Gandhi",
  "op2": "Bal Gangadhar Tilak",
  "op3": "Dadabhai Naoroji",
  "op4": "Gopal Krishna Gokhale",
  "ans": "Gopal Krishna Gokhale"
},
{
  "ques": "Who was the last Governor-General of Bengal?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Dalhousie",
  "op2": "Lord Curzon",
  "op3": "Lord William Bentinck",
  "op4": "Warren Hastings",
  "ans": "Warren Hastings"
},
{
  "ques": "Who was the founder of Sikh Khalsa?<br><br>",
  "quesType": "mcq",
  "op1": "Guru Gobind Singh",
  "op2": "Guru Nanak",
  "op3": "Guru Angad",
  "op4": "Guru Arjan Dev",
  "ans": "Guru Gobind Singh"
},
{
  "ques": "Who was the Viceroy when Indian National Congress was founded?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Lytton",
  "op2": "Lord Ripon",
  "op3": "Lord Dufferin",
  "op4": "Lord Curzon",
  "ans": "Lord Dufferin"
},
{
  "ques": "Who was the ruler of Delhi Sultanate who shifted the capital to Daulatabad?<br><br>",
  "quesType": "mcq",
  "op1": "Ghiyasuddin Tughlaq",
  "op2": "Firoz Shah Tughlaq",
  "op3": "Iltutmish",
  "op4": "Muhammad bin Tughlaq",
  "ans": "Muhammad bin Tughlaq"
},
{
  "ques": "Who wrote 'Gitanjali'?<br><br>",
  "quesType": "mcq",
  "op1": "Rabindranath Tagore",
  "op2": "Bankim Chandra Chatterjee",
  "op3": "Sarojini Naidu",
  "op4": "Subramania Bharati",
  "ans": "Rabindranath Tagore"
},
{
  "ques": "Who built the Red Fort in Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Shah Jahan",
  "op3": "Aurangzeb",
  "op4": "Babur",
  "ans": "Shah Jahan"
},
{
  "ques": "Who gave the slogan 'Do or Die'?<br><br>",
  "quesType": "mcq",
  "op1": "Subhash Chandra Bose",
  "op2": "Mahatma Gandhi",
  "op3": "Jawaharlal Nehru",
  "op4": "Bhagat Singh",
  "ans": "Mahatma Gandhi"
},
{
  "ques": "Who founded the Brahmo Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Swami Dayanand Saraswati",
  "op3": "Swami Vivekananda",
  "op4": "Ishwar Chandra Vidyasagar",
  "ans": "Raja Ram Mohan Roy"
},
{
  "ques": "Which Mughal Emperor is known for the Navratnas in his court?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Humayun",
  "op3": "Akbar",
  "op4": "Shah Jahan",
  "ans": "Akbar"
},
{
  "ques": "Who was the first Indian to become a member of British Parliament?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Mahatma Gandhi",
  "op3": "S.N. Banerjee",
  "op4": "M.G. Ranade",
  "ans": "Dadabhai Naoroji"
}
,
{
  "ques": "Who was the first Governor General of independent India?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Mountbatten",
  "op2": "C Rajagopalachari",
  "op3": "Jawaharlal Nehru",
  "op4": "Sardar Vallabhbhai Patel",
  "ans": "Lord Mountbatten"
},
{
  "ques": "Who founded the Arya Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Swami Vivekananda",
  "op2": "Swami Dayananda Saraswati",
  "op3": "Raja Ram Mohan Roy",
  "op4": "Ramanujacharya",
  "ans": "Swami Dayananda Saraswati"
},
{
  "ques": "Who was the first Indian woman President of the Indian National Congress?<br><br>",
  "quesType": "mcq",
  "op1": "Sarojini Naidu",
  "op2": "Annie Besant",
  "op3": "Indira Gandhi",
  "op4": "Vijaya Lakshmi Pandit",
  "ans": "Annie Besant"
},
{
  "ques": "Who was the first Sultan of Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Qutb-ud-din Aibak",
  "op2": "Iltutmish",
  "op3": "Balban",
  "op4": "Alauddin Khilji",
  "ans": "Qutb-ud-din Aibak"
},
{
  "ques": "Who built the Grand Trunk Road?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Sher Shah Suri",
  "op3": "Babur",
  "op4": "Jahangir",
  "ans": "Sher Shah Suri"
},
{
  "ques": "Who was known as 'Frontier Gandhi'?<br><br>",
  "quesType": "mcq",
  "op1": "Khan Abdul Ghaffar Khan",
  "op2": "Maulana Abul Kalam Azad",
  "op3": "Rajendra Prasad",
  "op4": "Syed Ahmed Khan",
  "ans": "Khan Abdul Ghaffar Khan"
},
{
  "ques": "Who established the Vijayanagara Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Harihara and Bukka",
  "op2": "Krishnadevaraya",
  "op3": "Rama Raya",
  "op4": "Deva Raya II",
  "ans": "Harihara and Bukka"
},
{
  "ques": "Who was the first Indian woman to become the President of India?<br><br>",
  "quesType": "mcq",
  "op1": "Indira Gandhi",
  "op2": "Sarojini Naidu",
  "op3": "Pratibha Patil",
  "op4": "Vijaya Lakshmi Pandit",
  "ans": "Pratibha Patil"
},
{
  "ques": "Who was the first Governor General of Bengal?<br><br>",
  "quesType": "mcq",
  "op1": "Warren Hastings",
  "op2": "Lord Cornwallis",
  "op3": "Lord Wellesley",
  "op4": "Robert Clive",
  "ans": "Warren Hastings"
},
{
  "ques": "Which Mughal emperor transferred his capital from Delhi to Agra?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Babur",
  "op3": "Humayun",
  "op4": "Shah Jahan",
  "ans": "Akbar"
},
{
  "ques": "Who was the founder of the Pala Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Gopala",
  "op2": "Dharmapala",
  "op3": "Devapala",
  "op4": "Mahipala",
  "ans": "Gopala"
},
{
  "ques": "Who gave the slogan 'Inquilab Zindabad'?<br><br>",
  "quesType": "mcq",
  "op1": "Bhagat Singh",
  "op2": "Lala Lajpat Rai",
  "op3": "Subhas Chandra Bose",
  "op4": "Mahatma Gandhi",
  "ans": "Bhagat Singh"
},
{
  "ques": "Who introduced the Ryotwari System?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Wellesley",
  "op2": "Lord Cornwallis",
  "op3": "Thomas Munro",
  "op4": "Lord Dalhousie",
  "ans": "Thomas Munro"
},
{
  "ques": "Who built the famous Shore Temple at Mahabalipuram?<br><br>",
  "quesType": "mcq",
  "op1": "Narasimhavarman I",
  "op2": "Mahendravarman I",
  "op3": "Rajendra Chola I",
  "op4": "Rajaraja Chola I",
  "ans": "Narasimhavarman I"
},
{
  "ques": "Who was the first Muslim woman ruler of Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Razia Sultana",
  "op2": "Nur Jahan",
  "op3": "Chand Bibi",
  "op4": "Begum Hazrat Mahal",
  "ans": "Razia Sultana"
},
{
  "ques": "Who was known as the 'Napoleon of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Chandragupta Maurya",
  "op3": "Samudragupta",
  "op4": "Harshavardhana",
  "ans": "Samudragupta"
},
{
  "ques": "Who was the founder of Sikhism?<br><br>",
  "quesType": "mcq",
  "op1": "Guru Arjan Dev",
  "op2": "Guru Gobind Singh",
  "op3": "Guru Nanak",
  "op4": "Guru Teg Bahadur",
  "ans": "Guru Nanak"
},
{
  "ques": "Where did Mahatma Gandhi start his first Satyagraha in India?<br><br>",
  "quesType": "mcq",
  "op1": "Champaran",
  "op2": "Ahmedabad",
  "op3": "Dandi",
  "op4": "Kheda",
  "ans": "Champaran"
},
{
  "ques": "Who abolished Sati?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Hastings",
  "op2": "Lord Bentinck",
  "op3": "Lord Cornwallis",
  "op4": "Lord Wellesley",
  "ans": "Lord Bentinck"
},
{
  "ques": "Who started the first newspaper in India?<br><br>",
  "quesType": "mcq",
  "op1": "James Augustus Hickey",
  "op2": "Lord Ripon",
  "op3": "Warren Hastings",
  "op4": "William Carey",
  "ans": "James Augustus Hickey"
},
{
  "ques": "Who founded the Gupta Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta I",
  "op2": "Samudragupta",
  "op3": "Chandragupta II",
  "op4": "Skandagupta",
  "ans": "Chandragupta I"
},
{
  "ques": "Who was the first Indian woman to become a cabinet minister?<br><br>",
  "quesType": "mcq",
  "op1": "Sarojini Naidu",
  "op2": "Vijaya Lakshmi Pandit",
  "op3": "Rajkumari Amrit Kaur",
  "op4": "Indira Gandhi",
  "ans": "Rajkumari Amrit Kaur"
},
{
  "ques": "Who established the Satavahana Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Simuka",
  "op2": "Gautamiputra Satakarni",
  "op3": "Pulumavi",
  "op4": "Krishna",
  "ans": "Simuka"
},
{
  "ques": "Which battle laid the foundation of the Mughal Empire in India?<br><br>",
  "quesType": "mcq",
  "op1": "Battle of Khanwa",
  "op2": "Battle of Panipat",
  "op3": "Battle of Haldighati",
  "op4": "Battle of Talikota",
  "ans": "Battle of Panipat"
},
{
  "ques": "Who composed the Allahabad Pillar Inscription?<br><br>",
  "quesType": "mcq",
  "op1": "Kalidasa",
  "op2": "Banabhatta",
  "op3": "Harishena",
  "op4": "Tulsidas",
  "ans": "Harishena"
},
{
  "ques": "Who discovered the Indus Valley Civilization?<br><br>",
  "quesType": "mcq",
  "op1": "R D Banerjee",
  "op2": "John Marshall",
  "op3": "Alexander Cunningham",
  "op4": "Dayaram Sahni",
  "ans": "R D Banerjee"
},
{
  "ques": "Who led the Salt Satyagraha?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Mahatma Gandhi",
  "op3": "Sardar Patel",
  "op4": "Subhas Chandra Bose",
  "ans": "Mahatma Gandhi"
},
{
  "ques": "Who was the first woman to preside over the UN General Assembly?<br><br>",
  "quesType": "mcq",
  "op1": "Indira Gandhi",
  "op2": "Vijaya Lakshmi Pandit",
  "op3": "Sarojini Naidu",
  "op4": "Rajkumari Amrit Kaur",
  "ans": "Vijaya Lakshmi Pandit"
},
{
  "ques": "Who founded the Prarthana Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Atmaram Pandurang",
  "op2": "Raja Ram Mohan Roy",
  "op3": "Swami Vivekananda",
  "op4": "Gopal Krishna Gokhale",
  "ans": "Atmaram Pandurang"
}
,
{
  "ques": "Which Sultan introduced the 'Market Control Policy' in Delhi Sultanate?<br><br>",
  "quesType": "mcq",
  "op1": "Iltutmish",
  "op2": "Alauddin Khilji",
  "op3": "Balban",
  "op4": "Muhammad bin Tughlaq",
  "ans": "Alauddin Khilji"
},
{
  "ques": "Who founded the Vijayanagara Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Harihara and Bukka",
  "op2": "Krishnadevaraya",
  "op3": "Raja Raja Chola",
  "op4": "Rajendra Chola",
  "ans": "Harihara and Bukka"
},
{
  "ques": "Which Indian city was called the 'Manchester of India' during British rule?<br><br>",
  "quesType": "mcq",
  "op1": "Kanpur",
  "op2": "Mumbai",
  "op3": "Ahmedabad",
  "op4": "Surat",
  "ans": "Ahmedabad"
},
{
  "ques": "Who was the first Indian woman President of the Indian National Congress?<br><br>",
  "quesType": "mcq",
  "op1": "Sarojini Naidu",
  "op2": "Annie Besant",
  "op3": "Sucheta Kriplani",
  "op4": "Vijaya Lakshmi Pandit",
  "ans": "Annie Besant"
},
{
  "ques": "Which dynasty built the famous Khajuraho temples?<br><br>",
  "quesType": "mcq",
  "op1": "Chola",
  "op2": "Chalukya",
  "op3": "Pallava",
  "op4": "Chandela",
  "ans": "Chandela"
},
{
  "ques": "Who was the first Indian Governor-General of independent India?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Mountbatten",
  "op2": "C. Rajagopalachari",
  "op3": "Jawaharlal Nehru",
  "op4": "Dr. Rajendra Prasad",
  "ans": "C. Rajagopalachari"
},
{
  "ques": "Which British Viceroy is associated with the partition of Bengal?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Curzon",
  "op2": "Lord Wellesley",
  "op3": "Lord Ripon",
  "op4": "Lord Canning",
  "ans": "Lord Curzon"
},
{
  "ques": "The slogan 'Do or Die' was given during which movement?<br><br>",
  "quesType": "mcq",
  "op1": "Civil Disobedience Movement",
  "op2": "Non-Cooperation Movement",
  "op3": "Quit India Movement",
  "op4": "Swadeshi Movement",
  "ans": "Quit India Movement"
},
{
  "ques": "Who wrote the book 'India Wins Freedom'?<br><br>",
  "quesType": "mcq",
  "op1": "Mahatma Gandhi",
  "op2": "Subhas Chandra Bose",
  "op3": "Jawaharlal Nehru",
  "op4": "Maulana Abul Kalam Azad",
  "ans": "Maulana Abul Kalam Azad"
},
{
  "ques": "Who was the founder of the Sikh Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Guru Gobind Singh",
  "op2": "Guru Nanak",
  "op3": "Ranjit Singh",
  "op4": "Hari Singh Nalwa",
  "ans": "Ranjit Singh"
},
{
  "ques": "Which Indian ruler fought against the British in the Battle of Plassey?<br><br>",
  "quesType": "mcq",
  "op1": "Siraj-ud-Daulah",
  "op2": "Tipu Sultan",
  "op3": "Hyder Ali",
  "op4": "Mir Qasim",
  "ans": "Siraj-ud-Daulah"
},
{
  "ques": "Who was the first Indian to qualify the ICS (Indian Civil Service) exam?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Surendranath Banerjee",
  "op3": "Raja Ram Mohan Roy",
  "op4": "Lala Lajpat Rai",
  "ans": "Surendranath Banerjee"
},
{
  "ques": "Who was called the 'Frontier Gandhi'?<br><br>",
  "quesType": "mcq",
  "op1": "Maulana Azad",
  "op2": "Khan Abdul Ghaffar Khan",
  "op3": "Rajendra Prasad",
  "op4": "Sardar Patel",
  "ans": "Khan Abdul Ghaffar Khan"
},
{
  "ques": "Which event led to the formation of the Muslim League in India?<br><br>",
  "quesType": "mcq",
  "op1": "Partition of Bengal",
  "op2": "Jallianwala Bagh Massacre",
  "op3": "Rowlatt Act",
  "op4": "Round Table Conference",
  "ans": "Partition of Bengal"
},
{
  "ques": "Which British Governor-General introduced the Doctrine of Lapse?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Canning",
  "op2": "Lord Dalhousie",
  "op3": "Lord Curzon",
  "op4": "Lord Ripon",
  "ans": "Lord Dalhousie"
},
{
  "ques": "The Battle of Buxar was fought in which year?<br><br>",
  "quesType": "mcq",
  "op1": "1757",
  "op2": "1764",
  "op3": "1773",
  "op4": "1784",
  "ans": "1764"
},
{
  "ques": "Who was the first woman ruler of Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Rani Laxmibai",
  "op2": "Razia Sultana",
  "op3": "Chand Bibi",
  "op4": "Noor Jahan",
  "ans": "Razia Sultana"
},
{
  "ques": "Where did Tipu Sultan die fighting the British?<br><br>",
  "quesType": "mcq",
  "op1": "Plassey",
  "op2": "Mysore",
  "op3": "Seringapatam",
  "op4": "Arcot",
  "ans": "Seringapatam"
},
{
  "ques": "Who built the Red Fort in Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Shah Jahan",
  "op3": "Aurangzeb",
  "op4": "Humayun",
  "ans": "Shah Jahan"
},
{
  "ques": "Who presided over the first session of Indian National Congress?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "W.C. Bonnerjee",
  "op3": "A.O. Hume",
  "op4": "Gopal Krishna Gokhale",
  "ans": "W.C. Bonnerjee"
},
{
  "ques": "Who was the first President of independent India?<br><br>",
  "quesType": "mcq",
  "op1": "Dr. Rajendra Prasad",
  "op2": "Jawaharlal Nehru",
  "op3": "Sardar Patel",
  "op4": "B.R. Ambedkar",
  "ans": "Dr. Rajendra Prasad"
},
{
  "ques": "Who introduced the Subsidiary Alliance system?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Wellesley",
  "op2": "Lord Cornwallis",
  "op3": "Lord Dalhousie",
  "op4": "Lord Curzon",
  "ans": "Lord Wellesley"
},
{
  "ques": "Which ruler assumed the title of 'Vikramaditya'?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta Maurya",
  "op2": "Ashoka",
  "op3": "Samudragupta",
  "op4": "Chandragupta II",
  "ans": "Chandragupta II"
},
{
  "ques": "Who was the Viceroy during the Quit India Movement?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Linlithgow",
  "op2": "Lord Irwin",
  "op3": "Lord Wavell",
  "op4": "Lord Mountbatten",
  "ans": "Lord Linlithgow"
},
{
  "ques": "Who built the Qutub Minar?<br><br>",
  "quesType": "mcq",
  "op1": "Qutub-ud-din Aibak",
  "op2": "Iltutmish",
  "op3": "Alauddin Khilji",
  "op4": "Balban",
  "ans": "Qutub-ud-din Aibak"
},
{
  "ques": "Who was the founder of the Satavahana Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Simuka",
  "op2": "Gautamiputra Satakarni",
  "op3": "Pulakeshin I",
  "op4": "Krishna I",
  "ans": "Simuka"
},
{
  "ques": "Where was the capital of Shivaji?<br><br>",
  "quesType": "mcq",
  "op1": "Pune",
  "op2": "Raigad",
  "op3": "Kolhapur",
  "op4": "Satara",
  "ans": "Raigad"
},
{
  "ques": "Which Indian was known as the 'Father of Indian Renaissance'?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Swami Vivekananda",
  "op3": "Dayanand Saraswati",
  "op4": "Ishwar Chandra Vidyasagar",
  "ans": "Raja Ram Mohan Roy"
},
{
  "ques": "Who wrote 'Hind Swaraj'?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Bal Gangadhar Tilak",
  "op3": "Mahatma Gandhi",
  "op4": "Dadabhai Naoroji",
  "ans": "Mahatma Gandhi"
},
{
  "ques": "Who among the following was not associated with the INA?<br><br>",
  "quesType": "mcq",
  "op1": "Subhas Chandra Bose",
  "op2": "Captain Lakshmi Sehgal",
  "op3": "Ras Behari Bose",
  "op4": "Lala Lajpat Rai",
  "ans": "Lala Lajpat Rai"
}
,
{
  "ques": "Who was the first Indian to win the Bharat Ratna Award?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "C. Rajagopalachari",
  "op3": "Sarvepalli Radhakrishnan",
  "op4": "Rajendra Prasad",
  "ans": "C. Rajagopalachari"
},
{
  "ques": "Who led the Dandi March?<br><br>",
  "quesType": "mcq",
  "op1": "Subhash Chandra Bose",
  "op2": "Jawaharlal Nehru",
  "op3": "Sardar Patel",
  "op4": "Mahatma Gandhi",
  "ans": "Mahatma Gandhi"
},
{
  "ques": "Who composed 'Jana Gana Mana'?<br><br>",
  "quesType": "mcq",
  "op1": "Rabindranath Tagore",
  "op2": "Bankim Chandra Chatterjee",
  "op3": "Subramania Bharati",
  "op4": "Ishwar Chandra Vidyasagar",
  "ans": "Rabindranath Tagore"
},
{
  "ques": "Who was the Viceroy during the Quit India Movement?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Linlithgow",
  "op2": "Lord Wavell",
  "op3": "Lord Mountbatten",
  "op4": "Lord Irwin",
  "ans": "Lord Linlithgow"
},
{
  "ques": "Who founded the Theosophical Society in India?<br><br>",
  "quesType": "mcq",
  "op1": "Annie Besant",
  "op2": "Dayanand Saraswati",
  "op3": "Swami Vivekananda",
  "op4": "Raja Ram Mohan Roy",
  "ans": "Annie Besant"
},
{
  "ques": "Who founded Banaras Hindu University?<br><br>",
  "quesType": "mcq",
  "op1": "Annie Besant",
  "op2": "Madan Mohan Malaviya",
  "op3": "Rabindranath Tagore",
  "op4": "Dadabhai Naoroji",
  "ans": "Madan Mohan Malaviya"
},
{
  "ques": "Who led the Kakori Conspiracy?<br><br>",
  "quesType": "mcq",
  "op1": "Bhagat Singh",
  "op2": "Ram Prasad Bismil",
  "op3": "Chandrasekhar Azad",
  "op4": "Sukhdev",
  "ans": "Ram Prasad Bismil"
},
{
  "ques": "Who gave the slogan 'Swaraj is my birthright'?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Mahatma Gandhi",
  "op3": "Bal Gangadhar Tilak",
  "op4": "Subhash Chandra Bose",
  "ans": "Bal Gangadhar Tilak"
},
{
  "ques": "Who established Shantiniketan?<br><br>",
  "quesType": "mcq",
  "op1": "Swami Vivekananda",
  "op2": "Rabindranath Tagore",
  "op3": "Bankim Chandra Chatterjee",
  "op4": "Ishwar Chandra Vidyasagar",
  "ans": "Rabindranath Tagore"
},
{
  "ques": "Who was the founder of the Prarthana Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Atmaram Pandurang",
  "op2": "Raja Ram Mohan Roy",
  "op3": "Dayanand Saraswati",
  "op4": "Swami Vivekananda",
  "ans": "Atmaram Pandurang"
},
{
  "ques": "Who was the last Governor-General of India?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Mountbatten",
  "op2": "C. Rajagopalachari",
  "op3": "Lord Wavell",
  "op4": "Lord Linlithgow",
  "ans": "C. Rajagopalachari"
},
{
  "ques": "Who introduced the Vernacular Press Act?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Curzon",
  "op2": "Lord Ripon",
  "op3": "Lord Lytton",
  "op4": "Lord Canning",
  "ans": "Lord Lytton"
},
{
  "ques": "Who introduced Permanent Settlement in Bengal?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Cornwallis",
  "op2": "Lord Wellesley",
  "op3": "Lord Dalhousie",
  "op4": "Lord Ripon",
  "ans": "Lord Cornwallis"
},
{
  "ques": "Who was the founder of the Chola Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Rajaraja Chola I",
  "op2": "Vijayalaya Chola",
  "op3": "Rajendra Chola I",
  "op4": "Kulottunga Chola I",
  "ans": "Vijayalaya Chola"
},
{
  "ques": "Which Indian revolutionary founded the Hindustan Socialist Republican Association?<br><br>",
  "quesType": "mcq",
  "op1": "Bhagat Singh",
  "op2": "Chandrasekhar Azad",
  "op3": "Ram Prasad Bismil",
  "op4": "Rajguru",
  "ans": "Ram Prasad Bismil"
},
{
  "ques": "Who was the first Indian Governor of RBI?<br><br>",
  "quesType": "mcq",
  "op1": "Osborne Smith",
  "op2": "C.D. Deshmukh",
  "op3": "Benegal Rama Rau",
  "op4": "I.G. Patel",
  "ans": "C.D. Deshmukh"
},
{
  "ques": "Who started the 'Young Bengal Movement'?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Henry Vivian Derozio",
  "op3": "Ishwar Chandra Vidyasagar",
  "op4": "Swami Dayanand Saraswati",
  "ans": "Henry Vivian Derozio"
},
{
  "ques": "Which Mughal ruler introduced 'Din-i Ilahi'?<br><br>",
  "quesType": "mcq",
  "op1": "Humayun",
  "op2": "Akbar",
  "op3": "Babur",
  "op4": "Aurangzeb",
  "ans": "Akbar"
},
{
  "ques": "Who led the Champaran Satyagraha?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Sardar Patel",
  "op3": "Mahatma Gandhi",
  "op4": "Rajendra Prasad",
  "ans": "Mahatma Gandhi"
},
{
  "ques": "Who was known as 'Punjab Kesari'?<br><br>",
  "quesType": "mcq",
  "op1": "Lala Lajpat Rai",
  "op2": "Bal Gangadhar Tilak",
  "op3": "Gopal Krishna Gokhale",
  "op4": "Dadabhai Naoroji",
  "ans": "Lala Lajpat Rai"
},
{
  "ques": "Who built the Qutub Minar?<br><br>",
  "quesType": "mcq",
  "op1": "Qutub-ud-din Aibak",
  "op2": "Iltutmish",
  "op3": "Alauddin Khilji",
  "op4": "Balban",
  "ans": "Qutub-ud-din Aibak"
},
{
  "ques": "Who founded the Arya Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Swami Vivekananda",
  "op3": "Swami Dayanand Saraswati",
  "op4": "Rabindranath Tagore",
  "ans": "Swami Dayanand Saraswati"
},
{
  "ques": "Who abolished Sati?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Ripon",
  "op2": "Lord Dalhousie",
  "op3": "Lord William Bentinck",
  "op4": "Lord Curzon",
  "ans": "Lord William Bentinck"
},
{
  "ques": "Who composed the song 'Sare Jahan Se Achha'?<br><br>",
  "quesType": "mcq",
  "op1": "Rabindranath Tagore",
  "op2": "Allama Iqbal",
  "op3": "Bankim Chandra Chatterjee",
  "op4": "Subramania Bharati",
  "ans": "Allama Iqbal"
},
{
  "ques": "Who was the founder of the Pallava Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Simhavishnu",
  "op2": "Mahendravarman I",
  "op3": "Narasimhavarman I",
  "op4": "Nandivarman II",
  "ans": "Simhavishnu"
},
{
  "ques": "Who presided over the first session of Indian National Congress?<br><br>",
  "quesType": "mcq",
  "op1": "A.O. Hume",
  "op2": "Dadabhai Naoroji",
  "op3": "W.C. Bonnerjee",
  "op4": "Surendranath Banerjee",
  "ans": "W.C. Bonnerjee"
},
{
  "ques": "Who introduced Subsidiary Alliance?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Wellesley",
  "op2": "Lord Cornwallis",
  "op3": "Lord Dalhousie",
  "op4": "Lord Ripon",
  "ans": "Lord Wellesley"
},
{
  "ques": "Who wrote the book 'India Wins Freedom'?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Maulana Abul Kalam Azad",
  "op3": "Rajendra Prasad",
  "op4": "Subhash Chandra Bose",
  "ans": "Maulana Abul Kalam Azad"
},
{
  "ques": "Which battle ended the Mughal Empire effectively?<br><br>",
  "quesType": "mcq",
  "op1": "Battle of Plassey",
  "op2": "Battle of Buxar",
  "op3": "Third Battle of Panipat",
  "op4": "Battle of Karnal",
  "ans": "Third Battle of Panipat"
}
,
{
  "ques": "Who was the last Governor-General of India?<br><br>",
  "quesType": "mcq",
  "op1": "C Rajagopalachari",
  "op2": "Lord Mountbatten",
  "op3": "Lord Wavell",
  "op4": "Warren Hastings",
  "ans": "C Rajagopalachari"
},
{
  "ques": "Which ruler is called the 'Napoleon of South India'?<br><br>",
  "quesType": "mcq",
  "op1": "Rajaraja Chola I",
  "op2": "Krishnadevaraya",
  "op3": "Rajendra Chola",
  "op4": "Pulakesin II",
  "ans": "Rajendra Chola"
},
{
  "ques": "Where did the Jallianwala Bagh massacre take place?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Amritsar",
  "op3": "Lahore",
  "op4": "Kolkata",
  "ans": "Amritsar"
},
{
  "ques": "Which Mughal ruler was called 'Zinda Pir'?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Aurangzeb",
  "op3": "Babur",
  "op4": "Shah Jahan",
  "ans": "Aurangzeb"
},
{
  "ques": "Who wrote 'Gita Rahasya'?<br><br>",
  "quesType": "mcq",
  "op1": "Lokmanya Tilak",
  "op2": "Raja Ram Mohan Roy",
  "op3": "Jawaharlal Nehru",
  "op4": "Mahatma Gandhi",
  "ans": "Lokmanya Tilak"
},
{
  "ques": "Who was the founder of the Rashtrakuta Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Dantidurga",
  "op2": "Krishna I",
  "op3": "Govinda III",
  "op4": "Amoghavarsha I",
  "ans": "Dantidurga"
},
{
  "ques": "Who composed the Ramcharitmanas?<br><br>",
  "quesType": "mcq",
  "op1": "Kalidasa",
  "op2": "Tulsidas",
  "op3": "Surdas",
  "op4": "Kabir",
  "ans": "Tulsidas"
},
{
  "ques": "Which Gupta ruler was called 'Kaviraja'?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta I",
  "op2": "Samudragupta",
  "op3": "Skandagupta",
  "op4": "Chandragupta II",
  "ans": "Samudragupta"
},
{
  "ques": "Who was the first Vice President of India?<br><br>",
  "quesType": "mcq",
  "op1": "Rajendra Prasad",
  "op2": "S Radhakrishnan",
  "op3": "Zakir Hussain",
  "op4": "V V Giri",
  "ans": "S Radhakrishnan"
},
{
  "ques": "Who was the founder of the Bahmani Kingdom?<br><br>",
  "quesType": "mcq",
  "op1": "Alauddin Hasan Bahman Shah",
  "op2": "Mahmud Gawan",
  "op3": "Firuz Shah Bahmani",
  "op4": "Muhammad Shah I",
  "ans": "Alauddin Hasan Bahman Shah"
},
{
  "ques": "Who was known as 'Punjab Kesari'?<br><br>",
  "quesType": "mcq",
  "op1": "Lala Lajpat Rai",
  "op2": "Bhagat Singh",
  "op3": "Sukhdev",
  "op4": "Udham Singh",
  "ans": "Lala Lajpat Rai"
},
{
  "ques": "Where is the Buland Darwaza located?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Agra",
  "op3": "Fatehpur Sikri",
  "op4": "Jaipur",
  "ans": "Fatehpur Sikri"
},
{
  "ques": "Who was the first Indian Governor of the RBI?<br><br>",
  "quesType": "mcq",
  "op1": "C D Deshmukh",
  "op2": "Raghuram Rajan",
  "op3": "Manmohan Singh",
  "op4": "Y V Reddy",
  "ans": "C D Deshmukh"
},
{
  "ques": "Who was the ruler during the Third Battle of Panipat?<br><br>",
  "quesType": "mcq",
  "op1": "Aurangzeb",
  "op2": "Shah Alam II",
  "op3": "Bahadur Shah Zafar",
  "op4": "Akbar II",
  "ans": "Shah Alam II"
},
{
  "ques": "Who founded the Ramakrishna Mission?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Swami Vivekananda",
  "op3": "Dayananda Saraswati",
  "op4": "Rabindranath Tagore",
  "ans": "Swami Vivekananda"
},
{
  "ques": "Which ruler issued gold coins called 'Dinaras'?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Kanishka",
  "op3": "Chandragupta Maurya",
  "op4": "Harsha",
  "ans": "Kanishka"
},
{
  "ques": "Who started the Khilafat Movement?<br><br>",
  "quesType": "mcq",
  "op1": "Ali Brothers",
  "op2": "Mahatma Gandhi",
  "op3": "Maulana Azad",
  "op4": "Rajendra Prasad",
  "ans": "Ali Brothers"
},
{
  "ques": "Who was the founder of the Slave Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Qutb-ud-din Aibak",
  "op2": "Iltutmish",
  "op3": "Balban",
  "op4": "Razia Sultana",
  "ans": "Qutb-ud-din Aibak"
},
{
  "ques": "Which king wrote 'Arthashastra'?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta Maurya",
  "op2": "Ashoka",
  "op3": "Kautilya",
  "op4": "Samudragupta",
  "ans": "Kautilya"
},
{
  "ques": "Who was the first Tirthankara of Jainism?<br><br>",
  "quesType": "mcq",
  "op1": "Mahavira",
  "op2": "Parshvanatha",
  "op3": "Rishabhanatha",
  "op4": "Neminatha",
  "ans": "Rishabhanatha"
},
{
  "ques": "Which ruler built the Red Fort in Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Babur",
  "op3": "Shah Jahan",
  "op4": "Aurangzeb",
  "ans": "Shah Jahan"
},
{
  "ques": "Who is called the 'Father of Indian Renaissance'?<br><br>",
  "quesType": "mcq",
  "op1": "Swami Vivekananda",
  "op2": "Raja Ram Mohan Roy",
  "op3": "Rabindranath Tagore",
  "op4": "Dadabhai Naoroji",
  "ans": "Raja Ram Mohan Roy"
},
{
  "ques": "Who was the founder of the Aligarh Movement?<br><br>",
  "quesType": "mcq",
  "op1": "Syed Ahmed Khan",
  "op2": "Maulana Azad",
  "op3": "Badruddin Tyabji",
  "op4": "Sir Sayyid Ali",
  "ans": "Syed Ahmed Khan"
},
{
  "ques": "Who wrote 'Discovery of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Mahatma Gandhi",
  "op2": "Rabindranath Tagore",
  "op3": "Jawaharlal Nehru",
  "op4": "Subhas Chandra Bose",
  "ans": "Jawaharlal Nehru"
},
{
  "ques": "Who was the founder of the Chola Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Rajaraja Chola I",
  "op2": "Karikala Chola",
  "op3": "Rajendra Chola",
  "op4": "Vijayalaya Chola",
  "ans": "Vijayalaya Chola"
},
{
  "ques": "Who was called the 'Grand Old Man of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Gopal Krishna Gokhale",
  "op3": "Bal Gangadhar Tilak",
  "op4": "Raja Ram Mohan Roy",
  "ans": "Dadabhai Naoroji"
},
{
  "ques": "Who founded the Indian National Army?<br><br>",
  "quesType": "mcq",
  "op1": "Subhas Chandra Bose",
  "op2": "Rash Behari Bose",
  "op3": "Bhagat Singh",
  "op4": "Sardar Patel",
  "ans": "Rash Behari Bose"
},
{
  "ques": "Who gave the slogan 'Jai Jawan Jai Kisan'?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Lal Bahadur Shastri",
  "op3": "Indira Gandhi",
  "op4": "Rajiv Gandhi",
  "ans": "Lal Bahadur Shastri"
},
{
  "ques": "Who was the founder of the Indian Civil Service?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Ripon",
  "op2": "Lord Cornwallis",
  "op3": "Lord Curzon",
  "op4": "Lord Dalhousie",
  "ans": "Lord Cornwallis"
}
,
{
  "ques": "Who was the first Mughal Emperor of India?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Akbar",
  "op3": "Humayun",
  "op4": "Aurangzeb",
  "ans": "Babur"
},
{
  "ques": "Which Mughal ruler is known for building the Peacock Throne?<br><br>",
  "quesType": "mcq",
  "op1": "Shah Jahan",
  "op2": "Jahangir",
  "op3": "Aurangzeb",
  "op4": "Akbar",
  "ans": "Shah Jahan"
},
{
  "ques": "Which ancient university was destroyed by Bakhtiyar Khilji?<br><br>",
  "quesType": "mcq",
  "op1": "Takshashila",
  "op2": "Nalanda",
  "op3": "Vikramshila",
  "op4": "Ujjain",
  "ans": "Nalanda"
},
{
  "ques": "Who among these was not a part of the 'Lal-Bal-Pal' trio?<br><br>",
  "quesType": "mcq",
  "op1": "Lala Lajpat Rai",
  "op2": "Bal Gangadhar Tilak",
  "op3": "Bipin Chandra Pal",
  "op4": "Dadabhai Naoroji",
  "ans": "Dadabhai Naoroji"
},
{
  "ques": "Who was the founder of the Brahmo Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Swami Vivekananda",
  "op2": "Dayanand Saraswati",
  "op3": "Raja Ram Mohan Roy",
  "op4": "Ishwar Chandra Vidyasagar",
  "ans": "Raja Ram Mohan Roy"
},
{
  "ques": "Who introduced the Permanent Settlement in Bengal?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Wellesley",
  "op2": "Lord Cornwallis",
  "op3": "Lord Dalhousie",
  "op4": "Lord Canning",
  "ans": "Lord Cornwallis"
},
{
  "ques": "Who led the Revolt of 1857 in Kanpur?<br><br>",
  "quesType": "mcq",
  "op1": "Bahadur Shah Zafar",
  "op2": "Mangal Pandey",
  "op3": "Tantia Tope",
  "op4": "Nana Sahib",
  "ans": "Nana Sahib"
},
{
  "ques": "Where did Gandhiji launch the Champaran Satyagraha?<br><br>",
  "quesType": "mcq",
  "op1": "Bihar",
  "op2": "Gujarat",
  "op3": "Bengal",
  "op4": "Punjab",
  "ans": "Bihar"
},
{
  "ques": "Which freedom fighter formed the 'Azad Hind Fauj'?<br><br>",
  "quesType": "mcq",
  "op1": "Bhagat Singh",
  "op2": "Mahatma Gandhi",
  "op3": "Jawaharlal Nehru",
  "op4": "Subhas Chandra Bose",
  "ans": "Subhas Chandra Bose"
},
{
  "ques": "Who was the first Governor-General of India?<br><br>",
  "quesType": "mcq",
  "op1": "Warren Hastings",
  "op2": "Lord Wellesley",
  "op3": "Lord Dalhousie",
  "op4": "Lord Canning",
  "ans": "Warren Hastings"
},
{
  "ques": "Who wrote 'Discovery of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Mahatma Gandhi",
  "op2": "Subhas Chandra Bose",
  "op3": "Jawaharlal Nehru",
  "op4": "Rajendra Prasad",
  "ans": "Jawaharlal Nehru"
},
{
  "ques": "Who gave the slogan 'Swaraj is my birthright'?<br><br>",
  "quesType": "mcq",
  "op1": "Mahatma Gandhi",
  "op2": "Bal Gangadhar Tilak",
  "op3": "Lala Lajpat Rai",
  "op4": "Bipin Chandra Pal",
  "ans": "Bal Gangadhar Tilak"
},
{
  "ques": "Who was the founder of Arya Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Swami Vivekananda",
  "op2": "Dayanand Saraswati",
  "op3": "Raja Ram Mohan Roy",
  "op4": "Gopal Hari Deshmukh",
  "ans": "Dayanand Saraswati"
},
{
  "ques": "Who was known as the 'Tiger of Mysore'?<br><br>",
  "quesType": "mcq",
  "op1": "Tipu Sultan",
  "op2": "Hyder Ali",
  "op3": "Nana Phadnavis",
  "op4": "Haider Mahal",
  "ans": "Tipu Sultan"
},
{
  "ques": "Who built the Grand Trunk Road?<br><br>",
  "quesType": "mcq",
  "op1": "Sher Shah Suri",
  "op2": "Akbar",
  "op3": "Aurangzeb",
  "op4": "Babur",
  "ans": "Sher Shah Suri"
},
{
  "ques": "Who abolished Sati system in India?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Dalhousie",
  "op2": "Lord Bentinck",
  "op3": "Lord Wellesley",
  "op4": "Lord Ripon",
  "ans": "Lord Bentinck"
},
{
  "ques": "Which movement was started by Vinoba Bhave?<br><br>",
  "quesType": "mcq",
  "op1": "Sarvodaya Movement",
  "op2": "Bhoodan Movement",
  "op3": "Quit India Movement",
  "op4": "Chipko Movement",
  "ans": "Bhoodan Movement"
},
{
  "ques": "Which was the capital of Kalinga?<br><br>",
  "quesType": "mcq",
  "op1": "Patna",
  "op2": "Bhubaneswar",
  "op3": "Kalinganagara",
  "op4": "Tosali",
  "ans": "Tosali"
},
{
  "ques": "Where did Mahatma Gandhi begin his first Satyagraha in India?<br><br>",
  "quesType": "mcq",
  "op1": "Ahmedabad",
  "op2": "Champaran",
  "op3": "Kheda",
  "op4": "Bardoli",
  "ans": "Champaran"
},
{
  "ques": "Which Gupta ruler is known as the 'Napoleon of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Samudragupta",
  "op2": "Chandragupta I",
  "op3": "Chandragupta II",
  "op4": "Skandagupta",
  "ans": "Samudragupta"
},
{
  "ques": "Who was the last Governor-General of India?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Mountbatten",
  "op2": "C. Rajagopalachari",
  "op3": "Lord Wavell",
  "op4": "Lord Linlithgow",
  "ans": "C. Rajagopalachari"
},
{
  "ques": "Which Mughal emperor transferred the capital from Agra to Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Jahangir",
  "op3": "Shah Jahan",
  "op4": "Aurangzeb",
  "ans": "Shah Jahan"
},
{
  "ques": "Which nationalist leader was given the title 'Lokmanya'?<br><br>",
  "quesType": "mcq",
  "op1": "Bal Gangadhar Tilak",
  "op2": "Dadabhai Naoroji",
  "op3": "Gopal Krishna Gokhale",
  "op4": "Subhas Chandra Bose",
  "ans": "Bal Gangadhar Tilak"
},
{
  "ques": "Who founded the Banaras Hindu University?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Madam Cama",
  "op3": "Madan Mohan Malaviya",
  "op4": "Ishwar Chandra Vidyasagar",
  "ans": "Madan Mohan Malaviya"
},
{
  "ques": "Who is known as 'Punjab Kesari'?<br><br>",
  "quesType": "mcq",
  "op1": "Lala Lajpat Rai",
  "op2": "Bhagat Singh",
  "op3": "Rajguru",
  "op4": "Sukhdev",
  "ans": "Lala Lajpat Rai"
},
{
  "ques": "Who founded the Servants of India Society?<br><br>",
  "quesType": "mcq",
  "op1": "Gopal Krishna Gokhale",
  "op2": "Mahatma Gandhi",
  "op3": "Dadabhai Naoroji",
  "op4": "Bal Gangadhar Tilak",
  "ans": "Gopal Krishna Gokhale"
},
{
  "ques": "Who wrote the book 'Hind Swaraj'?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Dadabhai Naoroji",
  "op3": "Mahatma Gandhi",
  "op4": "Bal Gangadhar Tilak",
  "ans": "Mahatma Gandhi"
},
{
  "ques": "Who established the Ramakrishna Mission?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Swami Vivekananda",
  "op3": "Dayanand Saraswati",
  "op4": "Aurobindo Ghosh",
  "ans": "Swami Vivekananda"
},
{
  "ques": "Who founded the Indian Home Rule League?<br><br>",
  "quesType": "mcq",
  "op1": "Bal Gangadhar Tilak",
  "op2": "Annie Besant",
  "op3": "Both A and B",
  "op4": "None of these",
  "ans": "Both A and B"
}

]

let codinghistory3Arr=[
  {
  "ques": "Who among the following was the first to decipher Ashokan inscriptions?<br><br>",
  "quesType": "mcq",
  "op1": "James Prinsep",
  "op2": "Alexander Cunningham",
  "op3": "Max Muller",
  "op4": "Sir William Jones",
  "ans": "James Prinsep"
},
{
  "ques": "Which Gupta king adopted the title 'Maharajadhiraja'?<br><br>",
  "quesType": "mcq",
  "op1": "Samudragupta",
  "op2": "Chandragupta I",
  "op3": "Chandragupta II",
  "op4": "Kumaragupta",
  "ans": "Chandragupta I"
},
{
  "ques": "Which Mughal emperor assumed the title of 'Zinda Pir'?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Akbar",
  "op3": "Aurangzeb",
  "op4": "Humayun",
  "ans": "Aurangzeb"
},
{
  "ques": "Who was the first Indian woman president of the Indian National Congress?<br><br>",
  "quesType": "mcq",
  "op1": "Sarojini Naidu",
  "op2": "Annie Besant",
  "op3": "Vijaya Lakshmi Pandit",
  "op4": "Indira Gandhi",
  "ans": "Annie Besant"
},
{
  "ques": "Who composed 'Ain-i-Akbari'?<br><br>",
  "quesType": "mcq",
  "op1": "Faizi",
  "op2": "Abul Fazl",
  "op3": "Badauni",
  "op4": "Ibn Batuta",
  "ans": "Abul Fazl"
},
{
  "ques": "Who was the last Mauryan ruler?<br><br>",
  "quesType": "mcq",
  "op1": "Bindusara",
  "op2": "Ashoka",
  "op3": "Brihadratha",
  "op4": "Chandragupta Maurya",
  "ans": "Brihadratha"
},
{
  "ques": "Who was known as 'Lokhitwadi'?<br><br>",
  "quesType": "mcq",
  "op1": "Gopal Krishna Gokhale",
  "op2": "Jyotiba Phule",
  "op3": "Gopal Hari Deshmukh",
  "op4": "Bal Gangadhar Tilak",
  "ans": "Gopal Hari Deshmukh"
},
{
  "ques": "Who was the first Sultan of Delhi to issue regular currency?<br><br>",
  "quesType": "mcq",
  "op1": "Qutb-ud-din Aibak",
  "op2": "Iltutmish",
  "op3": "Balban",
  "op4": "Alauddin Khilji",
  "ans": "Iltutmish"
},
{
  "ques": "Who wrote 'Arthashastra'?<br><br>",
  "quesType": "mcq",
  "op1": "Kalidasa",
  "op2": "Patanjali",
  "op3": "Chanakya",
  "op4": "Vatsyayana",
  "ans": "Chanakya"
},
{
  "ques": "Who built the Gol Gumbaz?<br><br>",
  "quesType": "mcq",
  "op1": "Adil Shah",
  "op2": "Mohammad Adil Shah",
  "op3": "Ibrahim Adil Shah II",
  "op4": "Ali Adil Shah I",
  "ans": "Mohammad Adil Shah"
},
{
  "ques": "Who was the founder of the Rashtrakuta dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Dantidurga",
  "op2": "Krishna I",
  "op3": "Govinda III",
  "op4": "Amoghavarsha",
  "ans": "Dantidurga"
},
{
  "ques": "Which Chola ruler conquered Sri Lanka?<br><br>",
  "quesType": "mcq",
  "op1": "Rajaraja Chola I",
  "op2": "Rajendra Chola I",
  "op3": "Vijayalaya Chola",
  "op4": "Kulottunga Chola",
  "ans": "Rajendra Chola I"
},
{
  "ques": "Who was the Mughal emperor during the Battle of Buxar?<br><br>",
  "quesType": "mcq",
  "op1": "Bahadur Shah I",
  "op2": "Shah Alam II",
  "op3": "Akbar Shah II",
  "op4": "Alamgir II",
  "ans": "Shah Alam II"
},
{
  "ques": "Who established the 'Atmiya Sabha'?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Keshab Chandra Sen",
  "op3": "Ishwar Chandra Vidyasagar",
  "op4": "Swami Vivekananda",
  "ans": "Raja Ram Mohan Roy"
},
{
  "ques": "Which British Governor-General introduced the Doctrine of Lapse?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Canning",
  "op2": "Lord Dalhousie",
  "op3": "Lord Wellesley",
  "op4": "Lord Ripon",
  "ans": "Lord Dalhousie"
},
{
  "ques": "Which ancient port city was important during the Indus Valley Civilization?<br><br>",
  "quesType": "mcq",
  "op1": "Kalibangan",
  "op2": "Harappa",
  "op3": "Mohenjo-daro",
  "op4": "Lothal",
  "ans": "Lothal"
},
{
  "ques": "Who was the founder of Vijayanagara Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Harihara I",
  "op2": "Krishnadevaraya",
  "op3": "Deva Raya II",
  "op4": "Saluva Narasimha",
  "ans": "Harihara I"
},
{
  "ques": "Which rebel leader is called the 'Tiger of Mysore'?<br><br>",
  "quesType": "mcq",
  "op1": "Hyder Ali",
  "op2": "Tipu Sultan",
  "op3": "Mir Jafar",
  "op4": "Nana Saheb",
  "ans": "Tipu Sultan"
},
{
  "ques": "Who wrote 'Gulistan' and 'Bostan'?<br><br>",
  "quesType": "mcq",
  "op1": "Amir Khusrau",
  "op2": "Saadi",
  "op3": "Firdausi",
  "op4": "Badauni",
  "ans": "Saadi"
},
{
  "ques": "Who was the founder of the Bahmani Kingdom?<br><br>",
  "quesType": "mcq",
  "op1": "Hasan Gangu",
  "op2": "Alauddin Bahman Shah",
  "op3": "Feroz Shah Bahmani",
  "op4": "Ahmad Shah Bahmani",
  "ans": "Alauddin Bahman Shah"
},
{
  "ques": "Who introduced the Mansabdari System?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Humayun",
  "op3": "Aurangzeb",
  "op4": "Babur",
  "ans": "Akbar"
},
{
  "ques": "Who was the first Indian woman to become a Cabinet Minister?<br><br>",
  "quesType": "mcq",
  "op1": "Vijaya Lakshmi Pandit",
  "op2": "Sarojini Naidu",
  "op3": "Rajkumari Amrit Kaur",
  "op4": "Indira Gandhi",
  "ans": "Rajkumari Amrit Kaur"
},
{
  "ques": "Which king built the Kailasa Temple at Ellora?<br><br>",
  "quesType": "mcq",
  "op1": "Krishna I",
  "op2": "Dantidurga",
  "op3": "Amoghavarsha",
  "op4": "Govinda III",
  "ans": "Krishna I"
},
{
  "ques": "Who wrote 'Indica'?<br><br>",
  "quesType": "mcq",
  "op1": "Megasthenes",
  "op2": "Ptolemy",
  "op3": "Fa-Hien",
  "op4": "Hiuen Tsang",
  "ans": "Megasthenes"
},
{
  "ques": "Who was the founder of the Ghadar Party?<br><br>",
  "quesType": "mcq",
  "op1": "Lala Har Dayal",
  "op2": "Bhagat Singh",
  "op3": "Sukhdev",
  "op4": "Chandrasekhar Azad",
  "ans": "Lala Har Dayal"
},
{
  "ques": "Who among the following was called the 'Father of Indian Unrest'?<br><br>",
  "quesType": "mcq",
  "op1": "Gopal Krishna Gokhale",
  "op2": "Dadabhai Naoroji",
  "op3": "Bal Gangadhar Tilak",
  "op4": "Lala Lajpat Rai",
  "ans": "Bal Gangadhar Tilak"
},
{
  "ques": "Who established the Widow Remarriage Association?<br><br>",
  "quesType": "mcq",
  "op1": "Dayanand Saraswati",
  "op2": "Ishwar Chandra Vidyasagar",
  "op3": "Raja Ram Mohan Roy",
  "op4": "Jyotiba Phule",
  "ans": "Ishwar Chandra Vidyasagar"
},
{
  "ques": "Who founded the city of Amritsar?<br><br>",
  "quesType": "mcq",
  "op1": "Guru Ram Das",
  "op2": "Guru Arjan Dev",
  "op3": "Guru Nanak",
  "op4": "Guru Gobind Singh",
  "ans": "Guru Ram Das"
},
{
  "ques": "Who was the founder of the Harappan Civilization?<br><br>",
  "quesType": "mcq",
  "op1": "Sir John Marshall",
  "op2": "Daya Ram Sahni",
  "op3": "R.D. Banerji",
  "op4": "Rakhal Das Banerjee",
  "ans": "Daya Ram Sahni"
}
,
{
  "ques": "Who among the following was called the 'Indian Machiavelli'?<br><br>",
  "quesType": "mcq",
  "op1": "Chanakya",
  "op2": "Kalidasa",
  "op3": "Patanjali",
  "op4": "Banabhatta",
  "ans": "Chanakya"
},
{
  "ques": "Who translated Kalhana’s Rajatarangini into Persian?<br><br>",
  "quesType": "mcq",
  "op1": "Abul Fazl",
  "op2": "Firishta",
  "op3": "Zain-ul-Abidin",
  "op4": "Nizamuddin",
  "ans": "Zain-ul-Abidin"
},
{
  "ques": "Who built the Gol Gumbaz at Bijapur?<br><br>",
  "quesType": "mcq",
  "op1": "Ibrahim Adil Shah I",
  "op2": "Ali Adil Shah I",
  "op3": "Mohammad Adil Shah",
  "op4": "Yusuf Adil Shah",
  "ans": "Mohammad Adil Shah"
},
{
  "ques": "Who was the first Sultan of Delhi to introduce the practice of Sijda?<br><br>",
  "quesType": "mcq",
  "op1": "Iltutmish",
  "op2": "Ghiyasuddin Balban",
  "op3": "Alauddin Khilji",
  "op4": "Firoz Shah Tughlaq",
  "ans": "Ghiyasuddin Balban"
},
{
  "ques": "Who was the first woman ruler of medieval India?<br><br>",
  "quesType": "mcq",
  "op1": "Nur Jahan",
  "op2": "Razia Sultan",
  "op3": "Durgavati",
  "op4": "Chand Bibi",
  "ans": "Razia Sultan"
},
{
  "ques": "Who among the following Bhakti saints was called 'Kabir of the South'?<br><br>",
  "quesType": "mcq",
  "op1": "Namdev",
  "op2": "Eknath",
  "op3": "Tukaram",
  "op4": "Ramanuja",
  "ans": "Tukaram"
},
{
  "ques": "Which Mughal emperor shifted his capital from Agra to Delhi permanently?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Jahangir",
  "op3": "Shah Jahan",
  "op4": "Aurangzeb",
  "ans": "Shah Jahan"
},
{
  "ques": "Who authored the Sanskrit play 'Mudrarakshasa'?<br><br>",
  "quesType": "mcq",
  "op1": "Bhasa",
  "op2": "Kalidasa",
  "op3": "Vishakhadatta",
  "op4": "Bhavabhuti",
  "ans": "Vishakhadatta"
},
{
  "ques": "Who abolished the Dual Government system in Bengal?<br><br>",
  "quesType": "mcq",
  "op1": "Warren Hastings",
  "op2": "Robert Clive",
  "op3": "Cornwallis",
  "op4": "Lord Wellesley",
  "ans": "Warren Hastings"
},
{
  "ques": "Which Delhi Sultan made Persian the official language of the Sultanate?<br><br>",
  "quesType": "mcq",
  "op1": "Qutb-ud-din Aibak",
  "op2": "Iltutmish",
  "op3": "Balban",
  "op4": "Alauddin Khilji",
  "ans": "Iltutmish"
},
{
  "ques": "Which Indian ruler defeated Muhammad Ghori the first time?<br><br>",
  "quesType": "mcq",
  "op1": "Prithviraj Chauhan",
  "op2": "Raja Jai Chand",
  "op3": "Rana Sanga",
  "op4": "Harsha",
  "ans": "Prithviraj Chauhan"
},
{
  "ques": "Who was the founder of the Ghadar Party?<br><br>",
  "quesType": "mcq",
  "op1": "Lala Har Dayal",
  "op2": "Bhagat Singh",
  "op3": "Sukhdev",
  "op4": "Rash Behari Bose",
  "ans": "Lala Har Dayal"
},
{
  "ques": "Which Sikh Guru compiled the Adi Granth?<br><br>",
  "quesType": "mcq",
  "op1": "Guru Angad",
  "op2": "Guru Amar Das",
  "op3": "Guru Arjan Dev",
  "op4": "Guru Tegh Bahadur",
  "ans": "Guru Arjan Dev"
},
{
  "ques": "Who among the following established the 'Servants of India Society'?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Bal Gangadhar Tilak",
  "op3": "Gopal Krishna Gokhale",
  "op4": "Mahatma Gandhi",
  "ans": "Gopal Krishna Gokhale"
},
{
  "ques": "Which Sultanate ruler wrote 'Tarikh-i-Firoz Shahi'?<br><br>",
  "quesType": "mcq",
  "op1": "Ghiyasuddin Tughlaq",
  "op2": "Firoz Shah Tughlaq",
  "op3": "Muhammad bin Tughlaq",
  "op4": "Iltutmish",
  "ans": "Firoz Shah Tughlaq"
},
{
  "ques": "Who was the first Indian ruler to organize Haj pilgrimage at state expense?<br><br>",
  "quesType": "mcq",
  "op1": "Alauddin Khilji",
  "op2": "Balban",
  "op3": "Firoz Shah Tughlaq",
  "op4": "Sher Shah Suri",
  "ans": "Firoz Shah Tughlaq"
},
{
  "ques": "Who introduced the Mansabdari System in India?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Humayun",
  "op3": "Akbar",
  "op4": "Jahangir",
  "ans": "Akbar"
},
{
  "ques": "Who was the British Viceroy during the partition of Bengal in 1905?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Curzon",
  "op2": "Lord Minto",
  "op3": "Lord Ripon",
  "op4": "Lord Hardinge",
  "ans": "Lord Curzon"
},
{
  "ques": "Who signed the Treaty of Seringapatam with Tipu Sultan?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Wellesley",
  "op2": "Lord Cornwallis",
  "op3": "Lord Hastings",
  "op4": "Robert Clive",
  "ans": "Lord Cornwallis"
},
{
  "ques": "Who started the 'Atmiya Sabha'?<br><br>",
  "quesType": "mcq",
  "op1": "Swami Vivekananda",
  "op2": "Raja Ram Mohan Roy",
  "op3": "Ishwar Chandra Vidyasagar",
  "op4": "Rabindranath Tagore",
  "ans": "Raja Ram Mohan Roy"
},
{
  "ques": "Which dynasty was associated with the Elephanta Caves?<br><br>",
  "quesType": "mcq",
  "op1": "Gupta",
  "op2": "Maurya",
  "op3": "Rashtrakuta",
  "op4": "Chalukya",
  "ans": "Rashtrakuta"
},
{
  "ques": "Who was the founder of the Satavahana Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Simuka",
  "op2": "Gautamiputra Satakarni",
  "op3": "Satakarni I",
  "op4": "Pulumavi",
  "ans": "Simuka"
},
{
  "ques": "Which Mughal emperor built the Pearl Mosque at Agra?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Humayun",
  "op3": "Aurangzeb",
  "op4": "Shah Jahan",
  "ans": "Shah Jahan"
},
{
  "ques": "Who was the first Gupta ruler to assume the title Maharajadhiraja?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta I",
  "op2": "Samudragupta",
  "op3": "Chandragupta II",
  "op4": "Skandagupta",
  "ans": "Chandragupta I"
},
{
  "ques": "Who was called the 'Prince of Beggars'?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Gopal Krishna Gokhale",
  "op3": "C Rajagopalachari",
  "op4": "C F Andrews",
  "ans": "C F Andrews"
},
{
  "ques": "Who was the first Indian woman to become President of the Indian National Congress?<br><br>",
  "quesType": "mcq",
  "op1": "Sarojini Naidu",
  "op2": "Annie Besant",
  "op3": "Vijayalakshmi Pandit",
  "op4": "Indira Gandhi",
  "ans": "Annie Besant"
},
{
  "ques": "Which Mughal emperor banned music from his court?<br><br>",
  "quesType": "mcq",
  "op1": "Jahangir",
  "op2": "Akbar",
  "op3": "Aurangzeb",
  "op4": "Shah Jahan",
  "ans": "Aurangzeb"
},
{
  "ques": "Who wrote 'Ain-i-Akbari'?<br><br>",
  "quesType": "mcq",
  "op1": "Abul Fazl",
  "op2": "Birbal",
  "op3": "Todar Mal",
  "op4": "Badauni",
  "ans": "Abul Fazl"
},
{
  "ques": "Who was the founder of the Vikramashila University?<br><br>",
  "quesType": "mcq",
  "op1": "Harsha",
  "op2": "Dharampala",
  "op3": "Gopala",
  "op4": "Devapala",
  "ans": "Dharampala"
}
,
{
  "ques": "Who presided over the first session of the Indian National Congress in 1885?<br><br>",
  "quesType": "mcq",
  "op1": "A.O. Hume",
  "op2": "W.C. Bonnerjee",
  "op3": "Dadabhai Naoroji",
  "op4": "Gopal Krishna Gokhale",
  "ans": "W.C. Bonnerjee"
},
{
  "ques": "In which year did the Partition of Bengal take place?<br><br>",
  "quesType": "mcq",
  "op1": "1905",
  "op2": "1907",
  "op3": "1911",
  "op4": "1895",
  "ans": "1905"
},
{
  "ques": "Which revolutionary was known as the 'Father of Indian Unrest'?<br><br>",
  "quesType": "mcq",
  "op1": "Lala Lajpat Rai",
  "op2": "Bal Gangadhar Tilak",
  "op3": "Bipin Chandra Pal",
  "op4": "Dadabhai Naoroji",
  "ans": "Bal Gangadhar Tilak"
},
{
  "ques": "Who founded the Ghadar Party?<br><br>",
  "quesType": "mcq",
  "op1": "Lala Har Dayal",
  "op2": "Bhagat Singh",
  "op3": "Rash Behari Bose",
  "op4": "Chittaranjan Das",
  "ans": "Lala Har Dayal"
},
{
  "ques": "Which act is known as the 'Black Act'?<br><br>",
  "quesType": "mcq",
  "op1": "Rowlatt Act",
  "op2": "Ilbert Bill",
  "op3": "Pitt's India Act",
  "op4": "Vernacular Press Act",
  "ans": "Rowlatt Act"
},
{
  "ques": "Who gave the slogan 'Do or Die'?<br><br>",
  "quesType": "mcq",
  "op1": "Subhas Chandra Bose",
  "op2": "Bhagat Singh",
  "op3": "Mahatma Gandhi",
  "op4": "Jawaharlal Nehru",
  "ans": "Mahatma Gandhi"
},
{
  "ques": "Who was the Viceroy of India during the Jallianwala Bagh massacre?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Chelmsford",
  "op2": "Lord Curzon",
  "op3": "Lord Irwin",
  "op4": "Lord Minto",
  "ans": "Lord Chelmsford"
},
{
  "ques": "Which revolutionary threw a bomb in the Central Legislative Assembly?<br><br>",
  "quesType": "mcq",
  "op1": "Chandra Shekhar Azad",
  "op2": "Bhagat Singh",
  "op3": "Sukhdev",
  "op4": "Rajguru",
  "ans": "Bhagat Singh"
},
{
  "ques": "Who led the Salt Satyagraha from Tamil Nadu?<br><br>",
  "quesType": "mcq",
  "op1": "K. Kamaraj",
  "op2": "C. Rajagopalachari",
  "op3": "Periyar",
  "op4": "Annie Besant",
  "ans": "C. Rajagopalachari"
},
{
  "ques": "Who was the founder of the Prarthana Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Atmaram Pandurang",
  "op2": "Dayanand Saraswati",
  "op3": "Swami Vivekananda",
  "op4": "Raja Ram Mohan Roy",
  "ans": "Atmaram Pandurang"
},
{
  "ques": "Who wrote the book 'Poverty and Un-British Rule in India'?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Gopal Krishna Gokhale",
  "op3": "Bal Gangadhar Tilak",
  "op4": "Mahatma Gandhi",
  "ans": "Dadabhai Naoroji"
},
{
  "ques": "Which Viceroy introduced the Doctrine of Lapse?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Dalhousie",
  "op2": "Lord Canning",
  "op3": "Lord Wellesley",
  "op4": "Lord Ripon",
  "ans": "Lord Dalhousie"
},
{
  "ques": "Who presided over the Lahore Session of the INC in 1929?<br><br>",
  "quesType": "mcq",
  "op1": "Mahatma Gandhi",
  "op2": "Jawaharlal Nehru",
  "op3": "Subhas Chandra Bose",
  "op4": "Motilal Nehru",
  "ans": "Jawaharlal Nehru"
},
{
  "ques": "Who is known as the Grand Old Man of India?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Gopal Krishna Gokhale",
  "op3": "Bal Gangadhar Tilak",
  "op4": "Bipin Chandra Pal",
  "ans": "Dadabhai Naoroji"
},
{
  "ques": "Who gave the call of 'Complete Independence' for India for the first time?<br><br>",
  "quesType": "mcq",
  "op1": "Bal Gangadhar Tilak",
  "op2": "Subhas Chandra Bose",
  "op3": "Jawaharlal Nehru",
  "op4": "Mahatma Gandhi",
  "ans": "Jawaharlal Nehru"
},
{
  "ques": "Which leader was popularly known as 'Frontier Gandhi'?<br><br>",
  "quesType": "mcq",
  "op1": "Maulana Abul Kalam Azad",
  "op2": "Khan Abdul Ghaffar Khan",
  "op3": "Rajendra Prasad",
  "op4": "Sarojini Naidu",
  "ans": "Khan Abdul Ghaffar Khan"
},
{
  "ques": "Who started the Home Rule Movement in India?<br><br>",
  "quesType": "mcq",
  "op1": "Bal Gangadhar Tilak",
  "op2": "Annie Besant",
  "op3": "Both A and B",
  "op4": "Dadabhai Naoroji",
  "ans": "Both A and B"
},
{
  "ques": "Who was the first Indian woman president of the Indian National Congress?<br><br>",
  "quesType": "mcq",
  "op1": "Annie Besant",
  "op2": "Sarojini Naidu",
  "op3": "Indira Gandhi",
  "op4": "Vijaya Lakshmi Pandit",
  "ans": "Annie Besant"
},
{
  "ques": "Which revolt is known as the 'First War of Indian Independence'?<br><br>",
  "quesType": "mcq",
  "op1": "Revolt of 1857",
  "op2": "Sepoy Mutiny",
  "op3": "Both A and B",
  "op4": "None of these",
  "ans": "Both A and B"
},
{
  "ques": "Which Governor-General is known for the introduction of English education in India?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Macaulay",
  "op2": "Lord Ripon",
  "op3": "Lord William Bentinck",
  "op4": "Lord Cornwallis",
  "ans": "Lord William Bentinck"
},
{
  "ques": "Which leader said 'Give me blood, and I shall give you freedom'?<br><br>",
  "quesType": "mcq",
  "op1": "Bhagat Singh",
  "op2": "Subhas Chandra Bose",
  "op3": "Jawaharlal Nehru",
  "op4": "Bal Gangadhar Tilak",
  "ans": "Subhas Chandra Bose"
},
{
  "ques": "Who formed the 'Hindustan Socialist Republican Association'?<br><br>",
  "quesType": "mcq",
  "op1": "Bhagat Singh",
  "op2": "Chandra Shekhar Azad",
  "op3": "Ram Prasad Bismil",
  "op4": "All of these",
  "ans": "All of these"
},
{
  "ques": "Who led the Kakori Train Robbery?<br><br>",
  "quesType": "mcq",
  "op1": "Bhagat Singh",
  "op2": "Chandra Shekhar Azad",
  "op3": "Ram Prasad Bismil",
  "op4": "Sukhdev",
  "ans": "Ram Prasad Bismil"
},
{
  "ques": "Who founded the Theosophical Society in India?<br><br>",
  "quesType": "mcq",
  "op1": "Annie Besant",
  "op2": "Madam Blavatsky",
  "op3": "Both A and B",
  "op4": "Dayanand Saraswati",
  "ans": "Both A and B"
},
{
  "ques": "Who was the founder of the Aligarh Movement?<br><br>",
  "quesType": "mcq",
  "op1": "Syed Ahmed Khan",
  "op2": "Maulana Abul Kalam Azad",
  "op3": "Badruddin Tyabji",
  "op4": "Sir Muhammad Iqbal",
  "ans": "Syed Ahmed Khan"
},
{
  "ques": "In which year was the Simon Commission appointed?<br><br>",
  "quesType": "mcq",
  "op1": "1927",
  "op2": "1928",
  "op3": "1930",
  "op4": "1932",
  "ans": "1927"
},
{
  "ques": "Who gave the slogan 'Jai Jawan Jai Kisan'?<br><br>",
  "quesType": "mcq",
  "op1": "Jawaharlal Nehru",
  "op2": "Indira Gandhi",
  "op3": "Lal Bahadur Shastri",
  "op4": "Rajiv Gandhi",
  "ans": "Lal Bahadur Shastri"
},
{
  "ques": "Which revolutionary published the journal 'Bande Mataram'?<br><br>",
  "quesType": "mcq",
  "op1": "Aurobindo Ghosh",
  "op2": "Lala Lajpat Rai",
  "op3": "Bal Gangadhar Tilak",
  "op4": "Subhas Chandra Bose",
  "ans": "Aurobindo Ghosh"
},
{
  "ques": "Who coined the term 'Drain of Wealth'?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Mahatma Gandhi",
  "op3": "Gopal Krishna Gokhale",
  "op4": "Subhas Chandra Bose",
  "ans": "Dadabhai Naoroji"
},
 {
    "ques": "Who wrote the Arthashastra?<br><br>",
    "quesType": "mcq",
    "op1": "Kautilya",
    "op2": "Patanjali",
    "op3": "Vatsyayana",
    "op4": "Panini",
    "ans": "Kautilya"
  },
  {
    "ques": "Who was the last ruler of the Mauryan dynasty?<br><br>",
    "quesType": "mcq",
    "op1": "Ashoka",
    "op2": "Brihadratha",
    "op3": "Bindusara",
    "op4": "Chandragupta Maurya",
    "ans": "Brihadratha"
  },
  {
    "ques": "The Battle of Talikota was fought between the Deccan Sultanates and which empire?<br><br>",
    "quesType": "mcq",
    "op1": "Chola Empire",
    "op2": "Mughal Empire",
    "op3": "Vijayanagara Empire",
    "op4": "Maratha Empire",
    "ans": "Vijayanagara Empire"
  },
  {
    "ques": "Who built the Kailasa Temple at Ellora?<br><br>",
    "quesType": "mcq",
    "op1": "Krishna I",
    "op2": "Pulakesin II",
    "op3": "Harsha",
    "op4": "Rajaraja Chola",
    "ans": "Krishna I"
  },
  {
    "ques": "Who issued the Allahabad Pillar inscription?<br><br>",
    "quesType": "mcq",
    "op1": "Ashoka",
    "op2": "Samudragupta",
    "op3": "Harsha",
    "op4": "Chandragupta II",
    "ans": "Samudragupta"
  },
  {
    "ques": "Who was the founder of the Pallava dynasty?<br><br>",
    "quesType": "mcq",
    "op1": "Simhavishnu",
    "op2": "Mahendravarman I",
    "op3": "Narasimhavarman I",
    "op4": "Nandivarman",
    "ans": "Simhavishnu"
  },
  {
    "ques": "The famous Bhimbetka caves are associated with which age?<br><br>",
    "quesType": "mcq",
    "op1": "Bronze Age",
    "op2": "Iron Age",
    "op3": "Neolithic Age",
    "op4": "Paleolithic Age",
    "ans": "Paleolithic Age"
  },
  {
    "ques": "Which Sultan of Delhi transferred his capital from Delhi to Daulatabad?<br><br>",
    "quesType": "mcq",
    "op1": "Balban",
    "op2": "Alauddin Khilji",
    "op3": "Ghiyasuddin Tughlaq",
    "op4": "Muhammad bin Tughlaq",
    "ans": "Muhammad bin Tughlaq"
  },
  {
    "ques": "Who founded the city of Fatehpur Sikri?<br><br>",
    "quesType": "mcq",
    "op1": "Babur",
    "op2": "Akbar",
    "op3": "Humayun",
    "op4": "Sher Shah Suri",
    "ans": "Akbar"
  },
  {
    "ques": "Who was known as the 'Napoleon of India'?<br><br>",
    "quesType": "mcq",
    "op1": "Chandragupta Maurya",
    "op2": "Samudragupta",
    "op3": "Harsha",
    "op4": "Krishnadevaraya",
    "ans": "Samudragupta"
  },
  {
    "ques": "Who built the Grand Trunk Road?<br><br>",
    "quesType": "mcq",
    "op1": "Sher Shah Suri",
    "op2": "Akbar",
    "op3": "Ashoka",
    "op4": "Babur",
    "ans": "Sher Shah Suri"
  },
  {
    "ques": "Who was the founder of the Chola dynasty?<br><br>",
    "quesType": "mcq",
    "op1": "Rajendra Chola",
    "op2": "Rajaraja Chola I",
    "op3": "Vijayalaya Chola",
    "op4": "Kulothunga Chola",
    "ans": "Vijayalaya Chola"
  },
  {
    "ques": "Which Mughal ruler was defeated by Sher Shah Suri?<br><br>",
    "quesType": "mcq",
    "op1": "Akbar",
    "op2": "Humayun",
    "op3": "Babur",
    "op4": "Aurangzeb",
    "ans": "Humayun"
  },
  {
    "ques": "Who was the last great Mughal emperor?<br><br>",
    "quesType": "mcq",
    "op1": "Bahadur Shah II",
    "op2": "Aurangzeb",
    "op3": "Shah Jahan",
    "op4": "Akbar II",
    "ans": "Aurangzeb"
  },
  {
    "ques": "Who composed the 'Prithviraj Raso'?<br><br>",
    "quesType": "mcq",
    "op1": "Tulsidas",
    "op2": "Kalhana",
    "op3": "Chand Bardai",
    "op4": "Banabhatta",
    "ans": "Chand Bardai"
  },
  {
    "ques": "Who was the founder of the Slave Dynasty?<br><br>",
    "quesType": "mcq",
    "op1": "Qutb-ud-din Aibak",
    "op2": "Iltutmish",
    "op3": "Balban",
    "op4": "Alauddin Khilji",
    "ans": "Qutb-ud-din Aibak"
  },
  {
    "ques": "Which king introduced Persian as the court language of India?<br><br>",
    "quesType": "mcq",
    "op1": "Sher Shah Suri",
    "op2": "Akbar",
    "op3": "Balban",
    "op4": "Alauddin Khilji",
    "ans": "Akbar"
  },
  {
    "ques": "Who built the Red Fort in Delhi?<br><br>",
    "quesType": "mcq",
    "op1": "Akbar",
    "op2": "Jahangir",
    "op3": "Shah Jahan",
    "op4": "Aurangzeb",
    "ans": "Shah Jahan"
  },
  {
    "ques": "The Second Battle of Tarain was fought between Prithviraj Chauhan and whom?<br><br>",
    "quesType": "mcq",
    "op1": "Iltutmish",
    "op2": "Qutb-ud-din Aibak",
    "op3": "Muhammad Ghori",
    "op4": "Mahmud of Ghazni",
    "ans": "Muhammad Ghori"
  },
  {
    "ques": "Which Pala ruler founded the Vikramashila University?<br><br>",
    "quesType": "mcq",
    "op1": "Dharmapala",
    "op2": "Gopala",
    "op3": "Devapala",
    "op4": "Mahipala",
    "ans": "Dharmapala"
  },
  {
    "ques": "Who was the first woman ruler of Delhi?<br><br>",
    "quesType": "mcq",
    "op1": "Nur Jahan",
    "op2": "Razia Sultan",
    "op3": "Chand Bibi",
    "op4": "Jodha Bai",
    "ans": "Razia Sultan"
  },
  {
    "ques": "Which battle marked the beginning of Mughal rule in India?<br><br>",
    "quesType": "mcq",
    "op1": "Battle of Khanwa",
    "op2": "First Battle of Panipat",
    "op3": "Second Battle of Panipat",
    "op4": "Battle of Plassey",
    "ans": "First Battle of Panipat"
  },
  {
    "ques": "Who introduced the Mansabdari system?<br><br>",
    "quesType": "mcq",
    "op1": "Babur",
    "op2": "Sher Shah Suri",
    "op3": "Akbar",
    "op4": "Jahangir",
    "ans": "Akbar"
  },
  {
    "ques": "The ancient city of Takshashila was famous for its:<br><br>",
    "quesType": "mcq",
    "op1": "Trade",
    "op2": "Education",
    "op3": "Sculpture",
    "op4": "Silk Production",
    "ans": "Education"
  },
  {
    "ques": "Who among the following issued the coin of gold dinar?<br><br>",
    "quesType": "mcq",
    "op1": "Chandragupta Maurya",
    "op2": "Ashoka",
    "op3": "Samudragupta",
    "op4": "Harsha",
    "ans": "Samudragupta"
  },
  {
    "ques": "Which king built the Sun Temple at Konark?<br><br>",
    "quesType": "mcq",
    "op1": "Narasimhadeva I",
    "op2": "Rajaraja I",
    "op3": "Pulakesin II",
    "op4": "Krishnadevaraya",
    "ans": "Narasimhadeva I"
  },
  {
    "ques": "Which ancient Indian king defeated Seleucus Nicator?<br><br>",
    "quesType": "mcq",
    "op1": "Ashoka",
    "op2": "Chandragupta Maurya",
    "op3": "Samudragupta",
    "op4": "Bindusara",
    "ans": "Chandragupta Maurya"
  },
  {
    "ques": "Who is known as the 'Father of Indian Renaissance'?<br><br>",
    "quesType": "mcq",
    "op1": "Mahatma Gandhi",
    "op2": "Dadabhai Naoroji",
    "op3": "Raja Ram Mohan Roy",
    "op4": "Gopal Krishna Gokhale",
    "ans": "Raja Ram Mohan Roy"
  },
  {
    "ques": "Who founded the Vikramaditya dynasty?<br><br>",
    "quesType": "mcq",
    "op1": "Chandragupta I",
    "op2": "Chandragupta II",
    "op3": "Samudragupta",
    "op4": "Skandagupta",
    "ans": "Chandragupta II"
  },
  {
      "ques": "Who composed the 'Rajatarangini', the earliest known chronicle of Kashmir?<br><br>",
      "quesType": "mcq",
      "op1": "Kalhana",
      "op2": "Bilhana",
      "op3": "Kalidasa",
      "op4": "Bana",
      "ans": "Kalhana"
    },
    {
      "ques": "Which ruler is known as the 'Napoleon of India'?<br><br>",
      "quesType": "mcq",
      "op1": "Samudragupta",
      "op2": "Chandragupta Maurya",
      "op3": "Harsha",
      "op4": "Pulakeshin II",
      "ans": "Samudragupta"
    },
    {
      "ques": "The Allahabad Pillar Inscription is associated with which king?<br><br>",
      "quesType": "mcq",
      "op1": "Ashoka",
      "op2": "Harsha",
      "op3": "Samudragupta",
      "op4": "Chandragupta II",
      "ans": "Samudragupta"
    },
    {
      "ques": "Who wrote 'Kitab-ul-Hind'?<br><br>",
      "quesType": "mcq",
      "op1": "Ibn Battuta",
      "op2": "Al-Biruni",
      "op3": "Firdausi",
      "op4": "Amir Khusrau",
      "ans": "Al-Biruni"
    },
    {
      "ques": "Which Sultan shifted his capital from Delhi to Daulatabad?<br><br>",
      "quesType": "mcq",
      "op1": "Iltutmish",
      "op2": "Ghiyasuddin Tughlaq",
      "op3": "Muhammad bin Tughlaq",
      "op4": "Firoz Shah Tughlaq",
      "ans": "Muhammad bin Tughlaq"
    },
    {
      "ques": "Who was the last ruler of the Tughlaq dynasty?<br><br>",
      "quesType": "mcq",
      "op1": "Ghiyasuddin Tughlaq Shah II",
      "op2": "Nasiruddin Mahmud",
      "op3": "Firoz Shah Tughlaq",
      "op4": "Mahmud Shah Tughlaq",
      "ans": "Nasiruddin Mahmud"
    },
    {
      "ques": "The famous Kohinoor diamond was found during the reign of which dynasty?<br><br>",
      "quesType": "mcq",
      "op1": "Maurya",
      "op2": "Kakatiya",
      "op3": "Vijayanagara",
      "op4": "Chola",
      "ans": "Kakatiya"
    },
    {
      "ques": "Which Mughal emperor introduced the Mansabdari system?<br><br>",
      "quesType": "mcq",
      "op1": "Babur",
      "op2": "Humayun",
      "op3": "Akbar",
      "op4": "Aurangzeb",
      "ans": "Akbar"
    },
    {
      "ques": "Who constructed the Grand Trunk Road?<br><br>",
      "quesType": "mcq",
      "op1": "Sher Shah Suri",
      "op2": "Akbar",
      "op3": "Jahangir",
      "op4": "Shah Jahan",
      "ans": "Sher Shah Suri"
    },
    {
      "ques": "Which Chola king conquered Sri Lanka?<br><br>",
      "quesType": "mcq",
      "op1": "Rajendra Chola I",
      "op2": "Rajaraja Chola I",
      "op3": "Vijayalaya Chola",
      "op4": "Kulottunga Chola I",
      "ans": "Rajendra Chola I"
    },
    {
      "ques": "Who was the author of 'Ain-i-Akbari'?<br><br>",
      "quesType": "mcq",
      "op1": "Ibn Battuta",
      "op2": "Badauni",
      "op3": "Abul Fazl",
      "op4": "Al-Biruni",
      "ans": "Abul Fazl"
    },
    {
      "ques": "Who defeated Muhammad Ghori near Mount Abu?<br><br>",
      "quesType": "mcq",
      "op1": "Prithviraj Chauhan",
      "op2": "Bhima II",
      "op3": "Jaichand",
      "op4": "Raja Dahir",
      "ans": "Bhima II"
    },
    {
      "ques": "The Battle of Talikota was fought between Vijayanagara and which alliance?<br><br>",
      "quesType": "mcq",
      "op1": "Bahmani Kingdom",
      "op2": "Deccan Sultanates",
      "op3": "Mughals",
      "op4": "Chalukyas",
      "ans": "Deccan Sultanates"
    },
    {
      "ques": "Who was the founder of the Bahmani Kingdom?<br><br>",
      "quesType": "mcq",
      "op1": "Alauddin Bahman Shah",
      "op2": "Mahmud Gawan",
      "op3": "Firuz Shah Bahmani",
      "op4": "Adil Shah",
      "ans": "Alauddin Bahman Shah"
    },
    {
      "ques": "Who wrote the book 'Arthashastra'?<br><br>",
      "quesType": "mcq",
      "op1": "Megasthenes",
      "op2": "Patanjali",
      "op3": "Chanakya",
      "op4": "Kalidasa",
      "ans": "Chanakya"
    },
    {
      "ques": "Who among the following visited the court of Harsha?<br><br>",
      "quesType": "mcq",
      "op1": "Fa-Hien",
      "op2": "Hiuen Tsang",
      "op3": "Marco Polo",
      "op4": "Megasthenes",
      "ans": "Hiuen Tsang"
    },
    {
      "ques": "Who was the first Indian ruler to organize a standing army?<br><br>",
      "quesType": "mcq",
      "op1": "Ashoka",
      "op2": "Chandragupta Maurya",
      "op3": "Samudragupta",
      "op4": "Harsha",
      "ans": "Chandragupta Maurya"
    },
    {
      "ques": "Which Mughal ruler banned music and dance in his court?<br><br>",
      "quesType": "mcq",
      "op1": "Akbar",
      "op2": "Jahangir",
      "op3": "Shah Jahan",
      "op4": "Aurangzeb",
      "ans": "Aurangzeb"
    },
    {
      "ques": "Which Delhi Sultan introduced the token currency?<br><br>",
      "quesType": "mcq",
      "op1": "Alauddin Khilji",
      "op2": "Balban",
      "op3": "Iltutmish",
      "op4": "Muhammad bin Tughlaq",
      "ans": "Muhammad bin Tughlaq"
    },
    {
      "ques": "Who defeated Humayun and occupied Delhi?<br><br>",
      "quesType": "mcq",
      "op1": "Sher Shah Suri",
      "op2": "Babur",
      "op3": "Bahadur Shah",
      "op4": "Hemu",
      "ans": "Sher Shah Suri"
    },
    {
      "ques": "Which Viceroy partitioned Bengal in 1905?<br><br>",
      "quesType": "mcq",
      "op1": "Lord Curzon",
      "op2": "Lord Ripon",
      "op3": "Lord Canning",
      "op4": "Lord Hardinge",
      "ans": "Lord Curzon"
    },
    {
      "ques": "Who was the first Indian to qualify ICS exam?<br><br>",
      "quesType": "mcq",
      "op1": "Dadabhai Naoroji",
      "op2": "R.C. Dutt",
      "op3": "Satyendranath Tagore",
      "op4": "Surendranath Banerjee",
      "ans": "Satyendranath Tagore"
    },
    {
      "ques": "Who founded the Banaras Hindu University?<br><br>",
      "quesType": "mcq",
      "op1": "Madam Cama",
      "op2": "Annie Besant",
      "op3": "Pandit Madan Mohan Malaviya",
      "op4": "Raja Ram Mohan Roy",
      "ans": "Pandit Madan Mohan Malaviya"
    },
    {
      "ques": "Who founded the 'Servants of India Society'?<br><br>",
      "quesType": "mcq",
      "op1": "Gopal Krishna Gokhale",
      "op2": "Dadabhai Naoroji",
      "op3": "Surendranath Banerjee",
      "op4": "B.G. Tilak",
      "ans": "Gopal Krishna Gokhale"
    },
    {
      "ques": "Who presided over the first session of Indian National Congress?<br><br>",
      "quesType": "mcq",
      "op1": "W.C. Bannerjee",
      "op2": "Dadabhai Naoroji",
      "op3": "A.O. Hume",
      "op4": "Gopal Krishna Gokhale",
      "ans": "W.C. Bannerjee"
    },
    {
      "ques": "Which revolutionary was known as 'Punjab Kesari'?<br><br>",
      "quesType": "mcq",
      "op1": "Bal Gangadhar Tilak",
      "op2": "Lala Lajpat Rai",
      "op3": "Bipin Chandra Pal",
      "op4": "Bhagat Singh",
      "ans": "Lala Lajpat Rai"
    },
    {
      "ques": "Who wrote the book 'Discovery of India'?<br><br>",
      "quesType": "mcq",
      "op1": "Mahatma Gandhi",
      "op2": "Subhash Chandra Bose",
      "op3": "Jawaharlal Nehru",
      "op4": "B.R. Ambedkar",
      "ans": "Jawaharlal Nehru"
    },
    {
      "ques": "Which Indian freedom fighter founded the Forward Bloc?<br><br>",
      "quesType": "mcq",
      "op1": "Jawaharlal Nehru",
      "op2": "Mahatma Gandhi",
      "op3": "Subhash Chandra Bose",
      "op4": "Sardar Patel",
      "ans": "Subhash Chandra Bose"
    },
    {
      "ques": "Who gave the slogan 'Swaraj is my birthright and I shall have it'?<br><br>",
      "quesType": "mcq",
      "op1": "Bal Gangadhar Tilak",
      "op2": "Gopal Krishna Gokhale",
      "op3": "Dadabhai Naoroji",
      "op4": "Bipin Chandra Pal",
      "ans": "Bal Gangadhar Tilak"
    },
    {
  "ques": "Who was the author of the Sanskrit play 'Mudrarakshasa'?<br><br>",
  "quesType": "mcq",
  "op1": "Kalidasa",
  "op2": "Vishakhadatta",
  "op3": "Bhasa",
  "op4": "Bhavabhuti",
  "ans": "Vishakhadatta"
},
{
  "ques": "Which early medieval king assumed the title 'Parameswara'?<br><br>",
  "quesType": "mcq",
  "op1": "Rajaraja Chola I",
  "op2": "Harsha",
  "op3": "Rajendra Chola I",
  "op4": "Pulakesin II",
  "ans": "Rajaraja Chola I"
},
{
  "ques": "Who built the Vijay Stambha at Chittorgarh?<br><br>",
  "quesType": "mcq",
  "op1": "Rana Kumbha",
  "op2": "Rana Pratap",
  "op3": "Rana Sanga",
  "op4": "Rana Udai Singh",
  "ans": "Rana Kumbha"
},
{
  "ques": "The 'Ain-i-Akbari' was written by whom?<br><br>",
  "quesType": "mcq",
  "op1": "Badauni",
  "op2": "Abul Fazl",
  "op3": "Nizamuddin",
  "op4": "Amir Khusrau",
  "ans": "Abul Fazl"
},
{
  "ques": "Which Sultan introduced the 'Dagh' and 'Chehra' system in his army?<br><br>",
  "quesType": "mcq",
  "op1": "Iltutmish",
  "op2": "Alauddin Khilji",
  "op3": "Balban",
  "op4": "Muhammad bin Tughlaq",
  "ans": "Alauddin Khilji"
},
{
  "ques": "Who wrote 'Rajatarangini', the history of Kashmir?<br><br>",
  "quesType": "mcq",
  "op1": "Kalhana",
  "op2": "Bilhana",
  "op3": "Banabhatta",
  "op4": "Vishakhadatta",
  "ans": "Kalhana"
},
{
  "ques": "Who was the first Mughal emperor to introduce the Mansabdari system?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Humayun",
  "op3": "Akbar",
  "op4": "Jahangir",
  "ans": "Akbar"
},
{
  "ques": "Who among the following built the 'Bibi ka Maqbara' at Aurangabad?<br><br>",
  "quesType": "mcq",
  "op1": "Shah Jahan",
  "op2": "Aurangzeb",
  "op3": "Akbar",
  "op4": "Bahadur Shah I",
  "ans": "Aurangzeb"
},
{
  "ques": "The famous rock-cut temples at Elephanta were built by which dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Chalukyas",
  "op2": "Rashtrakutas",
  "op3": "Satavahanas",
  "op4": "Mauryas",
  "ans": "Rashtrakutas"
},
{
  "ques": "Who among the following was the founder of the Vijayanagar Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Krishnadevaraya",
  "op2": "Harihara I and Bukka",
  "op3": "Devaraya II",
  "op4": "Saluva Narasimha",
  "ans": "Harihara I and Bukka"
},
{
  "ques": "Who composed the 'Gita Govinda'?<br><br>",
  "quesType": "mcq",
  "op1": "Jayadeva",
  "op2": "Kalidasa",
  "op3": "Bhavabhuti",
  "op4": "Banabhatta",
  "ans": "Jayadeva"
},
{
  "ques": "Which Mughal ruler shifted the capital from Agra to Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Jahangir",
  "op3": "Shah Jahan",
  "op4": "Aurangzeb",
  "ans": "Shah Jahan"
},
{
  "ques": "The Battle of Talikota ended which empire?<br><br>",
  "quesType": "mcq",
  "op1": "Bahmani",
  "op2": "Mughal",
  "op3": "Vijayanagar",
  "op4": "Chola",
  "ans": "Vijayanagar"
},
{
  "ques": "Which ruler built the Sun Temple at Konark?<br><br>",
  "quesType": "mcq",
  "op1": "Narasingha Deva I",
  "op2": "Anantavarman Chodaganga Deva",
  "op3": "Rajendra Chola",
  "op4": "Krishnadevaraya",
  "ans": "Narasingha Deva I"
},
{
  "ques": "Who founded the city of Fatehpur Sikri?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Humayun",
  "op3": "Akbar",
  "op4": "Jahangir",
  "ans": "Akbar"
},
{
  "ques": "Who among the following was called 'Jagadguru Badshah'?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Aurangzeb",
  "op3": "Shivaji",
  "op4": "Krishnadevaraya",
  "ans": "Krishnadevaraya"
},
{
  "ques": "Who was the last ruler of the Mauryan dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Brihadratha",
  "op2": "Devavarman",
  "op3": "Pushyamitra",
  "op4": "Chandragupta Maurya",
  "ans": "Brihadratha"
},
{
  "ques": "Who among the following was defeated in the Second Battle of Tarain?<br><br>",
  "quesType": "mcq",
  "op1": "Prithviraj Chauhan",
  "op2": "Muhammad Ghori",
  "op3": "Iltutmish",
  "op4": "Qutubuddin Aibak",
  "ans": "Prithviraj Chauhan"
},
{
  "ques": "The founder of the Sayyid dynasty was?<br><br>",
  "quesType": "mcq",
  "op1": "Khusrau Shah",
  "op2": "Khizr Khan",
  "op3": "Mubarak Shah",
  "op4": "Firoz Shah Tughlaq",
  "ans": "Khizr Khan"
},
{
  "ques": "Who was the first ruler of the Slave Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Iltutmish",
  "op2": "Qutubuddin Aibak",
  "op3": "Balban",
  "op4": "Razia Sultan",
  "ans": "Qutubuddin Aibak"
},
{
  "ques": "Who among the following introduced Persian as the court language of the Delhi Sultanate?<br><br>",
  "quesType": "mcq",
  "op1": "Iltutmish",
  "op2": "Qutubuddin Aibak",
  "op3": "Balban",
  "op4": "Alauddin Khilji",
  "ans": "Iltutmish"
},
{
  "ques": "Who constructed the Grand Trunk Road?<br><br>",
  "quesType": "mcq",
  "op1": "Sher Shah Suri",
  "op2": "Akbar",
  "op3": "Ashoka",
  "op4": "Chandragupta Maurya",
  "ans": "Sher Shah Suri"
},
{
  "ques": "Who was the founder of the Pala dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Gopala",
  "op2": "Dharma Pala",
  "op3": "Devapala",
  "op4": "Mahipala",
  "ans": "Gopala"
},
{
  "ques": "Which Mughal emperor was known as 'Zinda Pir'?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Aurangzeb",
  "op3": "Bahadur Shah I",
  "op4": "Shah Jahan",
  "ans": "Aurangzeb"
},
{
  "ques": "Who translated 'Mahabharata' into Persian and named it 'Razmnama'?<br><br>",
  "quesType": "mcq",
  "op1": "Abul Fazl",
  "op2": "Akbar",
  "op3": "Badauni",
  "op4": "Faizi",
  "ans": "Akbar"
},
{
  "ques": "Who among the following built the 'Qutub Minar'?<br><br>",
  "quesType": "mcq",
  "op1": "Qutubuddin Aibak",
  "op2": "Iltutmish",
  "op3": "Alauddin Khilji",
  "op4": "Firoz Shah Tughlaq",
  "ans": "Qutubuddin Aibak"
},
{
  "ques": "Who was the first Sultan of Delhi to issue regular currency and maintain a standing army?<br><br>",
  "quesType": "mcq",
  "op1": "Iltutmish",
  "op2": "Balban",
  "op3": "Qutubuddin Aibak",
  "op4": "Alauddin Khilji",
  "ans": "Iltutmish"
},
{
  "ques": "Which ruler defeated Harsha and stopped his expansion towards the south?<br><br>",
  "quesType": "mcq",
  "op1": "Pulakesin II",
  "op2": "Narasimha Varma Pallava",
  "op3": "Mahendravarman I",
  "op4": "Krishnadevaraya",
  "ans": "Pulakesin II"
},
{
  "ques": "Which of the following Mughal emperors banned music in the royal court?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Aurangzeb",
  "op3": "Jahangir",
  "op4": "Shah Jahan",
  "ans": "Aurangzeb"
},
{
  "ques": "Who among the following was the first Sultan to set up a permanent spy system?<br><br>",
  "quesType": "mcq",
  "op1": "Alauddin Khilji",
  "op2": "Iltutmish",
  "op3": "Balban",
  "op4": "Qutubuddin Aibak",
  "ans": "Alauddin Khilji"
}
,
{
  "ques": "Who among the following is known as the 'Napoleon of South India'?<br><br>",
  "quesType": "mcq",
  "op1": "Rajendra Chola",
  "op2": "Rajaraja Chola I",
  "op3": "Krishnadevaraya",
  "op4": "Pulakesin II",
  "ans": "Rajendra Chola"
},
{
  "ques": "Who was the first Delhi Sultan to introduce the practice of 'Sijda' and 'Paibos'?<br><br>",
  "quesType": "mcq",
  "op1": "Alauddin Khilji",
  "op2": "Iltutmish",
  "op3": "Balban",
  "op4": "Muhammad bin Tughlaq",
  "ans": "Balban"
},
{
  "ques": "Who wrote the famous Sanskrit play 'Mrichchhakatika'?<br><br>",
  "quesType": "mcq",
  "op1": "Kalidasa",
  "op2": "Shudraka",
  "op3": "Bhasa",
  "op4": "Bhavabhuti",
  "ans": "Shudraka"
},
{
  "ques": "Which ruler built the Purana Qila in Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Sher Shah Suri",
  "op2": "Akbar",
  "op3": "Humayun",
  "op4": "Babur",
  "ans": "Sher Shah Suri"
},
{
  "ques": "Who was the founder of the Satavahana dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Simuka",
  "op2": "Gautamiputra Satakarni",
  "op3": "Pulomavi",
  "op4": "Hala",
  "ans": "Simuka"
},
{
  "ques": "Who is known as the 'Second Ashoka'?<br><br>",
  "quesType": "mcq",
  "op1": "Harsha",
  "op2": "Samudragupta",
  "op3": "Chandragupta II",
  "op4": "Kanishka",
  "ans": "Kanishka"
},
{
  "ques": "Who was the founder of the Rashtrakuta dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Dantidurga",
  "op2": "Amoghavarsha",
  "op3": "Krishna I",
  "op4": "Govinda III",
  "ans": "Dantidurga"
},
{
  "ques": "Which Mughal emperor assumed the title 'Alamgir'?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Jahangir",
  "op3": "Shah Jahan",
  "op4": "Aurangzeb",
  "ans": "Aurangzeb"
},
{
  "ques": "Who built the famous Buland Darwaza at Fatehpur Sikri?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Sher Shah Suri",
  "op3": "Akbar",
  "op4": "Jahangir",
  "ans": "Akbar"
},
{
  "ques": "Which ancient port city was known as 'Puhar'?<br><br>",
  "quesType": "mcq",
  "op1": "Tamralipti",
  "op2": "Kaveripattinam",
  "op3": "Barbaricum",
  "op4": "Muziris",
  "ans": "Kaveripattinam"
},
{
  "ques": "Which dynasty is associated with the famous cave temples of Badami?<br><br>",
  "quesType": "mcq",
  "op1": "Pallavas",
  "op2": "Chalukyas",
  "op3": "Rashtrakutas",
  "op4": "Satavahanas",
  "ans": "Chalukyas"
},
{
  "ques": "Who wrote 'Harshacharita'?<br><br>",
  "quesType": "mcq",
  "op1": "Kalidasa",
  "op2": "Banabhatta",
  "op3": "Vishakhadatta",
  "op4": "Bhasa",
  "ans": "Banabhatta"
},
{
  "ques": "Who was the founder of the Gahadavala dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Chandradeva",
  "op2": "Govindachandra",
  "op3": "Jayachandra",
  "op4": "Yashovigraha",
  "ans": "Chandradeva"
},
{
  "ques": "Which Gupta ruler was also known as Vikramaditya?<br><br>",
  "quesType": "mcq",
  "op1": "Samudragupta",
  "op2": "Chandragupta I",
  "op3": "Chandragupta II",
  "op4": "Skandagupta",
  "ans": "Chandragupta II"
},
{
  "ques": "The famous 'Nasik Prashasti' is associated with which dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Satavahanas",
  "op2": "Mauryas",
  "op3": "Guptas",
  "op4": "Pallavas",
  "ans": "Satavahanas"
},
{
  "ques": "Who built the Jami Masjid at Champaner?<br><br>",
  "quesType": "mcq",
  "op1": "Mahmud Begada",
  "op2": "Sher Shah Suri",
  "op3": "Humayun",
  "op4": "Akbar",
  "ans": "Mahmud Begada"
},
{
  "ques": "Who composed 'Kadambari'?<br><br>",
  "quesType": "mcq",
  "op1": "Kalidasa",
  "op2": "Banabhatta",
  "op3": "Bhasa",
  "op4": "Harsha",
  "ans": "Banabhatta"
},
{
  "ques": "Which Sultan introduced the measurement of land for revenue?<br><br>",
  "quesType": "mcq",
  "op1": "Balban",
  "op2": "Alauddin Khilji",
  "op3": "Iltutmish",
  "op4": "Firuz Shah Tughlaq",
  "ans": "Alauddin Khilji"
},
{
  "ques": "Which king of Kashmir authored Rajatarangini?<br><br>",
  "quesType": "mcq",
  "op1": "Lalitaditya",
  "op2": "Avantivarman",
  "op3": "Kalhana",
  "op4": "Jayapida",
  "ans": "Kalhana"
},
{
  "ques": "Which ruler defeated Harsha on the banks of Narmada?<br><br>",
  "quesType": "mcq",
  "op1": "Pulakesin II",
  "op2": "Narasimhavarman",
  "op3": "Mahendravarman",
  "op4": "Vikramaditya II",
  "ans": "Pulakesin II"
},
{
  "ques": "Who established the Bahmani Kingdom?<br><br>",
  "quesType": "mcq",
  "op1": "Hasan Gangu",
  "op2": "Alauddin Bahman Shah",
  "op3": "Firoz Shah Bahmani",
  "op4": "Mahmud Gawan",
  "ans": "Alauddin Bahman Shah"
},
{
  "ques": "Who among the following built the Hampi city?<br><br>",
  "quesType": "mcq",
  "op1": "Harihara I",
  "op2": "Krishnadevaraya",
  "op3": "Bukka Raya I",
  "op4": "Ramaraya",
  "ans": "Harihara I"
},
{
  "ques": "Who was the first Bhakti poet in North India?<br><br>",
  "quesType": "mcq",
  "op1": "Kabir",
  "op2": "Ramananda",
  "op3": "Surdas",
  "op4": "Tulsidas",
  "ans": "Ramananda"
},
{
  "ques": "Who introduced the Persian wheel in India?<br><br>",
  "quesType": "mcq",
  "op1": "Sher Shah Suri",
  "op2": "Babur",
  "op3": "Akbar",
  "op4": "Humayun",
  "ans": "Babur"
},
{
  "ques": "Who built the city of Agra?<br><br>",
  "quesType": "mcq",
  "op1": "Sikandar Lodi",
  "op2": "Babur",
  "op3": "Sher Shah Suri",
  "op4": "Akbar",
  "ans": "Sikandar Lodi"
},
{
  "ques": "Who founded the city of Jaunpur?<br><br>",
  "quesType": "mcq",
  "op1": "Firuz Shah Tughlaq",
  "op2": "Alauddin Khilji",
  "op3": "Muhammad bin Tughlaq",
  "op4": "Ghiyasuddin Tughlaq",
  "ans": "Firuz Shah Tughlaq"
},
{
  "ques": "Who was known as 'Zinda Pir'?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Akbar",
  "op3": "Aurangzeb",
  "op4": "Sher Shah Suri",
  "ans": "Aurangzeb"
},
{
  "ques": "Who was the founder of the Sayyid Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Khizr Khan",
  "op2": "Mubarak Shah",
  "op3": "Alauddin Alam Shah",
  "op4": "Muhammad Shah",
  "ans": "Khizr Khan"
},
{
  "ques": "Who was the last ruler of the Tughlaq dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Nasiruddin Mahmud",
  "op2": "Firuz Shah Tughlaq",
  "op3": "Muhammad bin Tughlaq",
  "op4": "Ghiyasuddin Tughlaq Shah II",
  "ans": "Nasiruddin Mahmud"
},
{
  "ques": "Who was the first Mughal emperor to introduce the 'Rupee' coin?<br><br>",
  "quesType": "mcq",
  "op1": "Sher Shah Suri",
  "op2": "Babur",
  "op3": "Humayun",
  "op4": "Akbar",
  "ans": "Sher Shah Suri"
}
,
{
  "ques": "Who among the following was the first woman ruler of Delhi Sultanate?<br><br>",
  "quesType": "mcq",
  "op1": "Razia Sultana",
  "op2": "Nur Jahan",
  "op3": "Durgavati",
  "op4": "Rani Lakshmi Bai",
  "ans": "Razia Sultana"
},
{
  "ques": "Who was the founder of the Vijayanagara Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Harihara I",
  "op2": "Krishnadevaraya",
  "op3": "Bukkaraya I",
  "op4": "Deva Raya II",
  "ans": "Harihara I"
},
{
  "ques": "Who was known as the ‘Father of Indian Renaissance’?<br><br>",
  "quesType": "mcq",
  "op1": "Swami Vivekananda",
  "op2": "Raja Ram Mohan Roy",
  "op3": "Ishwar Chandra Vidyasagar",
  "op4": "Dayanand Saraswati",
  "ans": "Raja Ram Mohan Roy"
},
{
  "ques": "Who founded the Arya Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Swami Vivekananda",
  "op2": "Raja Ram Mohan Roy",
  "op3": "Dayanand Saraswati",
  "op4": "Brahmananda",
  "ans": "Dayanand Saraswati"
},
{
  "ques": "Who was the last ruler of the Maurya dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Brihadratha",
  "op3": "Bindusara",
  "op4": "Chandragupta Maurya",
  "ans": "Brihadratha"
},
{
  "ques": "Who was the first Sultan to set up a permanent standing army?<br><br>",
  "quesType": "mcq",
  "op1": "Iltutmish",
  "op2": "Alauddin Khilji",
  "op3": "Balban",
  "op4": "Ghiyasuddin Tughlaq",
  "ans": "Alauddin Khilji"
},
{
  "ques": "Who among the following introduced Persian as the court language of Mughal Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Akbar",
  "op3": "Humayun",
  "op4": "Sher Shah Suri",
  "ans": "Akbar"
},
{
  "ques": "The ruler known for the construction of Qutub Minar was?<br><br>",
  "quesType": "mcq",
  "op1": "Qutb-ud-din Aibak",
  "op2": "Iltutmish",
  "op3": "Alauddin Khilji",
  "op4": "Ghiyasuddin Balban",
  "ans": "Qutb-ud-din Aibak"
},
{
  "ques": "Who composed 'Geet Govinda'?<br><br>",
  "quesType": "mcq",
  "op1": "Jayadeva",
  "op2": "Kalidasa",
  "op3": "Banabhatta",
  "op4": "Vishakhadatta",
  "ans": "Jayadeva"
},
{
  "ques": "Who is known for the first systematic study of Indian coins?<br><br>",
  "quesType": "mcq",
  "op1": "James Prinsep",
  "op2": "Max Muller",
  "op3": "Sir William Jones",
  "op4": "Alexander Cunningham",
  "ans": "James Prinsep"
},
{
  "ques": "Who founded the Satavahana dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Simuka",
  "op2": "Gautamiputra Satakarni",
  "op3": "Pulomavi",
  "op4": "Yajnasri Satakarni",
  "ans": "Simuka"
},
{
  "ques": "Who constructed the 'Adhai Din Ka Jhopra' mosque?<br><br>",
  "quesType": "mcq",
  "op1": "Qutb-ud-din Aibak",
  "op2": "Iltutmish",
  "op3": "Alauddin Khilji",
  "op4": "Firoz Shah Tughlaq",
  "ans": "Qutb-ud-din Aibak"
},
{
  "ques": "Who issued the Silver Tanka coin?<br><br>",
  "quesType": "mcq",
  "op1": "Iltutmish",
  "op2": "Alauddin Khilji",
  "op3": "Balban",
  "op4": "Ghiyasuddin Tughlaq",
  "ans": "Iltutmish"
},
{
  "ques": "Who translated the Bhagavad Gita into Persian?<br><br>",
  "quesType": "mcq",
  "op1": "Badauni",
  "op2": "Abul Fazl",
  "op3": "Dara Shikoh",
  "op4": "Amir Khusrau",
  "ans": "Dara Shikoh"
},
{
  "ques": "Who was the founder of the Mughal Empire in India?<br><br>",
  "quesType": "mcq",
  "op1": "Humayun",
  "op2": "Babur",
  "op3": "Akbar",
  "op4": "Jahangir",
  "ans": "Babur"
},
{
  "ques": "The Battle of Plassey was fought in which year?<br><br>",
  "quesType": "mcq",
  "op1": "1757",
  "op2": "1764",
  "op3": "1775",
  "op4": "1781",
  "ans": "1757"
},
{
  "ques": "Who founded the Brahmo Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Swami Vivekananda",
  "op2": "Raja Ram Mohan Roy",
  "op3": "Dayanand Saraswati",
  "op4": "Debendranath Tagore",
  "ans": "Raja Ram Mohan Roy"
},
{
  "ques": "Who was the first Governor-General of India?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Ripon",
  "op2": "Lord Wellesley",
  "op3": "Lord William Bentinck",
  "op4": "Lord Warren Hastings",
  "ans": "Lord Warren Hastings"
},
{
  "ques": "Who wrote 'Neel Darpan', depicting Indigo revolt?<br><br>",
  "quesType": "mcq",
  "op1": "Dinabandhu Mitra",
  "op2": "Bankim Chandra Chatterjee",
  "op3": "Rabindranath Tagore",
  "op4": "Ishwar Chandra Vidyasagar",
  "ans": "Dinabandhu Mitra"
},
{
  "ques": "Who was the first Indian woman president of INC?<br><br>",
  "quesType": "mcq",
  "op1": "Annie Besant",
  "op2": "Sarojini Naidu",
  "op3": "Sucheta Kriplani",
  "op4": "Vijayalakshmi Pandit",
  "ans": "Sarojini Naidu"
},
{
  "ques": "Who was the founder of the Aligarh Movement?<br><br>",
  "quesType": "mcq",
  "op1": "Sir Syed Ahmed Khan",
  "op2": "Maulana Abul Kalam Azad",
  "op3": "M.A. Jinnah",
  "op4": "Allama Iqbal",
  "ans": "Sir Syed Ahmed Khan"
},
{
  "ques": "Who was the first Indian to win Nobel Prize?<br><br>",
  "quesType": "mcq",
  "op1": "Rabindranath Tagore",
  "op2": "C.V. Raman",
  "op3": "Hargobind Khorana",
  "op4": "Amartya Sen",
  "ans": "Rabindranath Tagore"
},
{
  "ques": "Who established the Widow Remarriage Association?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Ishwar Chandra Vidyasagar",
  "op3": "Gopal Hari Deshmukh",
  "op4": "Dayanand Saraswati",
  "ans": "Ishwar Chandra Vidyasagar"
},
{
  "ques": "Who gave the slogan 'Inquilab Zindabad'?<br><br>",
  "quesType": "mcq",
  "op1": "Bhagat Singh",
  "op2": "Subhash Chandra Bose",
  "op3": "Lala Lajpat Rai",
  "op4": "Bipin Chandra Pal",
  "ans": "Bhagat Singh"
},
{
  "ques": "Who founded the Ramakrishna Mission?<br><br>",
  "quesType": "mcq",
  "op1": "Swami Vivekananda",
  "op2": "Raja Ram Mohan Roy",
  "op3": "Dayanand Saraswati",
  "op4": "Debendranath Tagore",
  "ans": "Swami Vivekananda"
},
{
  "ques": "The 'Pitt's India Act' was passed in which year?<br><br>",
  "quesType": "mcq",
  "op1": "1773",
  "op2": "1784",
  "op3": "1793",
  "op4": "1805",
  "ans": "1784"
},
{
  "ques": "Who was the first Indian to become a member of British Parliament?<br><br>",
  "quesType": "mcq",
  "op1": "Dadabhai Naoroji",
  "op2": "Raja Ram Mohan Roy",
  "op3": "Gopal Krishna Gokhale",
  "op4": "Bipin Chandra Pal",
  "ans": "Dadabhai Naoroji"
},
{
  "ques": "Who was the founder of Prarthana Samaj?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Dayanand Saraswati",
  "op3": "Atmaram Pandurang",
  "op4": "Swami Vivekananda",
  "ans": "Atmaram Pandurang"
},
{
  "ques": "Which viceroy is associated with the Ilbert Bill controversy?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Lytton",
  "op2": "Lord Ripon",
  "op3": "Lord Curzon",
  "op4": "Lord Canning",
  "ans": "Lord Ripon"
},
{
  "ques": "Who was known as 'Lokhitwadi'?<br><br>",
  "quesType": "mcq",
  "op1": "Gopal Krishna Gokhale",
  "op2": "Gopal Hari Deshmukh",
  "op3": "Bal Gangadhar Tilak",
  "op4": "Dadabhai Naoroji",
  "ans": "Gopal Hari Deshmukh"
}
,
{
  "ques": "Who among the following built the famous Shore Temple at Mahabalipuram?<br><br>",
  "quesType": "mcq",
  "op1": "Narasimhavarman I",
  "op2": "Mahendravarman I",
  "op3": "Rajaraja Chola I",
  "op4": "Krishnadevaraya",
  "ans": "Narasimhavarman I"
},
{
  "ques": "Who was the author of the book 'Indica'?<br><br>",
  "quesType": "mcq",
  "op1": "Megasthenes",
  "op2": "Pliny",
  "op3": "Ptolemy",
  "op4": "Herodotus",
  "ans": "Megasthenes"
},
{
  "ques": "Who among the following was the founder of the Pratihara dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Bhoja",
  "op2": "Nagabhata I",
  "op3": "Mihir Bhoja",
  "op4": "Mahendrapala",
  "ans": "Nagabhata I"
},
{
  "ques": "Who was the last ruler of the Tughlaq dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Ghiyas-ud-din Tughlaq Shah II",
  "op2": "Firoz Shah Tughlaq",
  "op3": "Mahmud Tughlaq",
  "op4": "Nasiruddin Mahmud",
  "ans": "Nasiruddin Mahmud"
},
{
  "ques": "Who among the following constructed the 'Jama Masjid' in Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Shah Jahan",
  "op3": "Aurangzeb",
  "op4": "Humayun",
  "ans": "Shah Jahan"
},
{
  "ques": "The famous 'Brihadeshwara Temple' was built by which Chola ruler?<br><br>",
  "quesType": "mcq",
  "op1": "Rajaraja Chola I",
  "op2": "Rajendra Chola I",
  "op3": "Vijayalaya Chola",
  "op4": "Kulottunga Chola I",
  "ans": "Rajaraja Chola I"
},
{
  "ques": "Who among the following was the first to issue gold coins on a large scale?<br><br>",
  "quesType": "mcq",
  "op1": "Mauryas",
  "op2": "Guptas",
  "op3": "Kushanas",
  "op4": "Satavahanas",
  "ans": "Kushanas"
},
{
  "ques": "Which Indian ruler sent an embassy to China during the reign of Harsha?<br><br>",
  "quesType": "mcq",
  "op1": "Pulakesin II",
  "op2": "Mahendravarman I",
  "op3": "Narasimhavarman I",
  "op4": "Kumaragupta",
  "ans": "Harsha"
},
{
  "ques": "Who among the following composed 'Harshacharita'?<br><br>",
  "quesType": "mcq",
  "op1": "Kalidasa",
  "op2": "Banabhatta",
  "op3": "Bhavabhuti",
  "op4": "Vishakhadatta",
  "ans": "Banabhatta"
},
{
  "ques": "Which Mughal ruler is also known for the construction of Moti Masjid in Agra?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Aurangzeb",
  "op3": "Shah Jahan",
  "op4": "Jahangir",
  "ans": "Shah Jahan"
},
{
  "ques": "Who was the founder of the Bahmani Kingdom?<br><br>",
  "quesType": "mcq",
  "op1": "Firuz Shah Bahmani",
  "op2": "Alauddin Hasan Bahman Shah",
  "op3": "Mahmud Gawan",
  "op4": "Ahmad Shah Wali",
  "ans": "Alauddin Hasan Bahman Shah"
},
{
  "ques": "Which Sultan introduced the market control system?<br><br>",
  "quesType": "mcq",
  "op1": "Balban",
  "op2": "Alauddin Khilji",
  "op3": "Iltutmish",
  "op4": "Ghiyasuddin Tughlaq",
  "ans": "Alauddin Khilji"
},
{
  "ques": "Who composed the famous work 'Kitab-ul-Hind'?<br><br>",
  "quesType": "mcq",
  "op1": "Al-Biruni",
  "op2": "Ibn Battuta",
  "op3": "Al-Masudi",
  "op4": "Firdausi",
  "ans": "Al-Biruni"
},
{
  "ques": "The 'Chola Naval Expedition' was sent to which region?<br><br>",
  "quesType": "mcq",
  "op1": "Persia",
  "op2": "China",
  "op3": "Sri Lanka",
  "op4": "Southeast Asia",
  "ans": "Southeast Asia"
},
{
  "ques": "Which king assumed the title of 'Sakari' (destroyer of Sakas)?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta I",
  "op2": "Samudragupta",
  "op3": "Chandragupta II",
  "op4": "Skandagupta",
  "ans": "Chandragupta II"
},
{
  "ques": "Which Indian ruler defeated Seleucus Nicator?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta Maurya",
  "op2": "Ashoka",
  "op3": "Bindusara",
  "op4": "Kanishka",
  "ans": "Chandragupta Maurya"
},
{
  "ques": "Which Mughal ruler wrote his own autobiography in Persian?<br><br>",
  "quesType": "mcq",
  "op1": "Humayun",
  "op2": "Akbar",
  "op3": "Jahangir",
  "op4": "Babur",
  "ans": "Babur"
},
{
  "ques": "Who among the following was the founder of the Lodhi dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Ibrahim Lodhi",
  "op2": "Bahlul Lodhi",
  "op3": "Sikandar Lodhi",
  "op4": "Sher Shah",
  "ans": "Bahlul Lodhi"
},
{
  "ques": "Which ruler is credited with the construction of the city of Agra?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Sikandar Lodhi",
  "op3": "Ibrahim Lodhi",
  "op4": "Sher Shah",
  "ans": "Sikandar Lodhi"
},
{
  "ques": "Who among the following abolished the 'Zakat' tax?<br><br>",
  "quesType": "mcq",
  "op1": "Sher Shah",
  "op2": "Iltutmish",
  "op3": "Alauddin Khilji",
  "op4": "Firoz Shah Tughlaq",
  "ans": "Alauddin Khilji"
},
{
  "ques": "Who was the founder of the Rashtrakuta dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Dantidurga",
  "op2": "Krishna I",
  "op3": "Amoghavarsha",
  "op4": "Govinda III",
  "ans": "Dantidurga"
},
{
  "ques": "Who among the following was known as the 'Napoleon of India'?<br><br>",
  "quesType": "mcq",
  "op1": "Samudragupta",
  "op2": "Chandragupta Maurya",
  "op3": "Ashoka",
  "op4": "Harsha",
  "ans": "Samudragupta"
},
{
  "ques": "Who established the city of Lahore?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Jai Singh",
  "op2": "Raja Ranjit Singh",
  "op3": "Raja Dhillon",
  "op4": "Raja Lav",
  "ans": "Raja Lav"
},
{
  "ques": "Which Sultan shifted the capital from Delhi to Daulatabad?<br><br>",
  "quesType": "mcq",
  "op1": "Ghiyasuddin Tughlaq",
  "op2": "Muhammad bin Tughlaq",
  "op3": "Firoz Shah Tughlaq",
  "op4": "Balban",
  "ans": "Muhammad bin Tughlaq"
},
{
  "ques": "Who among the following defeated Humayun at the Battle of Chausa?<br><br>",
  "quesType": "mcq",
  "op1": "Bahadur Shah",
  "op2": "Sher Shah Suri",
  "op3": "Ibrahim Lodhi",
  "op4": "Rana Sanga",
  "ans": "Sher Shah Suri"
},
{
  "ques": "Who was the founder of the Gahadavala dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Govindachandra",
  "op2": "Chandradeva",
  "op3": "Jayachandra",
  "op4": "Harichandra",
  "ans": "Chandradeva"
},
{
  "ques": "Who constructed the Lotus Mahal in Hampi?<br><br>",
  "quesType": "mcq",
  "op1": "Harihara I",
  "op2": "Bukka Raya I",
  "op3": "Krishnadevaraya",
  "op4": "Achyuta Deva Raya",
  "ans": "Krishnadevaraya"
},
{
  "ques": "Which Sultan was known for the introduction of 'price control system'?<br><br>",
  "quesType": "mcq",
  "op1": "Balban",
  "op2": "Alauddin Khilji",
  "op3": "Muhammad bin Tughlaq",
  "op4": "Sher Shah Suri",
  "ans": "Alauddin Khilji"
},
{
  "ques": "Who was the last Hindu king of Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Harsha",
  "op2": "Prithviraj Chauhan",
  "op3": "Rana Sanga",
  "op4": "Hemu",
  "ans": "Hemu"
},
{
  "ques": "Who among the following wrote 'Ain-i-Dahsala' system?<br><br>",
  "quesType": "mcq",
  "op1": "Todar Mal",
  "op2": "Birbal",
  "op3": "Abul Fazl",
  "op4": "Faizi",
  "ans": "Todar Mal"
}
,
{
  "ques": "Who founded the city of Fatehpur Sikri?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Akbar",
  "op3": "Sher Shah Suri",
  "op4": "Humayun",
  "ans": "Akbar"
},
{
  "ques": "Which ruler shifted his capital from Delhi to Daulatabad?<br><br>",
  "quesType": "mcq",
  "op1": "Alauddin Khilji",
  "op2": "Firuz Shah Tughlaq",
  "op3": "Muhammad bin Tughlaq",
  "op4": "Ghiyasuddin Tughlaq",
  "ans": "Muhammad bin Tughlaq"
},
{
  "ques": "Who wrote 'Rajatarangini', the famous chronicle of Kashmir?<br><br>",
  "quesType": "mcq",
  "op1": "Kalhana",
  "op2": "Kalidasa",
  "op3": "Banabhatta",
  "op4": "Bhasa",
  "ans": "Kalhana"
},
{
  "ques": "Which Sultan of Delhi was known as 'Lakh Baksh'?<br><br>",
  "quesType": "mcq",
  "op1": "Iltutmish",
  "op2": "Qutb-ud-din Aibak",
  "op3": "Balban",
  "op4": "Alauddin Khilji",
  "ans": "Qutb-ud-din Aibak"
},
{
  "ques": "Who built the Adhai Din Ka Jhonpra mosque?<br><br>",
  "quesType": "mcq",
  "op1": "Qutb-ud-din Aibak",
  "op2": "Iltutmish",
  "op3": "Balban",
  "op4": "Alauddin Khilji",
  "ans": "Qutb-ud-din Aibak"
},
{
  "ques": "Who was the founder of the Chola Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Vijayalaya Chola",
  "op2": "Rajaraja Chola I",
  "op3": "Rajendra Chola I",
  "op4": "Kulottunga Chola I",
  "ans": "Vijayalaya Chola"
},
{
  "ques": "Which Indian king defeated Seleucus Nicator?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Chandragupta Maurya",
  "op3": "Bindusara",
  "op4": "Harsha",
  "ans": "Chandragupta Maurya"
},
{
  "ques": "Who wrote the 'Ain-i-Akbari'?<br><br>",
  "quesType": "mcq",
  "op1": "Abul Fazl",
  "op2": "Faizi",
  "op3": "Badauni",
  "op4": "Birbal",
  "ans": "Abul Fazl"
},
{
  "ques": "Who was known as the 'Poet King' of the Vijayanagara Empire?<br><br>",
  "quesType": "mcq",
  "op1": "Deva Raya II",
  "op2": "Krishnadevaraya",
  "op3": "Harihara I",
  "op4": "Bukka I",
  "ans": "Krishnadevaraya"
},
{
  "ques": "Who introduced the Iqta system?<br><br>",
  "quesType": "mcq",
  "op1": "Iltutmish",
  "op2": "Qutb-ud-din Aibak",
  "op3": "Alauddin Khilji",
  "op4": "Balban",
  "ans": "Iltutmish"
},
{
  "ques": "Who among the following was defeated in the Battle of Khanwa?<br><br>",
  "quesType": "mcq",
  "op1": "Rana Pratap",
  "op2": "Rana Sanga",
  "op3": "Hemu",
  "op4": "Sher Shah Suri",
  "ans": "Rana Sanga"
},
{
  "ques": "Who was the founder of the Kakatiya dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Ganapati Deva",
  "op2": "Prola I",
  "op3": "Rudrama Devi",
  "op4": "Beta Raja I",
  "ans": "Prola I"
},
{
  "ques": "Who was the first Sultan to set up a permanent standing army?<br><br>",
  "quesType": "mcq",
  "op1": "Balban",
  "op2": "Iltutmish",
  "op3": "Alauddin Khilji",
  "op4": "Firuz Shah Tughlaq",
  "ans": "Alauddin Khilji"
},
{
  "ques": "Who built the Qutub Minar?<br><br>",
  "quesType": "mcq",
  "op1": "Qutb-ud-din Aibak",
  "op2": "Iltutmish",
  "op3": "Alauddin Khilji",
  "op4": "Balban",
  "ans": "Qutb-ud-din Aibak"
},
{
  "ques": "Who among the following was defeated in the Second Battle of Tarain?<br><br>",
  "quesType": "mcq",
  "op1": "Muhammad Ghori",
  "op2": "Prithviraj Chauhan",
  "op3": "Jayachandra",
  "op4": "Raja Dahir",
  "ans": "Prithviraj Chauhan"
},
{
  "ques": "Which Mughal ruler is credited with the translation of Mahabharata into Persian?<br><br>",
  "quesType": "mcq",
  "op1": "Humayun",
  "op2": "Akbar",
  "op3": "Jahangir",
  "op4": "Shah Jahan",
  "ans": "Akbar"
},
{
  "ques": "Who built the Red Fort at Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Akbar",
  "op3": "Shah Jahan",
  "op4": "Aurangzeb",
  "ans": "Shah Jahan"
},
{
  "ques": "Who was the founder of the Paramara dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Bhoja",
  "op2": "Upendra",
  "op3": "Sindhuraja",
  "op4": "Munja",
  "ans": "Upendra"
},
{
  "ques": "Which dynasty built the Brihadeshwara Temple at Thanjavur?<br><br>",
  "quesType": "mcq",
  "op1": "Pallavas",
  "op2": "Cholas",
  "op3": "Chalukyas",
  "op4": "Pandyas",
  "ans": "Cholas"
},
{
  "ques": "Who was the first Mughal ruler to issue a farman to the English for trade?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Jahangir",
  "op3": "Shah Jahan",
  "op4": "Aurangzeb",
  "ans": "Jahangir"
},
{
  "ques": "Who among the following introduced the Mansabdari system?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Humayun",
  "op3": "Akbar",
  "op4": "Sher Shah Suri",
  "ans": "Akbar"
},
{
  "ques": "Who was the author of 'Prithviraj Raso'?<br><br>",
  "quesType": "mcq",
  "op1": "Banabhatta",
  "op2": "Kalhana",
  "op3": "Chand Bardai",
  "op4": "Vishakhadatta",
  "ans": "Chand Bardai"
},
{
  "ques": "Which Delhi Sultan transferred his capital to Daulatabad?<br><br>",
  "quesType": "mcq",
  "op1": "Iltutmish",
  "op2": "Alauddin Khilji",
  "op3": "Muhammad bin Tughlaq",
  "op4": "Firuz Shah Tughlaq",
  "ans": "Muhammad bin Tughlaq"
},
{
  "ques": "Who is credited with the construction of the Grand Trunk Road?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Sher Shah Suri",
  "op3": "Babur",
  "op4": "Humayun",
  "ans": "Sher Shah Suri"
},
{
  "ques": "Who built the Gol Gumbaz?<br><br>",
  "quesType": "mcq",
  "op1": "Adil Shah I",
  "op2": "Muhammad Adil Shah",
  "op3": "Ali Adil Shah II",
  "op4": "Ibrahim Adil Shah II",
  "ans": "Muhammad Adil Shah"
},
{
  "ques": "Who built the Vijaya Stambha at Chittorgarh?<br><br>",
  "quesType": "mcq",
  "op1": "Rana Sanga",
  "op2": "Rana Kumbha",
  "op3": "Rana Pratap",
  "op4": "Rana Uday Singh",
  "ans": "Rana Kumbha"
},
{
  "ques": "Who was the founder of the Pal dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Gopala",
  "op2": "Dharampala",
  "op3": "Devapala",
  "op4": "Mahipala",
  "ans": "Gopala"
},
{
  "ques": "Who among the following built the Moti Masjid inside the Red Fort?<br><br>",
  "quesType": "mcq",
  "op1": "Shah Jahan",
  "op2": "Aurangzeb",
  "op3": "Akbar",
  "op4": "Bahadur Shah I",
  "ans": "Aurangzeb"
},
{
  "ques": "Who was the last ruler of the Mauryan dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Brihadratha",
  "op2": "Ashoka",
  "op3": "Dasharatha",
  "op4": "Samprati",
  "ans": "Brihadratha"
}
,
{
  "ques": "Who was the founder of the Khilji Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Jalaluddin Khilji",
  "op2": "Alauddin Khilji",
  "op3": "Ghiyasuddin Balban",
  "op4": "Qutb-ud-din Aibak",
  "ans": "Jalaluddin Khilji"
},
{
  "ques": "Who was the first Indian woman to become President of the United Nations General Assembly?<br><br>",
  "quesType": "mcq",
  "op1": "Sarojini Naidu",
  "op2": "Vijaya Lakshmi Pandit",
  "op3": "Sucheta Kriplani",
  "op4": "Indira Gandhi",
  "ans": "Vijaya Lakshmi Pandit"
},
{
  "ques": "Who built the Buland Darwaza at Fatehpur Sikri?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Akbar",
  "op3": "Humayun",
  "op4": "Shah Jahan",
  "ans": "Akbar"
},
{
  "ques": "Who among the following abolished the practice of Sati?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Cornwallis",
  "op2": "Lord Wellesley",
  "op3": "Lord William Bentinck",
  "op4": "Lord Dalhousie",
  "ans": "Lord William Bentinck"
},
{
  "ques": "Who was the first historian to call the 1857 revolt as the 'First War of Independence'?<br><br>",
  "quesType": "mcq",
  "op1": "R.C. Majumdar",
  "op2": "S.N. Sen",
  "op3": "V.D. Savarkar",
  "op4": "Bankim Chandra Chatterjee",
  "ans": "V.D. Savarkar"
},
{
  "ques": "Who built the Ibadat Khana at Fatehpur Sikri?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Akbar",
  "op3": "Jahangir",
  "op4": "Shah Jahan",
  "ans": "Akbar"
},
{
  "ques": "Which Indian king defeated Seleucus Nicator?<br><br>",
  "quesType": "mcq",
  "op1": "Ashoka",
  "op2": "Chandragupta Maurya",
  "op3": "Bindusara",
  "op4": "Samudragupta",
  "ans": "Chandragupta Maurya"
},
{
  "ques": "Who was the first Gupta ruler to assume the title of Maharajadhiraja?<br><br>",
  "quesType": "mcq",
  "op1": "Chandragupta I",
  "op2": "Samudragupta",
  "op3": "Chandragupta II",
  "op4": "Kumaragupta",
  "ans": "Chandragupta I"
},
{
  "ques": "Who was the founder of the Slave Dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Iltutmish",
  "op2": "Ghiyasuddin Balban",
  "op3": "Qutb-ud-din Aibak",
  "op4": "Alauddin Khilji",
  "ans": "Qutb-ud-din Aibak"
},
{
  "ques": "Who translated Mahabharata into Persian and named it 'Razmnamah'?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Abul Fazl",
  "op3": "Badauni",
  "op4": "Birbal",
  "ans": "Akbar"
},
{
  "ques": "Who was the founder of the Chalukya dynasty?<br><br>",
  "quesType": "mcq",
  "op1": "Pulakeshin I",
  "op2": "Pulakeshin II",
  "op3": "Vikramaditya I",
  "op4": "Kirttivarman I",
  "ans": "Pulakeshin I"
},
{
  "ques": "Which Mughal ruler built the Peacock Throne?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Jahangir",
  "op3": "Shah Jahan",
  "op4": "Aurangzeb",
  "ans": "Shah Jahan"
},
{
  "ques": "Who was known as the 'Tiger of Mysore'?<br><br>",
  "quesType": "mcq",
  "op1": "Haider Ali",
  "op2": "Tipu Sultan",
  "op3": "Nizam of Hyderabad",
  "op4": "Shivaji",
  "ans": "Tipu Sultan"
},
{
  "ques": "Who started the Din-i-Ilahi?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Humayun",
  "op3": "Akbar",
  "op4": "Aurangzeb",
  "ans": "Akbar"
},
{
  "ques": "Who built the Gol Gumbaz?<br><br>",
  "quesType": "mcq",
  "op1": "Ali Adil Shah I",
  "op2": "Muhammad Adil Shah",
  "op3": "Ibrahim Adil Shah II",
  "op4": "Ismail Adil Shah",
  "ans": "Muhammad Adil Shah"
},
{
  "ques": "Who was the first Mughal emperor to adopt the title 'Padshah'?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Humayun",
  "op3": "Akbar",
  "op4": "Shah Jahan",
  "ans": "Babur"
},
{
  "ques": "Who was known as the 'Second Ashoka'?<br><br>",
  "quesType": "mcq",
  "op1": "Harsha",
  "op2": "Samudragupta",
  "op3": "Chandragupta Maurya",
  "op4": "Kanishka",
  "ans": "Harsha"
},
{
  "ques": "Who was the first Indian to receive Bharat Ratna posthumously?<br><br>",
  "quesType": "mcq",
  "op1": "Lal Bahadur Shastri",
  "op2": "Mahatma Gandhi",
  "op3": "Dr. B.R. Ambedkar",
  "op4": "Jawaharlal Nehru",
  "ans": "Lal Bahadur Shastri"
},
{
  "ques": "Who founded the city of Amritsar?<br><br>",
  "quesType": "mcq",
  "op1": "Guru Nanak",
  "op2": "Guru Angad",
  "op3": "Guru Ram Das",
  "op4": "Guru Gobind Singh",
  "ans": "Guru Ram Das"
},
{
  "ques": "Who wrote 'Poverty and Un-British Rule in India'?<br><br>",
  "quesType": "mcq",
  "op1": "Gopal Krishna Gokhale",
  "op2": "Dadabhai Naoroji",
  "op3": "R.C. Dutt",
  "op4": "Surendranath Banerjee",
  "ans": "Dadabhai Naoroji"
},
{
  "ques": "Which Mughal Emperor prohibited cow slaughter?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Akbar",
  "op3": "Aurangzeb",
  "op4": "Jahangir",
  "ans": "Akbar"
},
{
  "ques": "Who was the first Indian ruler to accept Subsidiary Alliance?<br><br>",
  "quesType": "mcq",
  "op1": "Nizam of Hyderabad",
  "op2": "Mysore",
  "op3": "Awadh",
  "op4": "Marathas",
  "ans": "Nizam of Hyderabad"
},
{
  "ques": "Who founded the Theosophical Society in India?<br><br>",
  "quesType": "mcq",
  "op1": "Annie Besant",
  "op2": "A.O. Hume",
  "op3": "Madam Blavatsky",
  "op4": "Col. Olcott",
  "ans": "Annie Besant"
},
{
  "ques": "Who presided over Lahore Session of INC 1929?<br><br>",
  "quesType": "mcq",
  "op1": "Mahatma Gandhi",
  "op2": "Jawaharlal Nehru",
  "op3": "Subhash Chandra Bose",
  "op4": "Sardar Patel",
  "ans": "Jawaharlal Nehru"
},
{
  "ques": "Who was the first President of India?<br><br>",
  "quesType": "mcq",
  "op1": "Dr. Rajendra Prasad",
  "op2": "Dr. Radhakrishnan",
  "op3": "Jawaharlal Nehru",
  "op4": "Sardar Patel",
  "ans": "Dr. Rajendra Prasad"
},
{
  "ques": "Who was the last Governor-General of independent India?<br><br>",
  "quesType": "mcq",
  "op1": "Lord Mountbatten",
  "op2": "C. Rajagopalachari",
  "op3": "Jawaharlal Nehru",
  "op4": "Dr. Rajendra Prasad",
  "ans": "C. Rajagopalachari"
},
{
  "ques": "Who founded the Shaka era?<br><br>",
  "quesType": "mcq",
  "op1": "Kanishka",
  "op2": "Ashoka",
  "op3": "Harsha",
  "op4": "Samudragupta",
  "ans": "Kanishka"
},
{
  "ques": "Who among the following was the first Indian to become Governor of RBI?<br><br>",
  "quesType": "mcq",
  "op1": "C.D. Deshmukh",
  "op2": "L.K. Jha",
  "op3": "Y.V. Reddy",
  "op4": "I.G. Patel",
  "ans": "C.D. Deshmukh"
},
{
  "ques": "Who was the founder of Banaras Hindu University?<br><br>",
  "quesType": "mcq",
  "op1": "Raja Ram Mohan Roy",
  "op2": "Pandit Madan Mohan Malaviya",
  "op3": "Annie Besant",
  "op4": "B.G. Tilak",
  "ans": "Pandit Madan Mohan Malaviya"
},
{
  "ques": "Which Mughal Emperor built Moti Masjid at Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Jahangir",
  "op3": "Shah Jahan",
  "op4": "Aurangzeb",
  "ans": "Aurangzeb"
}
,
{
  "ques": "Which Gupta ruler is credited with the performance of the Ashvamedha sacrifice?<br><br>",
  "quesType": "mcq",
  "op1": "Samudragupta",
  "op2": "Chandragupta I",
  "op3": "Chandragupta II",
  "op4": "Skandagupta",
  "ans": "Samudragupta"
},
{
  "ques": "Who was the first woman ruler of medieval India?<br><br>",
  "quesType": "mcq",
  "op1": "Razia Sultana",
  "op2": "Nur Jahan",
  "op3": "Durgavati",
  "op4": "Chand Bibi",
  "ans": "Razia Sultana"
},
{
  "ques": "Who built the Gol Gumbaz in Bijapur?<br><br>",
  "quesType": "mcq",
  "op1": "Ibrahim Adil Shah I",
  "op2": "Yusuf Adil Shah",
  "op3": "Mohammed Adil Shah",
  "op4": "Ali Adil Shah",
  "ans": "Mohammed Adil Shah"
},
{
  "ques": "Who among the following was known as the 'Second Ashoka'?<br><br>",
  "quesType": "mcq",
  "op1": "Harsha",
  "op2": "Chandragupta Maurya",
  "op3": "Kanishka",
  "op4": "Samudragupta",
  "ans": "Harsha"
},
{
  "ques": "Who among the following defeated Mahmud Ghazni?<br><br>",
  "quesType": "mcq",
  "op1": "Bhimdev Solanki",
  "op2": "Raja Bhoj",
  "op3": "Anangpal Tomar",
  "op4": "Jayapala",
  "ans": "Bhimdev Solanki"
},
{
  "ques": "Who among the following started the translation of the Atharvaveda into Persian?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Jahangir",
  "op3": "Shah Jahan",
  "op4": "Aurangzeb",
  "ans": "Akbar"
},
{
  "ques": "Who wrote the 'Ain-i-Dahsala' revenue system?<br><br>",
  "quesType": "mcq",
  "op1": "Birbal",
  "op2": "Todar Mal",
  "op3": "Abul Fazl",
  "op4": "Faizi",
  "ans": "Todar Mal"
},
{
  "ques": "Who was the first Sultan to make Delhi his capital?<br><br>",
  "quesType": "mcq",
  "op1": "Qutubuddin Aibak",
  "op2": "Iltutmish",
  "op3": "Alauddin Khilji",
  "op4": "Balban",
  "ans": "Iltutmish"
},
{
  "ques": "Which Mughal ruler issued the coin 'Zarb'?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Aurangzeb",
  "op3": "Jahangir",
  "op4": "Shah Jahan",
  "ans": "Aurangzeb"
},
{
  "ques": "Who among the following built the 'Jama Masjid' at Fatehpur Sikri?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Babur",
  "op3": "Sher Shah",
  "op4": "Aurangzeb",
  "ans": "Akbar"
},
{
  "ques": "Who among the following established the city of Jaunpur?<br><br>",
  "quesType": "mcq",
  "op1": "Ibrahim Lodhi",
  "op2": "Firoz Shah Tughlaq",
  "op3": "Alauddin Khilji",
  "op4": "Muhammad bin Tughlaq",
  "ans": "Firoz Shah Tughlaq"
},
{
  "ques": "Which ruler built the 'Panch Mahal' at Fatehpur Sikri?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Babur",
  "op3": "Humayun",
  "op4": "Sher Shah Suri",
  "ans": "Akbar"
},
{
  "ques": "Who among the following wrote the book 'Fatwa-i-Alamgiri'?<br><br>",
  "quesType": "mcq",
  "op1": "Aurangzeb",
  "op2": "Akbar",
  "op3": "Shah Jahan",
  "op4": "Jahangir",
  "ans": "Aurangzeb"
},
{
  "ques": "Which Sultanate ruler was called 'Lakh Baksh'?<br><br>",
  "quesType": "mcq",
  "op1": "Qutubuddin Aibak",
  "op2": "Iltutmish",
  "op3": "Alauddin Khilji",
  "op4": "Balban",
  "ans": "Qutubuddin Aibak"
},
{
  "ques": "Who was the first Sultan to build canals?<br><br>",
  "quesType": "mcq",
  "op1": "Iltutmish",
  "op2": "Balban",
  "op3": "Firoz Shah Tughlaq",
  "op4": "Muhammad bin Tughlaq",
  "ans": "Firoz Shah Tughlaq"
},
{
  "ques": "Who among the following started the Ibadat Khana at Fatehpur Sikri?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Aurangzeb",
  "op3": "Jahangir",
  "op4": "Shah Jahan",
  "ans": "Akbar"
},
{
  "ques": "Who is credited with building the Red Fort in Delhi?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Aurangzeb",
  "op3": "Shah Jahan",
  "op4": "Babur",
  "ans": "Shah Jahan"
},
{
  "ques": "Who among the following was defeated in the Battle of Khanwa?<br><br>",
  "quesType": "mcq",
  "op1": "Rana Sanga",
  "op2": "Ibrahim Lodhi",
  "op3": "Sher Shah",
  "op4": "Hemu",
  "ans": "Rana Sanga"
},
{
  "ques": "Which Sultan introduced the postal system?<br><br>",
  "quesType": "mcq",
  "op1": "Iltutmish",
  "op2": "Muhammad bin Tughlaq",
  "op3": "Firoz Shah Tughlaq",
  "op4": "Alauddin Khilji",
  "ans": "Alauddin Khilji"
},
{
  "ques": "Who among the following founded the city of Agra?<br><br>",
  "quesType": "mcq",
  "op1": "Babur",
  "op2": "Ibrahim Lodhi",
  "op3": "Sikandar Lodhi",
  "op4": "Sher Shah Suri",
  "ans": "Sikandar Lodhi"
},
{
  "ques": "Who among the following built the 'Buland Darwaza'?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Babur",
  "op3": "Shah Jahan",
  "op4": "Sher Shah Suri",
  "ans": "Akbar"
},
{
  "ques": "Which Chola ruler constructed the famous 'Airavatesvara Temple'?<br><br>",
  "quesType": "mcq",
  "op1": "Rajaraja Chola I",
  "op2": "Rajendra Chola I",
  "op3": "Kulottunga Chola I",
  "op4": "Vijayalaya Chola",
  "ans": "Rajendra Chola I"
},
{
  "ques": "Who among the following built the 'Char Minar'?<br><br>",
  "quesType": "mcq",
  "op1": "Quli Qutb Shah",
  "op2": "Muhammad Quli Qutb Shah",
  "op3": "Aurangzeb",
  "op4": "Muhammad bin Tughlaq",
  "ans": "Muhammad Quli Qutb Shah"
},
{
  "ques": "Who composed the 'Akbarnama'?<br><br>",
  "quesType": "mcq",
  "op1": "Faizi",
  "op2": "Badauni",
  "op3": "Abul Fazl",
  "op4": "Birbal",
  "ans": "Abul Fazl"
},
{
  "ques": "Who among the following issued the gold coins known as 'Dinar'?<br><br>",
  "quesType": "mcq",
  "op1": "Kanishka",
  "op2": "Chandragupta I",
  "op3": "Samudragupta",
  "op4": "Harsha",
  "ans": "Kanishka"
},
{
  "ques": "Who among the following wrote 'Tughlaq Nama'?<br><br>",
  "quesType": "mcq",
  "op1": "Badauni",
  "op2": "Amir Khusrau",
  "op3": "Ziauddin Barani",
  "op4": "Abul Fazl",
  "ans": "Amir Khusrau"
},
{
  "ques": "Which Sultan adopted the title 'Sikander-i-Sani'?<br><br>",
  "quesType": "mcq",
  "op1": "Balban",
  "op2": "Iltutmish",
  "op3": "Alauddin Khilji",
  "op4": "Muhammad bin Tughlaq",
  "ans": "Alauddin Khilji"
},
{
  "ques": "Which Mughal Emperor is credited with constructing the Peacock Throne?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Aurangzeb",
  "op3": "Jahangir",
  "op4": "Shah Jahan",
  "ans": "Shah Jahan"
},
{
  "ques": "Who among the following built the city of Fatehabad?<br><br>",
  "quesType": "mcq",
  "op1": "Akbar",
  "op2": "Sher Shah Suri",
  "op3": "Babur",
  "op4": "Aurangzeb",
  "ans": "Sher Shah Suri"
}



]



let historyIncorrectAnswers = [];

let historyTimerId = "";
let historySkip = document.getElementById("historySkip");
let codinghistoryQues = document.getElementById("codinghistoryQues");
let mcqhistory = document.getElementById("mcqhistory");
let historyQuestionNumber = document.getElementById("historyQuestionNumber");
let historyQuestionCount = 2;
let historyScore = 0;
let historyScoreDisplay = document.getElementById("historyScoreDisplay");
let historyScoreShow = document.getElementById("historyScoreShow");
let historySkip2 = document.getElementById("historySkip2");

let historyFillAns = document.getElementById("historyFillAns");
let historyStatus1 = document.getElementById("historyStatus1");
let historyStatus2 = document.getElementById("historyStatus2");
let historyStatus3 = document.getElementById("historyStatus3");
let historyCheckFill = document.getElementById("historyCheckFill");

let codingResulthistory = document.getElementById("codingResulthistory");

let historyIncorrectAnswersDisplay = document.getElementById("historyIncorrectAnswersDisplay");
let historyScoreBelow70 = document.getElementById("historyScoreBelow70");
let historyScore100 = document.getElementById("historyScore100");

let historyResult1 = document.getElementById("historyResult1");
let historyResult2 = document.getElementById("historyResult2");
let historyResult3 = document.getElementById("historyResult3");
let historyResult4 = document.getElementById("historyResult4");
let historyResult5 = document.getElementById("historyResult5");
let historyBg1 = document.getElementById("historyBg1");




function codinghistoryStart(){
  codinghistoryHide.classList.add("d-none");
codinghistoryShow.classList.remove("d-none");

let fillBlankhistory = document.getElementById("fillBlankhistory");
let op1history = document.getElementById("op1history");
let op2history = document.getElementById("op2history");
let op3history = document.getElementById("op3history");
let op4history = document.getElementById("op4history");

let historyFillAns = document.getElementById("historyFillAns");
let historyStatus1 = document.getElementById("historyStatus1");
let historyStatus2 = document.getElementById("historyStatus2");
let historyStatus3 = document.getElementById("historyStatus3");
let historyCheckFill = document.getElementById("historyCheckFill");

historyFillAns.disabled = false;
historyStatus1.classList.remove("d-none");
historyStatus2.classList.add("d-none");
historyStatus3.classList.add("d-none");
historyFillAns.value = "";
historySkip2.textContent = "Skip";
historySkip2.style.backgroundColor = "orange";
historySkip2.style.borderColor = "orange";

historySkip.textContent = "Skip";
historySkip.style.backgroundColor = "orange";
historySkip.style.borderColor = "orange";
historyScoreShow.textContent = "";
historyTimer.style.color = "black";

if (historyLevel === 1) {
  let historyRandom = Math.floor(Math.random() * codinghistory1Arr.length);
  let y = codinghistory1Arr[historyRandom];
  historyTimer.textContent = "20";
  historyTime = 20;

  historyTimerId = setInterval(function () {
    historyTime = historyTime - 1;
    if (historyTime == 0) {
      clearInterval(historyTimerId);
      historyQuestionNumber.textContent = "Question:" + historyQuestionCount + "/10";
      historyQuestionCount = historyQuestionCount + 1;
      historyTime = 20;
      codinghistoryStart();
    }
    if (historyTime <= 5) {
      historyTimer.style.color = "red";
      historyTimer.textContent = historyTime;
    } else {
      historyTimer.textContent = historyTime;
    }
  }, 1000);

  if (historyQuestionCount == 12) {
    clearInterval(historyTimerId);
    mcqhistory.classList.add("d-none");
    document.getElementById("historyScoreEnd").textContent = historyScoreDisplay.textContent;
    fillBlankhistory.classList.add("d-none");
    codinghistoryShow.classList.add("d-none");
    codingResulthistory.classList.remove("d-none");

    if (historyScore < 70) {
      historyScoreBelow70.classList.remove("d-none");
      historyScore100.classList.add("d-none");
      sectionCodinghistory.classList.add("back15");

      historyResult1.textContent = "Test finished!!";
      historyResult2.textContent = "😓 Oops! Not quite right.";
      historyResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      historyResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      historyIncorrectAnswersDisplay.appendChild(h2);

      for (let z of historyIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        historyIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (historyScore < 100) {
      historyScoreBelow70.classList.remove("d-none");
      historyScore100.classList.add("d-none");
      sectionCodinghistory.classList.add("back15");

      historyResult1.textContent = "Test finished!!";
      historyResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      historyResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      historyResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      historyIncorrectAnswersDisplay.appendChild(h2);

      for (let z of historyIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        historyIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (historyScore === 100) {
      document.getElementById("sectionCodinghistory").classList.add("back14");
      historyScore100.classList.remove("d-none");
      historyScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqhistory.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinghistoryQues.innerHTML = formattedQuestion;

    fillBlankhistory.classList.add("d-none");
    op1history.textContent = y.op1;
    op2history.textContent = y.op2;
    op3history.textContent = y.op3;
    op4history.textContent = y.op4;

    const allOps = [op1history, op2history, op3history, op4history];
    allOps.forEach((op, i) => {
      op.onclick = function () {
        allOps.forEach(o => (o.disabled = true));
        clearInterval(historyTimerId);
        historyTime = 20;

        if (op.textContent === y.ans) {
          op.style.backgroundColor = "green";
          historyScore += 10;
          historyScoreShow.textContent = "+10";
          historyScoreShow.style.color = "green";
        } else {
          op.style.backgroundColor = "red";
          historyScore -= 5;
          historyScoreShow.textContent = "-5";
          historyScoreShow.style.color = "red";
          let wrong_answer = { ques: y.ques, correct: y.ans, wrong: op.textContent };
          historyIncorrectAnswers.push(wrong_answer);
        }

        historyScoreDisplay.textContent = "Score: " + historyScore + "/100";

        historySkip.textContent = "Next";
        historySkip.style.backgroundColor = "#23ebdd";
        historySkip.style.borderColor = "#23ebdd";

        historySkip.onclick = function () {
          historyQuestionNumber.textContent = "Question:" + historyQuestionCount + "/10";
          historyQuestionCount += 1;
          allOps.forEach(o => {
            o.disabled = false;
            o.style.backgroundColor = "white";
          });
          codinghistoryStart();
        };
      };
    });

    historySkip.onclick = function () {
      clearInterval(historyTimerId);
      historyTime = 20;
      historyQuestionNumber.textContent = "Question:" + historyQuestionCount + "/10";
      historyQuestionCount += 1;
      allOps.forEach(o => {
        o.disabled = false;
        o.style.backgroundColor = "white";
      });
      let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
      historyIncorrectAnswers.push(wrong_answer);
      codinghistoryStart();
    };
  } 
}
else if (historyLevel === 2) {
  let historyRandom = Math.floor(Math.random() * codinghistory2Arr.length);
  let y = codinghistory2Arr[historyRandom];
  historyTimer.textContent = "25";
  historyTime = 25;

  historyTimerId = setInterval(function () {
    historyTime = historyTime - 1;
    if (historyTime == 0) {
      clearInterval(historyTimerId);
      historyQuestionNumber.textContent = "Question:" + historyQuestionCount + "/10";
      historyQuestionCount = historyQuestionCount + 1;
      historyTime = 25;
      codinghistoryStart();
    }
    if (historyTime <= 5) {
      historyTimer.style.color = "red";
      historyTimer.textContent = historyTime;
    } else {
      historyTimer.textContent = historyTime;
    }
  }, 1000);

  if (historyQuestionCount == 12) {
    clearInterval(historyTimerId);
    mcqhistory.classList.add("d-none");
    document.getElementById("historyScoreEnd").textContent = historyScoreDisplay.textContent;
    fillBlankhistory.classList.add("d-none");
    codinghistoryShow.classList.add("d-none");
    codingResulthistory.classList.remove("d-none");

    if (historyScore < 70) {
      historyScoreBelow70.classList.remove("d-none");
      historyScore100.classList.add("d-none");
      sectionCodinghistory.classList.add("back15");

      historyResult1.textContent = "Test finished!!";
      historyResult2.textContent = "😓 Oops! Not quite right.";
      historyResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      historyResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      historyIncorrectAnswersDisplay.appendChild(h2);

      for (let z of historyIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        historyIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (historyScore < 100) {
      historyScoreBelow70.classList.remove("d-none");
      historyScore100.classList.add("d-none");
      sectionCodinghistory.classList.add("back15");

      historyResult1.textContent = "Test finished!!";
      historyResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      historyResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      historyResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      historyIncorrectAnswersDisplay.appendChild(h2);

      for (let z of historyIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        historyIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (historyScore === 100) {
      document.getElementById("sectionCodinghistory").classList.add("back14");
      historyScore100.classList.remove("d-none");
      historyScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqhistory.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinghistoryQues.innerHTML = formattedQuestion;
    fillBlankhistory.classList.add("d-none");
    op1history.textContent = y.op1;
    op2history.textContent = y.op2;
    op3history.textContent = y.op3;
    op4history.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(historyTimerId);
      historyTime = 25;
      historySkip.textContent = "Next";
      historySkip.style.backgroundColor = "#23ebdd";
      historySkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        historyScore += 10;
        historyScoreShow.textContent = "+10";
        historyScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        historyScore -= 5;
        historyScoreShow.textContent = "-5";
        historyScoreShow.style.color = "red";
        historyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      historyScoreDisplay.textContent = "Score: " + historyScore + "/100";
    }

    op1history.onclick = () => handleOptionClick(op1history, [op2history, op3history, op4history]);
    op2history.onclick = () => handleOptionClick(op2history, [op1history, op3history, op4history]);
    op3history.onclick = () => handleOptionClick(op3history, [op1history, op2history, op4history]);
    op4history.onclick = () => handleOptionClick(op4history, [op1history, op2history, op3history]);

    historySkip.onclick = function () {
      clearInterval(historyTimerId);
      historyTime = 25;
      historyQuestionNumber.textContent = "Question:" + historyQuestionCount + "/10";
      historyQuestionCount++;
      [op1history, op2history, op3history, op4history].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      historyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codinghistoryStart();
    };
  }
}
else if (historyLevel === 3) {
  let historyRandom = Math.floor(Math.random() * codinghistory3Arr.length);
  let y = codinghistory3Arr[historyRandom];
  historyTimer.textContent = "30";
  historyTime = 30;

  historyTimerId = setInterval(function () {
    historyTime = historyTime - 1;
    if (historyTime == 0) {
      clearInterval(historyTimerId);
      historyQuestionNumber.textContent = "Question:" + historyQuestionCount + "/10";
      historyQuestionCount = historyQuestionCount + 1;
      historyTime = 30;
      codinghistoryStart();
    }
    if (historyTime <= 5) {
      historyTimer.style.color = "red";
      historyTimer.textContent = historyTime;
    } else {
      historyTimer.textContent = historyTime;
    }
  }, 1000);

  if (historyQuestionCount == 12) {
    clearInterval(historyTimerId);
    mcqhistory.classList.add("d-none");
    document.getElementById("historyScoreEnd").textContent = historyScoreDisplay.textContent;
    fillBlankhistory.classList.add("d-none");
    codinghistoryShow.classList.add("d-none");
    codingResulthistory.classList.remove("d-none");

    if (historyScore < 70) {
      historyScoreBelow70.classList.remove("d-none");
      historyScore100.classList.add("d-none");
      sectionCodinghistory.classList.add("back15");

      historyResult1.textContent = "Test finished!!";
      historyResult2.textContent = "😓 Oops! Not quite right.";
      historyResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      historyResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      historyIncorrectAnswersDisplay.appendChild(h2);

      for (let z of historyIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        historyIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (historyScore < 100) {
      historyScoreBelow70.classList.remove("d-none");
      historyScore100.classList.add("d-none");
      sectionCodinghistory.classList.add("back15");

      historyResult1.textContent = "Test finished!!";
      historyResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      historyResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      historyResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      historyIncorrectAnswersDisplay.appendChild(h2);

      for (let z of historyIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        historyIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (historyScore === 100) {
      document.getElementById("sectionCodinghistory").classList.add("back14");
      historyScore100.classList.remove("d-none");
      historyScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqhistory.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinghistoryQues.innerHTML = formattedQuestion;
    fillBlankhistory.classList.add("d-none");
    op1history.textContent = y.op1;
    op2history.textContent = y.op2;
    op3history.textContent = y.op3;
    op4history.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(historyTimerId);
      historyTime = 30;
      historySkip.textContent = "Next";
      historySkip.style.backgroundColor = "#23ebdd";
      historySkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        historyScore += 10;
        historyScoreShow.textContent = "+10";
        historyScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        historyScore -= 5;
        historyScoreShow.textContent = "-5";
        historyScoreShow.style.color = "red";
        historyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      historyScoreDisplay.textContent = "Score: " + historyScore + "/100";
    }

    op1history.onclick = () => handleOptionClick(op1history, [op2history, op3history, op4history]);
    op2history.onclick = () => handleOptionClick(op2history, [op1history, op3history, op4history]);
    op3history.onclick = () => handleOptionClick(op3history, [op1history, op2history, op4history]);
    op4history.onclick = () => handleOptionClick(op4history, [op1history, op2history, op3history]);

    historySkip.onclick = function () {
      clearInterval(historyTimerId);
      historyTime = 30;
      historyQuestionNumber.textContent = "Question:" + historyQuestionCount + "/10";
      historyQuestionCount++;
      [op1history, op2history, op3history, op4history].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      historyIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codinghistoryStart();
    };
  }
}

}
function resetCodinghistory() {
  document.getElementById("codinghistoryShow").classList.add("d-none");
  document.getElementById("codingResulthistory").classList.add("d-none");
  document.getElementById("codinghistoryHide").classList.remove("d-none");

  document.getElementById("historyQuestionNumber").innerText = "Question: 1/10";
  document.getElementById("historyScoreDisplay").innerText = "Score: 0/100";
  document.getElementById("historyScoreShow").innerText = "";
  document.getElementById("historyTimer").innerText = "00";
  document.getElementById("codinghistoryQues").innerText = "";

  document.getElementById("op1history").innerText = "option1";
  document.getElementById("op2history").innerText = "option2";
  document.getElementById("op3history").innerText = "option3";
  document.getElementById("op4history").innerText = "option4";

  historyIncorrectAnswers = [];
  document.getElementById("historyIncorrectAnswersDisplay").innerHTML = "";

  historyScore100.classList.add("d-none");
  historyScoreBelow70.classList.add("d-none");

  historyResult1.textContent = "";
  historyResult2.textContent = "";
  historyResult3.src = "";
  historyResult4.textContent = "";

  sectionCodinghistory.classList.remove("back14");
  sectionCodinghistory.classList.remove("back15");

  document.getElementById("historyFillAns").value = "";
  document.getElementById("fillBlankhistory").style.display = "none";
  document.getElementById("mcqhistory").style.display = "block";

  document.getElementById("historyStatus1").classList.remove("d-none");
  document.getElementById("historyStatus2").classList.add("d-none");
  document.getElementById("historyStatus3").classList.add("d-none");

  if (typeof historyTimerId !== "undefined") {
    clearInterval(historyTimerId);
  }
  historyTime = 20;
  historyQuestionCount = 2;
  historyScore = 0;
}

function historyResetLevel() {
  historyButton1.disabled = false;
  historyButton2.disabled = false;
  historyButton3.disabled = false;
  historyButton.classList.add("d-none");
  historyIncorrectAnswers = [];
}


// sports and players


let codingsport1Arr=[
  {
  "ques": "Who is known as the 'God of Cricket' in India?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Sunil Gavaskar",
  "op3": "Sachin Tendulkar",
  "op4": "Kapil Dev",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who won the FIFA World Cup in 2018?<br><br>",
  "quesType": "mcq",
  "op1": "Germany",
  "op2": "Brazil",
  "op3": "France",
  "op4": "Argentina",
  "ans": "France"
},
{
  "ques": "Who is the first Indian woman to win an Olympic silver medal?<br><br>",
  "quesType": "mcq",
  "op1": "P.V. Sindhu",
  "op2": "Mary Kom",
  "op3": "Saina Nehwal",
  "op4": "Karnam Malleswari",
  "ans": "P.V. Sindhu"
},
{
  "ques": "Which country hosts the Wimbledon tennis tournament?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "USA",
  "op3": "UK",
  "op4": "France",
  "ans": "UK"
},
{
  "ques": "Who is known as the Flying Sikh of India?<br><br>",
  "quesType": "mcq",
  "op1": "Milkha Singh",
  "op2": "P.T. Usha",
  "op3": "Abhinav Bindra",
  "op4": "Dhyan Chand",
  "ans": "Milkha Singh"
},
{
  "ques": "Who is the captain of the Indian Men's Cricket Team (as of 2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Rohit Sharma",
  "op3": "KL Rahul",
  "op4": "MS Dhoni",
  "ans": "Rohit Sharma"
},
{
  "ques": "In which sport is the term 'Grand Slam' used?<br><br>",
  "quesType": "mcq",
  "op1": "Cricket",
  "op2": "Tennis",
  "op3": "Football",
  "op4": "Hockey",
  "ans": "Tennis"
},
{
  "ques": "Who is known as the Master Blaster?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Virender Sehwag",
  "op3": "Sachin Tendulkar",
  "op4": "Sourav Ganguly",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Which country won the ICC Cricket World Cup in 2011?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "India",
  "op3": "Pakistan",
  "op4": "Sri Lanka",
  "ans": "India"
},
{
  "ques": "Who is called the 'Hockey Wizard'?<br><br>",
  "quesType": "mcq",
  "op1": "Dhanraj Pillay",
  "op2": "Dhyan Chand",
  "op3": "Balbir Singh",
  "op4": "Sandeep Singh",
  "ans": "Dhyan Chand"
},
{
  "ques": "What sport does Neeraj Chopra play?<br><br>",
  "quesType": "mcq",
  "op1": "Badminton",
  "op2": "Shooting",
  "op3": "Javelin Throw",
  "op4": "Boxing",
  "ans": "Javelin Throw"
},
{
  "ques": "Which Indian player is known for Chess?<br><br>",
  "quesType": "mcq",
  "op1": "Viswanathan Anand",
  "op2": "Abhinav Bindra",
  "op3": "Sushil Kumar",
  "op4": "Pankaj Advani",
  "ans": "Viswanathan Anand"
},
{
  "ques": "Who won the most Grand Slam titles in tennis (men) as of 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Roger Federer",
  "op2": "Rafael Nadal",
  "op3": "Novak Djokovic",
  "op4": "Andy Murray",
  "ans": "Novak Djokovic"
},
{
  "ques": "Which country won the 2022 FIFA World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Brazil",
  "op2": "Argentina",
  "op3": "France",
  "op4": "Germany",
  "ans": "Argentina"
},
{
  "ques": "Who is the first Indian to win an individual Olympic gold medal?<br><br>",
  "quesType": "mcq",
  "op1": "P.V. Sindhu",
  "op2": "Abhinav Bindra",
  "op3": "Neeraj Chopra",
  "op4": "Sushil Kumar",
  "ans": "Abhinav Bindra"
},
{
  "ques": "What is the national sport of India?<br><br>",
  "quesType": "mcq",
  "op1": "Cricket",
  "op2": "Hockey",
  "op3": "Football",
  "op4": "Kabaddi",
  "ans": "Hockey"
},
{
  "ques": "Who is known as Captain Cool?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Kapil Dev",
  "op3": "MS Dhoni",
  "op4": "Rohit Sharma",
  "ans": "MS Dhoni"
},
{
  "ques": "In which sport is P.V. Sindhu associated?<br><br>",
  "quesType": "mcq",
  "op1": "Table Tennis",
  "op2": "Tennis",
  "op3": "Badminton",
  "op4": "Squash",
  "ans": "Badminton"
},
{
  "ques": "Who won the Ballon d'Or in 2021?<br><br>",
  "quesType": "mcq",
  "op1": "Cristiano Ronaldo",
  "op2": "Lionel Messi",
  "op3": "Neymar",
  "op4": "Robert Lewandowski",
  "ans": "Lionel Messi"
},
{
  "ques": "Who is known as The Wall in cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Rahul Dravid",
  "op3": "Sourav Ganguly",
  "op4": "Virender Sehwag",
  "ans": "Rahul Dravid"
},
{
  "ques": "In which sport is the term 'Hat-Trick' used?<br><br>",
  "quesType": "mcq",
  "op1": "Basketball",
  "op2": "Football",
  "op3": "Badminton",
  "op4": "Golf",
  "ans": "Football"
},
{
  "ques": "Who is the fastest man in the world?<br><br>",
  "quesType": "mcq",
  "op1": "Tyson Gay",
  "op2": "Usain Bolt",
  "op3": "Yohan Blake",
  "op4": "Justin Gatlin",
  "ans": "Usain Bolt"
},
{
  "ques": "Who is the only Indian Formula One driver to race for Force India?<br><br>",
  "quesType": "mcq",
  "op1": "Narain Karthikeyan",
  "op2": "Jehan Daruvala",
  "op3": "Karun Chandhok",
  "op4": "Arjun Maini",
  "ans": "Karun Chandhok"
},
{
  "ques": "Which sport uses the term 'Birdie'?<br><br>",
  "quesType": "mcq",
  "op1": "Badminton",
  "op2": "Golf",
  "op3": "Cricket",
  "op4": "Tennis",
  "ans": "Golf"
},
{
  "ques": "Who is the current world number one in men's tennis (2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Carlos Alcaraz",
  "op2": "Novak Djokovic",
  "op3": "Rafael Nadal",
  "op4": "Daniil Medvedev",
  "ans": "Novak Djokovic"
},
{
  "ques": "Who won the ICC Women's World Cup in 2022?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "India",
  "op3": "England",
  "op4": "New Zealand",
  "ans": "Australia"
},
{
  "ques": "Who is called the Sultan of Multan?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Yuvraj Singh",
  "op3": "Harbhajan Singh",
  "op4": "Gautam Gambhir",
  "ans": "Virender Sehwag"
},
{
  "ques": "Which country hosted the 2016 Summer Olympics?<br><br>",
  "quesType": "mcq",
  "op1": "China",
  "op2": "UK",
  "op3": "Brazil",
  "op4": "Russia",
  "ans": "Brazil"
},
{
  "ques": "Who is the first Indian gymnast to qualify for the Olympics?<br><br>",
  "quesType": "mcq",
  "op1": "Deepa Karmakar",
  "op2": "P.T. Usha",
  "op3": "Hima Das",
  "op4": "Anju Bobby George",
  "ans": "Deepa Karmakar"
},
{
  "ques": "Which Indian player is famous in billiards and snooker?<br><br>",
  "quesType": "mcq",
  "op1": "Pankaj Advani",
  "op2": "Vishwanathan Anand",
  "op3": "Abhinav Bindra",
  "op4": "Yogeshwar Dutt",
  "ans": "Pankaj Advani"
}
,
{
  "ques": "Who is known as the 'God of Cricket' in India?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Sunil Gavaskar",
  "op3": "Sachin Tendulkar",
  "op4": "Kapil Dev",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who won the FIFA World Cup in 2018?<br><br>",
  "quesType": "mcq",
  "op1": "Brazil",
  "op2": "Germany",
  "op3": "France",
  "op4": "Argentina",
  "ans": "France"
},
{
  "ques": "Which country hosts the Wimbledon Tennis Championship?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Australia",
  "op3": "UK",
  "op4": "France",
  "ans": "UK"
},
{
  "ques": "Who is the fastest man in the world?<br><br>",
  "quesType": "mcq",
  "op1": "Usain Bolt",
  "op2": "Carl Lewis",
  "op3": "Justin Gatlin",
  "op4": "Yohan Blake",
  "ans": "Usain Bolt"
},
{
  "ques": "Who is known as the Flying Sikh of India?<br><br>",
  "quesType": "mcq",
  "op1": "Milkha Singh",
  "op2": "P.T. Usha",
  "op3": "Abhinav Bindra",
  "op4": "Leander Paes",
  "ans": "Milkha Singh"
},
{
  "ques": "Who won the ICC Cricket World Cup 2011?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "Sri Lanka",
  "op3": "India",
  "op4": "Pakistan",
  "ans": "India"
},
{
  "ques": "Who is the first Indian to win an individual Olympic gold medal?<br><br>",
  "quesType": "mcq",
  "op1": "P.V. Sindhu",
  "op2": "Abhinav Bindra",
  "op3": "Sushil Kumar",
  "op4": "Leander Paes",
  "ans": "Abhinav Bindra"
},
{
  "ques": "Who is the captain of the Indian men’s cricket team (as of 2024)?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Virat Kohli",
  "op3": "Rohit Sharma",
  "op4": "Hardik Pandya",
  "ans": "Rohit Sharma"
},
{
  "ques": "Which sport is P.V. Sindhu associated with?<br><br>",
  "quesType": "mcq",
  "op1": "Badminton",
  "op2": "Tennis",
  "op3": "Athletics",
  "op4": "Hockey",
  "ans": "Badminton"
},
{
  "ques": "Which sport is Sunil Chhetri associated with?<br><br>",
  "quesType": "mcq",
  "op1": "Hockey",
  "op2": "Football",
  "op3": "Cricket",
  "op4": "Badminton",
  "ans": "Football"
},
{
  "ques": "Who is known as the 'Master Blaster' in cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sachin Tendulkar",
  "op3": "MS Dhoni",
  "op4": "Sourav Ganguly",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who won the Australian Open Men's Singles title in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Roger Federer",
  "op2": "Novak Djokovic",
  "op3": "Rafael Nadal",
  "op4": "Carlos Alcaraz",
  "ans": "Novak Djokovic"
},
{
  "ques": "Who is known as the 'Wall' in Indian cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Rahul Dravid",
  "op3": "Anil Kumble",
  "op4": "VVS Laxman",
  "ans": "Rahul Dravid"
},
{
  "ques": "In which sport did Mary Kom win a bronze medal at the Olympics?<br><br>",
  "quesType": "mcq",
  "op1": "Wrestling",
  "op2": "Weightlifting",
  "op3": "Boxing",
  "op4": "Shooting",
  "ans": "Boxing"
},
{
  "ques": "Which country has won the most FIFA World Cups?<br><br>",
  "quesType": "mcq",
  "op1": "Germany",
  "op2": "Argentina",
  "op3": "Brazil",
  "op4": "Italy",
  "ans": "Brazil"
},
{
  "ques": "Who holds the record for most runs in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Brian Lara",
  "op2": "Sachin Tendulkar",
  "op3": "Ricky Ponting",
  "op4": "Jacques Kallis",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who is the current captain of the Indian women’s cricket team?<br><br>",
  "quesType": "mcq",
  "op1": "Mithali Raj",
  "op2": "Harmanpreet Kaur",
  "op3": "Smriti Mandhana",
  "op4": "Jhulan Goswami",
  "ans": "Harmanpreet Kaur"
},
{
  "ques": "Who won the Ballon d'Or in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Cristiano Ronaldo",
  "op2": "Karim Benzema",
  "op3": "Erling Haaland",
  "op4": "Lionel Messi",
  "ans": "Lionel Messi"
},
{
  "ques": "Which country will host the 2028 Olympic Games?<br><br>",
  "quesType": "mcq",
  "op1": "Paris",
  "op2": "Los Angeles",
  "op3": "Tokyo",
  "op4": "London",
  "ans": "Los Angeles"
},
{
  "ques": "Who is the first Indian woman to win an Olympic silver medal?<br><br>",
  "quesType": "mcq",
  "op1": "Mary Kom",
  "op2": "P.T. Usha",
  "op3": "Saina Nehwal",
  "op4": "P.V. Sindhu",
  "ans": "P.V. Sindhu"
},
{
  "ques": "Who is the top run scorer in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Rohit Sharma",
  "op2": "Virat Kohli",
  "op3": "David Warner",
  "op4": "Suresh Raina",
  "ans": "Virat Kohli"
},
{
  "ques": "Which sport is Saina Nehwal associated with?<br><br>",
  "quesType": "mcq",
  "op1": "Tennis",
  "op2": "Athletics",
  "op3": "Badminton",
  "op4": "Hockey",
  "ans": "Badminton"
},
{
  "ques": "Which Indian cricketer is nicknamed 'Captain Cool'?<br><br>",
  "quesType": "mcq",
  "op1": "Rohit Sharma",
  "op2": "Virat Kohli",
  "op3": "Kapil Dev",
  "op4": "MS Dhoni",
  "ans": "MS Dhoni"
},
{
  "ques": "Which country won the Hockey World Cup in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Australia",
  "op3": "Belgium",
  "op4": "Germany",
  "ans": "Germany"
},
{
  "ques": "Who won the French Open Men's Singles title in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Novak Djokovic",
  "op2": "Rafael Nadal",
  "op3": "Casper Ruud",
  "op4": "Carlos Alcaraz",
  "ans": "Novak Djokovic"
},
{
  "ques": "Which sport uses the term 'love' for zero score?<br><br>",
  "quesType": "mcq",
  "op1": "Badminton",
  "op2": "Tennis",
  "op3": "Squash",
  "op4": "Table Tennis",
  "ans": "Tennis"
},
{
  "ques": "Which country hosted the 2022 FIFA World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Russia",
  "op2": "Qatar",
  "op3": "USA",
  "op4": "Spain",
  "ans": "Qatar"
},
{
  "ques": "Who is known as the King of Clay in Tennis?<br><br>",
  "quesType": "mcq",
  "op1": "Roger Federer",
  "op2": "Novak Djokovic",
  "op3": "Rafael Nadal",
  "op4": "Andy Murray",
  "ans": "Rafael Nadal"
},
{
  "ques": "Which country won the ICC T20 World Cup in 2022?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Australia",
  "op3": "Pakistan",
  "op4": "England",
  "ans": "England"
},
{
  "ques": "Who is the only Indian gymnast to win a medal at the World Championships?<br><br>",
  "quesType": "mcq",
  "op1": "Dipa Karmakar",
  "op2": "P.T. Usha",
  "op3": "Hima Das",
  "op4": "Sania Mirza",
  "ans": "Dipa Karmakar"
}
,
{
      "ques": "Who is known as the 'God of Cricket'?<br><br>",
      "quesType": "mcq",
      "op1": "Virat Kohli",
      "op2": "Sachin Tendulkar",
      "op3": "MS Dhoni",
      "op4": "Kapil Dev",
      "ans": "Sachin Tendulkar"
    },
    {
      "ques": "Which country won the FIFA World Cup 2018?<br><br>",
      "quesType": "mcq",
      "op1": "Germany",
      "op2": "Brazil",
      "op3": "France",
      "op4": "Argentina",
      "ans": "France"
    },
    {
      "ques": "Who is the only player to win 8 Olympic gold medals in swimming?<br><br>",
      "quesType": "mcq",
      "op1": "Michael Phelps",
      "op2": "Usain Bolt",
      "op3": "Mark Spitz",
      "op4": "Ian Thorpe",
      "ans": "Michael Phelps"
    },
    {
      "ques": "Who is known as the 'Flying Sikh' of India?<br><br>",
      "quesType": "mcq",
      "op1": "Milkha Singh",
      "op2": "P. T. Usha",
      "op3": "Kapil Dev",
      "op4": "Sachin Tendulkar",
      "ans": "Milkha Singh"
    },
    {
      "ques": "Who won the Wimbledon 2021 Men's Singles title?<br><br>",
      "quesType": "mcq",
      "op1": "Rafael Nadal",
      "op2": "Roger Federer",
      "op3": "Novak Djokovic",
      "op4": "Andy Murray",
      "ans": "Novak Djokovic"
    },
    {
      "ques": "Who is the captain of the Indian Women's Cricket Team (2022)?<br><br>",
      "quesType": "mcq",
      "op1": "Smriti Mandhana",
      "op2": "Harmanpreet Kaur",
      "op3": "Mithali Raj",
      "op4": "Jhulan Goswami",
      "ans": "Harmanpreet Kaur"
    },
    {
      "ques": "Who holds the record for the fastest 100m sprint?<br><br>",
      "quesType": "mcq",
      "op1": "Tyson Gay",
      "op2": "Yohan Blake",
      "op3": "Usain Bolt",
      "op4": "Justin Gatlin",
      "ans": "Usain Bolt"
    },
    {
      "ques": "Which country hosts the Tour de France?<br><br>",
      "quesType": "mcq",
      "op1": "Italy",
      "op2": "Spain",
      "op3": "Germany",
      "op4": "France",
      "ans": "France"
    },
    {
      "ques": "Who won the ICC Men's Cricket World Cup 2019?<br><br>",
      "quesType": "mcq",
      "op1": "India",
      "op2": "Australia",
      "op3": "England",
      "op4": "New Zealand",
      "ans": "England"
    },
    {
      "ques": "Who is known as the 'Master Blaster'?<br><br>",
      "quesType": "mcq",
      "op1": "Virat Kohli",
      "op2": "Rahul Dravid",
      "op3": "MS Dhoni",
      "op4": "Sachin Tendulkar",
      "ans": "Sachin Tendulkar"
    },
    {
      "ques": "PV Sindhu is associated with which sport?<br><br>",
      "quesType": "mcq",
      "op1": "Tennis",
      "op2": "Badminton",
      "op3": "Hockey",
      "op4": "Athletics",
      "ans": "Badminton"
    },
    {
      "ques": "Which game is Viswanathan Anand associated with?<br><br>",
      "quesType": "mcq",
      "op1": "Tennis",
      "op2": "Badminton",
      "op3": "Chess",
      "op4": "Golf",
      "ans": "Chess"
    },
    {
      "ques": "Who is known as the 'Dhing Express'?<br><br>",
      "quesType": "mcq",
      "op1": "P. V. Sindhu",
      "op2": "Dutee Chand",
      "op3": "Hima Das",
      "op4": "Saina Nehwal",
      "ans": "Hima Das"
    },
    {
      "ques": "Which sport is associated with the Davis Cup?<br><br>",
      "quesType": "mcq",
      "op1": "Football",
      "op2": "Cricket",
      "op3": "Tennis",
      "op4": "Hockey",
      "ans": "Tennis"
    },
    {
      "ques": "Who was the first Indian woman to win an Olympic silver medal?<br><br>",
      "quesType": "mcq",
      "op1": "Mary Kom",
      "op2": "Karnam Malleswari",
      "op3": "P. V. Sindhu",
      "op4": "Saina Nehwal",
      "ans": "P. V. Sindhu"
    },
    {
      "ques": "Which cricketer is nicknamed 'Captain Cool'?<br><br>",
      "quesType": "mcq",
      "op1": "Sourav Ganguly",
      "op2": "MS Dhoni",
      "op3": "Virat Kohli",
      "op4": "Rohit Sharma",
      "ans": "MS Dhoni"
    },
    {
      "ques": "Which country is famous for Sumo wrestling?<br><br>",
      "quesType": "mcq",
      "op1": "China",
      "op2": "Thailand",
      "op3": "Japan",
      "op4": "Korea",
      "ans": "Japan"
    },
    {
      "ques": "Who is the first Indian to win an individual Olympic gold medal?<br><br>",
      "quesType": "mcq",
      "op1": "Leander Paes",
      "op2": "Abhinav Bindra",
      "op3": "Rajyavardhan Singh Rathore",
      "op4": "Milkha Singh",
      "ans": "Abhinav Bindra"
    },
    {
      "ques": "In which sport is the term 'Hat-trick' commonly used?<br><br>",
      "quesType": "mcq",
      "op1": "Football",
      "op2": "Basketball",
      "op3": "Tennis",
      "op4": "Volleyball",
      "ans": "Football"
    },
    {
      "ques": "Rohit Sharma is associated with which sport?<br><br>",
      "quesType": "mcq",
      "op1": "Tennis",
      "op2": "Football",
      "op3": "Badminton",
      "op4": "Cricket",
      "ans": "Cricket"
    },
    {
      "ques": "Which sport uses the term 'Love' for a score of zero?<br><br>",
      "quesType": "mcq",
      "op1": "Football",
      "op2": "Cricket",
      "op3": "Tennis",
      "op4": "Hockey",
      "ans": "Tennis"
    },
    {
      "ques": "Which country has won the most Olympic medals in history?<br><br>",
      "quesType": "mcq",
      "op1": "China",
      "op2": "Russia",
      "op3": "USA",
      "op4": "Germany",
      "ans": "USA"
    },
    {
      "ques": "Who is the fastest man alive?<br><br>",
      "quesType": "mcq",
      "op1": "Carl Lewis",
      "op2": "Michael Johnson",
      "op3": "Usain Bolt",
      "op4": "Justin Gatlin",
      "ans": "Usain Bolt"
    },
    {
      "ques": "Which Indian boxer is nicknamed 'Magnificent Mary'?<br><br>",
      "quesType": "mcq",
      "op1": "Mary Kom",
      "op2": "Lovlina Borgohain",
      "op3": "Pooja Rani",
      "op4": "Sarita Devi",
      "ans": "Mary Kom"
    },
    {
      "ques": "Which sport does Sunil Chhetri play?<br><br>",
      "quesType": "mcq",
      "op1": "Cricket",
      "op2": "Football",
      "op3": "Badminton",
      "op4": "Hockey",
      "ans": "Football"
    },
    {
      "ques": "Which Indian city hosts the Eden Gardens stadium?<br><br>",
      "quesType": "mcq",
      "op1": "Delhi",
      "op2": "Mumbai",
      "op3": "Kolkata",
      "op4": "Chennai",
      "ans": "Kolkata"
    },
    {
      "ques": "Which sport is associated with the Ranji Trophy?<br><br>",
      "quesType": "mcq",
      "op1": "Hockey",
      "op2": "Football",
      "op3": "Badminton",
      "op4": "Cricket",
      "ans": "Cricket"
    },
    {
      "ques": "Which Indian won gold in javelin at Tokyo Olympics 2020?<br><br>",
      "quesType": "mcq",
      "op1": "Yogeshwar Dutt",
      "op2": "Neeraj Chopra",
      "op3": "Bajrang Punia",
      "op4": "Abhinav Bindra",
      "ans": "Neeraj Chopra"
    },
    {
      "ques": "Which player is called 'King Kohli'?<br><br>",
      "quesType": "mcq",
      "op1": "Virat Kohli",
      "op2": "MS Dhoni",
      "op3": "Rohit Sharma",
      "op4": "KL Rahul",
      "ans": "Virat Kohli"
    },
    {
      "ques": "Who won the Ballon d'Or in 2021?<br><br>",
      "quesType": "mcq",
      "op1": "Cristiano Ronaldo",
      "op2": "Lionel Messi",
      "op3": "Karim Benzema",
      "op4": "Robert Lewandowski",
      "ans": "Lionel Messi"
    },
    {
  "ques": "Who won the ICC Men's Cricket World Cup in 2019?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "India",
  "op3": "England",
  "op4": "New Zealand",
  "ans": "England"
},
{
  "ques": "Which sport is associated with the Ryder Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Tennis",
  "op2": "Golf",
  "op3": "Football",
  "op4": "Badminton",
  "ans": "Golf"
},
{
  "ques": "Who holds the record for most goals in football history?<br><br>",
  "quesType": "mcq",
  "op1": "Cristiano Ronaldo",
  "op2": "Pele",
  "op3": "Lionel Messi",
  "op4": "Diego Maradona",
  "ans": "Cristiano Ronaldo"
},
{
  "ques": "Which country won the first Cricket World Cup in 1975?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Australia",
  "op3": "England",
  "op4": "West Indies",
  "ans": "West Indies"
},
{
  "ques": "Who is called the 'Hitman' of Indian cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Shikhar Dhawan",
  "op3": "Rohit Sharma",
  "op4": "Hardik Pandya",
  "ans": "Rohit Sharma"
},
{
  "ques": "Which player is known as the 'Dhing Express'?<br><br>",
  "quesType": "mcq",
  "op1": "P.V. Sindhu",
  "op2": "Hima Das",
  "op3": "Mary Kom",
  "op4": "Saina Nehwal",
  "ans": "Hima Das"
},
{
  "ques": "Who won the Australian Open 2022 (Men's Singles)?<br><br>",
  "quesType": "mcq",
  "op1": "Rafael Nadal",
  "op2": "Novak Djokovic",
  "op3": "Roger Federer",
  "op4": "Daniil Medvedev",
  "ans": "Rafael Nadal"
},
{
  "ques": "Which sport is Tiger Woods associated with?<br><br>",
  "quesType": "mcq",
  "op1": "Tennis",
  "op2": "Golf",
  "op3": "Basketball",
  "op4": "Athletics",
  "ans": "Golf"
},
{
  "ques": "Who won the first T20 World Cup in 2007?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "Pakistan",
  "op3": "India",
  "op4": "England",
  "ans": "India"
},
{
  "ques": "What sport is Michael Phelps famous for?<br><br>",
  "quesType": "mcq",
  "op1": "Cycling",
  "op2": "Swimming",
  "op3": "Athletics",
  "op4": "Wrestling",
  "ans": "Swimming"
},
{
  "ques": "Who is the first Indian woman boxer to win an Olympic medal?<br><br>",
  "quesType": "mcq",
  "op1": "Mary Kom",
  "op2": "Lalita Babar",
  "op3": "P.V. Sindhu",
  "op4": "Hima Das",
  "ans": "Mary Kom"
},
{
  "ques": "Who is known as the sprint queen of India?<br><br>",
  "quesType": "mcq",
  "op1": "Karnam Malleswari",
  "op2": "P.T. Usha",
  "op3": "Hima Das",
  "op4": "Mary Kom",
  "ans": "P.T. Usha"
},
{
  "ques": "In which sport is the term 'Checkmate' used?<br><br>",
  "quesType": "mcq",
  "op1": "Boxing",
  "op2": "Wrestling",
  "op3": "Chess",
  "op4": "Fencing",
  "ans": "Chess"
},
{
  "ques": "Who is known as the King of Clay in tennis?<br><br>",
  "quesType": "mcq",
  "op1": "Roger Federer",
  "op2": "Novak Djokovic",
  "op3": "Rafael Nadal",
  "op4": "Andy Murray",
  "ans": "Rafael Nadal"
},
{
  "ques": "Who is the first Indian to win a medal in Badminton at the Olympics?<br><br>",
  "quesType": "mcq",
  "op1": "P.V. Sindhu",
  "op2": "Saina Nehwal",
  "op3": "Aparna Popat",
  "op4": "Jwala Gutta",
  "ans": "Saina Nehwal"
},
{
  "ques": "Which country has won the most FIFA World Cups?<br><br>",
  "quesType": "mcq",
  "op1": "Germany",
  "op2": "Italy",
  "op3": "Brazil",
  "op4": "Argentina",
  "ans": "Brazil"
},
{
  "ques": "Who is the captain of the Indian Women’s Hockey Team (as of 2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Poonam Rani",
  "op2": "Rani Rampal",
  "op3": "Savita Punia",
  "op4": "Deep Grace Ekka",
  "ans": "Savita Punia"
},
{
  "ques": "Which Indian cricketer is known for scoring six sixes in an over?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Yuvraj Singh",
  "op3": "Rohit Sharma",
  "op4": "Virender Sehwag",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Which sport uses the term 'Love'?<br><br>",
  "quesType": "mcq",
  "op1": "Golf",
  "op2": "Cricket",
  "op3": "Badminton",
  "op4": "Tennis",
  "ans": "Tennis"
},
{
  "ques": "Which team won the IPL 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai Indians",
  "op2": "Gujarat Titans",
  "op3": "Chennai Super Kings",
  "op4": "Kolkata Knight Riders",
  "ans": "Chennai Super Kings"
},
{
  "ques": "Which Indian city hosts the Eden Gardens stadium?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai",
  "op2": "Kolkata",
  "op3": "Chennai",
  "op4": "Delhi",
  "ans": "Kolkata"
},
{
  "ques": "Who is known as the 'Run Machine' in cricket?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Rahul Dravid",
  "op3": "Virat Kohli",
  "op4": "Rohit Sharma",
  "ans": "Virat Kohli"
},
{
  "ques": "In which sport do you perform a 'slam dunk'?<br><br>",
  "quesType": "mcq",
  "op1": "Football",
  "op2": "Hockey",
  "op3": "Basketball",
  "op4": "Volleyball",
  "ans": "Basketball"
},
{
  "ques": "Who won the ICC Women's T20 World Cup 2023?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Australia",
  "op3": "England",
  "op4": "South Africa",
  "ans": "Australia"
},
{
  "ques": "What is the full form of IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Indian Player League",
  "op2": "International Premier League",
  "op3": "Indian Premier League",
  "op4": "International Player League",
  "ans": "Indian Premier League"
},
{
  "ques": "Who is the first Indian fencer to qualify for the Olympics?<br><br>",
  "quesType": "mcq",
  "op1": "Bhavani Devi",
  "op2": "Deepa Karmakar",
  "op3": "P.T. Usha",
  "op4": "Mary Kom",
  "ans": "Bhavani Devi"
},
{
  "ques": "Which Indian won gold in wrestling at the Commonwealth Games?<br><br>",
  "quesType": "mcq",
  "op1": "Yogeshwar Dutt",
  "op2": "Bajrang Punia",
  "op3": "Sushil Kumar",
  "op4": "All of these",
  "ans": "All of these"
},
{
  "ques": "Which Indian player is nicknamed 'The Turbanator'?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "Harbhajan Singh",
  "op3": "Sourav Ganguly",
  "op4": "Virender Sehwag",
  "ans": "Harbhajan Singh"
},
{
  "ques": "What sport is associated with the Davis Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Badminton",
  "op2": "Cricket",
  "op3": "Hockey",
  "op4": "Tennis",
  "ans": "Tennis"
},
{
  "ques": "Who is the first Indian male shuttler to win an Olympic medal?<br><br>",
  "quesType": "mcq",
  "op1": "Parupalli Kashyap",
  "op2": "Kidambi Srikanth",
  "op3": "Lakshya Sen",
  "op4": "No one yet",
  "ans": "No one yet"
}
,
{
  "ques": "Who is the only batsman to score 100 international centuries?<br><br>",
  "quesType": "mcq",
  "op1": "Brian Lara",
  "op2": "Ricky Ponting",
  "op3": "Sachin Tendulkar",
  "op4": "Virat Kohli",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Which bowler has taken the most wickets in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Shane Warne",
  "op2": "James Anderson",
  "op3": "Muttiah Muralitharan",
  "op4": "Anil Kumble",
  "ans": "Muttiah Muralitharan"
},
{
  "ques": "Who captained India to win the 1983 Cricket World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Kapil Dev",
  "op3": "Mohinder Amarnath",
  "op4": "Ravi Shastri",
  "ans": "Kapil Dev"
},
{
  "ques": "Who is known as the 'Sultan of Swing'?<br><br>",
  "quesType": "mcq",
  "op1": "Wasim Akram",
  "op2": "Imran Khan",
  "op3": "Glenn McGrath",
  "op4": "Curtly Ambrose",
  "ans": "Wasim Akram"
},
{
  "ques": "Which cricketer is nicknamed 'The Rawalpindi Express'?<br><br>",
  "quesType": "mcq",
  "op1": "Shoaib Akhtar",
  "op2": "Wasim Akram",
  "op3": "Imran Khan",
  "op4": "Waqar Younis",
  "ans": "Shoaib Akhtar"
},
{
  "ques": "Who is the highest run scorer in ODI cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Ricky Ponting",
  "op2": "Virat Kohli",
  "op3": "Sachin Tendulkar",
  "op4": "Sanath Jayasuriya",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Which Indian bowler has the most wickets in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Zaheer Khan",
  "op2": "Anil Kumble",
  "op3": "Javagal Srinath",
  "op4": "Kapil Dev",
  "ans": "Anil Kumble"
},
{
  "ques": "Who was the first Indian to score a triple century in Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Sunil Gavaskar",
  "op3": "Virender Sehwag",
  "op4": "Rahul Dravid",
  "ans": "Virender Sehwag"
},
{
  "ques": "Who won the ICC Cricket World Cup in 2019?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "India",
  "op3": "England",
  "op4": "New Zealand",
  "ans": "England"
},
{
  "ques": "Who holds the record for the fastest century in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "AB de Villiers",
  "op2": "Shahid Afridi",
  "op3": "Corey Anderson",
  "op4": "Virender Sehwag",
  "ans": "AB de Villiers"
},
{
  "ques": "Which Indian cricketer is known as 'The Hitman'?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "MS Dhoni",
  "op3": "Rohit Sharma",
  "op4": "Shikhar Dhawan",
  "ans": "Rohit Sharma"
},
{
  "ques": "Which country won the first ICC T20 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "India",
  "op3": "Pakistan",
  "op4": "South Africa",
  "ans": "India"
},
{
  "ques": "Who hit six sixes in an over in a T20 World Cup match?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Yuvraj Singh",
  "op3": "Virat Kohli",
  "op4": "Suresh Raina",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Which Indian cricketer is known as 'Captain Cool'?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Kapil Dev",
  "op3": "Rahul Dravid",
  "op4": "MS Dhoni",
  "ans": "MS Dhoni"
},
{
  "ques": "Who is the only bowler to take 10 wickets in a Test innings for India?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Kapil Dev",
  "op3": "Jasprit Bumrah",
  "op4": "Ishant Sharma",
  "ans": "Anil Kumble"
},
{
  "ques": "Who is the highest wicket taker in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Dwayne Bravo",
  "op3": "Bhuvneshwar Kumar",
  "op4": "Yuzvendra Chahal",
  "ans": "Yuzvendra Chahal"
},
{
  "ques": "Who is the youngest cricketer to score a double century in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Rohit Sharma",
  "op2": "Shubman Gill",
  "op3": "Ishan Kishan",
  "op4": "Prithvi Shaw",
  "ans": "Ishan Kishan"
},
{
  "ques": "Who is the coach of the Indian men's cricket team (as of 2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Ravi Shastri",
  "op2": "Rahul Dravid",
  "op3": "Anil Kumble",
  "op4": "VVS Laxman",
  "ans": "Rahul Dravid"
},
{
  "ques": "Which stadium is known as the 'Home of Cricket'?<br><br>",
  "quesType": "mcq",
  "op1": "Eden Gardens",
  "op2": "Wankhede Stadium",
  "op3": "Lord's",
  "op4": "MCG",
  "ans": "Lord's"
},
{
  "ques": "Which Indian cricketer is nicknamed 'Gabbar'?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Shikhar Dhawan",
  "op3": "Rohit Sharma",
  "op4": "Hardik Pandya",
  "ans": "Shikhar Dhawan"
},
{
  "ques": "Who won the Orange Cap in IPL 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Shubman Gill",
  "op2": "Jos Buttler",
  "op3": "David Warner",
  "op4": "Faf du Plessis",
  "ans": "Shubman Gill"
},
{
  "ques": "Which bowler delivered the most dot balls in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Narine",
  "op2": "Rashid Khan",
  "op3": "Bhuvneshwar Kumar",
  "op4": "Harbhajan Singh",
  "ans": "Bhuvneshwar Kumar"
},
{
  "ques": "Who holds the record for the highest individual score in ODI cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Rohit Sharma",
  "op3": "Martin Guptill",
  "op4": "Chris Gayle",
  "ans": "Rohit Sharma"
},
{
  "ques": "Which team won the IPL 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai Indians",
  "op2": "Gujarat Titans",
  "op3": "Chennai Super Kings",
  "op4": "Rajasthan Royals",
  "ans": "Chennai Super Kings"
},
{
  "ques": "Who is the first cricketer to hit six sixes in an over in first-class cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "Gary Sobers",
  "op3": "Kieron Pollard",
  "op4": "Ravi Shastri",
  "ans": "Gary Sobers"
},
{
  "ques": "Who scored the fastest fifty in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "KL Rahul",
  "op2": "Chris Gayle",
  "op3": "Yusuf Pathan",
  "op4": "Pat Cummins",
  "ans": "KL Rahul"
},
{
  "ques": "Who is called the 'Prince of Kolkata'?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sourav Ganguly",
  "op3": "MS Dhoni",
  "op4": "Kapil Dev",
  "ans": "Sourav Ganguly"
},
{
  "ques": "Who is the current BCCI President (as of 2024)?<br><br>",
  "quesType": "mcq",
  "op1": "Sourav Ganguly",
  "op2": "Roger Binny",
  "op3": "Jay Shah",
  "op4": "Anurag Thakur",
  "ans": "Roger Binny"
},
{
  "ques": "Who bowled the Super Over for India in the 2019 World Cup semi-final?<br><br>",
  "quesType": "mcq",
  "op1": "Jasprit Bumrah",
  "op2": "Hardik Pandya",
  "op3": "Bhuvneshwar Kumar",
  "op4": "Yuzvendra Chahal",
  "ans": "Jasprit Bumrah"
},
{
  "ques": "Who is the first Indian to score a century in T20I cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "Rohit Sharma",
  "op3": "Suresh Raina",
  "op4": "Virat Kohli",
  "ans": "Suresh Raina"
}
,
{
  "ques": "Which Indian batsman is nicknamed 'The Wall'?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sourav Ganguly",
  "op3": "Virat Kohli",
  "op4": "MS Dhoni",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who won the ICC Men's T20 World Cup 2022?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "England",
  "op3": "India",
  "op4": "Pakistan",
  "ans": "England"
},
{
  "ques": "Which female tennis player has won the most Grand Slam singles titles?<br><br>",
  "quesType": "mcq",
  "op1": "Serena Williams",
  "op2": "Steffi Graf",
  "op3": "Margaret Court",
  "op4": "Martina Navratilova",
  "ans": "Margaret Court"
},
{
  "ques": "Who is known as the 'King of Clay' in tennis?<br><br>",
  "quesType": "mcq",
  "op1": "Roger Federer",
  "op2": "Andy Murray",
  "op3": "Rafael Nadal",
  "op4": "Novak Djokovic",
  "ans": "Rafael Nadal"
},
{
  "ques": "Who is the captain of the Indian Men's Hockey Team (2022)?<br><br>",
  "quesType": "mcq",
  "op1": "Manpreet Singh",
  "op2": "PR Sreejesh",
  "op3": "Harmanpreet Singh",
  "op4": "Rupinder Pal Singh",
  "ans": "Manpreet Singh"
},
{
  "ques": "Which country is famous for producing top Formula 1 drivers?<br><br>",
  "quesType": "mcq",
  "op1": "USA",
  "op2": "Germany",
  "op3": "Japan",
  "op4": "China",
  "ans": "Germany"
},
{
  "ques": "Who won the French Open Men's Singles title in 2022?<br><br>",
  "quesType": "mcq",
  "op1": "Rafael Nadal",
  "op2": "Novak Djokovic",
  "op3": "Carlos Alcaraz",
  "op4": "Stefanos Tsitsipas",
  "ans": "Rafael Nadal"
},
{
  "ques": "Which sport is Saina Nehwal associated with?<br><br>",
  "quesType": "mcq",
  "op1": "Tennis",
  "op2": "Badminton",
  "op3": "Squash",
  "op4": "Table Tennis",
  "ans": "Badminton"
},
{
  "ques": "What sport is LeBron James famous for?<br><br>",
  "quesType": "mcq",
  "op1": "Baseball",
  "op2": "Basketball",
  "op3": "American Football",
  "op4": "Soccer",
  "ans": "Basketball"
},
{
  "ques": "Who is called the 'Hitman' in Indian cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Shikhar Dhawan",
  "op2": "Rohit Sharma",
  "op3": "KL Rahul",
  "op4": "Rishabh Pant",
  "ans": "Rohit Sharma"
},
{
  "ques": "Which country is famous for the sport Rugby?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "USA",
  "op3": "New Zealand",
  "op4": "Japan",
  "ans": "New Zealand"
},
{
  "ques": "Who won the ICC Women's World Cup 2022?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "India",
  "op3": "England",
  "op4": "South Africa",
  "ans": "Australia"
},
{
  "ques": "Who is India's famous boxing champion?<br><br>",
  "quesType": "mcq",
  "op1": "Mary Kom",
  "op2": "PV Sindhu",
  "op3": "Hima Das",
  "op4": "Geeta Phogat",
  "ans": "Mary Kom"
},
{
  "ques": "Which sport uses the term 'Eagle'?<br><br>",
  "quesType": "mcq",
  "op1": "Tennis",
  "op2": "Golf",
  "op3": "Badminton",
  "op4": "Squash",
  "ans": "Golf"
},
{
  "ques": "Which city hosted the 2020 Summer Olympics (held in 2021)?<br><br>",
  "quesType": "mcq",
  "op1": "Rio de Janeiro",
  "op2": "Tokyo",
  "op3": "Beijing",
  "op4": "London",
  "ans": "Tokyo"
},
{
  "ques": "Who is known as the 'Nawab of Najafgarh'?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Yuvraj Singh",
  "op3": "MS Dhoni",
  "op4": "Shikhar Dhawan",
  "ans": "Virender Sehwag"
},
{
  "ques": "Which Indian city is famous for the Hockey India League?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai",
  "op2": "Delhi",
  "op3": "Ranchi",
  "op4": "Chennai",
  "ans": "Ranchi"
},
{
  "ques": "Who is the captain of the Indian Football Team?<br><br>",
  "quesType": "mcq",
  "op1": "Gurpreet Singh Sandhu",
  "op2": "Sunil Chhetri",
  "op3": "Anirudh Thapa",
  "op4": "Sahal Abdul Samad",
  "ans": "Sunil Chhetri"
},
{
  "ques": "Which sport uses the term 'Checkmate'?<br><br>",
  "quesType": "mcq",
  "op1": "Tennis",
  "op2": "Boxing",
  "op3": "Chess",
  "op4": "Golf",
  "ans": "Chess"
},
{
  "ques": "Who is called the 'Sultan of Multan'?<br><br>",
  "quesType": "mcq",
  "op1": "Wasim Akram",
  "op2": "Inzamam-ul-Haq",
  "op3": "Shahid Afridi",
  "op4": "Shoaib Akhtar",
  "ans": "Inzamam-ul-Haq"
},
{
  "ques": "Which sport is associated with the term 'Penalty Corner'?<br><br>",
  "quesType": "mcq",
  "op1": "Football",
  "op2": "Hockey",
  "op3": "Basketball",
  "op4": "Cricket",
  "ans": "Hockey"
},
{
  "ques": "Who won the Golden Boot in FIFA World Cup 2018?<br><br>",
  "quesType": "mcq",
  "op1": "Harry Kane",
  "op2": "Lionel Messi",
  "op3": "Cristiano Ronaldo",
  "op4": "Kylian Mbappé",
  "ans": "Harry Kane"
},
{
  "ques": "Who is India's first Grandmaster in chess?<br><br>",
  "quesType": "mcq",
  "op1": "Viswanathan Anand",
  "op2": "Pentala Harikrishna",
  "op3": "Vidit Gujrathi",
  "op4": "Praggnanandhaa",
  "ans": "Viswanathan Anand"
},
{
  "ques": "Which country won the ICC Champions Trophy 2017?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Pakistan",
  "op3": "Australia",
  "op4": "England",
  "ans": "Pakistan"
},
{
  "ques": "Which sport does Neeraj Chopra play?<br><br>",
  "quesType": "mcq",
  "op1": "Archery",
  "op2": "Boxing",
  "op3": "Wrestling",
  "op4": "Javelin Throw",
  "ans": "Javelin Throw"
},
{
  "ques": "Who won the ICC Cricketer of the Year 2018?<br><br>",
  "quesType": "mcq",
  "op1": "Kane Williamson",
  "op2": "Steve Smith",
  "op3": "Virat Kohli",
  "op4": "Joe Root",
  "ans": "Virat Kohli"
},
{
  "ques": "What is the national sport of Canada?<br><br>",
  "quesType": "mcq",
  "op1": "Ice Hockey",
  "op2": "Football",
  "op3": "Baseball",
  "op4": "Basketball",
  "ans": "Ice Hockey"
},
{
  "ques": "Which Indian city hosts the M. A. Chidambaram Stadium?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai",
  "op2": "Delhi",
  "op3": "Chennai",
  "op4": "Bangalore",
  "ans": "Chennai"
},
{
  "ques": "Who won the ICC Women's T20 World Cup 2020?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "India",
  "op3": "England",
  "op4": "South Africa",
  "ans": "Australia"
}
,
{
  "ques": "Who is known as the 'God of Cricket'?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sourav Ganguly",
  "op3": "Sachin Tendulkar",
  "op4": "Virat Kohli",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "How many players are there in a cricket team?<br><br>",
  "quesType": "mcq",
  "op1": "9",
  "op2": "10",
  "op3": "11",
  "op4": "12",
  "ans": "11"
},
{
  "ques": "Which trophy is associated with Indian domestic cricket?<br><br>",
  "quesType": "mcq",
  "op1": "FIFA Cup",
  "op2": "Ranji Trophy",
  "op3": "Wimbledon",
  "op4": "Thomas Cup",
  "ans": "Ranji Trophy"
},
{
  "ques": "Who is India’s highest run scorer in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Sourav Ganguly",
  "op2": "Virat Kohli",
  "op3": "Sachin Tendulkar",
  "op4": "MS Dhoni",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Which cricket format has the shortest match time?<br><br>",
  "quesType": "mcq",
  "op1": "Test",
  "op2": "ODI",
  "op3": "T20",
  "op4": "Tri-Series",
  "ans": "T20"
},
{
  "ques": "Who is the first Indian cricketer to score a double century in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "MS Dhoni",
  "op3": "Rohit Sharma",
  "op4": "Sachin Tendulkar",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Where is the Eden Gardens stadium located?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi",
  "op2": "Mumbai",
  "op3": "Chennai",
  "op4": "Kolkata",
  "ans": "Kolkata"
},
{
  "ques": "Who was the captain of India when they won the 1983 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Kapil Dev",
  "op3": "Mohinder Amarnath",
  "op4": "Ravi Shastri",
  "ans": "Kapil Dev"
},
{
  "ques": "Who is known for hitting six sixes in an over in T20 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Yuvraj Singh",
  "op3": "Rohit Sharma",
  "op4": "Hardik Pandya",
  "ans": "Yuvraj Singh"
},
{
  "ques": "What is the maximum number of overs in an ODI match per team?<br><br>",
  "quesType": "mcq",
  "op1": "40",
  "op2": "50",
  "op3": "20",
  "op4": "60",
  "ans": "50"
},
{
  "ques": "Which Indian bowler is known as 'Turbanator'?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Harbhajan Singh",
  "op3": "Zaheer Khan",
  "op4": "R. Ashwin",
  "ans": "Harbhajan Singh"
},
{
  "ques": "Which country hosts the Ashes series with England?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Australia",
  "op3": "New Zealand",
  "op4": "South Africa",
  "ans": "Australia"
},
{
  "ques": "Which player is known for the helicopter shot?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Suresh Raina",
  "op3": "MS Dhoni",
  "op4": "Shikhar Dhawan",
  "ans": "MS Dhoni"
},
{
  "ques": "How many runs is a boundary worth?<br><br>",
  "quesType": "mcq",
  "op1": "2",
  "op2": "4",
  "op3": "5",
  "op4": "6",
  "ans": "4"
},
{
  "ques": "Which Indian bowler took a hat-trick in World Cup 2019?<br><br>",
  "quesType": "mcq",
  "op1": "Mohammed Shami",
  "op2": "Jasprit Bumrah",
  "op3": "Bhuvneshwar Kumar",
  "op4": "Yuzvendra Chahal",
  "ans": "Mohammed Shami"
},
{
  "ques": "Which city is the home of the M.A. Chidambaram Stadium?<br><br>",
  "quesType": "mcq",
  "op1": "Kolkata",
  "op2": "Chennai",
  "op3": "Bengaluru",
  "op4": "Hyderabad",
  "ans": "Chennai"
},
{
  "ques": "Which country does not play Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Ireland",
  "op2": "Afghanistan",
  "op3": "Nepal",
  "op4": "Bangladesh",
  "ans": "Nepal"
},
{
  "ques": "Who was the coach of the Indian team during 2011 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Ravi Shastri",
  "op2": "Gary Kirsten",
  "op3": "Greg Chappell",
  "op4": "Anil Kumble",
  "ans": "Gary Kirsten"
},
{
  "ques": "What is LBW in cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Leg Before Wicket",
  "op2": "Long Ball Wide",
  "op3": "Last Batting Wicket",
  "op4": "Low Ball Wide",
  "ans": "Leg Before Wicket"
},
{
  "ques": "Which Indian player is famous for aggressive captaincy?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Virat Kohli",
  "op3": "Ajinkya Rahane",
  "op4": "VVS Laxman",
  "ans": "Virat Kohli"
}
,
{
  "ques": "Who is known as the 'Master Blaster' in cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Brian Lara",
  "op3": "Sachin Tendulkar",
  "op4": "Viv Richards",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who holds the record for highest individual score in a Test match?<br><br>",
  "quesType": "mcq",
  "op1": "Matthew Hayden",
  "op2": "Brian Lara",
  "op3": "Don Bradman",
  "op4": "Chris Gayle",
  "ans": "Brian Lara"
},
{
  "ques": "Which Indian player scored a double century in ODIs first?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Rohit Sharma",
  "op3": "Sachin Tendulkar",
  "op4": "Yuvraj Singh",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who hit the winning runs in the 2011 ICC World Cup Final?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "Gautam Gambhir",
  "op3": "MS Dhoni",
  "op4": "Virat Kohli",
  "ans": "MS Dhoni"
},
{
  "ques": "Which Indian player is nicknamed 'Mr. 360'?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "AB de Villiers",
  "op3": "Rishabh Pant",
  "op4": "Suryakumar Yadav",
  "ans": "Suryakumar Yadav"
},
{
  "ques": "Who is the first bowler to take a hat-trick in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Mishra",
  "op2": "Lakshmipathy Balaji",
  "op3": "Sunil Narine",
  "op4": "Yuzvendra Chahal",
  "ans": "Lakshmipathy Balaji"
},
{
  "ques": "Who won the ICC Spirit of Cricket Award 2021?<br><br>",
  "quesType": "mcq",
  "op1": "Kane Williamson",
  "op2": "Virat Kohli",
  "op3": "MS Dhoni",
  "op4": "Dinesh Karthik",
  "ans": "Dinesh Karthik"
},
{
  "ques": "Which bowler has the most five-wicket hauls in Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Shane Warne",
  "op2": "James Anderson",
  "op3": "Muttiah Muralitharan",
  "op4": "Glenn McGrath",
  "ans": "Muttiah Muralitharan"
},
{
  "ques": "Which country has won the most ICC Cricket World Cups?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Australia",
  "op3": "England",
  "op4": "West Indies",
  "ans": "Australia"
},
{
  "ques": "Who is the first Indian woman cricketer to score a T20I century?<br><br>",
  "quesType": "mcq",
  "op1": "Mithali Raj",
  "op2": "Smriti Mandhana",
  "op3": "Harmanpreet Kaur",
  "op4": "Jemimah Rodrigues",
  "ans": "Harmanpreet Kaur"
},
{
  "ques": "Which Indian spinner is known for his 'carrom ball'?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Ravindra Jadeja",
  "op3": "Harbhajan Singh",
  "op4": "Ravichandran Ashwin",
  "ans": "Ravichandran Ashwin"
},
{
  "ques": "Who won the Purple Cap in IPL 2022?<br><br>",
  "quesType": "mcq",
  "op1": "Yuzvendra Chahal",
  "op2": "Umran Malik",
  "op3": "Harshal Patel",
  "op4": "Kagiso Rabada",
  "ans": "Yuzvendra Chahal"
},
{
  "ques": "Who was the first captain of the Indian cricket team?<br><br>",
  "quesType": "mcq",
  "op1": "Lala Amarnath",
  "op2": "CK Nayudu",
  "op3": "Vijay Hazare",
  "op4": "Vinoo Mankad",
  "ans": "CK Nayudu"
},
{
  "ques": "Who scored the fastest 2000 runs in T20Is?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Babar Azam",
  "op3": "Martin Guptill",
  "op4": "Rohit Sharma",
  "ans": "Babar Azam"
},
{
  "ques": "Which Indian player was known as 'The Wall'?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sourav Ganguly",
  "op3": "Sachin Tendulkar",
  "op4": "VVS Laxman",
  "ans": "Rahul Dravid"
},
{
  "ques": "Which cricketer was banned for spot-fixing in 2010?<br><br>",
  "quesType": "mcq",
  "op1": "Mohammad Amir",
  "op2": "Sreesanth",
  "op3": "Mohammad Asif",
  "op4": "All of these",
  "ans": "All of these"
},
{
  "ques": "Who scored the winning runs for India in the 2007 T20 World Cup Final?<br><br>",
  "quesType": "mcq",
  "op1": "Gautam Gambhir",
  "op2": "MS Dhoni",
  "op3": "Rohit Sharma",
  "op4": "Joginder Sharma",
  "ans": "Joginder Sharma"
},
{
  "ques": "Who was the first batsman to cross 10,000 runs in Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Allan Border",
  "op3": "Sachin Tendulkar",
  "op4": "Steve Waugh",
  "ans": "Sunil Gavaskar"
},
{
  "ques": "Which player is known as 'Boom Boom'?<br><br>",
  "quesType": "mcq",
  "op1": "Shahid Afridi",
  "op2": "Virender Sehwag",
  "op3": "Chris Gayle",
  "op4": "David Warner",
  "ans": "Shahid Afridi"
},
{
  "ques": "Which Indian bowler is nicknamed 'Boom Boom Bumrah'?<br><br>",
  "quesType": "mcq",
  "op1": "Mohammed Shami",
  "op2": "Jasprit Bumrah",
  "op3": "Bhuvneshwar Kumar",
  "op4": "Navdeep Saini",
  "ans": "Jasprit Bumrah"
},
{
  "ques": "Who scored 319 against Pakistan in Multan?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sachin Tendulkar",
  "op3": "Virender Sehwag",
  "op4": "VVS Laxman",
  "ans": "Virender Sehwag"
},
{
  "ques": "Which player is called 'Universe Boss'?<br><br>",
  "quesType": "mcq",
  "op1": "Andre Russell",
  "op2": "Chris Gayle",
  "op3": "Kieron Pollard",
  "op4": "Sunil Narine",
  "ans": "Chris Gayle"
},
{
  "ques": "Who was the first batsman given out by the third umpire?<br><br>",
  "quesType": "mcq",
  "op1": "Jonty Rhodes",
  "op2": "Graham Gooch",
  "op3": "Sachin Tendulkar",
  "op4": "Mohammad Azharuddin",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who has captained India in most Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "MS Dhoni",
  "op3": "Sourav Ganguly",
  "op4": "Virat Kohli",
  "ans": "Virat Kohli"
},
{
  "ques": "Who is the highest run scorer in T20Is for India?<br><br>",
  "quesType": "mcq",
  "op1": "Rohit Sharma",
  "op2": "KL Rahul",
  "op3": "Virat Kohli",
  "op4": "Shikhar Dhawan",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was the first Indian captain to win a Test series in Australia?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Sourav Ganguly",
  "op3": "Virat Kohli",
  "op4": "Rahul Dravid",
  "ans": "Virat Kohli"
},
{
  "ques": "Who holds the record for most sixes in international cricket?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Chris Gayle",
  "op3": "Rohit Sharma",
  "op4": "Shahid Afridi",
  "ans": "Rohit Sharma"
},
{
  "ques": "Who is the first Indian bowler to take a hat-trick in World Cups?<br><br>",
  "quesType": "mcq",
  "op1": "Chetan Sharma",
  "op2": "Harbhajan Singh",
  "op3": "Anil Kumble",
  "op4": "Mohammed Shami",
  "ans": "Chetan Sharma"
},
{
  "ques": "Who is the only player to captain and wicket-keep for India in 100+ matches?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "MS Dhoni",
  "op3": "Dinesh Karthik",
  "op4": "Parthiv Patel",
  "ans": "MS Dhoni"
},
{
  "ques": "Which Indian player has the highest score in a single IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "KL Rahul",
  "op2": "Virat Kohli",
  "op3": "Ruturaj Gaikwad",
  "op4": "Rishabh Pant",
  "ans": "Virat Kohli"
}
,
{
  "ques": "Who is known as the 'Prince of Kolkata'?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sourav Ganguly",
  "op3": "Sunil Gavaskar",
  "op4": "Virat Kohli",
  "ans": "Sourav Ganguly"
},
{
  "ques": "Which Indian bowler is nicknamed 'Turbanator'?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Jasprit Bumrah",
  "op3": "Harbhajan Singh",
  "op4": "Ravichandran Ashwin",
  "ans": "Harbhajan Singh"
},
{
  "ques": "Who captained India to its first World Cup win in 1983?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Kapil Dev",
  "op3": "Mohinder Amarnath",
  "op4": "Ravi Shastri",
  "ans": "Kapil Dev"
},
{
  "ques": "Who holds the record for the highest individual score in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Rohit Sharma",
  "op3": "Virender Sehwag",
  "op4": "Chris Gayle",
  "ans": "Rohit Sharma"
},
{
  "ques": "Who was India's first cricket captain?<br><br>",
  "quesType": "mcq",
  "op1": "CK Nayudu",
  "op2": "Lala Amarnath",
  "op3": "Vijay Hazare",
  "op4": "Polly Umrigar",
  "ans": "CK Nayudu"
},
{
  "ques": "Which Indian player is famous for hitting six sixes in an over?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Yuvraj Singh",
  "op3": "Virat Kohli",
  "op4": "Kapil Dev",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Who is the fastest Indian bowler to reach 100 ODI wickets?<br><br>",
  "quesType": "mcq",
  "op1": "Zaheer Khan",
  "op2": "Jasprit Bumrah",
  "op3": "Mohammed Shami",
  "op4": "Bhuvneshwar Kumar",
  "ans": "Mohammed Shami"
},
{
  "ques": "Which cricketer is known as 'Mr. 360'?<br><br>",
  "quesType": "mcq",
  "op1": "AB de Villiers",
  "op2": "Glenn Maxwell",
  "op3": "Virat Kohli",
  "op4": "Jos Buttler",
  "ans": "AB de Villiers"
},
{
  "ques": "Which country hosts the Big Bash League?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "England",
  "op3": "Australia",
  "op4": "South Africa",
  "ans": "Australia"
},
{
  "ques": "Who is the first cricketer to score 10,000 runs in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Kapil Dev",
  "op3": "Mohammad Azharuddin",
  "op4": "Sachin Tendulkar",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Which team won the IPL 2023 season?<br><br>",
  "quesType": "mcq",
  "op1": "CSK",
  "op2": "MI",
  "op3": "KKR",
  "op4": "RCB",
  "ans": "CSK"
},
{
  "ques": "Who is known as 'Captain Cool'?<br><br>",
  "quesType": "mcq",
  "op1": "Rohit Sharma",
  "op2": "Virat Kohli",
  "op3": "MS Dhoni",
  "op4": "Rahul Dravid",
  "ans": "MS Dhoni"
},
{
  "ques": "Who bowled the 'ball of the century'?<br><br>",
  "quesType": "mcq",
  "op1": "Muttiah Muralitharan",
  "op2": "Shane Warne",
  "op3": "Anil Kumble",
  "op4": "Harbhajan Singh",
  "ans": "Shane Warne"
},
{
  "ques": "Who scored the first double century in ODI cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Sachin Tendulkar",
  "op3": "Rohit Sharma",
  "op4": "Chris Gayle",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who is the highest run scorer in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Steve Smith",
  "op2": "Ricky Ponting",
  "op3": "Sachin Tendulkar",
  "op4": "Brian Lara",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Which stadium is called the 'Mecca of Cricket'?<br><br>",
  "quesType": "mcq",
  "op1": "Eden Gardens",
  "op2": "Lords",
  "op3": "MCG",
  "op4": "Wankhede",
  "ans": "Lords"
},
{
  "ques": "Who holds the record for most wickets in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Muttiah Muralitharan",
  "op2": "Shane Warne",
  "op3": "James Anderson",
  "op4": "Anil Kumble",
  "ans": "Muttiah Muralitharan"
},
{
  "ques": "Who was the first bowler to take 10 wickets in a Test innings?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Jim Laker",
  "op3": "Muttiah Muralitharan",
  "op4": "Shane Warne",
  "ans": "Jim Laker"
},
{
  "ques": "Who is called the 'Universe Boss'?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "AB de Villiers",
  "op3": "Glenn Maxwell",
  "op4": "Andre Russell",
  "ans": "Chris Gayle"
},
{
  "ques": "Who is India's leading wicket-taker in Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Harbhajan Singh",
  "op2": "Anil Kumble",
  "op3": "Kapil Dev",
  "op4": "Ravichandran Ashwin",
  "ans": "Anil Kumble"
},
{
  "ques": "Which player has hit the most sixes in international cricket?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Chris Gayle",
  "op3": "Rohit Sharma",
  "op4": "Shahid Afridi",
  "ans": "Chris Gayle"
},
{
  "ques": "Which trophy is awarded for India vs Pakistan Test series?<br><br>",
  "quesType": "mcq",
  "op1": "Gavaskar-Border Trophy",
  "op2": "Freedom Trophy",
  "op3": "ICC Trophy",
  "op4": "There is no special trophy",
  "ans": "There is no special trophy"
},
{
  "ques": "Who was the first Indian to score a triple century in Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Sachin Tendulkar",
  "op3": "Rahul Dravid",
  "op4": "Sunil Gavaskar",
  "ans": "Virender Sehwag"
},
{
  "ques": "Who is the youngest player to score a century in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Rishabh Pant",
  "op2": "Manish Pandey",
  "op3": "Prithvi Shaw",
  "op4": "Shubman Gill",
  "ans": "Manish Pandey"
},
{
  "ques": "Which bowler is known for the 'Mankad' dismissal?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Vinoo Mankad",
  "op3": "Bishan Singh Bedi",
  "op4": "Jasprit Bumrah",
  "ans": "Vinoo Mankad"
},
{
  "ques": "Who is called 'Boom Boom Afridi'?<br><br>",
  "quesType": "mcq",
  "op1": "Imran Khan",
  "op2": "Shoaib Akhtar",
  "op3": "Shahid Afridi",
  "op4": "Wasim Akram",
  "ans": "Shahid Afridi"
},
{
  "ques": "Which IPL team has won the most titles?<br><br>",
  "quesType": "mcq",
  "op1": "MI",
  "op2": "CSK",
  "op3": "KKR",
  "op4": "RR",
  "ans": "MI"
},
{
  "ques": "Who scored the fastest century in ODI cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Corey Anderson",
  "op2": "AB de Villiers",
  "op3": "Shahid Afridi",
  "op4": "Virat Kohli",
  "ans": "AB de Villiers"
},
{
  "ques": "Who is the first player to play 200 Test matches?<br><br>",
  "quesType": "mcq",
  "op1": "Ricky Ponting",
  "op2": "Rahul Dravid",
  "op3": "Sachin Tendulkar",
  "op4": "Steve Waugh",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who is the first Indian to score a century in T20Is?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Virat Kohli",
  "op3": "Yuvraj Singh",
  "op4": "KL Rahul",
  "ans": "Suresh Raina"
}
,
{
  "ques": "Which Indian cricketer is nicknamed 'The Wall'?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Rahul Dravid",
  "op3": "VVS Laxman",
  "op4": "Sourav Ganguly",
  "ans": "Rahul Dravid"
},
{
  "ques": "Which is the largest cricket stadium in India?<br><br>",
  "quesType": "mcq",
  "op1": "Wankhede Stadium",
  "op2": "M. Chinnaswamy Stadium",
  "op3": "Narendra Modi Stadium",
  "op4": "Eden Gardens",
  "ans": "Narendra Modi Stadium"
},
{
  "ques": "Which cricketer is known for the 'Dilscoop' shot?<br><br>",
  "quesType": "mcq",
  "op1": "Tillakaratne Dilshan",
  "op2": "AB de Villiers",
  "op3": "Glenn Maxwell",
  "op4": "Jos Buttler",
  "ans": "Tillakaratne Dilshan"
},
{
  "ques": "Which country won the first Cricket World Cup in 1975?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Australia",
  "op3": "West Indies",
  "op4": "England",
  "ans": "West Indies"
},
{
  "ques": "Which Indian fast bowler is known as the 'Yorker King'?<br><br>",
  "quesType": "mcq",
  "op1": "Zaheer Khan",
  "op2": "Jasprit Bumrah",
  "op3": "Ishant Sharma",
  "op4": "Bhuvneshwar Kumar",
  "ans": "Jasprit Bumrah"
},
{
  "ques": "How many runs are awarded for hitting the ball over the boundary without bouncing?<br><br>",
  "quesType": "mcq",
  "op1": "4",
  "op2": "2",
  "op3": "6",
  "op4": "8",
  "ans": "6"
},
{
  "ques": "Who holds the record for the highest individual score in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Sachin Tendulkar",
  "op3": "Rohit Sharma",
  "op4": "Chris Gayle",
  "ans": "Rohit Sharma"
},
{
  "ques": "Which Indian city hosts the Sawai Mansingh Stadium?<br><br>",
  "quesType": "mcq",
  "op1": "Jaipur",
  "op2": "Kolkata",
  "op3": "Mumbai",
  "op4": "Lucknow",
  "ans": "Jaipur"
},
{
  "ques": "What is the colour of the cricket ball used in Test matches?<br><br>",
  "quesType": "mcq",
  "op1": "White",
  "op2": "Pink",
  "op3": "Red",
  "op4": "Yellow",
  "ans": "Red"
},
{
  "ques": "Which format of cricket introduced the 'Powerplay' rule?<br><br>",
  "quesType": "mcq",
  "op1": "Test",
  "op2": "T20",
  "op3": "ODI",
  "op4": "Tri-Series",
  "ans": "ODI"
},
{
  "ques": "Who was India's first cricket captain?<br><br>",
  "quesType": "mcq",
  "op1": "CK Nayudu",
  "op2": "Vijay Hazare",
  "op3": "Lala Amarnath",
  "op4": "Nawab of Pataudi",
  "ans": "CK Nayudu"
},
{
  "ques": "Which batsman is known as 'Mr. 360'?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "AB de Villiers",
  "op3": "Glenn Maxwell",
  "op4": "Kane Williamson",
  "ans": "AB de Villiers"
},
{
  "ques": "Which Indian bowler is famous for the 'Doosra' delivery?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Harbhajan Singh",
  "op3": "Ravindra Jadeja",
  "op4": "Zaheer Khan",
  "ans": "Harbhajan Singh"
},
{
  "ques": "Which team won the IPL 2023?<br><br>",
  "quesType": "mcq",
  "op1": "CSK",
  "op2": "MI",
  "op3": "RCB",
  "op4": "KKR",
  "ans": "CSK"
},
{
  "ques": "Who is the first batsman to score 10,000 runs in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Kapil Dev",
  "op3": "Sachin Tendulkar",
  "op4": "Mohammad Azharuddin",
  "ans": "Sachin Tendulkar"
}
,
{
  "ques": "Which country hosted the first ever Cricket World Cup in 1975?<br><br>",
  "quesType": "mcq",
  "op1": "India",
  "op2": "Australia",
  "op3": "England",
  "op4": "West Indies",
  "ans": "England"
},
{
  "ques": "Who was the captain of India in the 1983 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Kapil Dev",
  "op3": "Mohinder Amarnath",
  "op4": "Kirti Azad",
  "ans": "Kapil Dev"
},
{
  "ques": "Who holds the record for the fastest century in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "AB de Villiers",
  "op2": "Corey Anderson",
  "op3": "Shahid Afridi",
  "op4": "Chris Gayle",
  "ans": "AB de Villiers"
},
{
  "ques": "Who was the first bowler to take 600 wickets in Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Glenn McGrath",
  "op2": "Shane Warne",
  "op3": "Anil Kumble",
  "op4": "Muttiah Muralitharan",
  "ans": "Muttiah Muralitharan"
},
{
  "ques": "Who is the youngest player to captain India in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Mohammad Azharuddin",
  "op3": "Virat Kohli",
  "op4": "Suresh Raina",
  "ans": "Mohammad Azharuddin"
},
{
  "ques": "Which cricketer is known as the 'Prince of Kolkata'?<br><br>",
  "quesType": "mcq",
  "op1": "Sourav Ganguly",
  "op2": "Rahul Dravid",
  "op3": "Kapil Dev",
  "op4": "Rohit Sharma",
  "ans": "Sourav Ganguly"
},
{
  "ques": "Who is the first Indian cricketer to play 200 Test matches?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Sachin Tendulkar",
  "op3": "Sunil Gavaskar",
  "op4": "Rahul Dravid",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who won the first ever IPL title?<br><br>",
  "quesType": "mcq",
  "op1": "RCB",
  "op2": "CSK",
  "op3": "Rajasthan Royals",
  "op4": "Mumbai Indians",
  "ans": "Rajasthan Royals"
},
{
  "ques": "Who was the Man of the Match in the 2011 World Cup Final?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "MS Dhoni",
  "op3": "Gautam Gambhir",
  "op4": "Sachin Tendulkar",
  "ans": "MS Dhoni"
},
{
  "ques": "Which bowler has the best bowling figures in an ODI match?<br><br>",
  "quesType": "mcq",
  "op1": "Chaminda Vaas",
  "op2": "Glenn McGrath",
  "op3": "Muttiah Muralitharan",
  "op4": "Shahid Afridi",
  "ans": "Chaminda Vaas"
},
{
  "ques": "Who is the only player to score 4 consecutive centuries in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "AB de Villiers",
  "op2": "Virat Kohli",
  "op3": "Kumar Sangakkara",
  "op4": "Rohit Sharma",
  "ans": "Kumar Sangakkara"
},
{
  "ques": "Who is the first Indian to score a triple century in Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Sachin Tendulkar",
  "op3": "Rahul Dravid",
  "op4": "Sunil Gavaskar",
  "ans": "Virender Sehwag"
},
{
  "ques": "Who is known for hitting six sixes in an over in T20 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Yuvraj Singh",
  "op3": "Rohit Sharma",
  "op4": "Virat Kohli",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Who captained India in the 2003 World Cup Final?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sachin Tendulkar",
  "op3": "Sourav Ganguly",
  "op4": "Anil Kumble",
  "ans": "Sourav Ganguly"
},
{
  "ques": "Which stadium is known as the 'Home of Cricket'?<br><br>",
  "quesType": "mcq",
  "op1": "Eden Gardens",
  "op2": "Lord's",
  "op3": "MCG",
  "op4": "Old Trafford",
  "ans": "Lord's"
},
{
  "ques": "Which Indian player has won the most IPL titles as captain?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Rohit Sharma",
  "op3": "MS Dhoni",
  "op4": "Gautam Gambhir",
  "ans": "Rohit Sharma"
},
{
  "ques": "Who was the first Indian batsman to score a century in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Kapil Dev",
  "op3": "Mohinder Amarnath",
  "op4": "Kapil Dev",
  "ans": "Kapil Dev"
},
{
  "ques": "Who was the first batsman to score 10,000 runs in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Sanath Jayasuriya",
  "op3": "Ricky Ponting",
  "op4": "Inzamam-ul-Haq",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who hit the longest six in cricket history?<br><br>",
  "quesType": "mcq",
  "op1": "Shahid Afridi",
  "op2": "Chris Gayle",
  "op3": "MS Dhoni",
  "op4": "Yuvraj Singh",
  "ans": "Shahid Afridi"
},
{
  "ques": "Which Indian player is nicknamed 'Hitman'?<br><br>",
  "quesType": "mcq",
  "op1": "Rishabh Pant",
  "op2": "Rohit Sharma",
  "op3": "KL Rahul",
  "op4": "Hardik Pandya",
  "ans": "Rohit Sharma"
},
{
  "ques": "Which cricketer has scored centuries in all three formats as captain?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "MS Dhoni",
  "op3": "Kane Williamson",
  "op4": "Joe Root",
  "ans": "Virat Kohli"
},
{
  "ques": "Who is known as the 'Turbanator'?<br><br>",
  "quesType": "mcq",
  "op1": "Ravindra Jadeja",
  "op2": "Ravichandran Ashwin",
  "op3": "Harbhajan Singh",
  "op4": "Yuzvendra Chahal",
  "ans": "Harbhajan Singh"
},
{
  "ques": "Who is the first Indian to take 400 wickets in Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Anil Kumble",
  "op3": "Harbhajan Singh",
  "op4": "Ravichandran Ashwin",
  "ans": "Anil Kumble"
},
{
  "ques": "Which player is famous for the helicopter shot?<br><br>",
  "quesType": "mcq",
  "op1": "Rohit Sharma",
  "op2": "Yuvraj Singh",
  "op3": "MS Dhoni",
  "op4": "Virat Kohli",
  "ans": "MS Dhoni"
},
{
  "ques": "Who bowled the Super Over in the 2019 World Cup Final?<br><br>",
  "quesType": "mcq",
  "op1": "Trent Boult",
  "op2": "Chris Woakes",
  "op3": "Jofra Archer",
  "op4": "Ben Stokes",
  "ans": "Jofra Archer"
},
{
  "ques": "Who is the first Indian to score a century in T20Is?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Virender Sehwag",
  "op3": "Rohit Sharma",
  "op4": "KL Rahul",
  "ans": "Suresh Raina"
},
{
  "ques": "Who has scored the most centuries in World Cups?<br><br>",
  "quesType": "mcq",
  "op1": "Ricky Ponting",
  "op2": "Kumar Sangakkara",
  "op3": "Sachin Tendulkar",
  "op4": "Rohit Sharma",
  "ans": "Rohit Sharma"
},
{
  "ques": "Which Indian bowler bowled the fastest ball ever for India?<br><br>",
  "quesType": "mcq",
  "op1": "Javagal Srinath",
  "op2": "Irfan Pathan",
  "op3": "Umran Malik",
  "op4": "Jasprit Bumrah",
  "ans": "Umran Malik"
},
{
  "ques": "Which bowler has the most wickets in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Amit Mishra",
  "op3": "Yuzvendra Chahal",
  "op4": "Dwayne Bravo",
  "ans": "Yuzvendra Chahal"
},
{
  "ques": "Who is the only player to win the ICC ODI Player of the Year award 3 times?<br><br>",
  "quesType": "mcq",
  "op1": "AB de Villiers",
  "op2": "Virat Kohli",
  "op3": "MS Dhoni",
  "op4": "Sachin Tendulkar",
  "ans": "Virat Kohli"
}
,
{
  "ques": "Which team won the first IPL title in 2008?<br><br>",
  "quesType": "mcq",
  "op1": "CSK",
  "op2": "RR",
  "op3": "RCB",
  "op4": "MI",
  "ans": "RR"
},
{
  "ques": "Who is called 'Captain Cool' in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Rohit Sharma",
  "op2": "Virat Kohli",
  "op3": "MS Dhoni",
  "op4": "KL Rahul",
  "ans": "MS Dhoni"
},
{
  "ques": "Which player has the most runs in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "David Warner",
  "op2": "AB de Villiers",
  "op3": "Virat Kohli",
  "op4": "Suresh Raina",
  "ans": "Virat Kohli"
},
{
  "ques": "Which bowler has the most wickets in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Dwayne Bravo",
  "op3": "Yuzvendra Chahal",
  "op4": "Bhuvneshwar Kumar",
  "ans": "Dwayne Bravo"
},
{
  "ques": "Who hit the fastest fifty in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "KL Rahul",
  "op2": "Chris Gayle",
  "op3": "AB de Villiers",
  "op4": "Yusuf Pathan",
  "ans": "KL Rahul"
},
{
  "ques": "Who was the captain of Mumbai Indians in 2013?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Ricky Ponting",
  "op3": "Rohit Sharma",
  "op4": "Harbhajan Singh",
  "ans": "Rohit Sharma"
},
{
  "ques": "Which team is known as the 'Orange Army'?<br><br>",
  "quesType": "mcq",
  "op1": "CSK",
  "op2": "SRH",
  "op3": "RCB",
  "op4": "KKR",
  "ans": "SRH"
},
{
  "ques": "Who is the owner of Kolkata Knight Riders?<br><br>",
  "quesType": "mcq",
  "op1": "Mukesh Ambani",
  "op2": "Nita Ambani",
  "op3": "Shah Rukh Khan",
  "op4": "Preity Zinta",
  "ans": "Shah Rukh Khan"
},
{
  "ques": "Which franchise did AB de Villiers play for last?<br><br>",
  "quesType": "mcq",
  "op1": "RCB",
  "op2": "MI",
  "op3": "KKR",
  "op4": "CSK",
  "ans": "RCB"
},
{
  "ques": "Who scored 175* runs in a single IPL innings?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Brendon McCullum",
  "op3": "Virat Kohli",
  "op4": "David Warner",
  "ans": "Chris Gayle"
},
{
  "ques": "Which player is called 'Mr. IPL'?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "MS Dhoni",
  "op3": "Virat Kohli",
  "op4": "Rohit Sharma",
  "ans": "Suresh Raina"
},
{
  "ques": "Which team won IPL 2023?<br><br>",
  "quesType": "mcq",
  "op1": "RCB",
  "op2": "GT",
  "op3": "CSK",
  "op4": "MI",
  "ans": "CSK"
},
{
  "ques": "Who won the 'Purple Cap' in IPL 2022?<br><br>",
  "quesType": "mcq",
  "op1": "Mohammed Shami",
  "op2": "Yuzvendra Chahal",
  "op3": "Jasprit Bumrah",
  "op4": "Kagiso Rabada",
  "ans": "Yuzvendra Chahal"
},
{
  "ques": "What colour cap is given to the highest run scorer?<br><br>",
  "quesType": "mcq",
  "op1": "Purple",
  "op2": "Red",
  "op3": "Orange",
  "op4": "Blue",
  "ans": "Orange"
},
{
  "ques": "Who was the first player to win MVP in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Shane Watson",
  "op2": "Shaun Marsh",
  "op3": "Sachin Tendulkar",
  "op4": "Yusuf Pathan",
  "ans": "Shane Watson"
},
{
  "ques": "Which team is known for the slogan 'Ee Sala Cup Namde'?<br><br>",
  "quesType": "mcq",
  "op1": "RCB",
  "op2": "CSK",
  "op3": "MI",
  "op4": "KKR",
  "ans": "RCB"
},
{
  "ques": "Who bowled the first ball in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Praveen Kumar",
  "op2": "Shoaib Akhtar",
  "op3": "Glenn McGrath",
  "op4": "Zaheer Khan",
  "ans": "Praveen Kumar"
},
{
  "ques": "Which Indian uncapped player won MVP in 2013?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Tewatia",
  "op2": "Axar Patel",
  "op3": "Sanju Samson",
  "op4": "Sanju Samson",
  "ans": "Axar Patel"
},
{
  "ques": "Who hit six sixes in an over in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Yuvraj Singh",
  "op3": "Ruturaj Gaikwad",
  "op4": "Rahul Tewatia",
  "ans": "Ruturaj Gaikwad"
},
{
  "ques": "Who is the coach of CSK?<br><br>",
  "quesType": "mcq",
  "op1": "Gary Kirsten",
  "op2": "Stephen Fleming",
  "op3": "Mahela Jayawardene",
  "op4": "Tom Moody",
  "ans": "Stephen Fleming"
},
{
  "ques": "Which team is called 'Men in Yellow'?<br><br>",
  "quesType": "mcq",
  "op1": "KKR",
  "op2": "MI",
  "op3": "CSK",
  "op4": "RCB",
  "ans": "CSK"
},
{
  "ques": "Who was the first captain of Delhi Daredevils?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Gautam Gambhir",
  "op3": "David Warner",
  "op4": "Zaheer Khan",
  "ans": "Virender Sehwag"
},
{
  "ques": "Who scored the first century in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Brendon McCullum",
  "op3": "Shaun Marsh",
  "op4": "Virat Kohli",
  "ans": "Brendon McCullum"
},
{
  "ques": "Who is the only player to win MVP twice?<br><br>",
  "quesType": "mcq",
  "op1": "Andre Russell",
  "op2": "Sunil Narine",
  "op3": "AB de Villiers",
  "op4": "Chris Gayle",
  "ans": "Andre Russell"
},
{
  "ques": "Who was the first Indian to win the Orange Cap?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Sachin Tendulkar",
  "op3": "Gautam Gambhir",
  "op4": "Shikhar Dhawan",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Which team is nicknamed 'Paltan'?<br><br>",
  "quesType": "mcq",
  "op1": "KKR",
  "op2": "CSK",
  "op3": "MI",
  "op4": "RCB",
  "ans": "MI"
},
{
  "ques": "Who is the youngest IPL debut captain?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Rishabh Pant",
  "op3": "Shreyas Iyer",
  "op4": "Sanju Samson",
  "ans": "Rishabh Pant"
},
{
  "ques": "Which bowler took a hat-trick on IPL debut?<br><br>",
  "quesType": "mcq",
  "op1": "Axar Patel",
  "op2": "Rohit Sharma",
  "op3": "Shane Watson",
  "op4": "Ajit Chandila",
  "ans": "Ajit Chandila"
},
{
  "ques": "Who hit the longest six in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "MS Dhoni",
  "op3": "Albie Morkel",
  "op4": "Andre Russell",
  "ans": "Albie Morkel"
},
{
  "ques": "Which team is the only one to win IPL 5 times?<br><br>",
  "quesType": "mcq",
  "op1": "RCB",
  "op2": "CSK",
  "op3": "MI",
  "op4": "KKR",
  "ans": "MI"
}

]
let codingsport2Arr=[
  {
  "ques": "Who was the captain of India during the 1983 Cricket World Cup win?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Kapil Dev",
  "op3": "Mohinder Amarnath",
  "op4": "Ravi Shastri",
  "ans": "Kapil Dev"
},
{
  "ques": "Which player has taken the most wickets in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Muttiah Muralitharan",
  "op2": "Shane Warne",
  "op3": "Anil Kumble",
  "op4": "James Anderson",
  "ans": "Muttiah Muralitharan"
},
{
  "ques": "Who is the first bowler to take a hat-trick in a World Cup match?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Chaminda Vaas",
  "op3": "Chetan Sharma",
  "op4": "Wasim Akram",
  "ans": "Chetan Sharma"
},
{
  "ques": "Which Indian cricketer scored 319 runs in a Test match?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Sachin Tendulkar",
  "op3": "Rahul Dravid",
  "op4": "VVS Laxman",
  "ans": "Virender Sehwag"
},
{
  "ques": "Who hit six sixes in an over in a T20 World Cup match?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Rohit Sharma",
  "op3": "Virat Kohli",
  "op4": "Yuvraj Singh",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Who is the first batsman to score a double century in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Rohit Sharma",
  "op3": "Sachin Tendulkar",
  "op4": "Chris Gayle",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Which bowler took all 10 wickets in a Test innings for India?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Kapil Dev",
  "op3": "Jasprit Bumrah",
  "op4": "Ishant Sharma",
  "ans": "Anil Kumble"
},
{
  "ques": "Which Indian cricketer is nicknamed 'Captain Cool'?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "MS Dhoni",
  "op3": "Rahul Dravid",
  "op4": "Sourav Ganguly",
  "ans": "MS Dhoni"
},
{
  "ques": "Which batsman scored 264 runs in a single ODI innings?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Rohit Sharma",
  "op3": "Martin Guptill",
  "op4": "Chris Gayle",
  "ans": "Rohit Sharma"
},
{
  "ques": "Which team did India beat in the 2011 World Cup final?<br><br>",
  "quesType": "mcq",
  "op1": "Pakistan",
  "op2": "Sri Lanka",
  "op3": "Australia",
  "op4": "England",
  "ans": "Sri Lanka"
},
{
  "ques": "Who holds the record for the fastest century in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "AB de Villiers",
  "op2": "Corey Anderson",
  "op3": "Shahid Afridi",
  "op4": "Chris Gayle",
  "ans": "AB de Villiers"
},
{
  "ques": "Who was the first Indian bowler to take a hat-trick in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Harbhajan Singh",
  "op3": "Anil Kumble",
  "op4": "Zaheer Khan",
  "ans": "Harbhajan Singh"
},
{
  "ques": "Who is the only cricketer to have captained India in 50 Tests?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Virat Kohli",
  "op3": "Sourav Ganguly",
  "op4": "Sunil Gavaskar",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was named Man of the Match in the 1983 World Cup final?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Sunil Gavaskar",
  "op3": "Mohinder Amarnath",
  "op4": "Roger Binny",
  "ans": "Mohinder Amarnath"
},
{
  "ques": "Which Indian player made his debut at the age of 16?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Virat Kohli",
  "op3": "Sachin Tendulkar",
  "op4": "Sunil Gavaskar",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who was the first player to score 10,000 Test runs for India?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Sunil Gavaskar",
  "op3": "Sachin Tendulkar",
  "op4": "Rahul Dravid",
  "ans": "Sunil Gavaskar"
},
{
  "ques": "Who is the only Indian to win ICC Cricketer of the Year twice?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Virat Kohli",
  "op3": "Rohit Sharma",
  "op4": "Yuvraj Singh",
  "ans": "Virat Kohli"
},
{
  "ques": "Which Indian bowler took a hat-trick in World Cup 2019?<br><br>",
  "quesType": "mcq",
  "op1": "Bhuvneshwar Kumar",
  "op2": "Jasprit Bumrah",
  "op3": "Mohammed Shami",
  "op4": "Yuzvendra Chahal",
  "ans": "Mohammed Shami"
},
{
  "ques": "Who hit the winning runs in the 2011 World Cup final?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Gautam Gambhir",
  "op3": "Virat Kohli",
  "op4": "Yusuf Pathan",
  "ans": "MS Dhoni"
},
{
  "ques": "Who is the first Indian to win the Orange Cap in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Sachin Tendulkar",
  "op3": "KL Rahul",
  "op4": "Gautam Gambhir",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Which bowler is famous for the 'carrom ball'?<br><br>",
  "quesType": "mcq",
  "op1": "Ravichandran Ashwin",
  "op2": "Harbhajan Singh",
  "op3": "Anil Kumble",
  "op4": "Jasprit Bumrah",
  "ans": "Ravichandran Ashwin"
},
{
  "ques": "Which Indian cricketer is also an Olympic medalist?<br><br>",
  "quesType": "mcq",
  "op1": "Lala Amarnath",
  "op2": "CK Nayudu",
  "op3": "Yuzvendra Chahal",
  "op4": "None",
  "ans": "None"
},
{
  "ques": "Which Indian player holds the record for most sixes in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Rohit Sharma",
  "op3": "MS Dhoni",
  "op4": "Yuvraj Singh",
  "ans": "Rohit Sharma"
},
{
  "ques": "Which Indian captain led India to the first Test series win in Australia?<br><br>",
  "quesType": "mcq",
  "op1": "Sourav Ganguly",
  "op2": "Virat Kohli",
  "op3": "MS Dhoni",
  "op4": "Kapil Dev",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was the first Indian woman cricketer to score a double century?<br><br>",
  "quesType": "mcq",
  "op1": "Jhulan Goswami",
  "op2": "Harmanpreet Kaur",
  "op3": "Mithali Raj",
  "op4": "Smriti Mandhana",
  "ans": "Mithali Raj"
},
{
  "ques": "Who is known as the 'God of Offside'?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "VVS Laxman",
  "op3": "Sourav Ganguly",
  "op4": "Gautam Gambhir",
  "ans": "Sourav Ganguly"
},
{
  "ques": "Who was the first Indian player to take a five-wicket haul in T20Is?<br><br>",
  "quesType": "mcq",
  "op1": "Bhuvneshwar Kumar",
  "op2": "Deepak Chahar",
  "op3": "Yuzvendra Chahal",
  "op4": "Jasprit Bumrah",
  "ans": "Deepak Chahar"
},
{
  "ques": "Who was the coach of India during the 2011 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Ravi Shastri",
  "op2": "Gary Kirsten",
  "op3": "Duncan Fletcher",
  "op4": "John Wright",
  "ans": "Gary Kirsten"
},
{
  "ques": "Which bowler bowled the Super Over in 2019 IPL final?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Jasprit Bumrah",
  "op3": "Trent Boult",
  "op4": "Kagiso Rabada",
  "ans": "Jasprit Bumrah"
},
{
  "ques": "Who captained India in the 2007 T20 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "MS Dhoni",
  "op3": "Virender Sehwag",
  "op4": "Sourav Ganguly",
  "ans": "MS Dhoni"
}
,
{
  "ques": "Which Indian bowler took a hat-trick in the 2019 IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "Jasprit Bumrah",
  "op2": "Shreyas Gopal",
  "op3": "Yuzvendra Chahal",
  "op4": "Deepak Chahar",
  "ans": "Shreyas Gopal"
},
{
  "ques": "Who was the Player of the Tournament in the 2011 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Yuvraj Singh",
  "op3": "Gautam Gambhir",
  "op4": "Sachin Tendulkar",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Who scored a double century in ODIs first for India?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Sachin Tendulkar",
  "op3": "Rohit Sharma",
  "op4": "Virender Sehwag",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who was the first batsman dismissed by Jasprit Bumrah in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "AB de Villiers",
  "op2": "Dean Elgar",
  "op3": "Faf du Plessis",
  "op4": "Hashim Amla",
  "ans": "AB de Villiers"
},
{
  "ques": "Which Indian cricketer holds the record for the fastest fifty in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "Virender Sehwag",
  "op3": "KL Rahul",
  "op4": "Ajit Agarkar",
  "ans": "Ajit Agarkar"
},
{
  "ques": "Who captained India in its first ever T20I match?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Rahul Dravid",
  "op3": "MS Dhoni",
  "op4": "Yuvraj Singh",
  "ans": "Virender Sehwag"
},
{
  "ques": "Who bowled the final over in the 2007 T20 World Cup final?<br><br>",
  "quesType": "mcq",
  "op1": "RP Singh",
  "op2": "Joginder Sharma",
  "op3": "Irfan Pathan",
  "op4": "Sreesanth",
  "ans": "Joginder Sharma"
},
{
  "ques": "Who scored the most runs in IPL 2020?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "David Warner",
  "op3": "KL Rahul",
  "op4": "Shikhar Dhawan",
  "ans": "KL Rahul"
},
{
  "ques": "Who is the first player to score 3 double centuries in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Rohit Sharma",
  "op3": "Martin Guptill",
  "op4": "Chris Gayle",
  "ans": "Rohit Sharma"
},
{
  "ques": "Who scored the fastest 50 in T20I for India?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "KL Rahul",
  "op3": "Rishabh Pant",
  "op4": "Suryakumar Yadav",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Who was the first Indian to take an ODI hat-trick?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Chetan Sharma",
  "op3": "Anil Kumble",
  "op4": "Javagal Srinath",
  "ans": "Chetan Sharma"
},
{
  "ques": "Who holds the record for the highest individual score in a World Cup match?<br><br>",
  "quesType": "mcq",
  "op1": "Martin Guptill",
  "op2": "Rohit Sharma",
  "op3": "Chris Gayle",
  "op4": "Gary Kirsten",
  "ans": "Martin Guptill"
},
{
  "ques": "Who captained India to its first Test series win in Australia?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Virat Kohli",
  "op3": "MS Dhoni",
  "op4": "Sourav Ganguly",
  "ans": "Virat Kohli"
},
{
  "ques": "Which Indian spinner took a 10-wicket haul in an innings?<br><br>",
  "quesType": "mcq",
  "op1": "Ravindra Jadeja",
  "op2": "Anil Kumble",
  "op3": "Harbhajan Singh",
  "op4": "R Ashwin",
  "ans": "Anil Kumble"
},
{
  "ques": "Who hit the winning runs in the 2007 T20 World Cup Final?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "MS Dhoni",
  "op3": "Joginder Sharma",
  "op4": "Sreesanth",
  "ans": "Sreesanth"
},
{
  "ques": "Who was the highest run scorer for India in the 2015 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Shikhar Dhawan",
  "op2": "Virat Kohli",
  "op3": "Rohit Sharma",
  "op4": "MS Dhoni",
  "ans": "Shikhar Dhawan"
},
{
  "ques": "Which Indian bowler took a hat-trick against Australia in Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Harbhajan Singh",
  "op3": "Kapil Dev",
  "op4": "R Ashwin",
  "ans": "Harbhajan Singh"
},
{
  "ques": "Who was the first player to score 400 runs in a Test innings?<br><br>",
  "quesType": "mcq",
  "op1": "Brian Lara",
  "op2": "Matthew Hayden",
  "op3": "Sachin Tendulkar",
  "op4": "Chris Gayle",
  "ans": "Brian Lara"
},
{
  "ques": "Who won the Orange Cap in IPL 2019?<br><br>",
  "quesType": "mcq",
  "op1": "David Warner",
  "op2": "KL Rahul",
  "op3": "Virat Kohli",
  "op4": "Shikhar Dhawan",
  "ans": "David Warner"
},
{
  "ques": "Who was India’s first T20I century maker at home?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "KL Rahul",
  "op3": "Rohit Sharma",
  "op4": "Yuvraj Singh",
  "ans": "KL Rahul"
},
{
  "ques": "Who holds the record for most wickets in a single World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Glenn McGrath",
  "op2": "Mitchell Starc",
  "op3": "Muttiah Muralitharan",
  "op4": "Lasith Malinga",
  "ans": "Mitchell Starc"
},
{
  "ques": "Who hit six fours in an over in a Test match?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sandeep Patil",
  "op3": "Ajinkya Rahane",
  "op4": "Navjot Singh Sidhu",
  "ans": "Sandeep Patil"
},
{
  "ques": "Who was the first Indian to win the ICC Cricketer of the Year award?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Rahul Dravid",
  "op3": "Virat Kohli",
  "op4": "MS Dhoni",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who was the first batsman dismissed by Shane Warne in Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Ravi Shastri",
  "op2": "Kapil Dev",
  "op3": "Sunil Gavaskar",
  "op4": "Mohammad Azharuddin",
  "ans": "Ravi Shastri"
},
{
  "ques": "Who was the Man of the Series in the 2007 T20 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Gautam Gambhir",
  "op3": "Irfan Pathan",
  "op4": "Shahid Afridi",
  "ans": "Shahid Afridi"
},
{
  "ques": "Who holds the record for most consecutive matches played in Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Allan Border",
  "op3": "Alastair Cook",
  "op4": "Rahul Dravid",
  "ans": "Alastair Cook"
},
{
  "ques": "Which bowler dismissed Rahul Dravid with his first ball in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Harbhajan Singh",
  "op2": "Zaheer Khan",
  "op3": "Ajit Agarkar",
  "op4": "Bhuvneshwar Kumar",
  "ans": "Bhuvneshwar Kumar"
},
{
  "ques": "Who is the only player to have played in 6 Cricket World Cups?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Steve Waugh",
  "op3": "Javed Miandad",
  "op4": "Ricky Ponting",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who was the leading wicket-taker in the 2011 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Zaheer Khan",
  "op2": "Shahid Afridi",
  "op3": "Lasith Malinga",
  "op4": "Muttiah Muralitharan",
  "ans": "Zaheer Khan"
}
,
{
  "ques": "Who was the first uncapped player to score a century in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Manish Pandey",
  "op2": "Ruturaj Gaikwad",
  "op3": "Devdutt Padikkal",
  "op4": "Sanju Samson",
  "ans": "Manish Pandey"
},
{
  "ques": "Which player won the Orange Cap in IPL 2016?<br><br>",
  "quesType": "mcq",
  "op1": "David Warner",
  "op2": "Virat Kohli",
  "op3": "AB de Villiers",
  "op4": "KL Rahul",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was the first player to be sold in the first-ever IPL auction?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Sourav Ganguly",
  "op3": "Rahul Dravid",
  "op4": "Mahendra Singh Dhoni",
  "ans": "MS Dhoni"
},
{
  "ques": "Who was the first bowler to take a 5-wicket haul in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Sohail Tanvir",
  "op2": "Lasith Malinga",
  "op3": "Ishant Sharma",
  "op4": "Anil Kumble",
  "ans": "Sohail Tanvir"
},
{
  "ques": "Who is the first player to score 700+ runs in a single IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "David Warner",
  "op3": "Virat Kohli",
  "op4": "KL Rahul",
  "ans": "Chris Gayle"
},
{
  "ques": "Who was the youngest player to debut in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Prayas Ray Barman",
  "op2": "Riyan Parag",
  "op3": "Sarfaraz Khan",
  "op4": "Rahul Chahar",
  "ans": "Prayas Ray Barman"
},
{
  "ques": "Which player has taken 4 consecutive wickets in 4 balls in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Rahul Tewatia",
  "op3": "Rashid Khan",
  "op4": "Andrew Tye",
  "ans": "Lasith Malinga"
},
{
  "ques": "Which team did Hardik Pandya debut for in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "GT",
  "op2": "MI",
  "op3": "RR",
  "op4": "KKR",
  "ans": "MI"
},
{
  "ques": "Who is the first bowler to take 100 wickets for CSK?<br><br>",
  "quesType": "mcq",
  "op1": "Ravindra Jadeja",
  "op2": "Dwayne Bravo",
  "op3": "Deepak Chahar",
  "op4": "Albie Morkel",
  "ans": "Dwayne Bravo"
},
{
  "ques": "Who is the first captain to win 100 matches as captain in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Rohit Sharma",
  "op2": "MS Dhoni",
  "op3": "Virat Kohli",
  "op4": "Gautam Gambhir",
  "ans": "MS Dhoni"
},
{
  "ques": "Which batsman scored the fastest IPL century by an Indian?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Yusuf Pathan",
  "op3": "Rishabh Pant",
  "op4": "KL Rahul",
  "ans": "Yusuf Pathan"
},
{
  "ques": "Who was the first player to be retained by RCB?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "AB de Villiers",
  "op3": "Virat Kohli",
  "op4": "Anil Kumble",
  "ans": "Virat Kohli"
},
{
  "ques": "Which player hit a century and took a hat-trick in the same IPL match?<br><br>",
  "quesType": "mcq",
  "op1": "Shane Watson",
  "op2": "Yusuf Pathan",
  "op3": "Andre Russell",
  "op4": "Chris Gayle",
  "ans": "Shane Watson"
},
{
  "ques": "Who was the first player to hit 50 sixes in a single IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Virat Kohli",
  "op3": "AB de Villiers",
  "op4": "Andre Russell",
  "ans": "Chris Gayle"
},
{
  "ques": "Who is the only bowler to bowl a maiden Super Over?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Narine",
  "op2": "Ravichandran Ashwin",
  "op3": "Jasprit Bumrah",
  "op4": "Irfan Pathan",
  "ans": "Jasprit Bumrah"
},
{
  "ques": "Who is the oldest player to play an IPL match?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Adam Gilchrist",
  "op3": "Brad Hogg",
  "op4": "Shane Warne",
  "ans": "Brad Hogg"
},
{
  "ques": "Who was the first foreign captain to win an IPL title?<br><br>",
  "quesType": "mcq",
  "op1": "Shane Warne",
  "op2": "Adam Gilchrist",
  "op3": "David Warner",
  "op4": "Kane Williamson",
  "ans": "Shane Warne"
},
{
  "ques": "Who is the only player to win the Purple Cap three times?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Dwayne Bravo",
  "op3": "Bhuvneshwar Kumar",
  "op4": "Kagiso Rabada",
  "ans": "Dwayne Bravo"
},
{
  "ques": "Who was the first Indian bowler to take a hat-trick in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Mishra",
  "op2": "Lakshmipathy Balaji",
  "op3": "Yuvraj Singh",
  "op4": "Axar Patel",
  "ans": "Lakshmipathy Balaji"
},
{
  "ques": "Who was the first player to take 4 catches in an IPL match?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "AB de Villiers",
  "op3": "David Miller",
  "op4": "Rahul Tewatia",
  "ans": "Suresh Raina"
},
{
  "ques": "Which team defended the lowest total in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "CSK",
  "op2": "MI",
  "op3": "KXIP",
  "op4": "SRH",
  "ans": "CSK"
},
{
  "ques": "Who scored the first fifty in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Brendon McCullum",
  "op2": "Sourav Ganguly",
  "op3": "Rahul Dravid",
  "op4": "Virat Kohli",
  "ans": "Brendon McCullum"
},
{
  "ques": "Which player won the MVP award in IPL 2020?<br><br>",
  "quesType": "mcq",
  "op1": "Kagiso Rabada",
  "op2": "KL Rahul",
  "op3": "Jofra Archer",
  "op4": "Trent Boult",
  "ans": "Jofra Archer"
},
{
  "ques": "Which player took 5 wickets for 5 runs in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Ishant Sharma",
  "op2": "Anil Kumble",
  "op3": "Lasith Malinga",
  "op4": "Adam Zampa",
  "ans": "Anil Kumble"
},
{
  "ques": "Who has the highest batting average in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "David Warner",
  "op2": "KL Rahul",
  "op3": "AB de Villiers",
  "op4": "Virat Kohli",
  "ans": "KL Rahul"
},
{
  "ques": "Which player has captained the most IPL matches?<br><br>",
  "quesType": "mcq",
  "op1": "Rohit Sharma",
  "op2": "Virat Kohli",
  "op3": "MS Dhoni",
  "op4": "Gautam Gambhir",
  "ans": "MS Dhoni"
},
{
  "ques": "Who is the only player to win the Orange Cap twice in a row?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "David Warner",
  "op3": "Virat Kohli",
  "op4": "KL Rahul",
  "ans": "David Warner"
},
{
  "ques": "Who is the first spinner to win the Purple Cap?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Narine",
  "op2": "Yuzvendra Chahal",
  "op3": "Imran Tahir",
  "op4": "Rashid Khan",
  "ans": "Imran Tahir"
},
{
  "ques": "Which team was added as the 10th IPL franchise?<br><br>",
  "quesType": "mcq",
  "op1": "LSG",
  "op2": "GT",
  "op3": "DC",
  "op4": "PBKS",
  "ans": "LSG"
}
,
{
  "ques": "Which Indian cricketer is nicknamed 'The Wall'?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "VVS Laxman",
  "op3": "Rahul Dravid",
  "op4": "Sourav Ganguly",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who was the first Indian captain to score a century in ODI?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Sourav Ganguly",
  "op3": "Sunil Gavaskar",
  "op4": "Mohammad Azharuddin",
  "ans": "Kapil Dev"
},
{
  "ques": "Which bowler was known as the 'Turbanator'?<br><br>",
  "quesType": "mcq",
  "op1": "Ravindra Jadeja",
  "op2": "Anil Kumble",
  "op3": "Harbhajan Singh",
  "op4": "Yuzvendra Chahal",
  "ans": "Harbhajan Singh"
},
{
  "ques": "Who was the first Indian batsman to score 200 in a Test innings overseas?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "VVS Laxman",
  "op3": "Sunil Gavaskar",
  "op4": "Sourav Ganguly",
  "ans": "Sunil Gavaskar"
},
{
  "ques": "Who hit the first double century in a World Cup match?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Martin Guptill",
  "op3": "Rohit Sharma",
  "op4": "Sachin Tendulkar",
  "ans": "Martin Guptill"
},
{
  "ques": "Who won the Purple Cap in IPL 2022?<br><br>",
  "quesType": "mcq",
  "op1": "Harshal Patel",
  "op2": "Yuzvendra Chahal",
  "op3": "Kagiso Rabada",
  "op4": "Jasprit Bumrah",
  "ans": "Yuzvendra Chahal"
},
{
  "ques": "Who was the first Indian to win the ICC Cricketer of the Year award?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Rahul Dravid",
  "op3": "MS Dhoni",
  "op4": "Sachin Tendulkar",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who bowled the last over of the 2007 T20 World Cup final?<br><br>",
  "quesType": "mcq",
  "op1": "Joginder Sharma",
  "op2": "Irfan Pathan",
  "op3": "RP Singh",
  "op4": "Harbhajan Singh",
  "ans": "Joginder Sharma"
},
{
  "ques": "Who was the highest run scorer for India in the 2011 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "Virender Sehwag",
  "op3": "Sachin Tendulkar",
  "op4": "Gautam Gambhir",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who is the only player to win the ICC Cricketer of the Year, ICC ODI Player, and ICC Test Player in same year?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Ricky Ponting",
  "op3": "AB de Villiers",
  "op4": "MS Dhoni",
  "ans": "Virat Kohli"
},
{
  "ques": "Who hit the fastest fifty in T20I for India?<br><br>",
  "quesType": "mcq",
  "op1": "KL Rahul",
  "op2": "Rohit Sharma",
  "op3": "Yuvraj Singh",
  "op4": "Hardik Pandya",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Who was the first Indian to play 100 Test matches?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Kapil Dev",
  "op3": "Dilip Vengsarkar",
  "op4": "Sachin Tendulkar",
  "ans": "Sunil Gavaskar"
},
{
  "ques": "Who captained India in its first-ever T20I match?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "MS Dhoni",
  "op3": "Sourav Ganguly",
  "op4": "Virender Sehwag",
  "ans": "Virender Sehwag"
},
{
  "ques": "Which Indian bowler has the most wickets in T20Is?<br><br>",
  "quesType": "mcq",
  "op1": "Ravindra Jadeja",
  "op2": "Yuzvendra Chahal",
  "op3": "Bhuvneshwar Kumar",
  "op4": "Jasprit Bumrah",
  "ans": "Yuzvendra Chahal"
},
{
  "ques": "Who was India's wicketkeeper in the 1983 World Cup final?<br><br>",
  "quesType": "mcq",
  "op1": "Syed Kirmani",
  "op2": "Kiran More",
  "op3": "MS Dhoni",
  "op4": "Farokh Engineer",
  "ans": "Syed Kirmani"
},
{
  "ques": "Which Indian bowler is famous for his 'slingy' bowling action?<br><br>",
  "quesType": "mcq",
  "op1": "Zaheer Khan",
  "op2": "Irfan Pathan",
  "op3": "Lasith Malinga",
  "op4": "Jasprit Bumrah",
  "ans": "Jasprit Bumrah"
},
{
  "ques": "Which Indian cricketer is known for the helicopter shot?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "MS Dhoni",
  "op3": "Hardik Pandya",
  "op4": "Rohit Sharma",
  "ans": "MS Dhoni"
},
{
  "ques": "Who is the only bowler to take two hat-tricks in World Cups?<br><br>",
  "quesType": "mcq",
  "op1": "Wasim Akram",
  "op2": "Chetan Sharma",
  "op3": "Lasith Malinga",
  "op4": "Brett Lee",
  "ans": "Lasith Malinga"
},
{
  "ques": "Who is the youngest Indian to play T20Is?<br><br>",
  "quesType": "mcq",
  "op1": "Prithvi Shaw",
  "op2": "Washington Sundar",
  "op3": "Rishabh Pant",
  "op4": "Ishan Kishan",
  "ans": "Washington Sundar"
},
{
  "ques": "Which Indian was ICC Emerging Player of the Year 2008?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Rohit Sharma",
  "op3": "Ishant Sharma",
  "op4": "MS Dhoni",
  "ans": "Ishant Sharma"
},
{
  "ques": "Who bowled the last over in 2011 World Cup final?<br><br>",
  "quesType": "mcq",
  "op1": "Muttiah Muralitharan",
  "op2": "Nuwan Kulasekara",
  "op3": "Lasith Malinga",
  "op4": "Angelo Mathews",
  "ans": "Nuwan Kulasekara"
},
{
  "ques": "Which Indian bowler is known for the 'knuckle ball'?<br><br>",
  "quesType": "mcq",
  "op1": "Bhuvneshwar Kumar",
  "op2": "Jasprit Bumrah",
  "op3": "Deepak Chahar",
  "op4": "Mohammed Shami",
  "ans": "Bhuvneshwar Kumar"
},
{
  "ques": "Who was the vice-captain of India in the 2023 ODI World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "KL Rahul",
  "op2": "Hardik Pandya",
  "op3": "Ravindra Jadeja",
  "op4": "Shreyas Iyer",
  "ans": "Hardik Pandya"
},
{
  "ques": "Who scored the fastest century by an Indian in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Virender Sehwag",
  "op3": "Rishabh Pant",
  "op4": "Shikhar Dhawan",
  "ans": "Kapil Dev"
},
{
  "ques": "Who hit the most sixes for India in a single World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "Rohit Sharma",
  "op3": "MS Dhoni",
  "op4": "Hardik Pandya",
  "ans": "Rohit Sharma"
},
{
  "ques": "Who won the Man of the Tournament in the 2011 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Sachin Tendulkar",
  "op3": "Yuvraj Singh",
  "op4": "Virender Sehwag",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Which Indian player has the most catches in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sachin Tendulkar",
  "op3": "VVS Laxman",
  "op4": "Sunil Gavaskar",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who bowled the Super Over in India vs New Zealand 2020 T20I?<br><br>",
  "quesType": "mcq",
  "op1": "Navdeep Saini",
  "op2": "Bhuvneshwar Kumar",
  "op3": "Mohammed Shami",
  "op4": "Jasprit Bumrah",
  "ans": "Mohammed Shami"
}
,
{
  "ques": "Which Indian player scored a century in his debut Test match?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Sourav Ganguly",
  "op3": "Rahul Dravid",
  "op4": "Gautam Gambhir",
  "ans": "Sourav Ganguly"
},
{
  "ques": "Which bowler delivered the famous last over in the 2011 World Cup final?<br><br>",
  "quesType": "mcq",
  "op1": "Malinga",
  "op2": "Kulasekara",
  "op3": "Muralitharan",
  "op4": "Perera",
  "ans": "Kulasekara"
},
{
  "ques": "Who was the first Indian batsman to hit six sixes in an over in T20s?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "Rohit Sharma",
  "op3": "MS Dhoni",
  "op4": "Rishabh Pant",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Who holds the record for the highest individual score in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Brendon McCullum",
  "op2": "Chris Gayle",
  "op3": "Rohit Sharma",
  "op4": "David Warner",
  "ans": "Chris Gayle"
},
{
  "ques": "Which bowler has the best bowling figures in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Alzarri Joseph",
  "op2": "Sohail Tanvir",
  "op3": "Anil Kumble",
  "op4": "Sunil Narine",
  "ans": "Alzarri Joseph"
},
{
  "ques": "Which cricketer is nicknamed 'The Wall'?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Rahul Dravid",
  "op3": "Anil Kumble",
  "op4": "MS Dhoni",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who was India’s captain during the historic 2001 Test series win against Australia?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Rahul Dravid",
  "op3": "Sourav Ganguly",
  "op4": "Anil Kumble",
  "ans": "Sourav Ganguly"
},
{
  "ques": "Who scored a triple century for India in Tests apart from Sehwag?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Karun Nair",
  "op3": "Rahul Dravid",
  "op4": "VVS Laxman",
  "ans": "Karun Nair"
},
{
  "ques": "Who hit the winning runs in the 2011 World Cup final?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "Gautam Gambhir",
  "op3": "MS Dhoni",
  "op4": "Suresh Raina",
  "ans": "MS Dhoni"
},
{
  "ques": "Who was the first Indian to score a T20I century?<br><br>",
  "quesType": "mcq",
  "op1": "Rohit Sharma",
  "op2": "Suresh Raina",
  "op3": "Virat Kohli",
  "op4": "Yuvraj Singh",
  "ans": "Suresh Raina"
},
{
  "ques": "Who took the final catch in the 2007 T20 World Cup final?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Sreesanth",
  "op3": "Irfan Pathan",
  "op4": "Yuvraj Singh",
  "ans": "Sreesanth"
},
{
  "ques": "Which Indian cricketer was known as the 'Turbanator'?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Harbhajan Singh",
  "op3": "Yuvraj Singh",
  "op4": "Kapil Dev",
  "ans": "Harbhajan Singh"
},
{
  "ques": "Who is the first bowler to take 500 Test wickets for India?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Harbhajan Singh",
  "op3": "Anil Kumble",
  "op4": "R Ashwin",
  "ans": "Anil Kumble"
},
{
  "ques": "Who won the Purple Cap in IPL 2021?<br><br>",
  "quesType": "mcq",
  "op1": "Harshal Patel",
  "op2": "Jasprit Bumrah",
  "op3": "Mohammed Shami",
  "op4": "Kagiso Rabada",
  "ans": "Harshal Patel"
},
{
  "ques": "Who is known as Captain Cool?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "MS Dhoni",
  "op3": "Rahul Dravid",
  "op4": "Rohit Sharma",
  "ans": "MS Dhoni"
},
{
  "ques": "Who holds the record for the highest Test average for India?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Virat Kohli",
  "op3": "Sunil Gavaskar",
  "op4": "Vinod Kambli",
  "ans": "Vinod Kambli"
},
{
  "ques": "Who was the leading run-scorer in the 2019 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Joe Root",
  "op2": "Kane Williamson",
  "op3": "Rohit Sharma",
  "op4": "David Warner",
  "ans": "Rohit Sharma"
},
{
  "ques": "Which bowler has taken the most wickets in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Dwayne Bravo",
  "op3": "Amit Mishra",
  "op4": "Sunil Narine",
  "ans": "Dwayne Bravo"
},
{
  "ques": "Who was the first Indian woman cricketer to hit a T20I century?<br><br>",
  "quesType": "mcq",
  "op1": "Harmanpreet Kaur",
  "op2": "Mithali Raj",
  "op3": "Smriti Mandhana",
  "op4": "Jemimah Rodrigues",
  "ans": "Harmanpreet Kaur"
},
{
  "ques": "Who is the only cricketer to win ICC Player of the Year thrice?<br><br>",
  "quesType": "mcq",
  "op1": "Ricky Ponting",
  "op2": "AB de Villiers",
  "op3": "Virat Kohli",
  "op4": "Jacques Kallis",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was the coach of India during the 2011 World Cup win?<br><br>",
  "quesType": "mcq",
  "op1": "Gary Kirsten",
  "op2": "Ravi Shastri",
  "op3": "Anil Kumble",
  "op4": "Greg Chappell",
  "ans": "Gary Kirsten"
},
{
  "ques": "Which Indian bowler has the most wickets in T20Is?<br><br>",
  "quesType": "mcq",
  "op1": "Bhuvneshwar Kumar",
  "op2": "R Ashwin",
  "op3": "Yuzvendra Chahal",
  "op4": "Jasprit Bumrah",
  "ans": "Yuzvendra Chahal"
},
{
  "ques": "Who was India’s wicketkeeper in the 2003 World Cup final?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Parthiv Patel",
  "op3": "MS Dhoni",
  "op4": "Dinesh Karthik",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who was the first Indian captain to win a Test series in Pakistan?<br><br>",
  "quesType": "mcq",
  "op1": "Sourav Ganguly",
  "op2": "Rahul Dravid",
  "op3": "MS Dhoni",
  "op4": "Kapil Dev",
  "ans": "Sourav Ganguly"
},
{
  "ques": "Which Indian player has scored a century in all formats?<br><br>",
  "quesType": "mcq",
  "op1": "Rohit Sharma",
  "op2": "Virat Kohli",
  "op3": "Suresh Raina",
  "op4": "Shikhar Dhawan",
  "ans": "Suresh Raina"
},
{
  "ques": "Who hit a double century against Sri Lanka in 2014?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Shikhar Dhawan",
  "op3": "Rohit Sharma",
  "op4": "Ajinkya Rahane",
  "ans": "Rohit Sharma"
},
{
  "ques": "Who captained India in the 2007 World Cup (50 overs)?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "MS Dhoni",
  "op3": "Sourav Ganguly",
  "op4": "Sachin Tendulkar",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who scored the most runs for India in the 2016 T20 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "MS Dhoni",
  "op3": "Rohit Sharma",
  "op4": "Yuvraj Singh",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was India’s first ODI captain?<br><br>",
  "quesType": "mcq",
  "op1": "Ajit Wadekar",
  "op2": "Kapil Dev",
  "op3": "Sunil Gavaskar",
  "op4": "Mansoor Ali Khan Pataudi",
  "ans": "Ajit Wadekar"
}
,
{
  "ques": "Which IPL team was banned for two seasons (2016 & 2017)?<br><br>",
  "quesType": "mcq",
  "op1": "CSK",
  "op2": "RCB",
  "op3": "MI",
  "op4": "KKR",
  "ans": "CSK"
},
{
  "ques": "Which team did Gujarat Titans replace in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Kochi Tuskers Kerala",
  "op2": "Pune Warriors",
  "op3": "They were a new addition",
  "op4": "Deccan Chargers",
  "ans": "They were a new addition"
},
{
  "ques": "Who hit the winning runs for CSK in the 2018 IPL final?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Ambati Rayudu",
  "op3": "Shane Watson",
  "op4": "Suresh Raina",
  "ans": "Ambati Rayudu"
},
{
  "ques": "Who is the only player to win MVP and Emerging Player award in the same season?<br><br>",
  "quesType": "mcq",
  "op1": "Shubman Gill",
  "op2": "Ishan Kishan",
  "op3": "Shreyas Iyer",
  "op4": "Sunil Narine",
  "ans": "Sunil Narine"
},
{
  "ques": "Which player holds the record for most ducks in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Parthiv Patel",
  "op2": "Harbhajan Singh",
  "op3": "Rohit Sharma",
  "op4": "Mandeep Singh",
  "ans": "Rohit Sharma"
},
{
  "ques": "Which Indian bowler took 5 wickets for 12 runs for DC?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Mishra",
  "op2": "Axar Patel",
  "op3": "Mohammed Shami",
  "op4": "Ishant Sharma",
  "ans": "Amit Mishra"
},
{
  "ques": "Who won the Fair Play Award in IPL 2022?<br><br>",
  "quesType": "mcq",
  "op1": "CSK",
  "op2": "RR",
  "op3": "GT",
  "op4": "MI",
  "ans": "RR"
},
{
  "ques": "Who was the first captain of Gujarat Titans?<br><br>",
  "quesType": "mcq",
  "op1": "Shubman Gill",
  "op2": "Hardik Pandya",
  "op3": "Rashid Khan",
  "op4": "David Miller",
  "ans": "Hardik Pandya"
},
{
  "ques": "Who scored a century for RR in the 2022 final?<br><br>",
  "quesType": "mcq",
  "op1": "Jos Buttler",
  "op2": "Sanju Samson",
  "op3": "Devdutt Padikkal",
  "op4": "Yashasvi Jaiswal",
  "ans": "Jos Buttler"
},
{
  "ques": "Which uncapped player was the most expensive buy in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Tewatia",
  "op2": "Shahrukh Khan",
  "op3": "Varun Chakravarthy",
  "op4": "Krunal Pandya",
  "ans": "Varun Chakravarthy"
},
{
  "ques": "Who holds the record for most sixes in a single IPL match?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Andre Russell",
  "op3": "AB de Villiers",
  "op4": "Rishabh Pant",
  "ans": "Chris Gayle"
},
{
  "ques": "Which foreign player scored 4 centuries in one IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "David Warner",
  "op2": "Chris Gayle",
  "op3": "Jos Buttler",
  "op4": "Brendon McCullum",
  "ans": "Jos Buttler"
},
{
  "ques": "Who was the first player to be run out on 99 in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Prithvi Shaw",
  "op3": "Ishan Kishan",
  "op4": "Suresh Raina",
  "ans": "Virat Kohli"
},
{
  "ques": "Which Indian spinner has the best economy rate in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Ravindra Jadeja",
  "op2": "Sunil Narine",
  "op3": "Ravichandran Ashwin",
  "op4": "Rahul Chahar",
  "ans": "Ravichandran Ashwin"
},
{
  "ques": "Who was the first bowler to bowl a super over in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Irfan Pathan",
  "op2": "Praveen Kumar",
  "op3": "Lasith Malinga",
  "op4": "Anil Kumble",
  "ans": "Irfan Pathan"
},
{
  "ques": "Who hit the first-ever IPL hat-trick of sixes in an over?<br><br>",
  "quesType": "mcq",
  "op1": "Yusuf Pathan",
  "op2": "Yuvraj Singh",
  "op3": "Adam Gilchrist",
  "op4": "MS Dhoni",
  "ans": "Yusuf Pathan"
},
{
  "ques": "Who won Man of the Match in IPL 2019 final?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Jasprit Bumrah",
  "op3": "Shane Watson",
  "op4": "Kieron Pollard",
  "ans": "Jasprit Bumrah"
},
{
  "ques": "Which player has played the most matches for a single franchise?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Rohit Sharma",
  "op3": "Virat Kohli",
  "op4": "Suresh Raina",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was the first player to score 5000 IPL runs?<br><br>",
  "quesType": "mcq",
  "op1": "David Warner",
  "op2": "Virat Kohli",
  "op3": "Suresh Raina",
  "op4": "Rohit Sharma",
  "ans": "Suresh Raina"
},
{
  "ques": "Which bowler bowled the fastest delivery in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Umran Malik",
  "op2": "Jasprit Bumrah",
  "op3": "Kagiso Rabada",
  "op4": "Lockie Ferguson",
  "ans": "Umran Malik"
},
{
  "ques": "Who captained KKR to their first IPL title?<br><br>",
  "quesType": "mcq",
  "op1": "Gautam Gambhir",
  "op2": "Sourav Ganguly",
  "op3": "Dinesh Karthik",
  "op4": "Brendon McCullum",
  "ans": "Gautam Gambhir"
},
{
  "ques": "Who is the only player to win the IPL final with two different teams?<br><br>",
  "quesType": "mcq",
  "op1": "Ravindra Jadeja",
  "op2": "Yusuf Pathan",
  "op3": "Manish Pandey",
  "op4": "Robin Uthappa",
  "ans": "Yusuf Pathan"
},
{
  "ques": "Who hit the first century for RCB in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Manish Pandey",
  "op3": "Virat Kohli",
  "op4": "Rahul Dravid",
  "ans": "Manish Pandey"
},
{
  "ques": "Who is the youngest player to score an IPL fifty?<br><br>",
  "quesType": "mcq",
  "op1": "Riyan Parag",
  "op2": "Prithvi Shaw",
  "op3": "Sarfaraz Khan",
  "op4": "Shubman Gill",
  "ans": "Riyan Parag"
},
{
  "ques": "Who bowled the most dot balls in a single IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "Bhuvneshwar Kumar",
  "op2": "Rashid Khan",
  "op3": "Sunil Narine",
  "op4": "Kagiso Rabada",
  "ans": "Bhuvneshwar Kumar"
},
{
  "ques": "Who won the Emerging Player award in IPL 2020?<br><br>",
  "quesType": "mcq",
  "op1": "Devdutt Padikkal",
  "op2": "Ruturaj Gaikwad",
  "op3": "Ishan Kishan",
  "op4": "Prithvi Shaw",
  "ans": "Devdutt Padikkal"
},
{
  "ques": "Which team chased down the highest total in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "MI",
  "op2": "RR",
  "op3": "RCB",
  "op4": "PBKS",
  "ans": "RR"
},
{
  "ques": "Who bowled the last over of IPL 2008 final?<br><br>",
  "quesType": "mcq",
  "op1": "Sohail Tanvir",
  "op2": "Shane Warne",
  "op3": "Munaf Patel",
  "op4": "Yusuf Pathan",
  "ans": "Sohail Tanvir"
},
{
  "ques": "Who was the first uncapped Indian to captain an IPL team?<br><br>",
  "quesType": "mcq",
  "op1": "Rishabh Pant",
  "op2": "Ishan Kishan",
  "op3": "Sanju Samson",
  "op4": "Suryakumar Yadav",
  "ans": "Rishabh Pant"
}
,
{
  "ques": "Who is known as the 'God of Cricket'?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "MS Dhoni",
  "op3": "Ricky Ponting",
  "op4": "Sachin Tendulkar",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Which Indian player scored a triple century in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Virender Sehwag",
  "op3": "Rahul Dravid",
  "op4": "VVS Laxman",
  "ans": "Virender Sehwag"
},
{
  "ques": "Who was the first bowler to take 500 Test wickets?<br><br>",
  "quesType": "mcq",
  "op1": "Muttiah Muralitharan",
  "op2": "Glenn McGrath",
  "op3": "Courtney Walsh",
  "op4": "Shane Warne",
  "ans": "Courtney Walsh"
},
{
  "ques": "Who is the only Indian to score a century in all three formats as captain?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Virat Kohli",
  "op3": "Rohit Sharma",
  "op4": "KL Rahul",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was India's captain during the 2003 Cricket World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sourav Ganguly",
  "op3": "Anil Kumble",
  "op4": "Sachin Tendulkar",
  "ans": "Sourav Ganguly"
},
{
  "ques": "Which Indian player scored 264 runs in an ODI?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Sachin Tendulkar",
  "op3": "Rohit Sharma",
  "op4": "Shikhar Dhawan",
  "ans": "Rohit Sharma"
},
{
  "ques": "Who was the first Indian to take a hat-trick in ODI cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Harbhajan Singh",
  "op2": "Chetan Sharma",
  "op3": "Kapil Dev",
  "op4": "Zaheer Khan",
  "ans": "Chetan Sharma"
},
{
  "ques": "Who was named ICC Test Cricketer of the Decade (2011–2020)?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Joe Root",
  "op3": "Steve Smith",
  "op4": "Kane Williamson",
  "ans": "Virat Kohli"
},
{
  "ques": "Which Indian player has the highest individual score in T20Is?<br><br>",
  "quesType": "mcq",
  "op1": "Suryakumar Yadav",
  "op2": "KL Rahul",
  "op3": "Rohit Sharma",
  "op4": "Virat Kohli",
  "ans": "Rohit Sharma"
},
{
  "ques": "Who won the Orange Cap in IPL 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Faf du Plessis",
  "op2": "Shubman Gill",
  "op3": "Ruturaj Gaikwad",
  "op4": "David Warner",
  "ans": "Shubman Gill"
},
{
  "ques": "Who was the first Indian woman cricketer to score a double century in Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Mithali Raj",
  "op2": "Harmanpreet Kaur",
  "op3": "Jhulan Goswami",
  "op4": "Smriti Mandhana",
  "ans": "Mithali Raj"
},
{
  "ques": "Which stadium is known as the Mecca of Indian Cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Wankhede Stadium",
  "op2": "M. A. Chidambaram Stadium",
  "op3": "Eden Gardens",
  "op4": "Feroz Shah Kotla",
  "ans": "Eden Gardens"
},
{
  "ques": "Which Indian bowler was once ranked World No. 1 in Test bowling?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Jasprit Bumrah",
  "op3": "Ravichandran Ashwin",
  "op4": "Zaheer Khan",
  "ans": "Ravichandran Ashwin"
},
{
  "ques": "Who scored the winning runs in the 2011 World Cup final?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "MS Dhoni",
  "op3": "Gautam Gambhir",
  "op4": "Suresh Raina",
  "ans": "MS Dhoni"
},
{
  "ques": "Who was India's leading wicket-taker in the 2015 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Umesh Yadav",
  "op2": "Mohammed Shami",
  "op3": "Ravindra Jadeja",
  "op4": "Ravichandran Ashwin",
  "ans": "Mohammed Shami"
},
{
  "ques": "Who was the first Indian player to take 300 wickets in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Anil Kumble",
  "op3": "Javagal Srinath",
  "op4": "Zaheer Khan",
  "ans": "Anil Kumble"
},
{
  "ques": "Who holds the record for the fastest 100 in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "AB de Villiers",
  "op2": "Chris Gayle",
  "op3": "Rishabh Pant",
  "op4": "David Warner",
  "ans": "Chris Gayle"
},
{
  "ques": "Who captained India to their first-ever Test series win in Australia?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Sourav Ganguly",
  "op3": "Virat Kohli",
  "op4": "Rahul Dravid",
  "ans": "Virat Kohli"
},
{
  "ques": "Who is the only Indian bowler to take all 10 wickets in a Test innings?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Kapil Dev",
  "op3": "Jasprit Bumrah",
  "op4": "Harbhajan Singh",
  "ans": "Anil Kumble"
},
{
  "ques": "Who was the first captain of India's women's cricket team?<br><br>",
  "quesType": "mcq",
  "op1": "Shantha Rangaswamy",
  "op2": "Mithali Raj",
  "op3": "Anjum Chopra",
  "op4": "Diana Edulji",
  "ans": "Shantha Rangaswamy"
},
{
  "ques": "Which cricketer is known as 'Gabbar'?<br><br>",
  "quesType": "mcq",
  "op1": "Shikhar Dhawan",
  "op2": "Ravindra Jadeja",
  "op3": "Hardik Pandya",
  "op4": "Yuvraj Singh",
  "ans": "Shikhar Dhawan"
},
{
  "ques": "Which team did India beat in the NatWest Series final 2002?<br><br>",
  "quesType": "mcq",
  "op1": "Australia",
  "op2": "England",
  "op3": "South Africa",
  "op4": "New Zealand",
  "ans": "England"
},
{
  "ques": "Who is the youngest Indian captain in T20Is?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Rishabh Pant",
  "op3": "Hardik Pandya",
  "op4": "Suresh Raina",
  "ans": "Suresh Raina"
},
{
  "ques": "Who was the Player of the Series in ICC T20 World Cup 2007?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "Gautam Gambhir",
  "op3": "Irfan Pathan",
  "op4": "Shahid Afridi",
  "ans": "Shahid Afridi"
},
{
  "ques": "Which Indian player took a hat-trick in the IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Harshal Patel",
  "op2": "Yuzvendra Chahal",
  "op3": "Axar Patel",
  "op4": "All of the above",
  "ans": "All of the above"
},
{
  "ques": "Who is the coach of the Indian men's team in 2023?<br><br>",
  "quesType": "mcq",
  "op1": "Ravi Shastri",
  "op2": "Rahul Dravid",
  "op3": "Anil Kumble",
  "op4": "VVS Laxman",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who holds the record for most runs in a single edition of IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "David Warner",
  "op3": "Kane Williamson",
  "op4": "Shubman Gill",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was the first Indian cricketer to score an ODI double century?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Rohit Sharma",
  "op3": "Sachin Tendulkar",
  "op4": "MS Dhoni",
  "ans": "Sachin Tendulkar"
}
,
{
  "ques": "Who scored a double century in ODIs first for India?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Sachin Tendulkar",
  "op3": "Rohit Sharma",
  "op4": "MS Dhoni",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who was India's captain in the 1983 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Kapil Dev",
  "op3": "Mohinder Amarnath",
  "op4": "Kris Srikkanth",
  "ans": "Kapil Dev"
},
{
  "ques": "Who bowled the last over in the 2007 T20 World Cup final?<br><br>",
  "quesType": "mcq",
  "op1": "Irfan Pathan",
  "op2": "RP Singh",
  "op3": "Joginder Sharma",
  "op4": "Sreesanth",
  "ans": "Joginder Sharma"
},
{
  "ques": "Who is the only Indian to score centuries in four consecutive Test innings?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Virat Kohli",
  "op3": "Sunil Gavaskar",
  "op4": "Gautam Gambhir",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who is the first Indian bowler to take a hat-trick in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Harbhajan Singh",
  "op2": "Anil Kumble",
  "op3": "Kapil Dev",
  "op4": "Jasprit Bumrah",
  "ans": "Harbhajan Singh"
},
{
  "ques": "Who was the Man of the Match in the 1983 World Cup final?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Mohinder Amarnath",
  "op3": "Sunil Gavaskar",
  "op4": "Roger Binny",
  "ans": "Mohinder Amarnath"
},
{
  "ques": "Which Indian player is nicknamed 'Gabbar'?<br><br>",
  "quesType": "mcq",
  "op1": "Rohit Sharma",
  "op2": "Shikhar Dhawan",
  "op3": "Rishabh Pant",
  "op4": "Hardik Pandya",
  "ans": "Shikhar Dhawan"
},
{
  "ques": "Which bowler took 10 wickets in an innings against Pakistan?<br><br>",
  "quesType": "mcq",
  "op1": "Harbhajan Singh",
  "op2": "Kapil Dev",
  "op3": "Anil Kumble",
  "op4": "R Ashwin",
  "ans": "Anil Kumble"
},
{
  "ques": "Who scored the winning runs for India in the 2002 NatWest Series final?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "Mohammad Kaif",
  "op3": "Virender Sehwag",
  "op4": "Rahul Dravid",
  "ans": "Mohammad Kaif"
},
{
  "ques": "Who captained India in the 2015 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "MS Dhoni",
  "op3": "Suresh Raina",
  "op4": "Rohit Sharma",
  "ans": "MS Dhoni"
},
{
  "ques": "Who was the first Indian to win the ICC Cricketer of the Year award?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sachin Tendulkar",
  "op3": "Virat Kohli",
  "op4": "Anil Kumble",
  "ans": "Rahul Dravid"
},
{
  "ques": "Which batsman was called 'Very Very Special'?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "VVS Laxman",
  "op3": "Sachin Tendulkar",
  "op4": "Sourav Ganguly",
  "ans": "VVS Laxman"
},
{
  "ques": "Who holds the record for most sixes in international cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "MS Dhoni",
  "op3": "Shahid Afridi",
  "op4": "Rohit Sharma",
  "ans": "Rohit Sharma"
},
{
  "ques": "Who was the first Indian cricketer to play 200 Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Kapil Dev",
  "op3": "Rahul Dravid",
  "op4": "Sachin Tendulkar",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who scored 319 runs against Pakistan in Multan?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Virender Sehwag",
  "op3": "Sachin Tendulkar",
  "op4": "VVS Laxman",
  "ans": "Virender Sehwag"
},
{
  "ques": "Who was the first Indian woman to score a double century in Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Harmanpreet Kaur",
  "op2": "Mithali Raj",
  "op3": "Smriti Mandhana",
  "op4": "Jhulan Goswami",
  "ans": "Mithali Raj"
},
{
  "ques": "Which Indian cricketer has played for maximum IPL franchises?<br><br>",
  "quesType": "mcq",
  "op1": "Dinesh Karthik",
  "op2": "Robin Uthappa",
  "op3": "Parthiv Patel",
  "op4": "Aaron Finch",
  "ans": "Aaron Finch"
},
{
  "ques": "Who was known for the helicopter shot?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "MS Dhoni",
  "op3": "Virender Sehwag",
  "op4": "Hardik Pandya",
  "ans": "MS Dhoni"
},
{
  "ques": "Which Indian cricketer scored 973 runs in a single IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "David Warner",
  "op2": "Chris Gayle",
  "op3": "Virat Kohli",
  "op4": "AB de Villiers",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was the first Indian to score back-to-back ODI double centuries?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Virender Sehwag",
  "op3": "Rohit Sharma",
  "op4": "MS Dhoni",
  "ans": "Rohit Sharma"
},
{
  "ques": "Who was the first Indian bowler to take a five-wicket haul in T20Is?<br><br>",
  "quesType": "mcq",
  "op1": "Yuzvendra Chahal",
  "op2": "Bhuvneshwar Kumar",
  "op3": "R Ashwin",
  "op4": "Jasprit Bumrah",
  "ans": "Yuzvendra Chahal"
},
{
  "ques": "Who hit six fours in an over in a Test match for India?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Virender Sehwag",
  "op3": "Sandeep Patil",
  "op4": "Prithvi Shaw",
  "ans": "Kapil Dev"
},
{
  "ques": "Who captained India in the 1985 World Championship of Cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Sunil Gavaskar",
  "op3": "Mohinder Amarnath",
  "op4": "Dilip Vengsarkar",
  "ans": "Sunil Gavaskar"
},
{
  "ques": "Who scored the most runs in IPL 2020?<br><br>",
  "quesType": "mcq",
  "op1": "KL Rahul",
  "op2": "David Warner",
  "op3": "Shikhar Dhawan",
  "op4": "Virat Kohli",
  "ans": "KL Rahul"
},
{
  "ques": "Who was the first Indian batsman to hit 400+ runs in a Test series?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Rahul Dravid",
  "op3": "Sachin Tendulkar",
  "op4": "VVS Laxman",
  "ans": "Sunil Gavaskar"
},
{
  "ques": "Which Indian player won ICC Emerging Player of the Year in 2018?<br><br>",
  "quesType": "mcq",
  "op1": "Shubman Gill",
  "op2": "Rishabh Pant",
  "op3": "Prithvi Shaw",
  "op4": "Mayank Agarwal",
  "ans": "Rishabh Pant"
},
{
  "ques": "Who was the first Indian to score a fifty in T20Is?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "MS Dhoni",
  "op3": "Yuvraj Singh",
  "op4": "Gautam Gambhir",
  "ans": "Virender Sehwag"
},
{
  "ques": "Who was the first Indian to reach 10,000 runs in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sourav Ganguly",
  "op3": "Sachin Tendulkar",
  "op4": "Sunil Gavaskar",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who was the first bowler to bowl a maiden Super Over in the IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Anrich Nortje",
  "op2": "Jasprit Bumrah",
  "op3": "Mohammed Shami",
  "op4": "Sunil Narine",
  "ans": "Mohammed Shami"
}
,
{
  "ques": "Who bowled the first ball in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Glenn McGrath",
  "op2": "Shoaib Akhtar",
  "op3": "Praveen Kumar",
  "op4": "Zaheer Khan",
  "ans": "Praveen Kumar"
},
{
  "ques": "Who hit the first six in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Brendon McCullum",
  "op2": "Sourav Ganguly",
  "op3": "Jacques Kallis",
  "op4": "Rahul Dravid",
  "ans": "Brendon McCullum"
},
{
  "ques": "Which team won the first IPL match ever played?<br><br>",
  "quesType": "mcq",
  "op1": "RCB",
  "op2": "KKR",
  "op3": "CSK",
  "op4": "DC",
  "ans": "KKR"
},
{
  "ques": "Who was the first player to be awarded the Purple Cap?<br><br>",
  "quesType": "mcq",
  "op1": "RP Singh",
  "op2": "Sohail Tanvir",
  "op3": "Lasith Malinga",
  "op4": "Ashish Nehra",
  "ans": "Sohail Tanvir"
},
{
  "ques": "Which bowler took the most wickets in IPL 2013?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Narine",
  "op2": "Dwayne Bravo",
  "op3": "Mitchell Johnson",
  "op4": "James Faulkner",
  "ans": "Dwayne Bravo"
},
{
  "ques": "Who captained MI to their first IPL title?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Harbhajan Singh",
  "op3": "Rohit Sharma",
  "op4": "Kieron Pollard",
  "ans": "Rohit Sharma"
},
{
  "ques": "Who was the first Indian to win the Purple Cap?<br><br>",
  "quesType": "mcq",
  "op1": "RP Singh",
  "op2": "Bhuvneshwar Kumar",
  "op3": "Mohit Sharma",
  "op4": "Harshal Patel",
  "ans": "RP Singh"
},
{
  "ques": "Who scored the most runs in IPL 2018?<br><br>",
  "quesType": "mcq",
  "op1": "Kane Williamson",
  "op2": "KL Rahul",
  "op3": "Virat Kohli",
  "op4": "Rishabh Pant",
  "ans": "Kane Williamson"
},
{
  "ques": "Which player has the most catches as a fielder in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "AB de Villiers",
  "op2": "Kieron Pollard",
  "op3": "Suresh Raina",
  "op4": "Virat Kohli",
  "ans": "Suresh Raina"
},
{
  "ques": "Which team did KL Rahul captain first in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "PBKS",
  "op2": "RCB",
  "op3": "LSG",
  "op4": "SRH",
  "ans": "PBKS"
},
{
  "ques": "Who hit the most fours in IPL 2019?<br><br>",
  "quesType": "mcq",
  "op1": "David Warner",
  "op2": "Shikhar Dhawan",
  "op3": "KL Rahul",
  "op4": "Virat Kohli",
  "ans": "David Warner"
},
{
  "ques": "Who hit the last ball six to win a match for KKR in IPL 2014 final?<br><br>",
  "quesType": "mcq",
  "op1": "Robin Uthappa",
  "op2": "Manish Pandey",
  "op3": "Piyush Chawla",
  "op4": "Yusuf Pathan",
  "ans": "Piyush Chawla"
},
{
  "ques": "Which spinner took the first hat-trick in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Mishra",
  "op2": "Yuzvendra Chahal",
  "op3": "Sunil Narine",
  "op4": "Anil Kumble",
  "ans": "Amit Mishra"
},
{
  "ques": "Who was the first player to hit 30+ sixes in an IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "Adam Gilchrist",
  "op2": "Sanath Jayasuriya",
  "op3": "Virender Sehwag",
  "op4": "MS Dhoni",
  "ans": "Sanath Jayasuriya"
},
{
  "ques": "Who was the first player to score a fifty in IPL finals?<br><br>",
  "quesType": "mcq",
  "op1": "Yusuf Pathan",
  "op2": "Adam Gilchrist",
  "op3": "Gautam Gambhir",
  "op4": "Shane Watson",
  "ans": "Yusuf Pathan"
},
{
  "ques": "Which bowler conceded the most runs in an IPL innings?<br><br>",
  "quesType": "mcq",
  "op1": "Ishant Sharma",
  "op2": "Basil Thampi",
  "op3": "Yuzvendra Chahal",
  "op4": "Umesh Yadav",
  "ans": "Basil Thampi"
},
{
  "ques": "Who scored the fastest 30+ runs in an IPL match?<br><br>",
  "quesType": "mcq",
  "op1": "Andre Russell",
  "op2": "Chris Gayle",
  "op3": "AB de Villiers",
  "op4": "Sunil Narine",
  "ans": "Sunil Narine"
},
{
  "ques": "Who was the first player to play 200 IPL matches?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Rohit Sharma",
  "op3": "Suresh Raina",
  "op4": "Virat Kohli",
  "ans": "MS Dhoni"
},
{
  "ques": "Which player has the most wins as captain in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Gautam Gambhir",
  "op2": "Rohit Sharma",
  "op3": "MS Dhoni",
  "op4": "Virat Kohli",
  "ans": "MS Dhoni"
},
{
  "ques": "Who was the youngest to take a five-wicket haul in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Jaydev Unadkat",
  "op2": "Ankit Rajpoot",
  "op3": "Rahul Tewatia",
  "op4": "Jaydev Unadkat",
  "ans": "Jaydev Unadkat"
},
{
  "ques": "Who scored the first fifty in 2020 IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Mayank Agarwal",
  "op2": "Faf du Plessis",
  "op3": "Shubman Gill",
  "op4": "Devdutt Padikkal",
  "ans": "Mayank Agarwal"
},
{
  "ques": "Who was the first bowler to bowl a double wicket maiden in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Irfan Pathan",
  "op3": "Bhuvneshwar Kumar",
  "op4": "Jasprit Bumrah",
  "ans": "Bhuvneshwar Kumar"
},
{
  "ques": "Which player has the most fifties for KKR?<br><br>",
  "quesType": "mcq",
  "op1": "Gautam Gambhir",
  "op2": "Robin Uthappa",
  "op3": "Yusuf Pathan",
  "op4": "Andre Russell",
  "ans": "Gautam Gambhir"
},
{
  "ques": "Who was the first wicketkeeper to take 3 stumpings in an IPL match?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Dinesh Karthik",
  "op3": "Robin Uthappa",
  "op4": "Parthiv Patel",
  "ans": "MS Dhoni"
},
{
  "ques": "Who scored the most runs for RR in a single season?<br><br>",
  "quesType": "mcq",
  "op1": "Jos Buttler",
  "op2": "Sanju Samson",
  "op3": "Ajinkya Rahane",
  "op4": "Shane Watson",
  "ans": "Jos Buttler"
},
{
  "ques": "Who won the Super Striker award in IPL 2021?<br><br>",
  "quesType": "mcq",
  "op1": "AB de Villiers",
  "op2": "Andre Russell",
  "op3": "Shimron Hetmyer",
  "op4": "Kieron Pollard",
  "ans": "Shimron Hetmyer"
},
{
  "ques": "Which bowler has the most dot balls in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Narine",
  "op2": "Bhuvneshwar Kumar",
  "op3": "Ravichandran Ashwin",
  "op4": "Lasith Malinga",
  "ans": "Bhuvneshwar Kumar"
},
{
  "ques": "Who was the first player to score a century in IPL playoffs?<br><br>",
  "quesType": "mcq",
  "op1": "Murali Vijay",
  "op2": "Virat Kohli",
  "op3": "Suresh Raina",
  "op4": "Shane Watson",
  "ans": "Murali Vijay"
},
{
  "ques": "Who was the first Impact Player used in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Tushar Deshpande",
  "op2": "Rahul Tewatia",
  "op3": "Ayush Badoni",
  "op4": "Venkatesh Iyer",
  "ans": "Tushar Deshpande"
}

]

let codingsport3Arr=[
  {
  "ques": "Who was the first Indian cricketer to score a century before lunch on the first day of a Test?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Shikhar Dhawan",
  "op3": "Sunil Gavaskar",
  "op4": "Vinoo Mankad",
  "ans": "Shikhar Dhawan"
},
{
  "ques": "Who was the first Indian to play 100 Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Kapil Dev",
  "op3": "Dilip Vengsarkar",
  "op4": "Sourav Ganguly",
  "ans": "Sunil Gavaskar"
},
{
  "ques": "Who scored a century on debut for India in T20 Internationals?<br><br>",
  "quesType": "mcq",
  "op1": "Suryakumar Yadav",
  "op2": "KL Rahul",
  "op3": "Deepak Hooda",
  "op4": "Ruturaj Gaikwad",
  "ans": "Deepak Hooda"
},
{
  "ques": "Who is the only Indian cricketer to score twin centuries in a Test at Lord’s?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sunil Gavaskar",
  "op3": "Vinoo Mankad",
  "op4": "VVS Laxman",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who holds the record for most wickets in a single edition of the IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Dwayne Bravo",
  "op2": "Kagiso Rabada",
  "op3": "Harshal Patel",
  "op4": "Lasith Malinga",
  "ans": "Harshal Patel"
},
{
  "ques": "Who was the first bowler to take a hat-trick in World Cup history?<br><br>",
  "quesType": "mcq",
  "op1": "Chaminda Vaas",
  "op2": "Chetan Sharma",
  "op3": "Saqlain Mushtaq",
  "op4": "Brett Lee",
  "ans": "Chetan Sharma"
},
{
  "ques": "Who is the only player to have scored 6 sixes in an over in ODI cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "Herschelle Gibbs",
  "op3": "Kieron Pollard",
  "op4": "Garry Sobers",
  "ans": "Herschelle Gibbs"
},
{
  "ques": "Who was the youngest Indian to make a Test debut?<br><br>",
  "quesType": "mcq",
  "op1": "Parthiv Patel",
  "op2": "Sachin Tendulkar",
  "op3": "Maninder Singh",
  "op4": "Ishant Sharma",
  "ans": "Parthiv Patel"
},
{
  "ques": "Who is the only player to score a century and take a hat-trick in the same ODI?<br><br>",
  "quesType": "mcq",
  "op1": "Shahid Afridi",
  "op2": "Yuvraj Singh",
  "op3": "Rohit Sharma",
  "op4": "Ravindra Jadeja",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Who scored the first ever double century in World Cup history?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Martin Guptill",
  "op3": "Rohit Sharma",
  "op4": "Gary Kirsten",
  "ans": "Chris Gayle"
},
{
  "ques": "Which player captained India in the 1996 World Cup semi-final?<br><br>",
  "quesType": "mcq",
  "op1": "Mohammad Azharuddin",
  "op2": "Sachin Tendulkar",
  "op3": "Anil Kumble",
  "op4": "Kapil Dev",
  "ans": "Mohammad Azharuddin"
},
{
  "ques": "Who was the first Indian cricketer to be inducted into the ICC Hall of Fame?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Sunil Gavaskar",
  "op3": "Sachin Tendulkar",
  "op4": "Anil Kumble",
  "ans": "Sunil Gavaskar"
},
{
  "ques": "Who holds the record for fastest ODI century by an Indian?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Virat Kohli",
  "op3": "Yusuf Pathan",
  "op4": "Kapil Dev",
  "ans": "Virat Kohli"
},
{
  "ques": "Which Indian cricketer has the record for most runs in a single Ranji Trophy season?<br><br>",
  "quesType": "mcq",
  "op1": "Wasim Jaffer",
  "op2": "VVS Laxman",
  "op3": "Cheteshwar Pujara",
  "op4": "Mayank Agarwal",
  "ans": "VVS Laxman"
},
{
  "ques": "Who was the first Indian captain to win a Test series in Pakistan?<br><br>",
  "quesType": "mcq",
  "op1": "Sourav Ganguly",
  "op2": "MS Dhoni",
  "op3": "Rahul Dravid",
  "op4": "Kapil Dev",
  "ans": "Sourav Ganguly"
},
{
  "ques": "Who is the only Indian bowler to take a 5-wicket haul in all formats?<br><br>",
  "quesType": "mcq",
  "op1": "Bhuvneshwar Kumar",
  "op2": "Jasprit Bumrah",
  "op3": "Ravindra Jadeja",
  "op4": "Harbhajan Singh",
  "ans": "Bhuvneshwar Kumar"
},
{
  "ques": "Which cricketer hit 4 consecutive sixes to win an IPL match?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Rinku Singh",
  "op3": "Andre Russell",
  "op4": "Kieron Pollard",
  "ans": "Rinku Singh"
},
{
  "ques": "Who has the highest Test batting average for India?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Rahul Dravid",
  "op3": "Vinod Kambli",
  "op4": "Virat Kohli",
  "ans": "Vinod Kambli"
},
{
  "ques": "Who was the first Indian to win ICC Player of the Year award?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sachin Tendulkar",
  "op3": "Anil Kumble",
  "op4": "Virender Sehwag",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who was the first Indian player to score back-to-back ODI centuries?<br><br>",
  "quesType": "mcq",
  "op1": "Mohammad Azharuddin",
  "op2": "Sachin Tendulkar",
  "op3": "Sourav Ganguly",
  "op4": "Virat Kohli",
  "ans": "Mohammad Azharuddin"
},
{
  "ques": "Who was the first Indian to hit six consecutive fours in an over?<br><br>",
  "quesType": "mcq",
  "op1": "Sandeep Patil",
  "op2": "Sachin Tendulkar",
  "op3": "Sehwag",
  "op4": "Kapil Dev",
  "ans": "Sandeep Patil"
},
{
  "ques": "Which Indian umpire has officiated in the most international matches?<br><br>",
  "quesType": "mcq",
  "op1": "S. Venkataraghavan",
  "op2": "Srinivas Venkataraghavan",
  "op3": "Sundaram Ravi",
  "op4": "Narayan Kutty",
  "ans": "Srinivas Venkataraghavan"
},
{
  "ques": "Who was India’s first ODI captain?<br><br>",
  "quesType": "mcq",
  "op1": "Ajit Wadekar",
  "op2": "Srinivas Venkataraghavan",
  "op3": "Sunil Gavaskar",
  "op4": "Bishan Singh Bedi",
  "ans": "Ajit Wadekar"
},
{
  "ques": "Who hit the winning runs for India in the 1983 World Cup final?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Mohinder Amarnath",
  "op3": "Sunil Gavaskar",
  "op4": "Sandeep Patil",
  "ans": "Mohinder Amarnath"
},
{
  "ques": "Who was the first Indian cricketer to win the Sir Garfield Sobers Trophy?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sachin Tendulkar",
  "op3": "Virat Kohli",
  "op4": "Anil Kumble",
  "ans": "Rahul Dravid"
},
{
  "ques": "Which Indian batsman was nicknamed 'Colonel'?<br><br>",
  "quesType": "mcq",
  "op1": "Vijay Hazare",
  "op2": "Polly Umrigar",
  "op3": "Dilip Vengsarkar",
  "op4": "Sunil Gavaskar",
  "ans": "Dilip Vengsarkar"
},
{
  "ques": "Who was the first Indian wicketkeeper to score a Test century abroad?<br><br>",
  "quesType": "mcq",
  "op1": "Syed Kirmani",
  "op2": "Farokh Engineer",
  "op3": "MS Dhoni",
  "op4": "Wriddhiman Saha",
  "ans": "Syed Kirmani"
},
{
  "ques": "Who holds the record for most consecutive Test matches for India?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Kapil Dev",
  "op3": "Sunil Gavaskar",
  "op4": "Anil Kumble",
  "ans": "Sunil Gavaskar"
},
{
  "ques": "Which Indian bowler has bowled the fastest recorded delivery for India?<br><br>",
  "quesType": "mcq",
  "op1": "Irfan Pathan",
  "op2": "Jasprit Bumrah",
  "op3": "Umran Malik",
  "op4": "Varun Aaron",
  "ans": "Umran Malik"
}
,
{
  "ques": "Who is the only Indian cricketer to take two hat-tricks in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Javagal Srinath",
  "op2": "Kuldeep Yadav",
  "op3": "Chetan Sharma",
  "op4": "Harbhajan Singh",
  "ans": "Kuldeep Yadav"
},
{
  "ques": "Which Indian has the highest score in a single World Cup match?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Rohit Sharma",
  "op3": "Sourav Ganguly",
  "op4": "Sachin Tendulkar",
  "ans": "Sourav Ganguly"
},
{
  "ques": "Who was the first Indian captain to win a Test series in Pakistan?<br><br>",
  "quesType": "mcq",
  "op1": "Sourav Ganguly",
  "op2": "Rahul Dravid",
  "op3": "MS Dhoni",
  "op4": "Virat Kohli",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who was the first Indian cricketer to win the Sir Garfield Sobers Trophy?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Rahul Dravid",
  "op3": "Virat Kohli",
  "op4": "Anil Kumble",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who was the Man of the Series for India in the 2011 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "MS Dhoni",
  "op3": "Sachin Tendulkar",
  "op4": "Zaheer Khan",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Who was the first Indian to take 300 wickets in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Anil Kumble",
  "op3": "Javagal Srinath",
  "op4": "Zaheer Khan",
  "ans": "Anil Kumble"
},
{
  "ques": "Who is the first Indian bowler to reach 400 Test wickets?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Anil Kumble",
  "op3": "Harbhajan Singh",
  "op4": "R Ashwin",
  "ans": "Anil Kumble"
},
{
  "ques": "Which Indian batsman hit the first century in T20Is?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Virat Kohli",
  "op3": "Yuvraj Singh",
  "op4": "Rohit Sharma",
  "ans": "Suresh Raina"
},
{
  "ques": "Who is the youngest Indian to score a Test century?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Prithvi Shaw",
  "op3": "Vinod Kambli",
  "op4": "Parthiv Patel",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who is the only Indian to score centuries in his first three Test matches?<br><br>",
  "quesType": "mcq",
  "op1": "Prithvi Shaw",
  "op2": "Sourav Ganguly",
  "op3": "Mohammad Azharuddin",
  "op4": "Shubman Gill",
  "ans": "Mohammad Azharuddin"
},
{
  "ques": "Who is the fastest Indian to 100 ODI wickets?<br><br>",
  "quesType": "mcq",
  "op1": "Bhuvneshwar Kumar",
  "op2": "Mohammed Shami",
  "op3": "Jasprit Bumrah",
  "op4": "Yuzvendra Chahal",
  "ans": "Mohammed Shami"
},
{
  "ques": "Who was the first Indian wicketkeeper to score a double century in Tests?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Syed Kirmani",
  "op3": "Wriddhiman Saha",
  "op4": "Rishabh Pant",
  "ans": "MS Dhoni"
},
{
  "ques": "Who scored 281 against Australia at Eden Gardens?<br><br>",
  "quesType": "mcq",
  "op1": "VVS Laxman",
  "op2": "Rahul Dravid",
  "op3": "Sourav Ganguly",
  "op4": "Virender Sehwag",
  "ans": "VVS Laxman"
},
{
  "ques": "Which Indian bowler has the best bowling figures in a World Cup match?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Mohammed Shami",
  "op3": "Ashish Nehra",
  "op4": "Yuvraj Singh",
  "ans": "Ashish Nehra"
},
{
  "ques": "Who was the first Indian to score 300 in a Test match?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Virender Sehwag",
  "op3": "VVS Laxman",
  "op4": "Sachin Tendulkar",
  "ans": "Virender Sehwag"
},
{
  "ques": "Which Indian spinner has the most wickets in World Cups?<br><br>",
  "quesType": "mcq",
  "op1": "Harbhajan Singh",
  "op2": "R Ashwin",
  "op3": "Anil Kumble",
  "op4": "Yuvraj Singh",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Who was India's first T20I captain?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Virender Sehwag",
  "op3": "Rahul Dravid",
  "op4": "Yuvraj Singh",
  "ans": "Virender Sehwag"
},
{
  "ques": "Which Indian bowler took a hat-trick in a World Cup match?<br><br>",
  "quesType": "mcq",
  "op1": "Harbhajan Singh",
  "op2": "Chetan Sharma",
  "op3": "Jasprit Bumrah",
  "op4": "Mohammed Shami",
  "ans": "Chetan Sharma"
},
{
  "ques": "Who captained India in the inaugural T20 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Rahul Dravid",
  "op3": "Yuvraj Singh",
  "op4": "MS Dhoni",
  "ans": "MS Dhoni"
},
{
  "ques": "Which player has scored the most runs in a single World Cup edition for India?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Rohit Sharma",
  "op3": "Virat Kohli",
  "op4": "Yuvraj Singh",
  "ans": "Rohit Sharma"
},
{
  "ques": "Who was the first Indian to score 2000 runs in T20Is?<br><br>",
  "quesType": "mcq",
  "op1": "Rohit Sharma",
  "op2": "Virat Kohli",
  "op3": "MS Dhoni",
  "op4": "Shikhar Dhawan",
  "ans": "Virat Kohli"
},
{
  "ques": "Which player scored the fastest fifty for India in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Yuvraj Singh",
  "op3": "KL Rahul",
  "op4": "Hardik Pandya",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Who was the youngest Indian to captain India in Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Mansoor Ali Khan Pataudi",
  "op2": "Sachin Tendulkar",
  "op3": "Virat Kohli",
  "op4": "Kapil Dev",
  "ans": "Mansoor Ali Khan Pataudi"
},
{
  "ques": "Who scored 6 sixes in an over in a T20 World Cup match?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Yuvraj Singh",
  "op3": "Rohit Sharma",
  "op4": "Hardik Pandya",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Who took a hat-trick in the IPL for Delhi Daredevils?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Mishra",
  "op2": "Yuzvendra Chahal",
  "op3": "Axar Patel",
  "op4": "Kuldeep Yadav",
  "ans": "Amit Mishra"
},
{
  "ques": "Who is the only Indian to score a T20I century in South Africa?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Suresh Raina",
  "op3": "KL Rahul",
  "op4": "Rohit Sharma",
  "ans": "Suresh Raina"
},
{
  "ques": "Who holds the record for most IPL hat-tricks?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Yuzvendra Chahal",
  "op3": "Amit Mishra",
  "op4": "Sunil Narine",
  "ans": "Amit Mishra"
},
{
  "ques": "Which Indian spinner has the best bowling average in Tests?<br><br>",
  "quesType": "mcq",
  "op1": "R Ashwin",
  "op2": "Harbhajan Singh",
  "op3": "Anil Kumble",
  "op4": "Bishan Singh Bedi",
  "ans": "R Ashwin"
},
{
  "ques": "Which Indian scored 85 runs in the 2011 World Cup final?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "Gautam Gambhir",
  "op3": "MS Dhoni",
  "op4": "Virat Kohli",
  "ans": "Gautam Gambhir"
}
,
{
  "ques": "Who bowled the first-ever super over in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Irfan Pathan",
  "op2": "Praveen Kumar",
  "op3": "Lasith Malinga",
  "op4": "Anil Kumble",
  "ans": "Irfan Pathan"
},
{
  "ques": "Who was the first player to score a century in an IPL playoff match?<br><br>",
  "quesType": "mcq",
  "op1": "Murali Vijay",
  "op2": "Suresh Raina",
  "op3": "Shane Watson",
  "op4": "Virat Kohli",
  "ans": "Murali Vijay"
},
{
  "ques": "Who took a hat-trick and scored a fifty in the same IPL match?<br><br>",
  "quesType": "mcq",
  "op1": "Shane Watson",
  "op2": "Yusuf Pathan",
  "op3": "Yuvraj Singh",
  "op4": "Ravindra Jadeja",
  "ans": "Yusuf Pathan"
},
{
  "ques": "Who was the first bowler to take a 6-wicket haul in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Alzarri Joseph",
  "op2": "Adam Zampa",
  "op3": "Sohail Tanvir",
  "op4": "James Faulkner",
  "ans": "Sohail Tanvir"
},
{
  "ques": "Which player captained two different teams in the same IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "Aaron Finch",
  "op2": "Dinesh Karthik",
  "op3": "Kumar Sangakkara",
  "op4": "Ross Taylor",
  "ans": "Kumar Sangakkara"
},
{
  "ques": "Who has the record for the most dot balls bowled in a single IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "Bhuvneshwar Kumar",
  "op2": "Sunil Narine",
  "op3": "Harbhajan Singh",
  "op4": "Praveen Kumar",
  "ans": "Harbhajan Singh"
},
{
  "ques": "Which player hit the fastest IPL fifty in playoffs?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Hardik Pandya",
  "op3": "Kieron Pollard",
  "op4": "Jos Buttler",
  "ans": "Suresh Raina"
},
{
  "ques": "Who bowled the final over of the 2014 IPL final?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Narine",
  "op2": "Piyush Chawla",
  "op3": "Morne Morkel",
  "op4": "Umesh Yadav",
  "ans": "Sunil Narine"
},
{
  "ques": "Who was the first Impact Player to take a wicket?<br><br>",
  "quesType": "mcq",
  "op1": "Tushar Deshpande",
  "op2": "Sandeep Sharma",
  "op3": "Mukesh Kumar",
  "op4": "Mohsin Khan",
  "ans": "Tushar Deshpande"
},
{
  "ques": "Who holds the record for most consecutive fifties in a single IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "David Warner",
  "op3": "Kane Williamson",
  "op4": "Jos Buttler",
  "ans": "Virat Kohli"
},
{
  "ques": "Which player has the lowest economy rate in a single IPL match (minimum 4 overs)?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Ravindra Jadeja",
  "op3": "Sunil Narine",
  "op4": "Glenn McGrath",
  "ans": "Anil Kumble"
},
{
  "ques": "Who is the only uncapped Indian bowler with 5-wicket hauls in two different IPL seasons?<br><br>",
  "quesType": "mcq",
  "op1": "Jaydev Unadkat",
  "op2": "Varun Chakravarthy",
  "op3": "Harshal Patel",
  "op4": "Rahul Tewatia",
  "ans": "Jaydev Unadkat"
},
{
  "ques": "Who was the first player to win Orange Cap twice?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "David Warner",
  "op3": "Virat Kohli",
  "op4": "Shaun Marsh",
  "ans": "Chris Gayle"
},
{
  "ques": "Who holds the record for most runs scored in an IPL powerplay?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Kolkata Knight Riders",
  "op3": "Delhi Capitals",
  "op4": "Sunrisers Hyderabad",
  "ans": "Kolkata Knight Riders"
},
{
  "ques": "Which bowler took a hat-trick on debut in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Ajit Chandila",
  "op2": "Rohit Sharma",
  "op3": "Amit Mishra",
  "op4": "Sunil Narine",
  "ans": "Ajit Chandila"
},
{
  "ques": "Who was the first uncapped player to score an IPL century?<br><br>",
  "quesType": "mcq",
  "op1": "Manish Pandey",
  "op2": "Paul Valthaty",
  "op3": "Devdutt Padikkal",
  "op4": "Ruturaj Gaikwad",
  "ans": "Manish Pandey"
},
{
  "ques": "Who bowled the most maiden overs in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Praveen Kumar",
  "op2": "Bhuvneshwar Kumar",
  "op3": "Sunil Narine",
  "op4": "Lasith Malinga",
  "ans": "Praveen Kumar"
},
{
  "ques": "Who hit the first-ever 100-meter six in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Albie Morkel",
  "op3": "MS Dhoni",
  "op4": "Yuvraj Singh",
  "ans": "Albie Morkel"
},
{
  "ques": "Which player has the most IPL appearances without playing for India?<br><br>",
  "quesType": "mcq",
  "op1": "Manvinder Bisla",
  "op2": "Rahul Tewatia",
  "op3": "Suryakumar Yadav",
  "op4": "Piyush Chawla",
  "ans": "Manvinder Bisla"
},
{
  "ques": "Who won Man of the Match in the 2016 IPL final?<br><br>",
  "quesType": "mcq",
  "op1": "Ben Cutting",
  "op2": "David Warner",
  "op3": "Bhuvneshwar Kumar",
  "op4": "Yuvraj Singh",
  "ans": "Ben Cutting"
},
{
  "ques": "Who was the first player to score 4000 runs for a single IPL team?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Suresh Raina",
  "op3": "MS Dhoni",
  "op4": "Rohit Sharma",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was the first player to win both Orange and Purple Cap in his IPL career?<br><br>",
  "quesType": "mcq",
  "op1": "No one",
  "op2": "Dwayne Bravo",
  "op3": "Hardik Pandya",
  "op4": "Andre Russell",
  "ans": "No one"
},
{
  "ques": "Who holds the record for the lowest team score in IPL playoffs?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi Capitals",
  "op2": "Kings XI Punjab",
  "op3": "Mumbai Indians",
  "op4": "Royal Challengers Bangalore",
  "ans": "Delhi Capitals"
},
{
  "ques": "Who is the youngest player to captain an IPL franchise?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Rishabh Pant",
  "op3": "Shreyas Iyer",
  "op4": "Sanju Samson",
  "ans": "Rishabh Pant"
},
{
  "ques": "Who scored a century in the longest IPL match (by balls faced)?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Brendon McCullum",
  "op3": "Virat Kohli",
  "op4": "AB de Villiers",
  "ans": "Brendon McCullum"
},
{
  "ques": "Who bowled the first over for SRH in their debut season?<br><br>",
  "quesType": "mcq",
  "op1": "Ishant Sharma",
  "op2": "Dale Steyn",
  "op3": "Bhuvneshwar Kumar",
  "op4": "Amit Mishra",
  "ans": "Dale Steyn"
},
{
  "ques": "Who is the only player to score a fifty and take 4 wickets in an IPL final?<br><br>",
  "quesType": "mcq",
  "op1": "Yusuf Pathan",
  "op2": "Shane Watson",
  "op3": "Ravindra Jadeja",
  "op4": "Hardik Pandya",
  "ans": "Shane Watson"
},
{
  "ques": "Who scored the fastest century by an Indian in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Yusuf Pathan",
  "op3": "Rishabh Pant",
  "op4": "Murali Vijay",
  "ans": "Yusuf Pathan"
},
{
  "ques": "Who was the first player to hit 500 fours in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Shikhar Dhawan",
  "op2": "Virat Kohli",
  "op3": "David Warner",
  "op4": "Suresh Raina",
  "ans": "Shikhar Dhawan"
}
,
{
  "ques": "Who was the first Indian cricketer to score 10,000 runs in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Sachin Tendulkar",
  "op3": "Rahul Dravid",
  "op4": "Virat Kohli",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who took the most wickets for India in the 2011 Cricket World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Zaheer Khan",
  "op2": "Harbhajan Singh",
  "op3": "Suresh Raina",
  "op4": "Munaf Patel",
  "ans": "Zaheer Khan"
},
{
  "ques": "Who is the first Indian to score a triple century in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Rahul Dravid",
  "op3": "Virat Kohli",
  "op4": "VVS Laxman",
  "ans": "Virender Sehwag"
},
{
  "ques": "Which Indian cricketer has the record for the fastest fifty in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "KL Rahul",
  "op2": "Yuvraj Singh",
  "op3": "Pat Cummins",
  "op4": "KL Rahul",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Who captained India in their first ever Test match?<br><br>",
  "quesType": "mcq",
  "op1": "CK Nayudu",
  "op2": "Lala Amarnath",
  "op3": "Vijay Hazare",
  "op4": "Mansoor Ali Khan Pataudi",
  "ans": "CK Nayudu"
},
{
  "ques": "Who holds the record for the most catches by an Indian fielder in Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sourav Ganguly",
  "op3": "VVS Laxman",
  "op4": "Mohammad Azharuddin",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who was the first Indian bowler to take 10 wickets in a Test match?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Harbhajan Singh",
  "op3": "Kapil Dev",
  "op4": "Venkatesh Prasad",
  "ans": "Anil Kumble"
},
{
  "ques": "Who is the first Indian cricketer to win the ICC ODI Player of the Year award?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Rahul Dravid",
  "op3": "Anil Kumble",
  "op4": "Virender Sehwag",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Which Indian cricketer has the highest individual score in a Test innings?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Virat Kohli",
  "op3": "Karun Nair",
  "op4": "VVS Laxman",
  "ans": "Karun Nair"
},
{
  "ques": "Who was the first Indian player to score a century in all three formats?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Virat Kohli",
  "op3": "Suresh Raina",
  "op4": "Yuvraj Singh",
  "ans": "Suresh Raina"
},
{
  "ques": "Who is the fastest Indian bowler to take 100 wickets in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Jasprit Bumrah",
  "op2": "Zaheer Khan",
  "op3": "Irfan Pathan",
  "op4": "Mohammad Shami",
  "ans": "Jasprit Bumrah"
},
{
  "ques": "Who has the most Man of the Match awards in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "MS Dhoni",
  "op3": "AB de Villiers",
  "op4": "David Warner",
  "ans": "Chris Gayle"
},
{
  "ques": "Which Indian bowler took a hat-trick in the 2007 T20 World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Irfan Pathan",
  "op2": "Pragyan Ojha",
  "op3": "Ravindra Jadeja",
  "op4": "Joginder Sharma",
  "ans": "Joginder Sharma"
},
{
  "ques": "Who is the only Indian cricketer to have scored over 10,000 runs in both Tests and ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sachin Tendulkar",
  "op3": "Virat Kohli",
  "op4": "Sourav Ganguly",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who was the first Indian to take a five-wicket haul in a World Cup match?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Javagal Srinath",
  "op3": "Chetan Sharma",
  "op4": "Kapil Dev",
  "ans": "Kapil Dev"
},
{
  "ques": "Who was the first Indian to captain an IPL team?<br><br>",
  "quesType": "mcq",
  "op1": "Mahendra Singh Dhoni",
  "op2": "Sourav Ganguly",
  "op3": "Rahul Dravid",
  "op4": "Virat Kohli",
  "ans": "Sourav Ganguly"
},
{
  "ques": "Which Indian cricketer scored the fastest Test century in terms of balls faced?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Virat Kohli",
  "op3": "Kapil Dev",
  "op4": "Mohammad Azharuddin",
  "ans": "Virender Sehwag"
},
{
  "ques": "Who is the only Indian to have taken a hat-trick in all three formats of international cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Yuzvendra Chahal",
  "op2": "Irfan Pathan",
  "op3": "Jasprit Bumrah",
  "op4": "Kuldeep Yadav",
  "ans": "Irfan Pathan"
},
{
  "ques": "Who was the first Indian to score 10,000 runs in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Sourav Ganguly",
  "op2": "Sachin Tendulkar",
  "op3": "Rahul Dravid",
  "op4": "MS Dhoni",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who holds the record for most sixes in international cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Shahid Afridi",
  "op3": "MS Dhoni",
  "op4": "Rohit Sharma",
  "ans": "Shahid Afridi"
},
{
  "ques": "Which Indian bowler has taken the most wickets in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Dwayne Bravo",
  "op3": "Amit Mishra",
  "op4": "Bhuvneshwar Kumar",
  "ans": "Amit Mishra"
},
{
  "ques": "Who was the captain of the Indian team that won the 2013 ICC Champions Trophy?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Virat Kohli",
  "op3": "Sourav Ganguly",
  "op4": "Rahul Dravid",
  "ans": "MS Dhoni"
},
{
  "ques": "Who holds the record for most runs in a single IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "David Warner",
  "op2": "Virat Kohli",
  "op3": "Shikhar Dhawan",
  "op4": "Chris Gayle",
  "ans": "Virat Kohli"
},
{
  "ques": "Which Indian cricketer has the most Test wickets?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Kapil Dev",
  "op3": "Harbhajan Singh",
  "op4": "Javagal Srinath",
  "ans": "Anil Kumble"
},
{
  "ques": "Who was the first Indian woman cricketer to score a century in ODI?<br><br>",
  "quesType": "mcq",
  "op1": "Mithali Raj",
  "op2": "Harmanpreet Kaur",
  "op3": "Diana Edulji",
  "op4": "Jhulan Goswami",
  "ans": "Mithali Raj"
},
{
  "ques": "Who was the first Indian bowler to take 10 wickets in a Test match?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Kapil Dev",
  "op3": "Vaman Kumar",
  "op4": "Harbhajan Singh",
  "ans": "Vaman Kumar"
},
{
  "ques": "Who scored the fastest double century in Test cricket among Indians?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Cheteshwar Pujara",
  "op3": "VVS Laxman",
  "op4": "Sachin Tendulkar",
  "ans": "Virender Sehwag"
},
{
  "ques": "Which Indian cricketer holds the record for most wickets in a single IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Mishra",
  "op2": "Sandeep Sharma",
  "op3": "Bhuvneshwar Kumar",
  "op4": "Harbhajan Singh",
  "ans": "Bhuvneshwar Kumar"
},
{
  "ques": "Who was the first Indian cricketer to score a Test century in England?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Lala Amarnath",
  "op3": "Vijay Hazare",
  "op4": "Rahul Dravid",
  "ans": "Lala Amarnath"
},
{
  "ques": "Who captained India to their first-ever Test series win in Australia?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "MS Dhoni",
  "op3": "Rahul Dravid",
  "op4": "Sourav Ganguly",
  "ans": "Virat Kohli"
},
{
  "ques": "Which Indian player was nicknamed 'The Wall' for his solid batting?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Cheteshwar Pujara",
  "op3": "VVS Laxman",
  "op4": "Ajinkya Rahane",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who took the most wickets in the 2013 ICC Champions Trophy?<br><br>",
  "quesType": "mcq",
  "op1": "Mohammed Shami",
  "op2": "Bhuvneshwar Kumar",
  "op3": "Ravindra Jadeja",
  "op4": "Ravichandran Ashwin",
  "ans": "Bhuvneshwar Kumar"
},
{
  "ques": "Who was the first Indian to score a triple century in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "VVS Laxman",
  "op3": "Karun Nair",
  "op4": "Sachin Tendulkar",
  "ans": "Virender Sehwag"
},
{
  "ques": "Who was the first Indian bowler to take 5 wickets in an ODI World Cup final?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Anil Kumble",
  "op3": "Ashish Nehra",
  "op4": "Javagal Srinath",
  "ans": "Ashish Nehra"
},
{
  "ques": "Which Indian cricketer was the first to play 200 Test matches?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Rahul Dravid",
  "op3": "Anil Kumble",
  "op4": "MS Dhoni",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who was the first Indian to win the ICC Player of the Year award?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Anil Kumble",
  "op3": "Sachin Tendulkar",
  "op4": "Virat Kohli",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who was the first Indian to score a century in all three formats?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Virat Kohli",
  "op3": "MS Dhoni",
  "op4": "Yuvraj Singh",
  "ans": "Suresh Raina"
},
{
  "ques": "Which Indian cricketer holds the record for most sixes in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Rohit Sharma",
  "op2": "MS Dhoni",
  "op3": "Chris Gayle",
  "op4": "Virat Kohli",
  "ans": "Rohit Sharma"
},
{
  "ques": "Who is the only Indian cricketer to score centuries in both innings of a Test match twice?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Rahul Dravid",
  "op3": "VVS Laxman",
  "op4": "Sunil Gavaskar",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who holds the record for fastest fifty in IPL by an Indian batsman?<br><br>",
  "quesType": "mcq",
  "op1": "KL Rahul",
  "op2": "Suresh Raina",
  "op3": "Yuvraj Singh",
  "op4": "Rohit Sharma",
  "ans": "KL Rahul"
},
{
  "ques": "Who was the first Indian to score a century in the IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Brendon McCullum",
  "op2": "Manish Pandey",
  "op3": "Suresh Raina",
  "op4": "Virat Kohli",
  "ans": "Manish Pandey"
},
{
  "ques": "Which Indian player took the most catches in a single World Cup tournament?<br><br>",
  "quesType": "mcq",
  "op1": "Mohammad Kaif",
  "op2": "Suresh Raina",
  "op3": "MS Dhoni",
  "op4": "Yuvraj Singh",
  "ans": "Mohammad Kaif"
},
{
  "ques": "Who was the first Indian to take a five-wicket haul in a T20I match?<br><br>",
  "quesType": "mcq",
  "op1": "Bhuvneshwar Kumar",
  "op2": "Ravindra Jadeja",
  "op3": "Yuzvendra Chahal",
  "op4": "Ishant Sharma",
  "ans": "Bhuvneshwar Kumar"
},
{
  "ques": "Who is the only Indian cricketer to score 7 ODI centuries against Australia?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Sachin Tendulkar",
  "op3": "Rohit Sharma",
  "op4": "Sourav Ganguly",
  "ans": "Virat Kohli"
},
{
  "ques": "Which Indian bowler has the most wickets in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Mishra",
  "op2": "Lasith Malinga",
  "op3": "Yuzvendra Chahal",
  "op4": "Harbhajan Singh",
  "ans": "Amit Mishra"
},
{
  "ques": "Who captained India during the famous 2001 Kolkata Test comeback?<br><br>",
  "quesType": "mcq",
  "op1": "Sourav Ganguly",
  "op2": "Rahul Dravid",
  "op3": "Anil Kumble",
  "op4": "MS Dhoni",
  "ans": "Sourav Ganguly"
},
{
  "ques": "Which Indian cricketer has the record for most runs in a single IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "David Warner",
  "op3": "Shikhar Dhawan",
  "op4": "Rohit Sharma",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was the first Indian to score a century in the ICC Champions Trophy?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "Sachin Tendulkar",
  "op3": "Virat Kohli",
  "op4": "Gautam Gambhir",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Which Indian cricketer has the most Test centuries?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Sunil Gavaskar",
  "op3": "Sachin Tendulkar",
  "op4": "Rahul Dravid",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who was the first Indian woman to score a double century in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Mithali Raj",
  "op2": "Harmanpreet Kaur",
  "op3": "Anjum Chopra",
  "op4": "Smriti Mandhana",
  "ans": "Mithali Raj"
},
{
  "ques": "Which Indian bowler took a hat-trick against Pakistan in the Asia Cup 2012?<br><br>",
  "quesType": "mcq",
  "op1": "Harbhajan Singh",
  "op2": "Ashish Nehra",
  "op3": "Amit Mishra",
  "op4": "Umesh Yadav",
  "ans": "Amit Mishra"
},
{
  "ques": "Who holds the record for most catches by an Indian fielder in Tests?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sourav Ganguly",
  "op3": "Yuvraj Singh",
  "op4": "Kapil Dev",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who scored the highest individual score by an Indian in an ODI?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Rohit Sharma",
  "op3": "Sachin Tendulkar",
  "op4": "MS Dhoni",
  "ans": "Rohit Sharma"
},
{
  "ques": "Which Indian cricketer is known as the 'Hitman'?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Rohit Sharma",
  "op3": "Suresh Raina",
  "op4": "MS Dhoni",
  "ans": "Rohit Sharma"
}
,
{
  "ques": "Who took the most catches as a fielder (non-wicketkeeper) in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Kieron Pollard",
  "op3": "AB de Villiers",
  "op4": "David Warner",
  "ans": "Suresh Raina"
},
{
  "ques": "Which IPL team won the most consecutive matches in a single season?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai Indians",
  "op2": "Chennai Super Kings",
  "op3": "Kolkata Knight Riders",
  "op4": "Sunrisers Hyderabad",
  "ans": "Mumbai Indians"
},
{
  "ques": "Who was the first bowler to bowl 1000 balls in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Ashish Nehra",
  "op3": "Harbhajan Singh",
  "op4": "Bhuvneshwar Kumar",
  "ans": "Lasith Malinga"
},
{
  "ques": "Which player scored the first century for Royal Challengers Bangalore?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Virat Kohli",
  "op3": "Manish Pandey",
  "op4": "AB de Villiers",
  "ans": "Manish Pandey"
},
{
  "ques": "Who was the first bowler to take a hat-trick for Mumbai Indians?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Harbhajan Singh",
  "op3": "Amit Mishra",
  "op4": "Jasprit Bumrah",
  "ans": "Lasith Malinga"
},
{
  "ques": "Which player has won the most IPL Player of the Match awards?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "MS Dhoni",
  "op3": "Suresh Raina",
  "op4": "Chris Gayle",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was the captain of Gujarat Titans when they won their first IPL title?<br><br>",
  "quesType": "mcq",
  "op1": "Hardik Pandya",
  "op2": "Rashid Khan",
  "op3": "Shubman Gill",
  "op4": "Rahul Tewatia",
  "ans": "Hardik Pandya"
},
{
  "ques": "Who holds the record for the highest individual score by an uncapped player in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Manish Pandey",
  "op2": "Paul Valthaty",
  "op3": "Devdutt Padikkal",
  "op4": "Ruturaj Gaikwad",
  "ans": "Paul Valthaty"
},
{
  "ques": "Which IPL team has the highest successful chase?<br><br>",
  "quesType": "mcq",
  "op1": "Chennai Super Kings",
  "op2": "Kings XI Punjab",
  "op3": "Kolkata Knight Riders",
  "op4": "Mumbai Indians",
  "ans": "Kings XI Punjab"
},
{
  "ques": "Who took the fastest five-wicket haul in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Alzarri Joseph",
  "op2": "Jaydev Unadkat",
  "op3": "Pat Cummins",
  "op4": "Amit Mishra",
  "ans": "Alzarri Joseph"
},
{
  "ques": "Who was the first player to hit a century in the IPL's inaugural season?<br><br>",
  "quesType": "mcq",
  "op1": "Brendon McCullum",
  "op2": "Adam Gilchrist",
  "op3": "Sachin Tendulkar",
  "op4": "Rahul Dravid",
  "ans": "Brendon McCullum"
},
{
  "ques": "Which bowler has the most IPL hat-tricks?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Mishra",
  "op2": "Lasith Malinga",
  "op3": "Yuvraj Singh",
  "op4": "Jaydev Unadkat",
  "ans": "Amit Mishra"
},
{
  "ques": "Who is the leading wicket-taker for Chennai Super Kings?<br><br>",
  "quesType": "mcq",
  "op1": "Dwayne Bravo",
  "op2": "Ravindra Jadeja",
  "op3": "MS Dhoni",
  "op4": "Imran Tahir",
  "ans": "Dwayne Bravo"
},
{
  "ques": "Who won the Orange Cap in IPL 2022?<br><br>",
  "quesType": "mcq",
  "op1": "Jos Buttler",
  "op2": "KL Rahul",
  "op3": "Shikhar Dhawan",
  "op4": "Ruturaj Gaikwad",
  "ans": "Jos Buttler"
},
{
  "ques": "Who hit the maximum sixes in IPL 2021?<br><br>",
  "quesType": "mcq",
  "op1": "AB de Villiers",
  "op2": "Kieron Pollard",
  "op3": "Ruturaj Gaikwad",
  "op4": "Devdutt Padikkal",
  "ans": "Kieron Pollard"
},
{
  "ques": "Who scored the fastest fifty in IPL 2020?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Narine",
  "op2": "KL Rahul",
  "op3": "Shubman Gill",
  "op4": "Chris Gayle",
  "ans": "Sunil Narine"
},
{
  "ques": "Who is the highest run-scorer for Rajasthan Royals?<br><br>",
  "quesType": "mcq",
  "op1": "Ajinkya Rahane",
  "op2": "Shane Watson",
  "op3": "Jos Buttler",
  "op4": "Sanju Samson",
  "ans": "Shane Watson"
},
{
  "ques": "Which team scored the highest total in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "RCB",
  "op2": "Kolkata Knight Riders",
  "op3": "Delhi Capitals",
  "op4": "Mumbai Indians",
  "ans": "RCB"
},
{
  "ques": "Who was the first overseas captain to win the IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Michael Hussey",
  "op2": "Kieron Pollard",
  "op3": "Brendon McCullum",
  "op4": "David Warner",
  "ans": "Michael Hussey"
},
{
  "ques": "Who took the most wickets for Kolkata Knight Riders?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Narine",
  "op2": "Piyush Chawla",
  "op3": "Andre Russell",
  "op4": "Umesh Yadav",
  "ans": "Sunil Narine"
},
{
  "ques": "Which IPL player is nicknamed 'Mr. IPL'?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Virat Kohli",
  "op3": "MS Dhoni",
  "op4": "Rohit Sharma",
  "ans": "Suresh Raina"
},
{
  "ques": "Who was the first Indian bowler to take a hat-trick in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Mishra",
  "op2": "Harbhajan Singh",
  "op3": "Ishant Sharma",
  "op4": "Anil Kumble",
  "ans": "Amit Mishra"
},
{
  "ques": "Who scored the highest individual score by a wicketkeeper in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Dinesh Karthik",
  "op3": "Quinton de Kock",
  "op4": "Wriddhiman Saha",
  "ans": "MS Dhoni"
},
{
  "ques": "Which player has the most IPL centuries?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Virat Kohli",
  "op3": "AB de Villiers",
  "op4": "Shikhar Dhawan",
  "ans": "Chris Gayle"
},
{
  "ques": "Who holds the record for the best bowling figures in IPL playoffs?<br><br>",
  "quesType": "mcq",
  "op1": "Alzarri Joseph",
  "op2": "Andrew Tye",
  "op3": "Bhuvneshwar Kumar",
  "op4": "Harbhajan Singh",
  "ans": "Alzarri Joseph"
},
{
  "ques": "Which player has the highest number of sixes in a single IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Andre Russell",
  "op3": "AB de Villiers",
  "op4": "Kieron Pollard",
  "ans": "Chris Gayle"
},
{
  "ques": "Who won the Emerging Player of the Year award in IPL 2013?<br><br>",
  "quesType": "mcq",
  "op1": "Ravindra Jadeja",
  "op2": "Sanju Samson",
  "op3": "Mohit Sharma",
  "op4": "Shreyas Iyer",
  "ans": "Mohit Sharma"
},
{
  "ques": "Who was the first batsman to score a century for Chennai Super Kings?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Michael Hussey",
  "op3": "MS Dhoni",
  "op4": "Murali Vijay",
  "ans": "Michael Hussey"
},
{
  "ques": "Who has the record for most sixes in an IPL final?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Robin Uthappa",
  "op3": "Yusuf Pathan",
  "op4": "Kieron Pollard",
  "ans": "Robin Uthappa"
}
,
{
  "ques": "Who took the most catches as a fielder (non-wicketkeeper) in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Kieron Pollard",
  "op3": "AB de Villiers",
  "op4": "David Warner",
  "ans": "Suresh Raina"
},
{
  "ques": "Which IPL team won the most consecutive matches in a single season?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai Indians",
  "op2": "Chennai Super Kings",
  "op3": "Kolkata Knight Riders",
  "op4": "Sunrisers Hyderabad",
  "ans": "Mumbai Indians"
},
{
  "ques": "Who was the first bowler to bowl 1000 balls in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Ashish Nehra",
  "op3": "Harbhajan Singh",
  "op4": "Bhuvneshwar Kumar",
  "ans": "Lasith Malinga"
},
{
  "ques": "Which player scored the first century for Royal Challengers Bangalore?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Virat Kohli",
  "op3": "Manish Pandey",
  "op4": "AB de Villiers",
  "ans": "Manish Pandey"
},
{
  "ques": "Who was the first bowler to take a hat-trick for Mumbai Indians?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Harbhajan Singh",
  "op3": "Amit Mishra",
  "op4": "Jasprit Bumrah",
  "ans": "Lasith Malinga"
},
{
  "ques": "Which player has won the most IPL Player of the Match awards?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "MS Dhoni",
  "op3": "Suresh Raina",
  "op4": "Chris Gayle",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was the captain of Gujarat Titans when they won their first IPL title?<br><br>",
  "quesType": "mcq",
  "op1": "Hardik Pandya",
  "op2": "Rashid Khan",
  "op3": "Shubman Gill",
  "op4": "Rahul Tewatia",
  "ans": "Hardik Pandya"
},
{
  "ques": "Who holds the record for the highest individual score by an uncapped player in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Manish Pandey",
  "op2": "Paul Valthaty",
  "op3": "Devdutt Padikkal",
  "op4": "Ruturaj Gaikwad",
  "ans": "Paul Valthaty"
},
{
  "ques": "Which IPL team has the highest successful chase?<br><br>",
  "quesType": "mcq",
  "op1": "Chennai Super Kings",
  "op2": "Kings XI Punjab",
  "op3": "Kolkata Knight Riders",
  "op4": "Mumbai Indians",
  "ans": "Kings XI Punjab"
},
{
  "ques": "Who took the fastest five-wicket haul in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Alzarri Joseph",
  "op2": "Jaydev Unadkat",
  "op3": "Pat Cummins",
  "op4": "Amit Mishra",
  "ans": "Alzarri Joseph"
},
{
  "ques": "Who was the first player to hit a century in the IPL's inaugural season?<br><br>",
  "quesType": "mcq",
  "op1": "Brendon McCullum",
  "op2": "Adam Gilchrist",
  "op3": "Sachin Tendulkar",
  "op4": "Rahul Dravid",
  "ans": "Brendon McCullum"
},
{
  "ques": "Which bowler has the most IPL hat-tricks?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Mishra",
  "op2": "Lasith Malinga",
  "op3": "Yuvraj Singh",
  "op4": "Jaydev Unadkat",
  "ans": "Amit Mishra"
},
{
  "ques": "Who is the leading wicket-taker for Chennai Super Kings?<br><br>",
  "quesType": "mcq",
  "op1": "Dwayne Bravo",
  "op2": "Ravindra Jadeja",
  "op3": "MS Dhoni",
  "op4": "Imran Tahir",
  "ans": "Dwayne Bravo"
},
{
  "ques": "Who won the Orange Cap in IPL 2022?<br><br>",
  "quesType": "mcq",
  "op1": "Jos Buttler",
  "op2": "KL Rahul",
  "op3": "Shikhar Dhawan",
  "op4": "Ruturaj Gaikwad",
  "ans": "Jos Buttler"
},
{
  "ques": "Who hit the maximum sixes in IPL 2021?<br><br>",
  "quesType": "mcq",
  "op1": "AB de Villiers",
  "op2": "Kieron Pollard",
  "op3": "Ruturaj Gaikwad",
  "op4": "Devdutt Padikkal",
  "ans": "Kieron Pollard"
},
{
  "ques": "Who scored the fastest fifty in IPL 2020?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Narine",
  "op2": "KL Rahul",
  "op3": "Shubman Gill",
  "op4": "Chris Gayle",
  "ans": "Sunil Narine"
},
{
  "ques": "Who is the highest run-scorer for Rajasthan Royals?<br><br>",
  "quesType": "mcq",
  "op1": "Ajinkya Rahane",
  "op2": "Shane Watson",
  "op3": "Jos Buttler",
  "op4": "Sanju Samson",
  "ans": "Shane Watson"
},
{
  "ques": "Which team scored the highest total in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "RCB",
  "op2": "Kolkata Knight Riders",
  "op3": "Delhi Capitals",
  "op4": "Mumbai Indians",
  "ans": "RCB"
},
{
  "ques": "Who was the first overseas captain to win the IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Michael Hussey",
  "op2": "Kieron Pollard",
  "op3": "Brendon McCullum",
  "op4": "David Warner",
  "ans": "Michael Hussey"
},
{
  "ques": "Who took the most wickets for Kolkata Knight Riders?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Narine",
  "op2": "Piyush Chawla",
  "op3": "Andre Russell",
  "op4": "Umesh Yadav",
  "ans": "Sunil Narine"
},
{
  "ques": "Which IPL player is nicknamed 'Mr. IPL'?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Virat Kohli",
  "op3": "MS Dhoni",
  "op4": "Rohit Sharma",
  "ans": "Suresh Raina"
},
{
  "ques": "Who was the first Indian bowler to take a hat-trick in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Mishra",
  "op2": "Harbhajan Singh",
  "op3": "Ishant Sharma",
  "op4": "Anil Kumble",
  "ans": "Amit Mishra"
},
{
  "ques": "Who scored the highest individual score by a wicketkeeper in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Dinesh Karthik",
  "op3": "Quinton de Kock",
  "op4": "Wriddhiman Saha",
  "ans": "MS Dhoni"
},
{
  "ques": "Which player has the most IPL centuries?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Virat Kohli",
  "op3": "AB de Villiers",
  "op4": "Shikhar Dhawan",
  "ans": "Chris Gayle"
},
{
  "ques": "Who holds the record for the best bowling figures in IPL playoffs?<br><br>",
  "quesType": "mcq",
  "op1": "Alzarri Joseph",
  "op2": "Andrew Tye",
  "op3": "Bhuvneshwar Kumar",
  "op4": "Harbhajan Singh",
  "ans": "Alzarri Joseph"
},
{
  "ques": "Which player has the highest number of sixes in a single IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Andre Russell",
  "op3": "AB de Villiers",
  "op4": "Kieron Pollard",
  "ans": "Chris Gayle"
},
{
  "ques": "Who won the Emerging Player of the Year award in IPL 2013?<br><br>",
  "quesType": "mcq",
  "op1": "Ravindra Jadeja",
  "op2": "Sanju Samson",
  "op3": "Mohit Sharma",
  "op4": "Shreyas Iyer",
  "ans": "Mohit Sharma"
},
{
  "ques": "Who was the first batsman to score a century for Chennai Super Kings?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Michael Hussey",
  "op3": "MS Dhoni",
  "op4": "Murali Vijay",
  "ans": "Michael Hussey"
},
{
  "ques": "Who has the record for most sixes in an IPL final?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Robin Uthappa",
  "op3": "Yusuf Pathan",
  "op4": "Kieron Pollard",
  "ans": "Robin Uthappa"
}
,
{
  "ques": "Who took the most catches as a fielder (non-wicketkeeper) in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Kieron Pollard",
  "op3": "AB de Villiers",
  "op4": "David Warner",
  "ans": "Suresh Raina"
},
{
  "ques": "Which IPL team won the most consecutive matches in a single season?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai Indians",
  "op2": "Chennai Super Kings",
  "op3": "Kolkata Knight Riders",
  "op4": "Sunrisers Hyderabad",
  "ans": "Mumbai Indians"
},
{
  "ques": "Who was the first bowler to bowl 1000 balls in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Ashish Nehra",
  "op3": "Harbhajan Singh",
  "op4": "Bhuvneshwar Kumar",
  "ans": "Lasith Malinga"
},
{
  "ques": "Which player scored the first century for Royal Challengers Bangalore?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Virat Kohli",
  "op3": "Manish Pandey",
  "op4": "AB de Villiers",
  "ans": "Manish Pandey"
},
{
  "ques": "Who was the first bowler to take a hat-trick for Mumbai Indians?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Harbhajan Singh",
  "op3": "Amit Mishra",
  "op4": "Jasprit Bumrah",
  "ans": "Lasith Malinga"
},
{
  "ques": "Which player has won the most IPL Player of the Match awards?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "MS Dhoni",
  "op3": "Suresh Raina",
  "op4": "Chris Gayle",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was the captain of Gujarat Titans when they won their first IPL title?<br><br>",
  "quesType": "mcq",
  "op1": "Hardik Pandya",
  "op2": "Rashid Khan",
  "op3": "Shubman Gill",
  "op4": "Rahul Tewatia",
  "ans": "Hardik Pandya"
},
{
  "ques": "Who holds the record for the highest individual score by an uncapped player in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Manish Pandey",
  "op2": "Paul Valthaty",
  "op3": "Devdutt Padikkal",
  "op4": "Ruturaj Gaikwad",
  "ans": "Paul Valthaty"
},
{
  "ques": "Which IPL team has the highest successful chase?<br><br>",
  "quesType": "mcq",
  "op1": "Chennai Super Kings",
  "op2": "Kings XI Punjab",
  "op3": "Kolkata Knight Riders",
  "op4": "Mumbai Indians",
  "ans": "Kings XI Punjab"
},
{
  "ques": "Who took the fastest five-wicket haul in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Alzarri Joseph",
  "op2": "Jaydev Unadkat",
  "op3": "Pat Cummins",
  "op4": "Amit Mishra",
  "ans": "Alzarri Joseph"
},
{
  "ques": "Who was the first player to hit a century in the IPL's inaugural season?<br><br>",
  "quesType": "mcq",
  "op1": "Brendon McCullum",
  "op2": "Adam Gilchrist",
  "op3": "Sachin Tendulkar",
  "op4": "Rahul Dravid",
  "ans": "Brendon McCullum"
},
{
  "ques": "Which bowler has the most IPL hat-tricks?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Mishra",
  "op2": "Lasith Malinga",
  "op3": "Yuvraj Singh",
  "op4": "Jaydev Unadkat",
  "ans": "Amit Mishra"
},
{
  "ques": "Who is the leading wicket-taker for Chennai Super Kings?<br><br>",
  "quesType": "mcq",
  "op1": "Dwayne Bravo",
  "op2": "Ravindra Jadeja",
  "op3": "MS Dhoni",
  "op4": "Imran Tahir",
  "ans": "Dwayne Bravo"
},
{
  "ques": "Who won the Orange Cap in IPL 2022?<br><br>",
  "quesType": "mcq",
  "op1": "Jos Buttler",
  "op2": "KL Rahul",
  "op3": "Shikhar Dhawan",
  "op4": "Ruturaj Gaikwad",
  "ans": "Jos Buttler"
},
{
  "ques": "Who hit the maximum sixes in IPL 2021?<br><br>",
  "quesType": "mcq",
  "op1": "AB de Villiers",
  "op2": "Kieron Pollard",
  "op3": "Ruturaj Gaikwad",
  "op4": "Devdutt Padikkal",
  "ans": "Kieron Pollard"
},
{
  "ques": "Who scored the fastest fifty in IPL 2020?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Narine",
  "op2": "KL Rahul",
  "op3": "Shubman Gill",
  "op4": "Chris Gayle",
  "ans": "Sunil Narine"
},
{
  "ques": "Who is the highest run-scorer for Rajasthan Royals?<br><br>",
  "quesType": "mcq",
  "op1": "Ajinkya Rahane",
  "op2": "Shane Watson",
  "op3": "Jos Buttler",
  "op4": "Sanju Samson",
  "ans": "Shane Watson"
},
{
  "ques": "Which team scored the highest total in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "RCB",
  "op2": "Kolkata Knight Riders",
  "op3": "Delhi Capitals",
  "op4": "Mumbai Indians",
  "ans": "RCB"
},
{
  "ques": "Who was the first overseas captain to win the IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Michael Hussey",
  "op2": "Kieron Pollard",
  "op3": "Brendon McCullum",
  "op4": "David Warner",
  "ans": "Michael Hussey"
},
{
  "ques": "Who took the most wickets for Kolkata Knight Riders?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Narine",
  "op2": "Piyush Chawla",
  "op3": "Andre Russell",
  "op4": "Umesh Yadav",
  "ans": "Sunil Narine"
},
{
  "ques": "Which IPL player is nicknamed 'Mr. IPL'?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Virat Kohli",
  "op3": "MS Dhoni",
  "op4": "Rohit Sharma",
  "ans": "Suresh Raina"
},
{
  "ques": "Who was the first Indian bowler to take a hat-trick in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Mishra",
  "op2": "Harbhajan Singh",
  "op3": "Ishant Sharma",
  "op4": "Anil Kumble",
  "ans": "Amit Mishra"
},
{
  "ques": "Who scored the highest individual score by a wicketkeeper in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Dinesh Karthik",
  "op3": "Quinton de Kock",
  "op4": "Wriddhiman Saha",
  "ans": "MS Dhoni"
},
{
  "ques": "Which player has the most IPL centuries?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Virat Kohli",
  "op3": "AB de Villiers",
  "op4": "Shikhar Dhawan",
  "ans": "Chris Gayle"
},
{
  "ques": "Who holds the record for the best bowling figures in IPL playoffs?<br><br>",
  "quesType": "mcq",
  "op1": "Alzarri Joseph",
  "op2": "Andrew Tye",
  "op3": "Bhuvneshwar Kumar",
  "op4": "Harbhajan Singh",
  "ans": "Alzarri Joseph"
},
{
  "ques": "Which player has the highest number of sixes in a single IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Andre Russell",
  "op3": "AB de Villiers",
  "op4": "Kieron Pollard",
  "ans": "Chris Gayle"
},
{
  "ques": "Who won the Emerging Player of the Year award in IPL 2013?<br><br>",
  "quesType": "mcq",
  "op1": "Ravindra Jadeja",
  "op2": "Sanju Samson",
  "op3": "Mohit Sharma",
  "op4": "Shreyas Iyer",
  "ans": "Mohit Sharma"
},
{
  "ques": "Who was the first batsman to score a century for Chennai Super Kings?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Michael Hussey",
  "op3": "MS Dhoni",
  "op4": "Murali Vijay",
  "ans": "Michael Hussey"
},
{
  "ques": "Who has the record for most sixes in an IPL final?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Robin Uthappa",
  "op3": "Yusuf Pathan",
  "op4": "Kieron Pollard",
  "ans": "Robin Uthappa"
}
,
{
  "ques": "Who was the first bowler to take 5 wickets in an IPL final?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Mishra",
  "op2": "Alzarri Joseph",
  "op3": "Andrew Tye",
  "op4": "Bhuvneshwar Kumar",
  "ans": "Alzarri Joseph"
},
{
  "ques": "Who is the only player to win IPL championship with two different teams as captain?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Rohit Sharma",
  "op3": "Gautam Gambhir",
  "op4": "Shane Warne",
  "ans": "Gautam Gambhir"
},
{
  "ques": "Which bowler has the best economy rate in IPL history (minimum 100 overs)?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Narine",
  "op2": "Ravindra Jadeja",
  "op3": "Harbhajan Singh",
  "op4": "Bhuvneshwar Kumar",
  "ans": "Sunil Narine"
},
{
  "ques": "Who scored the fastest fifty in the IPL final?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Shane Watson",
  "op3": "Kieron Pollard",
  "op4": "AB de Villiers",
  "ans": "Suresh Raina"
},
{
  "ques": "Who holds the record for most ducks in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Piyush Chawla",
  "op2": "Suresh Raina",
  "op3": "Shikhar Dhawan",
  "op4": "Yusuf Pathan",
  "ans": "Piyush Chawla"
},
{
  "ques": "Which IPL team was the first to win back-to-back titles?<br><br>",
  "quesType": "mcq",
  "op1": "Chennai Super Kings",
  "op2": "Mumbai Indians",
  "op3": "Kolkata Knight Riders",
  "op4": "Rajasthan Royals",
  "ans": "Chennai Super Kings"
},
{
  "ques": "Who was the first Indian to score 5000 IPL runs?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Virat Kohli",
  "op3": "Rohit Sharma",
  "op4": "MS Dhoni",
  "ans": "Suresh Raina"
},
{
  "ques": "Who is the only player to win the IPL MVP (Most Valuable Player) award more than once?<br><br>",
  "quesType": "mcq",
  "op1": "Andre Russell",
  "op2": "AB de Villiers",
  "op3": "Sunil Narine",
  "op4": "David Warner",
  "ans": "Andre Russell"
},
{
  "ques": "Who holds the record for the highest individual score by a captain in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Rohit Sharma",
  "op3": "MS Dhoni",
  "op4": "Gautam Gambhir",
  "ans": "Virat Kohli"
},
{
  "ques": "Which bowler has the most wickets in IPL history without ever winning a Purple Cap?<br><br>",
  "quesType": "mcq",
  "op1": "Ravindra Jadeja",
  "op2": "Harbhajan Singh",
  "op3": "Bhuvneshwar Kumar",
  "op4": "Jaydev Unadkat",
  "ans": "Ravindra Jadeja"
},
{
  "ques": "Who took a hat-trick on the first ball of an IPL match?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Mishra",
  "op2": "Alzarri Joseph",
  "op3": "Pravin Tambe",
  "op4": "Ishant Sharma",
  "ans": "Amit Mishra"
},
{
  "ques": "Who holds the record for most sixes in an IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Andre Russell",
  "op3": "Kieron Pollard",
  "op4": "AB de Villiers",
  "ans": "Chris Gayle"
},
{
  "ques": "Which IPL match holds the record for highest aggregate runs scored?<br><br>",
  "quesType": "mcq",
  "op1": "RCB vs KKR 2020",
  "op2": "MI vs KKR 2010",
  "op3": "SRH vs RCB 2019",
  "op4": "CSK vs RR 2017",
  "ans": "RCB vs KKR 2020"
},
{
  "ques": "Who is the only player to win IPL titles as both captain and coach?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Gautam Gambhir",
  "op3": "Stephen Fleming",
  "op4": "Ricky Ponting",
  "ans": "MS Dhoni"
},
{
  "ques": "Who was the first player to hit 10,000 runs in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Suresh Raina",
  "op3": "Rohit Sharma",
  "op4": "AB de Villiers",
  "ans": "Virat Kohli"
},
{
  "ques": "Which IPL player has the highest batting average?<br><br>",
  "quesType": "mcq",
  "op1": "Michael Hussey",
  "op2": "Virat Kohli",
  "op3": "AB de Villiers",
  "op4": "David Warner",
  "ans": "Michael Hussey"
},
{
  "ques": "Who took the most catches in a single IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Dinesh Karthik",
  "op3": "Shikhar Dhawan",
  "op4": "AB de Villiers",
  "ans": "Suresh Raina"
},
{
  "ques": "Who is the only player to take a 5-wicket haul in two consecutive IPL matches?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Mishra",
  "op2": "Praveen Kumar",
  "op3": "Jaydev Unadkat",
  "op4": "Alzarri Joseph",
  "ans": "Amit Mishra"
},
{
  "ques": "Who has the most Man of the Match awards in IPL finals?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Rohit Sharma",
  "op3": "Suresh Raina",
  "op4": "Dwayne Bravo",
  "ans": "MS Dhoni"
},
{
  "ques": "Who was the first player to hit 6 sixes in an IPL over?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "Chris Gayle",
  "op3": "AB de Villiers",
  "op4": "Kieron Pollard",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Which player was the first to win IPL MVP, Orange Cap, and Purple Cap in the same season?<br><br>",
  "quesType": "mcq",
  "op1": "No player",
  "op2": "Andre Russell",
  "op3": "Chris Gayle",
  "op4": "Sunil Narine",
  "ans": "No player"
},
{
  "ques": "Which IPL player has captained the most matches?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Gautam Gambhir",
  "op3": "Rohit Sharma",
  "op4": "Virat Kohli",
  "ans": "MS Dhoni"
},
{
  "ques": "Who holds the record for most sixes in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Andre Russell",
  "op3": "Kieron Pollard",
  "op4": "AB de Villiers",
  "ans": "Chris Gayle"
},
{
  "ques": "Who has the most wickets in an IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "Dwayne Bravo",
  "op2": "Bhuvneshwar Kumar",
  "op3": "Sohail Tanvir",
  "op4": "Jasprit Bumrah",
  "ans": "Dwayne Bravo"
},
{
  "ques": "Who holds the record for most runs scored in an IPL final?<br><br>",
  "quesType": "mcq",
  "op1": "Murali Vijay",
  "op2": "Manish Pandey",
  "op3": "Suresh Raina",
  "op4": "Robin Uthappa",
  "ans": "Manish Pandey"
},
{
  "ques": "Who is the first player to take a 4-wicket haul and score a fifty in the same IPL match?<br><br>",
  "quesType": "mcq",
  "op1": "Shane Watson",
  "op2": "Yuvraj Singh",
  "op3": "Hardik Pandya",
  "op4": "Andre Russell",
  "ans": "Shane Watson"
},
{
  "ques": "Which bowler took the first-ever IPL hat-trick?<br><br>",
  "quesType": "mcq",
  "op1": "Lakshmipathy Balaji",
  "op2": "Praveen Kumar",
  "op3": "Amit Mishra",
  "op4": "Sunil Narine",
  "ans": "Lakshmipathy Balaji"
},
{
  "ques": "Who is the only player to score a century in IPL and win the title in the same season?<br><br>",
  "quesType": "mcq",
  "op1": "Manish Pandey",
  "op2": "Chris Gayle",
  "op3": "Virat Kohli",
  "op4": "David Warner",
  "ans": "Manish Pandey"
},
{
  "ques": "Who was the leading wicket-taker in IPL 2018?<br><br>",
  "quesType": "mcq",
  "op1": "Andrew Tye",
  "op2": "Bhuvneshwar Kumar",
  "op3": "Jasprit Bumrah",
  "op4": "Sunil Narine",
  "ans": "Andrew Tye"
},
{
  "ques": "Who was the first player to captain an IPL team at the age of 19?<br><br>",
  "quesType": "mcq",
  "op1": "Rishabh Pant",
  "op2": "Shreyas Iyer",
  "op3": "Sanju Samson",
  "op4": "Rohit Sharma",
  "ans": "Rishabh Pant"
}
,
{
  "ques": "Who was the first Indian bowler to take 10 wickets in a Test match?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Harbhajan Singh",
  "op3": "Kapil Dev",
  "op4": "Irfan Pathan",
  "ans": "Anil Kumble"
},
{
  "ques": "Which Indian cricketer has the record for most runs in a single IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "David Warner",
  "op3": "Virat Kohli",
  "op4": "Shikhar Dhawan",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was the first Indian to score a triple century in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Virender Sehwag",
  "op3": "Rahul Dravid",
  "op4": "Karun Nair",
  "ans": "Virender Sehwag"
},
{
  "ques": "Who holds the record for the fastest century in ODIs by an Indian?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Kapil Dev",
  "op3": "Rohit Sharma",
  "op4": "Sachin Tendulkar",
  "ans": "Rohit Sharma"
},
{
  "ques": "Who was the first Indian cricketer to win the Sir Garfield Sobers Trophy for ICC Cricketer of the Year?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "MS Dhoni",
  "op3": "Anil Kumble",
  "op4": "Sachin Tendulkar",
  "ans": "Virat Kohli"
},
{
  "ques": "Which Indian bowler was the first to take a hat-trick in T20 Internationals?<br><br>",
  "quesType": "mcq",
  "op1": "Yuzvendra Chahal",
  "op2": "Irfan Pathan",
  "op3": "Bhuvneshwar Kumar",
  "op4": "Jasprit Bumrah",
  "ans": "Irfan Pathan"
},
{
  "ques": "Who was the captain of the Indian cricket team during the 1983 World Cup victory?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Kapil Dev",
  "op3": "Mohinder Amarnath",
  "op4": "Sandeep Patil",
  "ans": "Kapil Dev"
},
{
  "ques": "Which Indian player has the highest number of sixes in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Rohit Sharma",
  "op3": "Suresh Raina",
  "op4": "AB de Villiers",
  "ans": "Chris Gayle"
},
{
  "ques": "Who was the first Indian bowler to take 300 wickets in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Zaheer Khan",
  "op3": "Javagal Srinath",
  "op4": "Harbhajan Singh",
  "ans": "Zaheer Khan"
},
{
  "ques": "Which Indian player scored the fastest Test century on debut?<br><br>",
  "quesType": "mcq",
  "op1": "Karun Nair",
  "op2": "Shivnarine Chanderpaul",
  "op3": "Virat Kohli",
  "op4": "Brendon McCullum",
  "ans": "Brendon McCullum"
},
{
  "ques": "Who is the only Indian cricketer to have scored centuries in all three formats of international cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Virat Kohli",
  "op3": "Suresh Raina",
  "op4": "MS Dhoni",
  "ans": "Virat Kohli"
},
{
  "ques": "Which Indian cricketer holds the record for the most Man of the Match awards in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Sachin Tendulkar",
  "op3": "MS Dhoni",
  "op4": "Rahul Dravid",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Who was the first Indian woman to score a double century in international cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Mithali Raj",
  "op2": "Harmanpreet Kaur",
  "op3": "Smriti Mandhana",
  "op4": "Jhulan Goswami",
  "ans": "Mithali Raj"
},
{
  "ques": "Who was the fastest Indian to reach 10,000 runs in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Virat Kohli",
  "op3": "MS Dhoni",
  "op4": "Rahul Dravid",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was the first Indian cricketer to be inducted into the ICC Hall of Fame?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Sunil Gavaskar",
  "op3": "Anil Kumble",
  "op4": "Sachin Tendulkar",
  "ans": "Kapil Dev"
},
{
  "ques": "Which Indian cricketer holds the record for the most Test catches by a non-wicketkeeper?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Mohammad Azharuddin",
  "op3": "Sourav Ganguly",
  "op4": "VVS Laxman",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who is the only Indian cricketer to take two hat-tricks in international cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Kuldeep Yadav",
  "op2": "Harbhajan Singh",
  "op3": "Irfan Pathan",
  "op4": "Jasprit Bumrah",
  "ans": "Kuldeep Yadav"
},
{
  "ques": "Who scored the most runs in the 2011 Cricket World Cup?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Sachin Tendulkar",
  "op3": "Tillakaratne Dilshan",
  "op4": "Yuvraj Singh",
  "ans": "Tillakaratne Dilshan"
},
{
  "ques": "Which Indian bowler has the best bowling figures in a World Cup match?<br><br>",
  "quesType": "mcq",
  "op1": "Kuldeep Yadav",
  "op2": "Anil Kumble",
  "op3": "Bhuvneshwar Kumar",
  "op4": "Javagal Srinath",
  "ans": "Anil Kumble"
},
{
  "ques": "Who was the first Indian to captain in all three formats of international cricket?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Virat Kohli",
  "op3": "Sourav Ganguly",
  "op4": "Rahul Dravid",
  "ans": "MS Dhoni"
},
{
  "ques": "Who was the first Indian bowler to take 400 wickets in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Kapil Dev",
  "op3": "Harbhajan Singh",
  "op4": "Javagal Srinath",
  "ans": "Anil Kumble"
},
{
  "ques": "Which cricketer scored the fastest fifty in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "KL Rahul",
  "op2": "Yuvraj Singh",
  "op3": "Chris Gayle",
  "op4": "David Warner",
  "ans": "KL Rahul"
},
{
  "ques": "Which Indian cricketer scored a century in the final of the 2013 Champions Trophy?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "MS Dhoni",
  "op3": "Shikhar Dhawan",
  "op4": "Suresh Raina",
  "ans": "Shikhar Dhawan"
},
{
  "ques": "Who holds the record for the most sixes in a single World Cup tournament?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "MS Dhoni",
  "op3": "AB de Villiers",
  "op4": "Rohit Sharma",
  "ans": "Chris Gayle"
},
{
  "ques": "Who is the youngest Indian cricketer to play in the IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Prithvi Shaw",
  "op2": "Ishan Kishan",
  "op3": "Riyan Parag",
  "op4": "Shubman Gill",
  "ans": "Riyan Parag"
},
{
  "ques": "Which Indian cricketer has the highest partnership runs in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid and VVS Laxman",
  "op2": "Sunil Gavaskar and Gundappa Vishwanath",
  "op3": "Virat Kohli and Cheteshwar Pujara",
  "op4": "Sachin Tendulkar and Sourav Ganguly",
  "ans": "Rahul Dravid and VVS Laxman"
},
{
  "ques": "Who was the first Indian cricketer to score a triple century in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Virender Sehwag",
  "op2": "Karun Nair",
  "op3": "VVS Laxman",
  "op4": "Sachin Tendulkar",
  "ans": "Virender Sehwag"
},
{
  "ques": "Who is the youngest Indian to score a century in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "Virat Kohli",
  "op3": "Shubman Gill",
  "op4": "Rishabh Pant",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Which Indian bowler took a hat-trick in the first over of a Test match?<br><br>",
  "quesType": "mcq",
  "op1": "Irfan Pathan",
  "op2": "Bhuvneshwar Kumar",
  "op3": "Mohammed Shami",
  "op4": "Jasprit Bumrah",
  "ans": "Irfan Pathan"
},
{
  "ques": "Who captained India in the 2011 ICC Cricket World Cup final?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "MS Dhoni",
  "op3": "Sourav Ganguly",
  "op4": "Virat Kohli",
  "ans": "MS Dhoni"
},
{
  "ques": "Who holds the record for the most runs in a single IPL season for India?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Rohit Sharma",
  "op3": "Suresh Raina",
  "op4": "David Warner",
  "ans": "Virat Kohli"
},
{
  "ques": "Which Indian player scored the fastest fifty in T20 Internationals?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "Suresh Raina",
  "op3": "KL Rahul",
  "op4": "Rohit Sharma",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Who was the first Indian to score 10,000 runs in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sachin Tendulkar",
  "op3": "Sunil Gavaskar",
  "op4": "Virat Kohli",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Which Indian bowler holds the record for most wickets in a single World Cup tournament?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Zaheer Khan",
  "op3": "Mohammed Shami",
  "op4": "Javagal Srinath",
  "ans": "Zaheer Khan"
},
{
  "ques": "Who was the first Indian cricketer to score a century in all three formats?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Suresh Raina",
  "op3": "Yuvraj Singh",
  "op4": "MS Dhoni",
  "ans": "MS Dhoni"
},
{
  "ques": "Which Indian cricketer has taken the most catches in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "Sachin Tendulkar",
  "op3": "VVS Laxman",
  "op4": "MS Dhoni",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who was the first Indian to score a century in a World Cup match?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Mohinder Amarnath",
  "op3": "Sunil Gavaskar",
  "op4": "Sachin Tendulkar",
  "ans": "Kapil Dev"
},
{
  "ques": "Who was the first Indian bowler to take a 5-wicket haul in ODIs?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "Anil Kumble",
  "op3": "Javagal Srinath",
  "op4": "Zaheer Khan",
  "ans": "Kapil Dev"
},
{
  "ques": "Which Indian batsman has the most centuries in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Suresh Raina",
  "op3": "David Warner",
  "op4": "Shikhar Dhawan",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was the first Indian cricketer to win the ICC Player of the Year award?<br><br>",
  "quesType": "mcq",
  "op1": "Sachin Tendulkar",
  "op2": "MS Dhoni",
  "op3": "Virat Kohli",
  "op4": "Rahul Dravid",
  "ans": "Sachin Tendulkar"
},
{
  "ques": "Which Indian player scored the fastest century in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "KL Rahul",
  "op3": "Rohit Sharma",
  "op4": "Virat Kohli",
  "ans": "Chris Gayle"
},
{
  "ques": "Who was the first Indian captain to win an overseas Test series against Australia?<br><br>",
  "quesType": "mcq",
  "op1": "Kapil Dev",
  "op2": "MS Dhoni",
  "op3": "Rahul Dravid",
  "op4": "Virat Kohli",
  "ans": "Kapil Dev"
},
{
  "ques": "Who holds the record for the most Test runs by an Indian wicketkeeper?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Syed Kirmani",
  "op3": "Farokh Engineer",
  "op4": "Wriddhiman Saha",
  "ans": "MS Dhoni"
},
{
  "ques": "Who is the only Indian to have captained the country in all three formats of the game?<br><br>",
  "quesType": "mcq",
  "op1": "Sourav Ganguly",
  "op2": "MS Dhoni",
  "op3": "Virat Kohli",
  "op4": "Rahul Dravid",
  "ans": "MS Dhoni"
},
{
  "ques": "Which Indian cricketer was nicknamed 'The Wall'?<br><br>",
  "quesType": "mcq",
  "op1": "Rahul Dravid",
  "op2": "VVS Laxman",
  "op3": "Sunil Gavaskar",
  "op4": "Sachin Tendulkar",
  "ans": "Rahul Dravid"
},
{
  "ques": "Who took the most wickets for India in the 2016 ICC World Twenty20?<br><br>",
  "quesType": "mcq",
  "op1": "Bhuvneshwar Kumar",
  "op2": "Yuzvendra Chahal",
  "op3": "Jasprit Bumrah",
  "op4": "Hardik Pandya",
  "ans": "Yuzvendra Chahal"
},
{
  "ques": "Who was the first Indian cricketer to take 300 wickets in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Kapil Dev",
  "op3": "Harbhajan Singh",
  "op4": "Javagal Srinath",
  "ans": "Anil Kumble"
},
{
  "ques": "Which Indian cricketer has the record for the highest individual score in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "Virat Kohli",
  "op3": "AB de Villiers",
  "op4": "Rohit Sharma",
  "ans": "Chris Gayle"
},
{
  "ques": "Who is the only Indian bowler to have taken two hat-tricks in Test cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Anil Kumble",
  "op2": "Harbhajan Singh",
  "op3": "Irfan Pathan",
  "op4": "Jasprit Bumrah",
  "ans": "Anil Kumble"
},
{
  "ques": "Who is the only Indian batsman to score centuries in his first three Test matches?<br><br>",
  "quesType": "mcq",
  "op1": "Karun Nair",
  "op2": "Virat Kohli",
  "op3": "Shubman Gill",
  "op4": "Cheteshwar Pujara",
  "ans": "Karun Nair"
},
{
  "ques": "Who holds the record for the most sixes in a single IPL season for India?<br><br>",
  "quesType": "mcq",
  "op1": "Rohit Sharma",
  "op2": "KL Rahul",
  "op3": "Chris Gayle",
  "op4": "Virat Kohli",
  "ans": "Rohit Sharma"
},
{
  "ques": "Which Indian cricketer was the first to hit six sixes in an over in first-class cricket?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "Rohit Sharma",
  "op3": "Kapil Dev",
  "op4": "Hardik Pandya",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Who was the first Indian to play professional cricket in England?<br><br>",
  "quesType": "mcq",
  "op1": "Ranjitsinhji",
  "op2": "Duleepsinhji",
  "op3": "Lala Amarnath",
  "op4": "C.K. Nayudu",
  "ans": "Ranjitsinhji"
},
{
  "ques": "Who was the first Indian to score a Test century against Australia?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Gavaskar",
  "op2": "Vijay Hazare",
  "op3": "Lala Amarnath",
  "op4": "Gundappa Viswanath",
  "ans": "Vijay Hazare"
},
{
  "ques": "Who is the first Indian cricketer to win the Sir Garfield Sobers Trophy?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Sachin Tendulkar",
  "op3": "MS Dhoni",
  "op4": "Rahul Dravid",
  "ans": "Virat Kohli"
},
{
  "ques": "Who is the first Indian cricketer to score a Test century at Lord's?<br><br>",
  "quesType": "mcq",
  "op1": "VVS Laxman",
  "op2": "Mohinder Amarnath",
  "op3": "Sunil Gavaskar",
  "op4": "Rahul Dravid",
  "ans": "Mohinder Amarnath"
}
,
{
  "ques": "Who was the first bowler to take a 4-wicket haul in the IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Lakshmipathy Balaji",
  "op2": "Sohail Tanvir",
  "op3": "Amit Mishra",
  "op4": "Praveen Kumar",
  "ans": "Lakshmipathy Balaji"
},
{
  "ques": "Which player has the highest strike rate in IPL history (minimum 500 balls faced)?<br><br>",
  "quesType": "mcq",
  "op1": "Andre Russell",
  "op2": "MS Dhoni",
  "op3": "Ishant Sharma",
  "op4": "Hardik Pandya",
  "ans": "Andre Russell"
},
{
  "ques": "Who holds the record for the most wickets in IPL eliminator matches?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Bhuvneshwar Kumar",
  "op3": "Amit Mishra",
  "op4": "Harbhajan Singh",
  "ans": "Lasith Malinga"
},
{
  "ques": "Which IPL season had the highest average runs per match?<br><br>",
  "quesType": "mcq",
  "op1": "2013",
  "op2": "2016",
  "op3": "2018",
  "op4": "2020",
  "ans": "2018"
},
{
  "ques": "Who was the first Indian spinner to take 100 wickets in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Ravindra Jadeja",
  "op2": "Amit Mishra",
  "op3": "Harbhajan Singh",
  "op4": "Piyush Chawla",
  "ans": "Amit Mishra"
},
{
  "ques": "Which player has the most IPL appearances without ever captaining a team?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Dinesh Karthik",
  "op3": "Robin Uthappa",
  "op4": "Ravindra Jadeja",
  "ans": "Robin Uthappa"
},
{
  "ques": "Who was the first overseas player to score 4000 runs in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "AB de Villiers",
  "op3": "David Warner",
  "op4": "Brendon McCullum",
  "ans": "Chris Gayle"
},
{
  "ques": "Which team holds the record for the most wins in IPL playoffs?<br><br>",
  "quesType": "mcq",
  "op1": "Mumbai Indians",
  "op2": "Chennai Super Kings",
  "op3": "Kolkata Knight Riders",
  "op4": "Sunrisers Hyderabad",
  "ans": "Mumbai Indians"
},
{
  "ques": "Who scored the fastest century in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Chris Gayle",
  "op2": "KL Rahul",
  "op3": "David Warner",
  "op4": "AB de Villiers",
  "ans": "Chris Gayle"
},
{
  "ques": "Who was the first player to captain two different IPL teams?<br><br>",
  "quesType": "mcq",
  "op1": "Gautam Gambhir",
  "op2": "MS Dhoni",
  "op3": "Yuvraj Singh",
  "op4": "Harbhajan Singh",
  "ans": "Gautam Gambhir"
},
{
  "ques": "Who holds the record for the best bowling figures by a spinner in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Amit Mishra",
  "op2": "Rashid Khan",
  "op3": "Sunil Narine",
  "op4": "Harbhajan Singh",
  "ans": "Amit Mishra"
},
{
  "ques": "Which IPL player has scored the most runs without hitting a century?<br><br>",
  "quesType": "mcq",
  "op1": "Rohit Sharma",
  "op2": "Suresh Raina",
  "op3": "Dinesh Karthik",
  "op4": "Virat Kohli",
  "ans": "Suresh Raina"
},
{
  "ques": "Who was the first player to score a fifty and take 4 wickets in the same IPL match?<br><br>",
  "quesType": "mcq",
  "op1": "Shane Watson",
  "op2": "Andre Russell",
  "op3": "Yuvraj Singh",
  "op4": "Hardik Pandya",
  "ans": "Shane Watson"
},
{
  "ques": "Which player has the highest number of IPL Man of the Match awards?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "MS Dhoni",
  "op3": "Suresh Raina",
  "op4": "Chris Gayle",
  "ans": "Virat Kohli"
},
{
  "ques": "Who was the first overseas player to captain an IPL team?<br><br>",
  "quesType": "mcq",
  "op1": "Adam Gilchrist",
  "op2": "Michael Hussey",
  "op3": "Brendon McCullum",
  "op4": "David Warner",
  "ans": "Adam Gilchrist"
},
{
  "ques": "Which player has the record for most sixes in IPL playoffs?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Chris Gayle",
  "op3": "Andre Russell",
  "op4": "Kieron Pollard",
  "ans": "Chris Gayle"
},
{
  "ques": "Who was the first bowler to take a hat-trick for Kolkata Knight Riders?<br><br>",
  "quesType": "mcq",
  "op1": "Sunil Narine",
  "op2": "Piyush Chawla",
  "op3": "Andre Russell",
  "op4": "Umesh Yadav",
  "ans": "Sunil Narine"
},
{
  "ques": "Who scored the most runs in the IPL 2020 season?<br><br>",
  "quesType": "mcq",
  "op1": "KL Rahul",
  "op2": "Shikhar Dhawan",
  "op3": "David Warner",
  "op4": "Ruturaj Gaikwad",
  "ans": "KL Rahul"
},
{
  "ques": "Who has the record for the fastest 1000 runs in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "Virat Kohli",
  "op2": "Shikhar Dhawan",
  "op3": "David Warner",
  "op4": "AB de Villiers",
  "ans": "Virat Kohli"
},
{
  "ques": "Which IPL team has the lowest winning percentage?<br><br>",
  "quesType": "mcq",
  "op1": "Delhi Capitals",
  "op2": "Rajasthan Royals",
  "op3": "Kings XI Punjab",
  "op4": "Pune Warriors India",
  "ans": "Pune Warriors India"
},
{
  "ques": "Who won the Purple Cap in the first IPL season?<br><br>",
  "quesType": "mcq",
  "op1": "Brett Lee",
  "op2": "Sohail Tanvir",
  "op3": "Lasith Malinga",
  "op4": "Ajit Agarkar",
  "ans": "Sohail Tanvir"
},
{
  "ques": "Who holds the record for most IPL matches played without a century?<br><br>",
  "quesType": "mcq",
  "op1": "Dinesh Karthik",
  "op2": "Robin Uthappa",
  "op3": "Suresh Raina",
  "op4": "Kedar Jadhav",
  "ans": "Dinesh Karthik"
},
{
  "ques": "Which player has the highest individual score for Rajasthan Royals?<br><br>",
  "quesType": "mcq",
  "op1": "Jos Buttler",
  "op2": "Shane Watson",
  "op3": "Rahul Dravid",
  "op4": "Ajinkya Rahane",
  "ans": "Jos Buttler"
},
{
  "ques": "Which player took the most catches as a wicketkeeper in IPL history?<br><br>",
  "quesType": "mcq",
  "op1": "MS Dhoni",
  "op2": "Dinesh Karthik",
  "op3": "Quinton de Kock",
  "op4": "Parthiv Patel",
  "ans": "MS Dhoni"
},
{
  "ques": "Who is the only player to have scored a century in the IPL final and win the Man of the Match?<br><br>",
  "quesType": "mcq",
  "op1": "Manish Pandey",
  "op2": "Michael Hussey",
  "op3": "Robin Uthappa",
  "op4": "Shane Watson",
  "ans": "Manish Pandey"
},
{
  "ques": "Who was the first player to win the IPL Emerging Player of the Year award twice?<br><br>",
  "quesType": "mcq",
  "op1": "Rashid Khan",
  "op2": "Shreyas Iyer",
  "op3": "Mohit Sharma",
  "op4": "Sanju Samson",
  "ans": "No player has won it twice"
},
{
  "ques": "Who was the first bowler to take a five-wicket haul in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Lasith Malinga",
  "op2": "Sohail Tanvir",
  "op3": "Amit Mishra",
  "op4": "Harbhajan Singh",
  "ans": "Sohail Tanvir"
},
{
  "ques": "Who is the only player to have captained 4 different IPL teams?<br><br>",
  "quesType": "mcq",
  "op1": "Yuvraj Singh",
  "op2": "MS Dhoni",
  "op3": "Rohit Sharma",
  "op4": "Gautam Gambhir",
  "ans": "Yuvraj Singh"
},
{
  "ques": "Who holds the record for most consecutive matches played in IPL?<br><br>",
  "quesType": "mcq",
  "op1": "Suresh Raina",
  "op2": "Rohit Sharma",
  "op3": "MS Dhoni",
  "op4": "David Warner",
  "ans": "Suresh Raina"
}


 

]

let sportButton = document.getElementById("sportButton");
let sportButton1 = document.getElementById("sportButton1");
let sportButton2 = document.getElementById("sportButton2");
let sportButton3 = document.getElementById("sportButton3");
let sportLevel = 0;
let sportCodingTest = document.getElementById("sportCodingTest");
let sportTimer = document.getElementById("sportTimer");

sportButton1.onclick = function () {
  sportButton2.disabled = true;
  sportButton3.disabled = true;
  sportLevel = 1;

  sportButton.classList.remove("d-none");
  sportButton.classList.add("d-block");
};

sportButton2.onclick = function () {
  sportButton1.disabled = true;
  sportButton3.disabled = true;
  sportLevel = 2;

  sportButton.classList.remove("d-none");
  sportButton.classList.add("d-block");
};

sportButton3.onclick = function () {
  sportButton2.disabled = true;
  sportButton1.disabled = true;
  sportLevel = 3;

  sportButton.classList.remove("d-none");
  sportButton.classList.add("d-block");
};

let sportTime = 0;

let codingsportShow = document.getElementById("codingsportShow");
let codingsportHide = document.getElementById("codingsportHide");
let codingsportBack = document.getElementById("codingsportBack");

codingsportBack.onclick = function () {
  codingsportShow.classList.add("d-none");
  codingsportHide.classList.remove("d-none");
};


let sportIncorrectAnswers = [];

let sportTimerId = "";
let sportSkip = document.getElementById("sportSkip");
let codingsportQues = document.getElementById("codingsportQues");
let mcqsport = document.getElementById("mcqsport");
let sportQuestionNumber = document.getElementById("sportQuestionNumber");
let sportQuestionCount = 2;
let sportScore = 0;
let sportScoreDisplay = document.getElementById("sportScoreDisplay");
let sportScoreShow = document.getElementById("sportScoreShow");
let sportSkip2 = document.getElementById("sportSkip2");

let sportFillAns = document.getElementById("sportFillAns");
let sportStatus1 = document.getElementById("sportStatus1");
let sportStatus2 = document.getElementById("sportStatus2");
let sportStatus3 = document.getElementById("sportStatus3");
let sportCheckFill = document.getElementById("sportCheckFill");

let codingResultsport = document.getElementById("codingResultsport");

let sportIncorrectAnswersDisplay = document.getElementById("sportIncorrectAnswersDisplay");
let sportScoreBelow70 = document.getElementById("sportScoreBelow70");
let sportScore100 = document.getElementById("sportScore100");

let sportResult1 = document.getElementById("sportResult1");
let sportResult2 = document.getElementById("sportResult2");
let sportResult3 = document.getElementById("sportResult3");
let sportResult4 = document.getElementById("sportResult4");
let sportResult5 = document.getElementById("sportResult5");
let sportBg1 = document.getElementById("sportBg1");


function codingsportStart(){
  codingsportHide.classList.add("d-none");
codingsportShow.classList.remove("d-none");

let fillBlanksport = document.getElementById("fillBlanksport");
let op1sport = document.getElementById("op1sport");
let op2sport = document.getElementById("op2sport");
let op3sport = document.getElementById("op3sport");
let op4sport = document.getElementById("op4sport");

let sportFillAns = document.getElementById("sportFillAns");
let sportStatus1 = document.getElementById("sportStatus1");
let sportStatus2 = document.getElementById("sportStatus2");
let sportStatus3 = document.getElementById("sportStatus3");
let sportCheckFill = document.getElementById("sportCheckFill");

sportFillAns.disabled = false;
sportStatus1.classList.remove("d-none");
sportStatus2.classList.add("d-none");
sportStatus3.classList.add("d-none");
sportFillAns.value = "";
sportSkip2.textContent = "Skip";
sportSkip2.style.backgroundColor = "orange";
sportSkip2.style.borderColor = "orange";

sportSkip.textContent = "Skip";
sportSkip.style.backgroundColor = "orange";
sportSkip.style.borderColor = "orange";
sportScoreShow.textContent = "";
sportTimer.style.color = "black";

if (sportLevel === 1) {
  let sportRandom = Math.floor(Math.random() * codingsport1Arr.length);
  let y = codingsport1Arr[sportRandom];
  sportTimer.textContent = "20";
  sportTime = 20;

  sportTimerId = setInterval(function () {
    sportTime = sportTime - 1;
    if (sportTime == 0) {
      clearInterval(sportTimerId);
      sportQuestionNumber.textContent = "Question:" + sportQuestionCount + "/10";
      sportQuestionCount = sportQuestionCount + 1;
      sportTime = 20;
      codingsportStart();
    }
    if (sportTime <= 5) {
      sportTimer.style.color = "red";
      sportTimer.textContent = sportTime;
    } else {
      sportTimer.textContent = sportTime;
    }
  }, 1000);

  if (sportQuestionCount == 12) {
    clearInterval(sportTimerId);
    mcqsport.classList.add("d-none");
    document.getElementById("sportScoreEnd").textContent = sportScoreDisplay.textContent;
    fillBlanksport.classList.add("d-none");
    codingsportShow.classList.add("d-none");
    codingResultsport.classList.remove("d-none");

    if (sportScore < 70) {
      sportScoreBelow70.classList.remove("d-none");
      sportScore100.classList.add("d-none");
      sectionCodingsport.classList.add("back15");

      sportResult1.textContent = "Test finished!!";
      sportResult2.textContent = "😓 Oops! Not quite right.";
      sportResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      sportResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      sportIncorrectAnswersDisplay.appendChild(h2);

      for (let z of sportIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        sportIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (sportScore < 100) {
      sportScoreBelow70.classList.remove("d-none");
      sportScore100.classList.add("d-none");
      sectionCodingsport.classList.add("back15");

      sportResult1.textContent = "Test finished!!";
      sportResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      sportResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      sportResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      sportIncorrectAnswersDisplay.appendChild(h2);

      for (let z of sportIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        sportIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (sportScore === 100) {
      document.getElementById("sectionCodingsport").classList.add("back14");
      sportScore100.classList.remove("d-none");
      sportScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqsport.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingsportQues.innerHTML = formattedQuestion;

    fillBlanksport.classList.add("d-none");
    op1sport.textContent = y.op1;
    op2sport.textContent = y.op2;
    op3sport.textContent = y.op3;
    op4sport.textContent = y.op4;

    const allOps = [op1sport, op2sport, op3sport, op4sport];
    allOps.forEach((op, i) => {
      op.onclick = function () {
        allOps.forEach(o => (o.disabled = true));
        clearInterval(sportTimerId);
        sportTime = 20;

        if (op.textContent === y.ans) {
          op.style.backgroundColor = "green";
          sportScore += 10;
          sportScoreShow.textContent = "+10";
          sportScoreShow.style.color = "green";
        } else {
          op.style.backgroundColor = "red";
          sportScore -= 5;
          sportScoreShow.textContent = "-5";
          sportScoreShow.style.color = "red";
          let wrong_answer = { ques: y.ques, correct: y.ans, wrong: op.textContent };
          sportIncorrectAnswers.push(wrong_answer);
        }

        sportScoreDisplay.textContent = "Score: " + sportScore + "/100";

        sportSkip.textContent = "Next";
        sportSkip.style.backgroundColor = "#23ebdd";
        sportSkip.style.borderColor = "#23ebdd";

        sportSkip.onclick = function () {
          sportQuestionNumber.textContent = "Question:" + sportQuestionCount + "/10";
          sportQuestionCount += 1;
          allOps.forEach(o => {
            o.disabled = false;
            o.style.backgroundColor = "white";
          });
          codingsportStart();
        };
      };
    });

    sportSkip.onclick = function () {
      clearInterval(sportTimerId);
      sportTime = 20;
      sportQuestionNumber.textContent = "Question:" + sportQuestionCount + "/10";
      sportQuestionCount += 1;
      allOps.forEach(o => {
        o.disabled = false;
        o.style.backgroundColor = "white";
      });
      let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
      sportIncorrectAnswers.push(wrong_answer);
      codingsportStart();
    };
  } 
  
}
else if (sportLevel === 2) {
  let sportRandom = Math.floor(Math.random() * codingsport2Arr.length);
  let y = codingsport2Arr[sportRandom];
  sportTimer.textContent = "25";
  sportTime = 25;

  sportTimerId = setInterval(function () {
    sportTime = sportTime - 1;
    if (sportTime == 0) {
      clearInterval(sportTimerId);
      sportQuestionNumber.textContent = "Question:" + sportQuestionCount + "/10";
      sportQuestionCount = sportQuestionCount + 1;
      sportTime = 25;
      codingsportStart();
    }
    if (sportTime <= 5) {
      sportTimer.style.color = "red";
      sportTimer.textContent = sportTime;
    } else {
      sportTimer.textContent = sportTime;
    }
  }, 1000);

  if (sportQuestionCount == 12) {
    clearInterval(sportTimerId);
    mcqsport.classList.add("d-none");
    document.getElementById("sportScoreEnd").textContent = sportScoreDisplay.textContent;
    fillBlanksport.classList.add("d-none");
    codingsportShow.classList.add("d-none");
    codingResultsport.classList.remove("d-none");

    if (sportScore < 70) {
      sportScoreBelow70.classList.remove("d-none");
      sportScore100.classList.add("d-none");
      sectionCodingsport.classList.add("back15");

      sportResult1.textContent = "Test finished!!";
      sportResult2.textContent = "😓 Oops! Not quite right.";
      sportResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      sportResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      sportIncorrectAnswersDisplay.appendChild(h2);

      for (let z of sportIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        sportIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (sportScore < 100) {
      sportScoreBelow70.classList.remove("d-none");
      sportScore100.classList.add("d-none");
      sectionCodingsport.classList.add("back15");

      sportResult1.textContent = "Test finished!!";
      sportResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      sportResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      sportResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      sportIncorrectAnswersDisplay.appendChild(h2);

      for (let z of sportIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        sportIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (sportScore === 100) {
      document.getElementById("sectionCodingsport").classList.add("back14");
      sportScore100.classList.remove("d-none");
      sportScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqsport.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingsportQues.innerHTML = formattedQuestion;
    fillBlanksport.classList.add("d-none");
    op1sport.textContent = y.op1;
    op2sport.textContent = y.op2;
    op3sport.textContent = y.op3;
    op4sport.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(sportTimerId);
      sportTime = 25;
      sportSkip.textContent = "Next";
      sportSkip.style.backgroundColor = "#23ebdd";
      sportSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        sportScore += 10;
        sportScoreShow.textContent = "+10";
        sportScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        sportScore -= 5;
        sportScoreShow.textContent = "-5";
        sportScoreShow.style.color = "red";
        sportIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      sportScoreDisplay.textContent = "Score: " + sportScore + "/100";
    }

    op1sport.onclick = () => handleOptionClick(op1sport, [op2sport, op3sport, op4sport]);
    op2sport.onclick = () => handleOptionClick(op2sport, [op1sport, op3sport, op4sport]);
    op3sport.onclick = () => handleOptionClick(op3sport, [op1sport, op2sport, op4sport]);
    op4sport.onclick = () => handleOptionClick(op4sport, [op1sport, op2sport, op3sport]);

    sportSkip.onclick = function () {
      clearInterval(sportTimerId);
      sportTime = 25;
      sportQuestionNumber.textContent = "Question:" + sportQuestionCount + "/10";
      sportQuestionCount++;
      [op1sport, op2sport, op3sport, op4sport].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      sportIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingsportStart();
    };
  }

}
else if (sportLevel === 3) {
  let sportRandom = Math.floor(Math.random() * codingsport3Arr.length);
  let y = codingsport3Arr[sportRandom];
  sportTimer.textContent = "30";
  sportTime = 30;

  sportTimerId = setInterval(function () {
    sportTime = sportTime - 1;
    if (sportTime == 0) {
      clearInterval(sportTimerId);
      sportQuestionNumber.textContent = "Question:" + sportQuestionCount + "/10";
      sportQuestionCount = sportQuestionCount + 1;
      sportTime = 30;
      codingsportStart();
    }
    if (sportTime <= 5) {
      sportTimer.style.color = "red";
      sportTimer.textContent = sportTime;
    } else {
      sportTimer.textContent = sportTime;
    }
  }, 1000);

  if (sportQuestionCount == 12) {
    clearInterval(sportTimerId);
    mcqsport.classList.add("d-none");
    document.getElementById("sportScoreEnd").textContent = sportScoreDisplay.textContent;
    fillBlanksport.classList.add("d-none");
    codingsportShow.classList.add("d-none");
    codingResultsport.classList.remove("d-none");

    if (sportScore < 70) {
      sportScoreBelow70.classList.remove("d-none");
      sportScore100.classList.add("d-none");
      sectionCodingsport.classList.add("back15");

      sportResult1.textContent = "Test finished!!";
      sportResult2.textContent = "😓 Oops! Not quite right.";
      sportResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      sportResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      sportIncorrectAnswersDisplay.appendChild(h2);

      for (let z of sportIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        sportIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (sportScore < 100) {
      sportScoreBelow70.classList.remove("d-none");
      sportScore100.classList.add("d-none");
      sectionCodingsport.classList.add("back15");

      sportResult1.textContent = "Test finished!!";
      sportResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      sportResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      sportResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      sportIncorrectAnswersDisplay.appendChild(h2);

      for (let z of sportIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        sportIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (sportScore === 100) {
      document.getElementById("sectionCodingsport").classList.add("back14");
      sportScore100.classList.remove("d-none");
      sportScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqsport.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codingsportQues.innerHTML = formattedQuestion;
    fillBlanksport.classList.add("d-none");
    op1sport.textContent = y.op1;
    op2sport.textContent = y.op2;
    op3sport.textContent = y.op3;
    op4sport.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(sportTimerId);
      sportTime = 30;
      sportSkip.textContent = "Next";
      sportSkip.style.backgroundColor = "#23ebdd";
      sportSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        sportScore += 10;
        sportScoreShow.textContent = "+10";
        sportScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        sportScore -= 5;
        sportScoreShow.textContent = "-5";
        sportScoreShow.style.color = "red";
        sportIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      sportScoreDisplay.textContent = "Score: " + sportScore + "/100";
    }

    op1sport.onclick = () => handleOptionClick(op1sport, [op2sport, op3sport, op4sport]);
    op2sport.onclick = () => handleOptionClick(op2sport, [op1sport, op3sport, op4sport]);
    op3sport.onclick = () => handleOptionClick(op3sport, [op1sport, op2sport, op4sport]);
    op4sport.onclick = () => handleOptionClick(op4sport, [op1sport, op2sport, op3sport]);

    sportSkip.onclick = function () {
      clearInterval(sportTimerId);
      sportTime = 30;
      sportQuestionNumber.textContent = "Question:" + sportQuestionCount + "/10";
      sportQuestionCount++;
      [op1sport, op2sport, op3sport, op4sport].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      sportIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codingsportStart();
    };
  }
  
}

}
function resetCodingsport() {
  document.getElementById("codingsportShow").classList.add("d-none");
  document.getElementById("codingResultsport").classList.add("d-none");
  document.getElementById("codingsportHide").classList.remove("d-none");

  document.getElementById("sportQuestionNumber").innerText = "Question: 1/10";
  document.getElementById("sportScoreDisplay").innerText = "Score: 0/100";
  document.getElementById("sportScoreShow").innerText = "";
  document.getElementById("sportTimer").innerText = "00";
  document.getElementById("codingsportQues").innerText = "";

  document.getElementById("op1sport").innerText = "option1";
  document.getElementById("op2sport").innerText = "option2";
  document.getElementById("op3sport").innerText = "option3";
  document.getElementById("op4sport").innerText = "option4";

  sportIncorrectAnswers = [];
  document.getElementById("sportIncorrectAnswersDisplay").innerHTML = "";

  sportScore100.classList.add("d-none");
  sportScoreBelow70.classList.add("d-none");

  sportResult1.textContent = "";
  sportResult2.textContent = "";
  sportResult3.src = "";
  sportResult4.textContent = "";

  sectionCodingsport.classList.remove("back14");
  sectionCodingsport.classList.remove("back15");

  document.getElementById("sportFillAns").value = "";
  document.getElementById("fillBlanksport").style.display = "none";
  document.getElementById("mcqsport").style.display = "block";

  document.getElementById("sportStatus1").classList.remove("d-none");
  document.getElementById("sportStatus2").classList.add("d-none");
  document.getElementById("sportStatus3").classList.add("d-none");

  if (typeof sportTimerId !== "undefined") {
    clearInterval(sportTimerId);
  }
  sportTime = 20;
  sportQuestionCount = 2;
  sportScore = 0;
}

function sportResetLevel() {
  sportButton1.disabled = false;
  sportButton2.disabled = false;
  sportButton3.disabled = false;
  sportButton.classList.add("d-none");
  sportIncorrectAnswers = [];
}


//  logo 




let codinglogo1Arr= [
  {
    "question": "Can you guess which brand uses this logo?",
    "ques": "https://upload.wikimedia.org/wikipedia/en/thumb/d/d3/Starbucks_Corporation_Logo_2011.svg/640px-Starbucks_Corporation_Logo_2011.svg.png",
    "quesType": "mcq",
    "op1": "Costa Coffee",
    "op2": "Cafe Coffee Day",
    "op3": "Starbucks",
    "op4": "McCafe",
    "ans": "Starbucks"
  },
  {
    "question": "Identify this famous company by its logo:",
    "ques": "https://static.vecteezy.com/system/resources/previews/046/861/647/non_2x/google-logo-transparent-background-free-png.png",
    "quesType": "mcq",
    "op1": "Microsoft",
    "op2": "Google",
    "op3": "Apple",
    "op4": "Meta",
    "ans": "Google"
  },
  {
    "question": "Which brand is represented by this logo?",
    "ques": "https://1000logos.net/wp-content/uploads/2017/02/Apple-Logosu.png",
    "quesType": "mcq",
    "op1": "Microsoft",
    "op2": "Apple",
    "op3": "Google",
    "op4": "Amazon",
    "ans": "Apple"
  },
  {
    "question": "Name the company that owns this logo:",
    "ques": "https://images.seeklogo.com/logo-png/37/1/mcdonalds-logo-png_seeklogo-370359.png",
    "quesType": "mcq",
    "op1": "Burger King",
    "op2": "McDonald's",
    "op3": "Subway",
    "op4": "KFC",
    "ans": "McDonald's"
  },
  {
    "question": "Which fast-food chain does this logo belong to?",
    "ques": "https://seeklogo.com/images/K/kfc-logo-FDCFEC4860-seeklogo.com.png",
    "quesType": "mcq",
    "op1": "KFC",
    "op2": "Domino's",
    "op3": "Pizza Hut",
    "op4": "Subway",
    "ans": "KFC"
  },
  
  // {
  //   "question": "This logo is of which global tech company?",
  //   "ques": "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Amazon_logo.svg/1280px-Amazon_logo.svg.png",
  //   "quesType": "mcq",
  //   "op1": "Amazon",
  //   "op2": "eBay",
  //   "op3": "Alibaba",
  //   "op4": "Flipkart",
  //   "ans": "Amazon"
  // },
  // {
  //   "question": "Spot the brand behind this iconic symbol:",
  //   "ques": "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a6/Logo_NIKE.svg/512px-Logo_NIKE.svg.png",
  //   "quesType": "mcq",
  //   "op1": "Adidas",
  //   "op2": "Nike",
  //   "op3": "Puma",
  //   "op4": "Reebok",
  //   "ans": "Nike"
  // },
  // {
  //   "question": "Which automaker uses this logo?",
  //   "ques": "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6f/Audi_logo_%282019%29.svg/2560px-Audi_logo_%282019%29.svg.png",
  //   "quesType": "mcq",
  //   "op1": "Audi",
  //   "op2": "BMW",
  //   "op3": "Mercedes",
  //   "op4": "Volkswagen",
  //   "ans": "Audi"
  // },
  // {
  //   "question": "Guess the sports brand by its logo:",
  //   "ques": "https://upload.wikimedia.org/wikipedia/commons/thumb/2/20/Adidas_Logo.svg/1024px-Adidas_Logo.svg.png",
  //   "quesType": "mcq",
  //   "op1": "Nike",
  //   "op2": "Puma",
  //   "op3": "Adidas",
  //   "op4": "Under Armour",
  //   "ans": "Adidas"
  // },
  // {
  //   "question": "Whose famous logo is this?",
  //   "ques": "https://upload.wikimedia.org/wikipedia/en/thumb/9/9f/Twitter_bird_logo_2012.svg/800px-Twitter_bird_logo_2012.svg.png",
  //   "quesType": "mcq",
  //   "op1": "Facebook",
  //   "op2": "Instagram",
  //   "op3": "LinkedIn",
  //   "op4": "Twitter",
  //   "ans": "Twitter"
  // }
]






let logoButton = document.getElementById("logoButton");
let logoButton1 = document.getElementById("logoButton1");
let logoButton2 = document.getElementById("logoButton2");
let logoButton3 = document.getElementById("logoButton3");
let logoLevel = 0;
let logoCodingTest = document.getElementById("logoCodingTest");
let logoTimer = document.getElementById("logoTimer");

logoButton1.onclick = function () {
  logoButton2.disabled = true;
  logoButton3.disabled = true;
  logoLevel = 1;

  logoButton.classList.remove("d-none");
  logoButton.classList.add("d-block");
};

logoButton2.onclick = function () {
  logoButton1.disabled = true;
  logoButton3.disabled = true;
  logoLevel = 2;

  logoButton.classList.remove("d-none");
  logoButton.classList.add("d-block");
};

logoButton3.onclick = function () {
  logoButton2.disabled = true;
  logoButton1.disabled = true;
  logoLevel = 3;

  logoButton.classList.remove("d-none");
  logoButton.classList.add("d-block");
};

let logoTime = 0;

let codinglogoShow = document.getElementById("codinglogoShow");
let codinglogoHide = document.getElementById("codinglogoHide");
let codinglogoBack = document.getElementById("codinglogoBack");

codinglogoBack.onclick = function () {
  codinglogoShow.classList.add("d-none");
  codinglogoHide.classList.remove("d-none");
};

let logoIncorrectAnswers = [];

let logoTimerId = "";
let logoSkip = document.getElementById("logoSkip");
let codinglogoQues = document.getElementById("codinglogoQues");
let mcqlogo = document.getElementById("mcqlogo");
let logoQuestionNumber = document.getElementById("logoQuestionNumber");
let logoQuestionCount = 2;
let logoScore = 0;
let logoScoreDisplay = document.getElementById("logoScoreDisplay");
let logoScoreShow = document.getElementById("logoScoreShow");
let logoSkip2 = document.getElementById("logoSkip2");

let logoFillAns = document.getElementById("logoFillAns");
let logoStatus1 = document.getElementById("logoStatus1");
let logoStatus2 = document.getElementById("logoStatus2");
let logoStatus3 = document.getElementById("logoStatus3");
let logoCheckFill = document.getElementById("logoCheckFill");

let codingResultlogo = document.getElementById("codingResultlogo");

let logoIncorrectAnswersDisplay = document.getElementById("logoIncorrectAnswersDisplay");
let logoScoreBelow70 = document.getElementById("logoScoreBelow70");
let logoScore100 = document.getElementById("logoScore100");

let logoResult1 = document.getElementById("logoResult1");
let logoResult2 = document.getElementById("logoResult2");
let logoResult3 = document.getElementById("logoResult3");
let logoResult4 = document.getElementById("logoResult4");
let logoResult5 = document.getElementById("logoResult5");
let logoBg1 = document.getElementById("logoBg1");


function codinglogoStart(){
  codinglogoHide.classList.add("d-none");
codinglogoShow.classList.remove("d-none");

let fillBlanklogo = document.getElementById("fillBlanklogo");
let op1logo = document.getElementById("op1logo");
let op2logo = document.getElementById("op2logo");
let op3logo = document.getElementById("op3logo");
let op4logo = document.getElementById("op4logo");

let logoFillAns = document.getElementById("logoFillAns");
let logoStatus1 = document.getElementById("logoStatus1");
let logoStatus2 = document.getElementById("logoStatus2");
let logoStatus3 = document.getElementById("logoStatus3");
let logoCheckFill = document.getElementById("logoCheckFill");

logoFillAns.disabled = false;
logoStatus1.classList.remove("d-none");
logoStatus2.classList.add("d-none");
logoStatus3.classList.add("d-none");
logoFillAns.value = "";
logoSkip2.textContent = "Skip";
logoSkip2.style.backgroundColor = "orange";
logoSkip2.style.borderColor = "orange";

logoSkip.textContent = "Skip";
logoSkip.style.backgroundColor = "orange";
logoSkip.style.borderColor = "orange";
logoScoreShow.textContent = "";
logoTimer.style.color = "black";

if (logoLevel === 1) {
  let logoRandom = Math.floor(Math.random() * codinglogo1Arr.length);
  let y = codinglogo1Arr[logoRandom];
  logoTimer.textContent = "20";
  logoTime = 20;

  logoTimerId = setInterval(function () {
    logoTime = logoTime - 1;
    if (logoTime == 0) {
      clearInterval(logoTimerId);
      logoQuestionNumber.textContent = "Question:" + logoQuestionCount + "/10";
      logoQuestionCount = logoQuestionCount + 1;
      logoTime = 20;
      codinglogoStart();
    }
    if (logoTime <= 5) {
      logoTimer.style.color = "red";
      logoTimer.textContent = logoTime;
    } else {
      logoTimer.textContent = logoTime;
    }
  }, 1000);

  if (logoQuestionCount == 12) {
    clearInterval(logoTimerId);
    mcqlogo.classList.add("d-none");
    document.getElementById("logoScoreEnd").textContent = logoScoreDisplay.textContent;
    fillBlanklogo.classList.add("d-none");
    codinglogoShow.classList.add("d-none");
    codingResultlogo.classList.remove("d-none");

    if (logoScore < 70) {
      logoScoreBelow70.classList.remove("d-none");
      logoScore100.classList.add("d-none");
      sectionCodinglogo.classList.add("back15");

      logoResult1.textContent = "Test finished!!";
      logoResult2.textContent = "😓 Oops! Not quite right.";
      logoResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      logoResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      logoIncorrectAnswersDisplay.appendChild(h2);

      for (let z of logoIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        logoIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (logoScore < 100) {
      logoScoreBelow70.classList.remove("d-none");
      logoScore100.classList.add("d-none");
      sectionCodinglogo.classList.add("back15");

      logoResult1.textContent = "Test finished!!";
      logoResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      logoResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      logoResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      logoIncorrectAnswersDisplay.appendChild(h2);

      for (let z of logoIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        logoIncorrectAnswersDisplay.appendChild(card);

        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (logoScore === 100) {
      document.getElementById("sectionCodinglogo").classList.add("back14");
      logoScore100.classList.remove("d-none");
      logoScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqlogo.classList.remove("d-none");
    // codinglogoQues.setAttribute("src",y.ques)
    document.getElementById("logoQues").textContent=y.question;
    document.getElementById("codinglogoQues").setAttribute("src", y.ques);


    fillBlanklogo.classList.add("d-none");
    op1logo.textContent = y.op1;
    op2logo.textContent = y.op2;
    op3logo.textContent = y.op3;
    op4logo.textContent = y.op4;

    const allOps = [op1logo, op2logo, op3logo, op4logo];
    allOps.forEach((op, i) => {
      op.onclick = function () {
        allOps.forEach(o => (o.disabled = true));
        clearInterval(logoTimerId);
        logoTime = 20;

        if (op.textContent === y.ans) {
          op.style.backgroundColor = "green";
          logoScore += 10;
          logoScoreShow.textContent = "+10";
          logoScoreShow.style.color = "green";
        } else {
          op.style.backgroundColor = "red";
          logoScore -= 5;
          logoScoreShow.textContent = "-5";
          logoScoreShow.style.color = "red";
          let wrong_answer = { ques: y.ques, correct: y.ans, wrong: op.textContent };
          logoIncorrectAnswers.push(wrong_answer);
        }

        logoScoreDisplay.textContent = "Score: " + logoScore + "/100";

        logoSkip.textContent = "Next";
        logoSkip.style.backgroundColor = "#23ebdd";
        logoSkip.style.borderColor = "#23ebdd";

        logoSkip.onclick = function () {
          logoQuestionNumber.textContent = "Question:" + logoQuestionCount + "/10";
          logoQuestionCount += 1;
          allOps.forEach(o => {
            o.disabled = false;
            o.style.backgroundColor = "white";
          });
          codinglogoStart();
        };
      };
    });

    logoSkip.onclick = function () {
      clearInterval(logoTimerId);
      logoTime = 20;
      logoQuestionNumber.textContent = "Question:" + logoQuestionCount + "/10";
      logoQuestionCount += 1;
      allOps.forEach(o => {
        o.disabled = false;
        o.style.backgroundColor = "white";
      });
      let wrong_answer = { ques: y.ques, correct: y.ans, wrong: "Skipped" };
      logoIncorrectAnswers.push(wrong_answer);
      codinglogoStart();
    };
  } 

}
else if (logoLevel === 2) {
  let logoRandom = Math.floor(Math.random() * codinglogo2Arr.length);
  let y = codinglogo2Arr[logoRandom];
  logoTimer.textContent = "25";
  logoTime = 25;

  logoTimerId = setInterval(function () {
    logoTime = logoTime - 1;
    if (logoTime == 0) {
      clearInterval(logoTimerId);
      logoQuestionNumber.textContent = "Question:" + logoQuestionCount + "/10";
      logoQuestionCount = logoQuestionCount + 1;
      logoTime = 25;
      codinglogoStart();
    }
    if (logoTime <= 5) {
      logoTimer.style.color = "red";
      logoTimer.textContent = logoTime;
    } else {
      logoTimer.textContent = logoTime;
    }
  }, 1000);

  if (logoQuestionCount == 12) {
    clearInterval(logoTimerId);
    mcqlogo.classList.add("d-none");
    document.getElementById("logoScoreEnd").textContent = logoScoreDisplay.textContent;
    fillBlanklogo.classList.add("d-none");
    codinglogoShow.classList.add("d-none");
    codingResultlogo.classList.remove("d-none");

    if (logoScore < 70) {
      logoScoreBelow70.classList.remove("d-none");
      logoScore100.classList.add("d-none");
      sectionCodinglogo.classList.add("back15");

      logoResult1.textContent = "Test finished!!";
      logoResult2.textContent = "😓 Oops! Not quite right.";
      logoResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      logoResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      logoIncorrectAnswersDisplay.appendChild(h2);

      for (let z of logoIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        logoIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (logoScore < 100) {
      logoScoreBelow70.classList.remove("d-none");
      logoScore100.classList.add("d-none");
      sectionCodinglogo.classList.add("back15");

      logoResult1.textContent = "Test finished!!";
      logoResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      logoResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      logoResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      logoIncorrectAnswersDisplay.appendChild(h2);

      for (let z of logoIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        logoIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (logoScore === 100) {
      document.getElementById("sectionCodinglogo").classList.add("back14");
      logoScore100.classList.remove("d-none");
      logoScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqlogo.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinglogoQues.innerHTML = formattedQuestion;
    fillBlanklogo.classList.add("d-none");
    op1logo.textContent = y.op1;
    op2logo.textContent = y.op2;
    op3logo.textContent = y.op3;
    op4logo.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(logoTimerId);
      logoTime = 25;
      logoSkip.textContent = "Next";
      logoSkip.style.backgroundColor = "#23ebdd";
      logoSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        logoScore += 10;
        logoScoreShow.textContent = "+10";
        logoScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        logoScore -= 5;
        logoScoreShow.textContent = "-5";
        logoScoreShow.style.color = "red";
        logoIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      logoScoreDisplay.textContent = "Score: " + logoScore + "/100";
    }

    op1logo.onclick = () => handleOptionClick(op1logo, [op2logo, op3logo, op4logo]);
    op2logo.onclick = () => handleOptionClick(op2logo, [op1logo, op3logo, op4logo]);
    op3logo.onclick = () => handleOptionClick(op3logo, [op1logo, op2logo, op4logo]);
    op4logo.onclick = () => handleOptionClick(op4logo, [op1logo, op2logo, op3logo]);

    logoSkip.onclick = function () {
      clearInterval(logoTimerId);
      logoTime = 25;
      logoQuestionNumber.textContent = "Question:" + logoQuestionCount + "/10";
      logoQuestionCount++;
      [op1logo, op2logo, op3logo, op4logo].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      logoIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codinglogoStart();
    };
  }
}
else if (logoLevel === 3) {
  let logoRandom = Math.floor(Math.random() * codinglogo3Arr.length);
  let y = codinglogo3Arr[logoRandom];
  logoTimer.textContent = "30";
  logoTime = 30;

  logoTimerId = setInterval(function () {
    logoTime = logoTime - 1;
    if (logoTime == 0) {
      clearInterval(logoTimerId);
      logoQuestionNumber.textContent = "Question:" + logoQuestionCount + "/10";
      logoQuestionCount = logoQuestionCount + 1;
      logoTime = 30;
      codinglogoStart();
    }
    if (logoTime <= 5) {
      logoTimer.style.color = "red";
      logoTimer.textContent = logoTime;
    } else {
      logoTimer.textContent = logoTime;
    }
  }, 1000);

  if (logoQuestionCount == 12) {
    clearInterval(logoTimerId);
    mcqlogo.classList.add("d-none");
    document.getElementById("logoScoreEnd").textContent = logoScoreDisplay.textContent;
    fillBlanklogo.classList.add("d-none");
    codinglogoShow.classList.add("d-none");
    codingResultlogo.classList.remove("d-none");

    if (logoScore < 70) {
      logoScoreBelow70.classList.remove("d-none");
      logoScore100.classList.add("d-none");
      sectionCodinglogo.classList.add("back15");

      logoResult1.textContent = "Test finished!!";
      logoResult2.textContent = "😓 Oops! Not quite right.";
      logoResult3.src = "https://static.vecteezy.com/system/resources/previews/055/429/426/non_2x/sad-animated-boy-sitting-with-folded-arms-free-png.png";
      logoResult4.textContent = "Don't worry — try again!";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      logoIncorrectAnswersDisplay.appendChild(h2);

      for (let z of logoIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        logoIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (logoScore < 100) {
      logoScoreBelow70.classList.remove("d-none");
      logoScore100.classList.add("d-none");
      sectionCodinglogo.classList.add("back15");

      logoResult1.textContent = "Test finished!!";
      logoResult2.textContent = "🎉 Hurry! Congratulations! 🎉";
      logoResult3.src = "https://d11a6trkgmumsb.cloudfront.net/original/3X/6/5/65137061474887dfa0f183f2bc118a3e52fc353e.gif";
      logoResult4.textContent = "Keep trying, keep coding — success and good score will come.";

      let h2 = document.createElement("h2");
      h2.textContent = "Incorrect Answers :";
      h2.classList.add("text-center", "incorrect-answer");
      logoIncorrectAnswersDisplay.appendChild(h2);

      for (let z of logoIncorrectAnswers) {
        let card = document.createElement("div");
        card.classList.add("d-flex", "flex-column", "card4", "shadow");
        logoIncorrectAnswersDisplay.appendChild(card);
        let question = document.createElement("h6");
        question.textContent = z.ques;
        card.appendChild(question);

        let wrongDiv = document.createElement("div");
        wrongDiv.classList.add("d-flex", "flex-row");
        card.appendChild(wrongDiv);

        let wrong = document.createElement("p");
        wrongDiv.textContent = "Your Answer : " + z.wrong;
        wrongDiv.appendChild(wrong);

        let wrongTick = document.createElement("i");
        wrongTick.classList.add("fa-solid", "fa-xmark", "ml-2", "mt-1", "tick1");
        wrongDiv.appendChild(wrongTick);

        let correctDiv = document.createElement("div");
        correctDiv.classList.add("d-flex", "flex-row");
        card.appendChild(correctDiv);

        let correct = document.createElement("p");
        correct.textContent = "Correct Answer : " + z.correct;
        correctDiv.appendChild(correct);

        let correctTick = document.createElement("i");
        correctTick.classList.add("fa-solid", "fa-check", "ml-2", "mt-1", "tick2");
        correctDiv.appendChild(correctTick);
      }
    } else if (logoScore === 100) {
      document.getElementById("sectionCodinglogo").classList.add("back14");
      logoScore100.classList.remove("d-none");
      logoScoreBelow70.classList.add("d-none");
    }
  }

  if (y.quesType === "mcq") {
    mcqlogo.classList.remove("d-none");
    let formattedQuestion = y.ques.replace(/\n/g, "<br>");
    codinglogoQues.innerHTML = formattedQuestion;
    fillBlanklogo.classList.add("d-none");
    op1logo.textContent = y.op1;
    op2logo.textContent = y.op2;
    op3logo.textContent = y.op3;
    op4logo.textContent = y.op4;

    function handleOptionClick(opBtn, otherBtns) {
      otherBtns.forEach(btn => btn.disabled = true);
      clearInterval(logoTimerId);
      logoTime = 30;
      logoSkip.textContent = "Next";
      logoSkip.style.backgroundColor = "#23ebdd";
      logoSkip.style.borderColor = "#23ebdd";
      if (opBtn.textContent === y.ans) {
        opBtn.style.backgroundColor = "green";
        logoScore += 10;
        logoScoreShow.textContent = "+10";
        logoScoreShow.style.color = "green";
      } else {
        opBtn.style.backgroundColor = "red";
        logoScore -= 5;
        logoScoreShow.textContent = "-5";
        logoScoreShow.style.color = "red";
        logoIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: opBtn.textContent });
      }
      logoScoreDisplay.textContent = "Score: " + logoScore + "/100";
    }

    op1logo.onclick = () => handleOptionClick(op1logo, [op2logo, op3logo, op4logo]);
    op2logo.onclick = () => handleOptionClick(op2logo, [op1logo, op3logo, op4logo]);
    op3logo.onclick = () => handleOptionClick(op3logo, [op1logo, op2logo, op4logo]);
    op4logo.onclick = () => handleOptionClick(op4logo, [op1logo, op2logo, op3logo]);

    logoSkip.onclick = function () {
      clearInterval(logoTimerId);
      logoTime = 30;
      logoQuestionNumber.textContent = "Question:" + logoQuestionCount + "/10";
      logoQuestionCount++;
      [op1logo, op2logo, op3logo, op4logo].forEach(btn => {
        btn.disabled = false;
        btn.style.backgroundColor = "white";
      });
      logoIncorrectAnswers.push({ ques: y.ques, correct: y.ans, wrong: "Skipped" });
      codinglogoStart();
    };
  }
}

}

function resetCodinglogo() {
  document.getElementById("codinglogoShow").classList.add("d-none");
  document.getElementById("codingResultlogo").classList.add("d-none");
  document.getElementById("codinglogoHide").classList.remove("d-none");

  document.getElementById("logoQuestionNumber").innerText = "Question: 1/10";
  document.getElementById("logoScoreDisplay").innerText = "Score: 0/100";
  document.getElementById("logoScoreShow").innerText = "";
  document.getElementById("logoTimer").innerText = "00";
  document.getElementById("codinglogoQues").innerText = "";

  document.getElementById("op1logo").innerText = "option1";
  document.getElementById("op2logo").innerText = "option2";
  document.getElementById("op3logo").innerText = "option3";
  document.getElementById("op4logo").innerText = "option4";

  logoIncorrectAnswers = [];
  document.getElementById("logoIncorrectAnswersDisplay").innerHTML = "";

  logoScore100.classList.add("d-none");
  logoScoreBelow70.classList.add("d-none");

  logoResult1.textContent = "";
  logoResult2.textContent = "";
  logoResult3.src = "";
  logoResult4.textContent = "";

  sectionCodinglogo.classList.remove("back14");
  sectionCodinglogo.classList.remove("back15");

  document.getElementById("logoFillAns").value = "";
  document.getElementById("fillBlanklogo").style.display = "none";
  document.getElementById("mcqlogo").style.display = "block";

  document.getElementById("logoStatus1").classList.remove("d-none");
  document.getElementById("logoStatus2").classList.add("d-none");
  document.getElementById("logoStatus3").classList.add("d-none");

  if (typeof logoTimerId !== "undefined") {
    clearInterval(logoTimerId);
  }
  logoTime = 20;
  logoQuestionCount = 2;
  logoScore = 0;
}

function logoResetLevel() {
  logoButton1.disabled = false;
  logoButton2.disabled = false;
  logoButton3.disabled = false;
  logoButton.classList.add("d-none");
  logoIncorrectAnswers = [];
}





















